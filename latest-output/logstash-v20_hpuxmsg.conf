# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "hpux"
			"[observer][name]" => "HP_UX / FreeBSD"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0111
	# line in RSA: <hmonth> <hday> <htime> <messageid> MARK -- <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+MARK[\s]+\-\-[\s]+(?<payload>.*))$" }
			id => "header-0111"
			add_field => {
				"[rsa][header][id]" => "0111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0112
	# line in RSA: <month> <day> <time> <hfld1>: <msgIdPart1> <msgIdPart2> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<hfld1>[^:]*):[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0112"
			add_field => {
				"[rsa][header][id]" => "0112"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0113
	# line in RSA: <hmonth> <hday> <htime> /usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/<messageid>[<hdata>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+/usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/(?<message>(?<messageid>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0113"
			add_field => {
				"[rsa][header][id]" => "0113"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1111
	# line in RSA: <month> <day> <time> { ./ | /usr/local/bin/ | /usr/bin/ } <messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+([\s]*\./[\s]+|[\s]*/usr/local/bin/[\s]+|[\s]*/usr/bin/[\s]+)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1111"
			add_field => {
				"[rsa][header][id]" => "1111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <month> <day> <time> { ./ | /usr/local/bin/ | /usr/bin/ } <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+([\s]*\./[\s]+|[\s]*/usr/local/bin/[\s]+|[\s]*/usr/bin/[\s]+)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <month> <day> <time> <messageid> LOGIN: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+LOGIN:[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <month> <day> <time> <messageid> sudo: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+sudo:[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <month> <day> <time> <messageid> su : <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+su[\s]+:[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0055
	# line in RSA: <month> <day> <time> <husername>: <hfld1>,<hfld2>, PWD: <hfld3>, <messageid>: "<hfld4> <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<hfld1>[^,]*),(?<hfld2>[^,]*),[\s]+PWD:[\s]+(?<hfld3>[^,]*),[\s]+(?<messageid>[^:]*):[\s]+\"(?<hfld4>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0055"
			add_field => {
				"[rsa][header][id]" => "0055"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <month> <day> <time> <messageid>:<data>[<hdata>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):(?<data>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0056
	# line in RSA: <month> <day> <time> <messageid>(<data>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\(]*)\((?<data>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0056"
			add_field => {
				"[rsa][header][id]" => "0056"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <month> <day> <time> <messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <month> <day> <time> <messageid>:  <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <month> <day> <time> <messageid>  <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0088
	# line in RSA: <month> <day> <time> [<hfld1>]: <messageid>: <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[(?<message>(?<hfld1>[^\]]*)\]:[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0088"
			add_field => {
				"[rsa][header][id]" => "0088"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0099
	# line in RSA: <month> <day> <time> <hostname> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0099"
			add_field => {
				"[rsa][header][id]" => "0099"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0098
	# line in RSA: <month> <day> <time> <hostname> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0098"
			add_field => {
				"[rsa][header][id]" => "0098"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_hpuxmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  -- MARK -- 
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "-- MARK --" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId1" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "@BINDIR@/ssh" {
		# MESSAGE 00687
		# line in RSA:  <agent>[<process_id>]: error <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error %{event_description}" }
				id => "message-00687"
				add_field => {
					"[event][id]" => "00687"
					"[rsa][message][id1]" => "00687"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00687:01
		# line in RSA:  <agent>[<process_id>]: info Authentication successful.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: info Authentication successful." }
				id => "message-00687:01"
				add_field => {
				"event_description" => "Authentication successful"
					"[event][id]" => "00687:01"
					"[rsa][message][id1]" => "00687:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00687:02
		# line in RSA:  <agent>[<process_id>]: info host key for <username>,<saddr>, accepted by root <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: info host key for %{username},%{saddr}, accepted by root %{event_time_string}" }
				id => "message-00687:02"
				add_field => {
				"event_description" => "host key for user accepted by root"
					"[event][id]" => "00687:02"
					"[rsa][message][id1]" => "00687:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00687:03
		# line in RSA:  <agent>[<process_id>]: info Host key saved to <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: info Host key saved to %{filename}" }
				id => "message-00687:03"
				add_field => {
				"event_description" => "Host key saved to file"
					"[event][id]" => "00687:03"
					"[rsa][message][id1]" => "00687:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA: <agent>: <username>: <space> TTY=<interface> { : | ; } PWD=<directory> { : | ; } USER=<c_username> { : | ; } COMMAND=<action>
	else if [logstash][msgparser][id] == "msgParserId6" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<c_username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>.*)$" }
			id => "msgParserId6"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/sbin/collect" {
		# MESSAGE 00210
		# line in RSA: <agent>[<process_id>]: started by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: started by %{username}" }
				id => "message-00210"
				add_field => {
					"[event][id]" => "00210"
					"[rsa][message][id1]" => "00210"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00210:01
		# line in RSA: <agent>[<process_id>]: { exiting: | exiting } <action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*exiting:[\s]+|[\s]*exiting[\s]+)[\s]+(?<action>[^\s]*)[\s]+$" }
				id => "message-00210:01"
				add_field => {
					"[event][id]" => "00210:01"
					"[rsa][message][id1]" => "00210:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00210:02
		# line in RSA: <agent>[<process_id>]: received <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: received %{action}" }
				id => "message-00210:02"
				add_field => {
					"[event][id]" => "00210:02"
					"[rsa][message][id1]" => "00210:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
			id => "msgParserId10"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId11"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <agent>[<process_id>]: { user <username>: | exit }  <action>  
	else if [logstash][msgparser][id] == "msgParserId12" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*user[\s]+(?<username>[^:]*):[\s]+|[\s]*exit[\s]+)[\s]+(?<action>[^\s]*)[\s]+$" }
			id => "msgParserId12"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == ":" {
		# MESSAGE 00006:01
		# line in RSA:  : sudo: <username> { : | ; } <result> { : | ; } TTY=<interface> { : | ; } PWD=<directory> { : | ; } USER=<c_username> { : | ; }  COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*:[\s]+sudo:[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+(?<result>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<interface>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<c_username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00006:01"
				add_field => {
				"event_description" => "sudo command by user"
				"agent" => "sudo"
					"[event][id]" => "00006:01"
					"[rsa][message][id1]" => "00006:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:02
		# line in RSA:  : sudo: <username> { : | ; } <interface> { : | ; } PWD=<directory> { : | ; } USER=<c_username> { : | ; } COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*:[\s]+sudo:[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+(?<interface>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<c_username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00006:02"
				add_field => {
				"event_description" => "sudo command by user"
				"agent" => "sudo"
					"[event][id]" => "00006:02"
					"[rsa][message][id1]" => "00006:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:03
		# line in RSA:  : su : - <terminal> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": su : - %{terminal} %{username}-%{c_username}" }
				id => "message-00006:03"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "failed su by user"
				"agent" => "su"
					"[event][id]" => "00006:03"
					"[rsa][message][id1]" => "00006:03"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:04
		# line in RSA:  : su : + <terminal> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": su : + %{terminal} %{username}-%{c_username}" }
				id => "message-00006:04"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
				"agent" => "su"
					"[event][id]" => "00006:04"
					"[rsa][message][id1]" => "00006:04"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:06
		# line in RSA:  : pam_acct_mgmt: error <result> - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": pam_acct_mgmt: error %{result} - %{info}" }
				id => "message-00006:06"
				add_field => {
				"event_description" => "pam error"
				"agent" => "pam_acct_mgmt"
					"[event][id]" => "00006:06"
					"[rsa][message][id1]" => "00006:06"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:08
		# line in RSA: : pam_acct_mgmt: error <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": pam_acct_mgmt: error %{result}" }
				id => "message-00006:08"
				add_field => {
				"event_description" => "pam error"
				"agent" => "pam_acct_mgmt"
					"[event][id]" => "00006:08"
					"[rsa][message][id1]" => "00006:08"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:07
		# line in RSA:  : pam_authenticate: error <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": pam_authenticate: error %{result}" }
				id => "message-00006:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"event_description" => "pam authenticate error"
				"agent" => "pam_authenticate"
					"[event][id]" => "00006:07"
					"[rsa][message][id1]" => "00006:07"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:09
		# line in RSA: : pam_authenticate: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": pam_authenticate: %{result}" }
				id => "message-00006:09"
				add_field => {
				"event_description" => "pam authenticate"
				"agent" => "pam_authenticate"
					"[event][id]" => "00006:09"
					"[rsa][message][id1]" => "00006:09"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:05
		# line in RSA: : LOGIN: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": LOGIN: %{result}" }
				id => "message-00006:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "LOGIN"
				"agent" => "LOGIN"
					"[event][id]" => "00006:05"
					"[rsa][message][id1]" => "00006:05"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:10
		# line in RSA: : pam_chauthtok: error <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": pam_chauthtok: error %{result}" }
				id => "message-00006:10"
				add_field => {
				"event_description" => "pam error"
				"agent" => "pam_chauthtok"
					"[event][id]" => "00006:10"
					"[rsa][message][id1]" => "00006:10"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:11
		# line in RSA:  : [Authentication failed] <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": [Authentication failed] %{result}" }
				id => "message-00006:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failure"
					"[event][id]" => "00006:11"
					"[rsa][message][id1]" => "00006:11"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:12
		# line in RSA:  : Pam Creds are not available
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ": Pam Creds are not available" }
				id => "message-00006:12"
				add_field => {
				"event_description" => "Pam Creds are not available"
					"[event][id]" => "00006:12"
					"[rsa][message][id1]" => "00006:12"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId25"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA: above message repeats <dclass_counter1> times
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "above message repeats %{dclass_counter1} times" }
			id => "msgParserId26"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "acbj003.sh" {
		# MESSAGE 00575
		# line in RSA: <agent>[<process_id>]: Incoming Cash Interface Processing {started | passed authorization | main processing started | main processing completed | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Cash[\s]+Interface[\s]+Processing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
				id => "message-00575"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00575"
					"[rsa][message][id1]" => "00575"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00575:01
		# line in RSA:  <agent>[<process_id>]: Incoming Cash Interface Processing custom local pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Cash[\s]+Interface[\s]+Processing[\s]+custom[\s]+local[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00575:01"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00575:01"
					"[rsa][message][id1]" => "00575:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00575:02
		# line in RSA:  <agent>[<process_id>]: Incoming Cash Interface Processing standard pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Cash[\s]+Interface[\s]+Processing[\s]+standard[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00575:02"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00575:02"
					"[rsa][message][id1]" => "00575:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00575:03
		# line in RSA:  <agent>[<process_id>]: Incoming Cash Interface Processing standard post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Cash[\s]+Interface[\s]+Processing[\s]+standard[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00575:03"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00575:03"
					"[rsa][message][id1]" => "00575:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00575:04
		# line in RSA:  <agent>[<process_id>]: Incoming Cash Interface Processing custom local post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Cash[\s]+Interface[\s]+Processing[\s]+custom[\s]+local[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00575:04"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00575:04"
					"[rsa][message][id1]" => "00575:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "acbj004.sh" {
		# MESSAGE 00582
		# line in RSA:  <agent>[<process_id>]: Incoming Guaranty Processing {started | passed authorization | main processing started | main processing completed | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Guaranty[\s]+Processing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
				id => "message-00582"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00582"
					"[rsa][message][id1]" => "00582"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00582:01
		# line in RSA:  <agent>[<process_id>]: Incoming Guaranty Processing standard post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Guaranty[\s]+Processing[\s]+standard[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00582:01"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00582:01"
					"[rsa][message][id1]" => "00582:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00582:02
		# line in RSA:  <agent>[<process_id>]: Incoming Guaranty Processing custom local post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Guaranty[\s]+Processing[\s]+custom[\s]+local[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00582:02"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00582:02"
					"[rsa][message][id1]" => "00582:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00582:03
		# line in RSA:  <agent>[<process_id>]: Incoming Guaranty Processing custom local pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Guaranty[\s]+Processing[\s]+custom[\s]+local[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00582:03"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00582:03"
					"[rsa][message][id1]" => "00582:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00582:04
		# line in RSA:  <agent>[<process_id>]: Incoming Guaranty Processing standard pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Incoming[\s]+Guaranty[\s]+Processing[\s]+standard[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00582:04"
				add_field => {
				"event_description" => "Incoming Cash Interface Processing"
					"[event][id]" => "00582:04"
					"[rsa][message][id1]" => "00582:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Network Timeout - - <result>
	else if [logstash][msgparser][id] == "msgParserId38" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Network[\s]+Timeout[\s]+\-[\s]+\-[\s]+(?<result>.*)$" }
			id => "msgParserId38"
			add_field => {
				"event_description" => "Network Timeout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA:  <agent>[<process_id>]: acurcl started
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: acurcl started" }
			id => "msgParserId39"
			add_field => {
				"event_description" => "acurcl started"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adclient" {
		# MESSAGE 00422
		# line in RSA: <agent>[<process_id>]: { ERROR | INFO | WARN } <<bg:bindingRefresh> <event_description>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*ERROR[\s]+|[\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+<bg:bindingRefresh>[\s]+(?<event_description>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-00422"
				add_field => {
					"[event][id]" => "00422"
					"[rsa][message][id1]" => "00422"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00422:01
		# line in RSA: <agent>[<process_id>]: { ERROR | INFO | WARN } <<<fld10>><result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*ERROR[\s]+|[\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+<(?<fld10>[^>]*)>(?<result>.*)$" }
				id => "message-00422:01"
				add_field => {
					"[event][id]" => "00422:01"
					"[rsa][message][id1]" => "00422:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA:  <agent>[<process_id>]: :<action>  -m { -u "<uid>" -c "<user_fullname>" -d "<directory>" -s "<application>" | -c "<user_fullname>" } "<username>": <param>
	else if [logstash][msgparser][id] == "msgParserId43" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+:(?<action>[^\s]*)[\s]+\-m[\s]+([\s]*\-u[\s]+\"(?<uid>[^\"]*)\"[\s]+\-c[\s]+\"(?<user_fullname>[^\"]*)\"[\s]+\-d[\s]+\"(?<directory>[^\"]*)\"[\s]+\-s[\s]+\"(?<application>[^\"]*)\"[\s]+|[\s]*\-c[\s]+\"(?<user_fullname>[^\"]*)\"[\s]+)[\s]+\"(?<username>[^\"]*)\":[\s]+(?<param>.*)$" }
			id => "msgParserId43"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"event_description" => "add user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:  <agent>[<process_id>]: :<action> -G "<group>" "<username>": <param>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: :%{action} -G \"%{group}\" \"%{username}\": %{param}" }
			id => "msgParserId44"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "add user to group"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adinfo" {
		# MESSAGE 00423
		# line in RSA: <agent>[<process_id>]: { INFO | WARN } <event_description>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<event_description>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-00423"
				add_field => {
					"[event][id]" => "00423"
					"[rsa][message][id1]" => "00423"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01097
		# line in RSA: <agent>[<process_id>]: { INFO | WARN } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-01097"
				add_field => {
					"[event][id]" => "01097"
					"[rsa][message][id1]" => "01097"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "adjoin" {
		# MESSAGE 00795
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } WARN  base.adsettime Detected local NTPD process. <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+WARN[\s]+base\.adsettime[\s]+Detected[\s]+local[\s]+NTPD[\s]+process\.[\s]+(?<info>.*)$" }
				id => "message-00795"
				add_field => {
				"event_description" => "base.adsettime Detected local NTPD process"
				"severity" => "WARN"
					"[event][id]" => "00795"
					"[rsa][message][id1]" => "00795"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00795:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } INFO <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+INFO[\s]+(?<event_description>.*)$" }
				id => "message-00795:01"
				add_field => {
				"severity" => "INFO"
					"[event][id]" => "00795:01"
					"[rsa][message][id1]" => "00795:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } { INFO | WARN } <event_description>
	else if [logstash][msgparser][id] == "msgParserId49" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId49"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } ERROR <event_description>
	else if [logstash][msgparser][id] == "msgParserId50" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+ERROR[\s]+(?<event_description>.*)$" }
			id => "msgParserId50"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "amqcrsta" {
		# MESSAGE 00676
		# line in RSA: <agent>[<process_id>]: connect from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{saddr}" }
				id => "message-00676"
				add_field => {
				"event_description" => "connect"
					"[event][id]" => "00676"
					"[rsa][message][id1]" => "00676"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00669
		# line in RSA: <agent>[<process_id>]: { warning: <event_description>: <result> | <event_description> from <username> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*warning:[\s]+(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+from[\s]+(?<username>[^\s]*)[\s]+)$" }
				id => "message-00669"
				add_field => {
					"[event][id]" => "00669"
					"[rsa][message][id1]" => "00669"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "asamrcvr" {
		# MESSAGE 00723
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <username>'s password has been reset.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<username>[^']*)'s[\s]+password[\s]+has[\s]+been[\s]+reset\.$" }
				id => "message-00723"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_description" => "user's password reset"
					"[event][id]" => "00723"
					"[rsa][message][id1]" => "00723"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> An event was received for object <obj_name>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+An[\s]+event[\s]+was[\s]+received[\s]+for[\s]+object[\s]+(?<obj_name>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:01"
				add_field => {
				"event_description" => "An event was received for object"
					"[event][id]" => "00723:01"
					"[rsa][message][id1]" => "00723:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Connection established with host <shost> port <sport> version <version> build level <resultcode>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Connection[\s]+established[\s]+with[\s]+host[\s]+(?<shost>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+version[\s]+(?<version>[^\s]*)[\s]+build[\s]+level[\s]+(?<resultcode>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:02"
				add_field => {
				"event_description" => "Connection established with host"
					"[event][id]" => "00723:02"
					"[rsa][message][id1]" => "00723:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:03
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Add User to Group on Platform <node>: eUser <username>, eUser Platform Association <user_address>, eGroup <group>, eGroup Platform Association <group_object>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Add[\s]+User[\s]+to[\s]+Group[\s]+on[\s]+Platform[\s]+(?<node>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+eUser[\s]+Platform[\s]+Association[\s]+(?<user_address>[^,]*),[\s]+eGroup[\s]+(?<group>[^,]*),[\s]+eGroup[\s]+Platform[\s]+Association[\s]+(?<group_object>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:03"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Add User to Group on Platform"
					"[event][id]" => "00723:03"
					"[rsa][message][id1]" => "00723:03"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:04
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Add User on Platform <node>: eUser <username>, UID <uid>, Platform Association <user_address>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Add[\s]+User[\s]+on[\s]+Platform[\s]+(?<node>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+UID[\s]+(?<uid>[^,]*),[\s]+Platform[\s]+Association[\s]+(?<user_address>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"event_description" => "Add User on Platform"
					"[event][id]" => "00723:04"
					"[rsa][message][id1]" => "00723:04"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:05
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Add User failed on Platform <node>: eUser <username>, UID <uid>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Add[\s]+User[\s]+failed[\s]+on[\s]+Platform[\s]+(?<node>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+UID[\s]+(?<uid>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "Add User failed on Platform"
					"[event][id]" => "00723:05"
					"[rsa][message][id1]" => "00723:05"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:06
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Modify User on Platform <node>: eUser <username>, UID <uid>, Platform Association <user_address>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Modify[\s]+User[\s]+on[\s]+Platform[\s]+(?<node>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+UID[\s]+(?<uid>[^,]*),[\s]+Platform[\s]+Association[\s]+(?<user_address>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"event_description" => "Modify User on Platform"
					"[event][id]" => "00723:06"
					"[rsa][message][id1]" => "00723:06"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:07
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Modify User failed on Platform <node>: eUser <username>, UID <uid>, Platform Association <user_address>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Modify[\s]+User[\s]+failed[\s]+on[\s]+Platform[\s]+(?<node>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+UID[\s]+(?<uid>[^,]*),[\s]+Platform[\s]+Association[\s]+(?<user_address>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "Modify User failed on Platform"
					"[event][id]" => "00723:07"
					"[rsa][message][id1]" => "00723:07"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:08
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> Disable User on Platform <node>: eUser <username>, Platform Association <user_address>. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+Disable[\s]+User[\s]+on[\s]+Platform[\s]+(?<node>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+Platform[\s]+Association[\s]+(?<user_address>[^\.]*)\.[\s]+(?<result>.*)$" }
				id => "message-00723:08"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"event_description" => "Disable User on Platform"
					"[event][id]" => "00723:08"
					"[rsa][message][id1]" => "00723:08"
					"[event][categoryid]" => "1402020400"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00723:09
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00723:09"
				add_field => {
					"[event][id]" => "00723:09"
					"[rsa][message][id1]" => "00723:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Audit" {
		# MESSAGE 00377
		# line in RSA:  <agent>: <username> Locked - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} Locked - %{result}" }
				id => "message-00377"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_outcome" => "Success"
				"event_description" => "user locked"
					"[event][id]" => "00377"
					"[rsa][message][id1]" => "00377"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00377:01
		# line in RSA:  <agent>: <username> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} - %{result}" }
				id => "message-00377:01"
				add_field => {
					"[event][id]" => "00377:01"
					"[rsa][message][id1]" => "00377:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA:  auto request sense failed (reason=<result>)
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "auto request sense failed (reason=%{result})" }
			id => "msgParserId64"
			add_field => {
				"event_description" => "auto request sense failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA:  <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId65"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "backup_cvcprod.ksh" {
		# MESSAGE 00777
		# line in RSA:  <agent>[<process_id>]: Starting. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Starting." }
				id => "message-00777"
				add_field => {
					"[event][id]" => "00777"
					"[rsa][message][id1]" => "00777"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00777:01
		# line in RSA: <agent>[<process_id>]: Copy to primary storage complete. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Copy to primary storage complete." }
				id => "message-00777:01"
				add_field => {
					"[event][id]" => "00777:01"
					"[rsa][message][id1]" => "00777:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA: <agent>[<process_id>]: <username> <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{username} %{interface} %{info}" }
			id => "msgParserId68"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "bad login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA: <agent>[<process_id>]: connect from <saddr>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{saddr}" }
			id => "msgParserId51"
			add_field => {
				"event_description" => "connect"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <agent>: NOTICE:<interface>: <event_description> (<saddr>:<sport>): <result>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{agent}: NOTICE:%{interface}: %{event_description} (%{saddr}:%{sport}): %{result}" }
			id => "msgParserId69"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: <agent>: AUDIT -- Action <info> User: <username>
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{agent}: AUDIT -- Action %{info} User: %{username}" }
			id => "msgParserId70"
			add_field => {
				"event_description" => "AUDIT"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "borgd" {
		# MESSAGE 00710
		# line in RSA: <agent>[<process_id>]: Daemon iniitialized with service [<service>] waittime [<fld1>] mapfile [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Daemon iniitialized with service [%{service}] waittime [%{fld1}] mapfile [%{filename}]" }
				id => "message-00710"
				add_field => {
				"event_description" => " Daemon initialized"
					"[event][id]" => "00710"
					"[rsa][message][id1]" => "00710"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00710:01
		# line in RSA: <agent>[<fld1>]: passivesock: can't bind to [<service>] socket errno = <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: passivesock: can't bind to [%{service}] socket errno = %{resultcode}" }
				id => "message-00710:01"
				add_field => {
				"event_description" => " can't bind to socket"
					"[event][id]" => "00710:01"
					"[rsa][message][id1]" => "00710:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00710:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00710:02"
				add_field => {
					"[event][id]" => "00710:02"
					"[rsa][message][id1]" => "00710:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "bsd-gw" {
		# MESSAGE 00767
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Invalid protocol request (<resultcode>): <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Invalid[\s]+protocol[\s]+request[\s]+\((?<resultcode>[^\)]*)\):[\s]+(?<device>.*)$" }
				id => "message-00767"
				add_field => {
				"event_description" => "Invalid protocol request"
					"[event][id]" => "00767"
					"[rsa][message][id1]" => "00767"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00767:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00767:01"
				add_field => {
					"[event][id]" => "00767:01"
					"[rsa][message][id1]" => "00767:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA:  <agent>[<process_id>]: User <c_username> (<user_fullname>) { attempting log | logged } in as <username>
	else if [logstash][msgparser][id] == "msgParserId74" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+User[\s]+(?<c_username>[^\s]*)[\s]+\((?<user_fullname>[^\)]*)\)[\s]+([\s]*attempting[\s]+log[\s]+|[\s]*logged[\s]+)[\s]+in[\s]+as[\s]+(?<username>.*)$" }
			id => "msgParserId74"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "successful user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId75
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } sysedge: <event_description>
	else if [logstash][msgparser][id] == "msgParserId75" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+sysedge:[\s]+(?<event_description>.*)$" }
			id => "msgParserId75"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cabd" {
		# MESSAGE 00400
		# line in RSA: <agent>[<process_id>]: Connection established successfully with the <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection established successfully with the %{interface}" }
				id => "message-00400"
				add_field => {
				"event_description" => "Connection established"
					"[event][id]" => "00400"
					"[rsa][message][id1]" => "00400"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00400:01
		# line in RSA: <agent>[<process_id>]: Connection to <interface> is lost. Trying to connect...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection to %{interface} is lost. Trying to connect..." }
				id => "message-00400:01"
				add_field => {
				"event_description" => "Connection is lost"
					"[event][id]" => "00400:01"
					"[rsa][message][id1]" => "00400:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cd_sinal" {
		# MESSAGE 00778
		# line in RSA:  <agent>: Stopping Lawson (cvcdev) on dpcvcdev 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Stopping Lawson (cvcdev) on dpcvcdev" }
				id => "message-00778"
				add_field => {
					"[event][id]" => "00778"
					"[rsa][message][id1]" => "00778"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00778:01
		# line in RSA:  <agent>: Starting Lawson (cvcdev) on dpcvcdev 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Starting Lawson (cvcdev) on dpcvcdev" }
				id => "message-00778:01"
				add_field => {
					"[event][id]" => "00778:01"
					"[rsa][message][id1]" => "00778:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cdcwatch" {
		# MESSAGE 00425
		# line in RSA:  <agent>[<process_id>]: ERROR <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ERROR %{result}" }
				id => "message-00425"
				add_field => {
				"event_description" => "cdcwatch error"
					"[event][id]" => "00425"
					"[rsa][message][id1]" => "00425"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00425:01
		# line in RSA:  <agent>[<process_id>]: INFO  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO  %{info}" }
				id => "message-00425:01"
				add_field => {
				"event_description" => "cdcwatch info"
					"[event][id]" => "00425:01"
					"[rsa][message][id1]" => "00425:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cfservd" {
		# MESSAGE 00789
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Couldn't stat filename <filename> (<info>) from host <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Couldn't[\s]+stat[\s]+filename[\s]+(?<filename>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+from[\s]+host[\s]+(?<hostname>.*)$" }
				id => "message-00789"
				add_field => {
				"event_description" => "Couldn't stat filename"
					"[event][id]" => "00789"
					"[rsa][message][id1]" => "00789"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00789:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00789:01"
				add_field => {
					"[event][id]" => "00789:01"
					"[rsa][message][id1]" => "00789:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA:  <agent>[<process_id>]:<event_description>
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:%{event_description}" }
			id => "msgParserId83"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA:  <agent>[<process_id>]: Indication (<info>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Indication (%{info}): %{event_description}" }
			id => "msgParserId84"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cimservera" {
		# MESSAGE 00772
		# line in RSA: <agent>[<process_id>]: <severity> pam Authentication for user '<username>': <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} pam Authentication for user '%{username}': %{result}" }
				id => "message-00772"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "authentication"
					"[event][id]" => "00772"
					"[rsa][message][id1]" => "00772"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00772:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00772:01"
				add_field => {
					"[event][id]" => "00772:01"
					"[rsa][message][id1]" => "00772:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CM-jamaica" {
		# MESSAGE 00711
		# line in RSA: <agent>[<fld1>]: cmhaltserv <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: cmhaltserv %{service}" }
				id => "message-00711"
				add_field => {
					"[event][id]" => "00711"
					"[rsa][message][id1]" => "00711"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00712
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00712"
				add_field => {
					"[event][id]" => "00712"
					"[rsa][message][id1]" => "00712"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA:  <username>: <terminal>, <shost>, PWD: <info>, CMD: { "<action>" | "<action> } 
	else if [logstash][msgparser][id] == "msgParserId87" {
		grok {
			match => { "message" => "^[\s]*(?<username>[^:]*):[\s]+(?<terminal>[^,]*),[\s]+(?<shost>[^,]*),[\s]+PWD:[\s]+(?<info>[^,]*),[\s]+CMD:[\s]+([\s]*\"(?<action>[^\"]*)\"[\s]+|[\s]*\"(?<action>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId87"
			add_field => {
				"event_description" => "user command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cmdisklockd" {
		# MESSAGE 01144
		# line in RSA:  <agent>[<process_id>]: cmdisklockd started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: cmdisklockd started" }
				id => "message-01144"
				add_field => {
				"event_description" => "cmdisklockd started"
					"[event][id]" => "01144"
					"[rsa][message][id1]" => "01144"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01145
		# line in RSA:  <agent>[<process_id>]: Changed to working directory <directory>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Changed to working directory %{directory}." }
				id => "message-01145"
				add_field => {
				"event_description" => "Changed to working directory"
					"[event][id]" => "01145"
					"[rsa][message][id1]" => "01145"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01148
		# line in RSA:  <agent>[<process_id>]: Cluster lock disk <device> is accessible
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Cluster lock disk %{device} is accessible" }
				id => "message-01148"
				add_field => {
				"event_description" => "Cluster lock disk is accessible"
					"[event][id]" => "01148"
					"[rsa][message][id1]" => "01148"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01149
		# line in RSA:  <agent>[<process_id>]: Obtaining cluster lock device <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Obtaining cluster lock device %{device}" }
				id => "message-01149"
				add_field => {
				"event_description" => "Obtaining cluster lock device"
					"[event][id]" => "01149"
					"[rsa][message][id1]" => "01149"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01150
		# line in RSA:  <agent>[<process_id>]: Successfully obtained the lock at <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Successfully obtained the lock at %{device}" }
				id => "message-01150"
				add_field => {
				"event_description" => "Successfully obtained the lock"
					"[event][id]" => "01150"
					"[rsa][message][id1]" => "01150"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01151
		# line in RSA:  <agent>[<process_id>]: Clearing cluster lock device <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Clearing cluster lock device %{device}" }
				id => "message-01151"
				add_field => {
				"event_description" => "Clearing cluster lock"
					"[event][id]" => "01151"
					"[rsa][message][id1]" => "01151"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01152
		# line in RSA:  <agent>[<process_id>]: Cluster lock clear completed for <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Cluster lock clear completed for %{device}" }
				id => "message-01152"
				add_field => {
				"event_description" => "Cluster lock clear completed"
					"[event][id]" => "01152"
					"[rsa][message][id1]" => "01152"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01152:01
		# line in RSA:  <agent>[<process_id>]: Still trying to inquire cluster lock disk <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Still trying to inquire cluster lock disk %{device}" }
				id => "message-01152:01"
				add_field => {
				"event_description" => "Still trying to inquire cluster lock disk"
					"[event][id]" => "01152:01"
					"[rsa][message][id1]" => "01152:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cmgmsd" {
		# MESSAGE 00366
		# line in RSA:   <agent>[<process_id>]: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{info}" }
				id => "message-00366"
				add_field => {
					"[event][id]" => "00366"
					"[rsa][message][id1]" => "00366"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00366:01
		# line in RSA:   <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00366:01"
				add_field => {
					"[event][id]" => "00366:01"
					"[rsa][message][id1]" => "00366:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cmlockd" {
		# MESSAGE 01146
		# line in RSA:  <agent>[<process_id>]: Changed to working directory <directory>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Changed to working directory %{directory}." }
				id => "message-01146"
				add_field => {
				"event_description" => "Changed to working directory"
					"[event][id]" => "01146"
					"[rsa][message][id1]" => "01146"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01147
		# line in RSA:   <agent>[<process_id>]: Executing command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Executing command: %{action}" }
				id => "message-01147"
				add_field => {
				"event_description" => "Executing command"
					"[event][id]" => "01147"
					"[rsa][message][id1]" => "01147"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01147:01
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01147:01"
				add_field => {
					"[event][id]" => "01147:01"
					"[rsa][message][id1]" => "01147:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cmproxyd" {
		# MESSAGE 00696:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Permission denied to <hostip>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Permission[\s]+denied[\s]+to[\s]+(?<hostip>.*)$" }
				id => "message-00696:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"event_description" => "Permission denied to host"
					"[event][id]" => "00696:02"
					"[rsa][message][id1]" => "00696:02"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00696
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Executing command: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Executing[\s]+command:[\s]+(?<action>.*)$" }
				id => "message-00696"
				add_field => {
				"event_description" => "Executing command"
					"[event][id]" => "00696"
					"[rsa][message][id1]" => "00696"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00696:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00696:01"
				add_field => {
					"[event][id]" => "00696:01"
					"[rsa][message][id1]" => "00696:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cmresourced" {
		# MESSAGE 00697
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Executing command: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Executing[\s]+command:[\s]+(?<action>.*)$" }
				id => "message-00697"
				add_field => {
				"event_description" => "Executing command"
					"[event][id]" => "00697"
					"[rsa][message][id1]" => "00697"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00697:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00697:01"
				add_field => {
					"[event][id]" => "00697:01"
					"[rsa][message][id1]" => "00697:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cmwbemd" {
		# MESSAGE 00698:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Permission denied to <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Permission[\s]+denied[\s]+to[\s]+(?<saddr>.*)$" }
				id => "message-00698:01"
				add_field => {
				"event_description" => "Permission Denied"
					"[event][id]" => "00698:01"
					"[rsa][message][id1]" => "00698:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00698
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00698"
				add_field => {
					"[event][id]" => "00698"
					"[rsa][message][id1]" => "00698"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId102"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId103
	# line in RSA: <agent>: <username> received status: <fld1> <status>: <info>
	else if [logstash][msgparser][id] == "msgParserId103" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} received status: %{fld1} %{status}: %{info}" }
			id => "msgParserId103"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId104
	# line in RSA: <agent>: <directory>
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "%{agent}: %{directory}" }
			id => "msgParserId104"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA: <agent>[<process_id>]: started by <username>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: started by %{username}" }
			id => "msgParserId7"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId105
	# line in RSA: <agent>: <event_description> [<dn>]
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} [%{dn}]" }
			id => "msgParserId105"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA:  Corrupt label; <result> 
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "Corrupt label; %{result}" }
			id => "msgParserId106"
			add_field => {
				"event_description" => "Corrupt label"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId107
	# line in RSA:  corrupt label - <result> 
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "corrupt label - %{result}" }
			id => "msgParserId107"
			add_field => {
				"event_description" => "Corrupt label"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cron" {
		# MESSAGE 00179:04
		# line in RSA:  <agent>[<process_id>]: USERDB: Unable to read from <filename>. <disposition>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: USERDB: Unable to read from %{filename}. %{disposition}." }
				id => "message-00179:04"
				add_field => {
				"event_description" => "Unable to read from file"
				"application" => "USERDB"
					"[event][id]" => "00179:04"
					"[rsa][message][id1]" => "00179:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00179
		# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-00179"
				add_field => {
					"[event][id]" => "00179"
					"[rsa][message][id1]" => "00179"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00179:01
		# line in RSA:  <agent>[<process_id>]: pam_acct_mgmt: error <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_acct_mgmt: error %{result}" }
				id => "message-00179:01"
				add_field => {
				"event_description" => "pam_acct_mgmt error"
					"[event][id]" => "00179:01"
					"[rsa][message][id1]" => "00179:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00179:02
		# line in RSA:  <agent>[<process_id>]: <username> - RPC clnt_call (<fld1>) failure: RPC: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} - RPC clnt_call (%{fld1}) failure: RPC: %{result}" }
				id => "message-00179:02"
				add_field => {
				"event_description" => "RPC client call failure"
					"[event][id]" => "00179:02"
					"[rsa][message][id1]" => "00179:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00179:03
		# line in RSA:  <agent>[<process_id>]: NIS+ server for <shost> not responding, <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: NIS+ server for %{shost} not responding, %{result}" }
				id => "message-00179:03"
				add_field => {
				"event_description" => "NIS+ server not resonding"
					"[event][id]" => "00179:03"
					"[rsa][message][id1]" => "00179:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA:  <agent>: Unable to shutdown. <result> 
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "%{agent}: Unable to shutdown. %{result}" }
			id => "msgParserId113"
			add_field => {
				"event_description" => " Unable to shutdown"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA:  <agent>: <event_description>: <info> 
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{info}" }
			id => "msgParserId114"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dhcpd" {
		# MESSAGE 00594
		# line in RSA:  <agent>: { Sending  | Listening } on <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*Sending[\s]+|[\s]*Listening[\s]+)[\s]+on[\s]+(?<info>.*)$" }
				id => "message-00594"
				add_field => {
				"event_description" => "Sending/Listening on port"
					"[event][id]" => "00594"
					"[rsa][message][id1]" => "00594"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00595
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00595"
				add_field => {
					"[event][id]" => "00595"
					"[rsa][message][id1]" => "00595"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId116
	# line in RSA:  <agent>[<process_id>]: :<action> -l "<username>": <param>
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: :%{action} -l \"%{username}\": %{param}" }
			id => "msgParserId116"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"event_description" => "disable user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId117
	# line in RSA: <agent>[<process_id>]: Access Denied for user <username> from <shost> 
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Access Denied for user %{username} from %{shost}" }
			id => "msgParserId117"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "access denied"
				"ntype" => "22"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId118
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } gethostbyaddr: <result>
	else if [logstash][msgparser][id] == "msgParserId118" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+gethostbyaddr:[\s]+(?<result>.*)$" }
			id => "msgParserId118"
			add_field => {
				"event_description" => "gethostbyaddr mismatch"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId119
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Unable to start up package <application>. <info>
	else if [logstash][msgparser][id] == "msgParserId119" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+start[\s]+up[\s]+package[\s]+(?<application>[^\.]*)\.[\s]+(?<info>.*)$" }
			id => "msgParserId119"
			add_field => {
				"event_description" => "Unable to start up package"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dsapi_server" {
		# MESSAGE 00771
		# line in RSA: <agent>[<process_id>]: <severity> pam authentication for user '<username>': <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} pam authentication for user '%{username}': %{result}" }
				id => "message-00771"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "authentication"
					"[event][id]" => "00771"
					"[rsa][message][id1]" => "00771"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00771:01
		# line in RSA: <agent>[<process_id>]: <severity> pam Denying user '<username>' access to next module 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} pam Denying user '%{username}' access to next module" }
				id => "message-00771:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "authentication"
					"[event][id]" => "00771:01"
					"[rsa][message][id1]" => "00771:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00771:02
		# line in RSA: <agent>[<process_id>]: <severity>  pam Failed to get password from user 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}  pam Failed to get password from user" }
				id => "message-00771:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "authentication"
					"[event][id]" => "00771:02"
					"[rsa][message][id1]" => "00771:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId123
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } SIGTERM detected,<result>
	else if [logstash][msgparser][id] == "msgParserId123" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+SIGTERM[\s]+detected,(?<result>.*)$" }
			id => "msgParserId123"
			add_field => {
				"event_description" => "SIGTERM detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId124"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dtspcd" {
		# MESSAGE 01044
		# line in RSA:  <agent>[<process_id>]: allowed connection from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: allowed connection from %{saddr}" }
				id => "message-01044"
				add_field => {
				"event_description" => "allowed connection"
					"[event][id]" => "01044"
					"[rsa][message][id1]" => "01044"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01044:01
		# line in RSA: <agent>[<fld2>]: Unable to open <directory>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: Unable to open %{directory}: %{result}" }
				id => "message-01044:01"
				add_field => {
				"event_description" => "Unable to open"
					"[event][id]" => "01044:01"
					"[rsa][message][id1]" => "01044:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01044:02
		# line in RSA: <agent>[<fld2>]: <severity>: can't get client address: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: %{severity}: can't get client address: %{result}" }
				id => "message-01044:02"
				add_field => {
				"event_description" => "can't get client address"
					"[event][id]" => "01044:02"
					"[rsa][message][id1]" => "01044:02"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "eloqdb" {
		# MESSAGE 00535
		# line in RSA: <agent>[<process_id>]: Eloquence data base server terminated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Eloquence data base server terminated" }
				id => "message-00535"
				add_field => {
				"event_description" => "data base server terminated"
					"[event][id]" => "00535"
					"[rsa][message][id1]" => "00535"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00535:01
		# line in RSA: <agent>[<process_id>]: Server patch level <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server patch level %{info}" }
				id => "message-00535:01"
				add_field => {
					"[event][id]" => "00535:01"
					"[rsa][message][id1]" => "00535:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00535:02
		# line in RSA: <agent>[<process_id>]: [<type>] created new forward-log segment (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{type}] created new forward-log segment (%{info})" }
				id => "message-00535:02"
				add_field => {
					"[event][id]" => "00535:02"
					"[rsa][message][id1]" => "00535:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00535:03
		# line in RSA: <agent>[<process_id>]: Eloquence database server active
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Eloquence database server active" }
				id => "message-00535:03"
				add_field => {
				"event_description" => "database server active"
					"[event][id]" => "00535:03"
					"[rsa][message][id1]" => "00535:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00535:04
		# line in RSA: <agent>[<process_id>]: created new forward-log segment (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: created new forward-log segment (%{info})" }
				id => "message-00535:04"
				add_field => {
					"[event][id]" => "00535:04"
					"[rsa][message][id1]" => "00535:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00535:05
		# line in RSA:  <agent>[<process_id>]: Server is configured as a replication MASTER server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server is configured as a replication MASTER server" }
				id => "message-00535:05"
				add_field => {
					"[event][id]" => "00535:05"
					"[rsa][message][id1]" => "00535:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "EMCsymapi" {
		# MESSAGE 01143
		# line in RSA:  <agent>[<process_id>]: <service>: '<action>' for { device group <group> | device file <filename> | device <device> in group <group> } - <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<service>[^:]*):[\s]+'(?<action>[^']*)'[\s]+for[\s]+([\s]*device[\s]+group[\s]+(?<group>[^\s]*)[\s]+|[\s]*device[\s]+file[\s]+(?<filename>[^\s]*)[\s]+|[\s]*device[\s]+(?<device>[^\s]*)[\s]+in[\s]+group[\s]+(?<group>[^\s]*)[\s]+)[\s]+\-[\s]+(?<event_description>.*)$" }
				id => "message-01143"
				add_field => {
					"[event][id]" => "01143"
					"[rsa][message][id1]" => "01143"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00618
		# line in RSA:  <agent>[<process_id>]: <application>: <action> - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{action} - %{event_description}" }
				id => "message-00618"
				add_field => {
					"[event][id]" => "00618"
					"[rsa][message][id1]" => "00618"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application>: Info: cmd=<action>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId135" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+Info:[\s]+cmd=(?<action>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId135"
			add_field => {
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } CMD: Info: <event_description>
	else if [logstash][msgparser][id] == "msgParserId136" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+CMD:[\s]+Info:[\s]+(?<event_description>.*)$" }
			id => "msgParserId136"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA:  <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId138"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId139
	# line in RSA:  <agent>::<interface>(): { <event_description>. | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId139" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*)::(?<interface>[^\(]*)\(\):[\s]+([\s]*(?<event_description>[^\.]*)\.[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId139"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId140
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } { user <username>: <action> | <action> status <resultcode> }
	else if [logstash][msgparser][id] == "msgParserId140" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*user[\s]+(?<username>[^:]*):[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+status[\s]+(?<resultcode>[^\s]*)[\s]+)$" }
			id => "msgParserId140"
			add_field => {
				"event_description" => "process start/stop"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Couldn't update pid file
	else if [logstash][msgparser][id] == "msgParserId141" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Couldn't[\s]+update[\s]+pid[\s]+file$" }
			id => "msgParserId141"
			add_field => {
				"event_description" => "Couldn't update pid file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId142
	# line in RSA: <agent>[<process_id>]: ftp: <event_description> user <username>, host <shost>, <info> 
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: ftp: %{event_description} user %{username}, host %{shost}, %{info}" }
			id => "msgParserId142"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ftpd" {
		# MESSAGE 00017
		# line in RSA:  <agent>[<process_id>]: PAM_TEXT_INFO: Last successful login for <username>: <recorded_time> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM_TEXT_INFO: Last successful login for %{username}: %{recorded_time} on %{terminal}" }
				id => "message-00017"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "successful user login recorded"
					"[event][id]" => "00017"
					"[rsa][message][id1]" => "00017"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:01
		# line in RSA: <agent>[<process_id>]: PAM_TEXT_INFO: Last unsuccessful login for <username>: <recorded_time> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM_TEXT_INFO: Last unsuccessful login for %{username}: %{recorded_time} on %{terminal}" }
				id => "message-00017:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "Last unsuccessful login"
				"ntype" => "22"
					"[event][id]" => "00017:01"
					"[rsa][message][id1]" => "00017:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:02
		# line in RSA: <agent>[<process_id>]: FTP LOGIN REFUSED (<result>) FROM <shost> [<saddr>], <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN REFUSED (%{result}) FROM %{shost} [%{saddr}], %{username}" }
				id => "message-00017:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "ftpd - login refused"
					"[event][id]" => "00017:02"
					"[rsa][message][id1]" => "00017:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:03
		# line in RSA: <agent>[<process_id>]: FTP LOGIN FROM <shost> [<saddr>], <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{shost} [%{saddr}], %{username}" }
				id => "message-00017:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "login"
					"[event][id]" => "00017:03"
					"[rsa][message][id1]" => "00017:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:04
		# line in RSA: <agent>[<process_id>]: FTP LOGIN FROM <shost>, <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{shost}, %{username}" }
				id => "message-00017:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
					"[event][id]" => "00017:04"
					"[rsa][message][id1]" => "00017:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:05
		# line in RSA:  <agent>[<process_id>]: Opening { BINARY | ASCII } mode data connection for <saddr> (<bytes> bytes) 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Opening[\s]+([\s]*BINARY[\s]+|[\s]*ASCII[\s]+)[\s]+mode[\s]+data[\s]+connection[\s]+for[\s]+(?<saddr>[^\s]*)[\s]+\((?<bytes>[^\s]*)[\s]+bytes\)[\s]+$" }
				id => "message-00017:05"
				add_field => {
				"event_description" => "connection"
					"[event][id]" => "00017:05"
					"[rsa][message][id1]" => "00017:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:06
		# line in RSA:  <agent>[<process_id>]: Opening ASCII mode data connection for <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Opening ASCII mode data connection for %{saddr}" }
				id => "message-00017:06"
				add_field => {
				"event_description" => "connection"
					"[event][id]" => "00017:06"
					"[rsa][message][id1]" => "00017:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:07
		# line in RSA: <agent>[<process_id>]: User <username> access denied 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} access denied" }
				id => "message-00017:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"result" => "access denied"
				"event_description" => "access denied"
					"[event][id]" => "00017:07"
					"[rsa][message][id1]" => "00017:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:08
		# line in RSA: <agent>[<process_id>]: User <username> logged in  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} logged in" }
				id => "message-00017:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "Logged in"
					"[event][id]" => "00017:08"
					"[rsa][message][id1]" => "00017:08"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:09
		# line in RSA: <agent>[<process_id>]: User <username> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} logged out" }
				id => "message-00017:09"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "Logout"
					"[event][id]" => "00017:09"
					"[rsa][message][id1]" => "00017:09"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:10
		# line in RSA:  <agent>[<process_id>]: User <username>: Login incorrect 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}: Login incorrect" }
				id => "message-00017:10"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"result" => "incorrect login"
				"event_description" => "login incorrect"
					"[event][id]" => "00017:10"
					"[rsa][message][id1]" => "00017:10"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:12
		# line in RSA: <agent>[<process_id>]: <interface>: error Permission denied
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: error Permission denied" }
				id => "message-00017:12"
				add_field => {
				"event_description" => "Permission denied"
					"[event][id]" => "00017:12"
					"[rsa][message][id1]" => "00017:12"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:13
		# line in RSA: <agent>[<process_id>]: <interface>: error Authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: error Authentication failed" }
				id => "message-00017:13"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "Authentcation failure"
					"[event][id]" => "00017:13"
					"[rsa][message][id1]" => "00017:13"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:11
		# line in RSA: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00017:11"
				add_field => {
					"[event][id]" => "00017:11"
					"[rsa][message][id1]" => "00017:11"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId157
	# line in RSA: <agent>: <username> <interface> <result>
	else if [logstash][msgparser][id] == "msgParserId157" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} %{interface} %{result}" }
			id => "msgParserId157"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId158
	# line in RSA:  got SCSI bus reset 
	else if [logstash][msgparser][id] == "msgParserId158" {
		dissect {
			mapping => { "message" => "got SCSI bus reset" }
			id => "msgParserId158"
			add_field => {
				"event_description" => "got SCSI bus reset"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId159
	# line in RSA: <agent>[<process_id>]: Server <shost> wasnt heard from for <fld1> sec, <result> 
	else if [logstash][msgparser][id] == "msgParserId159" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Server %{shost} wasnt heard from for %{fld1} sec, %{result}" }
			id => "msgParserId159"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId160
	# line in RSA: <agent>[<process_id>]: <fld1> archive files compressed (<fld2> tried) 
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} archive files compressed (%{fld2} tried)" }
			id => "msgParserId160"
			add_field => {
				"event_description" => "archive files compressed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId161
	# line in RSA:  <agent>[<process_id>]: NIS+ server for <shost> not responding, <info> 
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: NIS+ server for %{shost} not responding, %{info}" }
			id => "msgParserId161"
			add_field => {
				"event_description" => "NIS+ server not responding"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId162
	# line in RSA:  <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId162"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId163
	# line in RSA:  i/o to invalid geometry
	else if [logstash][msgparser][id] == "msgParserId163" {
		dissect {
			mapping => { "message" => "i/o to invalid geometry" }
			id => "msgParserId163"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA:  <agent>[<process_id>]: connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId164"
			add_field => {
				"event_description" => "Connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.ftpd" {
		# MESSAGE 00813
		# line in RSA: <agent>[<process_id>]: FTP LOGIN FROM <shost>[<saddr>], <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{shost}[%{saddr}], %{username}" }
				id => "message-00813"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "FTP LOGIN FROM host"
					"[event][id]" => "00813"
					"[rsa][message][id1]" => "00813"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00814
		# line in RSA: <agent>[<process_id>]: FTP session closed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP session closed" }
				id => "message-00814"
				add_field => {
				"event_description" => "FTP session closed"
					"[event][id]" => "00814"
					"[rsa][message][id1]" => "00814"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00048
		# line in RSA: <agent>[<process_id>]: connect from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
				id => "message-00048"
				add_field => {
				"event_description" => "Connection"
					"[event][id]" => "00048"
					"[rsa][message][id1]" => "00048"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "in.mpathd" {
		# MESSAGE 00815
		# line in RSA:  <agent>[<process_id>]: Improved failure detection time <result> on (<interface>) for group "<group>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Improved failure detection time %{result} on (%{interface}) for group \"%{group}\"" }
				id => "message-00815"
				add_field => {
				"event_description" => "Improved failure detection time for group"
					"[event][id]" => "00815"
					"[rsa][message][id1]" => "00815"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00816
		# line in RSA:  <agent>[<process_id>]: Cannot meet requested failure detection time of <result> on (<interface>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Cannot meet requested failure detection time of %{result} on (%{interface}) %{info}" }
				id => "message-00816"
				add_field => {
				"event_description" => "Cannot meet requested failure detection time for group"
					"[event][id]" => "00816"
					"[rsa][message][id1]" => "00816"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId170
	# line in RSA: <agent>[<process_id>]: connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId170" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId170"
			add_field => {
				"event_description" => "Connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "inetd" {
		# MESSAGE 00024
		# line in RSA:  <agent>[<process_id>]: <protocol>: Connection from <shost> (<saddr>) at <recorded_time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}: Connection from %{shost} (%{saddr}) at %{recorded_time}" }
				id => "message-00024"
				add_field => {
				"event_description" => "Connection"
					"[event][id]" => "00024"
					"[rsa][message][id1]" => "00024"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:01
		# line in RSA: <agent>[<process_id>]: <protocol>: Access denied for <shost> (<saddr>) at <recorded_time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}: Access denied for %{shost} (%{saddr}) at %{recorded_time}" }
				id => "message-00024:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "access denied"
					"[event][id]" => "00024:01"
					"[rsa][message][id1]" => "00024:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:02
		# line in RSA:   <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00024:02"
				add_field => {
					"[event][id]" => "00024:02"
					"[rsa][message][id1]" => "00024:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "inet" {
		# MESSAGE 01046
		# line in RSA:  <agent>[<process_id>]: allowed connection from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: allowed connection from %{saddr}" }
				id => "message-01046"
				add_field => {
				"event_description" => "allowed connection"
					"[event][id]" => "01046"
					"[rsa][message][id1]" => "01046"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:01
		# line in RSA: <agent>[<fld2>]: Unable to open <directory> : <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: Unable to open %{directory} : %{result}" }
				id => "message-01046:01"
				add_field => {
				"event_description" => "Unable to open"
					"[event][id]" => "01046:01"
					"[rsa][message][id1]" => "01046:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:02
		# line in RSA: <agent>[<fld2>]: <severity>: can't get client address: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: %{severity}: can't get client address: %{result}" }
				id => "message-01046:02"
				add_field => {
				"event_description" => "can't get client address"
					"[event][id]" => "01046:02"
					"[rsa][message][id1]" => "01046:02"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId175
	# line in RSA:  INFO <device> Switch OS <<<agent>>: <action>
	else if [logstash][msgparser][id] == "msgParserId175" {
		dissect {
			mapping => { "message" => "INFO %{device} Switch OS <%{agent}>: %{action}" }
			id => "msgParserId175"
			add_field => {
				"event_description" => "Switch INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA:  <agent>[<process_id>]: SLPFindSrvs failed: <result>
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: SLPFindSrvs failed: %{result}" }
			id => "msgParserId176"
			add_field => {
				"event_description" => "SLPFindSrvs failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "issDaemon" {
		# MESSAGE 00255
		# line in RSA: <agent>[<process_id>]: Access Denied: User <username> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Access Denied: User %{username} %{result}" }
				id => "message-00255"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "access denied"
					"[event][id]" => "00255"
					"[rsa][message][id1]" => "00255"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00255:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00255:01"
				add_field => {
					"[event][id]" => "00255:01"
					"[rsa][message][id1]" => "00255:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId178
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Unable to connect to destination: <daddr>
	else if [logstash][msgparser][id] == "msgParserId178" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+connect[\s]+to[\s]+destination:[\s]+(?<daddr>.*)$" }
			id => "msgParserId178"
			add_field => {
				"event_description" => "Unable to connect to destination"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "kernel" {
		# MESSAGE 00287:02
		# line in RSA: <agent>: martian source <hostip> from <saddr>, on dev <sinterface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: martian source %{hostip} from %{saddr}, on dev %{sinterface}" }
				id => "message-00287:02"
				add_field => {
				"info" => "martian source"
					"[event][id]" => "00287:02"
					"[rsa][message][id1]" => "00287:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287:03
		# line in RSA: <agent>: EXT4-fs <severity> (device <device>): ext4_dx_add_entry: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: EXT4-fs %{severity} (device %{device}): ext4_dx_add_entry: %{event_description}" }
				id => "message-00287:03"
				add_field => {
					"[event][id]" => "00287:03"
					"[rsa][message][id1]" => "00287:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287:04
		# line in RSA: <agent>: usb 7-1: {new full speed USB device number <dclass_counter1> using uhci_hcd|USB disconnect, device number <dclass_counter1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+usb[\s]+7\-1:[\s]+(new[\s]+full[\s]+speed[\s]+USB[\s]+device[\s]+number[\s]+(?<dclass_counter1>[^\s]*)[\s]+using[\s]+uhci_hcd|USB[\s]+disconnect,[\s]+device[\s]+number[\s]+(?<dclass_counter1>.*))$" }
				id => "message-00287:04"
				add_field => {
					"[event][id]" => "00287:04"
					"[rsa][message][id1]" => "00287:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287:05
		# line in RSA: <agent>: usb 7-1: New USB device found, idVendor=<fld1>, idProduct=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: usb 7-1: New USB device found, idVendor=%{fld1}, idProduct=%{fld2}" }
				id => "message-00287:05"
				add_field => {
				"event_description" => "New USB device found"
					"[event][id]" => "00287:05"
					"[rsa][message][id1]" => "00287:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287:06
		# line in RSA: <agent>: usb 7-1: New USB device strings: Mfr=<fld1>, Product=<fld2>, SerialNumber=<serial_number>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: usb 7-1: New USB device strings: Mfr=%{fld1}, Product=%{fld2}, SerialNumber=%{serial_number}" }
				id => "message-00287:06"
				add_field => {
				"event_description" => "New USB device strings"
					"[event][id]" => "00287:06"
					"[rsa][message][id1]" => "00287:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287:07
		# line in RSA: <agent>: usb 7-1: Product: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: usb 7-1: Product: %{product}" }
				id => "message-00287:07"
				add_field => {
				"event_description" => "New USB device strings"
					"[event][id]" => "00287:07"
					"[rsa][message][id1]" => "00287:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287:01
		# line in RSA: <agent>: <fld1> header: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} header: %{info}" }
				id => "message-00287:01"
				add_field => {
					"[event][id]" => "00287:01"
					"[rsa][message][id1]" => "00287:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00287
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00287"
				add_field => {
					"[event][id]" => "00287"
					"[rsa][message][id1]" => "00287"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId186
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId186" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId186"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "logged_off" {
		# MESSAGE 00686
		# line in RSA:  <username>: logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-00686"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
					"[event][id]" => "00686"
					"[rsa][message][id1]" => "00686"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00686:01
		# line in RSA:  <username>: logged off from <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: logged off from %{terminal} ( from %{saddr})" }
				id => "message-00686:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
					"[event][id]" => "00686:01"
					"[rsa][message][id1]" => "00686:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00686:02
		# line in RSA:  <username>: logged off from <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: logged off from %{terminal}" }
				id => "message-00686:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
					"[event][id]" => "00686:02"
					"[rsa][message][id1]" => "00686:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "logged_on" {
		# MESSAGE 00685
		# line in RSA:  <username>: logged on to <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: logged on to %{terminal} (Connected from %{saddr})" }
				id => "message-00685"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "00685"
					"[rsa][message][id1]" => "00685"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00685:01
		# line in RSA:  <username>: logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: logged on to %{terminal} ( from %{saddr})" }
				id => "message-00685:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "00685:01"
					"[rsa][message][id1]" => "00685:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00685:02
		# line in RSA:  <username>: logged on to <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: logged on to %{terminal}" }
				id => "message-00685:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "00685:02"
					"[rsa][message][id1]" => "00685:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE 00022
		# line in RSA:  <agent>: REPEATED LOGIN FAILURES ON <interface> FROM <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: REPEATED LOGIN FAILURES ON %{interface} FROM %{shost}" }
				id => "message-00022"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "repeated login failures"
					"[event][id]" => "00022"
					"[rsa][message][id1]" => "00022"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00022:01
		# line in RSA: <agent>: change password failure: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: change password failure: %{result}" }
				id => "message-00022:01"
				add_field => {
				"ec_theme" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "change password failure"
					"[event][id]" => "00022:01"
					"[rsa][message][id1]" => "00022:01"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00022:04
		# line in RSA:  <agent>: <interface>: error Authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: error Authentication failed" }
				id => "message-00022:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "Authentcation failure"
					"[event][id]" => "00022:04"
					"[rsa][message][id1]" => "00022:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00022:05
		# line in RSA:  <agent>: pam_authenticate error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_authenticate error" }
				id => "message-00022:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"ntype" => "22"
				"event_description" => "pam_authenticate error"
					"[event][id]" => "00022:05"
					"[rsa][message][id1]" => "00022:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00022:03
		# line in RSA: <agent>: <username> LOGIN <interface> FROM <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} LOGIN %{interface} FROM %{shost}" }
				id => "message-00022:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
					"[event][id]" => "00022:03"
					"[rsa][message][id1]" => "00022:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00022:06
		# line in RSA:   <agent>: exiting with return code <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: exiting with return code %{resultcode}" }
				id => "message-00022:06"
				add_field => {
				"event_description" => "login exiting"
					"[event][id]" => "00022:06"
					"[rsa][message][id1]" => "00022:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00022:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00022:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
					"[event][id]" => "00022:02"
					"[rsa][message][id1]" => "00022:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId200
	# line in RSA:  <agent>[<process_id>]: login: <username> <interface> <saddr>
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: login: %{username} %{interface} %{saddr}" }
			id => "msgParserId200"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId201
	# line in RSA:  <agent>[<process_id>]: User Listing {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId201" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+User[\s]+Listing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId201"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId202
	# line in RSA:  <agent>[<process_id>]: Loan Structure Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId202" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Loan[\s]+Structure[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId202"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId203
	# line in RSA:  <agent>[<process_id>]: D/R Activity Detail Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId203" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+D/R[\s]+Activity[\s]+Detail[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId203"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId204
	# line in RSA:  <agent>[<process_id>]: End of Day Loan Summary Report {started | passed authorization | main processing started | main processing completed | completed with notice(s) | completed}
	else if [logstash][msgparser][id] == "msgParserId204" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+End[\s]+of[\s]+Day[\s]+Loan[\s]+Summary[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\)[\s]+|[\s]*completed)$" }
			id => "msgParserId204"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId205
	# line in RSA:  <agent>[<process_id>]: D/R Loan Activity Worksheet {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId205" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+D/R[\s]+Loan[\s]+Activity[\s]+Worksheet[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId205"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mlaj018.sh" {
		# MESSAGE 00550
		# line in RSA:  <agent>[<process_id>]: Loan Participant Settlement Statements {started | passed authorization | main processing started | main processing completed | completed | failed authorization with an ABLE_EXIT_STATUS of 5}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Loan[\s]+Participant[\s]+Settlement[\s]+Statements[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+|[\s]*failed[\s]+authorization[\s]+with[\s]+an[\s]+ABLE_EXIT_STATUS[\s]+of[\s]+5)$" }
				id => "message-00550"
				add_field => {
					"[event][id]" => "00550"
					"[rsa][message][id1]" => "00550"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00550:01
		# line in RSA:  <agent>[<process_id>]: Loan Participant Settlement Statements custom local pre-processing started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Loan Participant Settlement Statements custom local pre-processing started" }
				id => "message-00550:01"
				add_field => {
					"[event][id]" => "00550:01"
					"[rsa][message][id1]" => "00550:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00550:02
		# line in RSA:  <agent>[<process_id>]: Loan Participant Settlement Statements stopped as requested by custom local pre-process script mlaj018-pre.local.sh with an ABLE_EXIT_STATUS of <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Loan Participant Settlement Statements stopped as requested by custom local pre-process script mlaj018-pre.local.sh with an ABLE_EXIT_STATUS of %{fld1}" }
				id => "message-00550:02"
				add_field => {
					"[event][id]" => "00550:02"
					"[rsa][message][id1]" => "00550:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId209
	# line in RSA:  <agent>[<process_id>]: Guaranty Activity Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId209" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Guaranty[\s]+Activity[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId209"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mlaj022.sh" {
		# MESSAGE 00545
		# line in RSA:  <agent>[<process_id>]: Region End of Day Processing {started | passed authorization | main processing started | main processing completed | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Region[\s]+End[\s]+of[\s]+Day[\s]+Processing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
				id => "message-00545"
				add_field => {
					"[event][id]" => "00545"
					"[rsa][message][id1]" => "00545"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00545:01
		# line in RSA:  <agent>[<process_id>]: Region End of Day Processing custom local pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Region[\s]+End[\s]+of[\s]+Day[\s]+Processing[\s]+custom[\s]+local[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00545:01"
				add_field => {
					"[event][id]" => "00545:01"
					"[rsa][message][id1]" => "00545:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00545:02
		# line in RSA:  <agent>[<process_id>]: Region End of Day Processing custom local post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Region[\s]+End[\s]+of[\s]+Day[\s]+Processing[\s]+custom[\s]+local[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00545:02"
				add_field => {
					"[event][id]" => "00545:02"
					"[rsa][message][id1]" => "00545:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00545:03
		# line in RSA:  <agent>[<process_id>]: Region End of Day Processing standard pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Region[\s]+End[\s]+of[\s]+Day[\s]+Processing[\s]+standard[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00545:03"
				add_field => {
					"[event][id]" => "00545:03"
					"[rsa][message][id1]" => "00545:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00545:04
		# line in RSA:  <agent>[<process_id>]: Region End of Day Processing standard post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Region[\s]+End[\s]+of[\s]+Day[\s]+Processing[\s]+standard[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00545:04"
				add_field => {
					"[event][id]" => "00545:04"
					"[rsa][message][id1]" => "00545:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00545:05
		# line in RSA:  <agent>[<process_id>]: Region End of Day Processing post processing script mlaj022.sh ftp failed to <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Region End of Day Processing post processing script mlaj022.sh ftp failed to %{fld1}" }
				id => "message-00545:05"
				add_field => {
					"[event][id]" => "00545:05"
					"[rsa][message][id1]" => "00545:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId216
	# line in RSA:  <agent>[<process_id>]: Propose Loan Participant Settlements Processing {started | passed authorization | standard pre-processing started | standard pre-processing completed | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId216" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Propose[\s]+Loan[\s]+Participant[\s]+Settlements[\s]+Processing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*standard[\s]+pre\-processing[\s]+started[\s]+|[\s]*standard[\s]+pre\-processing[\s]+completed[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId216"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId217
	# line in RSA:  <agent>[<process_id>]: Unposted Loan Participant Settlements Report {started | passed authorization | main processing started | main processing completed | completed with notice(s) | completed}
	else if [logstash][msgparser][id] == "msgParserId217" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Unposted[\s]+Loan[\s]+Participant[\s]+Settlements[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\)[\s]+|[\s]*completed)$" }
			id => "msgParserId217"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId218
	# line in RSA:  <agent>[<process_id>]: Cash Activity Report {started | passed authorization | main processing started | main processing completed | completed with notice(s) | completed}
	else if [logstash][msgparser][id] == "msgParserId218" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Cash[\s]+Activity[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\)[\s]+|[\s]*completed)$" }
			id => "msgParserId218"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId219
	# line in RSA:  <agent>[<process_id>]: Monthly Charges Report {started | passed authorization | main processing started | main processing completed | completed with notice(s)}
	else if [logstash][msgparser][id] == "msgParserId219" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Monthly[\s]+Charges[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\))$" }
			id => "msgParserId219"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId220
	# line in RSA:  <agent>[<process_id>]: Monthly Trends Analysis Report {started | passed authorization | main processing started | main processing completed | completed | failed authorization with an ABLE_EXIT_STATUS of 5}
	else if [logstash][msgparser][id] == "msgParserId220" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Monthly[\s]+Trends[\s]+Analysis[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+|[\s]*failed[\s]+authorization[\s]+with[\s]+an[\s]+ABLE_EXIT_STATUS[\s]+of[\s]+5)$" }
			id => "msgParserId220"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId221
	# line in RSA:  <agent>[<process_id>]: Exception Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId221" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Exception[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId221"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId222
	# line in RSA:  <agent>[<process_id>]: Exception Check Table Listing by Exception {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId222" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Exception[\s]+Check[\s]+Table[\s]+Listing[\s]+by[\s]+Exception[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId222"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId223
	# line in RSA:  <agent>[<process_id>]: Loan Activity Summary Report {started | passed authorization | main processing started | main processing completed | completed with notice(s) | completed}
	else if [logstash][msgparser][id] == "msgParserId223" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Loan[\s]+Activity[\s]+Summary[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\)[\s]+|[\s]*completed)$" }
			id => "msgParserId223"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId224
	# line in RSA:  <agent>[<process_id>]: Participant Monthly Statements {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId224" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Participant[\s]+Monthly[\s]+Statements[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId224"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId225
	# line in RSA:  <agent>[<process_id>]: Active Interest Rate Options Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId225" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Active[\s]+Interest[\s]+Rate[\s]+Options[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId225"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId226
	# line in RSA:  <agent>[<process_id>]: Client Interest Rate Option Statements {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId226" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Client[\s]+Interest[\s]+Rate[\s]+Option[\s]+Statements[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId226"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId227
	# line in RSA:  <agent>[<process_id>]: Participant Interest Rate Option Statements {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId227" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Participant[\s]+Interest[\s]+Rate[\s]+Option[\s]+Statements[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId227"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mlaj069.sh" {
		# MESSAGE 00542
		# line in RSA:  <agent>[<process_id>]: G/L Account Balances Report {started | passed authorization | main processing started | main processing completed | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+G/L[\s]+Account[\s]+Balances[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
				id => "message-00542"
				add_field => {
					"[event][id]" => "00542"
					"[rsa][message][id1]" => "00542"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00542:01
		# line in RSA:  <agent>[<process_id>]: G/L Account Balances Report failed authorization with an ABLE_EXIT_STATUS of <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: G/L Account Balances Report failed authorization with an ABLE_EXIT_STATUS of %{fld1}" }
				id => "message-00542:01"
				add_field => {
					"[event][id]" => "00542:01"
					"[rsa][message][id1]" => "00542:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId230
	# line in RSA:  <agent>[<process_id>]: Exception Check Table Listing by Loan {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId230" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Exception[\s]+Check[\s]+Table[\s]+Listing[\s]+by[\s]+Loan[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId230"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId231
	# line in RSA:  <agent>[<process_id>]: Participant Interest Rate Option Initiation Advices {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId231" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Participant[\s]+Interest[\s]+Rate[\s]+Option[\s]+Initiation[\s]+Advices[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId231"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId232
	# line in RSA:  <agent>[<process_id>]: Outstanding Receivables/Payables Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId232" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Outstanding[\s]+Receivables/Payables[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId232"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId233
	# line in RSA:  <agent>[<process_id>]: Post Daily Reports Processing {started | passed authorization | main processing started | main processing completed | completed | standard pre-processing started | standard pre-processing completed}
	else if [logstash][msgparser][id] == "msgParserId233" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Post[\s]+Daily[\s]+Reports[\s]+Processing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+|[\s]*standard[\s]+pre\-processing[\s]+started[\s]+|[\s]*standard[\s]+pre\-processing[\s]+completed)$" }
			id => "msgParserId233"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId234
	# line in RSA:  <agent>[<process_id>]: Charge/Payment Activity Detail Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId234" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Charge/Payment[\s]+Activity[\s]+Detail[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId234"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId235
	# line in RSA:  <agent>[<process_id>]: D/R Activity Log Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId235" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+D/R[\s]+Activity[\s]+Log[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId235"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId236
	# line in RSA:  <agent>[<process_id>]: Daily Loan Status Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId236" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Daily[\s]+Loan[\s]+Status[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId236"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId237
	# line in RSA:  <agent>[<process_id>]: FRB Code Listing {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId237" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+FRB[\s]+Code[\s]+Listing[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId237"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mlaj101.sh" {
		# MESSAGE 00548
		# line in RSA:  <agent>[<process_id>]: Daily Activity Advices {started | passed authorization | main processing started | main processing completed | completed | post processing script mlaj101.sh checkpoint}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Daily[\s]+Activity[\s]+Advices[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+|[\s]*post[\s]+processing[\s]+script[\s]+mlaj101\.sh[\s]+checkpoint)$" }
				id => "message-00548"
				add_field => {
					"[event][id]" => "00548"
					"[rsa][message][id1]" => "00548"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00548:01
		# line in RSA:  <agent>[<process_id>]: Daily Activity Advices custom local post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Daily[\s]+Activity[\s]+Advices[\s]+custom[\s]+local[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00548:01"
				add_field => {
					"[event][id]" => "00548:01"
					"[rsa][message][id1]" => "00548:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId240
	# line in RSA:  <agent>[<process_id>]: Loan Balance Anomaly Report {started | passed authorization | main processing started | main processing completed | completed with notice(s)}
	else if [logstash][msgparser][id] == "msgParserId240" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Loan[\s]+Balance[\s]+Anomaly[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\))$" }
			id => "msgParserId240"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId241
	# line in RSA:  <agent>[<process_id>]: Event Report {started | passed authorization | main processing started | main processing completed | completed}
	else if [logstash][msgparser][id] == "msgParserId241" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Event[\s]+Report[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed)$" }
			id => "msgParserId241"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mlaj125.sh" {
		# MESSAGE 00551
		# line in RSA:  <agent>[<process_id>]: Excess Cash {started | passed authorization | main processing started | main processing completed | completed with notice(s)}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Excess[\s]+Cash[\s]+(started[\s]+|[\s]*passed[\s]+authorization[\s]+|[\s]*main[\s]+processing[\s]+started[\s]+|[\s]*main[\s]+processing[\s]+completed[\s]+|[\s]*completed[\s]+with[\s]+notice\(s\))$" }
				id => "message-00551"
				add_field => {
					"[event][id]" => "00551"
					"[rsa][message][id1]" => "00551"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00551:01
		# line in RSA:  <agent>[<process_id>]: Excess Cash custom local pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Excess[\s]+Cash[\s]+custom[\s]+local[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00551:01"
				add_field => {
					"[event][id]" => "00551:01"
					"[rsa][message][id1]" => "00551:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00551:02
		# line in RSA:  <agent>[<process_id>]: Excess Cash standard pre-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Excess[\s]+Cash[\s]+standard[\s]+pre\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00551:02"
				add_field => {
					"[event][id]" => "00551:02"
					"[rsa][message][id1]" => "00551:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00551:03
		# line in RSA:  <agent>[<process_id>]: Excess Cash standard post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Excess[\s]+Cash[\s]+standard[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00551:03"
				add_field => {
					"[event][id]" => "00551:03"
					"[rsa][message][id1]" => "00551:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00551:04
		# line in RSA:  <agent>[<process_id>]: Excess Cash custom local post-processing {started | completed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Excess[\s]+Cash[\s]+custom[\s]+local[\s]+post\-processing[\s]+(started[\s]+|[\s]*completed)$" }
				id => "message-00551:04"
				add_field => {
					"[event][id]" => "00551:04"
					"[rsa][message][id1]" => "00551:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId247
	# line in RSA:  <agent>[<process_id>]: Thin Client session ended from IP <shost> (cn=<interface>)
	else if [logstash][msgparser][id] == "msgParserId247" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Thin Client session ended from IP %{shost} (cn=%{interface})" }
			id => "msgParserId247"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mlal028" {
		# MESSAGE 00554
		# line in RSA:  <agent>[<process_id>]: Thin Client session started from IP <shost> (cn=<interface>) - authorized as member of ABLETC
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Thin Client session started from IP %{shost} (cn=%{interface}) - authorized as member of ABLETC" }
				id => "message-00554"
				add_field => {
					"[event][id]" => "00554"
					"[rsa][message][id1]" => "00554"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00554:01
		# line in RSA:  <agent>[<process_id>]: Thin Client session ended from IP <shost> (cn=<interface>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Thin Client session ended from IP %{shost} (cn=%{interface})" }
				id => "message-00554:01"
				add_field => {
					"[event][id]" => "00554:01"
					"[rsa][message][id1]" => "00554:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00554:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00554:02"
				add_field => {
					"[event][id]" => "00554:02"
					"[rsa][message][id1]" => "00554:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId249
	# line in RSA:  <agent>[<process_id>]: :<action> { -g "<uid>" -s "<application>" | -c "<user_fullname>" | -g "<uid>" } "<username>": <param>
	else if [logstash][msgparser][id] == "msgParserId249" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+:(?<action>[^\s]*)[\s]+([\s]*\-g[\s]+\"(?<uid>[^\"]*)\"[\s]+\-s[\s]+\"(?<application>[^\"]*)\"[\s]+|[\s]*\-c[\s]+\"(?<user_fullname>[^\"]*)\"[\s]+|[\s]*\-g[\s]+\"(?<uid>[^\"]*)\"[\s]+)[\s]+\"(?<username>[^\"]*)\":[\s]+(?<param>.*)$" }
			id => "msgParserId249"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "modify user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId250
	# line in RSA:  <agent>::<application>(): <event_description>
	else if [logstash][msgparser][id] == "msgParserId250" {
		dissect {
			mapping => { "message" => "%{agent}::%{application}(): %{event_description}" }
			id => "msgParserId250"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId251
	# line in RSA: <agent>: <interface>: <event_description>,ppid=<fld0>, <directory>
	else if [logstash][msgparser][id] == "msgParserId251" {
		dissect {
			mapping => { "message" => "%{agent}: %{interface}: %{event_description},ppid=%{fld0}, %{directory}" }
			id => "msgParserId251"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId252
	# line in RSA:  <agent>: { <event_description>: | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId252" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId252"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId253
	# line in RSA: <agent>[<process_id>]: NOTICE: User <change_old> on <interface> changing id to <change_new>
	else if [logstash][msgparser][id] == "msgParserId253" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: NOTICE: User %{change_old} on %{interface} changing id to %{change_new}" }
			id => "msgParserId253"
			add_field => {
				"change_attribute" => " Username"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId254
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application>(<result>) TLI error 6
	else if [logstash][msgparser][id] == "msgParserId254" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\(]*)\((?<result>[^\)]*)\)[\s]+TLI[\s]+error[\s]+6$" }
			id => "msgParserId254"
			add_field => {
				"event_description" => "TLI error 6"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId255
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } can not bind socket <fld1> (<info>): <result>
	else if [logstash][msgparser][id] == "msgParserId255" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+can[\s]+not[\s]+bind[\s]+socket[\s]+(?<fld1>[^\s]*)[\s]+\((?<info>[^\)]*)\):[\s]+(?<result>.*)$" }
			id => "msgParserId255"
			add_field => {
				"event_description" => "can not bind socket"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId256
	# line in RSA:  NOTICE <device> Switch OS <<<agent>>: <action>
	else if [logstash][msgparser][id] == "msgParserId256" {
		dissect {
			mapping => { "message" => "NOTICE %{device} Switch OS <%{agent}>: %{action}" }
			id => "msgParserId256"
			add_field => {
				"event_description" => "Switch NOTICE"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nrpe" {
		# MESSAGE 00457
		# line in RSA:  <agent>[<process_id>]: Connection from <saddr> port <sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr} port %{sport}" }
				id => "message-00457"
				add_field => {
				"ntype" => "21"
				"event_description" => "connection"
					"[event][id]" => "00457"
					"[rsa][message][id1]" => "00457"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00457:01
		# line in RSA:  <agent>[<process_id>]: Connection from <saddr> closed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr} closed" }
				id => "message-00457:01"
				add_field => {
				"event_description" => "connection closed"
					"[event][id]" => "00457:01"
					"[rsa][message][id1]" => "00457:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00457:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00457:02"
				add_field => {
					"[event][id]" => "00457:02"
					"[rsa][message][id1]" => "00457:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpd" {
		# MESSAGE 00023:01
		# line in RSA: <agent>[<process_id>]: synchronized to <hostip>, stratum <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: synchronized to %{hostip}, stratum %{fld2}" }
				id => "message-00023:01"
				add_field => {
					"[event][id]" => "00023:01"
					"[rsa][message][id1]" => "00023:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 00023
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00023"
				add_field => {
					"[event][id]" => "00023"
					"[rsa][message][id1]" => "00023"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId260
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } (log:<obj_name>) Fatal Error occured in file <filename>, <info>: <result>
	else if [logstash][msgparser][id] == "msgParserId260" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\(log:(?<obj_name>[^\)]*)\)[\s]+Fatal[\s]+Error[\s]+occured[\s]+in[\s]+file[\s]+(?<filename>[^,]*),[\s]+(?<info>[^:]*):[\s]+(?<result>.*)$" }
			id => "msgParserId260"
			add_field => {
				"event_description" => "Fatal Error occured in file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId261
	# line in RSA:  <agent>[<process_id>]: <event_time_string> GGS { WARNING | INFO | ERROR } <resultcode> Oracle GoldenGate { Command Interpreter | Capture | Delivery | Manager } for { Oracle, <application>: | Oracle: } { <action>, <info> | <info> }
	else if [logstash][msgparser][id] == "msgParserId261" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_time_string>[^\s]*)[\s]+GGS[\s]+([\s]*WARNING[\s]+|[\s]*INFO[\s]+|[\s]*ERROR[\s]+)[\s]+(?<resultcode>[^\s]*)[\s]+Oracle[\s]+GoldenGate[\s]+([\s]*Command[\s]+Interpreter[\s]+|[\s]*Capture[\s]+|[\s]*Delivery[\s]+|[\s]*Manager[\s]+)[\s]+for[\s]+([\s]*Oracle,[\s]+(?<application>[^:]*):[\s]+|[\s]*Oracle:[\s]+)[\s]+([\s]*(?<action>[^,]*),[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId261"
			add_field => {
				"event_description" => "Oracle GoldenGate activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId262
	# line in RSA:  <agent>[<process_id>]: os_mibs WARNING <interface>: <info>
	else if [logstash][msgparser][id] == "msgParserId262" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: os_mibs WARNING %{interface}: %{info}" }
			id => "msgParserId262"
			add_field => {
				"event_description" => "os_mibs warning"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "oserv94" {
		# MESSAGE 00781
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <process> killed by signal <dclass_counter1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\s]*)[\s]+killed[\s]+by[\s]+signal[\s]+(?<dclass_counter1>.*)$" }
				id => "message-00781"
				add_field => {
				"event_description" => "process killed by signal"
					"[event][id]" => "00781"
					"[rsa][message][id1]" => "00781"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00781:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <action>: <space> Invalid password for <username> from host <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<action>[^:]*):[\s]+(?<space>[^\s]*)[\s]+Invalid[\s]+password[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+host[\s]+(?<shost>.*)$" }
				id => "message-00781:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Invalid password for user from host"
					"[event][id]" => "00781:01"
					"[rsa][message][id1]" => "00781:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00781:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00781:02"
				add_field => {
					"[event][id]" => "00781:02"
					"[rsa][message][id1]" => "00781:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId265
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_time_string> {info | warning } <event_description>
	else if [logstash][msgparser][id] == "msgParserId265" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_time_string>[^\s]*)[\s]+(info[\s]+|[\s]*warning[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId265"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM" {
		# MESSAGE 00289
		# line in RSA: <agent>: + <interface> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: + %{interface} %{username}-%{c_username}" }
				id => "message-00289"
				add_field => {
					"[event][id]" => "00289"
					"[rsa][message][id1]" => "00289"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:01
		# line in RSA:  <agent>: <interface>: Incorrect NT password for username : <username>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: Incorrect NT password for username : %{username}" }
				id => "message-00289:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "Incorrect NT password"
					"[event][id]" => "00289:01"
					"[rsa][message][id1]" => "00289:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:02
		# line in RSA:   <agent>: cannot stat private access file <directory>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: cannot stat private access file %{directory}: %{result}" }
				id => "message-00289:02"
				add_field => {
				"event_description" => "cannot stat private access file"
					"[event][id]" => "00289:02"
					"[rsa][message][id1]" => "00289:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:03
		# line in RSA:   <agent>: <space> PAM_ERROR_MSG: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} PAM_ERROR_MSG: %{result}" }
				id => "message-00289:03"
				add_field => {
				"event_description" => "PAM_ERROR_MSG"
					"[event][id]" => "00289:03"
					"[rsa][message][id1]" => "00289:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:04
		# line in RSA:   <agent>: <space> PAM_TEXT_INFO: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} PAM_TEXT_INFO: %{info}" }
				id => "message-00289:04"
				add_field => {
				"event_description" => "PAM_TEXT_INFO"
					"[event][id]" => "00289:04"
					"[rsa][message][id1]" => "00289:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:05
		# line in RSA: <agent>: FTP LOGIN FROM <shost> [<saddr>], <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FTP LOGIN FROM %{shost} [%{saddr}], %{username}" }
				id => "message-00289:05"
				add_field => {
				"ntype" => "21"
					"[event][id]" => "00289:05"
					"[rsa][message][id1]" => "00289:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:06
		# line in RSA:   PAM: { FTP session closed | PWD | LIST | TYPE | CWD | REST | SYST | USER | PASS } <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*PAM:[\s]+([\s]*FTP[\s]+session[\s]+closed[\s]+|[\s]*PWD[\s]+|[\s]*LIST[\s]+|[\s]*TYPE[\s]+|[\s]*CWD[\s]+|[\s]*REST[\s]+|[\s]*SYST[\s]+|[\s]*USER[\s]+|[\s]*PASS[\s]+)[\s]+(?<info>.*)$" }
				id => "message-00289:06"
				add_field => {
				"event_description" => "PAM info"
					"[event][id]" => "00289:06"
					"[rsa][message][id1]" => "00289:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:07
		# line in RSA:   PAM: { NOOP | PORT | STOR | PASV | QUIT } <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*PAM:[\s]+([\s]*NOOP[\s]+|[\s]*PORT[\s]+|[\s]*STOR[\s]+|[\s]*PASV[\s]+|[\s]*QUIT[\s]+)[\s]+(?<info>.*)$" }
				id => "message-00289:07"
				add_field => {
				"event_description" => "PAM info"
					"[event][id]" => "00289:07"
					"[rsa][message][id1]" => "00289:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:08
		# line in RSA:  <agent>: FTP LOGIN REFUSED (<result>) FROM <saddr> [<shost>], <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FTP LOGIN REFUSED (%{result}) FROM %{saddr} [%{shost}], %{username}" }
				id => "message-00289:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "FTP LOGIN REFUSED"
				"ntype" => "22"
					"[event][id]" => "00289:08"
					"[rsa][message][id1]" => "00289:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:09
		# line in RSA:  <agent>: User <username>: Login incorrect 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: User %{username}: Login incorrect" }
				id => "message-00289:09"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"result" => "incorrect login"
				"event_description" => "login incorrect"
					"[event][id]" => "00289:09"
					"[rsa][message][id1]" => "00289:09"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:10
		# line in RSA:  PAM: cmd failure - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAM: cmd failure - %{result}" }
				id => "message-00289:10"
				add_field => {
				"event_description" => "PAM cmd failure"
					"[event][id]" => "00289:10"
					"[rsa][message][id1]" => "00289:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:11
		# line in RSA:  <agent>: sleeping: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: sleeping: %{event_description}: %{result}" }
				id => "message-00289:11"
				add_field => {
					"[event][id]" => "00289:11"
					"[rsa][message][id1]" => "00289:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:12
		# line in RSA:   PAM: - <info> <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAM: - %{info} %{username}" }
				id => "message-00289:12"
				add_field => {
				"event_description" => "PAM info"
					"[event][id]" => "00289:12"
					"[rsa][message][id1]" => "00289:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "passwd" {
		# MESSAGE 00381
		# line in RSA:  <agent>[<process_id>]: pam_chauthtok: error <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_chauthtok: error %{result}" }
				id => "message-00381"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"ntype" => "22"
					"[event][id]" => "00381"
					"[rsa][message][id1]" => "00381"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00381:01
		# line in RSA:  <agent>[<process_id>]: Password aging changed on <shost> for <username> by <administrator> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password aging changed on %{shost} for %{username} by %{administrator}" }
				id => "message-00381:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_description" => "password aging change"
					"[event][id]" => "00381:01"
					"[rsa][message][id1]" => "00381:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00381:02
		# line in RSA:  <agent>[<process_id>]: Password changed on <shost> for <username> by <administrator> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password changed on %{shost} for %{username} by %{administrator}" }
				id => "message-00381:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_description" => "password change"
					"[event][id]" => "00381:02"
					"[rsa][message][id1]" => "00381:02"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00381:03
		# line in RSA:  <agent>[<process_id>]: <severity> pam User Initiated password change for user '<username>': <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} pam User Initiated password change for user '%{username}': %{result}" }
				id => "message-00381:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_description" => "Initiated password change"
					"[event][id]" => "00381:03"
					"[rsa][message][id1]" => "00381:03"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00381:04
		# line in RSA:  <agent>[<process_id>]: <severity> pam Change password for user '<username>': <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} pam Change password for user '%{username}': %{result}" }
				id => "message-00381:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Change password for user"
					"[event][id]" => "00381:04"
					"[rsa][message][id1]" => "00381:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pblocald3.2.1-01" {
		# MESSAGE 00705
		# line in RSA: <agent>: <fld1> Confirm failed, user: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Confirm failed, user: %{username}" }
				id => "message-00705"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Confirm User failed"
					"[event][id]" => "00705"
					"[rsa][message][id1]" => "00705"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00705:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00705:01"
				add_field => {
					"[event][id]" => "00705:01"
					"[rsa][message][id1]" => "00705:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA:  <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId285"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pblocald5.1.2-06" {
		# MESSAGE 00790
		# line in RSA:  <agent>: [<process_id>] <fld1> data problem in readMuxData <device>. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{process_id}] %{fld1} data problem in readMuxData %{device}. %{result}" }
				id => "message-00790"
				add_field => {
				"event_description" => "data problem in readMuxData"
					"[event][id]" => "00790"
					"[rsa][message][id1]" => "00790"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00386:01
		# line in RSA:  <agent>: [<process_id>] pbrun terminated: signal 1 (<severity>) <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{process_id}] pbrun terminated: signal 1 (%{severity}) %{result}" }
				id => "message-00386:01"
				add_field => {
				"event_description" => "pbrun terminated"
					"[event][id]" => "00386:01"
					"[rsa][message][id1]" => "00386:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId288
	# line in RSA:  <agent>: *** ERROR<fld1>*** <event_description> 
	else if [logstash][msgparser][id] == "msgParserId288" {
		dissect {
			mapping => { "message" => "%{agent}: *** ERROR%{fld1}*** %{event_description}" }
			id => "msgParserId288"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pbrun3.2.1-01" {
		# MESSAGE 00703
		# line in RSA: <agent>: <fld1> Unknown host: <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Unknown host: %{shost}" }
				id => "message-00703"
				add_field => {
				"event_description" => "Unknown host"
					"[event][id]" => "00703"
					"[rsa][message][id1]" => "00703"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00703:01
		# line in RSA: <agent>: ConfirmUser <username> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ConfirmUser %{username} failed" }
				id => "message-00703:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"event_description" => "Confirm User failed"
					"[event][id]" => "00703:01"
					"[rsa][message][id1]" => "00703:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00703:02
		# line in RSA: <agent>: <fld1> Exec of <fld2> failed: <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Exec of %{fld2} failed: %{result}." }
				id => "message-00703:02"
				add_field => {
				"event_description" => "Exec failed"
					"[event][id]" => "00703:02"
					"[rsa][message][id1]" => "00703:02"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00703:03
		# line in RSA: <agent>: <fld1> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{info}" }
				id => "message-00703:03"
				add_field => {
					"[event][id]" => "00703:03"
					"[rsa][message][id1]" => "00703:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA: <agent>: [<fld1>] <fld2> <info>
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld1}] %{fld2} %{info}" }
			id => "msgParserId293"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA:  <agent>: [<process_id>]  <event_description>
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}]  %{event_description}" }
			id => "msgParserId294"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA:  <agent>[<process_id>]: Error: <event_description> (<result>)
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Error: %{event_description} (%{result})" }
			id => "msgParserId295"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA: PLATFORM: <fld1>, CSN: <fld2>, HOSTNAME: <shost>
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "PLATFORM: %{fld1}, CSN: %{fld2}, HOSTNAME: %{shost}" }
			id => "msgParserId296"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA:  <agent> (<fld1>): accepted ssh <username> from <shost> to <dhost>
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "%{agent} (%{fld1}): accepted ssh %{username} from %{shost} to %{dhost}" }
			id => "msgParserId297"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "accepted ssh session"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "proftpd" {
		# MESSAGE 00139
		# line in RSA:  <agent>[<process_id>]: <shost> (<saddr>[<fld1>]) - USER <username> (Login failed): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost} (%{saddr}[%{fld1}]) - USER %{username} (Login failed): %{result}" }
				id => "message-00139"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Login failed"
				"protocol" => "FTP"
				"ntype" => "22"
					"[event][id]" => "00139"
					"[rsa][message][id1]" => "00139"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:01
		# line in RSA:  <agent>[<process_id>]: <shost> (<saddr>[<fld1>]) - USER <username>: Login successful
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost} (%{saddr}[%{fld1}]) - USER %{username}: Login successful" }
				id => "message-00139:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"ntype" => "21"
					"[event][id]" => "00139:01"
					"[rsa][message][id1]" => "00139:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00139:02"
				add_field => {
					"[event][id]" => "00139:02"
					"[rsa][message][id1]" => "00139:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "QuickDNS" {
		# MESSAGE 00706
		# line in RSA: <agent> Remote[<fld2>]: Connection request from [<saddr>]. Currently <fld3> connection(s) open.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{fld2}]: Connection request from [%{saddr}]. Currently %{fld3} connection(s) open." }
				id => "message-00706"
				add_field => {
					"[event][id]" => "00706"
					"[rsa][message][id1]" => "00706"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:01
		# line in RSA: <agent> Remote[<fld2>]: Login request for user "<username>" as "<shost>" from [<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{fld2}]: Login request for user \"%{username}\" as \"%{shost}\" from [%{saddr}]." }
				id => "message-00706:01"
				add_field => {
				"event_description" => "Login request"
					"[event][id]" => "00706:01"
					"[rsa][message][id1]" => "00706:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:02
		# line in RSA: <agent> Remote[<fld2>]: User "<username>" as "<shost>" logged in from [<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{fld2}]: User \"%{username}\" as \"%{shost}\" logged in from [%{saddr}]." }
				id => "message-00706:02"
				add_field => {
				"event_description" => "Login request"
					"[event][id]" => "00706:02"
					"[rsa][message][id1]" => "00706:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:03
		# line in RSA: <agent> Remote[<fld2>]: Connection close from [<shost>:<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{fld2}]: Connection close from [%{shost}:%{saddr}]." }
				id => "message-00706:03"
				add_field => {
				"event_description" => "Connection close "
					"[event][id]" => "00706:03"
					"[rsa][message][id1]" => "00706:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:04
		# line in RSA: <agent> Remote[<fld2>]: { Update | Reloading | Disable } zone "<fld1>" request from [<shost>:<saddr>].
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+Remote\[(?<fld2>[^\]]*)\]:[\s]+([\s]*Update[\s]+|[\s]*Reloading[\s]+|[\s]*Disable[\s]+)[\s]+zone[\s]+\"(?<fld1>[^\"]*)\"[\s]+request[\s]+from[\s]+\[(?<shost>[^:]*):(?<saddr>[^\]]*)\]\.$" }
				id => "message-00706:04"
				add_field => {
					"[event][id]" => "00706:04"
					"[rsa][message][id1]" => "00706:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:05
		# line in RSA: <agent> Remote[<fld2>]: Zone "<fld1>"{ changed | updated | reloaded | disabled } by [<shost>:<saddr>].
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+Remote\[(?<fld2>[^\]]*)\]:[\s]+Zone[\s]+\"(?<fld1>[^\"]*)\"([\s]*changed[\s]+|[\s]*updated[\s]+|[\s]*reloaded[\s]+|[\s]*disabled[\s]+)[\s]+by[\s]+\[(?<shost>[^:]*):(?<saddr>[^\]]*)\]\.$" }
				id => "message-00706:05"
				add_field => {
					"[event][id]" => "00706:05"
					"[rsa][message][id1]" => "00706:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:06
		# line in RSA: <agent> Remote[<fld2>]: Update reverse records request from [<shost>:<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{fld2}]: Update reverse records request from [%{shost}:%{saddr}]." }
				id => "message-00706:06"
				add_field => {
					"[event][id]" => "00706:06"
					"[rsa][message][id1]" => "00706:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00706:07
		# line in RSA: <agent> Remote[<fld2>]: Reverse records updated by [<shost>:<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{fld2}]: Reverse records updated by [%{shost}:%{saddr}]." }
				id => "message-00706:07"
				add_field => {
					"[event][id]" => "00706:07"
					"[rsa][message][id1]" => "00706:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId308
	# line in RSA:  <agent>: <event_time_string>, [<severity>], <fld1>, WWN <macaddr>, { INFO, | WARNING, } <device>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId308" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<event_time_string>[^,]*),[\s]+\[(?<severity>[^\]]*)\],[\s]+(?<fld1>[^,]*),[\s]+WWN[\s]+(?<macaddr>[^,]*),[\s]+([\s]*INFO,[\s]+|[\s]*WARNING,[\s]+)[\s]+(?<device>[^,]*),[\s]+(?<event_description>.*)$" }
			id => "msgParserId308"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId309
	# line in RSA: reboot: rebooted by <username>
	else if [logstash][msgparser][id] == "msgParserId309" {
		dissect {
			mapping => { "message" => "reboot: rebooted by %{username}" }
			id => "msgParserId309"
			add_field => {
				"event_description" => "reboot by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Reload command received. <result> (<fld1>)
	else if [logstash][msgparser][id] == "msgParserId310" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Reload[\s]+command[\s]+received\.[\s]+(?<result>[^\s]*)[\s]+\((?<fld1>[^\)]*)\)$" }
			id => "msgParserId310"
			add_field => {
				"event_description" => "Reload command received"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "recserv" {
		# MESSAGE 01045
		# line in RSA:  <agent>[<process_id>]: allowed connection from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: allowed connection from %{saddr}" }
				id => "message-01045"
				add_field => {
				"event_description" => "allowed connection"
					"[event][id]" => "01045"
					"[rsa][message][id1]" => "01045"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01045:01
		# line in RSA: <agent>[<fld2>]: Unable to open <directory> : <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: Unable to open %{directory} : %{result}" }
				id => "message-01045:01"
				add_field => {
				"event_description" => "Unable to open"
					"[event][id]" => "01045:01"
					"[rsa][message][id1]" => "01045:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01045:02
		# line in RSA: <agent>[<fld2>]: <severity>: can't get client address: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: %{severity}: can't get client address: %{result}" }
				id => "message-01045:02"
				add_field => {
				"event_description" => "can't get client address"
					"[event][id]" => "01045:02"
					"[rsa][message][id1]" => "01045:02"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId311
	# line in RSA:  Resetting scsi bus, <result> from (<device>)<event_description>
	else if [logstash][msgparser][id] == "msgParserId311" {
		dissect {
			mapping => { "message" => "Resetting scsi bus, %{result} from (%{device})%{event_description}" }
			id => "msgParserId311"
			add_field => {
				"event_description" => "Resetting scsi bus"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId312"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rlpdaemon" {
		# MESSAGE 01079
		# line in RSA: <agent>[<fld2>]: <severity>: can't get client address: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: %{severity}: can't get client address: %{result}" }
				id => "message-01079"
				add_field => {
				"event_description" => "can't get client address"
					"[event][id]" => "01079"
					"[rsa][message][id1]" => "01079"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00373
		# line in RSA:   <agent>[<process_id>]: <event_description> from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} from %{shost}" }
				id => "message-00373"
				add_field => {
					"[event][id]" => "00373"
					"[rsa][message][id1]" => "00373"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA:  <agent>[<process_id>]: bad metric <interface> from <saddr> for destination <daddr>
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: bad metric %{interface} from %{saddr} for destination %{daddr}" }
			id => "msgParserId314"
			add_field => {
				"event_description" => "routing - bad metric"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA:  <agent>[<process_id>]: allowed connection from <saddr>
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: allowed connection from %{saddr}" }
			id => "msgParserId125"
			add_field => {
				"event_description" => "allowed connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA:  <agent>[<process_id>]: <interface>: error <result> 
	else if [logstash][msgparser][id] == "msgParserId315" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: error %{result}" }
			id => "msgParserId315"
			add_field => {
				"event_description" => "rsh error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rsyncd" {
		# MESSAGE 01121
		# line in RSA: <agent>[<process_id>]: <fld1> {: unable | - Unable} to open configuration file "<filename>": <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^\s]*)[\s]+(:[\s]+unable[\s]+|[\s]*\-[\s]+Unable)[\s]+to[\s]+open[\s]+configuration[\s]+file[\s]+\"(?<filename>[^\"]*)\":[\s]+(?<result>.*)$" }
				id => "message-01121"
				add_field => {
					"[event][id]" => "01121"
					"[rsa][message][id1]" => "01121"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01122
		# line in RSA: <agent>[<process_id>]: <fld1>: syntax or usage error (code <resultcode>) <filename>(<fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: syntax or usage error (code %{resultcode}) %{filename}(%{fld2})" }
				id => "message-01122"
				add_field => {
					"[event][id]" => "01122"
					"[rsa][message][id1]" => "01122"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPBPA_00" {
		# MESSAGE 01131
		# line in RSA:  <agent>[<process_id>]: Unable to open trace file <filename>. (Error <resultcode> <result>) [<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to open trace file %{filename}. (Error %{resultcode} %{result}) [%{info}]" }
				id => "message-01131"
				add_field => {
				"event_description" => "Unable to open trace file"
					"[event][id]" => "01131"
					"[rsa][message][id1]" => "01131"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01140
		# line in RSA:  <agent>[<process_id>]: sapstartsrv stopped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sapstartsrv stopped" }
				id => "message-01140"
				add_field => {
				"event_description" => "sapstartsrv stopped"
					"[event][id]" => "01140"
					"[rsa][message][id1]" => "01140"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01141
		# line in RSA:  <agent>[<process_id>]: SAP Service <fld1> successfully started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SAP Service %{fld1} successfully started." }
				id => "message-01141"
				add_field => {
					"[event][id]" => "01141"
					"[rsa][message][id1]" => "01141"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPBPA_10" {
		# MESSAGE 01139
		# line in RSA:  <agent>[<process_id>]: sapstartsrv stopped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sapstartsrv stopped" }
				id => "message-01139"
				add_field => {
				"event_description" => "sapstartsrv stopped"
					"[event][id]" => "01139"
					"[rsa][message][id1]" => "01139"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01142
		# line in RSA:  <agent>[<process_id>]: SAP Service <fld1> successfully started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SAP Service %{fld1} successfully started." }
				id => "message-01142"
				add_field => {
					"[event][id]" => "01142"
					"[rsa][message][id1]" => "01142"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01153
		# line in RSA:  <agent>[<process_id>]: Unable to open trace file <filename>. (<result>) [<fld3>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to open trace file %{filename}. (%{result}) [%{fld3}]" }
				id => "message-01153"
				add_field => {
				"event_description" => "Unable to open trace file"
					"[event][id]" => "01153"
					"[rsa][message][id1]" => "01153"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPBQA_00" {
		# MESSAGE 00654
		# line in RSA:  <agent>[<process_id>]: Unable to open trace file <filename>. (<result>) [<fld3>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to open trace file %{filename}. (%{result}) [%{fld3}]" }
				id => "message-00654"
				add_field => {
				"event_description" => "Unable to open trace file"
					"[event][id]" => "00654"
					"[rsa][message][id1]" => "00654"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00670
		# line in RSA:  <agent>[<process_id>]: { <event_description>. | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^\.]*)\.[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-00670"
				add_field => {
					"[event][id]" => "00670"
					"[rsa][message][id1]" => "00670"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId322
	# line in RSA:  <agent>[<process_id>]: { <event_description>. | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId322" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^\.]*)\.[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId322"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId323
	# line in RSA:  <agent>[<process_id>]: { <event_description>. <info> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId323" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^\.]*)\.[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId323"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId324
	# line in RSA:  <agent>[<process_id>]: { error <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId324" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*error[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId324"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId325
	# line in RSA:  <agent>: (<resultcode>) ERROR : RADIUS server error: <result>
	else if [logstash][msgparser][id] == "msgParserId325" {
		dissect {
			mapping => { "message" => "%{agent}: (%{resultcode}) ERROR : RADIUS server error: %{result}" }
			id => "msgParserId325"
			add_field => {
				"event_description" => "RADIUS server error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId326
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId326" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId326"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA:   <agent>[<process_id>]: ERROR: sepmdpull, Failed to connect to <shost>
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: ERROR: sepmdpull, Failed to connect to %{shost}" }
			id => "msgParserId327"
			add_field => {
				"event_description" => "connection failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE 00228
		# line in RSA:  <agent>[<process_id>]: Warn  License HostIPAddress <saddr> does not match any address for host <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Warn  License HostIPAddress %{saddr} does not match any address for host %{hostname}" }
				id => "message-00228"
				add_field => {
				"event_description" => "Invalid License Hostname"
					"[event][id]" => "00228"
					"[rsa][message][id1]" => "00228"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00228:01
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00228:01"
				add_field => {
					"[event][id]" => "00228:01"
					"[rsa][message][id1]" => "00228:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sftp" {
		# MESSAGE 00667
		# line in RSA:  <agent>[<process_id>]: error Can't rename file "<change_old>" to "<change_new>": <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error Can't rename file \"%{change_old}\" to \"%{change_new}\": %{result}." }
				id => "message-00667"
				add_field => {
				"change_attribute" => " File name"
				"event_description" => "Can't rename file"
					"[event][id]" => "00667"
					"[rsa][message][id1]" => "00667"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00668
		# line in RSA:  <agent>[<process_id>]: error child process (<interface>) exited with code <resultcode>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error child process (%{interface}) exited with code %{resultcode}." }
				id => "message-00668"
				add_field => {
				"event_description" => "child process error"
					"[event][id]" => "00668"
					"[rsa][message][id1]" => "00668"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01129
		# line in RSA:  <agent>[<process_id>]: error Warning: stat failed for path '<filename>' with error (<result>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error Warning: stat failed for path '%{filename}' with error (%{result})." }
				id => "message-01129"
				add_field => {
				"event_description" => "error Warning: stat failed"
					"[event][id]" => "01129"
					"[rsa][message][id1]" => "01129"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01130
		# line in RSA:  <agent>[<process_id>]: error Can't setstat on "<filename>": <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error Can't setstat on \"%{filename}\": %{result}" }
				id => "message-01130"
				add_field => {
				"event_description" => "error Can't setstat"
					"[event][id]" => "01130"
					"[rsa][message][id1]" => "01130"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01135
		# line in RSA:  <agent>[<process_id>]: error Unable to change directory from "<change_old>" to "<change_new>": server returned "<result>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error Unable to change directory from \"%{change_old}\" to \"%{change_new}\": server returned \"%{result}\"" }
				id => "message-01135"
				add_field => {
				"event_description" => "Unable to change directory"
					"[event][id]" => "01135"
					"[rsa][message][id1]" => "01135"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01137
		# line in RSA:  <agent>[<process_id>]: error <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error %{result}" }
				id => "message-01137"
				add_field => {
				"event_description" => "Invalid command"
					"[event][id]" => "01137"
					"[rsa][message][id1]" => "01137"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId336
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Permission denied to <hostname>
	else if [logstash][msgparser][id] == "msgParserId336" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Permission[\s]+denied[\s]+to[\s]+(?<hostname>.*)$" }
			id => "msgParserId336"
			add_field => {
				"event_description" => "Permission denied to host"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId337
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application>:  not found
	else if [logstash][msgparser][id] == "msgParserId337" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+not[\s]+found$" }
			id => "msgParserId337"
			add_field => {
				"event_description" => "program not found"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId338
	# line in RSA: shutdown: {halt | reboot } by <username>:
	else if [logstash][msgparser][id] == "msgParserId338" {
		grok {
			match => { "message" => "^shutdown:[\s]+(halt[\s]+|[\s]*reboot[\s]+)[\s]+by[\s]+(?<username>[^:]*):$" }
			id => "msgParserId338"
			add_field => {
				"event_description" => "reboot by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId339
	# line in RSA: <agent>[<process_id>]: Connection from <saddr>, Login <username>
	else if [logstash][msgparser][id] == "msgParserId339" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr}, Login %{username}" }
			id => "msgParserId339"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId340
	# line in RSA:  <agent>[<process_id>]: Connection from <saddr>, Login <username>
	else if [logstash][msgparser][id] == "msgParserId340" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr}, Login %{username}" }
			id => "msgParserId340"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
				"ntype" => "21"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId341
	# line in RSA:  <agent>[<process_id>]: <info> 
	else if [logstash][msgparser][id] == "msgParserId341" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
			id => "msgParserId341"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId342
	# line in RSA:  <agent>[<process_id>]: NET-SNMP version <version>
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: NET-SNMP version %{version}" }
			id => "msgParserId342"
			add_field => {
				"event_description" => "NET-SNMP version"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "snmpdx" {
		# MESSAGE 00276
		# line in RSA: <agent>: error while receiving a pdu from <shost>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: error while receiving a pdu from %{shost}: %{result}" }
				id => "message-00276"
				add_field => {
				"event_description" => "error receiving pdu"
					"[event][id]" => "00276"
					"[rsa][message][id1]" => "00276"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00276:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00276:01"
				add_field => {
					"[event][id]" => "00276:01"
					"[rsa][message][id1]" => "00276:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId344
	# line in RSA: SOURCE: <shost>, REV: <version>
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "SOURCE: %{shost}, REV: %{version}" }
			id => "msgParserId344"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SQLAnywhere" {
		# MESSAGE 00446
		# line in RSA:  <agent>(<shost>): <event_description> of "<interface>" (<fld1>) at <recorded_time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{shost}): %{event_description} of \"%{interface}\" (%{fld1}) at %{recorded_time}" }
				id => "message-00446"
				add_field => {
					"[event][id]" => "00446"
					"[rsa][message][id1]" => "00446"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:01
		# line in RSA:  <agent>(<shost>): other written agreement specifying the Government's rights to use the
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{shost}): other written agreement specifying the Government's rights to use the" }
				id => "message-00446:01"
				add_field => {
					"[event][id]" => "00446:01"
					"[rsa][message][id1]" => "00446:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:02
		# line in RSA: <agent>(<shost>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{shost}): %{event_description}" }
				id => "message-00446:02"
				add_field => {
					"[event][id]" => "00446:02"
					"[rsa][message][id1]" => "00446:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh" {
		# MESSAGE 00817
		# line in RSA:  <agent>[<process_id>]: <process>: <application> unexpected failure in ELF signature verification. <info>. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{application} unexpected failure in ELF signature verification. %{info}. %{result}" }
				id => "message-00817"
				add_field => {
				"event_description" => "unexpected failure in ELF signature verification"
					"[event][id]" => "00817"
					"[rsa][message][id1]" => "00817"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00818
		# line in RSA:  <agent>[<process_id>]: <process>: Unable to contact kcfd: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Unable to contact kcfd: %{result}" }
				id => "message-00818"
				add_field => {
				"event_description" => "Unable to contact kcfd"
					"[event][id]" => "00818"
					"[rsa][message][id1]" => "00818"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00657
		# line in RSA:  <agent>[<process_id>]: { error | fatal } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*error[\s]+|[\s]*fatal[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00657"
				add_field => {
					"[event][id]" => "00657"
					"[rsa][message][id1]" => "00657"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00658
		# line in RSA:  <agent>[<process_id>]: info <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: info %{event_description}" }
				id => "message-00658"
				add_field => {
					"[event][id]" => "00658"
					"[rsa][message][id1]" => "00658"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-broker-g3" {
		# MESSAGE 00702
		# line in RSA: <agent>: <fld1> <service>, Type: <fld3> Init info: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service}, Type: %{fld3} Init info: %{info}" }
				id => "message-00702"
				add_field => {
					"[event][id]" => "00702"
					"[rsa][message][id1]" => "00702"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00702:01
		# line in RSA: <agent>: <fld1> <service>, Key path: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service}, Key path: %{info}" }
				id => "message-00702:01"
				add_field => {
					"[event][id]" => "00702:01"
					"[rsa][message][id1]" => "00702:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00702:02
		# line in RSA: <agent>: <fld1> <service>, Local username: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service}, Local username: %{username}" }
				id => "message-00702:02"
				add_field => {
					"[event][id]" => "00702:02"
					"[rsa][message][id1]" => "00702:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00702:03
		# line in RSA: <agent>: <fld1> <service> "<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service} \"%{info}\"" }
				id => "message-00702:03"
				add_field => {
					"[event][id]" => "00702:03"
					"[rsa][message][id1]" => "00702:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00702:04
		# line in RSA: <agent>: <fld1> <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service}" }
				id => "message-00702:04"
				add_field => {
					"[event][id]" => "00702:04"
					"[rsa][message][id1]" => "00702:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-certd" {
		# MESSAGE 00707
		# line in RSA: <agent>[<fld2>]: <severity>: Can not bind local address <shost>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: %{severity}: Can not bind local address %{shost}: %{result}" }
				id => "message-00707"
				add_field => {
				"event_description" => "Can not bind local address"
					"[event][id]" => "00707"
					"[rsa][message][id1]" => "00707"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00707:01
		# line in RSA: <agent>[<fld2>]: Opening listener at <shost> failed. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: Opening listener at %{shost} failed." }
				id => "message-00707:01"
				add_field => {
				"event_description" => "Opening listener failed"
					"[event][id]" => "00707:01"
					"[rsa][message][id1]" => "00707:01"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00707:02
		# line in RSA: <agent>[<fld2>]: <severity>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: %{severity}: %{result}" }
				id => "message-00707:02"
				add_field => {
					"[event][id]" => "00707:02"
					"[rsa][message][id1]" => "00707:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00707:03
		# line in RSA: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00707:03"
				add_field => {
					"[event][id]" => "00707:03"
					"[rsa][message][id1]" => "00707:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId360
	# line in RSA:  <agent>[<process_id>]: PAM <event_description>[<fld1>]: <result>
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: PAM %{event_description}[%{fld1}]: %{result}" }
			id => "msgParserId360"
			add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-mgmt-agent" {
		# MESSAGE 00708:02
		# line in RSA:  <agent>[<fld1>]: Management Agent <version> not started: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: Management Agent %{version} not started: %{result}" }
				id => "message-00708:02"
				add_field => {
				"event_description" => "Management Agent not started"
					"[event][id]" => "00708:02"
					"[rsa][message][id1]" => "00708:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00708
		# line in RSA: <agent>[<fld1>]: Management Agent <saddr> restarted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: Management Agent %{saddr} restarted" }
				id => "message-00708"
				add_field => {
				"event_description" => " Management agent restarted"
					"[event][id]" => "00708"
					"[rsa][message][id1]" => "00708"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00708:01
		# line in RSA:  <agent>[<fld1>]: Started <service> (pid <fld2>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: Started %{service} (pid %{fld2})" }
				id => "message-00708:01"
				add_field => {
					"[event][id]" => "00708:01"
					"[rsa][message][id1]" => "00708:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-server-g3" {
		# MESSAGE 00700
		# line in RSA:  <agent>: <fld1> <service>, Username: <username>, Algorithm: <encryption_type>, "<result>", Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service}, Username: %{username}, Algorithm: %{encryption_type}, \"%{result}\", Session-Id: %{sessionid}" }
				id => "message-00700"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00700"
					"[rsa][message][id1]" => "00700"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:01
		# line in RSA:  <agent>: <fld1> <service>, Policy name: <policyname>, { Src IP | Src }: <saddr>, Dst IFace: <fld3>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, { Ver: <version>, Session-Id: <sessionid> | Ver: <version> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+(?<service>[^,]*),[\s]+Policy[\s]+name:[\s]+(?<policyname>[^,]*),[\s]+([\s]*Src[\s]+IP[\s]+|[\s]*Src[\s]+):[\s]+(?<saddr>[^,]*),[\s]+Dst[\s]+IFace:[\s]+(?<fld3>[^,]*),[\s]+Dst[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Dst[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+([\s]*Ver:[\s]+(?<version>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+|[\s]*Ver:[\s]+(?<version>[^\s]*)[\s]+)[\s]+$" }
				id => "message-00700:01"
				add_field => {
					"[event][id]" => "00700:01"
					"[rsa][message][id1]" => "00700:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:04
		# line in RSA:  <agent>: <fld1> <service>, Username: <username>, Reason: <result>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{service}, Username: %{username}, Reason: %{result}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, \"%{info}\"" }
				id => "message-00700:04"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00700:04"
					"[rsa][message][id1]" => "00700:04"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:02
		# line in RSA:  <agent>: <fld1> <service>, Reason: <info>, { Src IP | Src }: <saddr>, Dst IFace: <fld3>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, { "<result>", Session-Id: <sessionid> | "<result>" }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+(?<service>[^,]*),[\s]+Reason:[\s]+(?<info>[^,]*),[\s]+([\s]*Src[\s]+IP[\s]+|[\s]*Src[\s]+):[\s]+(?<saddr>[^,]*),[\s]+Dst[\s]+IFace:[\s]+(?<fld3>[^,]*),[\s]+Dst[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Dst[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+([\s]*\"(?<result>[^\"]*)\",[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+|[\s]*\"(?<result>[^\"]*)\"[\s]+)$" }
				id => "message-00700:02"
				add_field => {
					"[event][id]" => "00700:02"
					"[rsa][message][id1]" => "00700:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:03
		# line in RSA:  <agent>: <fld1> <service>, { Username: <username>, <result>, | username: <username>, } { Command: <event_description>, Sub ID: <fld2>, | Sub ID: <fld2>, } Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+(?<service>[^,]*),[\s]+([\s]*Username:[\s]+(?<username>[^,]*),[\s]+(?<result>[^,]*),[\s]+|[\s]*username:[\s]+(?<username>[^,]*),[\s]+)[\s]+([\s]*Command:[\s]+(?<event_description>[^,]*),[\s]+Sub[\s]+ID:[\s]+(?<fld2>[^,]*),[\s]+|[\s]*Sub[\s]+ID:[\s]+(?<fld2>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+$" }
				id => "message-00700:03"
				add_field => {
					"[event][id]" => "00700:03"
					"[rsa][message][id1]" => "00700:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:05
		# line in RSA:  <agent>: <fld1> <service>, Username: <username>,{ File name: <filename>, <result>, | File name: <filename>, } Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+(?<service>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),([\s]*File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+(?<result>[^,]*),[\s]+|[\s]*File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+$" }
				id => "message-00700:05"
				add_field => {
					"[event][id]" => "00700:05"
					"[rsa][message][id1]" => "00700:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:06
		# line in RSA:  <agent>: <fld1> Auth_method_failure, Username: <username>, Auth method: <encryption_type> Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Auth_method_failure, Username: %{username}, Auth method: %{encryption_type} Session-Id: %{sessionid}" }
				id => "message-00700:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Auth_method_failure"
					"[event][id]" => "00700:06"
					"[rsa][message][id1]" => "00700:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:07
		# line in RSA:  <agent>: <fld1> Authentication_block_selected, { Username: <username>, Policy name: <policyname>, | Username: <username>, } Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+Authentication_block_selected,[\s]+([\s]*Username:[\s]+(?<username>[^,]*),[\s]+Policy[\s]+name:[\s]+(?<policyname>[^,]*),[\s]+|[\s]*Username:[\s]+(?<username>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-00700:07"
				add_field => {
				"event_description" => "Authentication_block_selected"
					"[event][id]" => "00700:07"
					"[rsa][message][id1]" => "00700:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:09
		# line in RSA:  <agent>[<process_id>]: debug[<fld2>]: <filename>:<fld3>/<application>: Authorization check failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: debug[%{fld2}]: %{filename}:%{fld3}/%{application}: Authorization check failed" }
				id => "message-00700:09"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "Authorization check failed"
					"[event][id]" => "00700:09"
					"[rsa][message][id1]" => "00700:09"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:08
		# line in RSA:  <agent>: <fld1> Sft_server_starting, "<action>, Username: <username>, Session-Id: <sessionid>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Sft_server_starting, \"%{action}, Username: %{username}, Session-Id: %{sessionid}\"" }
				id => "message-00700:08"
				add_field => {
				"event_description" => "Sft_server_starting"
					"[event][id]" => "00700:08"
					"[rsa][message][id1]" => "00700:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:10
		# line in RSA:  <agent>: <fld1> Key_store_sign, Key path:<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Key_store_sign, Key path:%{info}" }
				id => "message-00700:10"
				add_field => {
				"event_description" => "Key_store_sign"
					"[event][id]" => "00700:10"
					"[rsa][message][id1]" => "00700:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:11
		# line in RSA:  <agent>: gethostbyaddr: <shost> != <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: gethostbyaddr: %{shost} != %{saddr}" }
				id => "message-00700:11"
				add_field => {
				"event_description" => "gethostbyaddr - host address mismatch"
				"service" => "gethostbyaddr"
					"[event][id]" => "00700:11"
					"[rsa][message][id1]" => "00700:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00700:12
		# line in RSA:  <agent>: <shost> Server_running
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{shost} Server_running" }
				id => "message-00700:12"
				add_field => {
				"event_description" => "Server running"
					"[event][id]" => "00700:12"
					"[rsa][message][id1]" => "00700:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh2" {
		# MESSAGE 00665
		# line in RSA:  <agent>[<process_id>]: info <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: info %{event_description}." }
				id => "message-00665"
				add_field => {
					"[event][id]" => "00665"
					"[rsa][message][id1]" => "00665"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00684
		# line in RSA:  <agent>[<process_id>]: error Failed to connect to host <saddr> port <sport>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error Failed to connect to host %{saddr} port %{sport}: %{result}" }
				id => "message-00684"
				add_field => {
				"event_description" => "Failed to connect to host"
					"[event][id]" => "00684"
					"[rsa][message][id1]" => "00684"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01120
		# line in RSA:  <agent>[<process_id>]: fatal Disconnected: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal Disconnected: %{event_description}." }
				id => "message-01120"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "01120"
					"[rsa][message][id1]" => "01120"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd" {
		# MESSAGE 00009
		# line in RSA:  <agent>[<process_id>]: Accepted { publickey | password | keyboard-interactive/pam } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+([\s]*publickey[\s]+|[\s]*password[\s]+|[\s]*keyboard\-interactive/pam[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00009"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "accepted sshd connection"
					"[event][id]" => "00009"
					"[rsa][message][id1]" => "00009"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:01
		# line in RSA:  <agent>[<process_id>]: Failed { password for illegal user | password for invalid user | keyboard-interactive/pam for invalid user | keyboard-interactive/pam for | password for } <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+([\s]*password[\s]+for[\s]+illegal[\s]+user[\s]+|[\s]*password[\s]+for[\s]+invalid[\s]+user[\s]+|[\s]*keyboard\-interactive/pam[\s]+for[\s]+invalid[\s]+user[\s]+|[\s]*keyboard\-interactive/pam[\s]+for[\s]+|[\s]*password[\s]+for[\s]+)[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00009:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"ntype" => "22"
					"[event][id]" => "00009:01"
					"[rsa][message][id1]" => "00009:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:21
		# line in RSA:  <agent>[<process_id>]: Failed none for {invalid user <username>|<username>} from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+none[\s]+for[\s]+(invalid[\s]+user[\s]+(?<username>[^\s]*)|(?<username>[^\s]*))[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00009:21"
				add_field => {
				"ec_theme" => "Authentication"
				"event_description" => "authentication refused"
					"[event][id]" => "00009:21"
					"[rsa][message][id1]" => "00009:21"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:03
		# line in RSA:  <agent>[<process_id>]: { Connection closed by | Closing connection to } <shost> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Connection[\s]+closed[\s]+by[\s]+|[\s]*Closing[\s]+connection[\s]+to[\s]+)[\s]+(?<shost>[^\s]*)[\s]+$" }
				id => "message-00009:03"
				add_field => {
				"event_description" => "connection closed"
					"[event][id]" => "00009:03"
					"[rsa][message][id1]" => "00009:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:04
		# line in RSA:  <agent>[<process_id>]: { connection | Connection } from { "<saddr>" | <saddr> port <sport> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*connection[\s]+|[\s]*Connection[\s]+)[\s]+from[\s]+([\s]*\"(?<saddr>[^\"]*)\"[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+)[\s]+$" }
				id => "message-00009:04"
				add_field => {
				"ntype" => "21"
					"[event][id]" => "00009:04"
					"[rsa][message][id1]" => "00009:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:05
		# line in RSA:  <agent>[<process_id>]: channel <sport>: open failed: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: channel %{sport}: open failed: %{event_description}: %{result}" }
				id => "message-00009:05"
				add_field => {
					"[event][id]" => "00009:05"
					"[rsa][message][id1]" => "00009:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:06
		# line in RSA:  <agent>[<process_id>]: <protocol>: Got user name <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}: Got user name %{username}" }
				id => "message-00009:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "got user name"
					"[event][id]" => "00009:06"
					"[rsa][message][id1]" => "00009:06"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:09
		# line in RSA:  <agent>[<process_id>]: <protocol>: authentication succeeded 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}: authentication succeeded" }
				id => "message-00009:09"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"event_description" => "authentication succeeded"
					"[event][id]" => "00009:09"
					"[rsa][message][id1]" => "00009:09"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:17
		# line in RSA:  <agent>[<process_id>]: <protocol>: authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}: authentication failed" }
				id => "message-00009:17"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "authentication failure"
					"[event][id]" => "00009:17"
					"[rsa][message][id1]" => "00009:17"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:10
		# line in RSA:  <agent>[<process_id>]: Read error from remote host <shost>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Read error from remote host %{shost}: %{result}" }
				id => "message-00009:10"
				add_field => {
				"event_description" => "read error from remote host"
					"[event][id]" => "00009:10"
					"[rsa][message][id1]" => "00009:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:11
		# line in RSA:  <agent>[<process_id>]: Illegal user <username> from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Illegal user %{username} from %{saddr}" }
				id => "message-00009:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Illegal user"
				"result" => "Illegal user"
				"ntype" => "22"
					"[event][id]" => "00009:11"
					"[rsa][message][id1]" => "00009:11"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:12
		# line in RSA:  <agent>[<process_id>]: Public key authentication for user <username> accepted 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Public key authentication for user %{username} accepted" }
				id => "message-00009:12"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "User authenticated"
					"[event][id]" => "00009:12"
					"[rsa][message][id1]" => "00009:12"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:13
		# line in RSA:  <agent>[<process_id>]: User <username>, coming from <shost>, authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}, coming from %{shost}, authenticated" }
				id => "message-00009:13"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "User authenticated"
					"[event][id]" => "00009:13"
					"[rsa][message][id1]" => "00009:13"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:14
		# line in RSA:  <agent>[<process_id>]: Did not receive identification string from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Did not receive identification string from %{saddr}" }
				id => "message-00009:14"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"result" => "no id string from host"
					"[event][id]" => "00009:14"
					"[rsa][message][id1]" => "00009:14"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:16
		# line in RSA:  <agent>[<process_id>]: <protocol>: error <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}: error %{event_description}" }
				id => "message-00009:16"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"ntype" => "22"
					"[event][id]" => "00009:16"
					"[rsa][message][id1]" => "00009:16"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:18
		# line in RSA:  <agent>[<process_id>]: error: PAM: Authentication failed for <username> from <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error: PAM: Authentication failed for %{username} from %{interface}" }
				id => "message-00009:18"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "authentication failure"
					"[event][id]" => "00009:18"
					"[rsa][message][id1]" => "00009:18"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:20
		# line in RSA:  <agent>[<process_id>]: error: PAM: authentication error for <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error: PAM: authentication error for %{username} from %{saddr}" }
				id => "message-00009:20"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Error"
				"ntype" => "22"
				"event_description" => "authentication error"
					"[event][id]" => "00009:20"
					"[rsa][message][id1]" => "00009:20"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:19
		# line in RSA:  <agent>[<process_id>]: Found matching RSA key: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Found matching RSA key: %{info}" }
				id => "message-00009:19"
				add_field => {
				"event_description" => "Found matching RSA key"
					"[event][id]" => "00009:19"
					"[rsa][message][id1]" => "00009:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:01
		# line in RSA: <agent>[<process_id>]: pam_winbind(sshd:<category>): user '<username>' granted access
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_winbind(sshd:%{category}): user '%{username}' granted access" }
				id => "message-sshd:01"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"a" => "user "
				"b" => "granted access"
				"event_description" => " *STRCAT(a,username,	,b)"
					"[event][id]" => "sshd:01"
					"[rsa][message][id1]" => "sshd:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:15
		# line in RSA:  { <agent>[<process_id>]: | <agent>: }  <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-00009:15"
				add_field => {
					"[event][id]" => "00009:15"
					"[rsa][message][id1]" => "00009:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd2" {
		# MESSAGE 00016
		# line in RSA: <agent>[<process_id>]: User <username>, coming from <saddr>, authenticated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}, coming from %{saddr}, authenticated" }
				id => "message-00016"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
					"[event][id]" => "00016"
					"[rsa][message][id1]" => "00016"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:01
		# line in RSA:  <agent>[<process_id>]: User <username> forced to change password 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} forced to change password" }
				id => "message-00016:01"
				add_field => {
				"ec_theme" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user forced to change password"
					"[event][id]" => "00016:01"
					"[rsa][message][id1]" => "00016:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:02
		# line in RSA:  <agent>[<process_id>]: password authentication failed. Login to account <username> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password authentication failed. Login to account %{username} %{result}" }
				id => "message-00016:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "password authentication failure"
					"[event][id]" => "00016:02"
					"[rsa][message][id1]" => "00016:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:03
		# line in RSA:  <agent>[<process_id>]: Password authentication for user <username> failed (from <saddr> port <sport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password authentication for user %{username} failed (from %{saddr} port %{sport})" }
				id => "message-00016:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "password authentication failure"
					"[event][id]" => "00016:03"
					"[rsa][message][id1]" => "00016:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:04
		# line in RSA:  <agent>[<process_id>]: { Password authentication for user <username> accepted | PAM password accepted for user <username> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Password[\s]+authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+accepted[\s]+|[\s]*PAM[\s]+password[\s]+accepted[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+)$" }
				id => "message-00016:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
					"[event][id]" => "00016:04"
					"[rsa][message][id1]" => "00016:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:05
		# line in RSA:  <agent>[<process_id>]: User <username>'s local password accepted 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}'s local password accepted" }
				id => "message-00016:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
					"[event][id]" => "00016:05"
					"[rsa][message][id1]" => "00016:05"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:07
		# line in RSA:  <agent>[<process_id>]: Remote host disconnected: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote host disconnected: %{result}" }
				id => "message-00016:07"
				add_field => {
				"event_description" => "Remote host disconnected"
					"[event][id]" => "00016:07"
					"[rsa][message][id1]" => "00016:07"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:08
		# line in RSA:  <agent>[<process_id>]: connection lost: '<result>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection lost: '%{result}'" }
				id => "message-00016:08"
				add_field => {
				"event_description" => "connection lost"
					"[event][id]" => "00016:08"
					"[rsa][message][id1]" => "00016:08"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:09
		# line in RSA:  <agent>[<process_id>]: { connection from "<saddr>" | X11 connection from <saddr>:<sport> (<shost>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*connection[\s]+from[\s]+\"(?<saddr>[^\"]*)\"[\s]+|[\s]*X11[\s]+connection[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+\((?<shost>[^\)]*)\)[\s]+)$" }
				id => "message-00016:09"
				add_field => {
					"[event][id]" => "00016:09"
					"[rsa][message][id1]" => "00016:09"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:10
		# line in RSA:  <agent>[<process_id>]: <severity> Accepted publickey for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Accepted publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00016:10"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "00016:10"
					"[rsa][message][id1]" => "00016:10"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:11
		# line in RSA: <agent>[<process_id>]: Public key authentication for user <username> accepted.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Public key authentication for user %{username} accepted." }
				id => "message-00016:11"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "00016:11"
					"[rsa][message][id1]" => "00016:11"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:12
		# line in RSA: <agent>[<process_id>]: Received <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received %{event_description}" }
				id => "message-00016:12"
				add_field => {
					"[event][id]" => "00016:12"
					"[rsa][message][id1]" => "00016:12"
					"[event][categoryid]" => "1206000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:13
		# line in RSA:  <agent>[<process_id>]: Public key <directory> used.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Public key %{directory} used." }
				id => "message-00016:13"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:13"
					"[rsa][message][id1]" => "00016:13"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:99
		# line in RSA:  <agent>[<data>]: <severity> Failed password for invalid_user <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{data}]: %{severity} Failed password for invalid_user %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00016:99"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:99"
					"[rsa][message][id1]" => "00016:99"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:14
		# line in RSA:  <agent>[<data>]: <severity> Failed password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{data}]: %{severity} Failed password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00016:14"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:14"
					"[rsa][message][id1]" => "00016:14"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:15
		# line in RSA:  <agent>[<process_id>]: <severity> Failed login for username=<username>, hostname=<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Failed login for username=%{username}, hostname=%{saddr}" }
				id => "message-00016:15"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:15"
					"[rsa][message][id1]" => "00016:15"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:16
		# line in RSA:  <agent>[<process_id>]: <severity> Accepted password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Accepted password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00016:16"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "00016:16"
					"[rsa][message][id1]" => "00016:16"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:17
		# line in RSA:  <agent>[<process_id>]: Local disconnected: Connection {closed by remote host|closed}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Local[\s]+disconnected:[\s]+Connection[\s]+(closed[\s]+by[\s]+remote[\s]+host|closed)\.$" }
				id => "message-00016:17"
				add_field => {
					"[event][id]" => "00016:17"
					"[rsa][message][id1]" => "00016:17"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:18
		# line in RSA:  <agent>[<process_id>]: <severity> Did not receive identification string from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Did not receive identification string from %{saddr}" }
				id => "message-00016:18"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:18"
					"[rsa][message][id1]" => "00016:18"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:19
		# line in RSA: <agent>[<process_id>]: <severity> Could not write identification string to <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Could not write identification string to %{saddr}" }
				id => "message-00016:19"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:19"
					"[rsa][message][id1]" => "00016:19"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:20
		# line in RSA:  <agent>[<process_id>]: <severity> subsystem: request for sftp
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} subsystem: request for sftp" }
				id => "message-00016:20"
				add_field => {
					"[event][id]" => "00016:20"
					"[rsa][message][id1]" => "00016:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:21
		# line in RSA: <agent>[<process_id>]: <severity> Received disconnect from <saddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Received disconnect from %{saddr}." }
				id => "message-00016:21"
				add_field => {
					"[event][id]" => "00016:21"
					"[rsa][message][id1]" => "00016:21"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:22
		# line in RSA: <agent>[<process_id>]: <severity> setsockopt <fld1>: Invalid argument
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} setsockopt %{fld1}: Invalid argument" }
				id => "message-00016:22"
				add_field => {
					"[event][id]" => "00016:22"
					"[rsa][message][id1]" => "00016:22"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:23
		# line in RSA:  <agent>[<process_id>]: Now running on <username>'s privileges.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Now running on %{username}'s privileges." }
				id => "message-00016:23"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:23"
					"[rsa][message][id1]" => "00016:23"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:24
		# line in RSA: <agent>[<process_id>]: <severity> accept failed: No buffer space available
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} accept failed: No buffer space available" }
				id => "message-00016:24"
				add_field => {
					"[event][id]" => "00016:24"
					"[rsa][message][id1]" => "00016:24"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:92
		# line in RSA: <agent>[<process_id>]: Protocol error in remote: 'QSSH'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Protocol error in remote: 'QSSH'" }
				id => "message-00016:92"
				add_field => {
					"[event][id]" => "00016:92"
					"[rsa][message][id1]" => "00016:92"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:25
		# line in RSA: <agent>[<process_id>]: <severity> QSSH
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} QSSH" }
				id => "message-00016:25"
				add_field => {
					"[event][id]" => "00016:25"
					"[rsa][message][id1]" => "00016:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:26
		# line in RSA: <agent>[<process_id>]: pam_acct_mgmt: <severity> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_acct_mgmt: %{severity} %{result}" }
				id => "message-00016:26"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:26"
					"[rsa][message][id1]" => "00016:26"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:27
		# line in RSA: <agent>[<process_id>]: auths-pam: PAM subprocess returned packet <info>. (err_num: <resultcode>, err_msg: <result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: auths-pam: PAM subprocess returned packet %{info}. (err_num: %{resultcode}, err_msg: %{result})" }
				id => "message-00016:27"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:27"
					"[rsa][message][id1]" => "00016:27"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:28
		# line in RSA:  <agent>[<process_id>]: { PAM transaction resulted in error. | pam_setcred: error <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*PAM[\s]+transaction[\s]+resulted[\s]+in[\s]+error\.[\s]+|[\s]*pam_setcred:[\s]+error[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-00016:28"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:28"
					"[rsa][message][id1]" => "00016:28"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:29
		# line in RSA: <agent>[<process_id>]: disconnected by application in remote: '<result>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: disconnected by application in remote: '%{result}'" }
				id => "message-00016:29"
				add_field => {
					"[event][id]" => "00016:29"
					"[rsa][message][id1]" => "00016:29"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:54
		# line in RSA:  <agent>[<process_id>]: Local disconnected: User name contains illegal characters. (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Local disconnected: User name contains illegal characters. (%{result})" }
				id => "message-00016:54"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:54"
					"[rsa][message][id1]" => "00016:54"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:33
		# line in RSA: <agent>[<process_id>]: Local disconnected: Connection {lost on output|lost}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Local[\s]+disconnected:[\s]+Connection[\s]+(lost[\s]+on[\s]+output|lost)\.$" }
				id => "message-00016:33"
				add_field => {
					"[event][id]" => "00016:33"
					"[rsa][message][id1]" => "00016:33"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:30
		# line in RSA: <agent>[<process_id>]: Local disconnected: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Local disconnected: %{result}" }
				id => "message-00016:30"
				add_field => {
					"[event][id]" => "00016:30"
					"[rsa][message][id1]" => "00016:30"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:31
		# line in RSA: <agent>[<process_id>]: protocol version not supported in local: 'Illegal protocol version.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: protocol version not supported in local: 'Illegal protocol version.'" }
				id => "message-00016:31"
				add_field => {
					"[event][id]" => "00016:31"
					"[rsa][message][id1]" => "00016:31"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:34
		# line in RSA: <agent>[<process_id>]: <severity>: Failed to fetch remote ip address.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Failed to fetch remote ip address." }
				id => "message-00016:34"
				add_field => {
					"[event][id]" => "00016:34"
					"[rsa][message][id1]" => "00016:34"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:39
		# line in RSA:  <agent>[<process_id>]: pam_authenticate: error <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_authenticate: error %{result}" }
				id => "message-00016:39"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:39"
					"[rsa][message][id1]" => "00016:39"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:40
		# line in RSA:  <agent>[<fld1>]: <severity>: sshd2-auth: The client requested authentication method <authmethod>, that is not allowed for user `<username>'. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{severity}: sshd2-auth: The client requested authentication method %{authmethod}, that is not allowed for user `%{username}'." }
				id => "message-00016:40"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:40"
					"[rsa][message][id1]" => "00016:40"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:41
		# line in RSA:  <agent>[<fld1>]: LoginGraceTime exceeded. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: LoginGraceTime exceeded." }
				id => "message-00016:41"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:41"
					"[rsa][message][id1]" => "00016:41"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:35
		# line in RSA:  <agent>[<fld1>]: {Removing directory|Creating directory|Resolving path to} <directory> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(Removing[\s]+directory|Creating[\s]+directory|Resolving[\s]+path[\s]+to)[\s]+(?<directory>[^\s]*)[\s]+$" }
				id => "message-00016:35"
				add_field => {
					"[event][id]" => "00016:35"
					"[rsa][message][id1]" => "00016:35"
					"[event][categoryid]" => "1205000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:36
		# line in RSA:  <agent>[<fld1>]: {Failed to make dir|Opening directory|Readdir on directory} <directory> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(Failed[\s]+to[\s]+make[\s]+dir|Opening[\s]+directory|Readdir[\s]+on[\s]+directory)[\s]+(?<directory>[^\s]*)[\s]+$" }
				id => "message-00016:36"
				add_field => {
					"[event][id]" => "00016:36"
					"[rsa][message][id1]" => "00016:36"
					"[event][categoryid]" => "1205000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:37
		# line in RSA:  <agent>[<fld1>]: <severity> Disconnect requested by <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{severity} Disconnect requested by %{protocol}" }
				id => "message-00016:37"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:37"
					"[rsa][message][id1]" => "00016:37"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:38
		# line in RSA:  <agent>[<fld1>]: {Failed to rename|Setstat file|Fstatting file|Downloading|Statting file|Reading link|Uploading|Closed file}  <filename> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(Failed[\s]+to[\s]+rename|Setstat[\s]+file|Fstatting[\s]+file|Downloading|Statting[\s]+file|Reading[\s]+link|Uploading|Closed[\s]+file)[\s]+(?<filename>[^\s]*)[\s]+$" }
				id => "message-00016:38"
				add_field => {
					"[event][id]" => "00016:38"
					"[rsa][message][id1]" => "00016:38"
					"[event][categoryid]" => "1205000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:51
		# line in RSA:  <agent>[<fld1>]: {Failed to remove file|Closed file|Failed to open file|Fsetstat file|Renaming|Removing file|Lstatting file}  <filename> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(Failed[\s]+to[\s]+remove[\s]+file|Closed[\s]+file|Failed[\s]+to[\s]+open[\s]+file|Fsetstat[\s]+file|Renaming|Removing[\s]+file|Lstatting[\s]+file)[\s]+(?<filename>[^\s]*)[\s]+$" }
				id => "message-00016:51"
				add_field => {
					"[event][id]" => "00016:51"
					"[rsa][message][id1]" => "00016:51"
					"[event][categoryid]" => "1205000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:42
		# line in RSA:  <agent>[<fld1>]: <severity> {User disconnects|disconnected by user} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+(User[\s]+disconnects|disconnected[\s]+by[\s]+user)[\s]+$" }
				id => "message-00016:42"
				add_field => {
					"[event][id]" => "00016:42"
					"[rsa][message][id1]" => "00016:42"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:43
		# line in RSA:  <agent>[<fld1>]: <severity>: Creating listener failed: port <sport> probably already in use!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{severity}: Creating listener failed: port %{sport} probably already in use!" }
				id => "message-00016:43"
				add_field => {
					"[event][id]" => "00016:43"
					"[rsa][message][id1]" => "00016:43"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:44
		# line in RSA:  <agent>[<fld1>]: attempt to login as <username> with empty password denied. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: attempt to login as %{username} with empty password denied." }
				id => "message-00016:44"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:44"
					"[rsa][message][id1]" => "00016:44"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:45
		# line in RSA:  <agent>[<fld1>]: Certificate authentication for user <username> rejected, reason: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: Certificate authentication for user %{username} rejected, reason: %{result}" }
				id => "message-00016:45"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:45"
					"[rsa][message][id1]" => "00016:45"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:46
		# line in RSA:  <agent>[<fld1>]: Key exchange failed in remote: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: Key exchange failed in remote: %{result}" }
				id => "message-00016:46"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:46"
					"[rsa][message][id1]" => "00016:46"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:47
		# line in RSA:  <agent>[<process_id>]: <severity> User <username> password has expired (password aged) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} User %{username} password has expired (password aged)" }
				id => "message-00016:47"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:47"
					"[rsa][message][id1]" => "00016:47"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:48
		# line in RSA:  <agent>[<process_id>]: <severity> Password change required but no <protocol> available. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Password change required but no %{protocol} available." }
				id => "message-00016:48"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:48"
					"[rsa][message][id1]" => "00016:48"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:49
		# line in RSA:  <agent>[<process_id>]: <severity> Invalid user <username> from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Invalid user %{username} from %{saddr}" }
				id => "message-00016:49"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:49"
					"[rsa][message][id1]" => "00016:49"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:50
		# line in RSA:  <agent>[<process_id>]: <severity> Bad protocol version identification <username> from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Bad protocol version identification %{username} from %{saddr}" }
				id => "message-00016:50"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:50"
					"[rsa][message][id1]" => "00016:50"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:52
		# line in RSA:  <agent>[<process_id>]:<severity> Forced command <filename> exited uncleanly, closing connection. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity} Forced command %{filename} exited uncleanly, closing connection." }
				id => "message-00016:52"
				add_field => {
					"[event][id]" => "00016:52"
					"[rsa][message][id1]" => "00016:52"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:53
		# line in RSA:  <agent>[<process_id>]:<severity> Could not chdir to home directory <filename>:<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity} Could not chdir to home directory %{filename}:%{result}" }
				id => "message-00016:53"
				add_field => {
					"[event][id]" => "00016:53"
					"[rsa][message][id1]" => "00016:53"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:55
		# line in RSA:  <agent>[<process_id>]: illegal user name : <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: illegal user name : %{result}" }
				id => "message-00016:55"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:55"
					"[rsa][message][id1]" => "00016:55"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:56
		# line in RSA:  <agent>[<process_id>]: got <event_description> request <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: got %{event_description} request %{fld1}" }
				id => "message-00016:56"
				add_field => {
					"[event][id]" => "00016:56"
					"[rsa][message][id1]" => "00016:56"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:57
		# line in RSA:  <agent>[<process_id>]:<severity> User account is locked because <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity} User account is locked because %{result}" }
				id => "message-00016:57"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_outcome" => "Success"
					"[event][id]" => "00016:57"
					"[rsa][message][id1]" => "00016:57"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:58
		# line in RSA:  <agent>[<process_id>]:<severity> WARNING: Your password has expired. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity} WARNING: Your password has expired." }
				id => "message-00016:58"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:58"
					"[rsa][message][id1]" => "00016:58"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:59
		# line in RSA:  <agent>[<process_id>]: <severity> Address <saddr> maps to <shost>, but this does not map back to the address. Failing the canonical hostname lookup. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Address %{saddr} maps to %{shost}, but this does not map back to the address. Failing the canonical hostname lookup." }
				id => "message-00016:59"
				add_field => {
					"[event][id]" => "00016:59"
					"[rsa][message][id1]" => "00016:59"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:60
		# line in RSA:  <agent>[<process_id>]: <severity> You must change your password now!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} You must change your password now!" }
				id => "message-00016:60"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:60"
					"[rsa][message][id1]" => "00016:60"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:61
		# line in RSA:  <agent>[<process_id>]:<severity>: Public key operation failed for <fld1>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity}: Public key operation failed for %{fld1}." }
				id => "message-00016:61"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:61"
					"[rsa][message][id1]" => "00016:61"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:62
		# line in RSA:  <agent>[<process_id>]:<severity> Forwarding request is allowed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity} Forwarding request is allowed for user %{username}" }
				id => "message-00016:62"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:62"
					"[rsa][message][id1]" => "00016:62"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:63
		# line in RSA:  <agent>[<process_id>]:<severity> {channelById|inputChannelReq}:<result> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:(?<severity>[^\s]*)[\s]+(channelById|inputChannelReq):(?<result>[^\s]*)[\s]+$" }
				id => "message-00016:63"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:63"
					"[rsa][message][id1]" => "00016:63"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:64
		# line in RSA:  <agent>[<process_id>]: publickey authentication failed. Login to account <username> <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: publickey authentication failed. Login to account %{username} %{result}" }
				id => "message-00016:64"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:64"
					"[rsa][message][id1]" => "00016:64"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:65
		# line in RSA:  <agent>[<process_id>]:<severity> Disconnecting:<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity} Disconnecting:%{result}" }
				id => "message-00016:65"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:65"
					"[rsa][message][id1]" => "00016:65"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:66
		# line in RSA:  <agent>[<process_id>]: Remote <protocol> forwarding request received from host "<saddr>", by authenticated user "<username>".  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote %{protocol} forwarding request received from host \"%{saddr}\", by authenticated user \"%{username}\"." }
				id => "message-00016:66"
				add_field => {
					"[event][id]" => "00016:66"
					"[rsa][message][id1]" => "00016:66"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:67
		# line in RSA:  <agent>[<process_id>]: Port <sport> set up for remote forwarding. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Port %{sport} set up for remote forwarding." }
				id => "message-00016:67"
				add_field => {
					"[event][id]" => "00016:67"
					"[rsa][message][id1]" => "00016:67"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:68
		# line in RSA:  <agent>[<process_id>]: authentication cancelled by user:<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication cancelled by user:%{result}" }
				id => "message-00016:68"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:68"
					"[rsa][message][id1]" => "00016:68"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:69
		# line in RSA:  <agent>[<process_id>]: no more authentication methods on remote:<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: no more authentication methods on remote:%{result}" }
				id => "message-00016:69"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:69"
					"[rsa][message][id1]" => "00016:69"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:71
		# line in RSA:  <agent>[<process_id>]: <severity>: DNS lookup failed for "<saddr>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: DNS lookup failed for \"%{saddr}\"" }
				id => "message-00016:71"
				add_field => {
					"[event][id]" => "00016:71"
					"[rsa][message][id1]" => "00016:71"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:72
		# line in RSA:  <agent>[<process_id>]: <severity> Terminating connection 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Terminating connection" }
				id => "message-00016:72"
				add_field => {
					"[event][id]" => "00016:72"
					"[rsa][message][id1]" => "00016:72"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:73
		# line in RSA:  <agent>[<process_id>]: <severity> Password change failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Password change failed" }
				id => "message-00016:73"
				add_field => {
				"ec_theme" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:73"
					"[rsa][message][id1]" => "00016:73"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:74
		# line in RSA:  <agent>[<process_id>]: <severity> getsockname failed: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} getsockname failed: %{result}" }
				id => "message-00016:74"
				add_field => {
					"[event][id]" => "00016:74"
					"[rsa][message][id1]" => "00016:74"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:75
		# line in RSA:  <agent>[<process_id>]: <severity> channel <fld23>: open failed: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} channel %{fld23}: open failed: %{result}" }
				id => "message-00016:75"
				add_field => {
					"[event][id]" => "00016:75"
					"[rsa][message][id1]" => "00016:75"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:76
		# line in RSA:  <agent>[<process_id>]: Failed to {open|remove} dir  <directory>. Error <resultcode> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+to[\s]+(open|remove)[\s]+dir[\s]+(?<directory>[^\.]*)\.[\s]+Error[\s]+(?<resultcode>[^\s]*)[\s]+$" }
				id => "message-00016:76"
				add_field => {
					"[event][id]" => "00016:76"
					"[rsa][message][id1]" => "00016:76"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:77
		# line in RSA:  <agent>[<process_id>]: Protocol error in {local|remote}: <result> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Protocol[\s]+error[\s]+in[\s]+(local|remote):[\s]+(?<result>[^\s]*)[\s]+$" }
				id => "message-00016:77"
				add_field => {
					"[event][id]" => "00016:77"
					"[rsa][message][id1]" => "00016:77"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:78
		# line in RSA:  <agent>[<process_id>]: <severity> <event_description> {failed for public key file:|failed.}<result> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+(failed[\s]+for[\s]+public[\s]+key[\s]+file:|failed\.)(?<result>[^\s]*)[\s]+$" }
				id => "message-00016:78"
				add_field => {
					"[event][id]" => "00016:78"
					"[rsa][message][id1]" => "00016:78"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:79
		# line in RSA:  <agent>[<process_id>]: <info> stopping
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info} stopping" }
				id => "message-00016:79"
				add_field => {
					"[event][id]" => "00016:79"
					"[rsa][message][id1]" => "00016:79"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:80
		# line in RSA:  <agent>[<process_id>]: <event_description>, disconnecting:<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}, disconnecting:%{result}" }
				id => "message-00016:80"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:80"
					"[rsa][message][id1]" => "00016:80"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:81
		# line in RSA:  <agent>[<process_id>]: Idle timeout exceeded.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Idle timeout exceeded." }
				id => "message-00016:81"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "session timeout"
					"[event][id]" => "00016:81"
					"[rsa][message][id1]" => "00016:81"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:82
		# line in RSA:  <agent>[<process_id>]: <severity>: ssh_pipe_get_exit_status called before the child has exited.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: ssh_pipe_get_exit_status called before the child has exited." }
				id => "message-00016:82"
				add_field => {
					"[event][id]" => "00016:82"
					"[rsa][message][id1]" => "00016:82"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:83
		# line in RSA:  <agent>[<process_id>]: <event_description>, but it is forbidden by policy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}, but it is forbidden by policy." }
				id => "message-00016:83"
				add_field => {
					"[event][id]" => "00016:83"
					"[rsa][message][id1]" => "00016:83"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:85
		# line in RSA:  <agent>[<process_id>]: <severity> Unable to open {public key|authorization} file for read:<filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+Unable[\s]+to[\s]+open[\s]+(public[\s]+key|authorization)[\s]+file[\s]+for[\s]+read:(?<filename>.*)$" }
				id => "message-00016:85"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "00016:85"
					"[rsa][message][id1]" => "00016:85"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:86
		# line in RSA:  <agent>[<process_id>]: <severity> The user disconnected the application
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} The user disconnected the application" }
				id => "message-00016:86"
				add_field => {
					"[event][id]" => "00016:86"
					"[rsa][message][id1]" => "00016:86"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:87
		# line in RSA:  <agent>[<process_id>]: Listener created on port <port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Listener created on port %{port}" }
				id => "message-00016:87"
				add_field => {
					"[event][id]" => "00016:87"
					"[rsa][message][id1]" => "00016:87"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:88
		# line in RSA:  <agent>[<process_id>]: root login denied for user <username>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: root login denied for user %{username}." }
				id => "message-00016:88"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00016:88"
					"[rsa][message][id1]" => "00016:88"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:90
		# line in RSA:  <agent>[<process_id>]: <severity> Bad ownership found for authorization file: <filename>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Bad ownership found for authorization file: %{filename}." }
				id => "message-00016:90"
				add_field => {
					"[event][id]" => "00016:90"
					"[rsa][message][id1]" => "00016:90"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:89
		# line in RSA:  <agent>[<process_id>]: Daemon is running.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Daemon is running." }
				id => "message-00016:89"
				add_field => {
					"[event][id]" => "00016:89"
					"[rsa][message][id1]" => "00016:89"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:91
		# line in RSA:  <agent>[<process_id>]: <severity>: Unrecognized configuration parameter <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Unrecognized configuration parameter %{info}." }
				id => "message-00016:91"
				add_field => {
					"[event][id]" => "00016:91"
					"[rsa][message][id1]" => "00016:91"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:84
		# line in RSA:  <agent>[<process_id>]: <severity>: Illegal -o parameter <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Illegal -o parameter %{filename}" }
				id => "message-00016:84"
				add_field => {
					"[event][id]" => "00016:84"
					"[rsa][message][id1]" => "00016:84"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:94
		# line in RSA:  <agent>[<process_id>]: <severity>: sshadt.c:<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: sshadt.c:%{fld1}" }
				id => "message-00016:94"
				add_field => {
					"[event][id]" => "00016:94"
					"[rsa][message][id1]" => "00016:94"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:93
		# line in RSA:   <agent>[<process_id>]: <severity> Server listening on port <sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Server listening on port %{sport}" }
				id => "message-00016:93"
				add_field => {
					"[event][id]" => "00016:93"
					"[rsa][message][id1]" => "00016:93"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:95
		# line in RSA:   <agent>[<process_id>]: <severity> Connection discarded by broker
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} Connection discarded by broker" }
				id => "message-00016:95"
				add_field => {
					"[event][id]" => "00016:95"
					"[rsa][message][id1]" => "00016:95"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:96
		# line in RSA:   <agent>[<process_id>]: <severity> User exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} User exit" }
				id => "message-00016:96"
				add_field => {
					"[event][id]" => "00016:96"
					"[rsa][message][id1]" => "00016:96"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:97
		# line in RSA:   <agent>[<process_id>]: <severity> packet_write_poll: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} packet_write_poll: %{result}" }
				id => "message-00016:97"
				add_field => {
					"[event][id]" => "00016:97"
					"[rsa][message][id1]" => "00016:97"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:98
		# line in RSA:  <agent>[<process_id>]: audit Authentication: successful, Account: <username>, Public key fingerprint: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: audit Authentication: successful, Account: %{username}, Public key fingerprint: %{info}" }
				id => "message-00016:98"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "00016:98"
					"[rsa][message][id1]" => "00016:98"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:100
		# line in RSA:  <agent>[<process_id>]: Unknown reason code '<resultcode>' for disconnect. msg: '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unknown reason code '%{resultcode}' for disconnect. msg: '%{info}'" }
				id => "message-00016:100"
				add_field => {
				"event_description" => "Unknown reason code for disconnect"
					"[event][id]" => "00016:100"
					"[rsa][message][id1]" => "00016:100"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:101
		# line in RSA:   <agent>[<process_id>]: warn_user_passwd_will_expire: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: warn_user_passwd_will_expire: %{info}" }
				id => "message-00016:101"
				add_field => {
				"event_description" => "warn_user_passwd_will_expire"
					"[event][id]" => "00016:101"
					"[rsa][message][id1]" => "00016:101"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:102
		# line in RSA:   <agent>[<process_id>]: perform_passwd_aging_check: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: perform_passwd_aging_check: %{info}" }
				id => "message-00016:102"
				add_field => {
				"event_description" => "perform_passwd_aging_check"
					"[event][id]" => "00016:102"
					"[rsa][message][id1]" => "00016:102"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:103
		# line in RSA:   <agent>[<process_id>]: Connection to forwarded port <network_port> from <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection to forwarded port %{network_port} from %{saddr}:%{sport}" }
				id => "message-00016:103"
				add_field => {
					"[event][id]" => "00016:103"
					"[rsa][message][id1]" => "00016:103"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:104
		# line in RSA:  <agent>[<process_id>]: error <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error %{event_description}: %{result}" }
				id => "message-00016:104"
				add_field => {
					"[event][id]" => "00016:104"
					"[rsa][message][id1]" => "00016:104"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:105
		# line in RSA:  <agent>[<process_id>]: fatal <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal %{event_description}: %{result}" }
				id => "message-00016:105"
				add_field => {
					"[event][id]" => "00016:105"
					"[rsa][message][id1]" => "00016:105"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssod" {
		# MESSAGE 00720
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Ssod failed to look up UNIX user Error:  ERROR User:  <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Ssod[\s]+failed[\s]+to[\s]+look[\s]+up[\s]+UNIX[\s]+user[\s]+Error:[\s]+ERROR[\s]+User:[\s]+(?<username>.*)$" }
				id => "message-00720"
				add_field => {
				"event_description" => "Ssod failed to look up UNIX user "
					"[event][id]" => "00720"
					"[rsa][message][id1]" => "00720"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00720:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Successfully updated password User:  <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Successfully[\s]+updated[\s]+password[\s]+User:[\s]+(?<username>.*)$" }
				id => "message-00720:01"
				add_field => {
				"ec_theme" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Successfully updated password for user"
					"[event][id]" => "00720:01"
					"[rsa][message][id1]" => "00720:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "su" {
		# MESSAGE 00008
		# line in RSA:  <agent>: + <terminal> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: + %{terminal} %{username}-%{c_username}" }
				id => "message-00008"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
					"[event][id]" => "00008"
					"[rsa][message][id1]" => "00008"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:01
		# line in RSA:  <agent>: - <terminal> <username>-<c_username>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: - %{terminal} %{username}-%{c_username}" }
				id => "message-00008:01"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "failed su by user"
				"ntype" => "22"
					"[event][id]" => "00008:01"
					"[rsa][message][id1]" => "00008:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:02
		# line in RSA:  <agent>: 'su <c_username>' failed for <username> on <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: 'su %{c_username}' failed for %{username} on %{terminal}" }
				id => "message-00008:02"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "failed su by user"
				"result" => "failed"
					"[event][id]" => "00008:02"
					"[rsa][message][id1]" => "00008:02"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:03
		# line in RSA:  <agent>: 'su <c_username>' succeeded for <username> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: 'su %{c_username}' succeeded for %{username} on %{terminal}" }
				id => "message-00008:03"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
				"result" => "succeeded"
					"[event][id]" => "00008:03"
					"[rsa][message][id1]" => "00008:03"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:05
		# line in RSA:  <agent>[<process_id>]: <result>: <terminal> changing from <username> to <c_username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result}: %{terminal} changing from %{username} to %{c_username}" }
				id => "message-00008:05"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "failed su by user"
					"[event][id]" => "00008:05"
					"[rsa][message][id1]" => "00008:05"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:07
		# line in RSA:  <agent>: from <username> to <c_username> at <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: from %{username} to %{c_username} at %{terminal}" }
				id => "message-00008:07"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
					"[event][id]" => "00008:07"
					"[rsa][message][id1]" => "00008:07"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:08
		# line in RSA:  <agent>: <protocol> user= <username> login_time=<info> login_origin=<terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{protocol} user= %{username} login_time=%{info} login_origin=%{terminal}" }
				id => "message-00008:08"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
					"[event][id]" => "00008:08"
					"[rsa][message][id1]" => "00008:08"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:04
		# line in RSA:  <agent>: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: %{result}" }
				id => "message-00008:04"
				add_field => {
					"[event][id]" => "00008:04"
					"[rsa][message][id1]" => "00008:04"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:06
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00008:06"
				add_field => {
					"[event][id]" => "00008:06"
					"[rsa][message][id1]" => "00008:06"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudo" {
		# MESSAGE 00018:08
		# line in RSA:  <agent>: <username>{ : | ; }Account or password is expired, reset your password and try again{ : | ; }TTY=<interface>{ : | ; }PWD=<directory>{ : | ; }USER=<c_username>{ : | ; }COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)Account[\s]+or[\s]+password[\s]+is[\s]+expired,[\s]+reset[\s]+your[\s]+password[\s]+and[\s]+try[\s]+again([\s]*:[\s]+|[\s]*;[\s]+)TTY=(?<interface>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)PWD=(?<directory>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)USER=(?<c_username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018:08"
				add_field => {
				"ec_theme" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"result" => "Account or password is expired, reset your password and try again"
					"[event][id]" => "00018:08"
					"[rsa][message][id1]" => "00018:08"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:09
		# line in RSA: <agent>: <username>{ : | ; }user NOT in sudoers{ : | ; }TTY=<interface>{ : | ; }PWD=<directory>{ : | ; }USER=<c_username>{ : | ; }COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)user[\s]+NOT[\s]+in[\s]+sudoers([\s]*:[\s]+|[\s]*;[\s]+)TTY=(?<interface>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)PWD=(?<directory>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)USER=(?<c_username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018:09"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"result" => "user NOT in sudoers"
					"[event][id]" => "00018:09"
					"[rsa][message][id1]" => "00018:09"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:10
		# line in RSA: <agent>: <username>{ : | ; }<fld7>incorrect password attempts{ : | ; }TTY=<interface>{ : | ; }PWD=<directory>{ : | ; }USER=<c_username>{ : | ; }COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)(?<fld7>[^i]*)incorrect[\s]+password[\s]+attempts([\s]*:[\s]+|[\s]*;[\s]+)TTY=(?<interface>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)PWD=(?<directory>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)USER=(?<c_username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018:10"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"result" => "incorrect password attempts"
					"[event][id]" => "00018:10"
					"[rsa][message][id1]" => "00018:10"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:11
		# line in RSA:  <agent>: <username>{ : | ; }no tty present and no askpass program specified{ : | ; }TTY=<interface>{ : | ; }PWD=<directory>{ : | ; }USER=<c_username>{ : | ; }COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)no[\s]+tty[\s]+present[\s]+and[\s]+no[\s]+askpass[\s]+program[\s]+specified([\s]*:[\s]+|[\s]*;[\s]+)TTY=(?<interface>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)PWD=(?<directory>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)USER=(?<c_username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"result" => "no tty present and no askpass program specified"
					"[event][id]" => "00018:11"
					"[rsa][message][id1]" => "00018:11"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:12
		# line in RSA:  <agent>: <username>{ : | ; }command not allowed { : | ; }TTY=<interface> { : | ; }PWD=<directory>{ : | ; }USER=<c_username>{ : | ; }COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)command[\s]+not[\s]+allowed[\s]+([\s]*:[\s]+|[\s]*;[\s]+)TTY=(?<interface>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)PWD=(?<directory>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)USER=(?<c_username>[^\s\s]*)([\s]*:[\s]+|[\s]*;[\s]+)COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018:12"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "command not allowed"
					"[event][id]" => "00018:12"
					"[rsa][message][id1]" => "00018:12"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018
		# line in RSA:  <agent>: <username> { : | ; } <result> { : | ; } TTY=<interface> { : | ; } PWD=<directory> { : | ; } USER=<c_username> { : | ; } COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+(?<result>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<interface>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<c_username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018"
				add_field => {
					"[event][id]" => "00018"
					"[rsa][message][id1]" => "00018"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:01
		# line in RSA:  <agent>: <username>: <space> TTY=<interface> { : | ; } PWD=<directory> { : | ; } PID=<parent_pid> { : | ; } USER=<c_username> { : | ; } COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PID=(?<parent_pid>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<c_username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00018:01"
				add_field => {
					"[event][id]" => "00018:01"
					"[rsa][message][id1]" => "00018:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:03
		# line in RSA:  <agent>: <username>: <space> TTY=<interface> ; PWD=<directory> ; USER=<c_username> ; COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: %{space} TTY=%{interface} ; PWD=%{directory} ; USER=%{c_username} ; COMMAND=%{action}" }
				id => "message-00018:03"
				add_field => {
					"[event][id]" => "00018:03"
					"[rsa][message][id1]" => "00018:03"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:02
		# line in RSA:  <agent>: <username>:PTY=<interface>:PWD=<directory>:PID=<parent_pid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}:PTY=%{interface}:PWD=%{directory}:PID=%{parent_pid}" }
				id => "message-00018:02"
				add_field => {
					"[event][id]" => "00018:02"
					"[rsa][message][id1]" => "00018:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:04
		# line in RSA:  <agent>: <username>: (command continued) <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: (command continued) %{info}" }
				id => "message-00018:04"
				add_field => {
					"[event][id]" => "00018:04"
					"[rsa][message][id1]" => "00018:04"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:05
		# line in RSA:  <agent>: Pam Creds are not available 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam Creds are not available" }
				id => "message-00018:05"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Pam Creds are not available"
					"[event][id]" => "00018:05"
					"[rsa][message][id1]" => "00018:05"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:06
		# line in RSA:  <agent>: <username>: <result>TTY=<interface> PWD=<directory> RUNAS=<fld2>;COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: %{result}TTY=%{interface} PWD=%{directory} RUNAS=%{fld2};COMMAND=%{action}" }
				id => "message-00018:06"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00018:06"
					"[rsa][message][id1]" => "00018:06"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:13
		# line in RSA: <agent>: <username>: unknown user: <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: unknown user: %{c_username}" }
				id => "message-00018:13"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "unknown user"
					"[event][id]" => "00018:13"
					"[rsa][message][id1]" => "00018:13"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:14
		# line in RSA:  <agent>: <username>: no passwd entry for <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: no passwd entry for %{c_username}" }
				id => "message-00018:14"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "no passwd entry"
					"[event][id]" => "00018:14"
					"[rsa][message][id1]" => "00018:14"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00018:07
		# line in RSA:   <agent>: <username>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: %{result}" }
				id => "message-00018:07"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00018:07"
					"[rsa][message][id1]" => "00018:07"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId529
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Aborted: visudo failed. <info>
	else if [logstash][msgparser][id] == "msgParserId529" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Aborted:[\s]+visudo[\s]+failed\.[\s]+(?<info>.*)$" }
			id => "msgParserId529"
			add_field => {
				"event_description" => "visudo failed"
				"severity" => "Aborted"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sudosh" {
		# MESSAGE 00762
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } starting session for <username> as root,<terminal> (<action>) (<application>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+starting[\s]+session[\s]+for[\s]+(?<username>[^\s]*)[\s]+as[\s]+root,(?<terminal>[^\s]*)[\s]+\((?<action>[^\)]*)\)[\s]+\((?<application>[^\)]*)\)$" }
				id => "message-00762"
				add_field => {
				"event_description" => "starting session for user as root"
					"[event][id]" => "00762"
					"[rsa][message][id1]" => "00762"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00762:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00762:01"
				add_field => {
					"[event][id]" => "00762:01"
					"[rsa][message][id1]" => "00762:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId531
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } (<username> <application> (<action>)
	else if [logstash][msgparser][id] == "msgParserId531" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\((?<username>[^\s]*)[\s]+(?<application>[^\s]*)[\s]+\((?<action>[^\)]*)\)$" }
			id => "msgParserId531"
			add_field => {
				"event_description" => "application execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId532
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Link failed, child process (<child_pid>)
	else if [logstash][msgparser][id] == "msgParserId532" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Link[\s]+failed,[\s]+child[\s]+process[\s]+\((?<child_pid>[^\)]*)\)$" }
			id => "msgParserId532"
			add_field => {
				"event_description" => "child process - Link Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId533
	# line in RSA:  <agent>[<process_id>]: '<event_description>' for device { file | group } <interface> - <result> 
	else if [logstash][msgparser][id] == "msgParserId533" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+'(?<event_description>[^']*)'[\s]+for[\s]+device[\s]+([\s]*file[\s]+|[\s]*group[\s]+)[\s]+(?<interface>[^\s]*)[\s]+\-[\s]+(?<result>[^\s]*)[\s]+$" }
			id => "msgParserId533"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId534
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <action> <shost> <change_old> <change_new> <result>
	else if [logstash][msgparser][id] == "msgParserId534" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<action>[^\s]*)[\s]+(?<shost>[^\s]*)[\s]+(?<change_old>[^\s]*)[\s]+(?<change_new>[^\s]*)[\s]+(?<result>.*)$" }
			id => "msgParserId534"
			add_field => {
				"event_description" => "configuration check"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog" {
		# MESSAGE 00028
		# line in RSA: <agent>: su : + <interface> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: su : + %{interface} %{username}-%{c_username}" }
				id => "message-00028"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "su by user"
					"[event][id]" => "00028"
					"[rsa][message][id1]" => "00028"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:01
		# line in RSA: <agent>: su : - <interface> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: su : - %{interface} %{username}-%{c_username}" }
				id => "message-00028:01"
				add_field => {
					"[event][id]" => "00028:01"
					"[rsa][message][id1]" => "00028:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:05
		# line in RSA:  <agent>: update_authtok_file: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: update_authtok_file: %{info}" }
				id => "message-00028:05"
				add_field => {
					"[event][id]" => "00028:05"
					"[rsa][message][id1]" => "00028:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:03
		# line in RSA:  <agent>: <interface>: Returned error <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: Returned error %{resultcode}" }
				id => "message-00028:03"
				add_field => {
				"event_description" => "Returned error return"
					"[event][id]" => "00028:03"
					"[rsa][message][id1]" => "00028:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:06
		# line in RSA:  <agent>: <interface>: error Authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: error Authentication failed" }
				id => "message-00028:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "Authentication failed"
					"[event][id]" => "00028:06"
					"[rsa][message][id1]" => "00028:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:04
		# line in RSA:  <agent>: <interface>: error Permission denied
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: error Permission denied" }
				id => "message-00028:04"
				add_field => {
				"event_description" => "Permission denied"
					"[event][id]" => "00028:04"
					"[rsa][message][id1]" => "00028:04"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00028:02"
				add_field => {
					"[event][id]" => "00028:02"
					"[rsa][message][id1]" => "00028:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId541
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application> <info>: Could not { open Full Path message file | open } <filename> <disposition>
	else if [logstash][msgparser][id] == "msgParserId541" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+(?<info>[^:]*):[\s]+Could[\s]+not[\s]+([\s]*open[\s]+Full[\s]+Path[\s]+message[\s]+file[\s]+|[\s]*open[\s]+)[\s]+(?<filename>[^\s]*)[\s]+(?<disposition>.*)$" }
			id => "msgParserId541"
			add_field => {
				"event_description" => "Could not open file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tlsftpd" {
		# MESSAGE 00674
		# line in RSA:  <agent>[<process_id>]: connection from <shost> [<saddr>] at <recorded_time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection from %{shost} [%{saddr}] at %{recorded_time}" }
				id => "message-00674"
				add_field => {
				"event_description" => "connection from host"
					"[event][id]" => "00674"
					"[rsa][message][id1]" => "00674"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00677
		# line in RSA:  <agent>[<process_id>]: FTP LOGIN FROM <shost> [<saddr>], <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{shost} [%{saddr}], %{username}" }
				id => "message-00677"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "FTP LOGIN"
					"[event][id]" => "00677"
					"[rsa][message][id1]" => "00677"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00678
		# line in RSA:  <agent>[<process_id>]: SSL SUCCEEDED WITH <shost> [<saddr>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSL SUCCEEDED WITH %{shost} [%{saddr}]" }
				id => "message-00678"
				add_field => {
				"event_description" => "SSL SUCCEEDED"
					"[event][id]" => "00678"
					"[rsa][message][id1]" => "00678"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00679
		# line in RSA:  <agent>[<process_id>]: { <interface> (<username>): | <interface> <username>: | <interface>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<interface>[^\s]*)[\s]+\((?<username>[^\)]*)\):[\s]+|[\s]*(?<interface>[^\s]*)[\s]+(?<username>[^:]*):[\s]+|[\s]*(?<interface>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00679"
				add_field => {
					"[event][id]" => "00679"
					"[rsa][message][id1]" => "00679"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01126
		# line in RSA: <agent>[<process_id>]: FTP LOGIN FROM <saddr>, <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{saddr}, %{username}" }
				id => "message-01126"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"ntype" => "21"
				"event_description" => "login"
					"[event][id]" => "01126"
					"[rsa][message][id1]" => "01126"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01127
		# line in RSA:  <agent>[<process_id>]: SSL SUCCEEDED WITH <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSL SUCCEEDED WITH %{saddr}" }
				id => "message-01127"
				add_field => {
				"event_description" => "SSL SUCCEEDED"
					"[event][id]" => "01127"
					"[rsa][message][id1]" => "01127"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01128
		# line in RSA: <agent>[<process_id>]: FTP LOGIN REFUSED from <saddr>, USER = <username> RC = <resultcode> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN REFUSED from %{saddr}, USER = %{username} RC = %{resultcode} (%{result})" }
				id => "message-01128"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"ntype" => "22"
				"event_description" => "ftpd - login refused"
					"[event][id]" => "01128"
					"[rsa][message][id1]" => "01128"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId173
	# line in RSA:   <event_description> 
	else if [logstash][msgparser][id] == "msgParserId173" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId173"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ucd-snmp" {
		# MESSAGE 00180
		# line in RSA: <agent>[<process_id>]: Connection from <saddr> REFUSED
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr} REFUSED" }
				id => "message-00180"
				add_field => {
				"event_description" => "Connection refused"
					"[event][id]" => "00180"
					"[rsa][message][id1]" => "00180"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00180:01
		# line in RSA: <agent>[<process_id>]: AUDIT -- Action <info> (<fld1>) <space> User: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: AUDIT -- Action %{info} (%{fld1}) %{space} User: %{username}" }
				id => "message-00180:01"
				add_field => {
				"event_description" => "AUDIT"
					"[event][id]" => "00180:01"
					"[rsa][message][id1]" => "00180:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId551
	# line in RSA: UDP Scan by ISS (<fld4>)
	else if [logstash][msgparser][id] == "msgParserId551" {
		dissect {
			mapping => { "message" => "UDP Scan by ISS (%{fld4})" }
			id => "msgParserId551"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "unknown" {
		# MESSAGE 00773
		# line in RSA:  <agent>[<process_id>]: <severity> <event_description> for user '<username>': <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{event_description} for user '%{username}': %{result}" }
				id => "message-00773"
				add_field => {
					"[event][id]" => "00773"
					"[rsa][message][id1]" => "00773"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00773:01
		# line in RSA: <agent>[<process_id>]: + <interface> <username>-<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: + %{interface} %{username}-%{c_username}" }
				id => "message-00773:01"
				add_field => {
					"[event][id]" => "00773:01"
					"[rsa][message][id1]" => "00773:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00773:05
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<shost>, size=<bytes>, class=<fld2>, pri=<fld3>, nrcpts=<fld4>, proto=<protocol>, relay=[<fld6>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: from=%{shost}, size=%{bytes}, class=%{fld2}, pri=%{fld3}, nrcpts=%{fld4}, proto=%{protocol}, relay=[%{fld6}]" }
				id => "message-00773:05"
				add_field => {
					"[event][id]" => "00773:05"
					"[rsa][message][id1]" => "00773:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00773:04
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<shost>, size=<bytes>, class=<fld2>, pri=<fld3>, nrcpts=<fld4>, msgid=<fld5>, relay=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: from=%{shost}, size=%{bytes}, class=%{fld2}, pri=%{fld3}, nrcpts=%{fld4}, msgid=%{fld5}, relay=%{fld6}" }
				id => "message-00773:04"
				add_field => {
					"[event][id]" => "00773:04"
					"[rsa][message][id1]" => "00773:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00773:06
		# line in RSA: <agent>[<process_id>]: <username>: to=<shost>, ctladdr=<fld1>, delay=<fld2>, xdelay=<fld3>, mailer=<fld4>, relay=<fld5>, stat=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username}: to=%{shost}, ctladdr=%{fld1}, delay=%{fld2}, xdelay=%{fld3}, mailer=%{fld4}, relay=%{fld5}, stat=%{fld6}" }
				id => "message-00773:06"
				add_field => {
					"[event][id]" => "00773:06"
					"[rsa][message][id1]" => "00773:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00773:02
		# line in RSA: <agent>[<process_id>]:{ ERROR | INFO | WARN } <<<fld1>> <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:([\s]*ERROR[\s]+|[\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+<(?<fld1>[^>]*)>[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-00773:02"
				add_field => {
					"[event][id]" => "00773:02"
					"[rsa][message][id1]" => "00773:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00773:03
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00773:03"
				add_field => {
					"[event][id]" => "00773:03"
					"[rsa][message][id1]" => "00773:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId558
	# line in RSA:  <process_id>] <agent>: Unable to read from <device>. <result>.
	else if [logstash][msgparser][id] == "msgParserId558" {
		dissect {
			mapping => { "message" => "%{process_id}] %{agent}: Unable to read from %{device}. %{result}." }
			id => "msgParserId558"
			add_field => {
				"event_description" => "Unable to read from device"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "uvservd" {
		# MESSAGE 01132
		# line in RSA:  <agent>[<process_id>]: Received connection from <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received connection from %{saddr}:%{sport}" }
				id => "message-01132"
				add_field => {
				"event_description" => "Received connection"
					"[event][id]" => "01132"
					"[rsa][message][id1]" => "01132"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01133
		# line in RSA:  <agent>[<process_id>]: Failed Handshake to host <saddr>:<sport>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed Handshake to host %{saddr}:%{sport}!" }
				id => "message-01133"
				add_field => {
				"event_description" => "Failed Handshake to host"
					"[event][id]" => "01133"
					"[rsa][message][id1]" => "01133"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01134
		# line in RSA:  <agent>[<process_id>]: SSL_connect failed, errcode = <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSL_connect failed, errcode = %{resultcode}" }
				id => "message-01134"
				add_field => {
				"event_description" => "SSL_connect failed"
					"[event][id]" => "01134"
					"[rsa][message][id1]" => "01134"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "uxwdog" {
		# MESSAGE 00386
		# line in RSA:  <agent>[<process_id>]: server terminated (<info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: server terminated (%{info})" }
				id => "message-00386"
				add_field => {
				"event_description" => "server terminated"
					"[event][id]" => "00386"
					"[rsa][message][id1]" => "00386"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00675
		# line in RSA:  <agent>[<process_id>]: could not log PID to PidLog <directory> { , <info> (<result>) | (<result>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+could[\s]+not[\s]+log[\s]+PID[\s]+to[\s]+PidLog[\s]+(?<directory>[^\s]*)[\s]+([\s]*,[\s]+(?<info>[^\s]*)[\s]+\((?<result>[^\)]*)\)[\s]+|[\s]*\((?<result>[^\)]*)\)[\s]+)$" }
				id => "message-00675"
				add_field => {
				"event_description" => "could not log PID to Pid"
					"[event][id]" => "00675"
					"[rsa][message][id1]" => "00675"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00675:01
		# line in RSA:  <agent>[<process_id>]: temporary directory <directory> is not writable by user <username> (Error <resultcode>0)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: temporary directory %{directory} is not writable by user %{username} (Error %{resultcode}0)" }
				id => "message-00675:01"
				add_field => {
				"event_description" => "temporary directory not writable by user"
					"[event][id]" => "00675:01"
					"[rsa][message][id1]" => "00675:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vascd" {
		# MESSAGE 00234
		# line in RSA: <agent>[<process_id>]: The license limit of <fld1> users has been reached -- <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: The license limit of %{fld1} users has been reached -- %{info}" }
				id => "message-00234"
				add_field => {
				"event_description" => "license limit reached"
					"[event][id]" => "00234"
					"[rsa][message][id1]" => "00234"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00234:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00234:01"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Time"
				"ec_activity" => "Modify"
					"[event][id]" => "00234:01"
					"[rsa][message][id1]" => "00234:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId156"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId567
	# line in RSA:  <agent>[<process_id>]: connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId567" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId567"
			add_field => {
				"event_description" => "Connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId568
	# line in RSA:  <agent>[<process_id>]: vPar heartbeat daemon <action>
	else if [logstash][msgparser][id] == "msgParserId568" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: vPar heartbeat daemon %{action}" }
			id => "msgParserId568"
			add_field => {
				"event_description" => "vPar heartbeat daemon activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "isakmpd" {
		# MESSAGE isakmpd:01
		# line in RSA: <agent>[<process_id>]: transport_send_messages: giving up on exchange <fld1>-{<saddr>/<sport>|<saddr>}{-to-|-}{<daddr>/<dport>|<daddr>}, no response from peer <hostip>:<network_port>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+transport_send_messages:[\s]+giving[\s]+up[\s]+on[\s]+exchange[\s]+(?<fld1>[^\-]*)\-((?<saddr>[^/]*)/(?<sport>[^\-\-]*)|(?<saddr>[^\-\-]*))(\-to\-|\-)((?<daddr>[^/]*)/(?<dport>[^,]*)|(?<daddr>[^,]*)),[\s]+no[\s]+response[\s]+from[\s]+peer[\s]+(?<hostip>[^:]*):(?<network_port>.*)$" }
				id => "message-isakmpd:01"
				add_field => {
					"[event][id]" => "isakmpd:01"
					"[rsa][message][id1]" => "isakmpd:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE isakmpd:02
		# line in RSA: <agent>[<process_id>]: transport_send_messages: giving up on exchange <fld1>-<saddr>-{<daddr>/<dport>|<daddr>}, no response from peer <hostip>:<network_port>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+transport_send_messages:[\s]+giving[\s]+up[\s]+on[\s]+exchange[\s]+(?<fld1>[^\-]*)\-(?<saddr>[^\-]*)\-((?<daddr>[^/]*)/(?<dport>[^,]*)|(?<daddr>[^,]*)),[\s]+no[\s]+response[\s]+from[\s]+peer[\s]+(?<hostip>[^:]*):(?<network_port>.*)$" }
				id => "message-isakmpd:02"
				add_field => {
					"[event][id]" => "isakmpd:02"
					"[rsa][message][id1]" => "isakmpd:02"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rtvscand" {
		# MESSAGE rtvscand
		# line in RSA: <agent>: <event_description> Version: <version>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} Version: %{version}." }
				id => "message-rtvscand"
				add_field => {
					"[event][id]" => "rtvscand"
					"[rsa][message][id1]" => "rtvscand"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE rtvscand:01
		# line in RSA: <agent>: Scan Complete:  Threats: <dclass_counter1>   Scanned: <dclass_counter2>   Files/Folders/Drives Omitted: <dclass_counter3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Scan Complete:  Threats: %{dclass_counter1}   Scanned: %{dclass_counter2}   Files/Folders/Drives Omitted: %{dclass_counter3}" }
				id => "message-rtvscand:01"
				add_field => {
				"event_description" => "Scan Complete"
					"[event][id]" => "rtvscand:01"
					"[rsa][message][id1]" => "rtvscand:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE rtvscand:02
		# line in RSA: <agent>: Could not scan <dclass_counter1> files inside <filename> due to extraction errors encountered by the Decomposer Engines.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Could not scan %{dclass_counter1} files inside %{filename} due to extraction errors encountered by the Decomposer Engines." }
				id => "message-rtvscand:02"
				add_field => {
				"event_description" => "Could not scan files due to extraction errors encountered by the Decomposer Engines."
					"[event][id]" => "rtvscand:02"
					"[rsa][message][id1]" => "rtvscand:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE rtvscand:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-rtvscand:03"
				add_field => {
					"[event][id]" => "rtvscand:03"
					"[rsa][message][id1]" => "rtvscand:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId575
	# line in RSA: <agent>: subscriber <fld1> has left -- closed <fld2> remaining handles
	else if [logstash][msgparser][id] == "msgParserId575" {
		dissect {
			mapping => { "message" => "%{agent}: subscriber %{fld1} has left -- closed %{fld2} remaining handles" }
			id => "msgParserId575"
			add_field => {
				"event_description" => "Subscriber has left"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId574
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId574" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId574"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId576
	# line in RSA: <agent>: Successfully connected to the Distribution Server <protocol>://<domain>:<port>
	else if [logstash][msgparser][id] == "msgParserId576" {
		dissect {
			mapping => { "message" => "%{agent}: Successfully connected to the Distribution Server %{protocol}://%{domain}:%{port}" }
			id => "msgParserId576"
			add_field => {
				"event_description" => "Successfully connected to the Distribution Server"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "uxauthd" {
		# MESSAGE uxauthd
		# line in RSA: <agent>[<process_id>]: Domain '<domain>', used DCs '<info>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Domain '%{domain}', used DCs '%{info}'." }
				id => "message-uxauthd"
				add_field => {
					"[event][id]" => "uxauthd"
					"[rsa][message][id1]" => "uxauthd"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE uxauthd:01
		# line in RSA: <agent>[<process_id>]: No active DCs in domain '<domain>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: No active DCs in domain '%{domain}'." }
				id => "message-uxauthd:01"
				add_field => {
				"event_description" => "No active DCs in domain"
					"[event][id]" => "uxauthd:01"
					"[rsa][message][id1]" => "uxauthd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE uxauthd:02
		# line in RSA: <agent>[<process_id>]: Successfully renew proxy ticket for domain '<domain>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Successfully renew proxy ticket for domain '%{domain}'." }
				id => "message-uxauthd:02"
				add_field => {
				"event_description" => "Successfully renew proxy ticket for domain"
					"[event][id]" => "uxauthd:02"
					"[rsa][message][id1]" => "uxauthd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId580
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId580" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId580"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "audispd" {
		# MESSAGE audispd:01
		# line in RSA: <agent>: node=<fld1> type=<event_type> msg=<info>: pid=<process_id> uid=<uid> old auid=<fld2> new auid=<fld6> old ses=<fld8> new ses=<sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: node=%{fld1} type=%{event_type} msg=%{info}: pid=%{process_id} uid=%{uid} old auid=%{fld2} new auid=%{fld6} old ses=%{fld8} new ses=%{sessionid}" }
				id => "message-audispd:01"
				add_field => {
					"[event][id]" => "audispd:01"
					"[rsa][message][id1]" => "audispd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE audispd:02
		# line in RSA: <agent>: node=<fld1> type=<event_type> msg=<info>: user pid=<process_id> uid=<uid> auid=<fld6> ses=<sessionid> msg='op=<action> {direction=<direction> cipher=<encryption_type> ksize=<bytes>|kind=<fld31> fp=<fld32> direction=<direction>} spid=<fld10> suid=<fld21> {rport=<dport> laddr=<saddr> lport=<sport> exe="<fld11>"|exe="<fld11>"} hostname=<fld15> addr=<hostip> terminal=<terminal> res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<fld1>[^\s]*)[\s]+type=(?<event_type>[^\s]*)[\s]+msg=(?<info>[^:]*):[\s]+user[\s]+pid=(?<process_id>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+auid=(?<fld6>[^\s]*)[\s]+ses=(?<sessionid>[^\s]*)[\s]+msg='op=(?<action>[^\s]*)[\s]+(direction=(?<direction>[^\s]*)[\s]+cipher=(?<encryption_type>[^\s]*)[\s]+ksize=(?<bytes>[^\s]*)|kind=(?<fld31>[^\s]*)[\s]+fp=(?<fld32>[^\s]*)[\s]+direction=(?<direction>[^\s]*))[\s]+spid=(?<fld10>[^\s]*)[\s]+suid=(?<fld21>[^\s]*)[\s]+(rport=(?<dport>[^\s]*)[\s]+laddr=(?<saddr>[^\s]*)[\s]+lport=(?<sport>[^\s]*)[\s]+exe=\"(?<fld11>[^\"]*)\"|exe=\"(?<fld11>[^\"]*)\")[\s]+hostname=(?<fld15>[^\s]*)[\s]+addr=(?<hostip>[^\s]*)[\s]+terminal=(?<terminal>[^\s]*)[\s]+res=(?<result>[^']*)'$" }
				id => "message-audispd:02"
				add_field => {
					"[event][id]" => "audispd:02"
					"[rsa][message][id1]" => "audispd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE audispd:03
		# line in RSA: <agent>: node=<fld1> type=<event_type> msg=<info>: user pid=<process_id> uid=<uid> auid=<fld6> ses=<sessionid> msg='op=<action> {acct="<username>"|id=<id1>} exe="<fld8>" hostname=<fld9> addr=<fld10> terminal=<terminal> res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<fld1>[^\s]*)[\s]+type=(?<event_type>[^\s]*)[\s]+msg=(?<info>[^:]*):[\s]+user[\s]+pid=(?<process_id>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+auid=(?<fld6>[^\s]*)[\s]+ses=(?<sessionid>[^\s]*)[\s]+msg='op=(?<action>[^\s]*)[\s]+(acct=\"(?<username>[^\"]*)\"|id=(?<id1>[^\s]*))[\s]+exe=\"(?<fld8>[^\"]*)\"[\s]+hostname=(?<fld9>[^\s]*)[\s]+addr=(?<fld10>[^\s]*)[\s]+terminal=(?<terminal>[^\s]*)[\s]+res=(?<result>[^']*)'$" }
				id => "message-audispd:03"
				add_field => {
					"[event][id]" => "audispd:03"
					"[rsa][message][id1]" => "audispd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId584
	# line in RSA: <agent>: [origin software="<fld33>" swVersion="<version>" x-pid="<process_id>" x-info="<info>"] rsyslogd was HUPed
	else if [logstash][msgparser][id] == "msgParserId584" {
		dissect {
			mapping => { "message" => "%{agent}: [origin software=\"%{fld33}\" swVersion=\"%{version}\" x-pid=\"%{process_id}\" x-info=\"%{info}\"] rsyslogd was HUPed" }
			id => "msgParserId584"
			add_field => {
				"event_description" => "rsyslogd was HUPed"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_hpuxmsg.json"
#			template_name => "hpux_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
