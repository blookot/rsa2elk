# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "linux_snare"
			"[observer][name]" => "Linux (Snare)"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <month> <day> <time> <hhost> LinuxKAudit criticality,<hlevel> event,<messageid>,<hdate> <htime><!payload:hhost>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-linux_snaremsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,access,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,access,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId0"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,acct_mgmt,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId1" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,acct_mgmt,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId1"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,creat,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId2" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,creat,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId2"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,create_module,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId3" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,create_module,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId3"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,delete_module,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId4" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,delete_module,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "execve" {
		# MESSAGE execve
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,execve,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> argc,<fld7> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> per,<fld24> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,execve,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+argc,(?<fld7>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+per,(?<fld24>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-execve"
				add_field => {
					"[event][id]" => "execve"
					"[rsa][message][id1]" => "execve"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE execve:01
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,execve,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> argc,<fld7> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,execve,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+argc,(?<fld7>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-execve:01"
				add_field => {
					"[event][id]" => "execve:01"
					"[rsa][message][id1]" => "execve:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE execve:02
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,execve,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> {items|item},<fld18> key,<fld19> name,<fld21> ppid,<parent_pid> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,execve,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-execve:02"
				add_field => {
					"[event][id]" => "execve:02"
					"[rsa][message][id1]" => "execve:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE execve:03
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,execve,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> {items|item},<fld18> key,<fld19> ppid,<parent_pid> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,execve,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-execve:03"
				add_field => {
					"[event][id]" => "execve:03"
					"[rsa][message][id1]" => "execve:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE execve:04
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,execve,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> {items|item},<fld18> key,<fld19> ppid,<parent_pid> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,execve,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-execve:04"
				add_field => {
					"[event][id]" => "execve:04"
					"[rsa][message][id1]" => "execve:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE execve:05
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,execve,<event_time_string> arch,<fld6> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> auid,<fld8> cwd,<fld10> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> {items|item},<fld18>{mode,<fld20>|<fld20>}name,<fld21> {ogid,<fld22> ouid,<fld23> rdev,<fld25>|<space>} sgid,<fld26>,<fld27> suid,<fld28>,<fld29>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
	}
	# PARSER msgParserId11
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,ftruncate,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId11" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,ftruncate,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId11"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,ftruncate64,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId12" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,ftruncate64,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId12"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,link,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId13" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,link,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId13"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "login_auth" {
		# MESSAGE login_auth
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,login_auth,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,yes {acct,<c_username> addr,<saddr>|addr,<saddr>} auid,<fld8> exe,<fld12> hostname,<shost> {msg,<event_description> subj,<fld31>|msg,<event_description>} {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,login_auth,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),yes[\s]+(acct,(?<c_username>[^\s]*)[\s]+addr,(?<saddr>[^\s]*)|addr,(?<saddr>[^\s]*))[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+hostname,(?<shost>[^\s]*)[\s]+(msg,(?<event_description>[^\s]*)[\s]+subj,(?<fld31>[^\s]*)|msg,(?<event_description>[^\s]*))[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-login_auth"
				add_field => {
				"result" => "yes"
					"[event][id]" => "login_auth"
					"[rsa][message][id1]" => "login_auth"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE login_auth_failed
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,login_auth,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,no {acct,<c_username> addr,<saddr>|addr,<saddr>} auid,<fld8> exe,<fld12> hostname,<shost> {msg,<event_description> subj,<fld31>|msg,<event_description>} {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,login_auth,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),no[\s]+(acct,(?<c_username>[^\s]*)[\s]+addr,(?<saddr>[^\s]*)|addr,(?<saddr>[^\s]*))[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+hostname,(?<shost>[^\s]*)[\s]+(msg,(?<event_description>[^\s]*)[\s]+subj,(?<fld31>[^\s]*)|msg,(?<event_description>[^\s]*))[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-login_auth_failed"
				add_field => {
				"result" => "no"
					"[event][id]" => "login_auth_failed"
					"[rsa][message][id1]" => "login_auth_failed"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,login_start,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,yes {acct,<c_username> addr,<saddr>|addr,<saddr>} auid,<fld8> exe,<fld12> hostname,<shost> {msg,<event_description> subj,<fld31>|msg,<event_description>} {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId16" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,login_start,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),yes[\s]+(acct,(?<c_username>[^\s]*)[\s]+addr,(?<saddr>[^\s]*)|addr,(?<saddr>[^\s]*))[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+hostname,(?<shost>[^\s]*)[\s]+(msg,(?<event_description>[^\s]*)[\s]+subj,(?<fld31>[^\s]*)|msg,(?<event_description>[^\s]*))[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId16"
			add_field => {
				"result" => "yes"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,logout,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> acct,<c_username> addr,<saddr> auid,<fld8> exe,<fld12> hostname,<shost> {msg,<event_description> subj,<fld31>|msg,<event_description>} {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId17" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,logout,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+acct,(?<c_username>[^\s]*)[\s]+addr,(?<saddr>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+hostname,(?<shost>[^\s]*)[\s]+(msg,(?<event_description>[^\s]*)[\s]+subj,(?<fld31>[^\s]*)|msg,(?<event_description>[^\s]*))[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId17"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,mknod,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId18" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,mknod,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId18"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,mount,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId19" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,mount,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId19"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "open" {
		# MESSAGE open
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,open,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> items,<fld18> key,<fld19> ppid,<parent_pid> <fld20> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,open,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+items,(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+(?<fld20>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-open"
				add_field => {
					"[event][id]" => "open"
					"[rsa][message][id1]" => "open"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE open:01
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,open,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> items,<fld18> key,<fld19> ppid,<parent_pid> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,open,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+items,(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-open:01"
				add_field => {
					"[event][id]" => "open:01"
					"[rsa][message][id1]" => "open:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE open:02
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,open,<event_time_string> arch,<fld6> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> {items,<fld18> key,<fld19>|items,<fld18>} mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> perm,<fld33> perm_mask,<fld34> rdev,<fld25> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> watch,<fld35>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,open,(?<event_time_string>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+(items,(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)|items,(?<fld18>[^\s]*))[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+perm,(?<fld33>[^\s]*)[\s]+perm_mask,(?<fld34>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+watch,(?<fld35>.*)$" }
				id => "message-open:02"
				add_field => {
					"[event][id]" => "open:02"
					"[rsa][message][id1]" => "open:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE open:03
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,open,<event_time_string> arch,<fld6> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> {items,<fld18> key,<fld19>|items,<fld18>} mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23>{per,<fld24>|<space>}ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> tty,<terminal>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
	}
	# PARSER msgParserId24
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,quotactl,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId24" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,quotactl,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId24"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,reboot,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId25" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,reboot,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId25"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,rename,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId26" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,rename,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId26"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,setdomainname,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId27" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,setdomainname,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId27"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId28
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,settimeofday,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId28" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,settimeofday,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId28"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "socketcall" {
		# MESSAGE socketcall
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,socketcall,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> items,<fld18> key,<fld19> {nargs,<fld7> per,<fld24>|nargs,<fld7>|<fld9>} ppid,<parent_pid> {saddr,<saddr> ses,<sessionid>|ses,<sessionid>} sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,socketcall,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+items,(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+(nargs,(?<fld7>[^\s]*)[\s]+per,(?<fld24>[^\s]*)|nargs,(?<fld7>[^\s]*)|(?<fld9>[^\s]*))[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+(saddr,(?<saddr>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)|ses,(?<sessionid>[^\s]*))[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
				id => "message-socketcall"
				add_field => {
					"[event][id]" => "socketcall"
					"[rsa][message][id1]" => "socketcall"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
		# MESSAGE socketcall:01
		# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,socketcall,<event_time_string> arch,<fld6> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> auid,<fld8> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> items,<fld18> {nargs,<fld7> per,<fld24>|nargs,<fld7>|<fld9>} {saddr,<saddr> sgid,<fld26>,<fld27>|sgid,<fld26>,<fld27>} suid,<fld28>,<fld29> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,socketcall,(?<event_time_string>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+items,(?<fld18>[^\s]*)[\s]+(nargs,(?<fld7>[^\s]*)[\s]+per,(?<fld24>[^\s]*)|nargs,(?<fld7>[^\s]*)|(?<fld9>[^\s]*))[\s]+(saddr,(?<saddr>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)|sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*))[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+$" }
				id => "message-socketcall:01"
				add_field => {
					"[event][id]" => "socketcall:01"
					"[rsa][message][id1]" => "socketcall:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,swapon,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId31" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,swapon,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId31"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId32
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,swapoff,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId32" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,swapoff,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId32"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId33
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,symlink,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> cwd,<fld10> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId33" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,symlink,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+cwd,(?<fld10>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId33"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId34
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,truncate,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId34" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,truncate,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId34"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId35
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,truncate64,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId35" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,truncate64,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId35"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId36
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,umount,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId36" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,umount,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId36"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA:   <hostname> LinuxKAudit criticality,<severity> event,umount2,<event_time_string> uid,<uid>,<username> id,<fld30> gid,<groupid>,<group> euid,<fld1>,<fld2> egid,<fld3>,<fld4> process,<process_id>,<process> return,<resultcode>,<result> a0,<fld5> arch,<fld6> auid,<fld8> dev,<fld11> exe,<fld12> fsgid,<fld13>,<fld14> fsuid,<fld15>,<fld16> inode,<fld17> {items|item},<fld18> key,<fld19> mode,<fld20> name,<fld21> ogid,<fld22> ouid,<fld23> ppid,<parent_pid> rdev,<fld25> ses,<sessionid> sgid,<fld26>,<fld27> suid,<fld28>,<fld29> {tty,<terminal>|terminal,<terminal>|<terminal>} 
	else if [logstash][msgparser][id] == "msgParserId37" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+LinuxKAudit[\s]+criticality,(?<severity>[^\s]*)[\s]+event,umount2,(?<event_time_string>[^\s]*)[\s]+uid,(?<uid>[^,]*),(?<username>[^\s]*)[\s]+id,(?<fld30>[^\s]*)[\s]+gid,(?<groupid>[^,]*),(?<group>[^\s]*)[\s]+euid,(?<fld1>[^,]*),(?<fld2>[^\s]*)[\s]+egid,(?<fld3>[^,]*),(?<fld4>[^\s]*)[\s]+process,(?<process_id>[^,]*),(?<process>[^\s]*)[\s]+return,(?<resultcode>[^,]*),(?<result>[^\s]*)[\s]+a0,(?<fld5>[^\s]*)[\s]+arch,(?<fld6>[^\s]*)[\s]+auid,(?<fld8>[^\s]*)[\s]+dev,(?<fld11>[^\s]*)[\s]+exe,(?<fld12>[^\s]*)[\s]+fsgid,(?<fld13>[^,]*),(?<fld14>[^\s]*)[\s]+fsuid,(?<fld15>[^,]*),(?<fld16>[^\s]*)[\s]+inode,(?<fld17>[^\s]*)[\s]+(items|item),(?<fld18>[^\s]*)[\s]+key,(?<fld19>[^\s]*)[\s]+mode,(?<fld20>[^\s]*)[\s]+name,(?<fld21>[^\s]*)[\s]+ogid,(?<fld22>[^\s]*)[\s]+ouid,(?<fld23>[^\s]*)[\s]+ppid,(?<parent_pid>[^\s]*)[\s]+rdev,(?<fld25>[^\s]*)[\s]+ses,(?<sessionid>[^\s]*)[\s]+sgid,(?<fld26>[^,]*),(?<fld27>[^\s]*)[\s]+suid,(?<fld28>[^,]*),(?<fld29>[^\s]*)[\s]+(tty,(?<terminal>[^\s]*)|terminal,(?<terminal>[^\s]*)|(?<terminal>[^\s]*))[\s]+$" }
			id => "msgParserId37"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMd H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-linux_snaremsg.json"
#			template_name => "linux_snare_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
