# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "msfuag"
			"[observer][name]" => "Microsoft Forefront UAG"
			"[observer][type]" => "VPN"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %MS_Forefront_UAG: <messageid>^^<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%MS_Forefront_UAG:[\s]+(?<message>(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> <hfld9> <hfld10>:<hhost>:<hhostip>:<hfld11>:[MsgID: <messageid>]<!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld9>[^\s]*)[\s]+(?<hfld10>[^:]*):(?<message>(?<hhost>[^:]*):(?<hhostip>[^:]*):(?<hfld11>[^:]*):\[MsgID:[\s]+(?<messageid>[^\]]*)\](?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> <hfld9> <hfld10>:<hhost>:<hfld11>:[MsgID: <messageid>]<!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld9>[^\s]*)[\s]+(?<hfld10>[^:]*):(?<message>(?<hhost>[^:]*):(?<hfld11>[^:]*):\[MsgID:[\s]+(?<messageid>[^\]]*)\](?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-msfuagmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "81" {
		# MESSAGE 81
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-81"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "81"
					"[rsa][message][id1]" => "81"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 81:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The user <username> failed to change a password on trunk <network_service>(secure=<fld11>) using authentication server <obj_name>. The source IP address is <saddr>. The session ID is <sessionid>. The error code is <result>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The user %{username} failed to change a password on trunk %{network_service}(secure=%{fld11}) using authentication server %{obj_name}. The source IP address is %{saddr}. The session ID is %{sessionid}. The error code is %{result}." }
				id => "message-81:01"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "81:01"
					"[rsa][message][id1]" => "81:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "61" {
		# MESSAGE 61
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-61"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "61"
					"[rsa][message][id1]" => "61"
					"[event][categoryid]" => "1801030100"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 61:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> Session <sessionid> was stopped on trunk <network_service> (secure=<fld11>). The source IP address is <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} Session %{sessionid} was stopped on trunk %{network_service} (secure=%{fld11}). The source IP address is %{saddr}" }
				id => "message-61:01"
				add_field => {
					"[event][id]" => "61:01"
					"[rsa][message][id1]" => "61:01"
					"[event][categoryid]" => "1801030100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "60" {
		# MESSAGE 60
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-60"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "60"
					"[rsa][message][id1]" => "60"
					"[event][categoryid]" => "1801020100"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 60:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> Session <sessionid> was started on trunk <network_service> (secure=<fld11>). The source IP address is <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} Session %{sessionid} was started on trunk %{network_service} (secure=%{fld11}). The source IP address is %{saddr}" }
				id => "message-60:01"
				add_field => {
					"[event][id]" => "60:01"
					"[rsa][message][id1]" => "60:01"
					"[event][categoryid]" => "1801020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "68" {
		# MESSAGE 68
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-68"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "68"
					"[rsa][message][id1]" => "68"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 68:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} %{event_description}" }
				id => "message-68:01"
				add_field => {
					"[event][id]" => "68:01"
					"[rsa][message][id1]" => "68:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "14" {
		# MESSAGE 14
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description> Error code is Logon failure: <result>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description} Error code is Logon failure: %{result}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-14"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14"
					"[rsa][message][id1]" => "14"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 14:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> failed to log into trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>. Error code is Logon failure: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} failed to log into trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}. Error code is Logon failure: %{result}" }
				id => "message-14:01"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14:01"
					"[rsa][message][id1]" => "14:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:02
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> failed to log into trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>. Error code is Failed to authenticate.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} failed to log into trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}. Error code is Failed to authenticate." }
				id => "message-14:02"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14:02"
					"[rsa][message][id1]" => "14:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:03
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> failed to log into trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>. Error code is Missing credentials.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} failed to log into trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}. Error code is Missing credentials." }
				id => "message-14:03"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14:03"
					"[rsa][message][id1]" => "14:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:04
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> failed to log into trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>. Error code is The user's account has expired.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} failed to log into trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}. Error code is The user's account has expired." }
				id => "message-14:04"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14:04"
					"[rsa][message][id1]" => "14:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:05
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> failed to log into trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>. Error code is Failed to get user dn.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} failed to log into trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}. Error code is Failed to get user dn." }
				id => "message-14:05"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14:05"
					"[rsa][message][id1]" => "14:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:06
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> failed to log into trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>. Error code is <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} failed to log into trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}. Error code is %{result}." }
				id => "message-14:06"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "14:06"
					"[rsa][message][id1]" => "14:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:07
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]Logon failure for <username>. The error was Logon failure: <result> and the user source IP was <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]Logon failure for %{username}. The error was Logon failure: %{result} and the user source IP was %{saddr}" }
				id => "message-14:07"
				add_field => {
					"[event][id]" => "14:07"
					"[rsa][message][id1]" => "14:07"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 14:08
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]Logon failure for <username>. The error was <result> and the user source IP was <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]Logon failure for %{username}. The error was %{result} and the user source IP was %{saddr}" }
				id => "message-14:08"
				add_field => {
					"[event][id]" => "14:08"
					"[rsa][message][id1]" => "14:08"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "13" {
		# MESSAGE 13
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-13"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "13"
					"[rsa][message][id1]" => "13"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 13:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> with source IP address <saddr> logged in to trunk <network_service> (secure=<fld11>) using authentication server <obj_name> with session ID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} with source IP address %{saddr} logged in to trunk %{network_service} (secure=%{fld11}) using authentication server %{obj_name} with session ID %{sessionid}" }
				id => "message-13:01"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "13:01"
					"[rsa][message][id1]" => "13:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "1" {
		# MESSAGE 1
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-1"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "1"
					"[rsa][message][id1]" => "1"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 1:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> The user <username> with source IP address <saddr> was added to session <sessionid> on trunk <network_service> (secure=<fld11>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} The user %{username} with source IP address %{saddr} was added to session %{sessionid} on trunk %{network_service} (secure=%{fld11})." }
				id => "message-1:01"
				add_field => {
					"[event][id]" => "1:01"
					"[rsa][message][id1]" => "1:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 1:02
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]User <username> logged in successfully from <saddr> IP Address.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]User %{username} logged in successfully from %{saddr} IP Address." }
				id => "message-1:02"
				add_field => {
					"[event][id]" => "1:02"
					"[rsa][message][id1]" => "1:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "5" {
		# MESSAGE 5
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-5"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "5"
					"[rsa][message][id1]" => "5"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 5:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]User <username> successfully opened the <application> Application.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]User %{username} successfully opened the %{application} Application." }
				id => "message-5:01"
				add_field => {
					"[event][id]" => "5:01"
					"[rsa][message][id1]" => "5:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "84" {
		# MESSAGE 84
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-84"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "84"
					"[rsa][message][id1]" => "84"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 84:01
		# line in RSA: <dhost>:<service>:[MsgID:<id>]<fld13> The user <username> logged on to the <application>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{service}:[MsgID:%{id}]%{fld13} The user %{username} logged on to the %{application}" }
				id => "message-84:01"
				add_field => {
					"[event][id]" => "84:01"
					"[rsa][message][id1]" => "84:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "21" {
		# MESSAGE 21
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-21"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "21"
					"[rsa][message][id1]" => "21"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 21:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> User <username> from source IP address <saddr> logged in on-the-fly to trunk <network_service> <fld11> using authentication server <obj_name>. The session ID is <sessionid>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} User %{username} from source IP address %{saddr} logged in on-the-fly to trunk %{network_service} %{fld11} using authentication server %{obj_name}. The session ID is %{sessionid}." }
				id => "message-21:01"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "21:01"
					"[rsa][message][id1]" => "21:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "58" {
		# MESSAGE 58
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-58"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "58"
					"[rsa][message][id1]" => "58"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 58:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> A request from source IP address <saddr> on trunk <network_service> Secure=<fld11> for server <fld14> failed because the requested URL (<url>) contains an <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} A request from source IP address %{saddr} on trunk %{network_service} Secure=%{fld11} for server %{fld14} failed because the requested URL (%{url}) contains an %{result}." }
				id => "message-58:01"
				add_field => {
					"[event][id]" => "58:01"
					"[rsa][message][id1]" => "58:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "67" {
		# MESSAGE 67
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-67"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "67"
					"[rsa][message][id1]" => "67"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 67:02
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> A request from source IP address <saddr>, user <username> on trunk <network_service> Secure=<fld11> for application <application> of type <fld12> failed. The URL <url> contains an illegal path. The rule applied is <rulename>. The method is <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} A request from source IP address %{saddr}, user %{username} on trunk %{network_service} Secure=%{fld11} for application %{application} of type %{fld12} failed. The URL %{url} contains an illegal path. The rule applied is %{rulename}. The method is %{action}" }
				id => "message-67:02"
				add_field => {
					"[event][id]" => "67:02"
					"[rsa][message][id1]" => "67:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 67:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> A request from source IP address <saddr> on trunk <network_service> Secure=<fld11> for application <application> of type <fld12> failed. The URL <url> contains an illegal path. The rule applied is <rulename>. The method is <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} A request from source IP address %{saddr} on trunk %{network_service} Secure=%{fld11} for application %{application} of type %{fld12} failed. The URL %{url} contains an illegal path. The rule applied is %{rulename}. The method is %{action}" }
				id => "message-67:01"
				add_field => {
					"[event][id]" => "67:01"
					"[rsa][message][id1]" => "67:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "2" {
		# MESSAGE 2
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-2"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "2"
					"[rsa][message][id1]" => "2"
					"[event][categoryid]" => "1801030100"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 2:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> The user <username> with source IP address <saddr> was removed from session <sessionid> on trunk <network_service> (secure=<fld11>). Reason for removal: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} The user %{username} with source IP address %{saddr} was removed from session %{sessionid} on trunk %{network_service} (secure=%{fld11}). Reason for removal: %{result}" }
				id => "message-2:01"
				add_field => {
					"[event][id]" => "2:01"
					"[rsa][message][id1]" => "2:01"
					"[event][categoryid]" => "1801030100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId0
	# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
	else if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
			id => "msgParserId0"
			add_field => {
				"obj_type" => "Authentication Server"
				"[logstash][fullDateTimeString]" => "%{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "22" {
		# MESSAGE 22
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-22"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "22"
					"[rsa][message][id1]" => "22"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 22:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> The user <username> from source IP address <saddr> failed to log in on-the-fly to trunk <network_service> <fld11> using authentication server <obj_name> The session ID is <sessionid>. The error code is <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} The user %{username} from source IP address %{saddr} failed to log in on-the-fly to trunk %{network_service} %{fld11} using authentication server %{obj_name} The session ID is %{sessionid}. The error code is %{result}" }
				id => "message-22:01"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "22:01"
					"[rsa][message][id1]" => "22:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "24" {
		# MESSAGE 24
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-24"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "24"
					"[rsa][message][id1]" => "24"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 24:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> The request from user <username> at source IP address <saddr> to trunk <network_service> Secure=<fld11> failed because <result>. The session ID is <sessionid>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} The request from user %{username} at source IP address %{saddr} to trunk %{network_service} Secure=%{fld11} failed because %{result}. The session ID is %{sessionid}" }
				id => "message-24:01"
				add_field => {
					"[event][id]" => "24:01"
					"[rsa][message][id1]" => "24:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "69" {
		# MESSAGE 69
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-69"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "69"
					"[rsa][message][id1]" => "69"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 69:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> <event_description>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} %{event_description}" }
				id => "message-69:01"
				add_field => {
					"[event][id]" => "69:01"
					"[rsa][message][id1]" => "69:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "3" {
		# MESSAGE 3
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-3"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "3"
					"[rsa][message][id1]" => "3"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 3:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> <event_description>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} %{event_description}" }
				id => "message-3:01"
				add_field => {
					"[event][id]" => "3:01"
					"[rsa][message][id1]" => "3:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "10" {
		# MESSAGE 10
		# line in RSA: <id>^^<saddr>^^<username>^^<fld1>^^<fld2>.<fld3>^^<dhost>^^<protocol>^^<fld4>^^<action>^^<url>^^<rulename>^^<event_description>^^<resultcode>^^<fld5>^^<obj_name>^^<fld6>^^<version>^^<service>^^<id1>^^<severity>^^<event_type>^^<context>^^<sessionid>^^<network_service>^^<fld8>^^<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{saddr}^^%{username}^^%{fld1}^^%{fld2}.%{fld3}^^%{dhost}^^%{protocol}^^%{fld4}^^%{action}^^%{url}^^%{rulename}^^%{event_description}^^%{resultcode}^^%{fld5}^^%{obj_name}^^%{fld6}^^%{version}^^%{service}^^%{id1}^^%{severity}^^%{event_type}^^%{context}^^%{sessionid}^^%{network_service}^^%{fld8}^^%{stransaddr}" }
				id => "message-10"
				add_field => {
				"obj_type" => "Authentication Server"
					"[event][id]" => "10"
					"[rsa][message][id1]" => "10"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:ss" ] }
			}
		}
		# MESSAGE 10:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]<fld13> <event_description>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]%{fld13} %{event_description}" }
				id => "message-10:01"
				add_field => {
					"[event][id]" => "10:01"
					"[rsa][message][id1]" => "10:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]There was an unauthorized access attempt on trunk <network_service>; Secure=<fld11> in application <fld12>. The application server address is <saddr>. The session ID is <sessionid>. The error code is Access denied (<result>).
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]There was an unauthorized access attempt on trunk %{network_service}; Secure=%{fld11} in application %{fld12}. The application server address is %{saddr}. The session ID is %{sessionid}. The error code is Access denied (%{result})." }
			id => "msgParserId19"
			add_field => {
				"obj_type" => "Authentication Server"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "55" {
		# MESSAGE 55:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user <username> to trunk <network_service>; Secure=<fld11> for application <application> of type <fld21> failed because the URL <url> must not contain parameters. The method is <action>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user %{username} to trunk %{network_service}; Secure=%{fld11} for application %{application} of type %{fld21} failed because the URL %{url} must not contain parameters. The method is %{action}." }
				id => "message-55:01"
				add_field => {
					"[event][id]" => "55:01"
					"[rsa][message][id1]" => "55:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 55
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user <username> to trunk <network_service> Secure=<fld11> for application <application> of type <fld21> failed because the URL <url> must not contain parameters. The method is <action>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user %{username} to trunk %{network_service} Secure=%{fld11} for application %{application} of type %{fld21} failed because the URL %{url} must not contain parameters. The method is %{action}." }
				id => "message-55"
				add_field => {
					"[event][id]" => "55"
					"[rsa][message][id1]" => "55"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The user <username> from source IP address <saddr> and session <sessionid> changed a password for authentication server <obj_name> in trunk <network_service> (secure=<fld21>).  
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The user %{username} from source IP address %{saddr} and session %{sessionid} changed a password for authentication server %{obj_name} in trunk %{network_service} (secure=%{fld21})." }
			id => "msgParserId24"
			add_field => {
				"obj_type" => "Authentication Server"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "51" {
		# MESSAGE 51
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user <username> on trunk <network_service>;<space>Secure=<fld11> for application <application> of type <fld21> because the <fld33> method used <action> is not valid for requested URL <url>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user %{username} on trunk %{network_service};%{space}Secure=%{fld11} for application %{application} of type %{fld21} because the %{fld33} method used %{action} is not valid for requested URL %{url}." }
				id => "message-51"
				add_field => {
					"[event][id]" => "51"
					"[rsa][message][id1]" => "51"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 51:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user <username> on trunk <network_service><space>Secure=<fld11> for application <application> of type <fld21> because the <fld33> method used <action> is not valid for requested URL <url>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user %{username} on trunk %{network_service}%{space}Secure=%{fld11} for application %{application} of type %{fld21} because the %{fld33} method used %{action} is not valid for requested URL %{url}." }
				id => "message-51:01"
				add_field => {
					"[event][id]" => "51:01"
					"[rsa][message][id1]" => "51:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The request failed. An invalid version of the <protocol> protocol was used. The version used is <version>. The request came from user <username> with source IP address <saddr>. 
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The request failed. An invalid version of the %{protocol} protocol was used. The version used is %{version}. The request came from user %{username} with source IP address %{saddr}." }
			id => "msgParserId28"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]Forefront UAG modified the URL from <fld12> to <url>. Reason for the modification: <result>. The source IP address is <saddr> and the user is <username>. 
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]Forefront UAG modified the URL from %{fld12} to %{url}. Reason for the modification: %{result}. The source IP address is %{saddr} and the user is %{username}." }
			id => "msgParserId29"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "31" {
		# MESSAGE 31
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The request from source IP address <saddr>, user  to trunk <network_service>;<space>Secure=<fld11> failed due to an error with a predefined global rule.  The error code is <result>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The request from source IP address %{saddr}, user  to trunk %{network_service};%{space}Secure=%{fld11} failed due to an error with a predefined global rule.  The error code is %{result}." }
				id => "message-31"
				add_field => {
					"[event][id]" => "31"
					"[rsa][message][id1]" => "31"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 31:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The request from source IP address <saddr>, user  to trunk <network_service><space>Secure=<fld11> failed due to an error with a predefined global rule.  The error code is <result>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The request from source IP address %{saddr}, user  to trunk %{network_service}%{space}Secure=%{fld11} failed due to an error with a predefined global rule.  The error code is %{result}." }
				id => "message-31:01"
				add_field => {
					"[event][id]" => "31:01"
					"[rsa][message][id1]" => "31:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "49" {
		# MESSAGE 49
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request on trunk <network_service>;<space>Secure=<fld11> failed because of an unknown application. The URL is <url>. The source IP address is <saddr>. The user is <username>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request on trunk %{network_service};%{space}Secure=%{fld11} failed because of an unknown application. The URL is %{url}. The source IP address is %{saddr}. The user is %{username}." }
				id => "message-49"
				add_field => {
					"[event][id]" => "49"
					"[rsa][message][id1]" => "49"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 49:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request on trunk <network_service><space>Secure=<fld11> failed because of an unknown application. The URL is <url>. The source IP address is <saddr>. The user is <username>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request on trunk %{network_service}%{space}Secure=%{fld11} failed because of an unknown application. The URL is %{url}. The source IP address is %{saddr}. The user is %{username}." }
				id => "message-49:01"
				add_field => {
					"[event][id]" => "49:01"
					"[rsa][message][id1]" => "49:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "52" {
		# MESSAGE 52
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user  on trunk <network_service>;<space>Secure=<fld11> for application <application> of type <fld12> <disposition> because the data is not allowed with the method SEARCH when WebDAV is <action>. The URL is <url>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user  on trunk %{network_service};%{space}Secure=%{fld11} for application %{application} of type %{fld12} %{disposition} because the data is not allowed with the method SEARCH when WebDAV is %{action}. The URL is %{url}." }
				id => "message-52"
				add_field => {
					"[event][id]" => "52"
					"[rsa][message][id1]" => "52"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 52:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user  on trunk <network_service><space>Secure=<fld11> for application <application> of type <fld12> <disposition> because the data is not allowed with the method SEARCH when WebDAV is <action>. The URL is <url>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user  on trunk %{network_service}%{space}Secure=%{fld11} for application %{application} of type %{fld12} %{disposition} because the data is not allowed with the method SEARCH when WebDAV is %{action}. The URL is %{url}." }
				id => "message-52:01"
				add_field => {
					"[event][id]" => "52:01"
					"[rsa][message][id1]" => "52:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "45" {
		# MESSAGE 45
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request for application <application> of type <fld21> on <network_service>;<space>Secure=<fld11> <disposition>. The URL <url> was rejected by the URL inspection rule <rulename>. The reason for the failure: <result>. The method is <action>. The source IP address is <saddr>. The user is <username>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request for application %{application} of type %{fld21} on %{network_service};%{space}Secure=%{fld11} %{disposition}. The URL %{url} was rejected by the URL inspection rule %{rulename}. The reason for the failure: %{result}. The method is %{action}. The source IP address is %{saddr}. The user is %{username}." }
				id => "message-45"
				add_field => {
					"[event][id]" => "45"
					"[rsa][message][id1]" => "45"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 45:01
		# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request for application <application> of type <fld21> on <network_service><space>Secure=<fld11> <disposition>. The URL <url> was rejected by the URL inspection rule <rulename>. The reason for the failure: <result>. The method is <action>. The source IP address is <saddr>. The user is <username>.  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request for application %{application} of type %{fld21} on %{network_service}%{space}Secure=%{fld11} %{disposition}. The URL %{url} was rejected by the URL inspection rule %{rulename}. The reason for the failure: %{result}. The method is %{action}. The source IP address is %{saddr}. The user is %{username}." }
				id => "message-45:01"
				add_field => {
					"[event][id]" => "45:01"
					"[rsa][message][id1]" => "45:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A request from source IP address <saddr>, user <username> to trunk <network_service>; Secure=<fld11> for application <application> of type <fld12> failed. The endpoint device does not comply with access policy settings (<policyname>) for the requested application. The session ID is <sessionid>. The URL is<url>.
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A request from source IP address %{saddr}, user %{username} to trunk %{network_service}; Secure=%{fld11} for application %{application} of type %{fld12} failed. The endpoint device does not comply with access policy settings (%{policyname}) for the requested application. The session ID is %{sessionid}. The URL is%{url}." }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]A connection with application <application> cannot be established on trunk: <network_service>; Secure=<fld11>.  The application server address is <saddr>:<sport>. The session ID is <sessionid>. The process name is  <process>. The process hash is <fld21>. The error code is <result>.
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]A connection with application %{application} cannot be established on trunk: %{network_service}; Secure=%{fld11}.  The application server address is %{saddr}:%{sport}. The session ID is %{sessionid}. The process name is  %{process}. The process hash is %{fld21}. The error code is %{result}." }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]An authorized Remote Desktop Gateway resource <fld22> for user <username> was detected on trunk <network_service> (secure=<fld11>) for application ID <application>. The session ID is <sessionid>.
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]An authorized Remote Desktop Gateway resource %{fld22} for user %{username} was detected on trunk %{network_service} (secure=%{fld11}) for application ID %{application}. The session ID is %{sessionid}." }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The Remote Desktop Gateway connection was <disposition>. The session ID is <sessionid>. The context is <context>.
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The Remote Desktop Gateway connection was %{disposition}. The session ID is %{sessionid}. The context is %{context}." }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]An authorized Remote Desktop Gateway connection for the user <username> was detected on trunk <network_service> (secure=<fld11>) for application ID <application>. The session ID is <sessionid>. The session timeout value is <duration>. Idle Timeout value: <fld22>; TrustedClass: <fld23>; Clipboard: <fld24>; Printers: <fld25>; Drives <fld26>.
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]An authorized Remote Desktop Gateway connection for the user %{username} was detected on trunk %{network_service} (secure=%{fld11}) for application ID %{application}. The session ID is %{sessionid}. The session timeout value is %{duration}. Idle Timeout value: %{fld22}; TrustedClass: %{fld23}; Clipboard: %{fld24}; Printers: %{fld25}; Drives %{fld26}." }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: <dhost>:<daddr>:<service>:[MsgID:<id>]The RDG user <username> is authenticated in trunk <network_service> (secure=<fld11>) for application ID <application>. The session ID is <sessionid> and the context is <context>.
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{dhost}:%{daddr}:%{service}:[MsgID:%{id}]The RDG user %{username} is authenticated in trunk %{network_service} (secure=%{fld11}) for application ID %{application}. The session ID is %{sessionid} and the context is %{context}." }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-msfuagmsg.json"
#			template_name => "msfuag_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
