# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "squid"
			"[observer][name]" => "Squid"
			"[observer][type]" => "Web Logs"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %SQUID-4: <hsaddr> <hsport> [<fld20> <fld21>] "<messageid> <!payload:hsaddr>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SQUID\-4:[\s]+(?<message>(?<hsaddr>[^\s]*)[\s]+(?<hsport>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %SQUID-4: <hevent_time_string> <hduration> <hsaddr> <haction>/<hresultcode> <hsbytes> <messageid> <!payload:hevent_time_string>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SQUID\-4:[\s]+(?<message>(?<hevent_time_string>[^\s]*)[\s]+(?<hduration>[^\s]*)[\s]+(?<hsaddr>[^\s]*)[\s]+(?<haction>[^/]*)/(?<hresultcode>[^\s]*)[\s]+(?<hsbytes>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_squidmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "GET" {
		# MESSAGE GET
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-GET"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_theme" => "ALM"
					"[event][id]" => "GET"
					"[rsa][message][id1]" => "GET"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE GET:02
		# line in RSA: <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" <action> <daddr> <content_type> <duration>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action} %{daddr} %{content_type} %{duration}" }
				id => "message-GET:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_theme" => "ALM"
					"[event][id]" => "GET:02"
					"[rsa][message][id1]" => "GET:02"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE GET:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-GET:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_theme" => "ALM"
					"[event][id]" => "GET:01"
					"[rsa][message][id1]" => "GET:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HEAD" {
		# MESSAGE HEAD
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-HEAD"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_theme" => "ALM"
					"[event][id]" => "HEAD"
					"[rsa][message][id1]" => "HEAD"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE HEAD:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-HEAD:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_theme" => "ALM"
					"[event][id]" => "HEAD:01"
					"[rsa][message][id1]" => "HEAD:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "POST" {
		# MESSAGE POST
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-POST"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "ALM"
					"[event][id]" => "POST"
					"[rsa][message][id1]" => "POST"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE POST:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-POST:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "ALM"
					"[event][id]" => "POST:01"
					"[rsa][message][id1]" => "POST:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PUT" {
		# MESSAGE PUT
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-PUT"
				add_field => {
					"[event][id]" => "PUT"
					"[rsa][message][id1]" => "PUT"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE PUT:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-PUT:01"
				add_field => {
					"[event][id]" => "PUT:01"
					"[rsa][message][id1]" => "PUT:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DELETE" {
		# MESSAGE DELETE
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-DELETE"
				add_field => {
					"[event][id]" => "DELETE"
					"[rsa][message][id1]" => "DELETE"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE DELETE:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-DELETE:01"
				add_field => {
					"[event][id]" => "DELETE:01"
					"[rsa][message][id1]" => "DELETE:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TRACE" {
		# MESSAGE TRACE
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-TRACE"
				add_field => {
					"[event][id]" => "TRACE"
					"[rsa][message][id1]" => "TRACE"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE TRACE:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-TRACE:01"
				add_field => {
					"[event][id]" => "TRACE:01"
					"[rsa][message][id1]" => "TRACE:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "OPTIONS" {
		# MESSAGE OPTIONS
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-OPTIONS"
				add_field => {
					"[event][id]" => "OPTIONS"
					"[rsa][message][id1]" => "OPTIONS"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE OPTIONS:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-OPTIONS:01"
				add_field => {
					"[event][id]" => "OPTIONS:01"
					"[rsa][message][id1]" => "OPTIONS:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CONNECT" {
		# MESSAGE CONNECT
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-CONNECT"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "ALM"
					"[event][id]" => "CONNECT"
					"[rsa][message][id1]" => "CONNECT"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE CONNECT:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-CONNECT:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "ALM"
					"[event][id]" => "CONNECT:01"
					"[rsa][message][id1]" => "CONNECT:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ICP_QUERY" {
		# MESSAGE ICP_QUERY
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-ICP_QUERY"
				add_field => {
					"[event][id]" => "ICP_QUERY"
					"[rsa][message][id1]" => "ICP_QUERY"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE ICP_QUERY:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-ICP_QUERY:01"
				add_field => {
					"[event][id]" => "ICP_QUERY:01"
					"[rsa][message][id1]" => "ICP_QUERY:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PURGE" {
		# MESSAGE PURGE
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-PURGE"
				add_field => {
					"[event][id]" => "PURGE"
					"[rsa][message][id1]" => "PURGE"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE PURGE:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-PURGE:01"
				add_field => {
					"[event][id]" => "PURGE:01"
					"[rsa][message][id1]" => "PURGE:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PROPFIND" {
		# MESSAGE PROPFIND
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-PROPFIND"
				add_field => {
					"[event][id]" => "PROPFIND"
					"[rsa][message][id1]" => "PROPFIND"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE PROPFIND:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-PROPFIND:01"
				add_field => {
					"[event][id]" => "PROPFIND:01"
					"[rsa][message][id1]" => "PROPFIND:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PROPATCH" {
		# MESSAGE PROPATCH
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-PROPATCH"
				add_field => {
					"[event][id]" => "PROPATCH"
					"[rsa][message][id1]" => "PROPATCH"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE PROPATCH:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-PROPATCH:01"
				add_field => {
					"[event][id]" => "PROPATCH:01"
					"[rsa][message][id1]" => "PROPATCH:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "MKOL" {
		# MESSAGE MKOL
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-MKOL"
				add_field => {
					"[event][id]" => "MKOL"
					"[rsa][message][id1]" => "MKOL"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE MKOL:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-MKOL:01"
				add_field => {
					"[event][id]" => "MKOL:01"
					"[rsa][message][id1]" => "MKOL:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "COPY" {
		# MESSAGE COPY
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-COPY"
				add_field => {
					"[event][id]" => "COPY"
					"[rsa][message][id1]" => "COPY"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE COPY:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-COPY:01"
				add_field => {
					"[event][id]" => "COPY:01"
					"[rsa][message][id1]" => "COPY:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "MOVE" {
		# MESSAGE MOVE
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-MOVE"
				add_field => {
					"[event][id]" => "MOVE"
					"[rsa][message][id1]" => "MOVE"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE MOVE:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-MOVE:01"
				add_field => {
					"[event][id]" => "MOVE:01"
					"[rsa][message][id1]" => "MOVE:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LOCK" {
		# MESSAGE LOCK
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-LOCK"
				add_field => {
					"[event][id]" => "LOCK"
					"[rsa][message][id1]" => "LOCK"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE LOCK:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-LOCK:01"
				add_field => {
					"[event][id]" => "LOCK:01"
					"[rsa][message][id1]" => "LOCK:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "UNLOCK" {
		# MESSAGE UNLOCK
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-UNLOCK"
				add_field => {
					"[event][id]" => "UNLOCK"
					"[rsa][message][id1]" => "UNLOCK"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE UNLOCK:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-UNLOCK:01"
				add_field => {
					"[event][id]" => "UNLOCK:01"
					"[rsa][message][id1]" => "UNLOCK:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "NONE" {
		# MESSAGE NONE
		# line in RSA:  <saddr> <sport> [<fld20> <fld21>] "<web_method> <url> <network_service>" <daddr> <fld1> <username> "<webpage>" <resultcode> <content_type> <sbytes> "<web_referer>" "<user_agent>" <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{sport} [%{fld20} %{fld21}] \"%{web_method} %{url} %{network_service}\" %{daddr} %{fld1} %{username} \"%{webpage}\" %{resultcode} %{content_type} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" %{action}" }
				id => "message-NONE"
				add_field => {
					"[event][id]" => "NONE"
					"[rsa][message][id1]" => "NONE"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE NONE:01
		# line in RSA:  <event_time_string>.<fld20> <duration> <saddr> <action>/<resultcode> <sbytes> <web_method> <url> <username> <h_code>/<daddr> <content_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_time_string}.%{fld20} %{duration} %{saddr} %{action}/%{resultcode} %{sbytes} %{web_method} %{url} %{username} %{h_code}/%{daddr} %{content_type}" }
				id => "message-NONE:01"
				add_field => {
					"[event][id]" => "NONE:01"
					"[rsa][message][id1]" => "NONE:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_squidmsg.json"
#			template_name => "squid_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
