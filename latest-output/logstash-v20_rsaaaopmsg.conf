# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "rsaaaop"
			"[observer][name]" => "RSA Adaptive Authentication OnPrem"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %AAOP-AM-Audit <hdate> <htime>,<fld1> <htzone> | [<hconnectionid>] | [<hsessionid>] | [<fld2> | <huser_org> | <fld3> | <hsaddr> | <fld4> | <fld5> | <fld6> | <fld7> | [<fld8>|<messageid>|<!payload:hconnectionid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%AAOP\-AM\-Audit[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^,]*),(?<fld1>[^\s]*)[\s]+(?<htzone>[^\s]*)[\s]+\|[\s]+\[(?<message>(?<hconnectionid>[^\]]*)\][\s]+\|[\s]+\[(?<hsessionid>[^\]]*)\][\s]+\|[\s]+\[(?<fld2>[^\s]*)[\s]+\|[\s]+(?<huser_org>[^\s]*)[\s]+\|[\s]+(?<fld3>[^\s]*)[\s]+\|[\s]+(?<hsaddr>[^\s]*)[\s]+\|[\s]+(?<fld4>[^\s]*)[\s]+\|[\s]+(?<fld5>[^\s]*)[\s]+\|[\s]+(?<fld6>[^\s]*)[\s]+\|[\s]+(?<fld7>[^\s]*)[\s]+\|[\s]+\[(?<fld8>[^\|]*)\|(?<messageid>[^\|]*)\|(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %AAOP-Audit <hdate> <htime>,<fld1> <htzone> | [<hconnectionid>] | [<hsessionid>] | [<huid> | <huser_org> | <fld2> | <hsaddr> | <fld3> | <messageid><!payload:hconnectionid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0003
	# line in RSA: %AAOP-Admin-Audit <hdate> <htime>,<fld1> <htzone> | [<hconnectionid>] | [<hsessionid>] | [<huid> | <huser_org> | <fld2> | <hsaddr> | <messageid><!payload:hconnectionid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0004
	# line in RSA: %AAOP-Alarm <hdate> <htime>,<fld1> <htzone> ERROR - [<hconnectionid>] | [<hsessionid>] | [<huid>] | [<messageid><!payload:hconnectionid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0005
	# line in RSA: %AAOP-CM-Audit <hday> <hmonth> <hyear> <htime> | [<fld1>|<messageid>|<!payload:fld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%AAOP\-CM\-Audit[\s]+(?<hday>[^\s]*)[\s]+(?<hmonth>[^\s]*)[\s]+(?<hyear>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+\|[\s]+\[(?<message>(?<fld1>[^\|]*)\|(?<messageid>[^\|]*)\|(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %AAOP-Admin-Alarm <hdate> <htime>,<fld1> <htzone> ERROR - <<<messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_rsaaaopmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "AUTH_RESULT" {
		# MESSAGE AUTH_RESULT_SUCCESS
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [&AUTH_RESULT_RESULT=SUCCESS&AUTH_RESULT_RISK=<fld16>&CREDENTIAL_TYPE=<authmethod>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [&AUTH_RESULT_RESULT=SUCCESS&AUTH_RESULT_RISK=%{fld16}&CREDENTIAL_TYPE=%{authmethod}]]" }
				id => "message-AUTH_RESULT_SUCCESS"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "AUTH_RESULT_SUCCESS"
					"[rsa][message][id1]" => "AUTH_RESULT_SUCCESS"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE AUTH_RESULT_FAIL
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [&AUTH_RESULT_RESULT=FAIL&AUTH_RESULT_RISK=<fld16>&CREDENTIAL_TYPE=<authmethod>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [&AUTH_RESULT_RESULT=FAIL&AUTH_RESULT_RISK=%{fld16}&CREDENTIAL_TYPE=%{authmethod}]]" }
				id => "message-AUTH_RESULT_FAIL"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "AUTH_RESULT_FAIL"
					"[rsa][message][id1]" => "AUTH_RESULT_FAIL"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [&OOB_CHANNEL_TYPE=<authmethod>&OOB_KEY=<fld17>&OOB_MASKED_URL=<fld18>&OOB_STATUS=<result>]]
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [&OOB_CHANNEL_TYPE=%{authmethod}&OOB_KEY=%{fld17}&OOB_MASKED_URL=%{fld18}&OOB_STATUS=%{result}]]" }
			id => "msgParserId2"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [&OOB_CHANNEL_TYPE=<authmethod>&OOB_KEY=<fld17>&OOB_MASKED_URL=<fld18>]]
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [&OOB_CHANNEL_TYPE=%{authmethod}&OOB_KEY=%{fld17}&OOB_MASKED_URL=%{fld18}]]" }
			id => "msgParserId3"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [&FORENSIC_EVENT_TYPE=<action>&FORENSIC_SCORE=<risk_num>&POLICY_OUTCOME=<result>]]
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [&FORENSIC_EVENT_TYPE=%{action}&FORENSIC_SCORE=%{risk_num}&POLICY_OUTCOME=%{result}]]" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [&CREDENTIAL_TYPE=<authmethod>]]
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [&CREDENTIAL_TYPE=%{authmethod}]]" }
			id => "msgParserId5"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
			id => "msgParserId6"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "USER_CONFIRMED_CHL_MAINT" {
		# MESSAGE USER_CONFIRMED_CHL_MAINT:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_CONFIRMED_CHL_MAINT:01"
				add_field => {
					"[event][id]" => "USER_CONFIRMED_CHL_MAINT:01"
					"[rsa][message][id1]" => "USER_CONFIRMED_CHL_MAINT:01"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE USER_CONFIRMED_CHL_MAINT:02
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_CONFIRMED_CHL_MAINT:02"
				add_field => {
					"[event][id]" => "USER_CONFIRMED_CHL_MAINT:02"
					"[rsa][message][id1]" => "USER_CONFIRMED_CHL_MAINT:02"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "USER_CONFIRMED_IMG_MAINT" {
		# MESSAGE USER_CONFIRMED_IMG_MAINT:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_CONFIRMED_IMG_MAINT:01"
				add_field => {
					"[event][id]" => "USER_CONFIRMED_IMG_MAINT:01"
					"[rsa][message][id1]" => "USER_CONFIRMED_IMG_MAINT:01"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE USER_CONFIRMED_IMG_MAINT:02
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_CONFIRMED_IMG_MAINT:02"
				add_field => {
					"[event][id]" => "USER_CONFIRMED_IMG_MAINT:02"
					"[rsa][message][id1]" => "USER_CONFIRMED_IMG_MAINT:02"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "USER_ID_LOCKED_OUT" {
		# MESSAGE USER_ID_LOCKED_OUT:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_ID_LOCKED_OUT:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Deny"
				"ec_theme" => "Authentication"
					"[event][id]" => "USER_ID_LOCKED_OUT:01"
					"[rsa][message][id1]" => "USER_ID_LOCKED_OUT:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE USER_ID_LOCKED_OUT:02
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_ID_LOCKED_OUT:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Deny"
				"ec_theme" => "Authentication"
					"[event][id]" => "USER_ID_LOCKED_OUT:02"
					"[rsa][message][id1]" => "USER_ID_LOCKED_OUT:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
			id => "msgParserId10"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Permit"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "USER_ID_NOT_FOUND" {
		# MESSAGE USER_ID_NOT_FOUND:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
				id => "message-USER_ID_NOT_FOUND:01"
				add_field => {
					"[event][id]" => "USER_ID_NOT_FOUND:01"
					"[rsa][message][id1]" => "USER_ID_NOT_FOUND:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE USER_ID_NOT_FOUND:02
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld5>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld5}]]" }
				id => "message-USER_ID_NOT_FOUND:02"
				add_field => {
					"[event][id]" => "USER_ID_NOT_FOUND:02"
					"[rsa][message][id1]" => "USER_ID_NOT_FOUND:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld6> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld6} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
			id => "msgParserId12"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
			id => "msgParserId9"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Deny"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <event_type> | <id> | <fld8> | <fld9> | [<fld16>]]
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld16}]]" }
			id => "msgParserId13"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: <connectionid>] | [<sessionid>] | [<fld11> | <user_org> | <fld23> | <saddr> | <fld7> | <fld3> | <fld4> | <fld5> | [<fld16>|<event_type>|<fld18>|<username>|<fld19>|<event_description>]]
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{fld11} | %{user_org} | %{fld23} | %{saddr} | %{fld7} | %{fld3} | %{fld4} | %{fld5} | [%{fld16}|%{event_type}|%{fld18}|%{username}|%{fld19}|%{event_description}]]" }
			id => "msgParserId14"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "LOGIN_ATTEMPT" {
		# MESSAGE LOGIN_ATTEMPT:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<fld11> | <user_org> | <fld23> | <saddr> | <fld7> | <fld3> | <fld4> | <fld5> | [<fld16>|<event_type>|<fld8>|<username>|<fld9>|<event_description>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{fld11} | %{user_org} | %{fld23} | %{saddr} | %{fld7} | %{fld3} | %{fld4} | %{fld5} | [%{fld16}|%{event_type}|%{fld8}|%{username}|%{fld9}|%{event_description}]]" }
				id => "message-LOGIN_ATTEMPT:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Unknown"
					"[event][id]" => "LOGIN_ATTEMPT:01"
					"[rsa][message][id1]" => "LOGIN_ATTEMPT:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE LOGIN_ATTEMPT:02
		# line in RSA: <fld1>|<event_type>|<saddr>|<username>|<fld3>|<fld4>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{event_type}|%{saddr}|%{username}|%{fld3}|%{fld4}]" }
				id => "message-LOGIN_ATTEMPT:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Unknown"
					"[event][id]" => "LOGIN_ATTEMPT:02"
					"[rsa][message][id1]" => "LOGIN_ATTEMPT:02"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LOGOUT" {
		# MESSAGE LOGOUT:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<fld11> | <user_org> | <fld23> | <saddr> | <fld7> | <fld3> | <fld4> | <fld5> | [<fld16>|<event_type>|<fld8>|<username>|<fld9>|<event_description>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{fld11} | %{user_org} | %{fld23} | %{saddr} | %{fld7} | %{fld3} | %{fld4} | %{fld5} | [%{fld16}|%{event_type}|%{fld8}|%{username}|%{fld9}|%{event_description}]]" }
				id => "message-LOGOUT:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "LOGOUT:01"
					"[rsa][message][id1]" => "LOGOUT:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE LOGOUT:02
		# line in RSA: <fld1>|<event_type>|<fld2>|<username>|<fld3>|<event_description>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{event_type}|%{fld2}|%{username}|%{fld3}|%{event_description}]" }
				id => "message-LOGOUT:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "LOGOUT:02"
					"[rsa][message][id1]" => "LOGOUT:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DATASTORE_ERROR" {
		# MESSAGE DATASTORE_ERROR:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid>] | [<event_type> | <event_description>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid}] | [%{event_type} | %{event_description}]" }
				id => "message-DATASTORE_ERROR:01"
				add_field => {
					"[event][id]" => "DATASTORE_ERROR:01"
					"[rsa][message][id1]" => "DATASTORE_ERROR:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE DATASTORE_ERROR:02
		# line in RSA: <event_type> | <event_description>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} | %{event_description}>" }
				id => "message-DATASTORE_ERROR:02"
				add_field => {
					"[event][id]" => "DATASTORE_ERROR:02"
					"[rsa][message][id1]" => "DATASTORE_ERROR:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CONFIG_ERROR" {
		# MESSAGE CONFIG_ERROR:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid>] | [<event_type> | <event_description>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid}] | [%{event_type} | %{event_description}]" }
				id => "message-CONFIG_ERROR:01"
				add_field => {
					"[event][id]" => "CONFIG_ERROR:01"
					"[rsa][message][id1]" => "CONFIG_ERROR:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE CONFIG_ERROR:02
		# line in RSA: <event_type> | <event_description>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} | %{event_description}>" }
				id => "message-CONFIG_ERROR:02"
				add_field => {
					"[event][id]" => "CONFIG_ERROR:02"
					"[rsa][message][id1]" => "CONFIG_ERROR:02"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "RSA_ERROR" {
		# MESSAGE RSA_ERROR:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid>] | [<event_type> | <event_description>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid}] | [%{event_type} | %{event_description}]" }
				id => "message-RSA_ERROR:01"
				add_field => {
					"[event][id]" => "RSA_ERROR:01"
					"[rsa][message][id1]" => "RSA_ERROR:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE RSA_ERROR:02
		# line in RSA: <event_type> | <event_description>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} | %{event_description}>" }
				id => "message-RSA_ERROR:02"
				add_field => {
					"[event][id]" => "RSA_ERROR:02"
					"[rsa][message][id1]" => "RSA_ERROR:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PROTOCOL_ERROR" {
		# MESSAGE PROTOCOL_ERROR:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid>] | [<event_type> | <event_description>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid}] | [%{event_type} | %{event_description}]" }
				id => "message-PROTOCOL_ERROR:01"
				add_field => {
					"[event][id]" => "PROTOCOL_ERROR:01"
					"[rsa][message][id1]" => "PROTOCOL_ERROR:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE PROTOCOL_ERROR:02
		# line in RSA: <event_type> | <event_description>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} | %{event_description}>" }
				id => "message-PROTOCOL_ERROR:02"
				add_field => {
					"[event][id]" => "PROTOCOL_ERROR:02"
					"[rsa][message][id1]" => "PROTOCOL_ERROR:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SYSTEM_ERROR" {
		# MESSAGE SYSTEM_ERROR:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid>] | [<event_type> | <event_description>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid}] | [%{event_type} | %{event_description}]" }
				id => "message-SYSTEM_ERROR:01"
				add_field => {
					"[event][id]" => "SYSTEM_ERROR:01"
					"[rsa][message][id1]" => "SYSTEM_ERROR:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE SYSTEM_ERROR:02
		# line in RSA: <event_type> | <event_description>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} | %{event_description}>" }
				id => "message-SYSTEM_ERROR:02"
				add_field => {
					"[event][id]" => "SYSTEM_ERROR:02"
					"[rsa][message][id1]" => "SYSTEM_ERROR:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ACCESS_BLOCKED" {
		# MESSAGE ACCESS_BLOCKED:01
		# line in RSA: <connectionid>] | [<sessionid>] | [<uid>] | [<event_type> | <event_description>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid}] | [%{event_type} | %{event_description}]" }
				id => "message-ACCESS_BLOCKED:01"
				add_field => {
					"[event][id]" => "ACCESS_BLOCKED:01"
					"[rsa][message][id1]" => "ACCESS_BLOCKED:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE ACCESS_BLOCKED:02
		# line in RSA: <event_type> | <event_description>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} | %{event_description}>" }
				id => "message-ACCESS_BLOCKED:02"
				add_field => {
					"[event][id]" => "ACCESS_BLOCKED:02"
					"[rsa][message][id1]" => "ACCESS_BLOCKED:02"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA: <fld1>|<fld2>|<fld3>|<fld4>|<fld5>|parameters: action:<event_type> username:<username> ] 
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{fld1}|%{fld2}|%{fld3}|%{fld4}|%{fld5}|parameters: action:%{event_type} username:%{username} ]" }
			id => "msgParserId19"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId20
	# line in RSA: <fld1>|<event_type>|<saddr>|<username>|<fld3>|<event_description>] 
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{fld1}|%{event_type}|%{saddr}|%{username}|%{fld3}|%{event_description}]" }
			id => "msgParserId20"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId21
	# line in RSA: <fld1>|<event_type>|<fld2>|<username>|<fld3>|<event_description>] 
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{fld1}|%{event_type}|%{fld2}|%{username}|%{fld3}|%{event_description}]" }
			id => "msgParserId21"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId24
	# line in RSA: <connectionid>] | [<sessionid>] | [<uid> | <user_org> | <fld23> | <saddr> | <fld7> | <event_type> | <id> | <fld8> | <fld9> | [<fld6>]]
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{connectionid}] | [%{sessionid}] | [%{uid} | %{user_org} | %{fld23} | %{saddr} | %{fld7} | %{event_type} | %{id} | %{fld8} | %{fld9} | [%{fld6}]]" }
			id => "msgParserId24"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_rsaaaopmsg.json"
#			template_name => "rsaaaop_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
