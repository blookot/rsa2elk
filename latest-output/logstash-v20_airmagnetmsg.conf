# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "airmagnet"
			"[observer][name]" => "Airmagnet Enterprise"
			"[observer][type]" => "Wireless Devices"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hfld2> <hcategory>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hcategory>[^:]*):[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hfld2> <hcategory>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hcategory>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_airmagnetmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "802.11g" {
		# MESSAGE 000030
		# line in RSA:  802.11g AP with short slot time from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: 802.11g AP <access_point> (SSID:<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.11g AP with short slot time from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: 802.11g AP %{access_point} (SSID:%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000030"
				add_field => {
				"event_description" => "802.111g with short slot time"
				"severity" => "%{hcategory}"
					"[event][id]" => "000030"
					"[rsa][message][id1]" => "000030"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000031
		# line in RSA:  802.11g AP beacons wrong protection from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: 802.11g AP <access_point> (SSID:<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.11g AP beacons wrong protection from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: 802.11g AP %{access_point} (SSID:%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000031"
				add_field => {
				"event_description" => "802.11g AP beacons wrong protection"
				"severity" => "%{hcategory}"
					"[event][id]" => "000031"
					"[rsa][message][id1]" => "000031"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000032
		# line in RSA:  802.11g pre-standard device from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID:<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.11g pre-standard device from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID:%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000032"
				add_field => {
				"event_description" => "802.11g pre-standard device"
				"severity" => "%{hcategory}"
					"[event][id]" => "000032"
					"[rsa][message][id1]" => "000032"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000035
		# line in RSA:  802.11g protection mechanism not implemented from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: 802.11g client station <macaddr> (SSID : <ssid>) violated the advisory from its AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.11g protection mechanism not implemented from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: 802.11g client station %{macaddr} (SSID : %{ssid}) violated the advisory from its AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000035"
				add_field => {
				"event_description" => "802.11g protection mechanism not implemented"
				"severity" => "%{hcategory}"
					"[event][id]" => "000035"
					"[rsa][message][id1]" => "000035"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000061
		# line in RSA:  802.11g protection mechanism overhead from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: 802.11g AP <access_point> (Name: <node> ) (SSID:<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.11g protection mechanism overhead from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: 802.11g AP %{access_point} (Name: %{node} ) (SSID:%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000061"
				add_field => {
				"event_description" => "802.11g protection mechanism not overhead"
				"severity" => "%{hcategory}"
					"[event][id]" => "000061"
					"[rsa][message][id1]" => "000061"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "802.1x" {
		# MESSAGE 000001
		# line in RSA: 802.1x rekey timeout too long <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: By monitoring the <fld6> authentication and encryption transaction, the system detected that AP <access_point> (Name: <node> ; SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.1x rekey timeout too long %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: By monitoring the %{fld6} authentication and encryption transaction, the system detected that AP %{access_point} (Name: %{node} ; SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000001"
				add_field => {
				"event_description" => "802.1x rekey timeout too long"
				"severity" => "%{hcategory}"
					"[event][id]" => "000001"
					"[rsa][message][id1]" => "000001"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000067
		# line in RSA:  802.1x unencrypted broadcast or multicast from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP: <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.1x unencrypted broadcast or multicast from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP: %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000067"
				add_field => {
				"event_description" => "802.1x unencrypted broadcast or multicast from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000067"
					"[rsa][message][id1]" => "000067"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000089
		# line in RSA:  802.1x unencrypted broadcast or multicast from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "802.1x unencrypted broadcast or multicast from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000089"
				add_field => {
				"event_description" => "802.1x unencrypted broadcast or multicast from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000089"
					"[rsa][message][id1]" => "000089"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA:  Access Point down from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> of SSID <ssid><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "Access Point down from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Access Point %{access_point} of SSID %{ssid}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId8"
			add_field => {
				"event_description" => "Access Point down"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Ad-hoc" {
		# MESSAGE 000002
		# line in RSA:  Ad-hoc node using AP's SSID <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Under the same SSID (<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Ad-hoc node using AP's SSID %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Under the same SSID (%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000002"
				add_field => {
				"event_description" => "Ad-hoc node using AP's SSID"
				"severity" => "%{hcategory}"
					"[event][id]" => "000002"
					"[rsa][message][id1]" => "000002"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000003
		# line in RSA:  Ad-hoc station detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Station <macaddr> (SSID:<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Ad-hoc station detected %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Station %{macaddr} (SSID:%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000003"
				add_field => {
				"event_description" => "Ad-hoc station detected"
				"severity" => "%{hcategory}"
					"[event][id]" => "000003"
					"[rsa][message][id1]" => "000003"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000101
		# line in RSA:  Ad-hoc station broadcasting Free Public WiFi SSID from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <context>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Ad-hoc station broadcasting Free Public WiFi SSID from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: %{context}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000101"
				add_field => {
				"event_description" => "Ad-hoc station broadcasting Free Public WiFi SSID from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000101"
					"[rsa][message][id1]" => "000101"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "AP" {
		# MESSAGE 000004
		# line in RSA:  AP broadcasting SSID <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AP broadcasting SSID %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000004"
				add_field => {
				"event_description" => "AP broadcasting SSID"
				"severity" => "%{hcategory}"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000005
		# line in RSA:  AP overloaded by stations <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AP overloaded by stations %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Access Point %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000005"
				add_field => {
				"event_description" => "AP overloaded by stations"
				"severity" => "%{hcategory}"
					"[event][id]" => "000005"
					"[rsa][message][id1]" => "000005"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000006
		# line in RSA:  AP with encryption disabled <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AP with encryption disabled %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000006"
				add_field => {
				"event_description" => "AP with encryption disabled"
				"severity" => "%{hcategory}"
					"[event][id]" => "000006"
					"[rsa][message][id1]" => "000006"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000040
		# line in RSA:  AP operating in bridged mode detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AP operating in bridged mode detected from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Access Point %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000040"
				add_field => {
				"event_description" => "AP operating in bridged mode detected"
				"severity" => "%{hcategory}"
					"[event][id]" => "000040"
					"[rsa][message][id1]" => "000040"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000055
		# line in RSA:  AP system or firmware reset from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: { AP <access_point> (SSID : <ssid>) | AP <access_point>} <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*AP[\s]+system[\s]+or[\s]+firmware[\s]+reset[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+([\s]*AP[\s]+(?<access_point>[^\s]*)[\s]+\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*AP[\s]+(?<access_point>[^\s]*))[\s]+(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000055"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "OS"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "AP system or firmware reset"
				"severity" => "%{hcategory}"
					"[event][id]" => "000055"
					"[rsa][message][id1]" => "000055"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000057
		# line in RSA:  AP overloaded by utilization from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AP overloaded by utilization from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Access Point %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000057"
				add_field => {
				"event_description" => "AP overloaded by utilization"
				"severity" => "%{hcategory}"
					"[event][id]" => "000057"
					"[rsa][message][id1]" => "000057"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000075
		# line in RSA:  AP configuration changed (Channel) from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> { (Name: <node> SSID : <ssid>) | (SSID : <ssid>) }<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*AP[\s]+configuration[\s]+changed[\s]+\(Channel\)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Access[\s]+Point[\s]+(?<access_point>[^\s]*)[\s]+([\s]*\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+)(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000075"
				add_field => {
				"event_description" => "AP configuration changed (Channel) from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000075"
					"[rsa][message][id1]" => "000075"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Channel" {
		# MESSAGE 000034
		# line in RSA:  Channel with overloaded APs from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Channel with overloaded APs from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000034"
				add_field => {
				"event_description" => "Channel with overloaded APs"
				"severity" => "%{hcategory}"
					"[event][id]" => "000034"
					"[rsa][message][id1]" => "000034"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000036
		# line in RSA:  Channel with high noise level from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Channel with high noise level from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000036"
				add_field => {
				"event_description" => "Channel with hign noise level"
				"severity" => "%{hcategory}"
					"[event][id]" => "000036"
					"[rsa][message][id1]" => "000036"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  Client with encryption disabled <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr> (Name: <node> ; SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "Client with encryption disabled %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr} (Name: %{node} ; SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId21"
			add_field => {
				"event_description" => "Client with encryption disabled"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA:  Conflicting AP configuration from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "Conflicting AP configuration from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId22"
			add_field => {
				"event_description" => "Client with encryption disabled"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:  Crackable WEP IV key used <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client Station <macaddr> (Name: <node> ; SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "Crackable WEP IV key used %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client Station %{macaddr} (Name: %{node} ; SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId23"
			add_field => {
				"event_description" => "Crackable WEP IV key used"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Day-Zero" {
		# MESSAGE 000009
		# line in RSA:  Day-Zero attack by WLAN security anomaly <fld1> from sensor <sensor>, <fld2>Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Day-Zero attack by WLAN security anomaly %{fld1} from sensor %{sensor}, %{fld2}Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000009"
				add_field => {
				"event_description" => "Day-Zero attack by WLAN security anomaly"
				"severity" => "%{hcategory}"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1001020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000052
		# line in RSA:  Day-Zero attack by device security anomaly from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected that device <macaddr> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Day-Zero attack by device security anomaly from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The system has detected that device %{macaddr} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000052"
				add_field => {
				"event_description" => "Day-Zero attack by device security anomaly"
				"severity" => "%{hcategory}"
					"[event][id]" => "000052"
					"[rsa][message][id1]" => "000052"
					"[event][categoryid]" => "1001020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000058
		# line in RSA:  Day-Zero attack by device performance anomaly from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected that device <macaddr> { (Name: <node> SSID : <ssid>) | (SSID : <ssid>) }<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Day\-Zero[\s]+attack[\s]+by[\s]+device[\s]+performance[\s]+anomaly[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+The[\s]+system[\s]+has[\s]+detected[\s]+that[\s]+device[\s]+(?<macaddr>[^\s]*)[\s]+([\s]*\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+)(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000058"
				add_field => {
				"event_description" => "Day-Zero attack by device performance anomaly"
				"severity" => "%{hcategory}"
					"[event][id]" => "000058"
					"[rsa][message][id1]" => "000058"
					"[event][categoryid]" => "1001020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000085
		# line in RSA:  Day-Zero attack by WLAN performance anomaly from sensor <sensor>, <fld2>Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Day-Zero attack by WLAN performance anomaly from sensor %{sensor}, %{fld2}Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000085"
				add_field => {
				"event_description" => "Day-Zero attack by WLAN performance anomaly from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000085"
					"[rsa][message][id1]" => "000085"
					"[event][categoryid]" => "1001020300"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Device" {
		# MESSAGE 000010
		# line in RSA:  Device Probing for APs <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Wireless client station <macaddr> ( { Name: <node> SSID : <ssid>| SSID : <ssid> }) <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Device[\s]+Probing[\s]+for[\s]+APs[\s]+(?<fld1>[^\s]*)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Wireless[\s]+client[\s]+station[\s]+(?<macaddr>[^\s]*)[\s]+\([\s]+([\s]*Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)|[\s]*SSID[\s]+:[\s]+(?<ssid>[^\s]*)[\s]+)\)[\s]+(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000010"
				add_field => {
				"event_description" => "Device Probing for APs"
				"severity" => "%{hcategory}"
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000106
		# line in RSA:  Device Probing for APs <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Wireless client station <macaddr> is currently probing the WLAN with probe-request packets containing wildcard SSID (null string). <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device Probing for APs %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Wireless client station %{macaddr} is currently probing the WLAN with probe-request packets containing wildcard SSID (null string). %{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000106"
				add_field => {
				"event_description" => "Device Probing for APs with probe-request packets containing wildcard SSID (null string)"
				"severity" => "%{hcategory}"
					"[event][id]" => "000106"
					"[rsa][message][id1]" => "000106"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000011
		# line in RSA:  Device unprotected by TKIP <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device unprotected by TKIP %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000011"
				add_field => {
				"event_description" => "Device unprotected by TKIP"
				"severity" => "%{hcategory}"
					"[event][id]" => "000011"
					"[rsa][message][id1]" => "000011"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000029
		# line in RSA:  Device unprotected by VPN <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device unprotected by VPN %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000029"
				add_field => {
				"event_description" => "Device unprotected by VPN"
				"severity" => "%{hcategory}"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000038
		# line in RSA:  Device unprotected by Fortress encryption from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device unprotected by Fortress encryption from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000038"
				add_field => {
				"event_description" => "Device unprotected by Fortress encryption"
				"severity" => "%{hcategory}"
					"[event][id]" => "000038"
					"[rsa][message][id1]" => "000038"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000039
		# line in RSA:  Device unprotected by other encryption from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device unprotected by other encryption from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000039"
				add_field => {
				"event_description" => "Device unprotected by other encryption"
				"severity" => "%{hcategory}"
					"[event][id]" => "000039"
					"[rsa][message][id1]" => "000039"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000043
		# line in RSA:  Device using shared key authentication from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The flawed shared-key authentication is used by AP <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device using shared key authentication from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The flawed shared-key authentication is used by AP %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000043"
				add_field => {
				"event_description" => "Device using shared key authentication"
				"severity" => "%{hcategory}"
					"[event][id]" => "000043"
					"[rsa][message][id1]" => "000043"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000056
		# line in RSA:  Device using open authentication from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device using open authentication from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000056"
				add_field => {
				"event_description" => "Device using open authentication"
				"severity" => "%{hcategory}"
					"[event][id]" => "000056"
					"[rsa][message][id1]" => "000056"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000063
		# line in RSA:  Device unprotected by PEAP from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device unprotected by PEAP from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000063"
				add_field => {
				"event_description" => "Device unprotected by PEAP from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000063"
					"[rsa][message][id1]" => "000063"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000065
		# line in RSA:  Device vulnerable to Hotspot attack tools from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device vulnerable to Hotspot attack tools from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000065"
				add_field => {
				"event_description" => "Device vulnerable to Hotspot attack tools from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000065"
					"[rsa][message][id1]" => "000065"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000088
		# line in RSA:  Device vulnerable to Hotspot attack tools from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device vulnerable to Hotspot attack tools from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000088"
				add_field => {
				"event_description" => "Device vulnerable to Hotspot attack tools from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000088"
					"[rsa][message][id1]" => "000088"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000081
		# line in RSA:  Device not using EAP-TLS from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device not using EAP-TLS from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000081"
				add_field => {
				"event_description" => "Device not using EAP-TLS from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000081"
					"[rsa][message][id1]" => "000081"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000084
		# line in RSA:  Device unprotected by <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device unprotected by %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000084"
				add_field => {
				"event_description" => "Device unprotected by 802.11i/AES from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000084"
					"[rsa][message][id1]" => "000084"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Dictionary" {
		# MESSAGE 000069
		# line in RSA:  Dictionary attack on EAP methods from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: A dictionary attack on 802.1x EAP authentication may be under way against AP <access_point> (Name: <node> SSID : <ssid>) from client station <macaddr><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dictionary attack on EAP methods from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: A dictionary attack on 802.1x EAP authentication may be under way against AP %{access_point} (Name: %{node} SSID : %{ssid}) from client station %{macaddr}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000069"
				add_field => {
				"event_description" => "Dictionary attack on EAP methods from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000069"
					"[rsa][message][id1]" => "000069"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000091
		# line in RSA:  Dictionary attack on EAP methods from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dictionary attack on EAP methods from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: %{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000091"
				add_field => {
				"event_description" => "Dictionary attack on EAP methods from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000091"
					"[rsa][message][id1]" => "000091"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DoS" {
		# MESSAGE 000012
		# line in RSA: DoS: CTS Flood <fld1> from sensor <sensor>, <fld2>Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: CTS Flood %{fld1} from sensor %{sensor}, %{fld2}Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000012"
				add_field => {
				"event_description" => "DoS: CTS Flood"
				"severity" => "%{hcategory}"
					"[event][id]" => "000012"
					"[rsa][message][id1]" => "000012"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000013
		# line in RSA:  DoS: De-Auth broadcast attack <fld1> from sensor <sensor>, <fld2>Location: <location_desc>, <fld3> Description: There may have been a Denial-of-Service attack underway against the AP or client station <macaddr><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: De-Auth broadcast attack %{fld1} from sensor %{sensor}, %{fld2}Location: %{location_desc}, %{fld3} Description: There may have been a Denial-of-Service attack underway against the AP or client station %{macaddr}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000013"
				add_field => {
				"event_description" => "DoS: De-Auth broadcast attack"
				"severity" => "%{hcategory}"
					"[event][id]" => "000013"
					"[rsa][message][id1]" => "000013"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000014
		# line in RSA:  DoS: Dis-Assoc broadcast attack <fld1> from sensor <sensor>, <fld2>Location: <location_desc>, <fld3> Description: There may have been a Denial-of-Service attack underway against the AP or client station <macaddr><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: Dis-Assoc broadcast attack %{fld1} from sensor %{sensor}, %{fld2}Location: %{location_desc}, %{fld3} Description: There may have been a Denial-of-Service attack underway against the AP or client station %{macaddr}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000014"
				add_field => {
				"event_description" => "DoS: Dis-Assoc broadcast attack"
				"severity" => "%{hcategory}"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000037
		# line in RSA:  DoS: RF jamming attack from sensor <sensor>, <fld2>Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: RF jamming attack from sensor %{sensor}, %{fld2}Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000037"
				add_field => {
				"event_description" => "DoS: RF jamming attack"
				"severity" => "%{hcategory}"
					"[event][id]" => "000037"
					"[rsa][message][id1]" => "000037"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000045
		# line in RSA:  DoS: Unauthenticated association from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> { (Name: <node> SSID : <ssid>) | (SSID : <ssid>) }<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DoS:[\s]+Unauthenticated[\s]+association[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Access[\s]+Point[\s]+(?<access_point>[^\s]*)[\s]+([\s]*\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+)(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000045"
				add_field => {
				"event_description" => "DoS: Unauthenticated association"
				"severity" => "%{hcategory}"
					"[event][id]" => "000045"
					"[rsa][message][id1]" => "000045"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000049
		# line in RSA:  DoS: Authentication-failure attack from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: Authentication-failure attack from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000049"
				add_field => {
				"event_description" => "DoS: Authentication-failure attack"
				"severity" => "%{hcategory}"
					"[event][id]" => "000049"
					"[rsa][message][id1]" => "000049"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000051
		# line in RSA:  DoS: De-Auth flood attack from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <context>({ Name: <node>; SSID : <ssid> | SSID : <ssid>}). <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DoS:[\s]+De\-Auth[\s]+flood[\s]+attack[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+(?<context>[^\(]*)\(([\s]*Name:[\s]+(?<node>[^;]*);[\s]+SSID[\s]+:[\s]+(?<ssid>[^\s]*)[\s]+|[\s]*SSID[\s]+:[\s]+(?<ssid>[^\)]*))\)\.[\s]+(?<info>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000051"
				add_field => {
				"event_description" => "DoS: De-Auth flood attack from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000051"
					"[rsa][message][id1]" => "000051"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000076
		# line in RSA:  DoS: Probe req flooding from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: There may have been a Denial-of-Service attack underway from the Station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: Probe req flooding from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: There may have been a Denial-of-Service attack underway from the Station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000076"
				add_field => {
				"event_description" => "DoS: Probe req flooding from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000076"
					"[rsa][message][id1]" => "000076"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000077
		# line in RSA:  DoS: Authentication flood from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Access Point <access_point> ({Name: <node> SSID : <ssid> | SSID : <ssid>})<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DoS:[\s]+Authentication[\s]+flood[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Access[\s]+Point[\s]+(?<access_point>[^\s]*)[\s]+\((Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\s]*)[\s]+|[\s]*SSID[\s]+:[\s]+(?<ssid>[^\)]*))\)(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000077"
				add_field => {
				"event_description" => "DoS: Authentication flood from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000077"
					"[rsa][message][id1]" => "000077"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000078
		# line in RSA:  DoS: Probe resp flooding from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: There may have been a Denial-of-Service attack underway to the Station <macaddr><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: Probe resp flooding from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: There may have been a Denial-of-Service attack underway to the Station %{macaddr}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000078"
				add_field => {
				"event_description" => "DoS: Probe resp flooding from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000078"
					"[rsa][message][id1]" => "000078"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000093
		# line in RSA:  DoS: Improper broadcast packet from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected wireless device <macaddr> is broadcasting<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: Improper broadcast packet from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The system has detected wireless device %{macaddr} is broadcasting%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000093"
				add_field => {
				"event_description" => "DoS: Improper broadcast packet from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000093"
					"[rsa][message][id1]" => "000093"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000097
		# line in RSA:  DoS: RTS Flood from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <context>, RTS (Receive-To-Send) attack. <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DoS: RTS Flood from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: %{context}, RTS (Receive-To-Send) attack. %{info} Source MAC: %{smacaddr}, Channel: %{wifi_channel}" }
				id => "message-000097"
				add_field => {
				"event_description" => "DoS: RTS Flood from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000097"
					"[rsa][message][id1]" => "000097"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000098
		# line in RSA:  DoS: Premature EAP-Failure attack from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <context>({ Name: <node>; SSID : <ssid> | SSID : <ssid>}). <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DoS:[\s]+Premature[\s]+EAP\-Failure[\s]+attack[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+(?<context>[^\(]*)\(([\s]*Name:[\s]+(?<node>[^;]*);[\s]+SSID[\s]+:[\s]+(?<ssid>[^\s]*)[\s]+|[\s]*SSID[\s]+:[\s]+(?<ssid>[^\)]*))\)\.[\s]+(?<info>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000098"
				add_field => {
				"event_description" => "DoS: Premature EAP-Failure attack from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000098"
					"[rsa][message][id1]" => "000098"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000099
		# line in RSA:  DoS: PS-Poll Flood from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <context>({ Name: <node>; SSID : <ssid> | SSID : <ssid>}). <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DoS:[\s]+PS\-Poll[\s]+Flood[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+(?<context>[^\(]*)\(([\s]*Name:[\s]+(?<node>[^;]*);[\s]+SSID[\s]+:[\s]+(?<ssid>[^\s]*)[\s]+|[\s]*SSID[\s]+:[\s]+(?<ssid>[^\)]*))\)\.[\s]+(?<info>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000099"
				add_field => {
				"event_description" => "DoS: PS-Poll Flood from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000099"
					"[rsa][message][id1]" => "000099"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Excessive" {
		# MESSAGE 000015
		# line in RSA:  Excessive Bandwidth usage <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive Bandwidth usage %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000015"
				add_field => {
				"event_description" => "Excessive Bandwidth usage"
				"severity" => "%{hcategory}"
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000016
		# line in RSA:  Excessive frame retries <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive frame retries %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000016"
				add_field => {
				"event_description" => "Excessive frame retries"
				"severity" => "%{hcategory}"
					"[event][id]" => "000016"
					"[rsa][message][id1]" => "000016"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000017
		# line in RSA:  Excessive low speed transmission <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive low speed transmission %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000017"
				add_field => {
				"event_description" => "Excessive low speed transmission"
				"severity" => "%{hcategory}"
					"[event][id]" => "000017"
					"[rsa][message][id1]" => "000017"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000018
		# line in RSA:  Excessive Packet errors <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client Station <macaddr> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive Packet errors %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client Station %{macaddr} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000018"
				add_field => {
				"event_description" => "Excessive Packet errors"
				"severity" => "%{hcategory}"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000047
		# line in RSA:  Excessive multicast/broadcast from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive multicast/broadcast from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000047"
				add_field => {
				"event_description" => "Excessive multicast/broadcast"
				"severity" => "%{hcategory}"
					"[event][id]" => "000047"
					"[rsa][message][id1]" => "000047"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000048
		# line in RSA:  Excessive missed AP beacons from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The beacon miss rate from AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive missed AP beacons from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The beacon miss rate from AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000048"
				add_field => {
				"event_description" => "Excessive missed AP beacons"
				"severity" => "%{hcategory}"
					"[event][id]" => "000048"
					"[rsa][message][id1]" => "000048"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000074
		# line in RSA:  Excessive roaming or re-associations from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: { Client station <macaddr> (SSID : <ssid>) | Client station <macaddr>} has been excessively switching connections<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Excessive[\s]+roaming[\s]+or[\s]+re\-associations[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+([\s]*Client[\s]+station[\s]+(?<macaddr>[^\s]*)[\s]+\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*Client[\s]+station[\s]+(?<macaddr>[^\s]*))[\s]+has[\s]+been[\s]+excessively[\s]+switching[\s]+connections(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000074"
				add_field => {
				"event_description" => "Excessive roaming or re-associations from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000074"
					"[rsa][message][id1]" => "000074"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000094
		# line in RSA:  Excessive Packet errors on channel from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Excessive Packet errors on channel from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: %{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000094"
				add_field => {
				"event_description" => "Excessive Packet errors on channel from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000094"
					"[rsa][message][id1]" => "000094"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA:  Exposed Wireless Station detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: { Client station <macaddr> (SSID : <ssid>) | Client station <macaddr>} <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId65" {
		grok {
			match => { "message" => "^[\s]*Exposed[\s]+Wireless[\s]+Station[\s]+detected[\s]+(?<fld1>[^\s]*)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+([\s]*Client[\s]+station[\s]+(?<macaddr>[^\s]*)[\s]+\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*Client[\s]+station[\s]+(?<macaddr>[^\s]*))[\s]+(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
			id => "msgParserId65"
			add_field => {
				"event_description" => "Exposed Wireless Station detected"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA:  Fake APs detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "Fake APs detected from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId66"
			add_field => {
				"event_description" => "Fake APs detected from sensor"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA:  Hidden station detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "Hidden station detected %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId67"
			add_field => {
				"event_description" => "Hidden station detected"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA:  High management traffic overhead <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "High management traffic overhead %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId68"
			add_field => {
				"event_description" => "High management traffic overhead"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA:  Higher speed not supported from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "Higher speed not supported from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId69"
			add_field => {
				"event_description" => "Higher speed not supported"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA:  Interfering APs detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "Interfering APs detected from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId70"
			add_field => {
				"event_description" => "Interfering APs detected from sensor"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Missing" {
		# MESSAGE 000062
		# line in RSA:  Missing performance options from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Missing performance options from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000062"
				add_field => {
				"event_description" => "Missing performance options"
				"severity" => "%{hcategory}"
					"[event][id]" => "000062"
					"[rsa][message][id1]" => "000062"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000087
		# line in RSA:  Missing performance options from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Missing performance options from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000087"
				add_field => {
				"event_description" => "Missing performance options"
				"severity" => "%{hcategory}"
					"[event][id]" => "000087"
					"[rsa][message][id1]" => "000087"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "NetStumbler" {
		# MESSAGE 000022
		# line in RSA:  NetStumbler detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Wireless client station <macaddr> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NetStumbler detected %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Wireless client station %{macaddr} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000022"
				add_field => {
				"event_description" => "NetStumbler detected"
				"severity" => "%{hcategory}"
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000092
		# line in RSA:  NetStumbler detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AirMagnet has determined that (<macaddr> (SSID : <ssid>); Channel: <fld7>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NetStumbler detected from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AirMagnet has determined that (%{macaddr} (SSID : %{ssid}); Channel: %{fld7})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000092"
				add_field => {
				"event_description" => "NetStumbler detected from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000092"
					"[rsa][message][id1]" => "000092"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Potential" {
		# MESSAGE 000042
		# line in RSA:  Potential Honey pot AP detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Potential Honey pot AP detected from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The system has detected AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000042"
				add_field => {
				"event_description" => "Potential Honey pot AP detected"
				"severity" => "%{hcategory}"
					"[event][id]" => "000042"
					"[rsa][message][id1]" => "000042"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000079
		# line in RSA:  Potential Sky Jack attack from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected a potential Sky Jack attack against <fld11> from the AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Potential Sky Jack attack from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The system has detected a potential Sky Jack attack against %{fld11} from the AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000079"
				add_field => {
				"event_description" => "Potential Sky Jack attack from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000079"
					"[rsa][message][id1]" => "000079"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA:  PSPF violation <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client Station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "PSPF violation %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client Station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId77"
			add_field => {
				"event_description" => "PSPF violation"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA:  Reserved MGMT/CTRL frames sub type from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "Reserved MGMT/CTRL frames sub type from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId78"
			add_field => {
				"event_description" => "Reserved MGMT/CTRL frames sub type from sensor"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "RF" {
		# MESSAGE 000083
		# line in RSA:  RF regulatory rule violation from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RF regulatory rule violation from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000083"
				add_field => {
				"event_description" => "RF regulatory rule violation from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000083"
					"[rsa][message][id1]" => "000083"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000095
		# line in RSA:  RF regulatory rule violation from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client Station <macaddr> (SSID : <ssid>) is detected<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RF regulatory rule violation from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client Station %{macaddr} (SSID : %{ssid}) is detected%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000095"
				add_field => {
				"event_description" => "RF regulatory rule violation from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000095"
					"[rsa][message][id1]" => "000095"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Rogue" {
		# MESSAGE 000103
		# line in RSA:  Rogue AP by MAC address (ACL) <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue AP <access_point> { (Name: <node> SSID : <ssid>)  is detected | (SSID : <ssid>)  is detected | is detected }, its signal strength is <dclass_ratio1> dBm, and total frame count is <dclass_counter1>.  <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Rogue[\s]+AP[\s]+by[\s]+MAC[\s]+address[\s]+\(ACL\)[\s]+(?<fld1>[^\s]*)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Rogue[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+([\s]*\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+is[\s]+detected[\s]+|[\s]*\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+is[\s]+detected[\s]+|[\s]*is[\s]+detected[\s]+),[\s]+its[\s]+signal[\s]+strength[\s]+is[\s]+(?<dclass_ratio1>[^\s]*)[\s]+dBm,[\s]+and[\s]+total[\s]+frame[\s]+count[\s]+is[\s]+(?<dclass_counter1>[^\.]*)\.[\s]+(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000103"
				add_field => {
				"event_description" => "Rogue AP by MAC address (ACL)"
				"severity" => "%{hcategory}"
					"[event][id]" => "000103"
					"[rsa][message][id1]" => "000103"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000024
		# line in RSA:  Rogue AP by MAC address (ACL) <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue AP <access_point> { (Name: <node> SSID : <ssid>)  is detected | (SSID : <ssid>)  is detected | is detected }<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Rogue[\s]+AP[\s]+by[\s]+MAC[\s]+address[\s]+\(ACL\)[\s]+(?<fld1>[^\s]*)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Rogue[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+([\s]*\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+is[\s]+detected[\s]+|[\s]*\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+is[\s]+detected[\s]+|[\s]*is[\s]+detected[\s]+)(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000024"
				add_field => {
				"event_description" => "Rogue AP by MAC address (ACL)"
				"severity" => "%{hcategory}"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000104
		# line in RSA:  Rogue AP by MAC address (ACL) <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: , <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue AP by MAC address (ACL) %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: , %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000104"
				add_field => {
				"event_description" => "Rogue AP by MAC address (ACL)"
				"severity" => "%{hcategory}"
					"[event][id]" => "000104"
					"[rsa][message][id1]" => "000104"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000025
		# line in RSA:  Rogue station by MAC address (ACL) <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> { Description: Rogue Client Station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, | Source MAC: <smacaddr>, } <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Rogue[\s]+station[\s]+by[\s]+MAC[\s]+address[\s]+\(ACL\)[\s]+(?<fld1>[^\s]*)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+([\s]*Description:[\s]+Rogue[\s]+Client[\s]+Station[\s]+(?<macaddr>[^\s]*)[\s]+\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+|[\s]*Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+)[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000025"
				add_field => {
				"event_description" => "Rogue station by MAC address (ACL)"
				"severity" => "%{hcategory}"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000046
		# line in RSA:  Rogue AP detected inside from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue AP detected inside from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000046"
				add_field => {
				"event_description" => "Rogue AP detected inside"
				"severity" => "%{hcategory}"
					"[event][id]" => "000046"
					"[rsa][message][id1]" => "000046"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000054
		# line in RSA:  Rogue AP by wireless media type from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue Client Station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue AP by wireless media type from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue Client Station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000054"
				add_field => {
				"event_description" => "Rogue AP by wireless media type"
				"severity" => "%{hcategory}"
					"[event][id]" => "000054"
					"[rsa][message][id1]" => "000054"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000060
		# line in RSA:  Rogue AP traced on Enterprise wired network from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue AP <access_point><info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue AP traced on Enterprise wired network from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue AP %{access_point}%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000060"
				add_field => {
				"event_description" => "Rogue AP traced on Enterprise wired network"
				"severity" => "%{hcategory}"
					"[event][id]" => "000060"
					"[rsa][message][id1]" => "000060"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000064
		# line in RSA:  Rogue station by SSID from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue station by SSID from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000064"
				add_field => {
				"event_description" => "Rogue station by SSID from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000064"
					"[rsa][message][id1]" => "000064"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000066
		# line in RSA:  Rogue AP by SSID from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue AP by SSID from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000066"
				add_field => {
				"event_description" => "Rogue AP by SSID from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000066"
					"[rsa][message][id1]" => "000066"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000072
		# line in RSA:  Rogue AP by channel from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue AP <access_point> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue AP by channel from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue AP %{access_point} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000072"
				add_field => {
				"event_description" => "Rogue AP by channel from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000072"
					"[rsa][message][id1]" => "000072"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000073
		# line in RSA:  Rogue station by channel from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue Client Station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue station by channel from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue Client Station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000073"
				add_field => {
				"event_description" => "Rogue station by channel from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000073"
					"[rsa][message][id1]" => "000073"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000086
		# line in RSA:  Rogue station by IEEE ID (OUI) from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue Client Station <macaddr> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rogue station by IEEE ID (OUI) from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue Client Station %{macaddr} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000086"
				add_field => {
				"event_description" => "Rogue station by IEEE ID (OUI) from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000086"
					"[rsa][message][id1]" => "000086"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000203
		# line in RSA:  Rogue AP by IEEE ID (OUI) from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue AP <access_point> { (Name: <node> SSID : <ssid>)  is detected | (SSID : <ssid>)  is detected | is detected }.  <info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Rogue[\s]+AP[\s]+by[\s]+IEEE[\s]+ID[\s]+\(OUI\)[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+Rogue[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+([\s]*\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+is[\s]+detected[\s]+|[\s]*\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+is[\s]+detected[\s]+|[\s]*is[\s]+detected[\s]+)\.[\s]+(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000203"
				add_field => {
				"event_description" => "Rogue AP by IEEE ID (OUI)"
				"severity" => "%{hcategory}"
					"[event][id]" => "000203"
					"[rsa][message][id1]" => "000203"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA:  SmartEdge Sensor down from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: SmartEdge Sensor <fld1> (MAC Address <macaddr>) at <hostip> has been missing its heart-beat messages. <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "SmartEdge Sensor down from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: SmartEdge Sensor %{fld1} (MAC Address %{macaddr}) at %{hostip} has been missing its heart-beat messages. %{info} Source MAC: %{smacaddr}, Channel: %{wifi_channel}" }
			id => "msgParserId94"
			add_field => {
				"event_description" => "SmartEdge Sensor down from sensor"
				"severity" => "%{hcategory}"
				"context" => "SmartEdge Sensor has been missing its heart-beat messages"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId95
	# line in RSA:  Soft AP or Host AP detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected { Client Station | AP } <access_point> ({ Name: <node>; SSID : <ssid> | SSID : <ssid>}) switching mode between AP and Station. <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId95" {
		grok {
			match => { "message" => "^[\s]*Soft[\s]+AP[\s]+or[\s]+Host[\s]+AP[\s]+detected[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+The[\s]+system[\s]+has[\s]+detected[\s]+([\s]*Client[\s]+Station[\s]+|[\s]*AP[\s]+)[\s]+(?<access_point>[^\s]*)[\s]+\(([\s]*Name:[\s]+(?<node>[^;]*);[\s]+SSID[\s]+:[\s]+(?<ssid>[^\s]*)[\s]+|[\s]*SSID[\s]+:[\s]+(?<ssid>[^\)]*))\)[\s]+switching[\s]+mode[\s]+between[\s]+AP[\s]+and[\s]+Station\.[\s]+(?<info>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
			id => "msgParserId95"
			add_field => {
				"event_description" => "Soft AP or Host AP detected from sensor"
				"severity" => "%{hcategory}"
				"context" => "The system has detected Client Station and AP switching mode"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Spoofed" {
		# MESSAGE 000096
		# line in RSA:  Spoofed MAC address detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: A device spoofing the MAC address of { Access Point <access_point> | client station <access_point> } was detected. <result>. <info> Source MAC: <smacaddr>, Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Spoofed[\s]+MAC[\s]+address[\s]+detected[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+A[\s]+device[\s]+spoofing[\s]+the[\s]+MAC[\s]+address[\s]+of[\s]+([\s]*Access[\s]+Point[\s]+(?<access_point>[^\s]*)[\s]+|[\s]*client[\s]+station[\s]+(?<access_point>[^\s]*)[\s]+)[\s]+was[\s]+detected\.[\s]+(?<result>[^\.]*)\.[\s]+(?<info>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000096"
				add_field => {
				"event_description" => "Spoofed MAC address detected"
				"severity" => "%{hcategory}"
				"context" => "A device spoofing the MAC address of Access Point or client station was detected"
					"[event][id]" => "000096"
					"[rsa][message][id1]" => "000096"
					"[event][categoryid]" => "1003010900"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000050
		# line in RSA:  Spoofed MAC address detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: A device spoofing the MAC address of { AP <access_point> (Name: <node> SSID : <ssid>) | AP <access_point> (SSID : <ssid>) | AP <access_point>} was detected<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Spoofed[\s]+MAC[\s]+address[\s]+detected[\s]+from[\s]+sensor[\s]+(?<sensor>[^,]*),[\s]+(?<fld2>[^\s]*)[\s]+Location:[\s]+(?<location_desc>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+Description:[\s]+A[\s]+device[\s]+spoofing[\s]+the[\s]+MAC[\s]+address[\s]+of[\s]+([\s]*AP[\s]+(?<access_point>[^\s]*)[\s]+\(Name:[\s]+(?<node>[^\s]*)[\s]+SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*AP[\s]+(?<access_point>[^\s]*)[\s]+\(SSID[\s]+:[\s]+(?<ssid>[^\)]*)\)[\s]+|[\s]*AP[\s]+(?<access_point>[^\s]*))[\s]+was[\s]+detected(?<info>[^,]*),[\s]+(?<fld4>[^\s]*)[\s]+Source[\s]+MAC:[\s]+(?<smacaddr>[^,]*),[\s]+(?<fld5>[^\s]*)[\s]+Channel:[\s]+(?<wifi_channel>.*)$" }
				id => "message-000050"
				add_field => {
				"event_description" => "Spoofed MAC address detected"
				"severity" => "%{hcategory}"
					"[event][id]" => "000050"
					"[rsa][message][id1]" => "000050"
					"[event][categoryid]" => "1003010900"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000105
		# line in RSA:  Spoofed MAC address detected from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: <space> Source MAC: <smacaddr>, Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Spoofed MAC address detected from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: %{space} Source MAC: %{smacaddr}, Channel: %{wifi_channel}" }
				id => "message-000105"
				add_field => {
				"event_description" => "Spoofed MAC address detected"
				"severity" => "%{hcategory}"
				"context" => "A device spoofing the MAC address of Access Point or client station was detected"
					"[event][id]" => "000105"
					"[rsa][message][id1]" => "000105"
					"[event][categoryid]" => "1003010900"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA:  Streaming traffic from wireless device from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client device <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "Streaming traffic from wireless device from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client device %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId99"
			add_field => {
				"event_description" => "Streaming traffic from wireless device from sensor"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId100
	# line in RSA:  Suspicious after-hours traffic detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr> (Name: <node> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId100" {
		dissect {
			mapping => { "message" => "Suspicious after-hours traffic detected %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr} (Name: %{node} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId100"
			add_field => {
				"event_description" => "Suspicious after-hours traffic detected"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA:  Unassociated station detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId101" {
		dissect {
			mapping => { "message" => "Unassociated station detected %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId101"
			add_field => {
				"event_description" => "Unassociated station detected"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Unauthorized" {
		# MESSAGE 000041
		# line in RSA:  Unauthorized association detected <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Rogue client station  <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unauthorized association detected %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Rogue client station  %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000041"
				add_field => {
				"event_description" => "Unauthorized association detected"
				"severity" => "%{hcategory}"
					"[event][id]" => "000041"
					"[rsa][message][id1]" => "000041"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000068
		# line in RSA:  Unauthorized association by vendor list from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Unapproved (Out of Authorized Vendor List) client station <macaddr> SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unauthorized association by vendor list from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Unapproved (Out of Authorized Vendor List) client station %{macaddr} SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000068"
				add_field => {
				"event_description" => "Unauthorized association by vendor list from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000068"
					"[rsa][message][id1]" => "000068"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000090
		# line in RSA:  Unauthorized association by vendor list from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description:<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unauthorized association by vendor list from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description:%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
				id => "message-000090"
				add_field => {
				"event_description" => "Unauthorized association by vendor list from sensor"
				"severity" => "%{hcategory}"
					"[event][id]" => "000090"
					"[rsa][message][id1]" => "000090"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId105
	# line in RSA:  WEP IV key reused <fld1> from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: Client Station <macaddr> (SSID : <ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "WEP IV key reused %{fld1} from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: Client Station %{macaddr} (SSID : %{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId105"
			add_field => {
				"event_description" => "WEP IV key reused"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA:  WPA or 802.11i pre-shared key used from sensor <sensor>, <fld2> Location: <location_desc>, <fld3> Description: The system has detected AP <access_point> (SSID:<ssid>)<info>, <fld4> Source MAC: <smacaddr>, <fld5> Channel: <wifi_channel>
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "WPA or 802.11i pre-shared key used from sensor %{sensor}, %{fld2} Location: %{location_desc}, %{fld3} Description: The system has detected AP %{access_point} (SSID:%{ssid})%{info}, %{fld4} Source MAC: %{smacaddr}, %{fld5} Channel: %{wifi_channel}" }
			id => "msgParserId106"
			add_field => {
				"event_description" => "WPA or 802.11i pre-shared key used"
				"severity" => "%{hcategory}"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_airmagnetmsg.json"
#			template_name => "airmagnet_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
