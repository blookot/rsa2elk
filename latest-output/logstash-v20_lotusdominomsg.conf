# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "lotusdomino"
			"[observer][name]" => "Lotus Domino"
			"[observer][type]" => "Mail Servers"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %LOTUSDOMINO <hseverity>,<hfld1>,<hdata>,<hevent_source>,<messageid>,<!payload:hseverity>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%LOTUSDOMINO[\s]+(?<message>(?<hseverity>[^,]*),(?<hfld1>[^,]*),(?<hdata>[^,]*),(?<hevent_source>[^,]*),(?<messageid>[^,]*),(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %LOTUSDOMINO <hserver>,<messageid>,<!payload:hserver>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%LOTUSDOMINO[\s]+(?<message>(?<hserver>[^,]*),(?<messageid>[^,]*),(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_lotusdominomsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <event_computer>,<event_type>,<event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{event_computer},%{event_type},%{event_description}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "0" {
		# MESSAGE 0:21
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service> started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service} started" }
				id => "message-0:21"
				add_field => {
					"[event][id]" => "0:21"
					"[rsa][message][id1]" => "0:21"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:01
		# line in RSA:  <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Lotus Domino { Event Interceptor | QuerySet Handler } (<version>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Lotus[\s]+Domino[\s]+([\s]*Event[\s]+Interceptor[\s]+|[\s]*QuerySet[\s]+Handler[\s]+)[\s]+\((?<version>[^\)]*)\)$" }
				id => "message-0:01"
				add_field => {
					"[event][id]" => "0:01"
					"[rsa][message][id1]" => "0:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Lotus Domino <network_service> Agent is not available.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Lotus Domino %{network_service} Agent is not available." }
				id => "message-0:02"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "0:02"
					"[rsa][message][id1]" => "0:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Event Interceptor | QuerySet Handler | HTTP Server: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Event[\s]+Interceptor[\s]+|[\s]*QuerySet[\s]+Handler[\s]+|[\s]*HTTP[\s]+Server:[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-0:03"
				add_field => {
					"[event][id]" => "0:03"
					"[rsa][message][id1]" => "0:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Begin | End } CD to MIME Conversion<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Begin[\s]+|[\s]*End[\s]+)[\s]+CD[\s]+to[\s]+MIME[\s]+Conversion(?<event_description>.*)$" }
				id => "message-0:04"
				add_field => {
					"[event][id]" => "0:04"
					"[rsa][message][id1]" => "0:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Domino <process> unloaded.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Domino %{process} unloaded." }
				id => "message-0:05"
				add_field => {
					"[event][id]" => "0:05"
					"[rsa][message][id1]" => "0:05"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The Console file is <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The Console file is %{filename}" }
				id => "message-0:06"
				add_field => {
					"[event][id]" => "0:06"
					"[rsa][message][id1]" => "0:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,RM Evaluation: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},RM Evaluation: %{event_description}" }
				id => "message-0:07"
				add_field => {
				"service" => "RM Evaluation"
					"[event][id]" => "0:07"
					"[rsa][message][id1]" => "0:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{IMAP Server:|ISpy:|POP3 Server:} <saddr> disconnected
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(IMAP[\s]+Server:|ISpy:|POP3[\s]+Server:)[\s]+(?<saddr>[^\s]*)[\s]+disconnected$" }
				id => "message-0:11"
				add_field => {
				"service" => "POP3 Server"
					"[event][id]" => "0:11"
					"[rsa][message][id1]" => "0:11"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{IMAP Server:|ISpy:|POP3 Server:} <saddr> connected
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(IMAP[\s]+Server:|ISpy:|POP3[\s]+Server:)[\s]+(?<saddr>[^\s]*)[\s]+connected$" }
				id => "message-0:08"
				add_field => {
					"[event][id]" => "0:08"
					"[rsa][message][id1]" => "0:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,HTTP Web Server: Lotus Notes Exception - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},HTTP Web Server: Lotus Notes Exception - %{result}" }
				id => "message-0:09"
				add_field => {
				"service" => "HTTP Web Server"
					"[event][id]" => "0:09"
					"[rsa][message][id1]" => "0:09"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,POP3 Server: Authentication failure for <username>, connecting host <saddr>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},POP3 Server: Authentication failure for %{username}, connecting host %{saddr}: %{result}" }
				id => "message-0:10"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"service" => "POP3 Server"
					"[event][id]" => "0:10"
					"[rsa][message][id1]" => "0:10"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SMTP Server [<fld10>] Attempt to relay mail to <daddr> rejected for policy reasons. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SMTP Server [%{fld10}] Attempt to relay mail to %{daddr} rejected for policy reasons. %{result}" }
				id => "message-0:12"
				add_field => {
				"service" => "SMTP Server"
					"[event][id]" => "0:12"
					"[rsa][message][id1]" => "0:12"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Webadmin: Started by <dst_dn> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Webadmin: Started by %{dst_dn} [%{saddr}]" }
				id => "message-0:13"
				add_field => {
				"service" => "Webadmin"
					"[event][id]" => "0:13"
					"[rsa][message][id1]" => "0:13"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Login failed for user <username>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Login failed for user %{username}: %{result}" }
				id => "message-0:14"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "0:14"
					"[rsa][message][id1]" => "0:14"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:15
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error delivering to <dst_dn>; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error delivering to %{dst_dn}; %{result}" }
				id => "message-0:15"
				add_field => {
					"[event][id]" => "0:15"
					"[rsa][message][id1]" => "0:15"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SMTP Server:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SMTP Server:%{event_description}" }
				id => "message-0"
				add_field => {
				"service" => "SMTP Server"
					"[event][id]" => "0"
					"[rsa][message][id1]" => "0"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:16
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ISpy:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ISpy:%{event_description}" }
				id => "message-0:16"
				add_field => {
				"service" => "ISpy"
					"[event][id]" => "0:16"
					"[rsa][message][id1]" => "0:16"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:17
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Console Logging is ENABLED.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Console Logging is ENABLED." }
				id => "message-0:17"
				add_field => {
					"[event][id]" => "0:17"
					"[rsa][message][id1]" => "0:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:18
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: { Beginning in-place compaction of mailbox file <mail_id> | Completed compaction of mailbox file <mail_id> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Router:[\s]+([\s]*Beginning[\s]+in\-place[\s]+compaction[\s]+of[\s]+mailbox[\s]+file[\s]+(?<mail_id>[^\s]*)[\s]+|[\s]*Completed[\s]+compaction[\s]+of[\s]+mailbox[\s]+file[\s]+(?<mail_id>[^\s]*)[\s]+)$" }
				id => "message-0:18"
				add_field => {
				"service" => "Router"
					"[event][id]" => "0:18"
					"[rsa][message][id1]" => "0:18"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:19
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Initialization complete
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Initialization complete" }
				id => "message-0:19"
				add_field => {
					"[event][id]" => "0:19"
					"[rsa][message][id1]" => "0:19"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:20
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Change Manager Executive: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Change Manager Executive: %{event_description}" }
				id => "message-0:20"
				add_field => {
				"service" => "Change Manager Executive"
					"[event][id]" => "0:20"
					"[rsa][message][id1]" => "0:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:22
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,No error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},No error" }
				id => "message-0:22"
				add_field => {
				"event_description" => "No error"
					"[event][id]" => "0:22"
					"[rsa][message][id1]" => "0:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:23
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Components are up-to-date. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Components are up-to-date. %{info}" }
				id => "message-0:23"
				add_field => {
				"event_description" => "Components are up-to-date."
					"[event][id]" => "0:23"
					"[rsa][message][id1]" => "0:23"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:24
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Downloading components...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Downloading components..." }
				id => "message-0:24"
				add_field => {
				"event_description" => "Downloading components."
					"[event][id]" => "0:24"
					"[rsa][message][id1]" => "0:24"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:25
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Connecting to <fld2> server or other intranet server...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Connecting to %{fld2} server or other intranet server..." }
				id => "message-0:25"
				add_field => {
				"event_description" => "Connecting to a server"
					"[event][id]" => "0:25"
					"[rsa][message][id1]" => "0:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:26
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Updating component(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Updating component(s)" }
				id => "message-0:26"
				add_field => {
				"event_description" => "Updating Component(s)"
					"[event][id]" => "0:26"
					"[rsa][message][id1]" => "0:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:27
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Starting" }
				id => "message-0:27"
				add_field => {
				"event_description" => "Starting"
					"[event][id]" => "0:27"
					"[rsa][message][id1]" => "0:27"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:28
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Shutdown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Shutdown" }
				id => "message-0:28"
				add_field => {
				"event_description" => "Shutdown"
					"[event][id]" => "0:28"
					"[rsa][message][id1]" => "0:28"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:29
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,There are <fld2> days remaining before the ScanMail maintenance will expire. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},There are %{fld2} days remaining before the ScanMail maintenance will expire. %{info}" }
				id => "message-0:29"
				add_field => {
				"event_description" => "ScanMail maintenance expiration details"
					"[event][id]" => "0:29"
					"[rsa][message][id1]" => "0:29"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:30
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Process <process> (<fld2>) has terminated abnormally
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Process %{process} (%{fld2}) has terminated abnormally" }
				id => "message-0:30"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Error"
				"event_description" => "Process terminated abnormally"
					"[event][id]" => "0:30"
					"[rsa][message][id1]" => "0:30"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:31
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Deploying downloaded components...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Deploying downloaded components..." }
				id => "message-0:31"
				add_field => {
				"event_description" => "Deploying downloaded components"
					"[event][id]" => "0:31"
					"[rsa][message][id1]" => "0:31"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:32
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Start to update license online
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Start to update license online" }
				id => "message-0:32"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Start to update license"
					"[event][id]" => "0:32"
					"[rsa][message][id1]" => "0:32"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:33
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Complete update license online
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Complete update license online" }
				id => "message-0:33"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Complete update license"
					"[event][id]" => "0:33"
					"[rsa][message][id1]" => "0:33"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:34
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SecurTrac Warning : <event_description>. To obtain additional licenses, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SecurTrac Warning : %{event_description}. To obtain additional licenses, %{info}" }
				id => "message-0:34"
				add_field => {
					"[event][id]" => "0:34"
					"[rsa][message][id1]" => "0:34"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:35
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Scan engine version: <fld2>; Virus pattern file version: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Scan engine version: %{fld2}; Virus pattern file version: %{fld3}" }
				id => "message-0:35"
				add_field => {
					"[event][id]" => "0:35"
					"[rsa][message][id1]" => "0:35"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:36
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SMTP Server [<fld10>] Connection from <fld2> rejected for policy reasons. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SMTP Server [%{fld10}] Connection from %{fld2} rejected for policy reasons. %{result}" }
				id => "message-0:36"
				add_field => {
				"service" => "SMTP Server"
					"[event][id]" => "0:36"
					"[rsa][message][id1]" => "0:36"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:37
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Monitor found deleted folder <fld2> in Database: <db_name> Enabled Filter: <fld3> MonitorID: <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Monitor found deleted folder %{fld2} in Database: %{db_name} Enabled Filter: %{fld3} MonitorID: %{fld4}" }
				id => "message-0:37"
				add_field => {
					"[event][id]" => "0:37"
					"[rsa][message][id1]" => "0:37"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:38
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SecurTrac : uptime=<duration> min, log=<fld2>, import_time=<fld3>, action_time=<fld4>, import_rate=<fld5>, free_space_data=<fld6> MB, free_space_work=<fld7> MB
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SecurTrac : uptime=%{duration} min, log=%{fld2}, import_time=%{fld3}, action_time=%{fld4}, import_rate=%{fld5}, free_space_data=%{fld6} MB, free_space_work=%{fld7} MB" }
				id => "message-0:38"
				add_field => {
					"[event][id]" => "0:38"
					"[rsa][message][id1]" => "0:38"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:39
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,POP3 Server: Connection attempted on the united bank, but not configured in POP3 Internet Site Document
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},POP3 Server: Connection attempted on the united bank, but not configured in POP3 Internet Site Document" }
				id => "message-0:39"
				add_field => {
				"service" => "POP3 Server"
					"[event][id]" => "0:39"
					"[rsa][message][id1]" => "0:39"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:40
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SMTP Server [<fld10>] Mail from <src_dn> rejected for policy reasons. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SMTP Server [%{fld10}] Mail from %{src_dn} rejected for policy reasons. %{result}" }
				id => "message-0:40"
				add_field => {
					"[event][id]" => "0:40"
					"[rsa][message][id1]" => "0:40"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:41
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Recipient in local Internet Domain not found, forwarding to Smart Host
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Recipient in local Internet Domain not found, forwarding to Smart Host" }
				id => "message-0:41"
				add_field => {
					"[event][id]" => "0:41"
					"[rsa][message][id1]" => "0:41"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:42
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Recipient in local Internet Domain uses Other Internet Mail system, forwarding to Smart Host
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Recipient in local Internet Domain uses Other Internet Mail system, forwarding to Smart Host" }
				id => "message-0:42"
				add_field => {
					"[event][id]" => "0:42"
					"[rsa][message][id1]" => "0:42"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:43
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Could not load <fld2> strings from resource module: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Could not load %{fld2} strings from resource module: %{fld3}" }
				id => "message-0:43"
				add_field => {
					"[event][id]" => "0:43"
					"[rsa][message][id1]" => "0:43"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:44
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Adminp: Unable to retrieve names for batched request error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Adminp: Unable to retrieve names for batched request error: %{result}" }
				id => "message-0:44"
				add_field => {
					"[event][id]" => "0:44"
					"[rsa][message][id1]" => "0:44"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:45
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,DAOS Catalog is not synchronized, but is safe to prune.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},DAOS Catalog is not synchronized, but is safe to prune." }
				id => "message-0:45"
				add_field => {
					"[event][id]" => "0:45"
					"[rsa][message][id1]" => "0:45"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:46
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Pruning has been suspended until the DAOS Catalog is resynchronized.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Pruning has been suspended until the DAOS Catalog is resynchronized." }
				id => "message-0:46"
				add_field => {
					"[event][id]" => "0:46"
					"[rsa][message][id1]" => "0:46"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 0:47
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,XSP Command Manager Refreshed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},XSP Command Manager Refreshed" }
				id => "message-0:47"
				add_field => {
					"[event][id]" => "0:47"
					"[rsa][message][id1]" => "0:47"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "2" {
		# MESSAGE 2
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Webadmin: Started by <dst_dn> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Webadmin: Started by %{dst_dn} [%{saddr}]" }
				id => "message-2"
				add_field => {
				"service" => "Webadmin"
					"[event][id]" => "2"
					"[rsa][message][id1]" => "2"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ID failed to authenticate in vault '<fld13>'.  '<username>' (IP address <saddr>:<sport>) made request.  Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ID failed to authenticate in vault '%{fld13}'.  '%{username}' (IP address %{saddr}:%{sport}) made request.  Error: %{result}" }
				id => "message-2:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "2:01"
					"[rsa][message][id1]" => "2:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<username>/<fld2> from host [<saddr>:<sport>] <result> to authenticate: Your account is locked out; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{username}/%{fld2} from host [%{saddr}:%{sport}] %{result} to authenticate: Your account is locked out; %{info}" }
				id => "message-2:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Account locked out"
					"[event][id]" => "2:02"
					"[rsa][message][id1]" => "2:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{<username>/<fld2>|<username>} from host [<saddr>:<sport>] <result> to authenticate: The server's <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),((?<username>[^/]*)/(?<fld2>[^\s]*)|(?<username>[^\s]*))[\s]+from[\s]+host[\s]+\[(?<saddr>[^:]*):(?<sport>[^\]]*)\][\s]+(?<result>[^\s]*)[\s]+to[\s]+authenticate:[\s]+The[\s]+server's[\s]+(?<info>.*)$" }
				id => "message-2:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "2:03"
					"[rsa][message][id1]" => "2:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The ACL in database <db_name> has been changed by <username>/<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The ACL in database %{db_name} has been changed by %{username}/%{fld2}" }
				id => "message-2:04"
				add_field => {
					"[event][id]" => "2:04"
					"[rsa][message][id1]" => "2:04"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,AMgr: Error executing agent '<agent>' in '<db_name>'. Agent signer '<fld2>': <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},AMgr: Error executing agent '%{agent}' in '%{db_name}'. Agent signer '%{fld2}': %{action}" }
				id => "message-2:05"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "2:05"
					"[rsa][message][id1]" => "2:05"
					"[event][categoryid]" => "1501040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,LDAP Server: Bind request for <username> failed: <result>: failed to authenticate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},LDAP Server: Bind request for %{username} failed: %{result}: failed to authenticate" }
				id => "message-2:06"
				add_field => {
				"service" => "LDAP Server"
					"[event][id]" => "2:06"
					"[rsa][message][id1]" => "2:06"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: <fld2> (Path: <db_name>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: %{fld2} (Path: %{db_name}): %{result}" }
				id => "message-2:07"
				add_field => {
					"[event][id]" => "2:07"
					"[rsa][message][id1]" => "2:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Adminp: Unable to retrieve names for batched request error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Adminp: Unable to retrieve names for batched request error: %{result}" }
				id => "message-2:08"
				add_field => {
					"[event][id]" => "2:08"
					"[rsa][message][id1]" => "2:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ID for '<fld3>' (IP Address <saddr>:<sport>) in vault '<fld2>' was not downloaded because the wrong password was supplied. <space> Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ID for '%{fld3}' (IP Address %{saddr}:%{sport}) in vault '%{fld2}' was not downloaded because the wrong password was supplied. %{space} Error: %{result}" }
				id => "message-2:09"
				add_field => {
					"[event][id]" => "2:09"
					"[rsa][message][id1]" => "2:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to find ID for '<fld3>' in vault '<fld2>'. <space> Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to find ID for '%{fld3}' in vault '%{fld2}'. %{space} Error: %{result}" }
				id => "message-2:10"
				add_field => {
					"[event][id]" => "2:10"
					"[rsa][message][id1]" => "2:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Failed to set download count for '<fld11>' to <fld3>. <space> '<fld2>' made request (IP Address <saddr>:<sport>) from process <process>. <space> Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Failed to set download count for '%{fld11}' to %{fld3}. %{space} '%{fld2}' made request (IP Address %{saddr}:%{sport}) from process %{process}. %{space} Error: %{result}" }
				id => "message-2:11"
				add_field => {
					"[event][id]" => "2:11"
					"[rsa][message][id1]" => "2:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ID for '<fld3>' could not be authenticated in vault '<fld4>' on server '<fld13>'. <space> '<fld23>' made request. <space> Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ID for '%{fld3}' could not be authenticated in vault '%{fld4}' on server '%{fld13}'. %{space} '%{fld23}' made request. %{space} Error: %{result}" }
				id => "message-2:12"
				add_field => {
					"[event][id]" => "2:12"
					"[rsa][message][id1]" => "2:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<username> from host [<saddr>:<sport>] failed to authenticate: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{username} from host [%{saddr}:%{sport}] failed to authenticate: %{result}" }
				id => "message-2:13"
				add_field => {
					"[event][id]" => "2:13"
					"[rsa][message][id1]" => "2:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 2:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error occurred checking key rollover on vault. <space> Vault '<fld11>'.  User '<username>'.  Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error occurred checking key rollover on vault. %{space} Vault '%{fld11}'.  User '%{username}'.  Error: %{result}" }
				id => "message-2:14"
				add_field => {
					"[event][id]" => "2:14"
					"[rsa][message][id1]" => "2:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "3" {
		# MESSAGE 3
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Listen for connect requests on <protocol> Port:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Listen for connect requests on %{protocol} Port:%{sport}" }
				id => "message-3"
				add_field => {
					"[event][id]" => "3"
					"[rsa][message][id1]" => "3"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: { Beginning | Completed } mailbox file compaction of <mail_id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Router:[\s]+([\s]*Beginning[\s]+|[\s]*Completed[\s]+)[\s]+mailbox[\s]+file[\s]+compaction[\s]+of[\s]+(?<mail_id>.*)$" }
				id => "message-3:01"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:01"
					"[rsa][message][id1]" => "3:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Internet <network_service> host <shost> in domain <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Internet %{network_service} host %{shost} in domain %{domain}" }
				id => "message-3:02"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "3:02"
					"[rsa][message][id1]" => "3:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ SMTP Server: Initialization failure: <result> | SMTP Server: Listener failure, <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*SMTP[\s]+Server:[\s]+Initialization[\s]+failure:[\s]+(?<result>[^\s]*)[\s]+|[\s]*SMTP[\s]+Server:[\s]+Listener[\s]+failure,[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-3:03"
				add_field => {
				"service" => "SMTP Server"
					"[event][id]" => "3:03"
					"[rsa][message][id1]" => "3:03"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,IMAP Server: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},IMAP Server: %{event_description}" }
				id => "message-3:04"
				add_field => {
				"service" => "IMAP Server"
					"[event][id]" => "3:04"
					"[rsa][message][id1]" => "3:04"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Message <id1>, <id2> delivered to <to>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Message %{id1}, %{id2} delivered to %{to}" }
				id => "message-3:05"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:05"
					"[rsa][message][id1]" => "3:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:24
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Message <id1> delivered to <to> on <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Message %{id1} delivered to %{to} on %{hostname}" }
				id => "message-3:24"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:24"
					"[rsa][message][id1]" => "3:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:25
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Message <id1> contains no recipients
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Message %{id1} contains no recipients" }
				id => "message-3:25"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:25"
					"[rsa][message][id1]" => "3:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:26
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Unable to deliver message <id1>, <id2> to <to>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Unable to deliver message %{id1}, %{id2} to %{to}" }
				id => "message-3:26"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:26"
					"[rsa][message][id1]" => "3:26"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:27
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Unable to deliver message <id1> to <to>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Unable to deliver message %{id1} to %{to}" }
				id => "message-3:27"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:27"
					"[rsa][message][id1]" => "3:27"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:28
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Updating values from Configuration document
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Updating values from Configuration document" }
				id => "message-3:28"
				add_field => {
				"service" => "Router"
				"event_description" => "Updating values from Configuration document"
					"[event][id]" => "3:28"
					"[rsa][message][id1]" => "3:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:29
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Message <id1> NOT transferred via <network_service> to <hostname> for <fld2> Requested mail action not taken: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Message %{id1} NOT transferred via %{network_service} to %{hostname} for %{fld2} Requested mail action not taken: %{info}" }
				id => "message-3:29"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:29"
					"[rsa][message][id1]" => "3:29"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:30
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Message <id1> transferred to <hostname> for <fld2> via <network_service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Message %{id1} transferred to %{hostname} for %{fld2} via %{network_service}" }
				id => "message-3:30"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:30"
					"[rsa][message][id1]" => "3:30"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:31
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Transferred <fld2> messages to <domain> (host <hostname>) via <network_service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Transferred %{fld2} messages to %{domain} (host %{hostname}) via %{network_service}" }
				id => "message-3:31"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:31"
					"[rsa][message][id1]" => "3:31"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:32
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Transferring mail to domain <domain> (host <hostname> [<hostip>]) via <network_service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Transferring mail to domain %{domain} (host %{hostname} [%{hostip}]) via %{network_service}" }
				id => "message-3:32"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:32"
					"[rsa][message][id1]" => "3:32"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:33
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: No messages transferred to <domain> (host <hostname>) via <network_service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: No messages transferred to %{domain} (host %{hostname}) via %{network_service}" }
				id => "message-3:33"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:33"
					"[rsa][message][id1]" => "3:33"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Rooms and Resources Manager: <event_description> | RnRMgr: <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Rooms[\s]+and[\s]+Resources[\s]+Manager:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*RnRMgr:[\s]+(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-3:06"
				add_field => {
				"service" => "RnRMgr"
					"[event][id]" => "3:06"
					"[rsa][message][id1]" => "3:06"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Object Store Manager: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Object Store Manager: %{event_description}" }
				id => "message-3:07"
				add_field => {
				"service" => "Object Store Manager"
					"[event][id]" => "3:07"
					"[rsa][message][id1]" => "3:07"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SMTP Server: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SMTP Server: %{event_description}" }
				id => "message-3:08"
				add_field => {
				"service" => "SMTP Server"
					"[event][id]" => "3:08"
					"[rsa][message][id1]" => "3:08"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: %{event_description}" }
				id => "message-3:09"
				add_field => {
				"service" => "Router"
					"[event][id]" => "3:09"
					"[rsa][message][id1]" => "3:09"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SchedMgr: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SchedMgr: %{event_description}" }
				id => "message-3:10"
				add_field => {
				"service" => "SchedMgr"
					"[event][id]" => "3:10"
					"[rsa][message][id1]" => "3:10"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The probe has {timed out|failed} for the following statistic: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),The[\s]+probe[\s]+has[\s]+(timed[\s]+out|failed)[\s]+for[\s]+the[\s]+following[\s]+statistic:[\s]+(?<result>.*)$" }
				id => "message-3:11"
				add_field => {
					"[event][id]" => "3:11"
					"[rsa][message][id1]" => "3:11"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,User <username> not listed in Domino Directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},User %{username} not listed in Domino Directory" }
				id => "message-3:12"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "3:12"
					"[rsa][message][id1]" => "3:12"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Recipient's Domino Directory entry does not specify a valid Notes mail file
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Recipient's Domino Directory entry does not specify a valid Notes mail file" }
				id => "message-3:13"
				add_field => {
					"[event][id]" => "3:13"
					"[rsa][message][id1]" => "3:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail probe to {ISpy on <event_computer>|<username>} was successful
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Mail[\s]+probe[\s]+to[\s]+(ISpy[\s]+on[\s]+(?<event_computer>[^\s]*)|(?<username>[^\s]*))[\s]+was[\s]+successful$" }
				id => "message-3:14"
				add_field => {
					"[event][id]" => "3:14"
					"[rsa][message][id1]" => "3:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:15
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The number of pending mail messages on <dst_dn> is at a healthy level.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The number of pending mail messages on %{dst_dn} is at a healthy level." }
				id => "message-3:15"
				add_field => {
					"[event][id]" => "3:15"
					"[rsa][message][id1]" => "3:15"
					"[event][categoryid]" => "1604000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:16
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail from <src_dn> to destination <dst_dn> is under its message limit.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Mail from %{src_dn} to destination %{dst_dn} is under its message limit." }
				id => "message-3:16"
				add_field => {
					"[event][id]" => "3:16"
					"[rsa][message][id1]" => "3:16"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:17
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail probe to <username> has timed out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Mail probe to %{username} has timed out." }
				id => "message-3:17"
				add_field => {
					"[event][id]" => "3:17"
					"[rsa][message][id1]" => "3:17"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:18
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Suspending listen task for <id1> seconds due to network errors
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Suspending listen task for %{id1} seconds due to network errors" }
				id => "message-3:18"
				add_field => {
					"[event][id]" => "3:18"
					"[rsa][message][id1]" => "3:18"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:19
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,POP3 Server: Authentication failure for <username>, connecting host <saddr>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},POP3 Server: Authentication failure for %{username}, connecting host %{saddr}: %{result}" }
				id => "message-3:19"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"service" => "POP3 Server"
					"[event][id]" => "3:19"
					"[rsa][message][id1]" => "3:19"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:20
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service> {are enabled|started|Started|Starting|started for domain <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(?<service>[^\s]*)[\s]+(are[\s]+enabled|started|Started|Starting|started[\s]+for[\s]+domain[\s]+(?<domain>.*))$" }
				id => "message-3:20"
				add_field => {
					"[event][id]" => "3:20"
					"[rsa][message][id1]" => "3:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:21
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Login failed for user <username>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Login failed for user %{username}: %{result}" }
				id => "message-3:21"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "3:21"
					"[rsa][message][id1]" => "3:21"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:22
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Schedule Manager: Informational: Detailed schedule information collection is not enabled via the domain-wide Server Configuration document.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Schedule Manager: Informational: Detailed schedule information collection is not enabled via the domain-wide Server Configuration document." }
				id => "message-3:22"
				add_field => {
				"service" => "Schedule Manager"
					"[event][id]" => "3:22"
					"[rsa][message][id1]" => "3:22"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:23
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error registering mail rule <fld2> for database <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error registering mail rule %{fld2} for database %{db_name}: %{info}" }
				id => "message-3:23"
				add_field => {
					"[event][id]" => "3:23"
					"[rsa][message][id1]" => "3:23"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:34
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,AMgr: Agent '<agent>' in '<db_name>' did not process all documents successfully. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},AMgr: Agent '%{agent}' in '%{db_name}' did not process all documents successfully. %{info}" }
				id => "message-3:34"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "3:34"
					"[rsa][message][id1]" => "3:34"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:35
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Connection successful
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Connection successful" }
				id => "message-3:35"
				add_field => {
				"service" => "SMTPClient"
				"result" => "Connection successful"
					"[event][id]" => "3:35"
					"[rsa][message][id1]" => "3:35"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:36
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: ReceiveResponse: { <resultcode>- | <resultcode> } <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),\[(?<fld10>[^\]]*)\][\s]+SMTPClient:[\s]+ReceiveResponse:[\s]+([\s]*(?<resultcode>[^\-]*)\-[\s]+|[\s]*(?<resultcode>[^\s]*)[\s]+)[\s]+(?<info>.*)$" }
				id => "message-3:36"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:36"
					"[rsa][message][id1]" => "3:36"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:37
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Connection terminated successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Connection terminated successfully" }
				id => "message-3:37"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"service" => "SMTPClient"
				"result" => "Connection terminated successfully"
					"[event][id]" => "3:37"
					"[rsa][message][id1]" => "3:37"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:38
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: DATA
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: DATA" }
				id => "message-3:38"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:38"
					"[rsa][message][id1]" => "3:38"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:39
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: CommandQUIT:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: CommandQUIT:" }
				id => "message-3:39"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:39"
					"[rsa][message][id1]" => "3:39"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:40
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Pipelined commands:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Pipelined commands:" }
				id => "message-3:40"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:40"
					"[rsa][message][id1]" => "3:40"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:41
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: End of pipelined commands
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: End of pipelined commands" }
				id => "message-3:41"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:41"
					"[rsa][message][id1]" => "3:41"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:42
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: RCPT TO:<<<to>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: RCPT TO:<%{to}>" }
				id => "message-3:42"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:42"
					"[rsa][message][id1]" => "3:42"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:43
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: MAIL FROM:<<<from>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: MAIL FROM:<%{from}>" }
				id => "message-3:43"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:43"
					"[rsa][message][id1]" => "3:43"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:44
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: SMTP Authentication is not required by local server.  Username: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: SMTP Authentication is not required by local server.  Username: %{username}" }
				id => "message-3:44"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:44"
					"[rsa][message][id1]" => "3:44"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:45
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Attempting to Disconnect:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Attempting to Disconnect:" }
				id => "message-3:45"
				add_field => {
				"service" => "SMTPClient"
				"action" => "Attempting to Disconnect"
					"[event][id]" => "3:45"
					"[rsa][message][id1]" => "3:45"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:46
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Attempting to SubmitMessage:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Attempting to SubmitMessage:" }
				id => "message-3:46"
				add_field => {
				"service" => "SMTPClient"
				"action" => "Attempting to SubmitMessage"
					"[event][id]" => "3:46"
					"[rsa][message][id1]" => "3:46"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:47
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Data Send Succeeded <bytes> bytes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Data Send Succeeded %{bytes} bytes" }
				id => "message-3:47"
				add_field => {
				"ec_activity" => "Send"
				"ec_outcome" => "Success"
				"service" => "SMTPClient"
				"action" => "Attempting to SubmitMessage"
					"[event][id]" => "3:47"
					"[rsa][message][id1]" => "3:47"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:48
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: Attempting to Connect: Host <saddr>, Port <sport>, SSL Port <fld11>, Connecting Domain <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: Attempting to Connect: Host %{saddr}, Port %{sport}, SSL Port %{fld11}, Connecting Domain %{domain}" }
				id => "message-3:48"
				add_field => {
				"service" => "SMTPClient"
				"action" => "Attempting to SubmitMessage"
					"[event][id]" => "3:48"
					"[rsa][message][id1]" => "3:48"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:49
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: CommandEHLO: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: CommandEHLO: %{domain}" }
				id => "message-3:49"
				add_field => {
				"service" => "SMTPClient"
				"action" => "Attempting to SubmitMessage"
					"[event][id]" => "3:49"
					"[rsa][message][id1]" => "3:49"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:50
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,[<fld10>] SMTPClient: CSMTPInternetClient::InitSMTPClient> NotesPort: <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},[%{fld10}] SMTPClient: CSMTPInternetClient::InitSMTPClient> NotesPort: %{fld11}" }
				id => "message-3:50"
				add_field => {
				"service" => "SMTPClient"
					"[event][id]" => "3:50"
					"[rsa][message][id1]" => "3:50"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:51
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,MT Collector: Compacting message tracking store.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},MT Collector: Compacting message tracking store." }
				id => "message-3:51"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "3:51"
					"[rsa][message][id1]" => "3:51"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:52
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,MT Collector: Finished compacting message tracking store.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},MT Collector: Finished compacting message tracking store." }
				id => "message-3:52"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "3:52"
					"[rsa][message][id1]" => "3:52"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:53
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,MT Collector: Failed updating entry in message tracking store: <info>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},MT Collector: Failed updating entry in message tracking store: %{info}: %{result}" }
				id => "message-3:53"
				add_field => {
					"[event][id]" => "3:53"
					"[rsa][message][id1]" => "3:53"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 3:54
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,No route found to domain <fld2>.  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},No route found to domain %{fld2}.  %{info}" }
				id => "message-3:54"
				add_field => {
					"[event][id]" => "3:54"
					"[rsa][message][id1]" => "3:54"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "4" {
		# MESSAGE 4
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<db_name> has NEVER replicated with ANY server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{db_name} has NEVER replicated with ANY server" }
				id => "message-4"
				add_field => {
					"[event][id]" => "4"
					"[rsa][message][id1]" => "4"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service> started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service} started" }
				id => "message-4:01"
				add_field => {
					"[event][id]" => "4:01"
					"[rsa][message][id1]" => "4:01"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replicator is set to Ignore Database Quotas
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replicator is set to Ignore Database Quotas" }
				id => "message-4:02"
				add_field => {
					"[event][id]" => "4:02"
					"[rsa][message][id1]" => "4:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Finished | Starting } replication with server <dst_dn>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Finished[\s]+|[\s]*Starting[\s]+)[\s]+replication[\s]+with[\s]+server[\s]+(?<dst_dn>.*)$" }
				id => "message-4:03"
				add_field => {
					"[event][id]" => "4:03"
					"[rsa][message][id1]" => "4:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Access control is set in <db_name> to not replicate forms or views from <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Access control is set in %{db_name} to not replicate forms or views from %{fld2}" }
				id => "message-4:04"
				add_field => {
					"[event][id]" => "4:04"
					"[rsa][message][id1]" => "4:04"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<db_name> has not replicated (<action>) with ANY server since <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{db_name} has not replicated (%{action}) with ANY server since %{fld2}" }
				id => "message-4:05"
				add_field => {
					"[event][id]" => "4:05"
					"[rsa][message][id1]" => "4:05"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Access control is set to restrict Replication for <fld2> databases on <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Access control is set to restrict Replication for %{fld2} databases on %{fld3}" }
				id => "message-4:06"
				add_field => {
					"[event][id]" => "4:06"
					"[rsa][message][id1]" => "4:06"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Access control is set in <fld2> <db_name> to not allow replication from <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Access control is set in %{fld2} %{db_name} to not allow replication from %{fld3}" }
				id => "message-4:07"
				add_field => {
					"[event][id]" => "4:07"
					"[rsa][message][id1]" => "4:07"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,REPLICA: No need to replicate, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},REPLICA: No need to replicate, %{info}" }
				id => "message-4:08"
				add_field => {
				"event_description" => "No need to replicate"
					"[event][id]" => "4:08"
					"[rsa][message][id1]" => "4:08"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replicator updated <fld2> document(s) in <db_name> from <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replicator updated %{fld2} document(s) in %{db_name} from %{fld3}" }
				id => "message-4:09"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Replicator updated documents"
					"[event][id]" => "4:09"
					"[rsa][message][id1]" => "4:09"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replicator added <fld2> document(s) to <db_name> from <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replicator added %{fld2} document(s) to %{db_name} from %{fld3}" }
				id => "message-4:10"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_outcome" => "Success"
				"event_description" => "Replicator added documents"
					"[event][id]" => "4:10"
					"[rsa][message][id1]" => "4:10"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replication is disabled for CLUSTER <group_object> <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replication is disabled for CLUSTER %{group_object} %{db_name}" }
				id => "message-4:11"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_activity" => "Disable"
					"[event][id]" => "4:11"
					"[rsa][message][id1]" => "4:11"
					"[event][categoryid]" => "1701070000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Pushing <db_name> to CLUSTER <group_object> <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Pushing %{db_name} to CLUSTER %{group_object} %{fld2}" }
				id => "message-4:12"
				add_field => {
					"[event][id]" => "4:12"
					"[rsa][message][id1]" => "4:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replication is disabled for <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replication is disabled for %{db_name}" }
				id => "message-4:13"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_activity" => "Disable"
					"[event][id]" => "4:13"
					"[rsa][message][id1]" => "4:13"
					"[event][categoryid]" => "1701070000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,REPLICA: No documents need to be replicated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},REPLICA: No documents need to be replicated" }
				id => "message-4:14"
				add_field => {
				"event_description" => "No documents need to be replicated"
					"[event][id]" => "4:14"
					"[rsa][message][id1]" => "4:14"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:15
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Pushing | Pulling } <db_name> { from | to } <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Pushing[\s]+|[\s]*Pulling[\s]+)[\s]+(?<db_name>[^\s]*)[\s]+([\s]*from[\s]+|[\s]*to[\s]+)[\s]+(?<fld2>.*)$" }
				id => "message-4:15"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
					"[event][id]" => "4:15"
					"[rsa][message][id1]" => "4:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:16
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to replicate <db_name>: <result> - file may have been damaged
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to replicate %{db_name}: %{result} - file may have been damaged" }
				id => "message-4:16"
				add_field => {
					"[event][id]" => "4:16"
					"[rsa][message][id1]" => "4:16"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:17
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replicator deleted <fld2> document(s) in <db_name> from <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replicator deleted %{fld2} document(s) in %{db_name} from %{fld3}" }
				id => "message-4:17"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"event_description" => "Replicator deleted documents"
					"[event][id]" => "4:17"
					"[rsa][message][id1]" => "4:17"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:18
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Replication of <db_name> to <fld3> completed successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Replication of %{db_name} to %{fld3} completed successfully" }
				id => "message-4:18"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Process"
				"ec_outcome" => "Success"
				"event_description" => "Replicator completed"
					"[event][id]" => "4:18"
					"[rsa][message][id1]" => "4:18"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:19
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Access control is set in <db_name> to not replicate forms, views or edits from <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Access control is set in %{db_name} to not replicate forms, views or edits from %{fld2}" }
				id => "message-4:19"
				add_field => {
					"[event][id]" => "4:19"
					"[rsa][message][id1]" => "4:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 4:21
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to replicate <db_name>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to replicate %{db_name}: %{result}" }
				id => "message-4:21"
				add_field => {
					"[event][id]" => "4:21"
					"[rsa][message][id1]" => "4:21"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "5" {
		# MESSAGE 5
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Error processing Mail Policy for user: '<username>' on mailfile: '<mail_id>'.: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: Error processing Mail Policy for user: '%{username}' on mailfile: '%{mail_id}'.: %{result}" }
				id => "message-5"
				add_field => {
					"[event][id]" => "5"
					"[rsa][message][id1]" => "5"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 5:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ MailExternalSMTP | MailInternalSmtp | MailUseDns } changed to <id1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*MailExternalSMTP[\s]+|[\s]*MailInternalSmtp[\s]+|[\s]*MailUseDns[\s]+)[\s]+changed[\s]+to[\s]+(?<id1>.*)$" }
				id => "message-5:01"
				add_field => {
					"[event][id]" => "5:01"
					"[rsa][message][id1]" => "5:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 5:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to run program <process>: Unable to locate program
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to run program %{process}: Unable to locate program" }
				id => "message-5:02"
				add_field => {
					"[event][id]" => "5:02"
					"[rsa][message][id1]" => "5:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 5:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database open error: <db_name>: <result> - file may have been damaged
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database open error: %{db_name}: %{result} - file may have been damaged" }
				id => "message-5:03"
				add_field => {
					"[event][id]" => "5:03"
					"[rsa][message][id1]" => "5:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 5:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to replicate <db_name>: <result> - file may have been damaged
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to replicate %{db_name}: %{result} - file may have been damaged" }
				id => "message-5:04"
				add_field => {
					"[event][id]" => "5:04"
					"[rsa][message][id1]" => "5:04"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 5:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database open error: <db_name>: The caller's SemWait timeout expired.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database open error: %{db_name}: The caller's SemWait timeout expired." }
				id => "message-5:05"
				add_field => {
					"[event][id]" => "5:05"
					"[rsa][message][id1]" => "5:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "6" {
		# MESSAGE 6
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ATTEMPT TO ACCESS DATABASE <db_name> by <username> was <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ATTEMPT TO ACCESS DATABASE %{db_name} by %{username} was %{disposition}" }
				id => "message-6"
				add_field => {
					"[event][id]" => "6"
					"[rsa][message][id1]" => "6"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Closed session for <c_user_name>|<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Closed session for %{c_user_name}|%{event_description}" }
				id => "message-6:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "6:01"
					"[rsa][message][id1]" => "6:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Schedule Manager: <event_description> | SchedMgr: <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Schedule[\s]+Manager:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*SchedMgr:[\s]+(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-6:02"
				add_field => {
				"service" => "SchedMgr"
					"[event][id]" => "6:02"
					"[rsa][message][id1]" => "6:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: <username> does not appear in <fld12> of any databases designating <dst_dn> as their Administration Server 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: %{username} does not appear in %{fld12} of any databases designating %{dst_dn} as their Administration Server" }
				id => "message-6:03"
				add_field => {
				"service" => "Admin Process"
					"[event][id]" => "6:03"
					"[rsa][message][id1]" => "6:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Closed live remote console session for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Closed live remote console session for %{username}" }
				id => "message-6:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "6:04"
					"[rsa][message][id1]" => "6:04"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Starting update of database { usage statistics | catalog }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Starting[\s]+update[\s]+of[\s]+database[\s]+([\s]*usage[\s]+statistics[\s]+|[\s]*catalog[\s]+)$" }
				id => "message-6:05"
				add_field => {
					"[event][id]" => "6:05"
					"[rsa][message][id1]" => "6:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database { ACL probe | review } for '<username>' has { completed with no errors. | completed. }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Database[\s]+([\s]*ACL[\s]+probe[\s]+|[\s]*review[\s]+)[\s]+for[\s]+'(?<username>[^']*)'[\s]+has[\s]+([\s]*completed[\s]+with[\s]+no[\s]+errors\.[\s]+|[\s]*completed\.[\s]+)$" }
				id => "message-6:06"
				add_field => {
					"[event][id]" => "6:06"
					"[rsa][message][id1]" => "6:06"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,RunJava: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},RunJava: %{event_description}" }
				id => "message-6:07"
				add_field => {
				"service" => "RunJava"
					"[event][id]" => "6:07"
					"[rsa][message][id1]" => "6:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Security Review Probe: <event_description> | Security Probe: <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Security[\s]+Review[\s]+Probe:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*Security[\s]+Probe:[\s]+(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-6:08"
				add_field => {
				"service" => "Security Probe"
					"[event][id]" => "6:08"
					"[rsa][message][id1]" => "6:08"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Chronos: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Chronos: %{event_description}" }
				id => "message-6:09"
				add_field => {
				"service" => "Chronos"
					"[event][id]" => "6:09"
					"[rsa][message][id1]" => "6:09"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Searching Administration Requests database 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: Searching Administration Requests database" }
				id => "message-6:10"
				add_field => {
				"service" => "Admin Process"
					"[event][id]" => "6:10"
					"[rsa][message][id1]" => "6:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Completed refresh of mail policies for <id1> databases, <id2> databases reported errors.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: Completed refresh of mail policies for %{id1} databases, %{id2} databases reported errors." }
				id => "message-6:11"
				add_field => {
				"service" => "Admin Process"
					"[event][id]" => "6:11"
					"[rsa][message][id1]" => "6:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Error processing Mail Policy for user: '<username>' on mailfile: '<mail_id>'.: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: Error processing Mail Policy for user: '%{username}' on mailfile: '%{mail_id}'.: %{result}" }
				id => "message-6:12"
				add_field => {
				"service" => "Admin Process"
					"[event][id]" => "6:12"
					"[rsa][message][id1]" => "6:12"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: <dst_dn> is the Administration Server of the Domino Directory.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: %{dst_dn} is the Administration Server of the Domino Directory." }
				id => "message-6:13"
				add_field => {
				"service" => "Admin Process"
					"[event][id]" => "6:13"
					"[rsa][message][id1]" => "6:13"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Opened session for <username> (<version>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Opened session for %{username} (%{version})" }
				id => "message-6:14"
				add_field => {
					"[event][id]" => "6:14"
					"[rsa][message][id1]" => "6:14"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:15
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database <db_name> created by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database %{db_name} created by %{username}" }
				id => "message-6:15"
				add_field => {
					"[event][id]" => "6:15"
					"[rsa][message][id1]" => "6:15"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:16
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Finished updating {usage statistics|database catalog}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Finished[\s]+updating[\s]+(usage[\s]+statistics|database[\s]+catalog)$" }
				id => "message-6:16"
				add_field => {
					"[event][id]" => "6:16"
					"[rsa][message][id1]" => "6:16"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:17
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Created database catalog: <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Created database catalog: %{db_name}" }
				id => "message-6:17"
				add_field => {
					"[event][id]" => "6:17"
					"[rsa][message][id1]" => "6:17"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:18
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{Added database <db_name> to catalog|Updated database <db_name> in catalog}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(Added[\s]+database[\s]+(?<db_name>[^\s]*)[\s]+to[\s]+catalog|Updated[\s]+database[\s]+(?<db_name>[^\s]*)[\s]+in[\s]+catalog)$" }
				id => "message-6:18"
				add_field => {
					"[event][id]" => "6:18"
					"[rsa][message][id1]" => "6:18"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:19
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{Starting|Finished} purge of {old documents in log file|log file}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(Starting|Finished)[\s]+purge[\s]+of[\s]+(old[\s]+documents[\s]+in[\s]+log[\s]+file|log[\s]+file)$" }
				id => "message-6:19"
				add_field => {
					"[event][id]" => "6:19"
					"[rsa][message][id1]" => "6:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:20
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Enabling the recording of user activity for <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Enabling the recording of user activity for %{db_name}" }
				id => "message-6:20"
				add_field => {
					"[event][id]" => "6:20"
					"[rsa][message][id1]" => "6:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:21
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ID failed to authenticate in vault '<fld13>'.  '<username>' (IP address <saddr>:<sport>) made request.  Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ID failed to authenticate in vault '%{fld13}'.  '%{username}' (IP address %{saddr}:%{sport}) made request.  Error: %{result}" }
				id => "message-6:21"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "6:21"
					"[rsa][message][id1]" => "6:21"
					"[event][categoryid]" => "1301010000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:22
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Remote console command issued by <username>: <param> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Remote console command issued by %{username}: %{param}" }
				id => "message-6:22"
				add_field => {
					"[event][id]" => "6:22"
					"[rsa][message][id1]" => "6:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:23
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Opened live remote console session for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Opened live remote console session for %{username}" }
				id => "message-6:23"
				add_field => {
					"[event][id]" => "6:23"
					"[rsa][message][id1]" => "6:23"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:25
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service> {are enabled|started}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(?<service>[^\s]*)[\s]+(are[\s]+enabled|started)$" }
				id => "message-6:25"
				add_field => {
					"[event][id]" => "6:25"
					"[rsa][message][id1]" => "6:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:26
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Disk Spindle Information was not provided in the Directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Disk Spindle Information was not provided in the Directory" }
				id => "message-6:26"
				add_field => {
					"[event][id]" => "6:26"
					"[rsa][message][id1]" => "6:26"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:27
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<username> does not appear in the unread lists of the databases on <dst_dn>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{username} does not appear in the unread lists of the databases on %{dst_dn}." }
				id => "message-6:27"
				add_field => {
					"[event][id]" => "6:27"
					"[rsa][message][id1]" => "6:27"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:28
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Memory Utilization exceeds the configured thresholds.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Memory Utilization exceeds the configured thresholds." }
				id => "message-6:28"
				add_field => {
					"[event][id]" => "6:28"
					"[rsa][message][id1]" => "6:28"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:29
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Memory Utilization no longer exceeds the configured thresholds.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Memory Utilization no longer exceeds the configured thresholds." }
				id => "message-6:29"
				add_field => {
					"[event][id]" => "6:29"
					"[rsa][message][id1]" => "6:29"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:30
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{07:AE|07:C1}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(07:AE|07:C1)$" }
				id => "message-6:30"
				add_field => {
					"[event][id]" => "6:30"
					"[rsa][message][id1]" => "6:30"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:31
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,No databases have <dst_dn> designated to maintain their Readers and Authors fields.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},No databases have %{dst_dn} designated to maintain their Readers and Authors fields." }
				id => "message-6:31"
				add_field => {
					"[event][id]" => "6:31"
					"[rsa][message][id1]" => "6:31"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:32
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Received the following error performing a <action>{:|.} <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Admin[\s]+Process:[\s]+Received[\s]+the[\s]+following[\s]+error[\s]+performing[\s]+a[\s]+(?<action>[^:\.]*)(:|\.)[\s]+(?<result>.*)$" }
				id => "message-6:32"
				add_field => {
				"reason" => "%{result}"
				"service" => "Admin Process"
					"[event][id]" => "6:32"
					"[rsa][message][id1]" => "6:32"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:33
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Network error on port <sport> (session <fld13>): Network error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Network error on port %{sport} (session %{fld13}): Network error: %{result}" }
				id => "message-6:33"
				add_field => {
					"[event][id]" => "6:33"
					"[rsa][message][id1]" => "6:33"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:34
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,A replica of <username>'s mail file does not exist on this server.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},A replica of %{username}'s mail file does not exist on this server." }
				id => "message-6:34"
				add_field => {
					"[event][id]" => "6:34"
					"[rsa][message][id1]" => "6:34"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:35
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database <db_name> deleted by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database %{db_name} deleted by %{username}" }
				id => "message-6:35"
				add_field => {
				"action" => "Deletion"
					"[event][id]" => "6:35"
					"[rsa][message][id1]" => "6:35"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:36
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Cleaning <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Cleaning %{event_description}" }
				id => "message-6:36"
				add_field => {
				"action" => "Cleaning"
					"[event][id]" => "6:36"
					"[rsa][message][id1]" => "6:36"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:37
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<action> in <filter> of <db_name> <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{action} in %{filter} of %{db_name} %{event_state}" }
				id => "message-6:37"
				add_field => {
					"[event][id]" => "6:37"
					"[rsa][message][id1]" => "6:37"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:38
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,One-time fix-up of <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},One-time fix-up of %{event_description}" }
				id => "message-6:38"
				add_field => {
				"action" => "One-time fix up"
					"[event][id]" => "6:38"
					"[rsa][message][id1]" => "6:38"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:39
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to run program <process>: Unable to locate program
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to run program %{process}: Unable to locate program" }
				id => "message-6:39"
				add_field => {
					"[event][id]" => "6:39"
					"[rsa][message][id1]" => "6:39"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:40
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Listener task for port <sport> is suspending for <id1> seconds due to listen errors
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Listener task for port %{sport} is suspending for %{id1} seconds due to listen errors" }
				id => "message-6:40"
				add_field => {
					"[event][id]" => "6:40"
					"[rsa][message][id1]" => "6:40"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:41
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,A DDM report document <fld2> could not be opened.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},A DDM report document %{fld2} could not be opened." }
				id => "message-6:41"
				add_field => {
					"[event][id]" => "6:41"
					"[rsa][message][id1]" => "6:41"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:42
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Event: <result> opening domain monitoring event document <fld2> in database <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Event: %{result} opening domain monitoring event document %{fld2} in database %{db_name}: %{info}" }
				id => "message-6:42"
				add_field => {
					"[event][id]" => "6:42"
					"[rsa][message][id1]" => "6:42"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:43
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ATTEMPT TO ACCESS SERVER by <username>/<fld2> was <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ATTEMPT TO ACCESS SERVER by %{username}/%{fld2} was %{disposition}" }
				id => "message-6:43"
				add_field => {
					"[event][id]" => "6:43"
					"[rsa][message][id1]" => "6:43"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:44
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Running Program document for '<fld2>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Running Program document for '%{fld2}'" }
				id => "message-6:44"
				add_field => {
					"[event][id]" => "6:44"
					"[rsa][message][id1]" => "6:44"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:45
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,AMgr: Error executing agent '<agent>' in '<db_name>'. Agent signer '<fld2>': <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},AMgr: Error executing agent '%{agent}' in '%{db_name}'. Agent signer '%{fld2}': %{action}" }
				id => "message-6:45"
				add_field => {
					"[event][id]" => "6:45"
					"[rsa][message][id1]" => "6:45"
					"[event][categoryid]" => "1501040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:46
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Logical disk activity (<fld2>) { no longer exceeds | exceeds } configured thresholds.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Logical[\s]+disk[\s]+activity[\s]+\((?<fld2>[^\)]*)\)[\s]+([\s]*no[\s]+longer[\s]+exceeds[\s]+|[\s]*exceeds[\s]+)[\s]+configured[\s]+thresholds\.$" }
				id => "message-6:46"
				add_field => {
					"[event][id]" => "6:46"
					"[rsa][message][id1]" => "6:46"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:47
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to replace obsolete catalog: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to replace obsolete catalog: %{info}" }
				id => "message-6:47"
				add_field => {
					"[event][id]" => "6:47"
					"[rsa][message][id1]" => "6:47"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:48
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Message <id1> auto forwarded by <username>/<fld2> to <to>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Message %{id1} auto forwarded by %{username}/%{fld2} to %{to}" }
				id => "message-6:48"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "License"
				"ec_activity" => "Modify"
				"service" => "Router"
					"[event][id]" => "6:48"
					"[rsa][message][id1]" => "6:48"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:49
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Successfully delivered quota report for recipient <fld2>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Successfully delivered quota report for recipient %{fld2}." }
				id => "message-6:49"
				add_field => {
				"service" => "Router"
				"event_description" => "Successfully delivered quota report for recipient"
					"[event][id]" => "6:49"
					"[rsa][message][id1]" => "6:49"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:50
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error creating ACL, returning error no access.: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error creating ACL, returning error no access.: %{info}" }
				id => "message-6:50"
				add_field => {
					"[event][id]" => "6:50"
					"[rsa][message][id1]" => "6:50"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:51
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to redirect failover from <fld2>!!<db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to redirect failover from %{fld2}!!%{db_name}" }
				id => "message-6:51"
				add_field => {
					"[event][id]" => "6:51"
					"[rsa][message][id1]" => "6:51"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:52
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: Successfully delivered over quota warning threshold report for recipient <fld2>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: Successfully delivered over quota warning threshold report for recipient %{fld2}." }
				id => "message-6:52"
				add_field => {
				"service" => "Router"
					"[event][id]" => "6:52"
					"[rsa][message][id1]" => "6:52"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:53
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error updating view '<fld2>' in <db_name>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error updating view '%{fld2}' in %{db_name}: %{event_description}" }
				id => "message-6:53"
				add_field => {
					"[event][id]" => "6:53"
					"[rsa][message][id1]" => "6:53"
					"[event][categoryid]" => "1501040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:54
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Web Configuration probe: Server documents have been analyzed, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Web Configuration probe: Server documents have been analyzed, %{info}" }
				id => "message-6:54"
				add_field => {
					"[event][id]" => "6:54"
					"[rsa][message][id1]" => "6:54"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:55
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Web Best Practices Probe: { Server | Internet Site } Documents have been analyzed, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Web[\s]+Best[\s]+Practices[\s]+Probe:[\s]+([\s]*Server[\s]+|[\s]*Internet[\s]+Site[\s]+)[\s]+Documents[\s]+have[\s]+been[\s]+analyzed,[\s]+(?<info>.*)$" }
				id => "message-6:55"
				add_field => {
					"[event][id]" => "6:55"
					"[rsa][message][id1]" => "6:55"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:56
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Compacting <db_name> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Compacting %{db_name} %{fld3}" }
				id => "message-6:56"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "6:56"
					"[rsa][message][id1]" => "6:56"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:57
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Compacted <db_name>, <bytes> bytes recovered (<fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Compacted %{db_name}, %{bytes} bytes recovered (%{fld2})" }
				id => "message-6:57"
				add_field => {
					"[event][id]" => "6:57"
					"[rsa][message][id1]" => "6:57"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:58
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database compactor process shutdown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database compactor process shutdown" }
				id => "message-6:58"
				add_field => {
					"[event][id]" => "6:58"
					"[rsa][message][id1]" => "6:58"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:59
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Server task Router on <fld2> is no longer responding
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Server task Router on %{fld2} is no longer responding" }
				id => "message-6:59"
				add_field => {
					"[event][id]" => "6:59"
					"[rsa][message][id1]" => "6:59"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:60
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to access <fld2>: The remote server is not a known TCP/IP host.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to access %{fld2}: The remote server is not a known TCP/IP host." }
				id => "message-6:60"
				add_field => {
					"[event][id]" => "6:60"
					"[rsa][message][id1]" => "6:60"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:61
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to find ID for '<fld3>' in vault '<fld2>'. <space> Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to find ID for '%{fld3}' in vault '%{fld2}'. %{space} Error: %{result}" }
				id => "message-6:61"
				add_field => {
					"[event][id]" => "6:61"
					"[rsa][message][id1]" => "6:61"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:62
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Failed to set download count for '<fld11>' to <fld3>. <space> '<fld2>' made request (IP Address <saddr>:<sport>) from process <process>. <space> Error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Failed to set download count for '%{fld11}' to %{fld3}. %{space} '%{fld2}' made request (IP Address %{saddr}:%{sport}) from process %{process}. %{space} Error: %{result}" }
				id => "message-6:62"
				add_field => {
					"[event][id]" => "6:62"
					"[rsa][message][id1]" => "6:62"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:63
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Server <fld2> reported the following problem causing authentication to fail: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Server %{fld2} reported the following problem causing authentication to fail: %{result}" }
				id => "message-6:63"
				add_field => {
					"[event][id]" => "6:63"
					"[rsa][message][id1]" => "6:63"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 6:64
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<db_name> has NEVER replicated with ANY server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{db_name} has NEVER replicated with ANY server" }
				id => "message-6:64"
				add_field => {
					"[event][id]" => "6:64"
					"[rsa][message][id1]" => "6:64"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "7" {
		# MESSAGE 7
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Error processing Mail Policy for user: '<username>' on mailfile: '<mail_id>'.: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: Error processing Mail Policy for user: '%{username}' on mailfile: '%{mail_id}'.: %{result}" }
				id => "message-7"
				add_field => {
				"service" => "Admin Process"
					"[event][id]" => "7"
					"[rsa][message][id1]" => "7"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{ Rooms and Resources Manager <event_description> | RnRMgr: <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),([\s]*Rooms[\s]+and[\s]+Resources[\s]+Manager[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*RnRMgr:[\s]+(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-7:01"
				add_field => {
				"service" => "RnRMgr"
					"[event][id]" => "7:01"
					"[rsa][message][id1]" => "7:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,SchedMgr: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},SchedMgr: %{event_description}" }
				id => "message-7:02"
				add_field => {
				"service" => "SchedMgr"
					"[event][id]" => "7:02"
					"[rsa][message][id1]" => "7:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database Designer shutdown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database Designer shutdown" }
				id => "message-7:03"
				add_field => {
					"[event][id]" => "7:03"
					"[rsa][message][id1]" => "7:03"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The <filename> variable <param> is not set
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The %{filename} variable %{param} is not set" }
				id => "message-7:04"
				add_field => {
					"[event][id]" => "7:04"
					"[rsa][message][id1]" => "7:04"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service> started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service} started" }
				id => "message-7:05"
				add_field => {
					"[event][id]" => "7:05"
					"[rsa][message][id1]" => "7:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Router: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Router: %{event_description}" }
				id => "message-7:06"
				add_field => {
				"service" => "Router"
					"[event][id]" => "7:06"
					"[rsa][message][id1]" => "7:06"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<change_attribute> changed to <change_new>..
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{change_attribute} changed to %{change_new}.." }
				id => "message-7:07"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "7:07"
					"[rsa][message][id1]" => "7:07"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,JVM: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},JVM: %{event_description}" }
				id => "message-7:08"
				add_field => {
				"service" => "JVM"
					"[event][id]" => "7:08"
					"[rsa][message][id1]" => "7:08"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Event: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Event: %{event_description}" }
				id => "message-7:09"
				add_field => {
				"service" => "Event"
					"[event][id]" => "7:09"
					"[rsa][message][id1]" => "7:09"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Diagnostics <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Diagnostics %{event_description}" }
				id => "message-7:10"
				add_field => {
				"action" => "Diagnostics"
					"[event][id]" => "7:10"
					"[rsa][message][id1]" => "7:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<id1> duplicate PUIDs {found while initializing Domino Domain Monitoring|found}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(?<id1>[^\s]*)[\s]+duplicate[\s]+PUIDs[\s]+(found[\s]+while[\s]+initializing[\s]+Domino[\s]+Domain[\s]+Monitoring|found)$" }
				id => "message-7:11"
				add_field => {
					"[event][id]" => "7:11"
					"[rsa][message][id1]" => "7:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,While comparing note sequence numbers <event_description>,<event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},While comparing note sequence numbers %{event_description},%{event_state}" }
				id => "message-7:12"
				add_field => {
				"action" => "comparing note sequence numbers"
					"[event][id]" => "7:12"
					"[rsa][message][id1]" => "7:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Updating <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Updating %{event_description}" }
				id => "message-7:13"
				add_field => {
				"action" => "Updating"
					"[event][id]" => "7:13"
					"[rsa][message][id1]" => "7:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Adding <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Adding %{event_description}" }
				id => "message-7:14"
				add_field => {
				"action" => "Adding"
					"[event][id]" => "7:14"
					"[rsa][message][id1]" => "7:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:15
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Deleting <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Deleting %{event_description}" }
				id => "message-7:15"
				add_field => {
				"action" => "Deleting"
					"[event][id]" => "7:15"
					"[rsa][message][id1]" => "7:15"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:16
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Warning: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Warning: %{event_description}" }
				id => "message-7:16"
				add_field => {
					"[event][id]" => "7:16"
					"[rsa][message][id1]" => "7:16"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:17
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Releasing <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Releasing %{event_description}" }
				id => "message-7:17"
				add_field => {
				"action" => "Releasing"
					"[event][id]" => "7:17"
					"[rsa][message][id1]" => "7:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:18
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,RDEBUG Server: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},RDEBUG Server: %{event_description}" }
				id => "message-7:18"
				add_field => {
				"service" => "RDEBUG Server"
					"[event][id]" => "7:18"
					"[rsa][message][id1]" => "7:18"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:19
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,DIIOP Server: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},DIIOP Server: %{event_description}" }
				id => "message-7:19"
				add_field => {
				"service" => "DIIOP Server"
					"[event][id]" => "7:19"
					"[rsa][message][id1]" => "7:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:20
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Listen for connect requests on <protocol> Port:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Listen for connect requests on %{protocol} Port:%{sport}" }
				id => "message-7:20"
				add_field => {
					"[event][id]" => "7:20"
					"[rsa][message][id1]" => "7:20"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:21
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<disposition> consistency check on <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{disposition} consistency check on %{db_name}" }
				id => "message-7:21"
				add_field => {
				"action" => "consistency check"
					"[event][id]" => "7:21"
					"[rsa][message][id1]" => "7:21"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:22
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database %{event_description}" }
				id => "message-7:22"
				add_field => {
				"action" => "Database check"
					"[event][id]" => "7:22"
					"[rsa][message][id1]" => "7:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:23
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Purging old documents from database <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Purging old documents from database %{db_name}" }
				id => "message-7:23"
				add_field => {
				"action" => "Purging"
					"[event][id]" => "7:23"
					"[rsa][message][id1]" => "7:23"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:24
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Received the following error performing a <action>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Admin Process: Received the following error performing a %{action}: %{result}" }
				id => "message-7:24"
				add_field => {
				"reason" => "%{result}"
					"[event][id]" => "7:24"
					"[rsa][message][id1]" => "7:24"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:25
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Begin scan of databases to be consistency checked
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Begin scan of databases to be consistency checked" }
				id => "message-7:25"
				add_field => {
				"action" => "consistency check"
					"[event][id]" => "7:25"
					"[rsa][message][id1]" => "7:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:26
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,End scan of databases: <id1> found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},End scan of databases: %{id1} found" }
				id => "message-7:26"
				add_field => {
				"action" => "consistency check"
					"[event][id]" => "7:26"
					"[rsa][message][id1]" => "7:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:27
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Cleaning <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Cleaning %{event_description}" }
				id => "message-7:27"
				add_field => {
				"action" => "Cleaning"
					"[event][id]" => "7:27"
					"[rsa][message][id1]" => "7:27"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:28
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,View '<fld20>' of the target file '<db_name>' is now clean
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},View '%{fld20}' of the target file '%{db_name}' is now clean" }
				id => "message-7:28"
				add_field => {
				"action" => "Cleaning"
					"[event][id]" => "7:28"
					"[rsa][message][id1]" => "7:28"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:29
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Successfully removed all policy control items from the calendar profile for '<username>' in mailfile <mail_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Successfully removed all policy control items from the calendar profile for '%{username}' in mailfile %{mail_id}" }
				id => "message-7:29"
				add_field => {
				"action" => "Successfully removed all policy control"
					"[event][id]" => "7:29"
					"[rsa][message][id1]" => "7:29"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:30
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Access to server <db_name> can not be established by opening database (<id1>). [<id2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Access to server %{db_name} can not be established by opening database (%{id1}). [%{id2}]" }
				id => "message-7:30"
				add_field => {
					"[event][id]" => "7:30"
					"[rsa][message][id1]" => "7:30"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:31
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,DAOSMGR: DAOS is not enabled, nothing to do.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},DAOSMGR: DAOS is not enabled, nothing to do." }
				id => "message-7:31"
				add_field => {
				"service" => "DAOSMGR"
					"[event][id]" => "7:31"
					"[rsa][message][id1]" => "7:31"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:32
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The number of pending mail messages on <fld2> is at a healthy level.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The number of pending mail messages on %{fld2} is at a healthy level." }
				id => "message-7:32"
				add_field => {
				"service" => "DAOSMGR"
					"[event][id]" => "7:32"
					"[rsa][message][id1]" => "7:32"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:33
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The number of pending mail messages on <fld2> has exceeded the allowed limit.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The number of pending mail messages on %{fld2} has exceeded the allowed limit." }
				id => "message-7:33"
				add_field => {
				"service" => "DAOSMGR"
					"[event][id]" => "7:33"
					"[rsa][message][id1]" => "7:33"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:34
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<username>/<fld2> from host [<saddr>:<sport>] <result> to authenticate: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{username}/%{fld2} from host [%{saddr}:%{sport}] %{result} to authenticate: %{info}" }
				id => "message-7:34"
				add_field => {
				"service" => "DAOSMGR"
					"[event][id]" => "7:34"
					"[rsa][message][id1]" => "7:34"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:35
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error creating ACL, returning error no access.: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error creating ACL, returning error no access.: %{info}" }
				id => "message-7:35"
				add_field => {
					"[event][id]" => "7:35"
					"[rsa][message][id1]" => "7:35"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:36
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,ACL Corrupt in database <db_name>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},ACL Corrupt in database %{db_name}, %{info}" }
				id => "message-7:36"
				add_field => {
					"[event][id]" => "7:36"
					"[rsa][message][id1]" => "7:36"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:37
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,LDAP Server: Bind request for <username> failed: <result>: failed to authenticate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},LDAP Server: Bind request for %{username} failed: %{result}: failed to authenticate" }
				id => "message-7:37"
				add_field => {
				"service" => "LDAP Server"
					"[event][id]" => "7:37"
					"[rsa][message][id1]" => "7:37"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:38
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<username> was granted full administrator access.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{username} was granted full administrator access." }
				id => "message-7:38"
				add_field => {
					"[event][id]" => "7:38"
					"[rsa][message][id1]" => "7:38"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:44
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Free space on database <db_name> is greater than <fld2> (<fld3>).<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Free space on database %{db_name} is greater than %{fld2} (%{fld3}).%{info}" }
				id => "message-7:44"
				add_field => {
					"[event][id]" => "7:44"
					"[rsa][message][id1]" => "7:44"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:39
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail from <src_dn> to destination <dst_dn> has exceeded its message limit.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Mail from %{src_dn} to destination %{dst_dn} has exceeded its message limit." }
				id => "message-7:39"
				add_field => {
					"[event][id]" => "7:39"
					"[rsa][message][id1]" => "7:39"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:40
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail from <src_dn> to destination <dst_dn> is under its message limit.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Mail from %{src_dn} to destination %{dst_dn} is under its message limit." }
				id => "message-7:40"
				add_field => {
					"[event][id]" => "7:40"
					"[rsa][message][id1]" => "7:40"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:41
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,DAOSMGR: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},DAOSMGR: %{result}" }
				id => "message-7:41"
				add_field => {
					"[event][id]" => "7:41"
					"[rsa][message][id1]" => "7:41"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:42
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The DAOS catalog cannot be resynchronized because <info>: (<resultcode>) <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The DAOS catalog cannot be resynchronized because %{info}: (%{resultcode}) %{fld2}" }
				id => "message-7:42"
				add_field => {
					"[event][id]" => "7:42"
					"[rsa][message][id1]" => "7:42"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 7:43
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,AT Collector: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},AT Collector: %{info}" }
				id => "message-7:43"
				add_field => {
					"[event][id]" => "7:43"
					"[rsa][message][id1]" => "7:43"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "9" {
		# MESSAGE 9
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Index update <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Index update %{event_description}" }
				id => "message-9"
				add_field => {
				"service" => "Index update"
					"[event][id]" => "9"
					"[rsa][message][id1]" => "9"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Finished updating views in <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Finished updating views in %{db_name}" }
				id => "message-9:01"
				add_field => {
					"[event][id]" => "9:01"
					"[rsa][message][id1]" => "9:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Updating views in <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Updating views in %{db_name}" }
				id => "message-9:02"
				add_field => {
				"service" => "View update"
					"[event][id]" => "9:02"
					"[rsa][message][id1]" => "9:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Updating <db_name> view '(<fld2>)'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Updating %{db_name} view '(%{fld2})'" }
				id => "message-9:03"
				add_field => {
				"service" => "View update"
					"[event][id]" => "9:03"
					"[rsa][message][id1]" => "9:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Full text indexing documents in <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Full text indexing documents in %{db_name}" }
				id => "message-9:04"
				add_field => {
					"[event][id]" => "9:04"
					"[rsa][message][id1]" => "9:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<fld2> documents (<bytes> bytes) indexed in <db_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{fld2} documents (%{bytes} bytes) indexed in %{db_name}" }
				id => "message-9:05"
				add_field => {
					"[event][id]" => "9:05"
					"[rsa][message][id1]" => "9:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,AMgr: Error executing agent '<agent>' in '<db_name>'. Agent signer '<fld2>': <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},AMgr: Error executing agent '%{agent}' in '%{db_name}'. Agent signer '%{fld2}': %{action}" }
				id => "message-9:06"
				add_field => {
					"[event][id]" => "9:06"
					"[rsa][message][id1]" => "9:06"
					"[event][categoryid]" => "1501040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error updating view '<fld2>' in <db_name>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error updating view '%{fld2}' in %{db_name}: %{event_description}" }
				id => "message-9:07"
				add_field => {
					"[event][id]" => "9:07"
					"[rsa][message][id1]" => "9:07"
					"[event][categoryid]" => "1501040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error full text indexing document <fld11>  (<fld12>) Database is currently being indexed by another process
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error full text indexing document %{fld11}  (%{fld12}) Database is currently being indexed by another process" }
				id => "message-9:08"
				add_field => {
					"[event][id]" => "9:08"
					"[rsa][message][id1]" => "9:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error full text indexing <db_name>: Database is currently being indexed by another process
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error full text indexing %{db_name}: Database is currently being indexed by another process" }
				id => "message-9:09"
				add_field => {
					"[event][id]" => "9:09"
					"[rsa][message][id1]" => "9:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 9:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,MT Collector: Failed updating entry in message tracking store: <info>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},MT Collector: Failed updating entry in message tracking store: %{info}: %{result}" }
				id => "message-9:10"
				add_field => {
					"[event][id]" => "9:10"
					"[rsa][message][id1]" => "9:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "10" {
		# MESSAGE 10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{07:AE|07:C1}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(07:AE|07:C1)$" }
				id => "message-10"
				add_field => {
					"[event][id]" => "10"
					"[rsa][message][id1]" => "10"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Recovery Manager: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Recovery Manager: %{event_description}" }
				id => "message-10:01"
				add_field => {
				"service" => "Recovery Manager"
					"[event][id]" => "10:01"
					"[rsa][message][id1]" => "10:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Updating <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Updating %{event_description}" }
				id => "message-10:02"
				add_field => {
				"action" => "Updating"
					"[event][id]" => "10:02"
					"[rsa][message][id1]" => "10:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Index update <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Index update %{event_description}" }
				id => "message-10:03"
				add_field => {
				"service" => "Index update"
					"[event][id]" => "10:03"
					"[rsa][message][id1]" => "10:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,LDAP {Server|Schema}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),LDAP[\s]+(Server|Schema):[\s]+(?<event_description>.*)$" }
				id => "message-10:04"
				add_field => {
				"service" => "LDAP Server"
					"[event][id]" => "10:04"
					"[rsa][message][id1]" => "10:04"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Admin Process: Received the following error performing a <action>{:|.} <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Admin[\s]+Process:[\s]+Received[\s]+the[\s]+following[\s]+error[\s]+performing[\s]+a[\s]+(?<action>[^:\.]*)(:|\.)[\s]+(?<result>.*)$" }
				id => "message-10:05"
				add_field => {
				"reason" => "%{result}"
				"service" => "Admin Process"
					"[event][id]" => "10:05"
					"[rsa][message][id1]" => "10:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Informational, {rebuild view|rebuilding view} <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Informational,[\s]+(rebuild[\s]+view|rebuilding[\s]+view)[\s]+(?<event_description>.*)$" }
				id => "message-10:06"
				add_field => {
				"action" => "Rebuild view"
					"[event][id]" => "10:06"
					"[rsa][message][id1]" => "10:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:07
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Daily activity for database - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Daily activity for database - %{event_description}" }
				id => "message-10:07"
				add_field => {
					"[event][id]" => "10:07"
					"[rsa][message][id1]" => "10:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:08
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Event: <result> opening domain monitoring event document <fld2> in database <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Event: %{result} opening domain monitoring event document %{fld2} in database %{db_name}: %{info}" }
				id => "message-10:08"
				add_field => {
					"[event][id]" => "10:08"
					"[rsa][message][id1]" => "10:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:09
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Directory assistance is notifying of a MAB reload
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Directory assistance is notifying of a MAB reload" }
				id => "message-10:09"
				add_field => {
				"event_description" => "Directory assistance is notifying of a MAB reload"
					"[event][id]" => "10:09"
					"[rsa][message][id1]" => "10:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:10
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database open <result>: <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database open %{result}: %{db_name}: %{info}" }
				id => "message-10:10"
				add_field => {
					"[event][id]" => "10:10"
					"[rsa][message][id1]" => "10:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Integrity check <result> for ID Vault <fld2>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Integrity check %{result} for ID Vault %{fld2}: %{info}" }
				id => "message-10:11"
				add_field => {
					"[event][id]" => "10:11"
					"[rsa][message][id1]" => "10:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Unable to load system level detail harvesting settings.: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Unable to load system level detail harvesting settings.: %{info}" }
				id => "message-10:12"
				add_field => {
					"[event][id]" => "10:12"
					"[rsa][message][id1]" => "10:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:13
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<result> compacting <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{result} compacting %{db_name}: %{info}" }
				id => "message-10:13"
				add_field => {
					"[event][id]" => "10:13"
					"[rsa][message][id1]" => "10:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to update calendar entry <fld2> from list <fld3> for <fld4> Error returned: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to update calendar entry %{fld2} from list %{fld3} for %{fld4} Error returned: %{info}" }
				id => "message-10:14"
				add_field => {
				"result" => "Error"
					"[event][id]" => "10:14"
					"[rsa][message][id1]" => "10:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:15
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The { Domino Directory | secondary LDAP | LDAP } search response on <dst_dn> is below configured severity thresholds
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),The[\s]+([\s]*Domino[\s]+Directory[\s]+|[\s]*secondary[\s]+LDAP[\s]+|[\s]*LDAP[\s]+)[\s]+search[\s]+response[\s]+on[\s]+(?<dst_dn>[^\s]*)[\s]+is[\s]+below[\s]+configured[\s]+severity[\s]+thresholds$" }
				id => "message-10:15"
				add_field => {
					"[event][id]" => "10:15"
					"[rsa][message][id1]" => "10:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:16
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to add note <fld2> to folder in Database <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to add note %{fld2} to folder in Database %{db_name}: %{info}" }
				id => "message-10:16"
				add_field => {
					"[event][id]" => "10:16"
					"[rsa][message][id1]" => "10:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:17
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error registering mail rule <fld2> for database <db_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error registering mail rule %{fld2} for database %{db_name}: %{info}" }
				id => "message-10:17"
				add_field => {
					"[event][id]" => "10:17"
					"[rsa][message][id1]" => "10:17"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:18
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Warning: Multiple matches found for <fld2> in Domino Directory, using first one found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Warning: Multiple matches found for %{fld2} in Domino Directory, using first one found" }
				id => "message-10:18"
				add_field => {
					"[event][id]" => "10:18"
					"[rsa][message][id1]" => "10:18"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:19
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error full text indexing <db_name>: Database is currently being indexed by another process
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error full text indexing %{db_name}: Database is currently being indexed by another process" }
				id => "message-10:19"
				add_field => {
					"[event][id]" => "10:19"
					"[rsa][message][id1]" => "10:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:20
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,AMgr: Error executing agent '<agent>' in '<db_name>'. Agent signer '<fld2>': <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},AMgr: Error executing agent '%{agent}' in '%{db_name}'. Agent signer '%{fld2}': %{action}" }
				id => "message-10:20"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "10:20"
					"[rsa][message][id1]" => "10:20"
					"[event][categoryid]" => "1501040000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:21
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Task initialization failure; loading agent in '<db_name>' (Note ID <fld12>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Task initialization failure; loading agent in '%{db_name}' (Note ID %{fld12}): %{result}" }
				id => "message-10:21"
				add_field => {
					"[event][id]" => "10:21"
					"[rsa][message][id1]" => "10:21"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:22
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service>: Error processing calendar profile document (NoteID <fld12>) in database <db_name>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{service}: Error processing calendar profile document (NoteID %{fld12}) in database %{db_name}: %{result}" }
				id => "message-10:22"
				add_field => {
					"[event][id]" => "10:22"
					"[rsa][message][id1]" => "10:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:23
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to replicate <db_name>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to replicate %{db_name}: %{result}" }
				id => "message-10:23"
				add_field => {
					"[event][id]" => "10:23"
					"[rsa][message][id1]" => "10:23"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:24
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to write to database - database <db_name> would exceed its disk quota of <fld2> by <fld3>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to write to database - database %{db_name} would exceed its disk quota of %{fld2} by %{fld3}." }
				id => "message-10:24"
				add_field => {
					"[event][id]" => "10:24"
					"[rsa][message][id1]" => "10:24"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:25
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error updating view in <db_name>: Full Text queue internal error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error updating view in %{db_name}: Full Text queue internal error" }
				id => "message-10:25"
				add_field => {
					"[event][id]" => "10:25"
					"[rsa][message][id1]" => "10:25"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 10:26
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Database note open error: <fld2> document in database <db_name> opened by <fld3>: Attempt to perform folder operation on non-folder note.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Database note open error: %{fld2} document in database %{db_name} opened by %{fld3}: Attempt to perform folder operation on non-folder note." }
				id => "message-10:26"
				add_field => {
					"[event][id]" => "10:26"
					"[rsa][message][id1]" => "10:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "11" {
		# MESSAGE 11
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Network error on port <sport> (session <fld13>): Network error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Network error on port %{sport} (session %{fld13}): Network error: %{result}" }
				id => "message-11"
				add_field => {
					"[event][id]" => "11"
					"[rsa][message][id1]" => "11"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 11:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Probe of <network_service> port on <sport> has <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Probe of %{network_service} port on %{sport} has %{disposition}" }
				id => "message-11:01"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "11:01"
					"[rsa][message][id1]" => "11:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 11:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail probe configuration does not specify a recipient
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Mail probe configuration does not specify a recipient" }
				id => "message-11:02"
				add_field => {
					"[event][id]" => "11:02"
					"[rsa][message][id1]" => "11:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 11:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Error on Listen function: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Error on Listen function: %{result}" }
				id => "message-11:03"
				add_field => {
				"reason" => "%{result}"
					"[event][id]" => "11:03"
					"[rsa][message][id1]" => "11:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 11:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Mail probe to ISpy on <hostname> {was|has} <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),Mail[\s]+probe[\s]+to[\s]+ISpy[\s]+on[\s]+(?<hostname>[^\s]*)[\s]+(was|has)[\s]+(?<result>.*)$" }
				id => "message-11:04"
				add_field => {
					"[event][id]" => "11:04"
					"[rsa][message][id1]" => "11:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 11:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Integrity check <result> for ID Vault <fld2>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Integrity check %{result} for ID Vault %{fld2}: %{info}" }
				id => "message-11:05"
				add_field => {
					"[event][id]" => "11:05"
					"[rsa][message][id1]" => "11:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 11:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Unable to access <fld2>: The remote server is not a known TCP/IP host.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Unable to access %{fld2}: The remote server is not a known TCP/IP host." }
				id => "message-11:06"
				add_field => {
					"[event][id]" => "11:06"
					"[rsa][message][id1]" => "11:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "12" {
		# MESSAGE 12
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<space>Total <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{space}Total %{event_description}" }
				id => "message-12"
				add_field => {
					"[event][id]" => "12"
					"[rsa][message][id1]" => "12"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 12:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{AMgr|Agent Manager}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(AMgr|Agent[\s]+Manager):[\s]+(?<event_description>.*)$" }
				id => "message-12:01"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "12:01"
					"[rsa][message][id1]" => "12:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 12:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<service> {are enabled|started}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(?<service>[^\s]*)[\s]+(are[\s]+enabled|started)$" }
				id => "message-12:02"
				add_field => {
					"[event][id]" => "12:02"
					"[rsa][message][id1]" => "12:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "14" {
		# MESSAGE 14
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,{AMgr|Agent Manager}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),(AMgr|Agent[\s]+Manager):[\s]+(?<event_description>.*)$" }
				id => "message-14"
				add_field => {
				"service" => "AMgr"
					"[event][id]" => "14"
					"[rsa][message][id1]" => "14"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 14:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,HTTP Server: Daily Clearing Event Issued
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},HTTP Server: Daily Clearing Event Issued" }
				id => "message-14:01"
				add_field => {
				"service" => "HTTP Server"
					"[event][id]" => "14:01"
					"[rsa][message][id1]" => "14:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "22" {
		# MESSAGE 22
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,<username> is configured to use the default view update algorithm.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},%{username} is configured to use the default view update algorithm." }
				id => "message-22"
				add_field => {
					"[event][id]" => "22"
					"[rsa][message][id1]" => "22"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 22:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The <network_service> server on <dst_dn> is up and serving <fld14> clients
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},The %{network_service} server on %{dst_dn} is up and serving %{fld14} clients" }
				id => "message-22:01"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "22:01"
					"[rsa][message][id1]" => "22:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 22:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Periodic directory view updates are enabled on <dst_dn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Periodic directory view updates are enabled on %{dst_dn}" }
				id => "message-22:02"
				add_field => {
					"[event][id]" => "22:02"
					"[rsa][message][id1]" => "22:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 22:03
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,The { Domino Directory | secondary LDAP | LDAP } search response on <dst_dn> is below configured severity thresholds
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),The[\s]+([\s]*Domino[\s]+Directory[\s]+|[\s]*secondary[\s]+LDAP[\s]+|[\s]*LDAP[\s]+)[\s]+search[\s]+response[\s]+on[\s]+(?<dst_dn>[^\s]*)[\s]+is[\s]+below[\s]+configured[\s]+severity[\s]+thresholds$" }
				id => "message-22:03"
				add_field => {
					"[event][id]" => "22:03"
					"[rsa][message][id1]" => "22:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 22:04
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,LDAP {Server|Schema}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),(?<event_time_string>[^,]*),(?<operation_id>[^,]*),(?<dn>[^,]*),(?<id>[^,]*),LDAP[\s]+(Server|Schema):[\s]+(?<event_description>.*)$" }
				id => "message-22:04"
				add_field => {
				"service" => "LDAP Server"
					"[event][id]" => "22:04"
					"[rsa][message][id1]" => "22:04"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 22:05
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Listen for connect requests on <protocol> Port:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Listen for connect requests on %{protocol} Port:%{sport}" }
				id => "message-22:05"
				add_field => {
					"[event][id]" => "22:05"
					"[rsa][message][id1]" => "22:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 22:06
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Suspending listen task for <fld2> due to network errors
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Suspending listen task for %{fld2} due to network errors" }
				id => "message-22:06"
				add_field => {
					"[event][id]" => "22:06"
					"[rsa][message][id1]" => "22:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "23" {
		# MESSAGE 23
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Server task <network_service> Server on <dst_dn> is no longer running
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Server task %{network_service} Server on %{dst_dn} is no longer running" }
				id => "message-23"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "23"
					"[rsa][message][id1]" => "23"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 23:01
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Server task <network_service> on <dst_dn> is no longer responding
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Server task %{network_service} on %{dst_dn} is no longer responding" }
				id => "message-23:01"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "23:01"
					"[rsa][message][id1]" => "23:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 23:02
		# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,Server task <network_service> on <dst_dn> is running
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},Server task %{network_service} on %{dst_dn} is running" }
				id => "message-23:02"
				add_field => {
				"protocol" => "%{network_service}"
					"[event][id]" => "23:02"
					"[rsa][message][id1]" => "23:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId256
	# line in RSA: <fld1>,<event_time_string>,<operation_id>,<dn>,<id>,(SMTP/SMTP) Mail.Dead = <fld2>, max allowable: (<fld3>) [<fld4>]
	else if [logstash][msgparser][id] == "msgParserId256" {
		dissect {
			mapping => { "message" => "%{fld1},%{event_time_string},%{operation_id},%{dn},%{id},(SMTP/SMTP) Mail.Dead = %{fld2}, max allowable: (%{fld3}) [%{fld4}]" }
			id => "msgParserId256"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[fld1]"
		destination => "[severity]"
		dictionary => {
			"0" => "Unknown"
			"1" => "Fatal"
			"2" => "Failure"
			"3" => "Warning (high)"
			"4" => "Warning (low)"
			"5" => "Normal"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[id]"
		destination => "[event_type]"
		dictionary => {
			"0" => "Unknown"
			"1" => "Comm"
			"2" => "Security"
			"3" => "Mail"
			"4" => "Replica"
			"5" => "Resource"
			"6" => "Misc"
			"7" => "Server"
			"8" => "Statistic"
			"9" => "Update"
		}
		fallback => ""
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_lotusdominomsg.json"
#			template_name => "lotusdomino_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
