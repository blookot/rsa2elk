# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "fortinetfortimail"
			"[observer][name]" => "Fortinet FortiMail"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: date=<hdate> time=<htime> device_id=<hfld1> log_id=<hfld2> log_part=<hfld3> type=<msgIdPart1> subtype=<msgIdPart2> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hfld1} log_id=%{hfld2} log_part=%{hfld3} type=%{msgIdPart1} subtype=%{msgIdPart2} pri=%{hseverity} %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: date=<hdate> time=<htime> device_id=<hfld1> log_id=<hfld2> log_part=<hfld3> type=<messageid> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hfld1} log_id=%{hfld2} log_part=%{hfld3} type=%{messageid} pri=%{hseverity} %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: date=<hdate> time=<htime> device_id=<hfld1> log_id=<hfld2> type=<msgIdPart1> subtype=<msgIdPart2> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hfld1} log_id=%{hfld2} type=%{msgIdPart1} subtype=%{msgIdPart2} pri=%{hseverity} %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: date=<hdate> time=<htime> device_id=<hfld1> log_id=<hfld2> type=<messageid> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hfld1} log_id=%{hfld2} type=%{messageid} pri=%{hseverity} %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-fortinetfortimailmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: user=<username> ui={<network_service>(<saddr>) action=<action>|<network_service> action=<action>} status=<event_state> reason=<result> msg={"<event_description>"|<event_description>}
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^user=(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+action=(?<action>[^\s]*)|(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId0"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: user=<username> ui={<network_service>(<saddr>) action=<action>|<network_service> action=<action>} status=<event_state> msg={"<event_description>"|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId1" {
		grok {
			match => { "message" => "^user=(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+action=(?<action>[^\s]*)|(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId1"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "event_smtp" {
		# MESSAGE event_smtp:01
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id={"<sessionid>"|<sessionid>}msg="STARTTLS=<fld1>, relay={<shost>[<saddr>]|<shost>}, version=<version>, verify=<fld2>, cipher=<s_cipher>, bits=<fld3>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^m]*))msg=\"STARTTLS=(?<fld1>[^,]*),[\s]+relay=((?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]|(?<shost>[^,]*)),[\s]+version=(?<version>[^,]*),[\s]+verify=(?<fld2>[^,]*),[\s]+cipher=(?<s_cipher>[^,]*),[\s]+bits=(?<fld3>[^\"]*)\"$" }
				id => "message-event_smtp:01"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:01"
					"[rsa][message][id1]" => "event_smtp:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:02
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id={"<sessionid>"|<sessionid>}msg="STARTTLS=<fld1>, cert-subject=<cert_subject>, cert-issuer=<fld2>, verifymsg=<fld3>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^m]*))msg=\"STARTTLS=(?<fld1>[^,]*),[\s]+cert\-subject=(?<cert_subject>[^,]*),[\s]+cert\-issuer=(?<fld2>[^,]*),[\s]+verifymsg=(?<fld3>[^\"]*)\"$" }
				id => "message-event_smtp:02"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:02"
					"[rsa][message][id1]" => "event_smtp:02"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:03
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="to=<<<to>>, delay=<fld1>, xdelay=<fld2>, mailer=<protocol>, pri=<fld3>, relay=<shost>[<saddr>], dsn=<fld4>, stat=<fld5>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"to=<(?<to>[^>]*)>,[\s]+delay=(?<fld1>[^,]*),[\s]+xdelay=(?<fld2>[^,]*),[\s]+mailer=(?<protocol>[^,]*),[\s]+pri=(?<fld3>[^,]*),[\s]+relay=(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\],[\s]+dsn=(?<fld4>[^,]*),[\s]+stat=(?<fld5>[^\"]*)\"$" }
				id => "message-event_smtp:03"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:03"
					"[rsa][message][id1]" => "event_smtp:03"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:04
		# line in RSA: user=<username>ui=<network_service>action=<action>status=<event_state>session_id="<sessionid>" msg="from=<<<from>>, size=<bytes>, class=<fld2>, {nrcpts=<fld3>, msgid=<<<fld4>>|nrcpts=<fld3>}, proto=<protocol>, daemon=<process>, relay={<shost>[<saddr>] (may be forged)|<shost>[<saddr>]|<shost>}"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=(?<network_service>[^a]*)action=(?<action>[^s]*)status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"from=<(?<from>[^>]*)>,[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld2>[^,]*),[\s]+(nrcpts=(?<fld3>[^,]*),[\s]+msgid=<(?<fld4>[^>]*)>|nrcpts=(?<fld3>[^,]*)),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<process>[^,]*),[\s]+relay=((?<shost>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+\(may[\s]+be[\s]+forged\)|(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]|(?<shost>[^\"]*))\"$" }
				id => "message-event_smtp:04"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:04"
					"[rsa][message][id1]" => "event_smtp:04"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:05
		# line in RSA: user=<username>ui={<network_service>(<saddr>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="Milter: to=<<<to>>, reject=<fld1>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"Milter:[\s]+to=<(?<to>[^>]*)>,[\s]+reject=(?<fld1>[^\"]*)\"$" }
				id => "message-event_smtp:05"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:05"
					"[rsa][message][id1]" => "event_smtp:05"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:06
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="timeout waiting for input from{[<saddr>]|<saddr>}during server cmd<fld5>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"timeout[\s]+waiting[\s]+for[\s]+input[\s]+from(\[(?<saddr>[^\]]*)\]|(?<saddr>[^d]*))during[\s]+server[\s]+cmd(?<fld5>[^\"]*)\"$" }
				id => "message-event_smtp:06"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:06"
					"[rsa][message][id1]" => "event_smtp:06"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:07
		# line in RSA: user=<username>ui={<network_service>(<saddr>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="collect:<fld1>timeout on connection from<shost>, from=<<<from>>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"collect:(?<fld1>[^t]*)timeout[\s]+on[\s]+connection[\s]+from(?<shost>[^,]*),[\s]+from=<(?<from>[^>]*)>\"$" }
				id => "message-event_smtp:07"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:07"
					"[rsa][message][id1]" => "event_smtp:07"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:08
		# line in RSA: user=<username>ui={<network_service>(<saddr>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="DSN: to <<<to>>; reason:<result>; sessionid:<fld5>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"DSN:[\s]+to[\s]+<(?<to>[^>]*)>;[\s]+reason:(?<result>[^;]*);[\s]+sessionid:(?<fld5>[^\"]*)\"$" }
				id => "message-event_smtp:08"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:08"
					"[rsa][message][id1]" => "event_smtp:08"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:09
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="lost input channel from<shost>[<saddr>] (may be forged) to SMTP_MTA after rcpt"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"lost[\s]+input[\s]+channel[\s]+from(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+\(may[\s]+be[\s]+forged\)[\s]+to[\s]+SMTP_MTA[\s]+after[\s]+rcpt\"$" }
				id => "message-event_smtp:09"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:09"
					"[rsa][message][id1]" => "event_smtp:09"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:10
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" msg="<shost>[<saddr>]: possible SMTP attack: command=<fld1>, count=<dclass_counter1>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+msg=\"(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]:[\s]+possible[\s]+SMTP[\s]+attack:[\s]+command=(?<fld1>[^,]*),[\s]+count=(?<dclass_counter1>[^\"]*)\"$" }
				id => "message-event_smtp:10"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:10"
					"[rsa][message][id1]" => "event_smtp:10"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:11
		# line in RSA: user=<username>ui={<network_service>(<hostip>) action=<action>|<network_service>action=<action>}status=<event_state>session_id="<sessionid>" log_part=<id1> msg="to=<<<to>, delay={<fld1>, xdelay=<fld2>, mailer=<protocol>, pri=<fld3>, relay=<shost>|<fld1>, xdelay=<fld2>, mailer=<protocol>, pri=<fld3>|<fld1>, xdelay=<fld2>, mailer=<protocol>|<fld1>}"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^u]*)ui=((?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^s]*)|(?<network_service>[^a]*)action=(?<action>[^s]*))status=(?<event_state>[^s]*)session_id=\"(?<sessionid>[^\"]*)\"[\s]+log_part=(?<id1>[^\s]*)[\s]+msg=\"to=<(?<to>[^,]*),[\s]+delay=((?<fld1>[^,]*),[\s]+xdelay=(?<fld2>[^,]*),[\s]+mailer=(?<protocol>[^,]*),[\s]+pri=(?<fld3>[^,]*),[\s]+relay=(?<shost>[^\"]*)|(?<fld1>[^,]*),[\s]+xdelay=(?<fld2>[^,]*),[\s]+mailer=(?<protocol>[^,]*),[\s]+pri=(?<fld3>[^\"]*)|(?<fld1>[^,]*),[\s]+xdelay=(?<fld2>[^,]*),[\s]+mailer=(?<protocol>[^\"]*)|(?<fld1>[^\"]*))\"$" }
				id => "message-event_smtp:11"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:11"
					"[rsa][message][id1]" => "event_smtp:11"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp
		# line in RSA: user=<username> ui={<network_service>(<saddr>) action=<action>|<network_service> action=<action>} status=<event_state> session_id={"<sessionid>"|<sessionid>} msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+action=(?<action>[^\s]*)|(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-event_smtp"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp"
					"[rsa][message][id1]" => "event_smtp"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_smtp:12
		# line in RSA: user=<username> ui=<network_service> action=<action> status=<event_state> session_id=<sessionid> log_part=<id1> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "user=%{username} ui=%{network_service} action=%{action} status=%{event_state} session_id=%{sessionid} log_part=%{id1} msg=%{info}" }
				id => "message-event_smtp:12"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
					"[event][id]" => "event_smtp:12"
					"[rsa][message][id1]" => "event_smtp:12"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: msg={"<event_description>"|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId15" {
		grok {
			match => { "message" => "^msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId15"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: user=<username> ui={<network_service>(<saddr>) module=<fld1>|<network_service> module=<fld1>} submodule=<fld2> msg={"<event_description>"|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId16" {
		grok {
			match => { "message" => "^user=(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+module=(?<fld1>[^\s]*)|(?<network_service>[^\s]*)[\s]+module=(?<fld1>[^\s]*))[\s]+submodule=(?<fld2>[^\s]*)[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId16"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA: from={"<from>"|<from>} to={"<to>"|<to>} src={"<saddr>"|<saddr>}  session_id={"<sessionid>"|<sessionid>} msg={"<event_description>"|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId17" {
		grok {
			match => { "message" => "^from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+src=(\"(?<saddr>[^\"]*)\"|(?<saddr>[^\s]*))[\s]+session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId17"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA: from={"<from>"|<from>} to={"<to>"|<to>} client_name="<fqdn>" client_ip="<saddr>" session_id={"<sessionid>"|<sessionid>} msg={"<event_description>"|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId18" {
		grok {
			match => { "message" => "^from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+client_name=\"(?<fqdn>[^\"]*)\"[\s]+client_ip=\"(?<saddr>[^\"]*)\"[\s]+session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId18"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{msgIdPart1}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: {from="<from>"|<from>} to={"<to>"|<to>} src={"<sdomain> [<saddr>]"|<sdomain> [<saddr>]|"[<saddr>]"|[<saddr>]|"<saddr>"|<saddr>} session_id={"<sessionid>"|<sessionid>} {msg="Attachment file (<filename>) has sha1 hash value: <checksum>"|msg="<event_description>"|msg=<event_description>}
	else if [logstash][msgparser][id] == "msgParserId19" {
		grok {
			match => { "message" => "^(from=\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+src=(\"(?<sdomain>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]\"|(?<sdomain>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]|\"\[(?<saddr>[^\]]*)\]\"|\[(?<saddr>[^\]]*)\]|\"(?<saddr>[^\"]*)\"|(?<saddr>[^\s]*))[\s]+session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+(msg=\"Attachment[\s]+file[\s]+\((?<filename>[^\)]*)\)[\s]+has[\s]+sha1[\s]+hash[\s]+value:[\s]+(?<checksum>[^\"]*)\"|msg=\"(?<event_description>[^\"]*)\"|msg=(?<event_description>.*))$" }
			id => "msgParserId19"
			add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "statistics" {
		# MESSAGE statistics
		# line in RSA: session_id={"<sessionid>"|<sessionid>} from={"<from>"|<from>} mailer={"<agent>"|<agent>} client_name={"<fqdn> [<saddr>] (<info>)"|"<fqdn> [<saddr>]"|"<saddr>"} MSISDN=<fld3> resolved={"<context>"|<context>} to={"<to>"|<to>} direction={"<direction>"|<direction>} message_length=<fld4> virus={"<virusname>"|<virusname>} disposition={"<disposition>"|<disposition>} classifier={"<filter>"|<filter>} subject={"<subject>"|<subject>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+mailer=(\"(?<agent>[^\"]*)\"|(?<agent>[^\s]*))[\s]+client_name=(\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\][\s]+\((?<info>[^\)]*)\)\"|\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]\"|\"(?<saddr>[^\"]*)\")[\s]+MSISDN=(?<fld3>[^\s]*)[\s]+resolved=(\"(?<context>[^\"]*)\"|(?<context>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+direction=(\"(?<direction>[^\"]*)\"|(?<direction>[^\s]*))[\s]+message_length=(?<fld4>[^\s]*)[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+disposition=(\"(?<disposition>[^\"]*)\"|(?<disposition>[^\s]*))[\s]+classifier=(\"(?<filter>[^\"]*)\"|(?<filter>[^\s]*))[\s]+subject=(\"(?<subject>[^\"]*)\"|(?<subject>.*))$" }
				id => "message-statistics"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "statistics"
					"[rsa][message][id1]" => "statistics"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE statistics:01
		# line in RSA: session_id={"<sessionid>"|<sessionid>} from={"<from>"|<from>} mailer={"<agent>"|<agent>} client_name={"<fqdn> [<saddr>] (<info>)"|"<fqdn> [<saddr>]"|"<saddr>"} resolved={"<context>"|<context>} to={"<to>"|<to>} direction={"<direction>"|<direction>} message_length=<fld4> virus={"<virusname>"|<virusname>} disposition={"<disposition>"|<disposition>} classifier={"<filter>"|<filter>} subject={"<subject>"|<subject>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+mailer=(\"(?<agent>[^\"]*)\"|(?<agent>[^\s]*))[\s]+client_name=(\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\][\s]+\((?<info>[^\)]*)\)\"|\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]\"|\"(?<saddr>[^\"]*)\")[\s]+resolved=(\"(?<context>[^\"]*)\"|(?<context>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+direction=(\"(?<direction>[^\"]*)\"|(?<direction>[^\s]*))[\s]+message_length=(?<fld4>[^\s]*)[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+disposition=(\"(?<disposition>[^\"]*)\"|(?<disposition>[^\s]*))[\s]+classifier=(\"(?<filter>[^\"]*)\"|(?<filter>[^\s]*))[\s]+subject=(\"(?<subject>[^\"]*)\"|(?<subject>.*))$" }
				id => "message-statistics:01"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "statistics:01"
					"[rsa][message][id1]" => "statistics:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE statistics:02
		# line in RSA: session_id={"<sessionid>"|<sessionid>} from={"<from>"|<from>} to={"<to>"|<to>} direction={"<direction>"|<direction>} subject={"<subject>"|<subject>} classifier={"<filter>"|<filter>} disposition={"<disposition>"|<disposition>}  client_name={"<fqdn> [<saddr>] (<info>)"|"<fqdn> [<saddr>]"|"<saddr>"} resolved={"<context>"|<context>} virus={"<virusname>"|<virusname>} message_length=<fld4>  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+direction=(\"(?<direction>[^\"]*)\"|(?<direction>[^\s]*))[\s]+subject=(\"(?<subject>[^\"]*)\"|(?<subject>[^\s]*))[\s]+classifier=(\"(?<filter>[^\"]*)\"|(?<filter>[^\s]*))[\s]+disposition=(\"(?<disposition>[^\"]*)\"|(?<disposition>[^\s]*))[\s]+client_name=(\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\][\s]+\((?<info>[^\)]*)\)\"|\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]\"|\"(?<saddr>[^\"]*)\")[\s]+resolved=(\"(?<context>[^\"]*)\"|(?<context>[^\s]*))[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+message_length=(?<fld4>[^\s]*)[\s]+$" }
				id => "message-statistics:02"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "statistics:02"
					"[rsa][message][id1]" => "statistics:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE statistics:03
		# line in RSA: session_id="<sessionid>" client_name={"<fqdn>[<saddr>] (may be forged)"|"<fqdn>[<saddr>]"|"[<saddr>]"}dst_ip="<daddr>" from="<from>" {to="<to>" polid="<fld5>" domain="<domain>" subject="<subject>" mailer="<agent>" resolved="<context>"|to="<to>"} direction="<direction>" virus="<virusname>" disposition="<disposition>" classifier="<filter>" message_length=<fld4>  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=\"(?<sessionid>[^\"]*)\"[\s]+client_name=(\"(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+\(may[\s]+be[\s]+forged\)\"|\"(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]\"|\"\[(?<saddr>[^\]]*)\]\")dst_ip=\"(?<daddr>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+(to=\"(?<to>[^\"]*)\"[\s]+polid=\"(?<fld5>[^\"]*)\"[\s]+domain=\"(?<domain>[^\"]*)\"[\s]+subject=\"(?<subject>[^\"]*)\"[\s]+mailer=\"(?<agent>[^\"]*)\"[\s]+resolved=\"(?<context>[^\"]*)\"|to=\"(?<to>[^\"]*)\")[\s]+direction=\"(?<direction>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+disposition=\"(?<disposition>[^\"]*)\"[\s]+classifier=\"(?<filter>[^\"]*)\"[\s]+message_length=(?<fld4>[^\s]*)[\s]+$" }
				id => "message-statistics:03"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "statistics:03"
					"[rsa][message][id1]" => "statistics:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE statistics:04
		# line in RSA: session_id={"<sessionid>"|<sessionid>} client_name={"<fqdn>[<saddr>]"|<fqdn>[<saddr>]|"[<saddr>]"|[<saddr>]|"<saddr>"|<saddr>}dst_ip={"<daddr>"|<daddr>} from={"<from>"|<from>} hfrom={"<fld3>"|<fld3>} to={"<to>"|<to>} polid={"<fld5>"|<fld5>} domain={"<domain>"|<domain>} subject={"<subject>"|<subject>} mailer={"<agent>"|<agent>} resolved={"<context>"|<context>} direction={"<direction>"|<direction>} virus={"<virusname>"|<virusname>} disposition={"<disposition>"|<disposition>} classifier={"<filter>"|<filter>} message_length={"<fld6>"|<fld6>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+client_name=(\"(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]\"|(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]|\"\[(?<saddr>[^\]]*)\]\"|\[(?<saddr>[^\]]*)\]|\"(?<saddr>[^\"]*)\"|(?<saddr>[^d]*))dst_ip=(\"(?<daddr>[^\"]*)\"|(?<daddr>[^\s]*))[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+hfrom=(\"(?<fld3>[^\"]*)\"|(?<fld3>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+polid=(\"(?<fld5>[^\"]*)\"|(?<fld5>[^\s]*))[\s]+domain=(\"(?<domain>[^\"]*)\"|(?<domain>[^\s]*))[\s]+subject=(\"(?<subject>[^\"]*)\"|(?<subject>[^\s]*))[\s]+mailer=(\"(?<agent>[^\"]*)\"|(?<agent>[^\s]*))[\s]+resolved=(\"(?<context>[^\"]*)\"|(?<context>[^\s]*))[\s]+direction=(\"(?<direction>[^\"]*)\"|(?<direction>[^\s]*))[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+disposition=(\"(?<disposition>[^\"]*)\"|(?<disposition>[^\s]*))[\s]+classifier=(\"(?<filter>[^\"]*)\"|(?<filter>[^\s]*))[\s]+message_length=(\"(?<fld6>[^\"]*)\"|(?<fld6>.*))$" }
				id => "message-statistics:04"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "statistics:04"
					"[rsa][message][id1]" => "statistics:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE statistics:05
		# line in RSA: session_id=<sessionid> client_name=<fqdn> client_ip=<saddr> dst_ip=<daddr> from=<from> hfrom=<fld3> to=<to> polid=<fld5> domain=<domain> mailer=<agent> resolved=<context> src_type=<fld7> direction=<direction> virus=<virusname> disposition=<disposition> classifier=<filter> message_length=<fld6> subject=<subject>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "session_id=%{sessionid} client_name=%{fqdn} client_ip=%{saddr} dst_ip=%{daddr} from=%{from} hfrom=%{fld3} to=%{to} polid=%{fld5} domain=%{domain} mailer=%{agent} resolved=%{context} src_type=%{fld7} direction=%{direction} virus=%{virusname} disposition=%{disposition} classifier=%{filter} message_length=%{fld6} subject=%{subject}" }
				id => "message-statistics:05"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "statistics:05"
					"[rsa][message][id1]" => "statistics:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "spam" {
		# MESSAGE spam
		# line in RSA: session_id={"<sessionid>"|<sessionid>} client_name={"<fqdn> [<saddr>] (<info>)"|"<fqdn> [<saddr>]"|"<saddr>"} from={"<from>"|<from>} to={"<to>"|<to>} subject={"<subject>"|<subject>} msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+client_name=(\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\][\s]+\((?<info>[^\)]*)\)\"|\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]\"|\"(?<saddr>[^\"]*)\")[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+subject=(\"(?<subject>[^\"]*)\"|(?<subject>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-spam"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "spam"
					"[rsa][message][id1]" => "spam"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE spam:04
		# line in RSA: session_id="<sessionid>" client_name="<fqdn> [<saddr>] (<fld2>)" dst_ip="<daddr>" from="<from>" to="<to>" subject="<subject>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "session_id=\"%{sessionid}\" client_name=\"%{fqdn} [%{saddr}] (%{fld2})\" dst_ip=\"%{daddr}\" from=\"%{from}\" to=\"%{to}\" subject=\"%{subject}\" msg=\"%{event_description}\"" }
				id => "message-spam:04"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "spam:04"
					"[rsa][message][id1]" => "spam:04"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE spam:03
		# line in RSA: session_id="<sessionid>" client_name={"<fqdn> [<saddr>]" | "<fqdn>" client_ip="<saddr>"} dst_ip="<daddr>" from="<from>" to="<to>" subject="<subject>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=\"(?<sessionid>[^\"]*)\"[\s]+client_name=(\"(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]\"[\s]+|[\s]*\"(?<fqdn>[^\"]*)\"[\s]+client_ip=\"(?<saddr>[^\"]*)\")[\s]+dst_ip=\"(?<daddr>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+subject=\"(?<subject>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-spam:03"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "spam:03"
					"[rsa][message][id1]" => "spam:03"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE spam:02
		# line in RSA: session_id="<sessionid>" from="<from>" to="<to>" subject="<subject>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "session_id=\"%{sessionid}\" from=\"%{from}\" to=\"%{to}\" subject=\"%{subject}\" msg=\"%{event_description}\"" }
				id => "message-spam:02"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "spam:02"
					"[rsa][message][id1]" => "spam:02"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE spam:01
		# line in RSA: session_id={"<sessionid>"|<sessionid>} from={"<from>"|<from>} to={"<to>"|<to>} msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^session_id=(\"(?<sessionid>[^\"]*)\"|(?<sessionid>[^\s]*))[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-spam:01"
				add_field => {
				"hardware_id" => "%{hfld1}"
				"id" => "%{hfld2}"
				"event_type" => "%{messageid}"
				"severity" => "%{hseverity}"
					"[event][id]" => "spam:01"
					"[rsa][message][id1]" => "spam:01"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-fortinetfortimailmsg.json"
#			template_name => "fortinetfortimail_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
