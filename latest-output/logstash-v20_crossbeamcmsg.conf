# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "crossbeamc"
			"[observer][name]" => "Crossbeam C-Series"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <messageid>(<hfld1>)[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>(<hfld1>)[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hday> <htime> <hhost> <hfld1> <messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> <hhost> <hfld1> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_crossbeamcmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "admin" {
		# MESSAGE 000001
		# line in RSA: { <agent>[<fld1>] | <agent> }: DIALUP AT <interface> BY <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+DIALUP[\s]+AT[\s]+(?<interface>[^\s]*)[\s]+BY[\s]+(?<username>.*)$" }
				id => "message-000001"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "DIALUP"
					"[event][id]" => "000001"
					"[rsa][message][id1]" => "000001"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000002
		# line in RSA: { <agent>[<fld1>] | <agent> }: LOGIN ON <interface> BY <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+LOGIN[\s]+ON[\s]+(?<interface>[^\s]*)[\s]+BY[\s]+(?<username>.*)$" }
				id => "message-000002"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "LOGIN"
					"[event][id]" => "000002"
					"[rsa][message][id1]" => "000002"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100071
		# line in RSA: <agent>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-100071"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100071"
					"[rsa][message][id1]" => "100071"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: <filename>: invoke ifup <interface> for new macaddr
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{filename}: invoke ifup %{interface} for new macaddr" }
			id => "msgParserId2"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "camd" {
		# MESSAGE 000004
		# line in RSA: { <agent>[<fld1>] | <agent> }: camd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+camd[\s]+startup[\s]+succeeded$" }
				id => "message-000004"
				add_field => {
				"action" => "startup succeeded"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000005
		# line in RSA: { <agent>[<fld1>] | <agent> }: camd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+camd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000005"
				add_field => {
				"action" => "shutdown succeeded"
					"[event][id]" => "000005"
					"[rsa][message][id1]" => "000005"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000006
		# line in RSA: { <agent>[<fld1>] | <agent> }: <fld2>: Platform does not support bypass (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld2>[^:]*):[\s]+Platform[\s]+does[\s]+not[\s]+support[\s]+bypass[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-000006"
				add_field => {
				"action" => "Platform does not support bypass"
					"[event][id]" => "000006"
					"[rsa][message][id1]" => "000006"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000128
		# line in RSA: { <agent>[<fld1>] | <agent> }: [<fld2>] Initialize Failed to initialize plugin bypass
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+\[(?<fld2>[^\]]*)\][\s]+Initialize[\s]+Failed[\s]+to[\s]+initialize[\s]+plugin[\s]+bypass$" }
				id => "message-000128"
				add_field => {
				"action" => "Failed to initialize plugin bypass"
					"[event][id]" => "000128"
					"[rsa][message][id1]" => "000128"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000129
		# line in RSA: { <agent>[<fld1>] | <agent> }: [<fld2>] Initialize Could not initialize bypass driver
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+\[(?<fld2>[^\]]*)\][\s]+Initialize[\s]+Could[\s]+not[\s]+initialize[\s]+bypass[\s]+driver$" }
				id => "message-000129"
				add_field => {
				"action" => "Could not initialize bypass driver"
					"[event][id]" => "000129"
					"[rsa][message][id1]" => "000129"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000007
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000007"
				add_field => {
					"[event][id]" => "000007"
					"[rsa][message][id1]" => "000007"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId8"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cbs_initconf" {
		# MESSAGE 000009
		# line in RSA: { <agent>[<fld1>] | <agent> }: mount: <filename> is not a valid block device
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+mount:[\s]+(?<filename>[^\s]*)[\s]+is[\s]+not[\s]+a[\s]+valid[\s]+block[\s]+device$" }
				id => "message-000009"
				add_field => {
				"action" => "mount"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000010
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000010"
				add_field => {
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsfam" {
		# MESSAGE 000013
		# line in RSA: { <agent>[<fld1>] | <agent> }: Stopping <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Stopping[\s]+(?<interface>.*)$" }
				id => "message-000013"
				add_field => {
				"action" => "Stopping secureXL"
					"[event][id]" => "000013"
					"[rsa][message][id1]" => "000013"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000014
		# line in RSA: { <agent>[<fld1>] | <agent> }: <filename>: error while loading shared libraries: <fld2>.so: cannot open shared object file: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<filename>[^:]*):[\s]+error[\s]+while[\s]+loading[\s]+shared[\s]+libraries:[\s]+(?<fld2>[^\.]*)\.so:[\s]+cannot[\s]+open[\s]+shared[\s]+object[\s]+file:[\s]+(?<info>.*)$" }
				id => "message-000014"
				add_field => {
				"action" => "cannot open shared object file"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000015
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000015"
				add_field => {
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: { <agent>[<fld1>] | <agent> }: cbslpd startup succeeded
	else if [logstash][msgparser][id] == "msgParserId12" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cbslpd[\s]+startup[\s]+succeeded$" }
			id => "msgParserId12"
			add_field => {
				"action" => "startup succeeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cmgrd" {
		# MESSAGE 000017
		# line in RSA: { <agent>[<fld1>] | <agent> }: cmgrd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cmgrd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000017"
				add_field => {
				"action" => "shutdown succeeded"
					"[event][id]" => "000017"
					"[rsa][message][id1]" => "000017"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000018
		# line in RSA: { <agent>[<fld1>] | <agent> }: cmgrd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cmgrd[\s]+startup[\s]+succeeded$" }
				id => "message-000018"
				add_field => {
				"action" => "startup succeeded"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000019
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000019"
				add_field => {
					"[event][id]" => "000019"
					"[rsa][message][id1]" => "000019"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cnmsd" {
		# MESSAGE 000020
		# line in RSA: { <agent>[<fld1>] | <agent> }: cnmsd startup failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cnmsd[\s]+startup[\s]+failed$" }
				id => "message-000020"
				add_field => {
				"action" => "startup failed"
					"[event][id]" => "000020"
					"[rsa][message][id1]" => "000020"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000021
		# line in RSA: { <agent>[<fld1>] | <agent> }: [<fld2>]  failed to open <filename> (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+\[(?<fld2>[^\]]*)\][\s]+failed[\s]+to[\s]+open[\s]+(?<filename>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-000021"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "failed open"
					"[event][id]" => "000021"
					"[rsa][message][id1]" => "000021"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000022
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000022"
				add_field => {
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cos_config" {
		# MESSAGE 000023
		# line in RSA: { <agent>[<fld1>] | <agent> }: <fld2>: Platform does not support bypass (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld2>[^:]*):[\s]+Platform[\s]+does[\s]+not[\s]+support[\s]+bypass[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-000023"
				add_field => {
				"action" => "Platform does not support bypass"
					"[event][id]" => "000023"
					"[rsa][message][id1]" => "000023"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000024
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> { exited | exied } COS shell (pid <process_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+([\s]*exited[\s]+|[\s]*exied[\s]+)[\s]+COS[\s]+shell[\s]+\(pid[\s]+(?<process_id>[^\)]*)\)$" }
				id => "message-000024"
				add_field => {
				"action" => "User exited"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000025
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> entered COS shell (pid <process_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+entered[\s]+COS[\s]+shell[\s]+\(pid[\s]+(?<process_id>[^\)]*)\)$" }
				id => "message-000025"
				add_field => {
				"action" => "User entered"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000026
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> requested  <action> of <obj_type> object: <<data   destination="<daddr>"   mask="<dmask>"   gateway="<gateway>"   metric="<fld3>" ><</data> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+requested[\s]+(?<action>[^\s]*)[\s]+of[\s]+(?<obj_type>[^\s]*)[\s]+object:[\s]+<data[\s]+destination=\"(?<daddr>[^\"]*)\"[\s]+mask=\"(?<dmask>[^\"]*)\"[\s]+gateway=\"(?<gateway>[^\"]*)\"[\s]+metric=\"(?<fld3>[^\"]*)\"[\s]+></data>[\s]+$" }
				id => "message-000026"
				add_field => {
					"[event][id]" => "000026"
					"[rsa][message][id1]" => "000026"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000027
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> requested  <action> of <obj_type> object: <<data   ifname="<interface>"   vlan="<vlan>"   enabled="<fld3>"   address="<daddr>"   mask="<fld4>"   broadcast="<fld5>"   mtu_configured="<fld6>"   mtu="<fld7>"   proxyarp="<fld8>"   pppoeenabled="<fld9>"   pppoeifname="<fld10>"   authISP="<fld11>"   username="<fld18>"   password="<fld12>"   alwaysOn="<fld13>"   ispDNS="<fld14>"   dns1="<fld15>"   dns2="<fld16>"   nonRoot="<fld17>" ><</data> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+requested[\s]+(?<action>[^\s]*)[\s]+of[\s]+(?<obj_type>[^\s]*)[\s]+object:[\s]+<data[\s]+ifname=\"(?<interface>[^\"]*)\"[\s]+vlan=\"(?<vlan>[^\"]*)\"[\s]+enabled=\"(?<fld3>[^\"]*)\"[\s]+address=\"(?<daddr>[^\"]*)\"[\s]+mask=\"(?<fld4>[^\"]*)\"[\s]+broadcast=\"(?<fld5>[^\"]*)\"[\s]+mtu_configured=\"(?<fld6>[^\"]*)\"[\s]+mtu=\"(?<fld7>[^\"]*)\"[\s]+proxyarp=\"(?<fld8>[^\"]*)\"[\s]+pppoeenabled=\"(?<fld9>[^\"]*)\"[\s]+pppoeifname=\"(?<fld10>[^\"]*)\"[\s]+authISP=\"(?<fld11>[^\"]*)\"[\s]+username=\"(?<fld18>[^\"]*)\"[\s]+password=\"(?<fld12>[^\"]*)\"[\s]+alwaysOn=\"(?<fld13>[^\"]*)\"[\s]+ispDNS=\"(?<fld14>[^\"]*)\"[\s]+dns1=\"(?<fld15>[^\"]*)\"[\s]+dns2=\"(?<fld16>[^\"]*)\"[\s]+nonRoot=\"(?<fld17>[^\"]*)\"[\s]+></data>[\s]+$" }
				id => "message-000027"
				add_field => {
				"action" => "addition of object"
					"[event][id]" => "000027"
					"[rsa][message][id1]" => "000027"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000143
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> requested  <action> of <obj_type> object: <<data   ifname="<interface>"   vlan="<vlan>"   id="<id>" ><</data> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+requested[\s]+(?<action>[^\s]*)[\s]+of[\s]+(?<obj_type>[^\s]*)[\s]+object:[\s]+<data[\s]+ifname=\"(?<interface>[^\"]*)\"[\s]+vlan=\"(?<vlan>[^\"]*)\"[\s]+id=\"(?<id>[^\"]*)\"[\s]+></data>[\s]+$" }
				id => "message-000143"
				add_field => {
				"action" => "addition of object"
					"[event][id]" => "000143"
					"[rsa][message][id1]" => "000143"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000145
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> requested  <action> of <obj_type> object: <<data   ifname="<interface>"   mac_configured="<fld20>"   mac_addr="<smacaddr>"   autoneg="<fld22>"   duplex="<fld23>"   speed="<fld24>"   promiscuous="<fld25>" ><</data> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+requested[\s]+(?<action>[^\s]*)[\s]+of[\s]+(?<obj_type>[^\s]*)[\s]+object:[\s]+<data[\s]+ifname=\"(?<interface>[^\"]*)\"[\s]+mac_configured=\"(?<fld20>[^\"]*)\"[\s]+mac_addr=\"(?<smacaddr>[^\"]*)\"[\s]+autoneg=\"(?<fld22>[^\"]*)\"[\s]+duplex=\"(?<fld23>[^\"]*)\"[\s]+speed=\"(?<fld24>[^\"]*)\"[\s]+promiscuous=\"(?<fld25>[^\"]*)\"[\s]+></data>[\s]+$" }
				id => "message-000145"
				add_field => {
				"action" => "modification of object"
					"[event][id]" => "000145"
					"[rsa][message][id1]" => "000145"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000029
		# line in RSA: { <agent>[<fld1>] | <agent> }: User <username> requested  <action> of <obj_type> object: <<data   hostname="<shost>"   domainname="<domain>"   timezone="<timezone>"   telnet_server="<fld2>"   ftp_server="<fld3>"   web_server="<fld4>"   web_timeout="<fld6>"   gateway="<gateway>"   dial_enabled="<fld7>"   fam_enabled="<fld8>" ><</data> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+User[\s]+(?<username>[^\s]*)[\s]+requested[\s]+(?<action>[^\s]*)[\s]+of[\s]+(?<obj_type>[^\s]*)[\s]+object:[\s]+<data[\s]+hostname=\"(?<shost>[^\"]*)\"[\s]+domainname=\"(?<domain>[^\"]*)\"[\s]+timezone=\"(?<timezone>[^\"]*)\"[\s]+telnet_server=\"(?<fld2>[^\"]*)\"[\s]+ftp_server=\"(?<fld3>[^\"]*)\"[\s]+web_server=\"(?<fld4>[^\"]*)\"[\s]+web_timeout=\"(?<fld6>[^\"]*)\"[\s]+gateway=\"(?<gateway>[^\"]*)\"[\s]+dial_enabled=\"(?<fld7>[^\"]*)\"[\s]+fam_enabled=\"(?<fld8>[^\"]*)\"[\s]+></data>[\s]+$" }
				id => "message-000029"
				add_field => {
				"action" => "modification of object"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA: { <agent>[<fld1>] | <agent> }: <fld2>: Platform does not support bypass (<info>)
	else if [logstash][msgparser][id] == "msgParserId5" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld2>[^:]*):[\s]+Platform[\s]+does[\s]+not[\s]+support[\s]+bypass[\s]+\((?<info>[^\)]*)\)$" }
			id => "msgParserId5"
			add_field => {
				"action" => "Platform does not support bypass"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cpboot" {
		# MESSAGE 000130
		# line in RSA: { <agent>[<fld1>] | <agent> }: Installing Security Policy <policyname> on <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Installing[\s]+Security[\s]+Policy[\s]+(?<policyname>[^\s]*)[\s]+on[\s]+(?<fld2>.*)$" }
				id => "message-000130"
				add_field => {
				"action" => "Installing Security Policy"
					"[event][id]" => "000130"
					"[rsa][message][id1]" => "000130"
					"[event][categoryid]" => "1502030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000131
		# line in RSA: { <agent>[<fld1>] | <agent> }: Uninstalling Security Policy from <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Uninstalling[\s]+Security[\s]+Policy[\s]+from[\s]+(?<fld2>.*)$" }
				id => "message-000131"
				add_field => {
				"action" => "Uninstalling Security Policy"
					"[event][id]" => "000131"
					"[rsa][message][id1]" => "000131"
					"[event][categoryid]" => "1502040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000132
		# line in RSA: { <agent>[<fld1>] | <agent> }: VPN-1: Could not open VPN-1 device
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+VPN\-1:[\s]+Could[\s]+not[\s]+open[\s]+VPN\-1[\s]+device$" }
				id => "message-000132"
				add_field => {
				"action" => "Could not open VPN-1 device"
					"[event][id]" => "000132"
					"[rsa][message][id1]" => "000132"
					"[event][categoryid]" => "1502030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000133
		# line in RSA: { <agent>[<fld1>] | <agent> }: Fetching Security Policy From: <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Fetching[\s]+Security[\s]+Policy[\s]+From:[\s]+(?<fld2>.*)$" }
				id => "message-000133"
				add_field => {
				"action" => "Fetching Security Policy"
					"[event][id]" => "000133"
					"[rsa][message][id1]" => "000133"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000134
		# line in RSA: { <agent>[<fld1>] | <agent> }:  Local Policy is Up-To-Date.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Local[\s]+Policy[\s]+is[\s]+Up\-To\-Date\.$" }
				id => "message-000134"
				add_field => {
				"action" => "Local Policy Up-To-Date"
					"[event][id]" => "000134"
					"[rsa][message][id1]" => "000134"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000032
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000032"
				add_field => {
					"[event][id]" => "000032"
					"[rsa][message][id1]" => "000032"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cpri_d" {
		# MESSAGE 000033
		# line in RSA: { <agent>[<fld1>] | <agent> }: cprid started...
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cprid[\s]+started\.\.\.$" }
				id => "message-000033"
				add_field => {
				"action" => "cprid started"
					"[event][id]" => "000033"
					"[rsa][message][id1]" => "000033"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000034
		# line in RSA: { <agent>[<fld1>] | <agent> }: cpridstart: Starting cprid
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cpridstart:[\s]+Starting[\s]+cprid$" }
				id => "message-000034"
				add_field => {
				"action" => "cprid starting"
					"[event][id]" => "000034"
					"[rsa][message][id1]" => "000034"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000035
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000035"
				add_field => {
					"[event][id]" => "000035"
					"[rsa][message][id1]" => "000035"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "crond" {
		# MESSAGE 000036
		# line in RSA: { <agent>[<fld1>] | <agent> }: crond shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+crond[\s]+shutdown[\s]+succeeded$" }
				id => "message-000036"
				add_field => {
				"action" => "shutdown succeeded"
					"[event][id]" => "000036"
					"[rsa][message][id1]" => "000036"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000037
		# line in RSA: { <agent>[<fld1>] | <agent> }: crond startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+crond[\s]+startup[\s]+succeeded$" }
				id => "message-000037"
				add_field => {
				"action" => "startup succeeded"
					"[event][id]" => "000037"
					"[rsa][message][id1]" => "000037"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000038
		# line in RSA: { <agent>[<fld1>] | <agent> }: PAM unable to dlopen(<filename>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+PAM[\s]+unable[\s]+to[\s]+dlopen\((?<filename>[^\)]*)\)$" }
				id => "message-000038"
				add_field => {
				"action" => "unable to dlopen"
					"[event][id]" => "000038"
					"[rsa][message][id1]" => "000038"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000039
		# line in RSA: { <agent>[<fld1>] | <agent> }: PAM [dlerror: <filename>.so: cannot open shared object file: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+PAM[\s]+\[dlerror:[\s]+(?<filename>[^\.]*)\.so:[\s]+cannot[\s]+open[\s]+shared[\s]+object[\s]+file:[\s]+(?<info>.*)$" }
				id => "message-000039"
				add_field => {
				"action" => "cannot open shared object file"
					"[event][id]" => "000039"
					"[rsa][message][id1]" => "000039"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000040
		# line in RSA: { <agent>[<fld1>] | <agent> }: PAM adding faulty module: <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+PAM[\s]+adding[\s]+faulty[\s]+module:[\s]+(?<filename>.*)$" }
				id => "message-000040"
				add_field => {
				"action" => "adding faulty module"
					"[event][id]" => "000040"
					"[rsa][message][id1]" => "000040"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000041
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000041"
				add_field => {
					"[event][id]" => "000041"
					"[rsa][message][id1]" => "000041"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cstatsd" {
		# MESSAGE 000042
		# line in RSA: { <agent>[<fld1>] | <agent> }: cstatsd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cstatsd[\s]+startup[\s]+succeeded$" }
				id => "message-000042"
				add_field => {
				"action" => "startup succeeded"
					"[event][id]" => "000042"
					"[rsa][message][id1]" => "000042"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000043
		# line in RSA: { <agent>[<fld1>] | <agent> }: cstatsd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+cstatsd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000043"
				add_field => {
				"action" => "shutdown succeeded"
					"[event][id]" => "000043"
					"[rsa][message][id1]" => "000043"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000044
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000044"
				add_field => {
					"[event][id]" => "000044"
					"[rsa][message][id1]" => "000044"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: exiting on signal <data>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "exiting on signal %{data}" }
			id => "msgParserId38"
			add_field => {
				"action" => "exiting on signal"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd" {
		# MESSAGE 000051
		# line in RSA: { <agent>[<fld1>] | <agent> }: httpd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+httpd[\s]+startup[\s]+succeeded$" }
				id => "message-000051"
				add_field => {
				"action" => "startup succeeded"
					"[event][id]" => "000051"
					"[rsa][message][id1]" => "000051"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000052
		# line in RSA: { <agent>[<fld1>] | <agent> }: httpd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+httpd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000052"
				add_field => {
				"action" => "shutdown succeeded"
					"[event][id]" => "000052"
					"[rsa][message][id1]" => "000052"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ifup" {
		# MESSAGE 000053
		# line in RSA: { <agent>[<fld1>] | <agent> }: Determining IP information for <interface> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Determining[\s]+IP[\s]+information[\s]+for[\s]+(?<interface>[^\s]*)[\s]+$" }
				id => "message-000053"
				add_field => {
				"action" => "Determining IP information"
					"[event][id]" => "000053"
					"[rsa][message][id1]" => "000053"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000054
		# line in RSA: { <agent>[<fld1>] | <agent> }:  failed.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+failed\.$" }
				id => "message-000054"
				add_field => {
				"action" => "failed"
					"[event][id]" => "000054"
					"[rsa][message][id1]" => "000054"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000055
		# line in RSA: { <agent>[<fld1>] | <agent> }: Set name-type for VLAN subsystem. Should be visible in <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Set[\s]+name\-type[\s]+for[\s]+VLAN[\s]+subsystem\.[\s]+Should[\s]+be[\s]+visible[\s]+in[\s]+(?<filename>.*)$" }
				id => "message-000055"
				add_field => {
				"action" => "Set name-type for VLAN subsystem"
					"[event][id]" => "000055"
					"[rsa][message][id1]" => "000055"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000056
		# line in RSA: { <agent>[<fld1>] | <agent> }: Added VLAN with VID == <vlan> to IF <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Added[\s]+VLAN[\s]+with[\s]+VID[\s]+==[\s]+(?<vlan>[^\s]*)[\s]+to[\s]+IF[\s]+(?<interface>.*)$" }
				id => "message-000056"
				add_field => {
				"action" => "Added VLAN"
					"[event][id]" => "000056"
					"[rsa][message][id1]" => "000056"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: ifup-vlan: vconfig adding vlan <vlan> as <fld1> on dev <interface>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "ifup-vlan: vconfig adding vlan %{vlan} as %{fld1} on dev %{interface}" }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "kernel" {
		# MESSAGE 000123
		# line in RSA: { <agent>[<fld1>] | <agent> }: <fld2>: <interface>: <fld3>: NIC Link is <action> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld2>[^:]*):[\s]+(?<interface>[^:]*):[\s]+(?<fld3>[^:]*):[\s]+NIC[\s]+Link[\s]+is[\s]+(?<action>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-000123"
				add_field => {
					"[event][id]" => "000123"
					"[rsa][message][id1]" => "000123"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000124
		# line in RSA: { <agent>[<fld1>] | <agent> }: <fld2>:<fld3>: The <interface> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld2>[^:]*):(?<fld3>[^:]*):[\s]+The[\s]+(?<interface>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-000124"
				add_field => {
					"[event][id]" => "000124"
					"[rsa][message][id1]" => "000124"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000059
		# line in RSA: <fld2>: <fld3>: <interface> NIM Link is <action>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2}: %{fld3}: %{interface} NIM Link is %{action}, %{info}" }
				id => "message-000059"
				add_field => {
					"[event][id]" => "000059"
					"[rsa][message][id1]" => "000059"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId49"
			add_field => {
				"action" => "message repeated"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lcmd" {
		# MESSAGE 000061
		# line in RSA: { <agent>[<fld1>] | <agent> }: lcmd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+lcmd[\s]+startup[\s]+succeeded$" }
				id => "message-000061"
				add_field => {
				"action" => "startup succeeded"
					"[event][id]" => "000061"
					"[rsa][message][id1]" => "000061"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000062
		# line in RSA: { <agent>[<fld1>] | <agent> }: lcmd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+lcmd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000062"
				add_field => {
				"action" => "shutdown succeeded"
					"[event][id]" => "000062"
					"[rsa][message][id1]" => "000062"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000063
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000063"
				add_field => {
					"[event][id]" => "000063"
					"[rsa][message][id1]" => "000063"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE 000065
		# line in RSA: { <agent>[<fld1>] | <agent> }: FAILED LOGIN <fld2> FROM (null) FOR <username>, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+FAILED[\s]+LOGIN[\s]+(?<fld2>[^\s]*)[\s]+FROM[\s]+\(null\)[\s]+FOR[\s]+(?<username>[^,]*),[\s]+(?<info>.*)$" }
				id => "message-000065"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"shost" => "%{hhost}"
				"action" => "FAILED LOGIN"
					"[event][id]" => "000065"
					"[rsa][message][id1]" => "000065"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000066
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: session opened for user <username> by <fld2>(uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+(?<fld2>[^\(]*)\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-000066"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"shost" => "%{hhost}"
				"action" => "session opened"
					"[event][id]" => "000066"
					"[rsa][message][id1]" => "000066"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000067
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-000067"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "session closed"
					"[event][id]" => "000067"
					"[rsa][message][id1]" => "000067"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000068
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: authentication failure; logname=<fld10> uid=<uid> euid=<fld2> tty=<interface> ruser=<fld6> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld10>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<interface>[^\s]*)[\s]+ruser=(?<fld6>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-000068"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"shost" => "%{hhost}"
				"action" => "authentication failure"
					"[event][id]" => "000068"
					"[rsa][message][id1]" => "000068"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000069
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: bad username [<username>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+bad[\s]+username[\s]+\[(?<username>[^\]]*)\]$" }
				id => "message-000069"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"shost" => "%{hhost}"
				"action" => "authentication failure"
					"[event][id]" => "000069"
					"[rsa][message][id1]" => "000069"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mdmonitor" {
		# MESSAGE 000070
		# line in RSA: { <agent>[<fld1>] | <agent> }: mdadm startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+mdadm[\s]+startup[\s]+succeeded$" }
				id => "message-000070"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000070"
					"[rsa][message][id1]" => "000070"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000071
		# line in RSA: { <agent>[<fld1>] | <agent> }: mdadm shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+mdadm[\s]+shutdown[\s]+succeeded$" }
				id => "message-000071"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000071"
					"[rsa][message][id1]" => "000071"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000072
		# line in RSA: { <agent>[<fld1>] | <agent> }: mdadm succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+mdadm[\s]+succeeded$" }
				id => "message-000072"
				add_field => {
				"ec_subject" => "Process"
				"ec_outcome" => "Success"
				"action" => "succeeded"
					"[event][id]" => "000072"
					"[rsa][message][id1]" => "000072"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: { <agent>[<fld1>] | <agent> }: <fld2>: Can't locate module <product>
	else if [logstash][msgparser][id] == "msgParserId60" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld2>[^:]*):[\s]+Can't[\s]+locate[\s]+module[\s]+(?<product>.*)$" }
			id => "msgParserId60"
			add_field => {
				"action" => "Can't locate module"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "net-snmpd" {
		# MESSAGE 000074
		# line in RSA: { <agent>[<fld1>] | <agent> }: snmpd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+snmpd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000074"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000074"
					"[rsa][message][id1]" => "000074"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000075
		# line in RSA: { <agent>[<fld1>] | <agent> }: snmpd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+snmpd[\s]+startup[\s]+succeeded$" }
				id => "message-000075"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000075"
					"[rsa][message][id1]" => "000075"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nfslock" {
		# MESSAGE 000077
		# line in RSA: { <agent>[<fld1>] | <agent> }: rpc.statd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+rpc\.statd[\s]+startup[\s]+succeeded$" }
				id => "message-000077"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000077"
					"[rsa][message][id1]" => "000077"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000078
		# line in RSA: { <agent>[<fld1>] | <agent> }: rpc.statd shutdown failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+rpc\.statd[\s]+shutdown[\s]+failed$" }
				id => "message-000078"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Failure"
				"action" => "shutdown failed"
					"[event][id]" => "000078"
					"[rsa][message][id1]" => "000078"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntop" {
		# MESSAGE 000079
		# line in RSA: { <agent>[<fld1>] | <agent> }: ntop startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+ntop[\s]+startup[\s]+succeeded$" }
				id => "message-000079"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000079"
					"[rsa][message][id1]" => "000079"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000080
		# line in RSA: { <agent>[<fld1>] | <agent> }: ntop startup failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+ntop[\s]+startup[\s]+failed$" }
				id => "message-000080"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Failure"
				"action" => "Startup Failed"
					"[event][id]" => "000080"
					"[rsa][message][id1]" => "000080"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000081
		# line in RSA: { <agent>[<fld1>] | <agent> }: ntop shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+ntop[\s]+shutdown[\s]+succeeded$" }
				id => "message-000081"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000081"
					"[rsa][message][id1]" => "000081"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000082
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000082"
				add_field => {
					"[event][id]" => "000082"
					"[rsa][message][id1]" => "000082"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpd" {
		# MESSAGE 000083
		# line in RSA: { <agent>[<fld1>] | <agent> }: ntpd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+ntpd[\s]+startup[\s]+succeeded$" }
				id => "message-000083"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000083"
					"[rsa][message][id1]" => "000083"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000084
		# line in RSA: { <agent>[<fld1>] | <agent> }: ntpd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+ntpd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000084"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000084"
					"[rsa][message][id1]" => "000084"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000125
		# line in RSA: { <agent>[<fld1>] | <agent> }: synchronisation lost
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+synchronisation[\s]+lost$" }
				id => "message-000125"
				add_field => {
				"action" => "synchronisation lost"
					"[event][id]" => "000125"
					"[rsa][message][id1]" => "000125"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000126
		# line in RSA: { <agent>[<fld1>] | <agent> }: frequency initialized <fld2> from <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+frequency[\s]+initialized[\s]+(?<fld2>[^\s]*)[\s]+from[\s]+(?<filename>.*)$" }
				id => "message-000126"
				add_field => {
				"action" => "frequency initialized"
					"[event][id]" => "000126"
					"[rsa][message][id1]" => "000126"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000085
		# line in RSA: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{result}" }
				id => "message-000085"
				add_field => {
					"[event][id]" => "000085"
					"[rsa][message][id1]" => "000085"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpdate" {
		# MESSAGE 000127
		# line in RSA: { <agent>[<fld1>] | <agent> }: no server suitable for synchronization found
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+no[\s]+server[\s]+suitable[\s]+for[\s]+synchronization[\s]+found$" }
				id => "message-000127"
				add_field => {
				"action" => "no server suitable for synchronization"
					"[event][id]" => "000127"
					"[rsa][message][id1]" => "000127"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000086
		# line in RSA: { <agent>[<fld1>] | <agent> }: step time server <saddr> offset <fld2> sec
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+step[\s]+time[\s]+server[\s]+(?<saddr>[^\s]*)[\s]+offset[\s]+(?<fld2>[^\s]*)[\s]+sec$" }
				id => "message-000086"
				add_field => {
					"[event][id]" => "000086"
					"[rsa][message][id1]" => "000086"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "passwd" {
		# MESSAGE 000087
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: authentication failure; logname=<fld10> uid=<uid> euid=<fld2> tty=<fld5> ruser=<fld6> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld10>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<fld5>[^\s]*)[\s]+ruser=(?<fld6>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-000087"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"shost" => "%{hhost}"
				"action" => "authentication failure"
					"[event][id]" => "000087"
					"[rsa][message][id1]" => "000087"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000088
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: password changed for <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+password[\s]+changed[\s]+for[\s]+(?<username>.*)$" }
				id => "message-000088"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"action" => "password changed"
					"[event][id]" => "000088"
					"[rsa][message][id1]" => "000088"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA: { <agent>[<fld1>] | <agent> }: can't read sid for pid <fld2>
	else if [logstash][msgparser][id] == "msgParserId77" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+can't[\s]+read[\s]+sid[\s]+for[\s]+pid[\s]+(?<fld2>.*)$" }
			id => "msgParserId77"
			add_field => {
				"action" => "can't read sid"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA: { <agent>[<fld1>] | <agent> }: shutting down <info>
	else if [logstash][msgparser][id] == "msgParserId78" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+shutting[\s]+down[\s]+(?<info>.*)$" }
			id => "msgParserId78"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"action" => "shutting down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: { <agent>[<fld1>] | <agent> }: { long | short } selftest is now scheduled on <interface>
	else if [logstash][msgparser][id] == "msgParserId79" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+([\s]*long[\s]+|[\s]*short[\s]+)[\s]+selftest[\s]+is[\s]+now[\s]+scheduled[\s]+on[\s]+(?<interface>.*)$" }
			id => "msgParserId79"
			add_field => {
				"action" => "selftest is scheduled"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "smartd" {
		# MESSAGE 000097
		# line in RSA: { <agent>[<fld1>] | <agent> }: smartd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+smartd[\s]+startup[\s]+succeeded$" }
				id => "message-000097"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000097"
					"[rsa][message][id1]" => "000097"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000098
		# line in RSA: { <agent>[<fld1>] | <agent> }: smartd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+smartd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000098"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000098"
					"[rsa][message][id1]" => "000098"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000099
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000099"
				add_field => {
					"[event][id]" => "000099"
					"[rsa][message][id1]" => "000099"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "snmpd" {
		# MESSAGE 000100
		# line in RSA: { <agent>[<fld1>] | <agent> }: snmpd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+snmpd[\s]+startup[\s]+succeeded$" }
				id => "message-000100"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000100"
					"[rsa][message][id1]" => "000100"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000101
		# line in RSA: { <agent>[<fld1>] | <agent> }: snmpd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+snmpd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000101"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000101"
					"[rsa][message][id1]" => "000101"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000102
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000102"
				add_field => {
					"[event][id]" => "000102"
					"[rsa][message][id1]" => "000102"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd" {
		# MESSAGE 000103
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: <fld3> more authentication { failures | failure }; logname=<fld10> uid=<uid> euid=<fld2> tty=<fld6> ruser=<fld7> { rhost=<shost> user=<username> | rhost=<saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<fld3>[^\s]*)[\s]+more[\s]+authentication[\s]+([\s]*failures[\s]+|[\s]*failure[\s]+);[\s]+logname=(?<fld10>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<fld6>[^\s]*)[\s]+ruser=(?<fld7>[^\s]*)[\s]+([\s]*rhost=(?<shost>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+|[\s]*rhost=(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-000103"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"shost" => "%{hhost}"
				"action" => "authentication failure"
					"[event][id]" => "000103"
					"[rsa][message][id1]" => "000103"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000104
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-000104"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "session closed"
					"[event][id]" => "000104"
					"[rsa][message][id1]" => "000104"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000105
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: check pass; user unknown
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+check[\s]+pass;[\s]+user[\s]+unknown$" }
				id => "message-000105"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "check password"
					"[event][id]" => "000105"
					"[rsa][message][id1]" => "000105"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000135
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: authentication failure; logname=<fld10> uid=<uid> euid=<fld3> tty=<fld4> ruser=<fld2> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld10>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<fld4>[^\s]*)[\s]+ruser=(?<fld2>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-000135"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "authentication failure"
					"[event][id]" => "000135"
					"[rsa][message][id1]" => "000135"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000106
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000106"
				add_field => {
					"[event][id]" => "000106"
					"[rsa][message][id1]" => "000106"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "su" {
		# MESSAGE 000107
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-000107"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "session closed"
					"[event][id]" => "000107"
					"[rsa][message][id1]" => "000107"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000108
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: session opened for user <username> by <fld2>(uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+(?<fld2>[^\(]*)\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-000108"
				add_field => {
				"shost" => "%{hhost}"
				"action" => "session opened"
					"[event][id]" => "000108"
					"[rsa][message][id1]" => "000108"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000109
		# line in RSA: { <agent>(pam_unix)[<fld1>] | <agent>[<fld1>] | <agent> }: authentication failure; logname=<fld10> uid=<uid> euid=<fld3> tty=<interface> ruser=<fld2> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld10>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<interface>[^\s]*)[\s]+ruser=(?<fld2>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-000109"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"shost" => "%{hhost}"
				"action" => "authentication failure"
					"[event][id]" => "000109"
					"[rsa][message][id1]" => "000109"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog" {
		# MESSAGE 000111
		# line in RSA:  { <agent>[<fld1>] | <agent> }: { syslogd | klogd } startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+([\s]*syslogd[\s]+|[\s]*klogd[\s]+)[\s]+startup[\s]+succeeded$" }
				id => "message-000111"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000111"
					"[rsa][message][id1]" => "000111"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000112
		# line in RSA:  { <agent>[<fld1>] | <agent> }: { syslogd | klogd } shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+([\s]*syslogd[\s]+|[\s]*klogd[\s]+)[\s]+shutdown[\s]+succeeded$" }
				id => "message-000112"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000112"
					"[rsa][message][id1]" => "000112"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100079
		# line in RSA: <agent>: last message repeated <fld12> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: last message repeated %{fld12} times" }
				id => "message-100079"
				add_field => {
					"[event][id]" => "100079"
					"[rsa][message][id1]" => "100079"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "syslogd" {
		# MESSAGE 000113
		# line in RSA: <agent> <version>: { restart (<info>) | restart }.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+(?<version>[^:]*):[\s]+([\s]*restart[\s]+\((?<info>[^\)]*)\)[\s]+|[\s]*restart[\s]+)\.$" }
				id => "message-000113"
				add_field => {
				"action" => "restart"
					"[event][id]" => "000113"
					"[rsa][message][id1]" => "000113"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000114
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000114"
				add_field => {
					"[event][id]" => "000114"
					"[rsa][message][id1]" => "000114"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail" {
		# MESSAGE sendmail
		# line in RSA: sendmail[<fld1>]: My unqualified host name (<shost>) unknown; sleeping for retry 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "sendmail[%{fld1}]: My unqualified host name (%{shost}) unknown; sleeping for retry" }
				id => "message-sendmail"
				add_field => {
					"[event][id]" => "sendmail"
					"[rsa][message][id1]" => "sendmail"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail01
		# line in RSA: sendmail[<fld1>]: unable to qualify my own domain name (<shost>) -- using short name 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "sendmail[%{fld1}]: unable to qualify my own domain name (%{shost}) -- using short name" }
				id => "message-sendmail01"
				add_field => {
					"[event][id]" => "sendmail01"
					"[rsa][message][id1]" => "sendmail01"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail02
		# line in RSA: <agent>[<fld41>]: <fld42>: from=<fld43>, size=<fld44>, class=<fld45>, nrcpts=<fld46>, msgid=<fld47>, relay=<fld48>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: %{fld42}: from=%{fld43}, size=%{fld44}, class=%{fld45}, nrcpts=%{fld46}, msgid=%{fld47}, relay=%{fld48}" }
				id => "message-sendmail02"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "sendmail02"
					"[rsa][message][id1]" => "sendmail02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail03
		# line in RSA: <agent>[<fld41>]: <fld42>: to=<fld38>, ctladdr=<fld37>, delay=<fld36>, xdelay=<fld35>, mailer=<fld34>, pri=<fld33>, relay=[<fld44>] [<fld43>], dsn=<fld45>, stat=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: %{fld42}: to=%{fld38}, ctladdr=%{fld37}, delay=%{fld36}, xdelay=%{fld35}, mailer=%{fld34}, pri=%{fld33}, relay=[%{fld44}] [%{fld43}], dsn=%{fld45}, stat=%{info}" }
				id => "message-sendmail03"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "sendmail03"
					"[rsa][message][id1]" => "sendmail03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ucd-snmp" {
		# MESSAGE 000115
		# line in RSA: { <agent>[<fld1>] | <agent> }: Received SNMP packet(s) from <daddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Received[\s]+SNMP[\s]+packet\(s\)[\s]+from[\s]+(?<daddr>.*)$" }
				id => "message-000115"
				add_field => {
				"action" => "Received SNMP packet(s)"
					"[event][id]" => "000115"
					"[rsa][message][id1]" => "000115"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000116
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000116"
				add_field => {
					"[event][id]" => "000116"
					"[rsa][message][id1]" => "000116"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vrrpd" {
		# MESSAGE 000117
		# line in RSA: { <agent>[<fld1>] | <agent> }: vrrpd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+vrrpd[\s]+startup[\s]+succeeded$" }
				id => "message-000117"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000117"
					"[rsa][message][id1]" => "000117"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000118
		# line in RSA: { <agent>[<fld1>] | <agent> }: vrrpd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+vrrpd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000118"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000118"
					"[rsa][message][id1]" => "000118"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000136
		# line in RSA: { <agent>[<fld1>] | <agent> }: VRRP ID <fld3> on <interface>: <fld2> is down, we are now the master router.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+VRRP[\s]+ID[\s]+(?<fld3>[^\s]*)[\s]+on[\s]+(?<interface>[^:]*):[\s]+(?<fld2>[^\s]*)[\s]+is[\s]+down,[\s]+we[\s]+are[\s]+now[\s]+the[\s]+master[\s]+router\.$" }
				id => "message-000136"
				add_field => {
				"action" => "VRRP down"
				"info" => "we are now the master router"
					"[event][id]" => "000136"
					"[rsa][message][id1]" => "000136"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000137
		# line in RSA: { <agent>[<fld1>] | <agent> }: VRRP ID <fld2> on <interface>: we are now the master router.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+VRRP[\s]+ID[\s]+(?<fld2>[^\s]*)[\s]+on[\s]+(?<interface>[^:]*):[\s]+we[\s]+are[\s]+now[\s]+the[\s]+master[\s]+router\.$" }
				id => "message-000137"
				add_field => {
				"action" => "VRRP down"
				"info" => "we are now the master router"
					"[event][id]" => "000137"
					"[rsa][message][id1]" => "000137"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000138
		# line in RSA: { <agent>[<fld1>] | <agent> }: VRRP ID <fld3> on <interface>: <fld2> is up, we are now a backup router.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+VRRP[\s]+ID[\s]+(?<fld3>[^\s]*)[\s]+on[\s]+(?<interface>[^:]*):[\s]+(?<fld2>[^\s]*)[\s]+is[\s]+up,[\s]+we[\s]+are[\s]+now[\s]+a[\s]+backup[\s]+router\.$" }
				id => "message-000138"
				add_field => {
				"action" => "VRRP up"
				"info" => "we are now a backup router"
					"[event][id]" => "000138"
					"[rsa][message][id1]" => "000138"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000139
		# line in RSA: { <agent>[<fld1>] | <agent> }: VRRP ID <fld2> on <interface>: we are now a backup router.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+VRRP[\s]+ID[\s]+(?<fld2>[^\s]*)[\s]+on[\s]+(?<interface>[^:]*):[\s]+we[\s]+are[\s]+now[\s]+a[\s]+backup[\s]+router\.$" }
				id => "message-000139"
				add_field => {
				"action" => "VRRP up"
				"info" => "we are now a backup router"
					"[event][id]" => "000139"
					"[rsa][message][id1]" => "000139"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000140
		# line in RSA: { <agent>[<fld1>] | <agent> }: "ioctl SIOCSIFHWADDR <interface> <fld2>" error: No such device
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+\"ioctl[\s]+SIOCSIFHWADDR[\s]+(?<interface>[^\s]*)[\s]+(?<fld2>[^\"]*)\"[\s]+error:[\s]+No[\s]+such[\s]+device$" }
				id => "message-000140"
				add_field => {
				"action" => "No such device"
					"[event][id]" => "000140"
					"[rsa][message][id1]" => "000140"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000141
		# line in RSA: { <agent>[<fld1>] | <agent> }: Removing VRRP from <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+Removing[\s]+VRRP[\s]+from[\s]+(?<interface>.*)$" }
				id => "message-000141"
				add_field => {
				"action" => "Removing VRRP"
					"[event][id]" => "000141"
					"[rsa][message][id1]" => "000141"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000142
		# line in RSA: { <agent>[<fld1>] | <agent> }: rtnetlink recvmsg: No buffer space available. Reacquiring interface states.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+rtnetlink[\s]+recvmsg:[\s]+No[\s]+buffer[\s]+space[\s]+available\.[\s]+Reacquiring[\s]+interface[\s]+states\.$" }
				id => "message-000142"
				add_field => {
				"action" => "Reacquiring interface states"
				"info" => "No buffer space available"
					"[event][id]" => "000142"
					"[rsa][message][id1]" => "000142"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000119
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-000119"
				add_field => {
					"[event][id]" => "000119"
					"[rsa][message][id1]" => "000119"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "xinetd" {
		# MESSAGE 000120
		# line in RSA: { <agent>[<fld1>] | <agent> }: xinetd shutdown succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+xinetd[\s]+shutdown[\s]+succeeded$" }
				id => "message-000120"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"action" => "shutdown succeeded"
					"[event][id]" => "000120"
					"[rsa][message][id1]" => "000120"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000121
		# line in RSA: { <agent>[<fld1>] | <agent> }: xinetd startup succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+xinetd[\s]+startup[\s]+succeeded$" }
				id => "message-000121"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"action" => "startup succeeded"
					"[event][id]" => "000121"
					"[rsa][message][id1]" => "000121"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000122
		# line in RSA: { <agent>[<fld1>] | <agent> }: xinetd Version <version> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+xinetd[\s]+Version[\s]+(?<version>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-000122"
				add_field => {
					"[event][id]" => "000122"
					"[rsa][message][id1]" => "000122"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "appmgr" {
		# MESSAGE 100015
		# line in RSA: <agent>: <fld11> Found bundle <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld11} Found bundle %{fld1}" }
				id => "message-100015"
				add_field => {
					"[event][id]" => "100015"
					"[rsa][message][id1]" => "100015"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100016
		# line in RSA: <agent>: <fld11> Dispatch <fld12> with options [<fld13>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld11} Dispatch %{fld12} with options [%{fld13}]" }
				id => "message-100016"
				add_field => {
					"[event][id]" => "100016"
					"[rsa][message][id1]" => "100016"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100031
		# line in RSA: <agent>: [<fld11>] <space> There are no CBI bundles installed on vapgroup ips. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11}] %{space} There are no CBI bundles installed on vapgroup ips." }
				id => "message-100031"
				add_field => {
					"[event][id]" => "100031"
					"[rsa][message][id1]" => "100031"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100040
		# line in RSA: <agent>: [<fld32>] cbsappagent exited with <fld33> exit status
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] cbsappagent exited with %{fld33} exit status" }
				id => "message-100040"
				add_field => {
					"[event][id]" => "100040"
					"[rsa][message][id1]" => "100040"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100049
		# line in RSA: <agent>: [<fld32>] Calling rpm manager with command: <action> <fld3> ips
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Calling rpm manager with command: %{action} %{fld3} ips" }
				id => "message-100049"
				add_field => {
					"[event][id]" => "100049"
					"[rsa][message][id1]" => "100049"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100072
		# line in RSA: <agent>: [<fld41>] Using bundle <fld42>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld41}] Using bundle %{fld42}" }
				id => "message-100072"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100072"
					"[rsa][message][id1]" => "100072"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cli" {
		# MESSAGE 100017
		# line in RSA: <agent>: USER: <username>, COMMAND: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: USER: %{username}, COMMAND: %{action}" }
				id => "message-100017"
				add_field => {
					"[event][id]" => "100017"
					"[rsa][message][id1]" => "100017"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100041
		# line in RSA: <agent>: [<fld32>] [<fld33>] Got Hangup exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] Got Hangup exiting" }
				id => "message-100041"
				add_field => {
					"[event][id]" => "100041"
					"[rsa][message][id1]" => "100041"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100062
		# line in RSA: <agent>: [<fld32>] [<fld33>] cli <fld34> [<fld35>] (<fld36>) starting for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] cli %{fld34} [%{fld35}] (%{fld36}) starting for user %{username}" }
				id => "message-100062"
				add_field => {
					"[event][id]" => "100062"
					"[rsa][message][id1]" => "100062"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100063
		# line in RSA: <agent>: [<fld32>] [<fld33>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] %{info}" }
				id => "message-100063"
				add_field => {
					"[event][id]" => "100063"
					"[rsa][message][id1]" => "100063"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbssysctrld" {
		# MESSAGE 100018
		# line in RSA: <agent>: [<fld2>] Health item <fld12> slot <fld22> not available status=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Health item %{fld12} slot %{fld22} not available status=%{info}" }
				id => "message-100018"
				add_field => {
					"[event][id]" => "100018"
					"[rsa][message][id1]" => "100018"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100032
		# line in RSA: <agent>: [<fld2>] Starting slot <fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Starting slot %{fld22}" }
				id => "message-100032"
				add_field => {
					"[event][id]" => "100032"
					"[rsa][message][id1]" => "100032"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100064
		# line in RSA: <agent>: [<fld2>] Health poll received from slot <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Health poll received from slot %{fld33}" }
				id => "message-100064"
				add_field => {
					"[event][id]" => "100064"
					"[rsa][message][id1]" => "100064"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100081
		# line in RSA: <agent>: [<fld2>] Stopping slot <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Stopping slot %{fld33}" }
				id => "message-100081"
				add_field => {
					"[event][id]" => "100081"
					"[rsa][message][id1]" => "100081"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100083
		# line in RSA: <agent>: [<fld2>] Poll BTYPE from <space> slot <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Poll BTYPE from %{space} slot %{fld33}" }
				id => "message-100083"
				add_field => {
					"[event][id]" => "100083"
					"[rsa][message][id1]" => "100083"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100084
		# line in RSA: <agent>: [<fld2>] BOOTREQUEST from slot <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] BOOTREQUEST from slot %{fld33}" }
				id => "message-100084"
				add_field => {
					"[event][id]" => "100084"
					"[rsa][message][id1]" => "100084"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100097
		# line in RSA: <agent>: [<fld32>] Loading VAP <fld38> on APM slot <fld35>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Loading VAP %{fld38} on APM slot %{fld35}" }
				id => "message-100097"
				add_field => {
					"[event][id]" => "100097"
					"[rsa][message][id1]" => "100097"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100098
		# line in RSA: <agent>: [<fld32>] APM slot <fld39> { (SN:<fld38>) (VAP <fld37>) | (VAP <fld37>) } state change: <fld35> -> <fld36>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<fld32>[^\]]*)\][\s]+APM[\s]+slot[\s]+(?<fld39>[^\s]*)[\s]+([\s]*\(SN:(?<fld38>[^\)]*)\)[\s]+\(VAP[\s]+(?<fld37>[^\)]*)\)[\s]+|[\s]*\(VAP[\s]+(?<fld37>[^\)]*)\)[\s]+)[\s]+state[\s]+change:[\s]+(?<fld35>[^\s]*)[\s]+\->[\s]+(?<fld36>.*)$" }
				id => "message-100098"
				add_field => {
					"[event][id]" => "100098"
					"[rsa][message][id1]" => "100098"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100099
		# line in RSA: <agent>: [<fld32>] BOOTREPLY to slot <fld39>: "<fld40>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] BOOTREPLY to slot %{fld39}: \"%{fld40}\"" }
				id => "message-100099"
				add_field => {
					"[event][id]" => "100099"
					"[rsa][message][id1]" => "100099"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100100
		# line in RSA: <agent>: [<fld32>] Master for VAP group  <fld41>  changed to  <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Master for VAP group  %{fld41}  changed to  %{fld40}" }
				id => "message-100100"
				add_field => {
					"[event][id]" => "100100"
					"[rsa][message][id1]" => "100100"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsvapcfgd" {
		# MESSAGE 100019
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] No SDP path to <fld26>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] No SDP path to %{fld26}" }
				id => "message-100019"
				add_field => {
					"[event][id]" => "100019"
					"[rsa][message][id1]" => "100019"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100020
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Failed to connect to nsm: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Failed to connect to nsm: %{info}" }
				id => "message-100020"
				add_field => {
					"[event][id]" => "100020"
					"[rsa][message][id1]" => "100020"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100030
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Connected to nsm on port <fld41>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Connected to nsm on port %{fld41}" }
				id => "message-100030"
				add_field => {
					"[event][id]" => "100030"
					"[rsa][message][id1]" => "100030"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100033
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] ignoring signal <fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] ignoring signal %{fld29}" }
				id => "message-100033"
				add_field => {
					"[event][id]" => "100033"
					"[rsa][message][id1]" => "100033"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100034
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Connected to ospfd on port <fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Connected to ospfd on port %{fld29}" }
				id => "message-100034"
				add_field => {
					"[event][id]" => "100034"
					"[rsa][message][id1]" => "100034"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100035
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Updating arp host table.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Updating arp host table." }
				id => "message-100035"
				add_field => {
					"[event][id]" => "100035"
					"[rsa][message][id1]" => "100035"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100036
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Deleted <fld36> cct <fld35>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Deleted %{fld36} cct %{fld35}" }
				id => "message-100036"
				add_field => {
					"[event][id]" => "100036"
					"[rsa][message][id1]" => "100036"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100037
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] No CircuitEntry for cct <fld35>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] No CircuitEntry for cct %{fld35}." }
				id => "message-100037"
				add_field => {
					"[event][id]" => "100037"
					"[rsa][message][id1]" => "100037"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100038
		# line in RSA: <agent>[<fld32>]:last message repeated <fld33> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]:last message repeated %{fld33} times" }
				id => "message-100038"
				add_field => {
					"[event][id]" => "100038"
					"[rsa][message][id1]" => "100038"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100044
		# line in RSA: <agent>[<fld42>]: [<fld32>] [<fld33>] Registering with oid <fld35> seq# <fld36>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld42}]: [%{fld32}] [%{fld33}] Registering with oid %{fld35} seq# %{fld36}" }
				id => "message-100044"
				add_field => {
					"[event][id]" => "100044"
					"[rsa][message][id1]" => "100044"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100047
		# line in RSA: <agent>[<fld42>]: [<fld32>] [<fld33>] { Added | Removed } alias <interface> for cct <fld35> - <fld36> <fld37>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<fld42>[^\]]*)\]:[\s]+\[(?<fld32>[^\]]*)\][\s]+\[(?<fld33>[^\]]*)\][\s]+([\s]*Added[\s]+|[\s]*Removed[\s]+)[\s]+alias[\s]+(?<interface>[^\s]*)[\s]+for[\s]+cct[\s]+(?<fld35>[^\s]*)[\s]+\-[\s]+(?<fld36>[^\s]*)[\s]+(?<fld37>.*)$" }
				id => "message-100047"
				add_field => {
					"[event][id]" => "100047"
					"[rsa][message][id1]" => "100047"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100048
		# line in RSA: <agent>[<fld42>]: [<fld32>] [<fld33>] calling <action> <fld37>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld42}]: [%{fld32}] [%{fld33}] calling %{action} %{fld37}" }
				id => "message-100048"
				add_field => {
					"[event][id]" => "100048"
					"[rsa][message][id1]" => "100048"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100149
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Connection to CfgMgr <saddr>:<sport> timed out. Reconnecting. <fld33> err=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Connection to CfgMgr %{saddr}:%{sport} timed out. Reconnecting. %{fld33} err=%{info}" }
				id => "message-100149"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100149"
					"[rsa][message][id1]" => "100149"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100150
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Connected to CfgMgr.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Connected to CfgMgr." }
				id => "message-100150"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100150"
					"[rsa][message][id1]" => "100150"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100151
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Setting <fld38> to <fld39>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Setting %{fld38} to %{fld39}" }
				id => "message-100151"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100151"
					"[rsa][message][id1]" => "100151"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100152
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Written <fld38> after <fld39> attempt(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Written %{fld38} after %{fld39} attempt(s)" }
				id => "message-100152"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100152"
					"[rsa][message][id1]" => "100152"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100153
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Added device <fld39>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Added device %{fld39}" }
				id => "message-100153"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100153"
					"[rsa][message][id1]" => "100153"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100154
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Brought up <fld39> after reconnect to CPM
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Brought up %{fld39} after reconnect to CPM" }
				id => "message-100154"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100154"
					"[rsa][message][id1]" => "100154"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100155
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] HB free memory checking threshold is set to <fld39>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] HB free memory checking threshold is set to %{fld39}" }
				id => "message-100155"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100155"
					"[rsa][message][id1]" => "100155"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100156
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] %{info}" }
				id => "message-100156"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100156"
					"[rsa][message][id1]" => "100156"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsinitd" {
		# MESSAGE 100021
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] daemon '<fld29>' pid '<fld39>' not running (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] daemon '%{fld29}' pid '%{fld39}' not running (%{info})" }
				id => "message-100021"
				add_field => {
					"[event][id]" => "100021"
					"[rsa][message][id1]" => "100021"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100087
		# line in RSA: <agent>: [<fld2>] cbsinitd <fld3> [<fld4>] (<fld13>) starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] cbsinitd %{fld3} [%{fld4}] (%{fld13}) starting" }
				id => "message-100087"
				add_field => {
					"[event][id]" => "100087"
					"[rsa][message][id1]" => "100087"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100088
		# line in RSA: <agent>: [<fld2>] cold restart
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] cold restart" }
				id => "message-100088"
				add_field => {
					"[event][id]" => "100088"
					"[rsa][message][id1]" => "100088"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100089
		# line in RSA: <agent>: [<fld2>] entry for daemon '<fld23>' is ready
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] entry for daemon '%{fld23}' is ready" }
				id => "message-100089"
				add_field => {
					"[event][id]" => "100089"
					"[rsa][message][id1]" => "100089"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100090
		# line in RSA: <agent>: [<fld2>] daemon '<fld23>' (<fld33>) is running with <fld35> pid(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] daemon '%{fld23}' (%{fld33}) is running with %{fld35} pid(s)" }
				id => "message-100090"
				add_field => {
					"[event][id]" => "100090"
					"[rsa][message][id1]" => "100090"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100091
		# line in RSA: <agent>: [<fld2>] Polling rate is <fld21> second(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Polling rate is %{fld21} second(s)" }
				id => "message-100091"
				add_field => {
					"[event][id]" => "100091"
					"[rsa][message][id1]" => "100091"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100092
		# line in RSA: <agent>: [<fld2>] <fld21>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] %{fld21}" }
				id => "message-100092"
				add_field => {
					"[event][id]" => "100092"
					"[rsa][message][id1]" => "100092"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbs_np6_flowd" {
		# MESSAGE 100022
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] COD: deactivated conn <fld26> to slot <fld27>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] COD: deactivated conn %{fld26} to slot %{fld27}" }
				id => "message-100022"
				add_field => {
					"[event][id]" => "100022"
					"[rsa][message][id1]" => "100022"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100023
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] COD: <fld30> activated conn <fld26> to slot <fld27>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] COD: %{fld30} activated conn %{fld26} to slot %{fld27}" }
				id => "message-100023"
				add_field => {
					"[event][id]" => "100023"
					"[rsa][message][id1]" => "100023"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100024
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Finished clear flow-path-active (seq=<fld27>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Finished clear flow-path-active (seq=%{fld27})" }
				id => "message-100024"
				add_field => {
					"[event][id]" => "100024"
					"[rsa][message][id1]" => "100024"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100025
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Starting clear flow-path-active (seq=<fld28>) using <fld29> tags
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Starting clear flow-path-active (seq=%{fld28}) using %{fld29} tags" }
				id => "message-100025"
				add_field => {
					"[event][id]" => "100025"
					"[rsa][message][id1]" => "100025"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbshagentd" {
		# MESSAGE 100026
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] Child Health Agent has detected that its parent process has terminated. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] Child Health Agent has detected that its parent process has terminated. %{info}" }
				id => "message-100026"
				add_field => {
					"[event][id]" => "100026"
					"[rsa][message][id1]" => "100026"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100104
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Shared memory segment opened: <bytes> bytes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] Shared memory segment opened: %{bytes} bytes" }
				id => "message-100104"
				add_field => {
					"[event][id]" => "100104"
					"[rsa][message][id1]" => "100104"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100105
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Health Agent started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] Health Agent started" }
				id => "message-100105"
				add_field => {
					"[event][id]" => "100105"
					"[rsa][message][id1]" => "100105"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100135
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Child (acquire) HA process - pid: <fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Child (acquire) HA process - pid: %{fld44}" }
				id => "message-100135"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100135"
					"[rsa][message][id1]" => "100135"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100136
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Receive <fld44> signal, turn on operational (active/standby) <fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Receive %{fld44} signal, turn on operational (active/standby) %{fld45}" }
				id => "message-100136"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100136"
					"[rsa][message][id1]" => "100136"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100137
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] slotmask=<fld44> setting 1G ports
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] slotmask=%{fld44} setting 1G ports" }
				id => "message-100137"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100137"
					"[rsa][message][id1]" => "100137"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsflowcalcd" {
		# MESSAGE 100027
		# line in RSA: <agent>[<fld32>]: [<fld2>] [<fld25>] ignoring data from <daddr> (status=<info>) because it is not in the database
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] [%{fld25}] ignoring data from %{daddr} (status=%{info}) because it is not in the database" }
				id => "message-100027"
				add_field => {
					"[event][id]" => "100027"
					"[rsa][message][id1]" => "100027"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100130
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] clear flow-active: <fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] clear flow-active: %{fld44}" }
				id => "message-100130"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100130"
					"[rsa][message][id1]" => "100130"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100131
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Updating <fld46> (<fld44>) in database
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Updating %{fld46} (%{fld44}) in database" }
				id => "message-100131"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100131"
					"[rsa][message][id1]" => "100131"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100132
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] vfp=<fld46>, indexInGroup=<fld47>, slot=<fld48> is now reachable via <fld49>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] vfp=%{fld46}, indexInGroup=%{fld47}, slot=%{fld48} is now reachable via %{fld49}" }
				id => "message-100132"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100132"
					"[rsa][message][id1]" => "100132"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100133
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] vfp=<fld46>, indexInGroup=<fld47>, slot=<fld48> is NOT reachable via <fld49>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] vfp=%{fld46}, indexInGroup=%{fld47}, slot=%{fld48} is NOT reachable via %{fld49}" }
				id => "message-100133"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100133"
					"[rsa][message][id1]" => "100133"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsoopsd" {
		# MESSAGE 100028
		# line in RSA: <agent>[<fld32>]: [<fld2>] check_symfiles [<fld25>] Updating "<fld22>" from "<fld28>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: [%{fld2}] check_symfiles [%{fld25}] Updating \"%{fld22}\" from \"%{fld28}\"" }
				id => "message-100028"
				add_field => {
					"[event][id]" => "100028"
					"[rsa][message][id1]" => "100028"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100129
		# line in RSA: <agent>[<fld41>]: [<fld37>] log_params [<fld38>] crash dir is cur relname=<fld50> sleep_time=<fld51> max_crashes=<fld48> max_log_lines=<fld47> next_crash_index=<fld42>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld37}] log_params [%{fld38}] crash dir is cur relname=%{fld50} sleep_time=%{fld51} max_crashes=%{fld48} max_log_lines=%{fld47} next_crash_index=%{fld42}" }
				id => "message-100129"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100129"
					"[rsa][message][id1]" => "100129"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA: <agent>: AlarmID <fld11> | <fld12> | <fld13> | <fld14> | <fld15> | <fld16> 
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "%{agent}: AlarmID %{fld11} | %{fld12} | %{fld13} | %{fld14} | %{fld15} | %{fld16}" }
			id => "msgParserId120"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cbi" {
		# MESSAGE 100039
		# line in RSA: <agent>: [<fld32>] Starting appagent with command: <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Starting appagent with command: %{fld33}" }
				id => "message-100039"
				add_field => {
					"[event][id]" => "100039"
					"[rsa][message][id1]" => "100039"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100043
		# line in RSA: <agent>: [<fld32>] Using plugin: <fld34>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Using plugin: %{fld34}" }
				id => "message-100043"
				add_field => {
					"[event][id]" => "100043"
					"[rsa][message][id1]" => "100043"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100051
		# line in RSA: <agent>: [<fld32>] stdout: <fld34>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] stdout: %{fld34}" }
				id => "message-100051"
				add_field => {
					"[event][id]" => "100051"
					"[rsa][message][id1]" => "100051"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100052
		# line in RSA: <agent>: [<fld32>] Successfully set <fld34> to <fld35>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Successfully set %{fld34} to %{fld35}." }
				id => "message-100052"
				add_field => {
					"[event][id]" => "100052"
					"[rsa][message][id1]" => "100052"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100053
		# line in RSA: <agent>: [<fld32>] command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] command: %{action}" }
				id => "message-100053"
				add_field => {
					"[event][id]" => "100053"
					"[rsa][message][id1]" => "100053"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100073
		# line in RSA: <agent>: [<fld41>] VPN1XPlugin: set_master
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld41}] VPN1XPlugin: set_master" }
				id => "message-100073"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100073"
					"[rsa][message][id1]" => "100073"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100074
		# line in RSA: <agent>: [<fld41>] VPN1XPlugin: set_non_master
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld41}] VPN1XPlugin: set_non_master" }
				id => "message-100074"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100074"
					"[rsa][message][id1]" => "100074"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100075
		# line in RSA: <agent>: [<fld41>] Successfully set <fld42> as master.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld41}] Successfully set %{fld42} as master." }
				id => "message-100075"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100075"
					"[rsa][message][id1]" => "100075"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100076
		# line in RSA: <agent>: [<fld41>] { required | current } platform is <fld43>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<fld41>[^\]]*)\][\s]+([\s]*required[\s]+|[\s]*current[\s]+)[\s]+platform[\s]+is[\s]+(?<fld43>.*)$" }
				id => "message-100076"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100076"
					"[rsa][message][id1]" => "100076"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100120
		# line in RSA: <agent>: (<fld42>) [<fld41>] command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] command: %{action}" }
				id => "message-100120"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100120"
					"[rsa][message][id1]" => "100120"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100119
		# line in RSA: <agent>: (<fld42>) [<fld41>] stdout: <fld43>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] stdout: %{fld43}" }
				id => "message-100119"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100119"
					"[rsa][message][id1]" => "100119"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100121
		# line in RSA: <agent>: (<fld42>) [<fld41>] Starting appagent with command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] Starting appagent with command: %{action}" }
				id => "message-100121"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100121"
					"[rsa][message][id1]" => "100121"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100122
		# line in RSA: <agent>: (<fld42>) [<fld41>] Removing file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] Removing file %{filename}" }
				id => "message-100122"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100122"
					"[rsa][message][id1]" => "100122"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100123
		# line in RSA: <agent>: (<fld42>) [<fld41>] Copying <fld31> to <fld32>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] Copying %{fld31} to %{fld32}" }
				id => "message-100123"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100123"
					"[rsa][message][id1]" => "100123"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100124
		# line in RSA: <agent>: (<fld42>) [<fld41>] Using plugin: <fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] Using plugin: %{fld45}" }
				id => "message-100124"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100124"
					"[rsa][message][id1]" => "100124"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100125
		# line in RSA: <agent>: (<fld42>) [<fld41>] Linking kernel <fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] Linking kernel %{fld45}" }
				id => "message-100125"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100125"
					"[rsa][message][id1]" => "100125"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100126
		# line in RSA: <agent>: (<fld42>) [<fld41>] appagent chrooted to: <fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] appagent chrooted to: %{fld45}" }
				id => "message-100126"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100126"
					"[rsa][message][id1]" => "100126"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100117
		# line in RSA: <agent>: [<fld41>] <fld43>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld41}] %{fld43}" }
				id => "message-100117"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100117"
					"[rsa][message][id1]" => "100117"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100127
		# line in RSA: <agent>: (<fld42>) [<fld41>] Writing the <fld45> configuration file.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] Writing the %{fld45} configuration file." }
				id => "message-100127"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100127"
					"[rsa][message][id1]" => "100127"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100128
		# line in RSA: <agent>: (<fld42>) [<fld41>] <fld45> pre-staged
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld42}) [%{fld41}] %{fld45} pre-staged" }
				id => "message-100128"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100128"
					"[rsa][message][id1]" => "100128"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbscfgmgrd" {
		# MESSAGE 100045
		# line in RSA: <agent>[<fld42>]: [<fld32>] [<fld33>] Connection to agent <fld36> timed out. Removing.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld42}]: [%{fld32}] [%{fld33}] Connection to agent %{fld36} timed out. Removing." }
				id => "message-100045"
				add_field => {
					"[event][id]" => "100045"
					"[rsa][message][id1]" => "100045"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100096
		# line in RSA: <agent>[<fld42>]: [<fld32>] [<fld33>] Agent <fld36> <saddr>:<sport> registered for keep alive: interval=<fld34>, timeout=<fld35>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld42}]: [%{fld32}] [%{fld33}] Agent %{fld36} %{saddr}:%{sport} registered for keep alive: interval=%{fld34}, timeout=%{fld35}" }
				id => "message-100096"
				add_field => {
					"[event][id]" => "100096"
					"[rsa][message][id1]" => "100096"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbshmonitord" {
		# MESSAGE 100046
		# line in RSA: <agent>[<fld42>]: [<fld32>] [<fld33>] chassis fault counters: <fld34>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld42}]: [%{fld32}] [%{fld33}] chassis fault counters: %{fld34}" }
				id => "message-100046"
				add_field => {
					"[event][id]" => "100046"
					"[rsa][message][id1]" => "100046"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100050
		# line in RSA: <agent>[<fld36>]: [<fld32>] [<fld37>] NPM in slot <fld38> is now processing minimal levels of traffic (item: <fld39>, value: <fld40>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld36}]: [%{fld32}] [%{fld37}] NPM in slot %{fld38} is now processing minimal levels of traffic (item: %{fld39}, value: %{fld40})" }
				id => "message-100050"
				add_field => {
					"[event][id]" => "100050"
					"[rsa][message][id1]" => "100050"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100054
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Violation (s=<fld35>, <fld36>) occurred <fld37> times: module:<fld38>, item:<fld39> (<fld40>), time:"<fld41>", value: <fld42>, norm:<fld43>, minor:<fld44>, major:<fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] Violation (s=%{fld35}, %{fld36}) occurred %{fld37} times: module:%{fld38}, item:%{fld39} (%{fld40}), time:\"%{fld41}\", value: %{fld42}, norm:%{fld43}, minor:%{fld44}, major:%{fld45}" }
				id => "message-100054"
				add_field => {
					"[event][id]" => "100054"
					"[rsa][message][id1]" => "100054"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100055
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Threshold violation is clear: module:<fld46>, item: <fld45> (<fld40>), alarm, value: <fld39>, bitmask: <fld38>, minutes: <fld37>, time:"<fld41>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] Threshold violation is clear: module:%{fld46}, item: %{fld45} (%{fld40}), alarm, value: %{fld39}, bitmask: %{fld38}, minutes: %{fld37}, time:\"%{fld41}\"" }
				id => "message-100055"
				add_field => {
					"[event][id]" => "100055"
					"[rsa][message][id1]" => "100055"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100056
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] NPM in slot <fld35> is processing traffic at normal levels (item: <fld36>, value: <fld37>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] NPM in slot %{fld35} is processing traffic at normal levels (item: %{fld36}, value: %{fld37})" }
				id => "message-100056"
				add_field => {
					"[event][id]" => "100056"
					"[rsa][message][id1]" => "100056"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100093
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Violation (s=<fld35>, <fld36>) { occurred <fld48> times | occurred | cleared }: module:<fld38>, item:<fld39> (<fld40>), { time:[<fld43>]"<fld41>" | time:"<fld41>" }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<fld33>[^\]]*)\]:[\s]+\[(?<fld32>[^\]]*)\][\s]+\[(?<fld34>[^\]]*)\][\s]+Violation[\s]+\(s=(?<fld35>[^,]*),[\s]+(?<fld36>[^\)]*)\)[\s]+([\s]*occurred[\s]+(?<fld48>[^\s]*)[\s]+times[\s]+|[\s]*occurred[\s]+|[\s]*cleared[\s]+):[\s]+module:(?<fld38>[^,]*),[\s]+item:(?<fld39>[^\s]*)[\s]+\((?<fld40>[^\)]*)\),[\s]+([\s]*time:\[(?<fld43>[^\]]*)\]\"(?<fld41>[^\"]*)\"[\s]+|[\s]*time:\"(?<fld41>[^\"]*)\"[\s]+)$" }
				id => "message-100093"
				add_field => {
					"[event][id]" => "100093"
					"[rsa][message][id1]" => "100093"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100094
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Threshold violation is clear: module:<fld46>, item: <fld45> (<fld40>), alarm, value: <fld39>, time:"<fld41>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] Threshold violation is clear: module:%{fld46}, item: %{fld45} (%{fld40}), alarm, value: %{fld39}, time:\"%{fld41}\"" }
				id => "message-100094"
				add_field => {
					"[event][id]" => "100094"
					"[rsa][message][id1]" => "100094"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100108
		# line in RSA: <agent>[<fld36>]: [<fld32>] [<fld37>] NPM in slot <fld38> has no traffic to process (item: <fld39>, value: <fld40>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld36}]: [%{fld32}] [%{fld37}] NPM in slot %{fld38} has no traffic to process (item: %{fld39}, value: %{fld40})" }
				id => "message-100108"
				add_field => {
					"[event][id]" => "100108"
					"[rsa][message][id1]" => "100108"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100109
		# line in RSA: <agent>[<fld33>]: [<fld32>] [<fld34>] Threshold violation (prev s=<fld52>): module:<fld46>, item: <fld45> (<fld40>), s=<fld48>, no alarm, value=<fld49>, time:"<fld41>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld33}]: [%{fld32}] [%{fld34}] Threshold violation (prev s=%{fld52}): module:%{fld46}, item: %{fld45} (%{fld40}), s=%{fld48}, no alarm, value=%{fld49}, time:\"%{fld41}\"" }
				id => "message-100109"
				add_field => {
					"[event][id]" => "100109"
					"[rsa][message][id1]" => "100109"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "NSM" {
		# MESSAGE 100057
		# line in RSA: <agent>[<fld32>]: <fld33>: CBS: Slave trying to connect to Master: <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: %{fld33}: CBS: Slave trying to connect to Master: %{saddr}" }
				id => "message-100057"
				add_field => {
					"[event][id]" => "100057"
					"[rsa][message][id1]" => "100057"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100058
		# line in RSA: <agent>[<fld32>]: <fld33>: CBS: Connection to master...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: %{fld33}: CBS: Connection to master..." }
				id => "message-100058"
				add_field => {
					"[event][id]" => "100058"
					"[rsa][message][id1]" => "100058"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100059
		# line in RSA: <agent>[<fld32>]: <fld33>: { CBS: accept client connection | accept client connection }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<fld32>[^\]]*)\]:[\s]+(?<fld33>[^:]*):[\s]+([\s]*CBS:[\s]+accept[\s]+client[\s]+connection[\s]+|[\s]*accept[\s]+client[\s]+connection[\s]+)$" }
				id => "message-100059"
				add_field => {
					"[event][id]" => "100059"
					"[rsa][message][id1]" => "100059"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100060
		# line in RSA: <agent>[<fld32>]: <fld33>: CBS: Connected on socket <fld34> with addr = { <saddr>:<sport> | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<fld32>[^\]]*)\]:[\s]+(?<fld33>[^:]*):[\s]+CBS:[\s]+Connected[\s]+on[\s]+socket[\s]+(?<fld34>[^\s]*)[\s]+with[\s]+addr[\s]+=[\s]+([\s]*(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-100060"
				add_field => {
					"[event][id]" => "100060"
					"[rsa][message][id1]" => "100060"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100061
		# line in RSA: <agent>[<fld32>]: <fld33>: CBS: Created socket <fld34> IP address<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: %{fld33}: CBS: Created socket %{fld34} IP address%{saddr}" }
				id => "message-100061"
				add_field => {
					"[event][id]" => "100061"
					"[rsa][message][id1]" => "100061"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100085
		# line in RSA: <agent>[<fld32>]: <fld33>: Operation not supported
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: %{fld33}: Operation not supported" }
				id => "message-100085"
				add_field => {
					"[event][id]" => "100085"
					"[rsa][message][id1]" => "100085"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100086
		# line in RSA: <agent>[<fld32>]: <fld33>: Interface flag settings (<fld35>) unavailable for interface <interface>, error: <fld34>, errno: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld32}]: %{fld33}: Interface flag settings (%{fld35}) unavailable for interface %{interface}, error: %{fld34}, errno: %{info}" }
				id => "message-100086"
				add_field => {
					"[event][id]" => "100086"
					"[rsa][message][id1]" => "100086"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsstatsd" {
		# MESSAGE 100065
		# line in RSA: <agent>: [<fld2>] Connected to CM successfully!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] Connected to CM successfully!" }
				id => "message-100065"
				add_field => {
					"[event][id]" => "100065"
					"[rsa][message][id1]" => "100065"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100070
		# line in RSA: <agent>: [<fld2>] Pulse <fld12> { Stomp Protocol Connected | Connected }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<fld2>[^\]]*)\][\s]+Pulse[\s]+(?<fld12>[^\s]*)[\s]+([\s]*Stomp[\s]+Protocol[\s]+Connected[\s]+|[\s]*Connected[\s]+)$" }
				id => "message-100070"
				add_field => {
					"[event][id]" => "100070"
					"[rsa][message][id1]" => "100070"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "WEB" {
		# MESSAGE 100066
		# line in RSA: <agent>: [<fld32>] [<fld33>] GUI <fld34> [<fld35>] (<fld36>) starting for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] GUI %{fld34} [%{fld35}] (%{fld36}) starting for user %{username}" }
				id => "message-100066"
				add_field => {
					"[event][id]" => "100066"
					"[rsa][message][id1]" => "100066"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100067
		# line in RSA: <agent>: [<fld32>] [<fld33>] <fld35> Status: <fld36>, Error: <info>, Detailed: <fld37>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] %{fld35} Status: %{fld36}, Error: %{info}, Detailed: %{fld37}" }
				id => "message-100067"
				add_field => {
					"[event][id]" => "100067"
					"[rsa][message][id1]" => "100067"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100068
		# line in RSA: <agent>: [<fld32>] [<fld33>] GUI session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] GUI session closed for user %{username}" }
				id => "message-100068"
				add_field => {
					"[event][id]" => "100068"
					"[rsa][message][id1]" => "100068"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100069
		# line in RSA: <agent>: [<fld32>] [<fld33>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] [%{fld33}] %{info}" }
				id => "message-100069"
				add_field => {
					"[event][id]" => "100069"
					"[rsa][message][id1]" => "100069"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "/crossbeam/bin/cbsstatsd" {
		# MESSAGE 100077
		# line in RSA: <agent>: [<fld2>] cbsstatsd <fld3> [<fld4>] (<fld13>) starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] cbsstatsd %{fld3} [%{fld4}] (%{fld13}) starting" }
				id => "message-100077"
				add_field => {
					"[event][id]" => "100077"
					"[rsa][message][id1]" => "100077"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100078
		# line in RSA: <agent>: [<fld2>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] %{info}" }
				id => "message-100078"
				add_field => {
					"[event][id]" => "100078"
					"[rsa][message][id1]" => "100078"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsflowagentd" {
		# MESSAGE 100095
		# line in RSA: <agent>: [<fld2>] cbsflowagentd <fld3> [<fld4>] (<fld13>) starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld2}] cbsflowagentd %{fld3} [%{fld4}] (%{fld13}) starting" }
				id => "message-100095"
				add_field => {
					"[event][id]" => "100095"
					"[rsa][message][id1]" => "100095"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100140
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] { old | new } CP: <saddr>:<sport> (ip:port)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<fld41>[^\]]*)\]:[\s]+\[(?<fld42>[^\]]*)\][\s]+\[(?<fld43>[^\]]*)\][\s]+([\s]*old[\s]+|[\s]*new[\s]+)[\s]+CP:[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+\(ip:port\)$" }
				id => "message-100140"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100140"
					"[rsa][message][id1]" => "100140"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100141
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] outgoing messages will go to CP at <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] outgoing messages will go to CP at %{saddr}:%{sport}" }
				id => "message-100141"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100141"
					"[rsa][message][id1]" => "100141"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100142
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] Address and/or port of CP has changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] Address and/or port of CP has changed" }
				id => "message-100142"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100142"
					"[rsa][message][id1]" => "100142"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100143
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] working dir set to '<fld44>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] working dir set to '%{fld44}'" }
				id => "message-100143"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100143"
					"[rsa][message][id1]" => "100143"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100144
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] using network device '<fld44>' for network statistics
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] using network device '%{fld44}' for network statistics" }
				id => "message-100144"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100144"
					"[rsa][message][id1]" => "100144"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100145
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] data collection is '<fld44>': <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] data collection is '%{fld44}': %{info}" }
				id => "message-100145"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100145"
					"[rsa][message][id1]" => "100145"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100146
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] listening on <saddr>:<sport> for messages from the flow calculator
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] listening on %{saddr}:%{sport} for messages from the flow calculator" }
				id => "message-100146"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100146"
					"[rsa][message][id1]" => "100146"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100147
		# line in RSA: <agent>[<fld41>]: [<fld42>] [<fld43>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld41}]: [%{fld42}] [%{fld43}] %{info}" }
				id => "message-100147"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100147"
					"[rsa][message][id1]" => "100147"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsirmd" {
		# MESSAGE 100101
		# line in RSA: <agent>: [<fld32>] VRRP: Relinquish Master for failover group <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] VRRP: Relinquish Master for failover group %{fld40}" }
				id => "message-100101"
				add_field => {
					"[event][id]" => "100101"
					"[rsa][message][id1]" => "100101"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100102
		# line in RSA: <agent>: [<fld32>] VRRP: Group <fld42> state changed <fld40> -> <fld41>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] VRRP: Group %{fld42} state changed %{fld40} -> %{fld41}" }
				id => "message-100102"
				add_field => {
					"[event][id]" => "100102"
					"[rsa][message][id1]" => "100102"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100103
		# line in RSA: <agent>: [<fld32>] PhysIntf slot:<fld41> port:<fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] PhysIntf slot:%{fld41} port:%{fld40}" }
				id => "message-100103"
				add_field => {
					"[event][id]" => "100103"
					"[rsa][message][id1]" => "100103"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100107
		# line in RSA: <agent>: [<fld32>] Node state change: slot <fld41> state <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] Node state change: slot %{fld41} state %{fld40}" }
				id => "message-100107"
				add_field => {
					"[event][id]" => "100107"
					"[rsa][message][id1]" => "100107"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100116
		# line in RSA: <agent>: [<fld32>] VRRP: Group <fld42> state: <fld40> -> <fld41>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld32}] VRRP: Group %{fld42} state: %{fld40} -> %{fld41}" }
				id => "message-100116"
				add_field => {
					"[event][id]" => "100116"
					"[rsa][message][id1]" => "100116"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId193
	# line in RSA: <agent>: [<fld2>] cbsvrmd <fld3> [<fld4>] (<fld13>) <fld16>
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld2}] cbsvrmd %{fld3} [%{fld4}] (%{fld13}) %{fld16}" }
			id => "msgParserId193"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vap_group_create" {
		# MESSAGE 100110
		# line in RSA: <agent>: Search <fld11> packages for <fld21>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Search %{fld11} packages for %{fld21}" }
				id => "message-100110"
				add_field => {
					"[event][id]" => "100110"
					"[rsa][message][id1]" => "100110"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100111
		# line in RSA: <agent>: Installing: <fld21>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Installing: %{fld21}" }
				id => "message-100111"
				add_field => {
					"[event][id]" => "100111"
					"[rsa][message][id1]" => "100111"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100112
		# line in RSA: <agent>: <severity>: <fld21>: Header <fld22> DSA signature: <fld23>, key ID <fld24>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: %{fld21}: Header %{fld22} DSA signature: %{fld23}, key ID %{fld24}" }
				id => "message-100112"
				add_field => {
					"[event][id]" => "100112"
					"[rsa][message][id1]" => "100112"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100113
		# line in RSA: <agent>: <fld21>: <fld23>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld21}: %{fld23}" }
				id => "message-100113"
				add_field => {
					"[event][id]" => "100113"
					"[rsa][message][id1]" => "100113"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100115
		# line in RSA: <agent>: Creating VAP group "<fld21>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Creating VAP group \"%{fld21}\"" }
				id => "message-100115"
				add_field => {
					"[event][id]" => "100115"
					"[rsa][message][id1]" => "100115"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId201
	# line in RSA: <agent>: Creating VAP "<fld21>"
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "%{agent}: Creating VAP \"%{fld21}\"" }
			id => "msgParserId201"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId220
	# line in RSA: <agent>[<fld41>] SELECT: <fld42>
	else if [logstash][msgparser][id] == "msgParserId220" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld41}] SELECT: %{fld42}" }
			id => "msgParserId220"
			add_field => {
				"shost" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "check_mgmt_intf" {
		# MESSAGE 100138
		# line in RSA: <agent>: <severity> Verifying all management VNDs are UP
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity} Verifying all management VNDs are UP" }
				id => "message-100138"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100138"
					"[rsa][message][id1]" => "100138"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100139
		# line in RSA: <agent>: <severity> Found management VND(s): <fld31>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity} Found management VND(s): %{fld31}" }
				id => "message-100139"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100139"
					"[rsa][message][id1]" => "100139"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100148
		# line in RSA: <agent>: <severity>  Management VND(s): mgmt are UP
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}  Management VND(s): mgmt are UP" }
				id => "message-100148"
				add_field => {
				"shost" => "%{hhost}"
					"[event][id]" => "100148"
					"[rsa][message][id1]" => "100148"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId244
	# line in RSA: <agent>[<fld41>]: authenticated mount request from <shost>:<sport> for <fld33> (<fld34>)
	else if [logstash][msgparser][id] == "msgParserId244" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld41}]: authenticated mount request from %{shost}:%{sport} for %{fld33} (%{fld34})" }
			id => "msgParserId244"
			add_field => {
				"shost" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId245
	# line in RSA: <agent>[<fld41>] COPY: <info>
	else if [logstash][msgparser][id] == "msgParserId245" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld41}] COPY: %{info}" }
			id => "msgParserId245"
			add_field => {
				"shost" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_crossbeamcmsg.json"
#			template_name => "crossbeamc_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
