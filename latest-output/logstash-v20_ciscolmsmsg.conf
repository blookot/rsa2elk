# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ciscolms"
			"[observer][name]" => "Cisco LMS"
			"[observer][type]" => "Configuration Management"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %CISCOLMS: <hfld1> <hmonth> <hday> <htime> <hfld2> <hyear>^^GroupId=<hgroupid>^^Category=<messageid>^^<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CISCOLMS:[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hyear>[^\^]*)\^\^GroupId=(?<hgroupid>[^\^]*)\^\^Category=(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %CISCOLMS: <htime>^^<hhost>^^<hversion>^^<messageid>^<!payload:htime>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CISCOLMS:[\s]+(?<message>(?<htime>[^\^]*)\^\^(?<hhost>[^\^]*)\^\^(?<hversion>[^\^]*)\^\^(?<messageid>[^\^]*)\^(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ciscolmsmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "INVENTORY_CHANGE" {
		# MESSAGE INVENTORY_CHANGE:01
		# line in RSA: <fld1> <fld5> <fld6> <fld7> <fld2> <fld8>^^GroupId=<groupid>^^Category=<category>^^Host=<hostname>^^Application=<agent>^^User=<username>^^Device=<hostip>^^ConnectionMode=<network_service>^^Summary=<event_description>^^Name=<obj_type>^^<obj_name>^^AttributeName=<change_attribute>^^Previousvalue=<change_old>^^Currentvalue=<change_new>^^Action=Deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld5} %{fld6} %{fld7} %{fld2} %{fld8}^^GroupId=%{groupid}^^Category=%{category}^^Host=%{hostname}^^Application=%{agent}^^User=%{username}^^Device=%{hostip}^^ConnectionMode=%{network_service}^^Summary=%{event_description}^^Name=%{obj_type}^^%{obj_name}^^AttributeName=%{change_attribute}^^Previousvalue=%{change_old}^^Currentvalue=%{change_new}^^Action=Deleted" }
				id => "message-INVENTORY_CHANGE:01"
				add_field => {
				"action" => "Deleted"
					"[event][id]" => "INVENTORY_CHANGE:01"
					"[rsa][message][id1]" => "INVENTORY_CHANGE:01"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld8} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE INVENTORY_CHANGE:02
		# line in RSA: <fld1> <fld5> <fld6> <fld7> <fld2> <fld8>^^GroupId=<groupid>^^Category=<category>^^Host=<hostname>^^Application=<agent>^^User=<username>^^Device=<hostip>^^ConnectionMode=<network_service>^^Summary=<event_description>^^Name=<obj_type>^^<obj_name>^^AttributeName=<change_attribute>^^Previousvalue=<change_old>^^Currentvalue=<change_new>^^Action=Changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld5} %{fld6} %{fld7} %{fld2} %{fld8}^^GroupId=%{groupid}^^Category=%{category}^^Host=%{hostname}^^Application=%{agent}^^User=%{username}^^Device=%{hostip}^^ConnectionMode=%{network_service}^^Summary=%{event_description}^^Name=%{obj_type}^^%{obj_name}^^AttributeName=%{change_attribute}^^Previousvalue=%{change_old}^^Currentvalue=%{change_new}^^Action=Changed" }
				id => "message-INVENTORY_CHANGE:02"
				add_field => {
				"action" => "Changed"
					"[event][id]" => "INVENTORY_CHANGE:02"
					"[rsa][message][id1]" => "INVENTORY_CHANGE:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld8} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE INVENTORY_CHANGE:03
		# line in RSA: <fld1> <fld5> <fld6> <fld7> <fld2> <fld8>^^GroupId=<groupid>^^Category=<category>^^Host=<hostname>^^Application=<agent>^^User=<username>^^Device=<hostip>^^ConnectionMode=<network_service>^^Summary=<event_description>^^Name=<obj_type>^^<obj_name>^^AttributeName=<change_attribute>^^Previousvalue=<change_old>^^Currentvalue=<change_new>^^Action=Inserted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld5} %{fld6} %{fld7} %{fld2} %{fld8}^^GroupId=%{groupid}^^Category=%{category}^^Host=%{hostname}^^Application=%{agent}^^User=%{username}^^Device=%{hostip}^^ConnectionMode=%{network_service}^^Summary=%{event_description}^^Name=%{obj_type}^^%{obj_name}^^AttributeName=%{change_attribute}^^Previousvalue=%{change_old}^^Currentvalue=%{change_new}^^Action=Inserted" }
				id => "message-INVENTORY_CHANGE:03"
				add_field => {
				"action" => "Inserted"
					"[event][id]" => "INVENTORY_CHANGE:03"
					"[rsa][message][id1]" => "INVENTORY_CHANGE:03"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld8} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE INVENTORY_CHANGE
		# line in RSA: <fld1> <fld5> <fld6> <fld7> <fld2> <fld8>^^GroupId=<groupid>^^Category=<category>^^Host=<hostname>^^Application=<agent>^^User=<username>^^Device=<hostip>^^ConnectionMode=<network_service>^^Summary=<event_description>^^Name=<obj_type>^^<obj_name>^^AttributeName=<change_attribute>^^Previousvalue=<change_old>^^Currentvalue=<change_new>^^Action=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld5} %{fld6} %{fld7} %{fld2} %{fld8}^^GroupId=%{groupid}^^Category=%{category}^^Host=%{hostname}^^Application=%{agent}^^User=%{username}^^Device=%{hostip}^^ConnectionMode=%{network_service}^^Summary=%{event_description}^^Name=%{obj_type}^^%{obj_name}^^AttributeName=%{change_attribute}^^Previousvalue=%{change_old}^^Currentvalue=%{change_new}^^Action=%{action}" }
				id => "message-INVENTORY_CHANGE"
				add_field => {
					"[event][id]" => "INVENTORY_CHANGE"
					"[rsa][message][id1]" => "INVENTORY_CHANGE"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld8} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE INVENTORY_CHANGE:04
		# line in RSA: <fld1>^^<node>^^<fld29>^^<category>^^<username>^^<agent>^^<hostname>^^<network_service>^^<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{node}^^%{fld29}^^%{category}^^%{username}^^%{agent}^^%{hostname}^^%{network_service}^^%{event_description}" }
				id => "message-INVENTORY_CHANGE:04"
				add_field => {
					"[event][id]" => "INVENTORY_CHANGE:04"
					"[rsa][message][id1]" => "INVENTORY_CHANGE:04"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CONFIG_CHANGE" {
		# MESSAGE CONFIG_CHANGE
		# line in RSA: <fld1> <fld5> <fld6> <fld7> <fld2> <fld8>^^GroupId=<groupid>^^Category=<category>^^Host=<hostname>^^Application=<agent>^^User=<username>^^Device=<hostip>^^ConnectionMode=<network_service>^^<obj_name>^^DeviceName=<obj_type>^^NewVersion=<change_new>^^OldVersion=<change_old>^^Description=<event_description>^^DeviceFamily=<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld5} %{fld6} %{fld7} %{fld2} %{fld8}^^GroupId=%{groupid}^^Category=%{category}^^Host=%{hostname}^^Application=%{agent}^^User=%{username}^^Device=%{hostip}^^ConnectionMode=%{network_service}^^%{obj_name}^^DeviceName=%{obj_type}^^NewVersion=%{change_new}^^OldVersion=%{change_old}^^Description=%{event_description}^^DeviceFamily=%{fld4}" }
				id => "message-CONFIG_CHANGE"
				add_field => {
					"[event][id]" => "CONFIG_CHANGE"
					"[rsa][message][id1]" => "CONFIG_CHANGE"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld8} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE CONFIG_CHANGE:01
		# line in RSA: <fld1>^^<node>^^<fld29>^^<category>^^<username>^^<agent>^^<hostname>^^<network_service>^^<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{node}^^%{fld29}^^%{category}^^%{username}^^%{agent}^^%{hostname}^^%{network_service}^^%{event_description}" }
				id => "message-CONFIG_CHANGE:01"
				add_field => {
					"[event][id]" => "CONFIG_CHANGE:01"
					"[rsa][message][id1]" => "CONFIG_CHANGE:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: <fld1>^^<node>^^<fld29>^^<category>^^<username>^^<agent>^^<hostname>^^<network_service>^^<event_description>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{fld1}^^%{node}^^%{fld29}^^%{category}^^%{username}^^%{agent}^^%{hostname}^^%{network_service}^^%{event_description}" }
			id => "msgParserId4"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA: <fld2>^^<node>^^<result>^^<disposition>^^<obj_name>^^<fld6>^^<obj_type>^^<fld8>^^<interface>^^<fld10>^^<fld11>^^<fld12>^^<fld13>^^<mask>^^<fld15>^^<fld16>^^<info>^^<id>^^<fld19>^^<version>^^<fld23>^^<fld22>^^<fld24>^^<product>^^<fld25>^^<fld26>^^<fld27>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{fld2}^^%{node}^^%{result}^^%{disposition}^^%{obj_name}^^%{fld6}^^%{obj_type}^^%{fld8}^^%{interface}^^%{fld10}^^%{fld11}^^%{fld12}^^%{fld13}^^%{mask}^^%{fld15}^^%{fld16}^^%{info}^^%{id}^^%{fld19}^^%{version}^^%{fld23}^^%{fld22}^^%{fld24}^^%{product}^^%{fld25}^^%{fld26}^^%{fld27}" }
			id => "msgParserId6"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ciscolmsmsg.json"
#			template_name => "ciscolms_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
