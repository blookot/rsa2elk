# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "cylance"
			"[observer][name]" => "CylanceProtect"
			"[observer][type]" => "Anti Virus"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hday>-<hmonth>-<hyear><hhour>:<hmin>:<hsec> <hseverity> <hhost> <hfld2> <<<fld44>><hfld3> <hdate>T<htime>.<hfld4> <hostname> CylancePROTECT <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hday}-%{hmonth}-%{hyear}%{hhour}:%{hmin}:%{hsec} %{hseverity} %{hhost} %{hfld2} <%{fld44}>%{hfld3} %{hdate}T%{htime}.%{hfld4} %{hostname} CylancePROTECT %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "CylancePROTECT"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hfld1> <hdate>T<htime>.<hfld2> <hostname> CylancePROTECT <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hdate}T%{htime}.%{hfld2} %{hostname} CylancePROTECT %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "CylancePROTECT"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hdate>T<htime>.<hfld2> <hostname> CylancePROTECT <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdate}T%{htime}.%{hfld2} %{hostname} CylancePROTECT %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "CylancePROTECT"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hdate> <hhour>:<hmin>:<hsec> <hhost> CylancePROTECT Event Type:<vendor_event_cat>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{hhour}:%{hmin}:%{hsec} %{hhost} CylancePROTECT Event Type:%{vendor_event_cat}, %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "CylancePROTECT"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-cylancemsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "CylancePROTECT" {
		# MESSAGE CylancePROTECT:01
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AuditLog, Event Name: <event_type>, Message: {Source: <product>; SHA256: <checksum>|SHA256: <checksum>}; {Category: <category>; Reason: <result>|Reason: <result>}, User: <user_fname> <user_lname> (<mail_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AuditLog,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Message:[\s]+(Source:[\s]+(?<product>[^;]*);[\s]+SHA256:[\s]+(?<checksum>[^;]*)|SHA256:[\s]+(?<checksum>[^;]*));[\s]+(Category:[\s]+(?<category>[^;]*);[\s]+Reason:[\s]+(?<result>[^,]*)|Reason:[\s]+(?<result>[^,]*)),[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\)$" }
				id => "message-CylancePROTECT:01"
				add_field => {
				"vendor_event_cat" => " AuditLog"
					"[event][id]" => "CylancePROTECT:01"
					"[rsa][message][id1]" => "CylancePROTECT:01"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:02
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AuditLog, Event Name: <event_type>, Message: {Device: <node>|Policy: <policyname>}; SHA256: <checksum>{; Category: <category>, User: <user_fname> <user_lname> (<mail_id>)|, User: <user_fname> <user_lname> (<mail_id>)} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AuditLog,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Message:[\s]+(Device:[\s]+(?<node>[^;]*)|Policy:[\s]+(?<policyname>[^;]*));[\s]+SHA256:[\s]+(?<checksum>[^;,]*)(;[\s]+Category:[\s]+(?<category>[^,]*),[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\)|,[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\))[\s]+$" }
				id => "message-CylancePROTECT:02"
				add_field => {
				"vendor_event_cat" => " AuditLog"
					"[event][id]" => "CylancePROTECT:02"
					"[rsa][message][id1]" => "CylancePROTECT:02"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:03
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AuditLog, Event Name: <event_type>, Message: {Devices: <node>,|Device: <node>;|Policy: <policyname>,} User: <user_fname> <user_lname> (<mail_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AuditLog,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Message:[\s]+(Devices:[\s]+(?<node>[^,]*),|Device:[\s]+(?<node>[^;]*);|Policy:[\s]+(?<policyname>[^,]*),)[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\)$" }
				id => "message-CylancePROTECT:03"
				add_field => {
				"vendor_event_cat" => " AuditLog"
					"[event][id]" => "CylancePROTECT:03"
					"[rsa][message][id1]" => "CylancePROTECT:03"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:04
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AuditLog, Event Name: <event_type>, Message: Zone: <info>; Policy: <policyname>; Value: <fld3>, User: <user_fname> <user_lname> (<mail_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AuditLog,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Message:[\s]+Zone:[\s]+(?<info>[^;]*);[\s]+Policy:[\s]+(?<policyname>[^;]*);[\s]+Value:[\s]+(?<fld3>[^,]*),[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\)$" }
				id => "message-CylancePROTECT:04"
				add_field => {
				"vendor_event_cat" => " AuditLog"
					"[event][id]" => "CylancePROTECT:04"
					"[rsa][message][id1]" => "CylancePROTECT:04"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:05
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AuditLog, Event Name: <event_type>, Message: {Policy Assigned:<signame>; Devices: <node> | Provider: <product>, Source IP: <saddr>|<info>}, User: <user_fname> <user_lname> (<mail_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AuditLog,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Message:[\s]+(Policy[\s]+Assigned:(?<signame>[^;]*);[\s]+Devices:[\s]+(?<node>[^\s]*)[\s]+|[\s]*Provider:[\s]+(?<product>[^,]*),[\s]+Source[\s]+IP:[\s]+(?<saddr>[^,]*)|(?<info>[^,]*)),[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\)$" }
				id => "message-CylancePROTECT:05"
				add_field => {
				"vendor_event_cat" => " AuditLog"
					"[event][id]" => "CylancePROTECT:05"
					"[rsa][message][id1]" => "CylancePROTECT:05"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:06
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AuditLog, Event Name: <event_type>, Message: The Device: <node> was auto assigned to the Zone: IP Address: {Fake Devices|<saddr>}, {User:   (<mail_id>)|User: <user_fname> <user_lname> (<mail_id>)}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AuditLog,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Message:[\s]+The[\s]+Device:[\s]+(?<node>[^\s]*)[\s]+was[\s]+auto[\s]+assigned[\s]+to[\s]+the[\s]+Zone:[\s]+IP[\s]+Address:[\s]+(Fake[\s]+Devices|(?<saddr>[^,]*)),[\s]+(User:[\s]+\((?<mail_id>[^\)]*)\)|User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\))$" }
				id => "message-CylancePROTECT:06"
				add_field => {
				"vendor_event_cat" => " AuditLog"
					"[event][id]" => "CylancePROTECT:06"
					"[rsa][message][id1]" => "CylancePROTECT:06"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:07
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: ExploitAttempt, Event Name: <event_type>, Device Name: <node>, IP Address: (<saddr>), Action: <action>, Process ID: <process_id>, Process Name: <process>, User Name: <username>, Violation Type: <signame>, Zone Names: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+ExploitAttempt,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+IP[\s]+Address:[\s]+\((?<saddr>[^\)]*)\),[\s]+Action:[\s]+(?<action>[^,]*),[\s]+Process[\s]+ID:[\s]+(?<process_id>[^,]*),[\s]+Process[\s]+Name:[\s]+(?<process>[^,]*),[\s]+User[\s]+Name:[\s]+(?<username>[^,]*),[\s]+Violation[\s]+Type:[\s]+(?<signame>[^,]*),[\s]+Zone[\s]+Names:[\s]+(?<info>.*)$" }
				id => "message-CylancePROTECT:07"
				add_field => {
				"vendor_event_cat" => " ExploitAttempt"
					"[event][id]" => "CylancePROTECT:07"
					"[rsa][message][id1]" => "CylancePROTECT:07"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:08
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: DeviceControl, Event Name: <event_type>, Device Name: <node>, External Device Type: <fld3>, External Device Vendor ID: <fld18>, External Device Name: <fld4>, External Device Product ID: <fld17>, External Device Serial Number: <serial_number>, Zone Names: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+DeviceControl,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+External[\s]+Device[\s]+Type:[\s]+(?<fld3>[^,]*),[\s]+External[\s]+Device[\s]+Vendor[\s]+ID:[\s]+(?<fld18>[^,]*),[\s]+External[\s]+Device[\s]+Name:[\s]+(?<fld4>[^,]*),[\s]+External[\s]+Device[\s]+Product[\s]+ID:[\s]+(?<fld17>[^,]*),[\s]+External[\s]+Device[\s]+Serial[\s]+Number:[\s]+(?<serial_number>[^,]*),[\s]+Zone[\s]+Names:[\s]+(?<info>.*)$" }
				id => "message-CylancePROTECT:08"
				add_field => {
				"vendor_event_cat" => " DeviceControl"
					"[event][id]" => "CylancePROTECT:08"
					"[rsa][message][id1]" => "CylancePROTECT:08"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:09
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: ScriptControl, Event Name: <event_type>, Device Name: <node>, File Path: <directory>, Interpreter: <application>, Interpreter Version: <version> (<fld3>), {Zone Names: <info>, User Name: <username>|Zone Names: <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+ScriptControl,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+File[\s]+Path:[\s]+(?<directory>[^,]*),[\s]+Interpreter:[\s]+(?<application>[^,]*),[\s]+Interpreter[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+\((?<fld3>[^\)]*)\),[\s]+(Zone[\s]+Names:[\s]+(?<info>[^,]*),[\s]+User[\s]+Name:[\s]+(?<username>.*)|Zone[\s]+Names:[\s]+(?<info>.*))$" }
				id => "message-CylancePROTECT:09"
				add_field => {
				"vendor_event_cat" => " ScriptControl"
					"[event][id]" => "CylancePROTECT:09"
					"[rsa][message][id1]" => "CylancePROTECT:09"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:10
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld4>} Event Type: Threat, Event Name: <event_type>, Device Name: <node>, IP Address: (<saddr>), File Name: <filename>, Path: <directory>, Drive Type: <fld1>, SHA256: <checksum>, MD5: <fld3>, Status: <event_state>, Cylance Score: <reputation_num>, Found Date: <fld5>, File Type: <filetype>, Is Running: <fld6>, Auto Run: <fld7>, Detected By: <fld8>, Zone Names: <info>, Is Malware: <fld10>, Is Unique To Cylance: <fld11>, Threat Classification: <sigtype> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld4>[^\s]*))[\s]+Event[\s]+Type:[\s]+Threat,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+IP[\s]+Address:[\s]+\((?<saddr>[^\)]*)\),[\s]+File[\s]+Name:[\s]+(?<filename>[^,]*),[\s]+Path:[\s]+(?<directory>[^,]*),[\s]+Drive[\s]+Type:[\s]+(?<fld1>[^,]*),[\s]+SHA256:[\s]+(?<checksum>[^,]*),[\s]+MD5:[\s]+(?<fld3>[^,]*),[\s]+Status:[\s]+(?<event_state>[^,]*),[\s]+Cylance[\s]+Score:[\s]+(?<reputation_num>[^,]*),[\s]+Found[\s]+Date:[\s]+(?<fld5>[^,]*),[\s]+File[\s]+Type:[\s]+(?<filetype>[^,]*),[\s]+Is[\s]+Running:[\s]+(?<fld6>[^,]*),[\s]+Auto[\s]+Run:[\s]+(?<fld7>[^,]*),[\s]+Detected[\s]+By:[\s]+(?<fld8>[^,]*),[\s]+Zone[\s]+Names:[\s]+(?<info>[^,]*),[\s]+Is[\s]+Malware:[\s]+(?<fld10>[^,]*),[\s]+Is[\s]+Unique[\s]+To[\s]+Cylance:[\s]+(?<fld11>[^,]*),[\s]+Threat[\s]+Classification:[\s]+(?<sigtype>[^\s]*)[\s]+$" }
				id => "message-CylancePROTECT:10"
				add_field => {
				"vendor_event_cat" => " Threat"
					"[event][id]" => "CylancePROTECT:10"
					"[rsa][message][id1]" => "CylancePROTECT:10"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:11
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: AppControl, Event Name: <event_type>, Device Name: <node>, IP Address: (<saddr>), Action: <action>, Action Type: <fld3>, File Path: <directory>, SHA256: <checksum>, Zone Names: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+AppControl,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+IP[\s]+Address:[\s]+\((?<saddr>[^\)]*)\),[\s]+Action:[\s]+(?<action>[^,]*),[\s]+Action[\s]+Type:[\s]+(?<fld3>[^,]*),[\s]+File[\s]+Path:[\s]+(?<directory>[^,]*),[\s]+SHA256:[\s]+(?<checksum>[^,]*),[\s]+Zone[\s]+Names:[\s]+(?<info>.*)$" }
				id => "message-CylancePROTECT:11"
				add_field => {
				"vendor_event_cat" => " AppControl"
					"[event][id]" => "CylancePROTECT:11"
					"[rsa][message][id1]" => "CylancePROTECT:11"
					"[event][categoryid]" => "1901000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CylancePROTECT:15
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: <vendor_event_cat>, Event Name: <event_type>, Threat Class: <sigtype>, Threat Subclass: <fld7>, SHA256: <checksum>, MD5: <fld8>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+(?<vendor_event_cat>[^,]*),[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Threat[\s]+Class:[\s]+(?<sigtype>[^,]*),[\s]+Threat[\s]+Subclass:[\s]+(?<fld7>[^,]*),[\s]+SHA256:[\s]+(?<checksum>[^,]*),[\s]+MD5:[\s]+(?<fld8>.*)$" }
				id => "message-CylancePROTECT:15"
				add_field => {
					"[event][id]" => "CylancePROTECT:15"
					"[rsa][message][id1]" => "CylancePROTECT:15"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:14
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: <vendor_event_cat>, Event Name: <event_type>, Device Names: (<node>), Policy Name: <policyname>, User: <user_fname> <user_lname> (<mail_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+(?<vendor_event_cat>[^,]*),[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Names:[\s]+\((?<node>[^\)]*)\),[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^,]*),[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\)$" }
				id => "message-CylancePROTECT:14"
				add_field => {
					"[event][id]" => "CylancePROTECT:14"
					"[rsa][message][id1]" => "CylancePROTECT:14"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:13
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: <vendor_event_cat>, Event Name: <event_type>, Device Name: <node>, Agent Version: <fld6>, IP Address: (<saddr>, <fld15>), MAC Address: (<macaddr>, <fld16>), Logged On Users: (<username>), {OS: <os> Zone Names: <info>|OS: <os>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+(?<vendor_event_cat>[^,]*),[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+Agent[\s]+Version:[\s]+(?<fld6>[^,]*),[\s]+IP[\s]+Address:[\s]+\((?<saddr>[^,]*),[\s]+(?<fld15>[^\)]*)\),[\s]+MAC[\s]+Address:[\s]+\((?<macaddr>[^,]*),[\s]+(?<fld16>[^\)]*)\),[\s]+Logged[\s]+On[\s]+Users:[\s]+\((?<username>[^\)]*)\),[\s]+(OS:[\s]+(?<os>[^\s]*)[\s]+Zone[\s]+Names:[\s]+(?<info>.*)|OS:[\s]+(?<os>.*))$" }
				id => "message-CylancePROTECT:13"
				add_field => {
					"[event][id]" => "CylancePROTECT:13"
					"[rsa][message][id1]" => "CylancePROTECT:13"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:16
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: <vendor_event_cat>, Event Name: <event_type>, Device Name: <node>, Agent Version: <fld1>, IP Address: (<saddr>), MAC Address: (<macaddr>), Logged On Users: (<username>), {OS: <os> Zone Names: <info>|OS: <os>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+(?<vendor_event_cat>[^,]*),[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+Agent[\s]+Version:[\s]+(?<fld1>[^,]*),[\s]+IP[\s]+Address:[\s]+\((?<saddr>[^\)]*)\),[\s]+MAC[\s]+Address:[\s]+\((?<macaddr>[^\)]*)\),[\s]+Logged[\s]+On[\s]+Users:[\s]+\((?<username>[^\)]*)\),[\s]+(OS:[\s]+(?<os>[^\s]*)[\s]+Zone[\s]+Names:[\s]+(?<info>.*)|OS:[\s]+(?<os>.*))$" }
				id => "message-CylancePROTECT:16"
				add_field => {
					"[event][id]" => "CylancePROTECT:16"
					"[rsa][message][id1]" => "CylancePROTECT:16"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:25
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: ScriptControl, Event Name: <event_type>, Device Name: <node>, File Path: <directory>, Interpreter: <application>, Interpreter Version: <version>, Zone Names: <info>, User Name: <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+ScriptControl,[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+File[\s]+Path:[\s]+(?<directory>[^,]*),[\s]+Interpreter:[\s]+(?<application>[^,]*),[\s]+Interpreter[\s]+Version:[\s]+(?<version>[^,]*),[\s]+Zone[\s]+Names:[\s]+(?<info>[^,]*),[\s]+User[\s]+Name:[\s]+(?<username>.*)$" }
				id => "message-CylancePROTECT:25"
				add_field => {
					"[event][id]" => "CylancePROTECT:25"
					"[rsa][message][id1]" => "CylancePROTECT:25"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:12
		# line in RSA: <fld13> <fld14> {[<fld2>]| <fld5>} Event Type: <vendor_event_cat>, Event Name: <event_type>, {Device Name: <node>, Zone Names:<info>|Device Name: <node>|<fld1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(\[(?<fld2>[^\]]*)\]|[\s]*(?<fld5>[^\s]*))[\s]+Event[\s]+Type:[\s]+(?<vendor_event_cat>[^,]*),[\s]+Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+(Device[\s]+Name:[\s]+(?<node>[^,]*),[\s]+Zone[\s]+Names:(?<info>.*)|Device[\s]+Name:[\s]+(?<node>.*)|(?<fld1>.*))$" }
				id => "message-CylancePROTECT:12"
				add_field => {
					"[event][id]" => "CylancePROTECT:12"
					"[rsa][message][id1]" => "CylancePROTECT:12"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE CylancePROTECT:17
		# line in RSA: Event Name:<event_type>, Device Name:<node>, File Path:<filename>, Interpreter:<application>, Interpreter Version:<version>, Zone Names:<info>{, User Name: <username>, Device Id: <fld3>, Policy Name: <policyname>|, User Name: <username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Device[\s]+Name:(?<node>[^,]*),[\s]+File[\s]+Path:(?<filename>[^,]*),[\s]+Interpreter:(?<application>[^,]*),[\s]+Interpreter[\s]+Version:(?<version>[^,]*),[\s]+Zone[\s]+Names:(?<info>[^,,]*)(,[\s]+User[\s]+Name:[\s]+(?<username>[^,]*),[\s]+Device[\s]+Id:[\s]+(?<fld3>[^,]*),[\s]+Policy[\s]+Name:[\s]+(?<policyname>.*)|,[\s]+User[\s]+Name:[\s]+(?<username>.*))$" }
				id => "message-CylancePROTECT:17"
				add_field => {
					"[event][id]" => "CylancePROTECT:17"
					"[rsa][message][id1]" => "CylancePROTECT:17"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:18
		# line in RSA: Event Name:<event_type>, Device Name:<node>, Agent Version:<fld1>, IP Address: (<saddr>), MAC Address: (<macaddr>), Logged On Users: (<username>), OS:<os>, Zone Names:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Event Name:%{event_type}, Device Name:%{node}, Agent Version:%{fld1}, IP Address: (%{saddr}), MAC Address: (%{macaddr}), Logged On Users: (%{username}), OS:%{os}, Zone Names:%{info}" }
				id => "message-CylancePROTECT:18"
				add_field => {
					"[event][id]" => "CylancePROTECT:18"
					"[rsa][message][id1]" => "CylancePROTECT:18"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:19
		# line in RSA: Event Name:<event_type>, Device Name:<node>, External Device Type:<device>, External Device Vendor ID:<fld2>, External Device Name:<fld3>, External Device Product ID:<fld4>, External Device Serial Number:<serial_number>, {Zone Names:<info>, Device Id: <fld5>, Policy Name: <policyname> |Zone Names:<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Device[\s]+Name:(?<node>[^,]*),[\s]+External[\s]+Device[\s]+Type:(?<device>[^,]*),[\s]+External[\s]+Device[\s]+Vendor[\s]+ID:(?<fld2>[^,]*),[\s]+External[\s]+Device[\s]+Name:(?<fld3>[^,]*),[\s]+External[\s]+Device[\s]+Product[\s]+ID:(?<fld4>[^,]*),[\s]+External[\s]+Device[\s]+Serial[\s]+Number:(?<serial_number>[^,]*),[\s]+(Zone[\s]+Names:(?<info>[^,]*),[\s]+Device[\s]+Id:[\s]+(?<fld5>[^,]*),[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+|Zone[\s]+Names:(?<info>.*))$" }
				id => "message-CylancePROTECT:19"
				add_field => {
					"[event][id]" => "CylancePROTECT:19"
					"[rsa][message][id1]" => "CylancePROTECT:19"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:20
		# line in RSA: Event Name:<event_type>, Message: {The Device|Device}:<node>was auto assigned {to the| to} Zone:<zone>, User:<user_fname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Message:[\s]+(The[\s]+Device|Device):(?<node>[^w]*)was[\s]+auto[\s]+assigned[\s]+(to[\s]+the|[\s]*to)[\s]+Zone:(?<zone>[^,]*),[\s]+User:(?<user_fname>.*)$" }
				id => "message-CylancePROTECT:20"
				add_field => {
					"[event][id]" => "CylancePROTECT:20"
					"[rsa][message][id1]" => "CylancePROTECT:20"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:21
		# line in RSA: Event Name:<event_type>, Device Name:<node>, IP Address: (<saddr>), File Name:<filename>, Path:<directory>, Drive Type:<fld1>, SHA256:<checksum>, MD5:<fld3>, Status:<event_state>, Cylance Score:<fld4>, Found Date:<fld51>, File Type:<fld6>, Is Running:<fld7>, Auto Run:<fld8>, Detected By:<fld9>, Zone Names: (<info>), Is Malware:<fld10>, Is Unique To Cylance:<fld11>, Threat Classification:<sigtype>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Event Name:%{event_type}, Device Name:%{node}, IP Address: (%{saddr}), File Name:%{filename}, Path:%{directory}, Drive Type:%{fld1}, SHA256:%{checksum}, MD5:%{fld3}, Status:%{event_state}, Cylance Score:%{fld4}, Found Date:%{fld51}, File Type:%{fld6}, Is Running:%{fld7}, Auto Run:%{fld8}, Detected By:%{fld9}, Zone Names: (%{info}), Is Malware:%{fld10}, Is Unique To Cylance:%{fld11}, Threat Classification:%{sigtype}" }
				id => "message-CylancePROTECT:21"
				add_field => {
					"[event][id]" => "CylancePROTECT:21"
					"[rsa][message][id1]" => "CylancePROTECT:21"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:22
		# line in RSA: {Event Name: <event_type>, Device Name: <device>, IP Address: (<saddr>), Action: <action>, Process ID: <process_id>, Process Name: <process>, User Name: <username>, Violation Type: <signame>|Event Name:<event_type>, Device Name:<node>}, {Zone Names:<info>, Device Id: <fld3>|Zone Names:<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(Event[\s]+Name:[\s]+(?<event_type>[^,]*),[\s]+Device[\s]+Name:[\s]+(?<device>[^,]*),[\s]+IP[\s]+Address:[\s]+\((?<saddr>[^\)]*)\),[\s]+Action:[\s]+(?<action>[^,]*),[\s]+Process[\s]+ID:[\s]+(?<process_id>[^,]*),[\s]+Process[\s]+Name:[\s]+(?<process>[^,]*),[\s]+User[\s]+Name:[\s]+(?<username>[^,]*),[\s]+Violation[\s]+Type:[\s]+(?<signame>[^,]*)|Event[\s]+Name:(?<event_type>[^,]*),[\s]+Device[\s]+Name:(?<node>[^,]*)),[\s]+(Zone[\s]+Names:(?<info>[^,]*),[\s]+Device[\s]+Id:[\s]+(?<fld3>.*)|Zone[\s]+Names:(?<info>.*))$" }
				id => "message-CylancePROTECT:22"
				add_field => {
					"[event][id]" => "CylancePROTECT:22"
					"[rsa][message][id1]" => "CylancePROTECT:22"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:23
		# line in RSA: Event Name:<event_type>, Threat Class:<sigtype>, Threat Subclass:<fld1>, SHA256:<checksum>, MD5:<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Event Name:%{event_type}, Threat Class:%{sigtype}, Threat Subclass:%{fld1}, SHA256:%{checksum}, MD5:%{fld3}" }
				id => "message-CylancePROTECT:23"
				add_field => {
					"[event][id]" => "CylancePROTECT:23"
					"[rsa][message][id1]" => "CylancePROTECT:23"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:24
		# line in RSA: Event Name:<event_type>, Message: Provider:<fld3>, Source IP:<saddr>, User: <user_fname> <user_lname> {(<mail_id>)#015|(<mail_id>)}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Message:[\s]+Provider:(?<fld3>[^,]*),[\s]+Source[\s]+IP:(?<saddr>[^,]*),[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+(\((?<mail_id>[^\)]*)\)#015|\((?<mail_id>[^\)]*)\))$" }
				id => "message-CylancePROTECT:24"
				add_field => {
					"[event][id]" => "CylancePROTECT:24"
					"[rsa][message][id1]" => "CylancePROTECT:24"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:26
		# line in RSA: Event Name:<event_type>, Device Message: Device: <device>; Policy Changed: <fld4> to '<policyname>', User: <user_fname> <user_lname> (<mail_id>), {Zone Names:<info>, Device Id: <fld3>|Zone Names:<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Device[\s]+Message:[\s]+Device:[\s]+(?<device>[^;]*);[\s]+Policy[\s]+Changed:[\s]+(?<fld4>[^\s]*)[\s]+to[\s]+'(?<policyname>[^']*)',[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\),[\s]+(Zone[\s]+Names:(?<info>[^,]*),[\s]+Device[\s]+Id:[\s]+(?<fld3>.*)|Zone[\s]+Names:(?<info>.*))$" }
				id => "message-CylancePROTECT:26"
				add_field => {
					"[event][id]" => "CylancePROTECT:26"
					"[rsa][message][id1]" => "CylancePROTECT:26"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:27
		# line in RSA: Event Name:<event_type>, Device Message: Device: <device>; {Zones Removed: <fld4>; Zones Added: <fld5>,|Zones Removed: <fld4>,} User: <user_fname> <user_lname> (<mail_id>), {Zone Names:<info> Device Id: <fld3>|Zone Names:<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Device[\s]+Message:[\s]+Device:[\s]+(?<device>[^;]*);[\s]+(Zones[\s]+Removed:[\s]+(?<fld4>[^;]*);[\s]+Zones[\s]+Added:[\s]+(?<fld5>[^,]*),|Zones[\s]+Removed:[\s]+(?<fld4>[^,]*),)[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\),[\s]+(Zone[\s]+Names:(?<info>[^\s]*)[\s]+Device[\s]+Id:[\s]+(?<fld3>.*)|Zone[\s]+Names:(?<info>.*))$" }
				id => "message-CylancePROTECT:27"
				add_field => {
					"[event][id]" => "CylancePROTECT:27"
					"[rsa][message][id1]" => "CylancePROTECT:27"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE CylancePROTECT:28
		# line in RSA: Event Name:<event_type>, Device Message: Device: <device> {Agent Self Protection Level Changed: '<change_old>' to '<change_new>', User: <user_fname> <user_lname> (<mail_id>),|User: <user_fname> <user_lname> (<mail_id>),} Zone Names: <info> Device Id: <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Event[\s]+Name:(?<event_type>[^,]*),[\s]+Device[\s]+Message:[\s]+Device:[\s]+(?<device>[^\s]*)[\s]+(Agent[\s]+Self[\s]+Protection[\s]+Level[\s]+Changed:[\s]+'(?<change_old>[^']*)'[\s]+to[\s]+'(?<change_new>[^']*)',[\s]+User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\),|User:[\s]+(?<user_fname>[^\s]*)[\s]+(?<user_lname>[^\s]*)[\s]+\((?<mail_id>[^\)]*)\),)[\s]+Zone[\s]+Names:[\s]+(?<info>[^\s]*)[\s]+Device[\s]+Id:[\s]+(?<fld3>.*)$" }
				id => "message-CylancePROTECT:28"
				add_field => {
					"[event][id]" => "CylancePROTECT:28"
					"[rsa][message][id1]" => "CylancePROTECT:28"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1609000000" => "System.Alerts"
			"1804020000" => "Network.Devices.Removals"
			"1502030000" => "Policies.Rules.Added"
			"1701000000" => "Config.Changes"
			"1401060000" => "User.Activity.Successful Logins"
			"1804000000" => "Network.Devices"
			"1003010000" => "Attacks.Malicious Code.Virus"
			"1600000000" => "System"
			"1502000000" => "Policies.Rules"
			"1804010000" => "Network.Devices.Additions"
		}
		fallback => "Other.Default"
		override => true
	}
}
filter {
	translate {
		field => "[event_type]"
		destination => "[event_cat]"
		dictionary => {
			"Alert" => "1609000000"
			"DeviceRemove" => "1804020000"
			"PolicyAdd" => "1502030000"
			"ZoneAdd" => "1701000000"
			"SyslogSettingsSave" => "1701000000"
			"LoginSuccess" => "1401060000"
			"ZoneAddDevice" => "1701000000"
			"pechange" => "1701000000"
			"Registration" => "1804000000"
			"threat_found" => "1003010000"
			"threat_changed" => "1003010000"
			"threat_quarantined" => "1003010000"
			"SystemSecurity" => "1600000000"
			"DeviceEdit" => "1701000000"
			"Device Policy Assigned" => "1502000000"
			"ThreatUpdated" => "1003010000"
			"fullaccess" => "1804000000"
			"Device Updated" => "1804010000"
		}
		fallback => "1901000000"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-cylancemsg.json"
#			template_name => "cylance_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
