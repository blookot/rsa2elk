# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "symantecav"
			"[observer][name]" => "Symantec AntiVirus/Endpoint Protection"
			"[observer][type]" => "Anti Virus"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %SYMANTECAV { Delete | Leave Alone | Quarantine | Undefined } ..Alert: <messageid> <data>..<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+([\s]*Delete[\s]+|[\s]*Leave[\s]+Alone[\s]+|[\s]*Quarantine[\s]+|[\s]*Undefined[\s]+)[\s]+\.\.Alert:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<data>[^\.]*)\.\.(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %SYMANTECAV Alert: <messageid> <data>..<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+Alert:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<data>[^\.]*)\.\.(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %SYMANTECAV ..<messageid> <data>..<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+\.\.(?<message>(?<messageid>[^\s]*)[\s]+(?<data>[^\.]*)\.\.(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %SYMANTECAV <hfld1> ..<messageid> <hfld2>.. <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+(?<hfld1>[^\s]*)[\s]+\.\.(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\.]*)\.\.[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %SYMANTECAV <hfld1> <messageid> Found <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+Found[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %SYMANTECAV <messageid> <hfld1>..<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld1>[^\.]*)\.\.(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00081
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,Admin: <husername>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),Admin:[\s]+(?<husername>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00081"
			add_field => {
				"[rsa][header][id]" => "00081"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,Admin: <husername>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),Admin:[\s]+(?<husername>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00091
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,The <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),The[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00091"
			add_field => {
				"[rsa][header][id]" => "00091"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,The <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),The[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00421
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,Admin: <husername>,The <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),Admin:[\s]+(?<husername>[^,]*),The[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00421"
			add_field => {
				"[rsa][header][id]" => "00421"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0042
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,Admin: <husername>,The <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),Admin:[\s]+(?<husername>[^,]*),The[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0042"
			add_field => {
				"[rsa][header][id]" => "0042"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 99991
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-99991"
			add_field => {
				"[rsa][header][id]" => "99991"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,Domain: <hdomain>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),Domain:[\s]+(?<hdomain>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00101
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,"<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),\"(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00101"
			add_field => {
				"[rsa][header][id]" => "00101"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,"<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),\"(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00111
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,<messageid>.<fld2> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),(?<message>(?<messageid>[^\.]*)\.(?<fld2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00111"
			add_field => {
				"[rsa][header][id]" => "00111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,<messageid>.<fld2> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),(?<message>(?<messageid>[^\.]*)\.(?<fld2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00121
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00121"
			add_field => {
				"[rsa][header][id]" => "00121"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 11111
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,<fld20> <fld21> <fld23> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-11111"
			add_field => {
				"[rsa][header][id]" => "11111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1111
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,<fld20> <fld21> <fld23> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1111"
			add_field => {
				"[rsa][header][id]" => "1111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 13131
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,Category: <hdata>,<hfld1>,"<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),Category:[\s]+(?<hdata>[^,]*),(?<hfld1>[^,]*),\"(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-13131"
			add_field => {
				"[rsa][header][id]" => "13131"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1313
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,Category: <hdata>,<hfld1>,"<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),Category:[\s]+(?<hdata>[^,]*),(?<hfld1>[^,]*),\"(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1313"
			add_field => {
				"[rsa][header][id]" => "1313"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00131
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,Category: <hdata>,<hfld1>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),Category:[\s]+(?<hdata>[^,]*),(?<hfld1>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00131"
			add_field => {
				"[rsa][header][id]" => "00131"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,Category: <hdata>,<hfld1>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),Category:[\s]+(?<hdata>[^,]*),(?<hfld1>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 13142
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,SHA-256:<checksum>,MD-5:<checksum>,"[SID: <hfld1>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\"\[SID:[\s]+(?<hfld1>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-13142"
			add_field => {
				"[rsa][header][id]" => "13142"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 13141
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,"[SID: <hfld1>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),\"\[SID:[\s]+(?<hfld1>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-13141"
			add_field => {
				"[rsa][header][id]" => "13141"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1314
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,"[SID: <hfld1>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),\"\[SID:[\s]+(?<hfld1>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1314"
			add_field => {
				"[rsa][header][id]" => "1314"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00141
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,[SID: <hdata>] <hfld1>.  Traffic has been <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),\[SID:[\s]+(?<hdata>[^\]]*)\][\s]+(?<message>(?<hfld1>[^\.]*)\.[\s]+Traffic[\s]+has[\s]+been[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00141"
			add_field => {
				"[rsa][header][id]" => "00141"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,[SID: <hdata>] <hfld1>.  Traffic has been <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),\[SID:[\s]+(?<hdata>[^\]]*)\][\s]+(?<message>(?<hfld1>[^\.]*)\.[\s]+Traffic[\s]+has[\s]+been[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00161
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00161"
			add_field => {
				"[rsa][header][id]" => "00161"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <htime> SymantecServer <hhost>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 29292
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,SHA-256:<checksum>,MD-5:<checksum>,<fld1> <messageid> <!payload:fld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),(?<message>(?<fld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-29292"
			add_field => {
				"[rsa][header][id]" => "29292"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 29291
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,<fld1> <messageid> <!payload:fld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),(?<message>(?<fld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-29291"
			add_field => {
				"[rsa][header][id]" => "29291"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2929
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,<fld1> <messageid> <!payload:fld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),(?<message>(?<fld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-2929"
			add_field => {
				"[rsa][header][id]" => "2929"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00291
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <fld1> <messageid> <!payload:fld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<message>(?<fld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00291"
			add_field => {
				"[rsa][header][id]" => "00291"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0029
	# line in RSA: <htime> SymantecServer <hhost>: <fld1> <messageid> <!payload:fld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<fld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0029"
			add_field => {
				"[rsa][header][id]" => "0029"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00173
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhostip> <hhost> SymantecServer: <hshost>,SHA-256:<checksum>,MD-5:<checksum>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhostip>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00173"
			add_field => {
				"[rsa][header][id]" => "00173"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00172
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,SHA-256:<checksum>,MD-5:<checksum>,<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00172"
			add_field => {
				"[rsa][header][id]" => "00172"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00171
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,<messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0017
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,<messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 00151
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,<hname>,<messageid> <!payload:hname>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),(?<message>(?<hname>[^,]*),(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00151"
			add_field => {
				"[rsa][header][id]" => "00151"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,<hname>,<messageid> <!payload:hname>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),(?<message>(?<hname>[^,]*),(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: %SYMANTECAV Actual Name: <hfld1> ..Alert: <messageid> <data>..<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+Actual[\s]+Name:[\s]+(?<hfld1>[^\s]*)[\s]+\.\.Alert:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<data>[^\.]*)\.\.(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: %SYMANTECAV <hfld1> <hfld2> <messageid> <hfld3> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: %SYMANTECAV <hfld1> <hfld2> <hfld3> <messageid> <hfld4> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SYMANTECAV[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00191
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,Category: <hdata>,<hfld1>,<fld40> <messageid> <!payload:fld40>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),Category:[\s]+(?<hdata>[^,]*),(?<hfld1>[^,]*),(?<message>(?<fld40>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00191"
			add_field => {
				"[rsa][header][id]" => "00191"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,Category: <hdata>,<hfld1>,<fld40> <messageid> <!payload:fld40>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+(?<hshost>[^,]*),Category:[\s]+(?<hdata>[^,]*),(?<hfld1>[^,]*),(?<message>(?<fld40>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00201
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hurl>,Server: <hhostid>,The <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),The[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00201"
			add_field => {
				"[rsa][header][id]" => "00201"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hurl>,Server: <hhostid>,The <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hurl>[^,]*),Server:[\s]+(?<hhostid>[^,]*),The[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00231
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,"<messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0023
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,"<messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 00241
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,<messageid>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{hhour}:%{hmin}:%{hsec} %{hhost} SymantecServer: %{hshost},%{messageid},%{message}" }
			id => "header-00241"
			add_field => {
				"[rsa][header][id]" => "00241"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0024
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,<messageid>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{htime} SymantecServer %{hhost}: %{hshost},%{messageid},%{message}" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00261
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,"<haction> """"<messageid> of Death"" <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{hhour}:%{hmin}:%{hsec} %{hhost} SymantecServer: %{hshost},\"%{haction} \"\"\"\"%{messageid} of Death\"\" %{message}" }
			id => "header-00261"
			add_field => {
				"[rsa][header][id]" => "00261"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0026
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,"<haction> """"<messageid> of Death"" <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{htime} SymantecServer %{hhost}: %{hshost},\"%{haction} \"\"\"\"%{messageid} of Death\"\" %{message}" }
			id => "header-0026"
			add_field => {
				"[rsa][header][id]" => "0026"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00371
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,"<haction> ""<messageid> of Death"" <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{hhour}:%{hmin}:%{hsec} %{hhost} SymantecServer: %{hshost},\"%{haction} \"\"%{messageid} of Death\"\" %{message}" }
			id => "header-00371"
			add_field => {
				"[rsa][header][id]" => "00371"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0037
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,"<haction> ""<messageid> of Death"" <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{htime} SymantecServer %{hhost}: %{hshost},\"%{haction} \"\"%{messageid} of Death\"\" %{message}" }
			id => "header-0037"
			add_field => {
				"[rsa][header][id]" => "0037"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00271
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: Site: <hsite>,<messageid>: <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^\s]*)[\s]+(?<message>(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+Site:[\s]+(?<hsite>[^,]*),(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-00271"
			add_field => {
				"[rsa][header][id]" => "00271"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0027
	# line in RSA: <htime> SymantecServer <hhost>: Site: <hsite>,<messageid>: <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+SymantecServer[\s]+(?<message>(?<hhost>[^:]*):[\s]+Site:[\s]+(?<hsite>[^,]*),(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0027"
			add_field => {
				"[rsa][header][id]" => "0027"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00301
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{hhour}:%{hmin}:%{hsec} %{hhost} SymantecServer: %{hshost},%{messageid}: %{message}" }
			id => "header-00301"
			add_field => {
				"[rsa][header][id]" => "00301"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0030
	# line in RSA: <htime> SymantecServer <hhost>: <hshost>,<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{htime} SymantecServer %{hhost}: %{hshost},%{messageid}: %{message}" }
			id => "header-0030"
			add_field => {
				"[rsa][header][id]" => "0030"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00242
	# line in RSA: <hmonth> <hday> <hhour>:<hmin>:<hsec> <hhost> SymantecServer: <hshost>,<hsaddr>,<messageid>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{hhour}:%{hmin}:%{hsec} %{hhost} SymantecServer: %{hshost},%{hsaddr},%{messageid},%{message}" }
			id => "header-00242"
			add_field => {
				"[rsa][header][id]" => "00242"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00243
	# line in RSA: <htime> <hhost> SymantecServer: <hshost>,<hsaddr>,<hfld1>,<messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+SymantecServer:[\s]+(?<hshost>[^,]*),(?<hsaddr>[^,]*),(?<message>(?<hfld1>[^,]*),(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-00243"
			add_field => {
				"[rsa][header][id]" => "00243"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00244
	# line in RSA: <htime> <hhost> SymantecServer: <hshost>,<hsaddr>,<messageid>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{htime} %{hhost} SymantecServer: %{hshost},%{hsaddr},%{messageid},%{message}" }
			id => "header-00244"
			add_field => {
				"[rsa][header][id]" => "00244"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0031
	# line in RSA: %SymantecEP: <messageid>^^<hhost>^^<!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP:[\s]+(?<messageid>[^\^]*)\^\^(?<message>(?<hhost>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0031"
			add_field => {
				"[rsa][header][id]" => "0031"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0032
	# line in RSA: %SymantecEP-<hevent>: <hdomain>^^<hlevel>^^<fld1>^^<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hevent>[^:]*):[\s]+(?<hdomain>[^\^]*)\^\^(?<hlevel>[^\^]*)\^\^(?<fld1>[^\^]*)\^\^(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0032"
			add_field => {
				"[rsa][header][id]" => "0032"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0040
	# line in RSA: %SymantecEP-<hfld1>: <hfld2>^^<hfld3>^^<hfld4>^^<hfld5>^^<hfld6>^^<hfld7>^^<messageid>^^<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<message>(?<hfld2>[^\^]*)\^\^(?<hfld3>[^\^]*)\^\^(?<hfld4>[^\^]*)\^\^(?<hfld5>[^\^]*)\^\^(?<hfld6>[^\^]*)\^\^(?<hfld7>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0040"
			add_field => {
				"[rsa][header][id]" => "0040"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0033
	# line in RSA: %SymantecEP-<hevent>: <hdomain>^^<hlevel>^^<fld1>^^<messageid>.<fld2> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hevent>[^:]*):[\s]+(?<hdomain>[^\^]*)\^\^(?<hlevel>[^\^]*)\^\^(?<fld1>[^\^]*)\^\^(?<message>(?<messageid>[^\.]*)\.(?<fld2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0033"
			add_field => {
				"[rsa][header][id]" => "0033"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0034
	# line in RSA: %SymantecEP-<hevent>: <hdomain>^^<hlevel>^^<messageid>^^<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hevent>[^:]*):[\s]+(?<hdomain>[^\^]*)\^\^(?<hlevel>[^\^]*)\^\^(?<message>(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0034"
			add_field => {
				"[rsa][header][id]" => "0034"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0035
	# line in RSA: %SymantecEP-<hfld1>: <messageid>^^<hhost>^^<!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<messageid>[^\^]*)\^\^(?<message>(?<hhost>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0035"
			add_field => {
				"[rsa][header][id]" => "0035"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0038
	# line in RSA: %SymantecEP-<hfld1>: <hfld2>^^<hfld3>^^<hfld4>^^<hfld5>^^<hfld6>^^<messageid>^^<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<message>(?<hfld2>[^\^]*)\^\^(?<hfld3>[^\^]*)\^\^(?<hfld4>[^\^]*)\^\^(?<hfld5>[^\^]*)\^\^(?<hfld6>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0038"
			add_field => {
				"[rsa][header][id]" => "0038"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0041
	# line in RSA: %SymantecEP-<hfld1>: <hfld2>^^<hfld3>^^<hfld4>^^<messageid>^^<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<message>(?<hfld2>[^\^]*)\^\^(?<hfld3>[^\^]*)\^\^(?<hfld4>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0041"
			add_field => {
				"[rsa][header][id]" => "0041"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0043
	# line in RSA: %SymantecEP-<hfld1>: <hfld2>^^<hfld3>^^<hfld4>^^<hfld7>^^<messageid>^^<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<message>(?<hfld2>[^\^]*)\^\^(?<hfld3>[^\^]*)\^\^(?<hfld4>[^\^]*)\^\^(?<hfld7>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0043"
			add_field => {
				"[rsa][header][id]" => "0043"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0039
	# line in RSA: %SymantecEP-<hfld1>: <hfld2>^^<hfld3>^^<hfld4>^^<hfld5>^^<hfld6>^^<hfld7>^^<hfld8>^^<messageid>^^<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<message>(?<hfld2>[^\^]*)\^\^(?<hfld3>[^\^]*)\^\^(?<hfld4>[^\^]*)\^\^(?<hfld5>[^\^]*)\^\^(?<hfld6>[^\^]*)\^\^(?<hfld7>[^\^]*)\^\^(?<hfld8>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0039"
			add_field => {
				"[rsa][header][id]" => "0039"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0044
	# line in RSA: %SymantecEP-<hfld1>: <hfld2>^^<hfld3>^^<hfld4>^^<hfld7>^^<hfld8>^^<messageid>^^<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%SymantecEP\-(?<hfld1>[^:]*):[\s]+(?<message>(?<hfld2>[^\^]*)\^\^(?<hfld3>[^\^]*)\^\^(?<hfld4>[^\^]*)\^\^(?<hfld7>[^\^]*)\^\^(?<hfld8>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0044"
			add_field => {
				"[rsa][header][id]" => "0044"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0045
	# line in RSA: %NICWIN-4-<msgIdPart1>_<msgIdPart2>_Symantec: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NICWIN-4-%{msgIdPart1}_%{msgIdPart2}_Symantec: %{message}" }
			id => "header-0045"
			add_field => {
				"[rsa][header][id]" => "0045"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0046
	# line in RSA: %NICWIN-4-<messageid>_<hfld2>_Symantec AntiVirus: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NICWIN-4-%{messageid}_%{hfld2}_Symantec AntiVirus: %{message}" }
			id => "header-0046"
			add_field => {
				"[rsa][header][id]" => "0046"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_symantecavmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Active" {
		# MESSAGE Active
		# line in RSA: Active Response that started at <fld1> is disengaged. The traffic from IP address <hostip> was blocked for <fld2> second(s).,Local:  <saddr>,Local: <fld7>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,<protocol>,<direction>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,{ Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>| Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Active[\s]+Response[\s]+that[\s]+started[\s]+at[\s]+(?<fld1>[^\s]*)[\s]+is[\s]+disengaged\.[\s]+The[\s]+traffic[\s]+from[\s]+IP[\s]+address[\s]+(?<hostip>[^\s]*)[\s]+was[\s]+blocked[\s]+for[\s]+(?<fld2>[^\s]*)[\s]+second\(s\)\.,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld7>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),(?<protocol>[^,]*),(?<direction>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Active"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address blocked."
					"[event][id]" => "Active"
					"[rsa][message][id1]" => "Active"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Active:01
		# line in RSA: Active Response that started at <fld1> is disengaged. The traffic from IP address <hostip> was blocked for <duration> second(s).  ,Local:  <saddr>,Local: <fld7>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,<protocol>,<direction>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,{ Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>| Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Active[\s]+Response[\s]+that[\s]+started[\s]+at[\s]+(?<fld1>[^\s]*)[\s]+is[\s]+disengaged\.[\s]+The[\s]+traffic[\s]+from[\s]+IP[\s]+address[\s]+(?<hostip>[^\s]*)[\s]+was[\s]+blocked[\s]+for[\s]+(?<duration>[^\s]*)[\s]+second\(s\)\.[\s]+,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld7>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),(?<protocol>[^,]*),(?<direction>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Active:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address blocked."
					"[event][id]" => "Active:01"
					"[rsa][message][id1]" => "Active:01"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Administrator" {
		# MESSAGE Administrator
		# line in RSA: Administrator logout
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administrator logout" }
				id => "message-Administrator"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Administrator logout."
					"[event][id]" => "Administrator"
					"[rsa][message][id1]" => "Administrator"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Administrator:01
		# line in RSA: Administrator<space>log on failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administrator%{space}log on failed" }
				id => "message-Administrator:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Administrator log on failed."
					"[event][id]" => "Administrator:01"
					"[rsa][message][id1]" => "Administrator:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Administrator:02
		# line in RSA: Administrator<space>log on succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administrator%{space}log on succeeded" }
				id => "message-Administrator:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Administrator log on succeeded."
					"[event][id]" => "Administrator:02"
					"[rsa][message][id1]" => "Administrator:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "password" {
		# MESSAGE Administrator:03
		# line in RSA: password of System administrator '<username>' has been changed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "password of System administrator '%{username}' has been changed." }
				id => "message-Administrator:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Password of System administrator has been changed."
					"[event][id]" => "Administrator:03"
					"[rsa][message][id1]" => "Administrator:03"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE password
		# line in RSA: password of  administrator "<c_username>" was changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "password of  administrator \"%{c_username}\" was changed" }
				id => "message-password"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Password of administrator changed."
				"username" => "%{husername}"
					"[event][id]" => "password"
					"[rsa][message][id1]" => "password"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE password:01
		# line in RSA: password of System administrator "<c_username>" has been changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "password of System administrator \"%{c_username}\" has been changed" }
				id => "message-password:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Password of System administrator has been changed."
				"username" => "%{husername}"
					"[event][id]" => "password:01"
					"[rsa][message][id1]" => "password:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "allowed" {
		# MESSAGE allowed
		# line in RSA: <fld6> detected.  Traffic has been allowed from this application: <fld1>,Local:  <daddr>,Local: <fld7>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID:<fld23>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld6} detected.  Traffic has been allowed from this application: %{fld1},Local:  %{daddr},Local: %{fld7},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},Inbound,%{protocol},Intrusion ID:%{fld23},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain}" }
				id => "message-allowed"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been allowed from this process."
				"direction" => "Inbound"
					"[event][id]" => "allowed"
					"[rsa][message][id1]" => "allowed"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE allowed:11
		# line in RSA: <fld6> detected.  Traffic has been allowed from this application: <fld1>,Local:  <saddr>,Local: <fld7>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID:<fld23>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld6} detected.  Traffic has been allowed from this application: %{fld1},Local:  %{saddr},Local: %{fld7},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},Outbound,%{protocol},Intrusion ID:%{fld23},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain}" }
				id => "message-allowed:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been allowed from this process."
				"direction" => "Outbound"
					"[event][id]" => "allowed:11"
					"[rsa][message][id1]" => "allowed:11"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Malicious" {
		# MESSAGE Malicious
		# line in RSA: Malicious Site: Malicious Web Site, Domain, or URL (<fld11>) attack blocked. Traffic has been blocked for this application: <fld12>",Local:  <daddr>,Local: <fld7>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID:<fld23>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld39>,User: <username>,Domain: <domain>,!ExternalLoggingTask.localport! <dport>,!ExternalLoggingTask.remoteport! <sport>,!ExternalLoggingTask.cidssignid! <sigid>,"!ExternalLoggingTask.strcidssignid! <sigid_string>",!ExternalLoggingTask.cidssignsubid! <sigid1>,!ExternalLoggingTask.intrusionurl! <url>,!ExternalLoggingTask.intrusionpayloadurl! <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Malicious Site: Malicious Web Site, Domain, or URL (%{fld11}) attack blocked. Traffic has been blocked for this application: %{fld12}\",Local:  %{daddr},Local: %{fld7},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},Inbound,%{protocol},Intrusion ID:%{fld23},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld39},User: %{username},Domain: %{domain},!ExternalLoggingTask.localport! %{dport},!ExternalLoggingTask.remoteport! %{sport},!ExternalLoggingTask.cidssignid! %{sigid},\"!ExternalLoggingTask.strcidssignid! %{sigid_string}\",!ExternalLoggingTask.cidssignsubid! %{sigid1},!ExternalLoggingTask.intrusionurl! %{url},!ExternalLoggingTask.intrusionpayloadurl! %{fld33}" }
				id => "message-Malicious"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Deny"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked for this application."
				"direction" => "Inbound"
					"[event][id]" => "Malicious"
					"[rsa][message][id1]" => "Malicious"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Malicious:01
		# line in RSA: Malicious Site: Malicious Web Site, Domain, or URL (<fld11>) attack blocked. Traffic has been blocked for this application: <fld12>",Local:  <saddr>,Local: <fld7>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID:<fld23>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld39>,User: <username>,Domain: <domain>,!ExternalLoggingTask.localport! <sport>,!ExternalLoggingTask.remoteport! <dport>,!ExternalLoggingTask.cidssignid! <sigid>,"!ExternalLoggingTask.strcidssignid! <sigid_string>",!ExternalLoggingTask.cidssignsubid! <sigid1>,!ExternalLoggingTask.intrusionurl! <url>,!ExternalLoggingTask.intrusionpayloadurl! <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Malicious Site: Malicious Web Site, Domain, or URL (%{fld11}) attack blocked. Traffic has been blocked for this application: %{fld12}\",Local:  %{saddr},Local: %{fld7},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},Outbound,%{protocol},Intrusion ID:%{fld23},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld39},User: %{username},Domain: %{domain},!ExternalLoggingTask.localport! %{sport},!ExternalLoggingTask.remoteport! %{dport},!ExternalLoggingTask.cidssignid! %{sigid},\"!ExternalLoggingTask.strcidssignid! %{sigid_string}\",!ExternalLoggingTask.cidssignsubid! %{sigid1},!ExternalLoggingTask.intrusionurl! %{url},!ExternalLoggingTask.intrusionpayloadurl! %{fld33}" }
				id => "message-Malicious:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Deny"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked for this application."
				"direction" => "Outbound"
					"[event][id]" => "Malicious:01"
					"[rsa][message][id1]" => "Malicious:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Malicious:02
		# line in RSA: Malicious Site: Malicious Web Site, Domain, or URL (<fld11>) attack blocked. Traffic has been blocked for this application: <fld12>",Local: <saddr>,Local: <fld7>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Inbound,{<protocol>,Intrusion ID:<fld23>|<protocol>},Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld39>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,"CIDS Signature string: <sigid_string>",CIDS Signature SubID: <fld29>,Intrusion URL:<fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Malicious[\s]+Site:[\s]+Malicious[\s]+Web[\s]+Site,[\s]+Domain,[\s]+or[\s]+URL[\s]+\((?<fld11>[^\)]*)\)[\s]+attack[\s]+blocked\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+for[\s]+this[\s]+application:[\s]+(?<fld12>[^\"]*)\",Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld7>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,((?<protocol>[^,]*),Intrusion[\s]+ID:(?<fld23>[^,]*)|(?<protocol>[^,]*)),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld39>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),\"CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^\"]*)\",CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld29>[^,]*),Intrusion[\s]+URL:(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Malicious:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
				"event_description" => "Malicious Site: Malicious Web Site, Domain, or URL attcak blocked"
					"[event][id]" => "Malicious:02"
					"[rsa][message][id1]" => "Malicious:02"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Antivirus" {
		# MESSAGE Antivirus
		# line in RSA: <product> definitions <info> failed to update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{product} definitions %{info} failed to update." }
				id => "message-Antivirus"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "ALM"
				"ec_subject" => "SignatureDB"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Product definition failed to update."
					"[event][id]" => "Antivirus"
					"[rsa][message][id1]" => "Antivirus"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Antivirus:01
		# line in RSA: <product> definitions <info> is up-to-date.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{product} definitions %{info} is up-to-date." }
				id => "message-Antivirus:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Product definitions are up-to-date."
					"[event][id]" => "Antivirus:01"
					"[rsa][message][id1]" => "Antivirus:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Antivirus:02
		# line in RSA: <product> definitions <info> was successfully updated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{product} definitions %{info} was successfully updated." }
				id => "message-Antivirus:02"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "SignatureDB"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Product definitions was successfully updated."
					"[event][id]" => "Antivirus:02"
					"[rsa][message][id1]" => "Antivirus:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Somebody" {
		# MESSAGE Somebody
		# line in RSA: <event_description>",Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,1,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,{ Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>| Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\"]*)\",Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),1,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Somebody"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Somebody"
					"[rsa][message][id1]" => "Somebody"
					"[event][categoryid]" => "1103000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Somebody:01
		# line in RSA: <event_description>",Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,0,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,{ Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>| Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\"]*)\",Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),0,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Somebody:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Somebody:01"
					"[rsa][message][id1]" => "Somebody:01"
					"[event][categoryid]" => "1103000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Somebody:02
		# line in RSA: <event_description>",Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,2,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,{ Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>| Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\"]*)\",Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),2,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Somebody:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Somebody:02"
					"[rsa][message][id1]" => "Somebody:02"
					"[event][categoryid]" => "1103000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Application" {
		# MESSAGE Application
		# line in RSA: <fld44>,Application and Device Control is ready,<fld8>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<fld4>,<fld5>,<fld6>,<fld7>,User: <username>,{Domain: <domain>,Action Type:<fld46>,File size (<fld10>): <filename_size>,Device ID: <device>|Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld44>[^,]*),Application[\s]+and[\s]+Device[\s]+Control[\s]+is[\s]+ready,(?<fld8>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<fld4>[^,]*),(?<fld5>[^,]*),(?<fld6>[^,]*),(?<fld7>[^,]*),User:[\s]+(?<username>[^,]*),(Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:(?<fld46>[^,]*),File[\s]+size[\s]+\((?<fld10>[^\)]*)\):[\s]+(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)|Domain:[\s]+(?<domain>.*))$" }
				id => "message-Application"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Application and Device Control is ready."
					"[event][id]" => "Application"
					"[rsa][message][id1]" => "Application"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Application:01
		# line in RSA: <fld44>,Application and Device Control engine is not verified,<fld1>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<fld4>,<fld5>,<fld6>,<fld7>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld44},Application and Device Control engine is not verified,%{fld1},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{fld4},%{fld5},%{fld6},%{fld7},User: %{username},Domain: %{domain}" }
				id => "message-Application:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Application and Device Control engine is not verified."
					"[event][id]" => "Application:01"
					"[rsa][message][id1]" => "Application:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Application:02
		# line in RSA: <fld44>Blocked,[<fld5>] <event_description> - Caller MD5=<fld6>,Create Process,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld44}Blocked,[%{fld5}] %{event_description} - Caller MD5=%{fld6},Create Process,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld45}" }
				id => "message-Application:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Deny"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Application:02"
					"[rsa][message][id1]" => "Application:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Application:03
		# line in RSA: Application,rn=<fld1> cid=<fld2> eid=<fld3>,<fld4> <fld5>,<fld6>,Symantec AntiVirus,<hostname>,Classic,<shost>,<event_description>,, Scan Complete: Risks: <fld7> Scanned: <fld8> Omitted: <fld9> Trusted Files Skipped: <fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Application,rn=%{fld1} cid=%{fld2} eid=%{fld3},%{fld4} %{fld5},%{fld6},Symantec AntiVirus,%{hostname},Classic,%{shost},%{event_description},, Scan Complete: Risks: %{fld7} Scanned: %{fld8} Omitted: %{fld9} Trusted Files Skipped: %{fld10}" }
				id => "message-Application:03"
				add_field => {
					"[event][id]" => "Application:03"
					"[rsa][message][id1]" => "Application:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application:04
		# line in RSA: Application,rn=<fld1> cid=<fld2> eid=<fld3>,<fld4> <fld5>,<fld6>,Symantec AntiVirus,<hostname>,Classic,<shost>,<event_description>,, <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Application,rn=%{fld1} cid=%{fld2} eid=%{fld3},%{fld4} %{fld5},%{fld6},Symantec AntiVirus,%{hostname},Classic,%{shost},%{event_description},, %{info}." }
				id => "message-Application:04"
				add_field => {
					"[event][id]" => "Application:04"
					"[rsa][message][id1]" => "Application:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application:05
		# line in RSA: Application,rn=<fld1> cid=<fld2> eid=<fld3>,<fld4> <fld5>,<fld6>,Symantec AntiVirus,<hostname>,Classic,<shost>,<fld22>,,<space>Proactive Threat Protection has been disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Application,rn=%{fld1} cid=%{fld2} eid=%{fld3},%{fld4} %{fld5},%{fld6},Symantec AntiVirus,%{hostname},Classic,%{shost},%{fld22},,%{space}Proactive Threat Protection has been disabled" }
				id => "message-Application:05"
				add_field => {
				"ec_activity" => "Disable"
				"event_description" => "Proactive Threat Protection has been disabled"
					"[event][id]" => "Application:05"
					"[rsa][message][id1]" => "Application:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SHA-256:" {
		# MESSAGE Application:07
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,"Application has changed since the last time you opened it, process id:<process_id>  Filename: <fld8> The change was denied by user.",Local: <daddr>,Local: <fld12>,Remote: <fld15>,Remote: <saddr>,Remote: <fld11>,Inbound,<protocol>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SHA-256:%{checksum},MD-5:%{checksum},\"Application has changed since the last time you opened it, process id:%{process_id}  Filename: %{fld8} The change was denied by user.\",Local: %{daddr},Local: %{fld12},Remote: %{fld15},Remote: %{saddr},Remote: %{fld11},Inbound,%{protocol},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Application:07"
				add_field => {
				"direction" => "Inbound"
				"event_description" => "Application has changed since the last time you opened it"
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "Application:07"
					"[rsa][message][id1]" => "Application:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Application:06
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,"Application has changed since the last time you opened it, process id: <process_id>  Filename: <filename> <fld1>",Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\"Application[\s]+has[\s]+changed[\s]+since[\s]+the[\s]+last[\s]+time[\s]+you[\s]+opened[\s]+it,[\s]+process[\s]+id:[\s]+(?<process_id>[^\s]*)[\s]+Filename:[\s]+(?<filename>[^\s]*)[\s]+(?<fld1>[^\"]*)\",Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Application:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
				"event_description" => "Application has changed since the last time you opened it"
					"[event][id]" => "Application:06"
					"[rsa][message][id1]" => "Application:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE REMEDIATION
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,REMEDIATION WAS NEEDED - <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Unknown,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),REMEDIATION[\s]+WAS[\s]+NEEDED[\s]+\-[\s]+(?<event_description>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Unknown,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-REMEDIATION"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "REMEDIATION"
					"[rsa][message][id1]" => "REMEDIATION"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE blocked:06
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] <category>: <event_description> Traffic has been blocked for this application:<fld27>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(?<category>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+for[\s]+this[\s]+application:(?<fld27>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-blocked:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Inbound"
					"[event][id]" => "blocked:06"
					"[rsa][message][id1]" => "blocked:06"
					"[event][categoryid]" => "1001020305"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE blocked:16
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] <category>: <event_description> Traffic has been blocked for this application:<fld27>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(?<category>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+for[\s]+this[\s]+application:(?<fld27>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-blocked:16"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Outbound"
					"[event][id]" => "blocked:16"
					"[rsa][message][id1]" => "blocked:16"
					"[event][categoryid]" => "1001020305"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE scanning:01
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum> ,"Somebody is scanning your computer.  Your computer's TCP ports:   <fld60>, <fld61>, <fld62>, <fld63> and <fld64> have been scanned from <fld65>.",Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,\"Somebody[\s]+is[\s]+scanning[\s]+your[\s]+computer\.[\s]+Your[\s]+computer's[\s]+TCP[\s]+ports:[\s]+(?<fld60>[^,]*),[\s]+(?<fld61>[^,]*),[\s]+(?<fld62>[^,]*),[\s]+(?<fld63>[^\s]*)[\s]+and[\s]+(?<fld64>[^\s]*)[\s]+have[\s]+been[\s]+scanned[\s]+from[\s]+(?<fld65>[^\.]*)\.\",Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-scanning:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Somebody is scanning your computer."
				"direction" => "Outbound"
					"[event][id]" => "scanning:01"
					"[rsa][message][id1]" => "scanning:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE scanning
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum> ,"Somebody is scanning your computer.  Your computer's TCP ports:   <fld60>, <fld61>, <fld62>, <fld63> and <fld64> have been scanned from <fld65>.",Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,\"Somebody[\s]+is[\s]+scanning[\s]+your[\s]+computer\.[\s]+Your[\s]+computer's[\s]+TCP[\s]+ports:[\s]+(?<fld60>[^,]*),[\s]+(?<fld61>[^,]*),[\s]+(?<fld62>[^,]*),[\s]+(?<fld63>[^\s]*)[\s]+and[\s]+(?<fld64>[^\s]*)[\s]+have[\s]+been[\s]+scanned[\s]+from[\s]+(?<fld65>[^\.]*)\.\",Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-scanning"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Somebody is scanning your computer."
				"direction" => "Inbound"
					"[event][id]" => "scanning"
					"[rsa][message][id1]" => "scanning"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Informational
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum> ,Informational: File Download Hash,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,{ Domain: |Domain:} <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Informational:[\s]+File[\s]+Download[\s]+Hash,Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:[\s]+|Domain:)[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Informational"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Informational: File Download Hash."
				"direction" => "Inbound"
					"[event][id]" => "Informational"
					"[rsa][message][id1]" => "Informational"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Informational:01
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum> ,Informational: File Download Hash,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Informational:[\s]+File[\s]+Download[\s]+Hash,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Informational:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Informational: File Download Hash."
				"direction" => "Outbound"
					"[event][id]" => "Informational:01"
					"[rsa][message][id1]" => "Informational:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE SHA-256::01
		# line in RSA: <shost>, SHA-256:<checksum>,MD-5:<checksum>,CCD Notification: REMEDIATION NOT REQUIRED,Local: <saddr>,Local: <fld1>,Remote:<fld2>,Remote: <daddr>,Remote: <fld3>,Unknown,OTHERS,,Begin: <fld50><fld52>,End: <fld51><fld53>,Occurrences: <dclass_counter1>,Application:<fld6>,Location: <fld7>,User: <username>, Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string:<sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<url>,Intrusion Payload URL:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}, SHA-256:%{checksum},MD-5:%{checksum},CCD Notification: REMEDIATION NOT REQUIRED,Local: %{saddr},Local: %{fld1},Remote:%{fld2},Remote: %{daddr},Remote: %{fld3},Unknown,OTHERS,,Begin: %{fld50}%{fld52},End: %{fld51}%{fld53},Occurrences: %{dclass_counter1},Application:%{fld6},Location: %{fld7},User: %{username}, Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string:%{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL:%{url},Intrusion Payload URL:" }
				id => "message-SHA-256::01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "CCD Notification: REMEDIATION NOT REQUIRED"
				"direction" => "Unknown"
					"[event][id]" => "SHA-256::01"
					"[rsa][message][id1]" => "SHA-256::01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack
		# line in RSA: <fld3>, SHA-256:<checksum>,MD-5:<checksum> ,Web Attack : Malvertisement Website Redirect <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^,]*),[\s]+SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Web[\s]+Attack[\s]+:[\s]+Malvertisement[\s]+Website[\s]+Redirect[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack : Malvertisement Website Redirect"
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack"
					"[rsa][message][id1]" => "Web_Attack"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:13
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Web Attack: Fake Flash Player Download <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Web[\s]+Attack:[\s]+Fake[\s]+Flash[\s]+Player[\s]+Download[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack : Fake Flash Player Download"
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:13"
					"[rsa][message][id1]" => "Web_Attack:13"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:16
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] {Web Attack : | Web Attack:} JSCoinminer Download <fld21> attack blocked. Traffic has been blocked for this application: <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,OTHERS,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,"Intrusion URL: <url>",Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(Web[\s]+Attack[\s]+:[\s]+|[\s]*Web[\s]+Attack:)[\s]+JSCoinminer[\s]+Download[\s]+(?<fld21>[^\s]*)[\s]+attack[\s]+blocked\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+for[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,OTHERS,,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Web_Attack:16"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "JSCoinminer Download attack blocked."
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:16"
					"[rsa][message][id1]" => "Web_Attack:16"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:03
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum> ,[SID: <fld26>] Web Attack: Apache Struts2 devMode OGNL Execution attack detected but not blocked. <fld1>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,"Intrusion URL: <url>",Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SHA-256:%{checksum},MD-5:%{checksum} ,[SID: %{fld26}] Web Attack: Apache Struts2 devMode OGNL Execution attack detected but not blocked. %{fld1},Local: %{saddr},Local: %{fld12},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},Outbound,%{protocol},Intrusion ID: %{fld52},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},\"Intrusion URL: %{url}\",Intrusion Payload URL:%{fld25}" }
				id => "message-Web_Attack:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack: Apache Struts2 devMode OGNL Execution attack detected but not blocked."
				"direction" => "Outbound"
					"[event][id]" => "Web_Attack:03"
					"[rsa][message][id1]" => "Web_Attack:03"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:15
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] Web Attack : Malvertisement Website Redirect <fld2> attack blocked. Traffic has been blocked for this application: <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,OTHERS,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,"Intrusion URL: <url>",Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SHA-256:%{checksum},MD-5:%{checksum},[SID: %{fld26}] Web Attack : Malvertisement Website Redirect %{fld2} attack blocked. Traffic has been blocked for this application: %{fld1},Local: %{daddr},Local: %{fld12},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},Inbound,OTHERS,,Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},\"Intrusion URL: %{url}\",Intrusion Payload URL:%{fld25}" }
				id => "message-Web_Attack:15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Malvertisement Website Redirect "
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:15"
					"[rsa][message][id1]" => "Web_Attack:15"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:11
		# line in RSA: <fld3>, SHA-256:<checksum>,MD-5:<checksum> ,Web Attack : Malvertisement Website Redirect <fld1>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^,]*),[\s]+SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Web[\s]+Attack[\s]+:[\s]+Malvertisement[\s]+Website[\s]+Redirect[\s]+(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack : Malvertisement Website Redirect"
				"direction" => "Outbound"
					"[event][id]" => "Web_Attack:11"
					"[rsa][message][id1]" => "Web_Attack:11"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:01
		# line in RSA: <fld3>, SHA-256:<checksum>,MD-5:<checksum> ,Web Attack: Mass Injection Website <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^,]*),[\s]+SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Web[\s]+Attack:[\s]+Mass[\s]+Injection[\s]+Website[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack: Mass Injection Website."
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:01"
					"[rsa][message][id1]" => "Web_Attack:01"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:12
		# line in RSA: <fld3>, SHA-256:<checksum>,MD-5:<checksum> ,Web Attack: Mass Injection Website <fld1>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^,]*),[\s]+SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Web[\s]+Attack:[\s]+Mass[\s]+Injection[\s]+Website[\s]+(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack: Mass Injection Website."
				"direction" => "Outbound"
					"[event][id]" => "Web_Attack:12"
					"[rsa][message][id1]" => "Web_Attack:12"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:14
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Web Attack: Mass Injection Website <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Web[\s]+Attack:[\s]+Mass[\s]+Injection[\s]+Website[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:14"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack : Mass Injection Website"
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:14"
					"[rsa][message][id1]" => "Web_Attack:14"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:17
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Web Attack : Malvertisement Website Redirect <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Web[\s]+Attack[\s]+:[\s]+Malvertisement[\s]+Website[\s]+Redirect[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:17"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack: Malvertisement Website Redirect."
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:17"
					"[rsa][message][id1]" => "Web_Attack:17"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Web_Attack:18
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Web Attack: Fake Tech Support Website <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Web[\s]+Attack:[\s]+Fake[\s]+Tech[\s]+Support[\s]+Website[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Web_Attack:18"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Web Attack: Fake Tech Support Website"
				"direction" => "Inbound"
					"[event][id]" => "Web_Attack:18"
					"[rsa][message][id1]" => "Web_Attack:18"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE App_Attack
		# line in RSA: <fld3>, SHA-256:<checksum>,MD-5:<checksum>,Fake App Attack: Misleading Application Website<fld1>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^,]*),[\s]+SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Fake[\s]+App[\s]+Attack:[\s]+Misleading[\s]+Application[\s]+Website(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-App_Attack"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Fake App Attack: Misleading Application Website."
				"direction" => "Outbound"
					"[event][id]" => "App_Attack"
					"[rsa][message][id1]" => "App_Attack"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE App_Attack:02
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Fake App Attack: Misleading Application Website<fld1>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Fake[\s]+App[\s]+Attack:[\s]+Misleading[\s]+Application[\s]+Website(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-App_Attack:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Fake App Attack: Misleading Application Website."
				"direction" => "Outbound"
					"[event][id]" => "App_Attack:02"
					"[rsa][message][id1]" => "App_Attack:02"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE App_Attack:01
		# line in RSA: <fld3>, SHA-256:<checksum>,MD-5:<checksum> ,Fake App Attack: Misleading Application Website<fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^,]*),[\s]+SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^\s]*)[\s]+,Fake[\s]+App[\s]+Attack:[\s]+Misleading[\s]+Application[\s]+Website(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-App_Attack:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Fake App Attack: Misleading Application Website."
				"direction" => "Inbound"
					"[event][id]" => "App_Attack:01"
					"[rsa][message][id1]" => "App_Attack:01"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Host_Integrity
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,The most recent Host Integrity content has not completed a download or cannot be authenticated.,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Unknown,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),The[\s]+most[\s]+recent[\s]+Host[\s]+Integrity[\s]+content[\s]+has[\s]+not[\s]+completed[\s]+a[\s]+download[\s]+or[\s]+cannot[\s]+be[\s]+authenticated\.,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Unknown,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Host_Integrity"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The most recent Host Integrity content has not completed a download or cannot be authenticated."
					"[event][id]" => "Host_Integrity"
					"[rsa][message][id1]" => "Host_Integrity"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE process:12
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,{""|"}<event_description>, process id: <process_id>  Filename: <filename>  The change was allowed by profile<fld6>{""|"},Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,{Intrusion ID: <fld33>|<fld33>},Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),(\"\"|\")(?<event_description>[^,]*),[\s]+process[\s]+id:[\s]+(?<process_id>[^\s]*)[\s]+Filename:[\s]+(?<filename>[^\s]*)[\s]+The[\s]+change[\s]+was[\s]+allowed[\s]+by[\s]+profile(?<fld6>[^\"\"]*)(\"\"|\"),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),(Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*)|(?<fld33>[^,]*)),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-process:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
					"[event][id]" => "process:12"
					"[rsa][message][id1]" => "process:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Audit:01
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] <category>: <event_description>attack detected but not blocked. Application path:<fld27>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(?<category>[^:]*):[\s]+(?<event_description>[^a]*)attack[\s]+detected[\s]+but[\s]+not[\s]+blocked\.[\s]+Application[\s]+path:(?<fld27>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Audit:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"result" => "Traffic has not been blocked from application."
				"direction" => "Inbound"
					"[event][id]" => "Audit:01"
					"[rsa][message][id1]" => "Audit:01"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Audit:11
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] <category>: <event_description>attack detected but not blocked. Application path:<fld27>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(?<category>[^:]*):[\s]+(?<event_description>[^a]*)attack[\s]+detected[\s]+but[\s]+not[\s]+blocked\.[\s]+Application[\s]+path:(?<fld27>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Audit:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"result" => "Traffic has not been blocked from application."
				"direction" => "Outbound"
					"[event][id]" => "Audit:11"
					"[rsa][message][id1]" => "Audit:11"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Audit:02
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] <category>: <event_description>. Traffic has been blocked for this application:<fld27>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,<fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(?<category>[^:]*):[\s]+(?<event_description>[^\.]*)\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+for[\s]+this[\s]+application:(?<fld27>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Audit:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"result" => "Traffic has been blocked from application."
				"direction" => "Inbound"
					"[event][id]" => "Audit:02"
					"[rsa][message][id1]" => "Audit:02"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Audit:12
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld26>] <category>: <event_description>. Traffic has been blocked for this application:<fld27>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,<fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld26>[^\]]*)\][\s]+(?<category>[^:]*):[\s]+(?<event_description>[^\.]*)\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+for[\s]+this[\s]+application:(?<fld27>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Audit:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"result" => "Traffic has been blocked from application."
				"direction" => "Outbound"
					"[event][id]" => "Audit:12"
					"[rsa][message][id1]" => "Audit:12"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Attack:03
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld111>] <category>:<event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld111>[^\]]*)\][\s]+(?<category>[^:]*):(?<event_description>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Attack:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
					"[event][id]" => "Attack:03"
					"[rsa][message][id1]" => "Attack:03"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Attack:02
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,[SID: <fld111>] <category>:<event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),\[SID:[\s]+(?<fld111>[^\]]*)\][\s]+(?<category>[^:]*):(?<event_description>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Attack:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
					"[event][id]" => "Attack:02"
					"[rsa][message][id1]" => "Attack:02"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Auto-block
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Auto-Block Event,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Auto\-Block[\s]+Event,Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Auto-block"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
					"[event][id]" => "Auto-block"
					"[rsa][message][id1]" => "Auto-block"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Denial
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Denial of Service 'Smurf' attack detected. Description:  <info>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Denial[\s]+of[\s]+Service[\s]+'Smurf'[\s]+attack[\s]+detected\.[\s]+Description:[\s]+(?<info>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Denial"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
				"event_description" => "Denial of Service 'Smurf' attack detected."
					"[event][id]" => "Denial"
					"[rsa][message][id1]" => "Denial"
					"[event][categoryid]" => "1002000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Denial:01
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Denial of Service 'Smurf' attack detected. Description:  <info>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Denial[\s]+of[\s]+Service[\s]+'Smurf'[\s]+attack[\s]+detected\.[\s]+Description:[\s]+(?<info>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Denial:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
				"event_description" => "Denial of Service 'Smurf' attack detected."
					"[event][id]" => "Denial:01"
					"[rsa][message][id1]" => "Denial:01"
					"[event][categoryid]" => "1002000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Denial:02
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,'Denial of Service ''Smurf'' attack detected. Description:  <info>',Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),'Denial[\s]+of[\s]+Service[\s]+''Smurf''[\s]+attack[\s]+detected\.[\s]+Description:[\s]+(?<info>[^']*)',Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Denial:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
				"event_description" => "Denial of Service 'Smurf' attack detected."
					"[event][id]" => "Denial:02"
					"[rsa][message][id1]" => "Denial:02"
					"[event][categoryid]" => "1002000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Denial:03
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,'Denial of Service ''Smurf'' attack detected. Description:  <info>',Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),'Denial[\s]+of[\s]+Service[\s]+''Smurf''[\s]+attack[\s]+detected\.[\s]+Description:[\s]+(?<info>[^']*)',Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Denial:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
				"event_description" => "Denial of Service 'Smurf' attack detected."
					"[event][id]" => "Denial:03"
					"[rsa][message][id1]" => "Denial:03"
					"[event][categoryid]" => "1002000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Host:18
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,'Host Integrity check passed<space>Requirement: <fld11> passed ',Local: <saddr>,Local: <fld3>,Remote: <fld41>,Remote: <daddr>,Remote: <fld55>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SHA-256:%{checksum},MD-5:%{checksum},'Host Integrity check passed%{space}Requirement: %{fld11} passed ',Local: %{saddr},Local: %{fld3},Remote: %{fld41},Remote: %{daddr},Remote: %{fld55},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL:%{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:18"
				add_field => {
				"hostip" => "%{hhostip}"
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check passed"
					"[event][id]" => "Host:18"
					"[rsa][message][id1]" => "Host:18"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:19
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,'Host Integrity check failed   Requirement: ''<fld11>'' passed   Requirement: ''<fld12>'' failed ',Local: <saddr>,Local: <fld3>,Remote: <fld41>,Remote: <daddr>,Remote: <fld55>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SHA-256:%{checksum},MD-5:%{checksum},'Host Integrity check failed   Requirement: ''%{fld11}'' passed   Requirement: ''%{fld12}'' failed ',Local: %{saddr},Local: %{fld3},Remote: %{fld41},Remote: %{daddr},Remote: %{fld55},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL:%{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:19"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check failed."
					"[event][id]" => "Host:19"
					"[rsa][message][id1]" => "Host:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DLP_version
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,DLP version is latest,Local: <saddr>,Local: <fld3>,Remote: <fld41>,Remote: <daddr>,Remote: <fld55>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SHA-256:%{checksum},MD-5:%{checksum},DLP version is latest,Local: %{saddr},Local: %{fld3},Remote: %{fld41},Remote: %{daddr},Remote: %{fld55},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL:%{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-DLP_version"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
				"event_description" => "DLP version is latest"
					"[event][id]" => "DLP_version"
					"[rsa][message][id1]" => "DLP_version"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Brute_force
		# line in RSA: SHA-256:<checksum>,MD-5:<checksum>,Brute force remote login,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld27>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>",Intrusion Payload URL:<fld25>|Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SHA\-256:(?<checksum>[^,]*),MD\-5:(?<checksum>[^,]*),Brute[\s]+force[\s]+remote[\s]+login,Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld27>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\",Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Brute_force"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
				"event_description" => "Brute force remote login"
					"[event][id]" => "Brute_force"
					"[rsa][message][id1]" => "Brute_force"
					"[event][categoryid]" => "1101010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Applied" {
		# MESSAGE Applied
		# line in RSA: Applied new policy with <info>{successfully.,Event time:<fld17><fld18>|successfully.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Smc:04
		# line in RSA: Applied new profile with serial number <fld23> successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Applied new profile with serial number %{fld23} successfully." }
				id => "message-Smc:04"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Applied new profile successfully."
					"[event][id]" => "Smc:04"
					"[rsa][message][id1]" => "Smc:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: Add shared policy upon system install,LiveUpdate Settings policy
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "Add shared policy upon system install,LiveUpdate Settings policy" }
			id => "msgParserId22"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Add shared policy upon system install,LiveUpdate Settings policy."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "blocked" {
		# MESSAGE blocked:01
		# line in RSA:  System Infected: <threat_name>  detected.  Traffic has been blocked from this application: <fld1>,Local:  <saddr>,Local: <fld12>,Remote: <fld15>,Remote: <daddr>,Remote: <fld51>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld2>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*System[\s]+Infected:[\s]+(?<threat_name>[^\s]*)[\s]+detected\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+from[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-blocked:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Outbound"
					"[event][id]" => "blocked:01"
					"[rsa][message][id1]" => "blocked:01"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE blocked:12
		# line in RSA:  System Infected: <threat_name>  detected.  Traffic has been blocked from this application: <fld1>,Local:  <daddr>,Local: <fld12>,Remote: <fld15>,Remote: <saddr>,Remote: <fld51>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld2>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*System[\s]+Infected:[\s]+(?<threat_name>[^\s]*)[\s]+detected\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+from[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-blocked:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Inbound"
					"[event][id]" => "blocked:12"
					"[rsa][message][id1]" => "blocked:12"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE blocked:05
		# line in RSA:  <fld28> detected.  Traffic has been blocked from this application: <fld1>,Local:  <saddr>,Local: <fld12>,Remote: <daddr>,Remote: <fld15>,Remote: <fld51>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld2>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld28>[^\s]*)[\s]+detected\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+from[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-blocked:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Outbound"
					"[event][id]" => "blocked:05"
					"[rsa][message][id1]" => "blocked:05"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE blocked:15
		# line in RSA:  <fld28> detected.  Traffic has been blocked from this application: <fld1>,Local:  <daddr>,Local: <fld12>,Remote: <saddr>,Remote: <fld15>,Remote: <fld51>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld2>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld28>[^\s]*)[\s]+detected\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+from[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-blocked:15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Inbound"
					"[event][id]" => "blocked:15"
					"[rsa][message][id1]" => "blocked:15"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE blocked
		# line in RSA:  <fld28> detected.  Traffic has been blocked from this application: <fld1>,Local:  <saddr>,Local: <fld12>,Remote: <fld15>,Remote: <daddr>,Remote: <fld51>,Outbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld2>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld28>[^\s]*)[\s]+detected\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+from[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*)$" }
				id => "message-blocked"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Outbound"
					"[event][id]" => "blocked"
					"[rsa][message][id1]" => "blocked"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE blocked:11
		# line in RSA:  <fld28> detected.  Traffic has been blocked from this application: <fld1>,Local:  <daddr>,Local: <fld12>,Remote: <fld15>,Remote: <saddr>,Remote: <fld51>,Inbound,<protocol>,Intrusion ID: <fld52>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld2>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld28>[^\s]*)[\s]+detected\.[\s]+Traffic[\s]+has[\s]+been[\s]+blocked[\s]+from[\s]+this[\s]+application:[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld52>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*)$" }
				id => "message-blocked:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic has been blocked from application."
				"direction" => "Inbound"
					"[event][id]" => "blocked:11"
					"[rsa][message][id1]" => "blocked:11"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Local:" {
		# MESSAGE Host_Integrity:01
		# line in RSA: The most recent Host Integrity content has not completed a download or cannot be authenticated.,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Unknown,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+most[\s]+recent[\s]+Host[\s]+Integrity[\s]+content[\s]+has[\s]+not[\s]+completed[\s]+a[\s]+download[\s]+or[\s]+cannot[\s]+be[\s]+authenticated\.,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Unknown,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Host_Integrity:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The most recent Host Integrity content has not completed a download or cannot be authenticated."
					"[event][id]" => "Host_Integrity:01"
					"[rsa][message][id1]" => "Host_Integrity:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Local::01
		# line in RSA: {<fld4>,MD-5:<fld5>,Local:|Local:} <daddr>,Local: <dport>,Local: <fld12>,Remote: <saddr>,Remote: <fld13>,Remote: <sport>,Remote: <fld15>,<protocol>,Inbound,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Rule: <rulename>,Location: <fld11>,User: <username>,Domain: <domain>,Action: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld4>[^,]*),MD\-5:(?<fld5>[^,]*),Local:|Local:)[\s]+(?<daddr>[^,]*),Local:[\s]+(?<dport>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<sport>[^,]*),Remote:[\s]+(?<fld15>[^,]*),(?<protocol>[^,]*),Inbound,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Rule:[\s]+(?<rulename>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action:[\s]+(?<action>.*)$" }
				id => "message-Local::01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Active Response"
				"direction" => "Inbound"
					"[event][id]" => "Local::01"
					"[rsa][message][id1]" => "Local::01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::13
		# line in RSA: {<fld4>,MD-5:<fld5>,Local:|Local:} <saddr>,Local: <sport>,Local: <fld12>,Remote: <daddr>,Remote: <fld13>,Remote: <dport>,Remote: <fld15>,<protocol>,Outbound,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Rule: <rulename>,Location: <fld11>,User: <username>,Domain: <domain>,Action: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld4>[^,]*),MD\-5:(?<fld5>[^,]*),Local:|Local:)[\s]+(?<saddr>[^,]*),Local:[\s]+(?<sport>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<dport>[^,]*),Remote:[\s]+(?<fld15>[^,]*),(?<protocol>[^,]*),Outbound,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Rule:[\s]+(?<rulename>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action:[\s]+(?<action>.*)$" }
				id => "message-Local::13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Active Response"
				"direction" => "Outbound"
					"[event][id]" => "Local::13"
					"[rsa][message][id1]" => "Local::13"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local:
		# line in RSA: Local: <saddr>,Local: <sport>,Local: <fld12>,Remote: <daddr>,Remote: <fld13>,Remote: <dport>,Remote: <fld15>,<protocol>,Outbound,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{Rule: <rulename>| "Rule: <rulename>"},Location: <fld11>,User: <username>,{Domain: <domain>,Action: <action> | Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<sport>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<dport>[^,]*),Remote:[\s]+(?<fld15>[^,]*),(?<protocol>[^,]*),Outbound,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),(Rule:[\s]+(?<rulename>[^,]*)|[\s]*\"Rule:[\s]+(?<rulename>[^\"]*)\"),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),(Domain:[\s]+(?<domain>[^,]*),Action:[\s]+(?<action>[^\s]*)[\s]+|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Local:"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Active Response"
				"direction" => "Outbound"
					"[event][id]" => "Local:"
					"[rsa][message][id1]" => "Local:"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local:11
		# line in RSA: Local: <daddr>,Local: <dport>,Local: <fld12>,Remote: <saddr>,Remote: <fld13>,Remote: <sport>,Remote: <fld15>,<protocol>,Inbound,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{Rule: <rulename>| "Rule: <rulename>"},Location: <fld11>,User: <username>,{Domain: <domain>,Action: <action> | Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<dport>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<sport>[^,]*),Remote:[\s]+(?<fld15>[^,]*),(?<protocol>[^,]*),Inbound,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),(Rule:[\s]+(?<rulename>[^,]*)|[\s]*\"Rule:[\s]+(?<rulename>[^\"]*)\"),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),(Domain:[\s]+(?<domain>[^,]*),Action:[\s]+(?<action>[^\s]*)[\s]+|[\s]*Domain:[\s]+(?<domain>.*))$" }
				id => "message-Local:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Active Response"
				"direction" => "Inbound"
					"[event][id]" => "Local:11"
					"[rsa][message][id1]" => "Local:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::09
		# line in RSA: [SID: <fld26>] <category>: <event_description> Traffic has been blocked for this application:<fld27>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string> CVE-<cve>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[SID: %{fld26}] %{category}: %{event_description} Traffic has been blocked for this application:%{fld27},Local: %{daddr},Local: %{fld12},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},Inbound,%{protocol},Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},Local Port %{dport},Remote Port %{sport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string} CVE-%{cve},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Local::09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"sigid_string" => "%{fld28}%{CVE-}%{cve}"
				"direction" => "Inbound"
					"[event][id]" => "Local::09"
					"[rsa][message][id1]" => "Local::09"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::20
		# line in RSA: [SID: <fld26>] <category>: <event_description> Traffic has been blocked for this application:<fld27>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string> CVE-<cve>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[SID: %{fld26}] %{category}: %{event_description} Traffic has been blocked for this application:%{fld27},Local: %{saddr},Local: %{fld12},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},Outbound,%{protocol},Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string} CVE-%{cve},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Local::20"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"sigid_string" => "%{fld28}%{CVE-}%{cve}"
				"direction" => "Outbound"
					"[event][id]" => "Local::20"
					"[rsa][message][id1]" => "Local::20"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::08
		# line in RSA: [SID: <fld26>] <category>: <event_description> Traffic has been blocked for this application:<fld27>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[SID: %{fld26}] %{category}: %{event_description} Traffic has been blocked for this application:%{fld27},Local: %{daddr},Local: %{fld12},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},Inbound,%{protocol},Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},Local Port %{dport},Remote Port %{sport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Local::08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Local::08"
					"[rsa][message][id1]" => "Local::08"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::18
		# line in RSA: [SID: <fld26>] <category>: <event_description> Traffic has been blocked for this application:<fld27>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[SID: %{fld26}] %{category}: %{event_description} Traffic has been blocked for this application:%{fld27},Local: %{saddr},Local: %{fld12},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},Outbound,%{protocol},Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Local::18"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Local::18"
					"[rsa][message][id1]" => "Local::18"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::04
		# line in RSA: <event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>"|Intrusion URL: <url>},Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\"|Intrusion[\s]+URL:[\s]+(?<url>[^,]*)),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Local::04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Local::04"
					"[rsa][message][id1]" => "Local::04"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::17
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{"Intrusion URL: <url>"|Intrusion URL: <url>},Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(\"Intrusion[\s]+URL:[\s]+(?<url>[^\"]*)\"|Intrusion[\s]+URL:[\s]+(?<url>[^,]*)),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Local::17"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Local::17"
					"[rsa][message][id1]" => "Local::17"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::06
		# line in RSA: <event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,!ExternalLoggingTask.localport! <dport>,!ExternalLoggingTask.remoteport! <sport>,!ExternalLoggingTask.cidssignid! <sigid>,!ExternalLoggingTask.strcidssignid! <sigid_string>,!ExternalLoggingTask.cidssignsubid! <sigid1>,!ExternalLoggingTask.intrusionurl! <url>,!ExternalLoggingTask.intrusionpayloadurl! <fld23>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description},Local: %{daddr},Local: %{fld12},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},Inbound,%{protocol}Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},!ExternalLoggingTask.localport! %{dport},!ExternalLoggingTask.remoteport! %{sport},!ExternalLoggingTask.cidssignid! %{sigid},!ExternalLoggingTask.strcidssignid! %{sigid_string},!ExternalLoggingTask.cidssignsubid! %{sigid1},!ExternalLoggingTask.intrusionurl! %{url},!ExternalLoggingTask.intrusionpayloadurl! %{fld23}" }
				id => "message-Local::06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Local::06"
					"[rsa][message][id1]" => "Local::06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::16
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,!ExternalLoggingTask.localport! <sport>,!ExternalLoggingTask.remoteport! <dport>,!ExternalLoggingTask.cidssignid! <sigid>,!ExternalLoggingTask.strcidssignid! <sigid_string>,!ExternalLoggingTask.cidssignsubid! <sigid1>,!ExternalLoggingTask.intrusionurl! <url>,!ExternalLoggingTask.intrusionpayloadurl! <fld23>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description},Local: %{saddr},Local: %{fld12},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},Outbound,%{protocol},Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain},!ExternalLoggingTask.localport! %{sport},!ExternalLoggingTask.remoteport! %{dport},!ExternalLoggingTask.cidssignid! %{sigid},!ExternalLoggingTask.strcidssignid! %{sigid_string},!ExternalLoggingTask.cidssignsubid! %{sigid1},!ExternalLoggingTask.intrusionurl! %{url},!ExternalLoggingTask.intrusionpayloadurl! %{fld23}" }
				id => "message-Local::16"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Local::16"
					"[rsa][message][id1]" => "Local::16"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::02
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,<protocol>,0,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description},Local: %{saddr},Local: %{fld12},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},%{protocol},0,Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain}" }
				id => "message-Local::02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Local::02"
					"[rsa][message][id1]" => "Local::02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::22
		# line in RSA: <event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,<protocol>,1,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description},Local: %{daddr},Local: %{fld12},Remote: %{fld13},Remote: %{saddr},Remote: %{fld15},%{protocol},1,Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain}" }
				id => "message-Local::22"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Local::22"
					"[rsa][message][id1]" => "Local::22"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::23
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,<protocol>,2,Intrusion ID: <fld33>,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description},Local: %{saddr},Local: %{fld12},Remote: %{fld13},Remote: %{daddr},Remote: %{fld15},%{protocol},2,Intrusion ID: %{fld33},Begin: %{fld50} %{fld54},End: %{fld16} %{fld19},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld11},User: %{username},Domain: %{domain}" }
				id => "message-Local::23"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Local::23"
					"[rsa][message][id1]" => "Local::23"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::07
		# line in RSA: <event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<network_service>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>: <fld22> CVE-<cve> <fld26>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<network_service>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^:]*):[\s]+(?<fld22>[^\s]*)[\s]+CVE\-(?<cve>[^\s]*)[\s]+(?<fld26>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Local::07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Local::07"
					"[rsa][message][id1]" => "Local::07"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::19
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<network_service>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>: <fld22> CVE-<cve> <fld26>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<network_service>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^:]*):[\s]+(?<fld22>[^\s]*)[\s]+CVE\-(?<cve>[^\s]*)[\s]+(?<fld26>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Local::19"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Local::19"
					"[rsa][message][id1]" => "Local::19"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::05
		# line in RSA: <event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<network_service>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<network_service>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Local::05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Local::05"
					"[rsa][message][id1]" => "Local::05"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::15
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<network_service>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<network_service>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Local::15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Local::15"
					"[rsa][message][id1]" => "Local::15"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::03
		# line in RSA: <event_description>,Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<network_service>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<network_service>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*)$" }
				id => "message-Local::03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Local::03"
					"[rsa][message][id1]" => "Local::03"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::14
		# line in RSA: <event_description>,Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<network_service>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld11>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<network_service>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*)$" }
				id => "message-Local::14"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Local::14"
					"[rsa][message][id1]" => "Local::14"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Local::10
		# line in RSA: Local: <daddr>,Local: <dport>,Remote: <saddr>,Remote: <fld13>,Remote: <sport>,Inbound,Application: <application>,Action: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Local: %{daddr},Local: %{dport},Remote: %{saddr},Remote: %{fld13},Remote: %{sport},Inbound,Application: %{application},Action: %{action}" }
				id => "message-Local::10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Active Response"
				"direction" => "Inbound"
					"[event][id]" => "Local::10"
					"[rsa][message][id1]" => "Local::10"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Local::21
		# line in RSA: Local: <saddr>,Local: <sport>,Remote: <daddr>,Remote: <fld13>,Remote: <dport>,Outbound,Application: <application>,Action: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Local: %{saddr},Local: %{sport},Remote: %{daddr},Remote: %{fld13},Remote: %{dport},Outbound,Application: %{application},Action: %{action}" }
				id => "message-Local::21"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Active Response"
				"direction" => "Outbound"
					"[event][id]" => "Local::21"
					"[rsa][message][id1]" => "Local::21"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Local::24
		# line in RSA: Event Description: <event_description>,Local: <daddr>,Local Host MAC: <dmacaddr>,Remote Host Name: <fld3>,Remote Host IP: <saddr>,Remote Host MAC: <smacaddr>,Inbound,<protocol>,Intrusion ID: 0,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port: <dport>,Remote Port: <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL: <fld12>,SHA-256: <checksum>,MD-5: <checksum>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Event Description: %{event_description},Local: %{daddr},Local Host MAC: %{dmacaddr},Remote Host Name: %{fld3},Remote Host IP: %{saddr},Remote Host MAC: %{smacaddr},Inbound,%{protocol},Intrusion ID: 0,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld8},User: %{username},Domain: %{domain},Local Port: %{dport},Remote Port: %{sport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL: %{fld12},SHA-256: %{checksum},MD-5: %{checksum}" }
				id => "message-Local::24"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
					"[event][id]" => "Local::24"
					"[rsa][message][id1]" => "Local::24"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Local::25
		# line in RSA: Event Description: <event_description>,Local: <saddr>,Local Host MAC: <smacaddr>,Remote Host Name: <fld3>,Remote Host IP: <daddr>,Remote Host MAC: <dmacaddr>,Outbound,<protocol>,Intrusion ID: 0,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port: <sport>,Remote Port: <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL: <fld12>,SHA-256: <checksum>,MD-5: <checksum>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Event Description: %{event_description},Local: %{saddr},Local Host MAC: %{smacaddr},Remote Host Name: %{fld3},Remote Host IP: %{daddr},Remote Host MAC: %{dmacaddr},Outbound,%{protocol},Intrusion ID: 0,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld8},User: %{username},Domain: %{domain},Local Port: %{sport},Remote Port: %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL: %{fld12},SHA-256: %{checksum},MD-5: %{checksum}" }
				id => "message-Local::25"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
					"[event][id]" => "Local::25"
					"[rsa][message][id1]" => "Local::25"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Local::26
		# line in RSA: Event Description: <event_description> [Volume]: <disk_volume> [Model]: <product> [Access]: <accesses>,Local: <saddr>,Local Host MAC: <smacaddr>,Remote Host Name: <fld3>,Remote Host IP: <daddr>,Remote Host MAC: <dmacaddr>,<direction>,<fld2>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port: <sport>,Remote Port: <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL: <fld12>,SHA-256: <checksum>,MD-5: <checksum>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Event Description: %{event_description} [Volume]: %{disk_volume} [Model]: %{product} [Access]: %{accesses},Local: %{saddr},Local Host MAC: %{smacaddr},Remote Host Name: %{fld3},Remote Host IP: %{daddr},Remote Host MAC: %{dmacaddr},%{direction},%{fld2},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld8},User: %{username},Domain: %{domain},Local Port: %{sport},Remote Port: %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL: %{fld12},SHA-256: %{checksum},MD-5: %{checksum}" }
				id => "message-Local::26"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "Local::26"
					"[rsa][message][id1]" => "Local::26"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Blocked" {
		# MESSAGE Blocked:13
		# line in RSA: Blocked Attack: Memory Heap Spray attack against <fld1>,Local: <daddr>,Local: <fld12>,Remote: <fld15>,Remote: <saddr>,Remote: <fld51>,Inbound,<protocol>,,Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld2>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Blocked[\s]+Attack:[\s]+Memory[\s]+Heap[\s]+Spray[\s]+attack[\s]+against[\s]+(?<fld1>[^,]*),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld51>[^,]*),Inbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld2>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-Blocked:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Attack: Memory Heap Spray attack"
				"direction" => "Inbound"
					"[event][id]" => "Blocked:13"
					"[rsa][message][id1]" => "Blocked:13"
					"[event][categoryid]" => "1001020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:01
		# line in RSA: "<fld23>,",File Read,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{fld23},\",File Read,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain}" }
				id => "message-File:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read Begin."
				"ec_subject" => "File"
				"action" => "Read"
					"[event][id]" => "File:01"
					"[rsa][message][id1]" => "File:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:11
		# line in RSA: "<info>",Create Process,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld1>,<process>,<fld3>,<fld4>,<application>,User: <username>,Domain: <domain>,Action Type:<fld6>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{info}\",Create Process,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld1},%{process},%{fld3},%{fld4},%{application},User: %{username},Domain: %{domain},Action Type:%{fld6},File size (bytes): %{filename_size},Device ID: %{device}" }
				id => "message-File:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Create Process."
					"[event][id]" => "File:11"
					"[rsa][message][id1]" => "File:11"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:02
		# line in RSA: "<info>",Create Process,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld1>,<process>,<fld3>,<fld4>,<application>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{info}\",Create Process,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld1},%{process},%{fld3},%{fld4},%{application},User: %{username},Domain: %{domain}" }
				id => "message-File:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Create Process."
					"[event][id]" => "File:02"
					"[rsa][message][id1]" => "File:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:03
		# line in RSA: <fld1>,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain}" }
				id => "message-File:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write."
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "File:03"
					"[rsa][message][id1]" => "File:03"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:04
		# line in RSA: <info>.<fld1>,File Read,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>,Action Type:<fld46>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}.%{fld1},File Read,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain},Action Type:%{fld46},File size (bytes): %{filename_size},Device ID: %{device}" }
				id => "message-Blocked:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"saddr" => "%{hsaddr}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read."
				"ec_subject" => "File"
				"action" => "Read"
					"[event][id]" => "Blocked:04"
					"[rsa][message][id1]" => "Blocked:04"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:05
		# line in RSA: <fld1>,File Read,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>,Action Type:<fld46>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Read,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain},Action Type:%{fld46}" }
				id => "message-File:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read."
				"ec_subject" => "File"
				"action" => "Read"
					"[event][id]" => "File:05"
					"[rsa][message][id1]" => "File:05"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:04
		# line in RSA: "<fld23>",,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{fld23}\",,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},,%{filename},User: %{username},Domain: %{domain}" }
				id => "message-File:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read Begin."
					"[event][id]" => "File:04"
					"[rsa][message][id1]" => "File:04"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:06
		# line in RSA: <fld1>,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,"Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},\"Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain}" }
				id => "message-File:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write."
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "File:06"
					"[rsa][message][id1]" => "File:06"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:07
		# line in RSA: '<fld23>',,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "'%{fld23}',,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},,%{filename},User: %{username},Domain: %{domain}" }
				id => "message-File:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read Begin."
					"[event][id]" => "File:07"
					"[rsa][message][id1]" => "File:07"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:12
		# line in RSA: <fld23>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<process_id>,<process>,<fld4>,,<filename>,User: <username>,Domain: <domain>,Action Type:<fld6>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld23},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{process_id},%{process},%{fld4},,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld6},File size (bytes): %{filename_size},Device ID: %{device}" }
				id => "message-File:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "File:12"
					"[rsa][message][id1]" => "File:12"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:08
		# line in RSA: <fld1>,<fld7>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,"Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{fld7},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},\"Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain}" }
				id => "message-File:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write."
					"[event][id]" => "File:08"
					"[rsa][message][id1]" => "File:08"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:09
		# line in RSA: <fld1>,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>,Action Type:<fld6>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Delete,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain},Action Type:%{fld6},File size (bytes): %{filename_size},Device ID: %{device}" }
				id => "message-File:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Delete."
				"ec_subject" => "File"
				"action" => "Delete"
					"[event][id]" => "File:09"
					"[rsa][message][id1]" => "File:09"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked
		# line in RSA: Unauthorized NT call rejected by protection driver.,<fld22>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<filename>,<fld4>,<fld23>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unauthorized NT call rejected by protection driver.,%{fld22},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{filename},%{fld4},%{fld23},User: %{username},Domain: %{domain}" }
				id => "message-Blocked"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"process" => "%{filename}"
				"event_description" => "Unauthorized NT call rejected by protection driver."
					"[event][id]" => "Blocked"
					"[rsa][message][id1]" => "Blocked"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:01
		# line in RSA: ,Create Process,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld4>,<process>,<fld5>,<fld6>,<info>,User: <username>,Domain: <domain>,Action Type: <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ",Create Process,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld4},%{process},%{fld5},%{fld6},%{info},User: %{username},Domain: %{domain},Action Type: %{fld8}" }
				id => "message-Blocked:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Blocked:01"
					"[rsa][message][id1]" => "Blocked:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:02
		# line in RSA: <fld5> - Caller MD5=<fld6>,Registry Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5} - Caller MD5=%{fld6},Registry Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-Blocked:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write Begin."
					"[event][id]" => "Blocked:02"
					"[rsa][message][id1]" => "Blocked:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:03
		# line in RSA: {<fld21> - Caller MD5=<fld22>,Create Process|<fld23>,Load Dll},Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld24>,<process>,<fld25>,<fld26>,<filename>,User: <username>,Domain: <domain>,Action Type: <fld8>,File size (bytes):<filename_size>,Device ID:<device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld21>[^\s]*)[\s]+\-[\s]+Caller[\s]+MD5=(?<fld22>[^,]*),Create[\s]+Process|(?<fld23>[^,]*),Load[\s]+Dll),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld24>[^,]*),(?<process>[^,]*),(?<fld25>[^,]*),(?<fld26>[^,]*),(?<filename>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:[\s]+(?<fld8>[^,]*),File[\s]+size[\s]+\(bytes\):(?<filename_size>[^,]*),Device[\s]+ID:(?<device>.*)$" }
				id => "message-Blocked:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Block from loading other DLLs/processes."
					"[event][id]" => "Blocked:03"
					"[rsa][message][id1]" => "Blocked:03"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:05
		# line in RSA: <event_description> - Caller MD5=<checksum>,<fld1>,Begin: <fld2> <fld3>,End: <fld4> <fld5>,Rule: <rulename>,<process_id>,<process>,<fld6>,<fld7>,<fld8>,User: <username>,Domain: <sdomain>,Action Type: <fld9>,File size (<fld10>): <filename_size>,Device ID:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description} - Caller MD5=%{checksum},%{fld1},Begin: %{fld2} %{fld3},End: %{fld4} %{fld5},Rule: %{rulename},%{process_id},%{process},%{fld6},%{fld7},%{fld8},User: %{username},Domain: %{sdomain},Action Type: %{fld9},File size (%{fld10}): %{filename_size},Device ID:" }
				id => "message-Blocked:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Blocked:05"
					"[rsa][message][id1]" => "Blocked:05"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:06
		# line in RSA: [<id>] <event_description> - <fld11>,<fld1>,Begin: <fld2> <fld3>,End: <fld4> <fld5>,Rule: <rulename>,<process_id>,<process>,<fld6>,<fld7>,<fld8>,User: <username>,Domain: <domain>,Action Type: <fld9>,File size (<fld10>): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{id}] %{event_description} - %{fld11},%{fld1},Begin: %{fld2} %{fld3},End: %{fld4} %{fld5},Rule: %{rulename},%{process_id},%{process},%{fld6},%{fld7},%{fld8},User: %{username},Domain: %{domain},Action Type: %{fld9},File size (%{fld10}): %{filename_size},Device ID: %{device}" }
				id => "message-Blocked:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "Blocked:06"
					"[rsa][message][id1]" => "Blocked:06"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Blocked:07
		# line in RSA: [<id>] <event_description>,<fld1>,Begin: <fld2> <fld3>,End: <fld4> <fld5>,Rule: <rulename>,<process_id>,<process>,<fld6>,<fld7>,<fld8>,User: <username>,Domain: <domain>,Action Type: <fld9>,File size (<fld10>): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{id}] %{event_description},%{fld1},Begin: %{fld2} %{fld3},End: %{fld4} %{fld5},Rule: %{rulename},%{process_id},%{process},%{fld6},%{fld7},%{fld8},User: %{username},Domain: %{domain},Action Type: %{fld9},File size (%{fld10}): %{filename_size},Device ID: %{device}" }
				id => "message-Blocked:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Blocked:07"
					"[rsa][message][id1]" => "Blocked:07"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:09
		# line in RSA: {<fld11> - Target MD5=<fld6> - Target Arguments=<fld7>/service'<fld33> |<fld11> - Target MD5=<fld6> - Target Arguments=<fld7>chrome-extension:<fld99>'<fld33> |<fld11> - Target MD5=<fld6> - Target Arguments=<fld7>-ServerName:<hostid>'<fld33> |- Target MD5=<fld6> - Target Arguments=<fld7>-ServerName:<hostid>' |<fld11> - Target MD5=<fld6> - Target Arguments=<fld7> | - Target MD5=<fld6>},Create Process,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44> ,File size (<fld10>):<filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld11>[^\s]*)[\s]+\-[\s]+Target[\s]+MD5=(?<fld6>[^\s]*)[\s]+\-[\s]+Target[\s]+Arguments=(?<fld7>[^/]*)/service'(?<fld33>[^\s]*)[\s]+|(?<fld11>[^\s]*)[\s]+\-[\s]+Target[\s]+MD5=(?<fld6>[^\s]*)[\s]+\-[\s]+Target[\s]+Arguments=(?<fld7>[^c]*)chrome\-extension:(?<fld99>[^']*)'(?<fld33>[^\s]*)[\s]+|(?<fld11>[^\s]*)[\s]+\-[\s]+Target[\s]+MD5=(?<fld6>[^\s]*)[\s]+\-[\s]+Target[\s]+Arguments=(?<fld7>[^\-]*)\-ServerName:(?<hostid>[^']*)'(?<fld33>[^\s]*)[\s]+|\-[\s]+Target[\s]+MD5=(?<fld6>[^\s]*)[\s]+\-[\s]+Target[\s]+Arguments=(?<fld7>[^\-]*)\-ServerName:(?<hostid>[^']*)'[\s]+|(?<fld11>[^\s]*)[\s]+\-[\s]+Target[\s]+MD5=(?<fld6>[^\s]*)[\s]+\-[\s]+Target[\s]+Arguments=(?<fld7>[^\s]*)[\s]+|[\s]*\-[\s]+Target[\s]+MD5=(?<fld6>[^,]*)),Create[\s]+Process,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<process>[^,]*),(?<fld4>[^,]*),No[\s]+Module[\s]+Name,(?<filename>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:(?<fld44>[^\s]*)[\s]+,File[\s]+size[\s]+\((?<fld10>[^\)]*)\):(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)$" }
				id => "message-Blocked:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"saddr" => "%{hsaddr}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Blocked:09"
					"[rsa][message][id1]" => "Blocked:09"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA:  Changed value '<change_attribute>' from '<change_old>' to { '<change_new>',Event time:<fld17><fld18> | '<change_new>'}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId56
	# line in RSA: Cleaned up <dclass_counter1> LiveUpdate downloaded content
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "Cleaned up %{dclass_counter1} LiveUpdate downloaded content" }
			id => "msgParserId56"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Cleaned up downloaded content."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Client" {
		# MESSAGE Client
		# line in RSA:  Client has downloaded the issued Command,<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client has downloaded the issued Command,%{username}" }
				id => "message-Client"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"domain" => "%{hdomain}"
				"event_description" => "Client has downloaded the issued command."
					"[event][id]" => "Client"
					"[rsa][message][id1]" => "Client"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Client:01
		# line in RSA: {<event_description>, type SymDelta version<version> filesize<filename_size>.",Event time:<fld17><fld18>|<event_description>, type full version<version> filesize<filename_size>.",Event time:<fld17><fld18>| <event_description>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "client" {
		# MESSAGE client
		# line in RSA: client has downloaded the {content package|policy|Intrusion Prevention policy} successfully,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^client[\s]+has[\s]+downloaded[\s]+the[\s]+(content[\s]+package|policy|Intrusion[\s]+Prevention[\s]+policy)[\s]+successfully,(?<shost>[^,]*),(?<username>[^,]*),(?<group>.*)$" }
				id => "message-client"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client has downloaded the policy successfully."
					"[event][id]" => "client"
					"[rsa][message][id1]" => "client"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:01
		# line in RSA: client has reconnected with the management server,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "client has reconnected with the management server,%{shost},%{username},%{group}" }
				id => "message-client:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client has reconnected with the management server."
					"[event][id]" => "client:01"
					"[rsa][message][id1]" => "client:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:02
		# line in RSA: client has downloaded <filename> successfully,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "client has downloaded %{filename} successfully,%{shost},%{username},%{group}" }
				id => "message-client:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client has downloaded file successfully."
					"[event][id]" => "client:02"
					"[rsa][message][id1]" => "client:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:03
		# line in RSA: client registered with the management server successfully,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "client registered with the management server successfully,%{shost},%{username},%{group}" }
				id => "message-client:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client registered with the management server successfully"
					"[event][id]" => "client:03"
					"[rsa][message][id1]" => "client:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:04
		# line in RSA: client has downloaded <filename>,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "client has downloaded %{filename},%{shost},%{username},%{group}" }
				id => "message-client:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client has downloaded file successfully."
					"[event][id]" => "client:04"
					"[rsa][message][id1]" => "client:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:05
		# line in RSA: The client will block traffic from IP address <fld14> for the next <duration_string> (from <fld13>){.,| .  ,}Local: <daddr>,Local: <fld1>,Remote: <fld25>,Remote: <saddr>,Remote: <fld3>,Inbound,<fld5>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld12>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+client[\s]+will[\s]+block[\s]+traffic[\s]+from[\s]+IP[\s]+address[\s]+(?<fld14>[^\s]*)[\s]+for[\s]+the[\s]+next[\s]+(?<duration_string>[^\s]*)[\s]+\(from[\s]+(?<fld13>[^\)]*)\)(\.,|[\s]*\.[\s]+,)Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld1>[^,]*),Remote:[\s]+(?<fld25>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld3>[^,]*),Inbound,(?<fld5>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld8>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld12>.*)$" }
				id => "message-client:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client will block traffic."
				"direction" => "Inbound"
					"[event][id]" => "client:05"
					"[rsa][message][id1]" => "client:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:15
		# line in RSA: The client will block traffic from IP address <fld14> for the next <duration_string> (from <fld13>){.,| .  ,}Local: <saddr>,Local: <fld1>,Remote: <fld25>,Remote: <daddr>,Remote: <fld3>,Outbound,<fld5>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld12>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+client[\s]+will[\s]+block[\s]+traffic[\s]+from[\s]+IP[\s]+address[\s]+(?<fld14>[^\s]*)[\s]+for[\s]+the[\s]+next[\s]+(?<duration_string>[^\s]*)[\s]+\(from[\s]+(?<fld13>[^\)]*)\)(\.,|[\s]*\.[\s]+,)Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld1>[^,]*),Remote:[\s]+(?<fld25>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld3>[^,]*),Outbound,(?<fld5>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld8>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<fld24>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld12>.*)$" }
				id => "message-client:15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client will block traffic."
				"direction" => "Outbound"
					"[event][id]" => "client:15"
					"[rsa][message][id1]" => "client:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:06
		# line in RSA: client computer has been added to the group,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "client computer has been added to the group,%{shost},%{username},%{group}" }
				id => "message-client:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Client computer has been added to the group."
					"[event][id]" => "client:06"
					"[rsa][message][id1]" => "client:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:07
		# line in RSA: client computer has been renamed,<shost>,<username>,<sdomain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "client computer has been renamed,%{shost},%{username},%{sdomain}" }
				id => "message-client:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client computer has been renamed"
					"[event][id]" => "client:07"
					"[rsa][message][id1]" => "client:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:08
		# line in RSA: The client does not have a paid license.  The current license cannot be used to obtain a client authentication token.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The client does not have a paid license.  The current license cannot be used to obtain a client authentication token.,Event time: %{event_time_string}" }
				id => "message-client:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client does not have a paid license"
					"[event][id]" => "client:08"
					"[rsa][message][id1]" => "client:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE client:09
		# line in RSA: The client has successfully downloaded and applied a license from the server.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The client has successfully downloaded and applied a license from the server.,Event time: %{event_time_string}" }
				id => "message-client:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The client has successfully downloaded and applied a license from the server"
					"[event][id]" => "client:09"
					"[rsa][message][id1]" => "client:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE SYLINK:01
		# line in RSA: The client opted to download a full definitions package for AV definitions from the management server or GUP {because LiveUpdate had no AV updates available|rather than download a large package from LiveUpdate}{.,Event time:<fld17><fld18>|.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE SYLINK:02
		# line in RSA: The client opted to download an update for AV definitions from LiveUpdate rather than download a full definitions package from the management server or GUP.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The client opted to download an update for AV definitions from LiveUpdate rather than download a full definitions package from the management server or GUP." }
				id => "message-SYLINK:02"
				add_field => {
				"event_description" => "The client opted to download an update for AV definitions from LiveUpdate"
					"[event][id]" => "SYLINK:02"
					"[rsa][message][id1]" => "SYLINK:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SYLINK:04
		# line in RSA: The client has obtained an invalid license file (<filename>) from the server.,Event time:<fld17><fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The client has obtained an invalid license file (%{filename}) from the server.,Event time:%{fld17}%{fld18}" }
				id => "message-SYLINK:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The client has obtained an invalid license file from the server."
					"[event][id]" => "SYLINK:04"
					"[rsa][message][id1]" => "SYLINK:04"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Smc
		# line in RSA: The client has successfully downloaded a license file (<filename>) from the server.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The client has successfully downloaded a license file (%{filename}) from the server." }
				id => "message-Smc"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The client has successfully downloaded a license file"
					"[event][id]" => "Smc"
					"[rsa][message][id1]" => "Smc"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Smc:01
		# line in RSA:  The client has successfully downloaded and applied a license file (<filename>) from the { server.,Event time:<fld17><fld18>| server.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Smc:05
		# line in RSA:  "The client has successfully downloaded and applied a license file (<filename>, Serial: <serial_number>) from the { server.",Event time:<fld17><fld18>| server."}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Commercial" {
		# MESSAGE Commercial
		# line in RSA: Commercial application detected,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <severity>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score:<fld7>,Submission recommendation: <fld8>,Permitted application reason: <fld9>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<fld1>,{"<filename>"|<filename>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Commercial[\s]+application[\s]+detected,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<severity>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),Submission[\s]+recommendation:[\s]+(?<fld8>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld9>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<fld1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Commercial"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Commercial application detected"
					"[event][id]" => "Commercial"
					"[rsa][message][id1]" => "Commercial"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Commercial:02
		# line in RSA: Commercial application detected,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},{Detection type: <severity>,First Seen: <fld50>|Detection type: <severity>},Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score:<fld7>,COH Engine Version: <fld41>,Detection Submissions No,Permitted application reason: <fld42>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,Risk Level: <fld50>,Detection Source: <fld52>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<fld1>,{"<filename>"|<filename>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Commercial[\s]+application[\s]+detected,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),(Detection[\s]+type:[\s]+(?<severity>[^,]*),First[\s]+Seen:[\s]+(?<fld50>[^,]*)|Detection[\s]+type:[\s]+(?<severity>[^,]*)),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),COH[\s]+Engine[\s]+Version:[\s]+(?<fld41>[^,]*),Detection[\s]+Submissions[\s]+No,Permitted[\s]+application[\s]+reason:[\s]+(?<fld42>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),Risk[\s]+Level:[\s]+(?<fld50>[^,]*),Detection[\s]+Source:[\s]+(?<fld52>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<fld1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Commercial:02"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Commercial application detected"
					"[event][id]" => "Commercial:02"
					"[rsa][message][id1]" => "Commercial:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Commercial:01
		# line in RSA: Commercial application detected,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <severity>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score:<fld7>,Submission recommendation: <fld8>,Permitted application reason: <fld9>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<fld1>,{"<filename>"|<filename>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,"Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Commercial[\s]+application[\s]+detected,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<severity>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),Submission[\s]+recommendation:[\s]+(?<fld8>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld9>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<fld1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),\"Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Commercial:01"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Commercial application detected"
					"[event][id]" => "Commercial:01"
					"[rsa][message][id1]" => "Commercial:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Computer" {
		# MESSAGE Computer:deleted
		# line in RSA: Computer has been deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Computer has been deleted" }
				id => "message-Computer:deleted"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Computer has been deleted."
					"[event][id]" => "Computer:deleted"
					"[rsa][message][id1]" => "Computer:deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Computer:moved
		# line in RSA: Computer has been moved
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Computer has been moved" }
				id => "message-Computer:moved"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Computer has been moved."
					"[event][id]" => "Computer:moved"
					"[rsa][message][id1]" => "Computer:moved"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Computer:propertieschanged
		# line in RSA: Computer properties have been changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Computer properties have been changed" }
				id => "message-Computer:propertieschanged"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Computer properties have been changed."
					"[event][id]" => "Computer:propertieschanged"
					"[rsa][message][id1]" => "Computer:propertieschanged"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Computer
		# line in RSA: IP Address: <hostip>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,{"<filename>"|<filename>},"<fld1>",Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Last update time: <fld52>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,First Seen: <fld50>,Sensitivity: <fld58>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^IP[\s]+Address:[\s]+(?<hostip>[^,]*),Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),\"(?<fld1>[^\"]*)\",Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Last[\s]+update[\s]+time:[\s]+(?<fld52>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld58>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>.*)$" }
				id => "message-Computer"
				add_field => {
				"hostname" => "%{hhost}"
				"process" => "%{filename}"
				"event_time_string" => "%{htime}"
				"administrator" => "%{husername}"
					"[event][id]" => "Computer"
					"[rsa][message][id1]" => "Computer"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Computer:01
		# line in RSA: IP Address: <hostip>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,{"<filename>"|<filename>},'<fld1>',Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Last update time: <fld52>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,First Seen: <fld50>,Sensitivity: <fld58>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>,Category set: <category>,Category type: <event_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^IP[\s]+Address:[\s]+(?<hostip>[^,]*),Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),'(?<fld1>[^']*)',Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Last[\s]+update[\s]+time:[\s]+(?<fld52>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld58>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<event_type>.*)$" }
				id => "message-Computer:01"
				add_field => {
				"hostname" => "%{hhost}"
				"process" => "%{filename}"
				"event_time_string" => "%{htime}"
				"administrator" => "%{husername}"
					"[event][id]" => "Computer:01"
					"[rsa][message][id1]" => "Computer:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Computer:03
		# line in RSA: IP Address: <hostip>,Computer name: <shost>,Intensive Protection Level: <fld55>,Certificate issuer: <cert_subject>,Certificate signer: <fld68>,Certificate thumbprint: <fld57>,Signing timestamp: <fld69>,Certificate serial number: <cert.serial>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,{"<filename>"|<filename>},<fld1>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Last update time: <fld52>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,<fld67>,First Seen: <fld50>,Sensitivity: <fld58>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>,Category set: <category>,Category type: <event_type>,Location:<fld65>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^IP[\s]+Address:[\s]+(?<hostip>[^,]*),Computer[\s]+name:[\s]+(?<shost>[^,]*),Intensive[\s]+Protection[\s]+Level:[\s]+(?<fld55>[^,]*),Certificate[\s]+issuer:[\s]+(?<cert_subject>[^,]*),Certificate[\s]+signer:[\s]+(?<fld68>[^,]*),Certificate[\s]+thumbprint:[\s]+(?<fld57>[^,]*),Signing[\s]+timestamp:[\s]+(?<fld69>[^,]*),Certificate[\s]+serial[\s]+number:[\s]+(?<cert.serial>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),(?<fld1>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Last[\s]+update[\s]+time:[\s]+(?<fld52>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),(?<fld67>[^,]*),First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld58>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<event_type>[^,]*),Location:(?<fld65>.*)$" }
				id => "message-Computer:03"
				add_field => {
				"hostname" => "%{hhost}"
				"process" => "%{filename}"
					"[event][id]" => "Computer:03"
					"[rsa][message][id1]" => "Computer:03"
					"[event][categoryid]" => "1003000000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Computer:02
		# line in RSA: {Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <severity>,First Seen: <fld55>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld13>,Detection score:<fld7>,COH Engine Version: <fld41>,<fld53>,Permitted application reason: <fld54>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,Risk Level: <fld50>,Detection Source: <fld52>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<fld22>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<severity>[^,]*),First[\s]+Seen:[\s]+(?<fld55>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld13>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),COH[\s]+Engine[\s]+Version:[\s]+(?<fld41>[^,]*),(?<fld53>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld54>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),Risk[\s]+Level:[\s]+(?<fld50>[^,]*),Detection[\s]+Source:[\s]+(?<fld52>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(?<fld22>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld5>[^\s]*)[\s]+(?<fld6>[^,]*),Inserted:(?<fld12>[^,]*),End:(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Computer:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"process" => "%{filename}"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
					"[event][id]" => "Computer:02"
					"[rsa][message][id1]" => "Computer:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Configuration" {
		# MESSAGE Configuration
		# line in RSA:  Configuration Change..Computer: <shost>..Date: <fld5>..Time: <fld6>..Description: <event_description> ..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Change..Computer: %{shost}..Date: %{fld5}..Time: %{fld6}..Description: %{event_description} ..Severity: %{severity}..Source: %{product}" }
				id => "message-Configuration"
				add_field => {
					"[event][id]" => "Configuration"
					"[rsa][message][id1]" => "Configuration"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Configuration:01
		# line in RSA:  Configuration Change..<shost>..<fld5>........<severity>..<product>..<fld6> <fld7>..
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Change..%{shost}..%{fld5}........%{severity}..%{product}..%{fld6} %{fld7}.." }
				id => "message-Configuration:01"
				add_field => {
				"event_description" => "Configuration Change"
					"[event][id]" => "Configuration:01"
					"[rsa][message][id1]" => "Configuration:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Configuration:02
		# line in RSA:  Configuration Change..Computer: <shost>..Date: <fld5>..Description: <event_description>..Time: <fld6> <fld7>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Change..Computer: %{shost}..Date: %{fld5}..Description: %{event_description}..Time: %{fld6} %{fld7}..Severity: %{severity}..Source: %{product}" }
				id => "message-Configuration:02"
				add_field => {
					"[event][id]" => "Configuration:02"
					"[rsa][message][id1]" => "Configuration:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Connected" {
		# MESSAGE Connected
		# line in RSA: Connected to Symantec Endpoint Protection Manager {<fld11> ,Event time: <fld17><fld18>| <fld11> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Connected:01
		# line in RSA: Connected to Management Server <hostip>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Connected to Management Server %{hostip}." }
				id => "message-Connected:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Connected to Management Server"
					"[event][id]" => "Connected:01"
					"[rsa][message][id1]" => "Connected:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA: Connection reset
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "Connection reset" }
			id => "msgParserId84"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Connection reset."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Could" {
		# MESSAGE Could
		# line in RSA:  Could <space>not start Service Engine err=<resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Could %{space}not start Service Engine err=%{resultcode}" }
				id => "message-Could"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Could not start service engine."
					"[event][id]" => "Could"
					"[rsa][message][id1]" => "Could"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Could:01
		# line in RSA: Could not scan <dclass_counter1> files inside <directory> due to extraction errors encountered by the Decomposer Engines.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Could not scan %{dclass_counter1} files inside %{directory} due to extraction errors encountered by the Decomposer Engines." }
				id => "message-Could:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Could not start service engine."
					"[event][id]" => "Could:01"
					"[rsa][message][id1]" => "Could:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA: Create trident engine failed.
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "Create trident engine failed." }
			id => "msgParserId87"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Create trident engine failed."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Database" {
		# MESSAGE Database
		# line in RSA: Database Maintenance Finished Successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Database Maintenance Finished Successfully" }
				id => "message-Database"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Database Maintenance Finished Successfully"
					"[event][id]" => "Database"
					"[rsa][message][id1]" => "Database"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Database:01
		# line in RSA: Database maintenance started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Database maintenance started." }
				id => "message-Database:01"
				add_field => {
				"event_description" => "Database maintenance started."
					"[event][id]" => "Database:01"
					"[rsa][message][id1]" => "Database:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Database:02
		# line in RSA: Database maintenance finished successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Database maintenance finished successfully." }
				id => "message-Database:02"
				add_field => {
				"event_description" => "Database maintenance finished successfully."
					"[event][id]" => "Database:02"
					"[rsa][message][id1]" => "Database:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Database:03
		# line in RSA: Database properties are changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Database properties are changed" }
				id => "message-Database:03"
				add_field => {
				"event_description" => "Database properties are changed"
					"[event][id]" => "Database:03"
					"[rsa][message][id1]" => "Database:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Disconnected" {
		# MESSAGE Disconnected
		# line in RSA: Disconnected from Symantec Endpoint Protection Manager.   --- server address : <hostid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Disconnected from Symantec Endpoint Protection Manager.   --- server address : %{hostid}" }
				id => "message-Disconnected"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Disconnected from Symantec Endpoint Protection Manager."
					"[event][id]" => "Disconnected"
					"[rsa][message][id1]" => "Disconnected"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Disconnected:01
		# line in RSA:  Disconnected from Symantec Endpoint Protection Manager { (<hostip>),Event time:<fld17><fld18>| (<hostip>) }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Disconnected:02
		# line in RSA: Disconnected to Management Server <hostip>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Disconnected to Management Server %{hostip}." }
				id => "message-Disconnected:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Disconnected to Management Server"
					"[event][id]" => "Disconnected:02"
					"[rsa][message][id1]" => "Disconnected:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId94"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Domain" {
		# MESSAGE Domain:added
		# line in RSA: Domain "<domain>" was added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain \"%{domain}\" was added" }
				id => "message-Domain:added"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Domain was added."
					"[event][id]" => "Domain:added"
					"[rsa][message][id1]" => "Domain:added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Domain:renamed
		# line in RSA: Domain "<change_old>" was renamed to "<change_new>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain \"%{change_old}\" was renamed to \"%{change_new}\"" }
				id => "message-Domain:renamed"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Domain was renamed."
				"change_attribute" => "domain name"
					"[event][id]" => "Domain:renamed"
					"[rsa][message][id1]" => "Domain:renamed"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Domain:deleted
		# line in RSA: Domain "<domain>" was deleted!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain \"%{domain}\" was deleted!" }
				id => "message-Domain:deleted"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Domain was deleted."
					"[event][id]" => "Domain:deleted"
					"[rsa][message][id1]" => "Domain:deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Domain:administratoradded
		# line in RSA: Domain administrator "<username>" was added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain administrator \"%{username}\" was added" }
				id => "message-Domain:administratoradded"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"administrator" => "%{husername}"
				"event_description" => "Domain administrator was added."
					"[event][id]" => "Domain:administratoradded"
					"[rsa][message][id1]" => "Domain:administratoradded"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Domain:administratordeleted
		# line in RSA: Domain administrator "<username>" was deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain administrator \"%{username}\" was deleted" }
				id => "message-Domain:administratordeleted"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"administrator" => "%{husername}"
				"event_description" => "Domain administrator deleted."
					"[event][id]" => "Domain:administratordeleted"
					"[rsa][message][id1]" => "Domain:administratordeleted"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Domain:disabled
		# line in RSA: Domain "<domain>" was disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain \"%{domain}\" was disabled" }
				id => "message-Domain:disabled"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Domain disabled"
					"[event][id]" => "Domain:disabled"
					"[rsa][message][id1]" => "Domain:disabled"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Domain:enabled
		# line in RSA: Domain "<domain>" was enabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain \"%{domain}\" was enabled" }
				id => "message-Domain:enabled"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Enable"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Domain enabled"
					"[event][id]" => "Domain:enabled"
					"[rsa][message][id1]" => "Domain:enabled"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Failed" {
		# MESSAGE Failed
		# line in RSA: Failed to connect to the server. <action>. ErrorCode: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to connect to the server. %{action}. ErrorCode: %{resultcode}" }
				id => "message-Failed"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to connect to the server."
					"[event][id]" => "Failed"
					"[rsa][message][id1]" => "Failed"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:01
		# line in RSA: Failed to contact server for more than { <fld1> times.,Event time:<fld17><fld18>|<fld1> times.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Failed:02
		# line in RSA: Failed to disable Windows firewall
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to disable Windows firewall" }
				id => "message-Failed:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to disable Windows firewall."
					"[event][id]" => "Failed:02"
					"[rsa][message][id1]" => "Failed:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:03
		# line in RSA: Failed to install teefer driver
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to install teefer driver" }
				id => "message-Failed:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to install teefer driver."
					"[event][id]" => "Failed:03"
					"[rsa][message][id1]" => "Failed:03"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:04
		# line in RSA: Failed to connect to <fld22>. Make sure the server can ping or resolve this domain. ErrorCode: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to connect to %{fld22}. Make sure the server can ping or resolve this domain. ErrorCode: %{resultcode}" }
				id => "message-Failed:04"
				add_field => {
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to connect."
					"[event][id]" => "Failed:04"
					"[rsa][message][id1]" => "Failed:04"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:05
		# line in RSA: Failed to download new client upgrade package from the management server.     New Version: <version>   Package size: <filename_size> bytes.  Package url: <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to download new client upgrade package from the management server.     New Version: %{version}   Package size: %{filename_size} bytes.  Package url: %{url}" }
				id => "message-Failed:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Agent"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to download new client upgrade package from the management server."
					"[event][id]" => "Failed:05"
					"[rsa][message][id1]" => "Failed:05"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:06
		# line in RSA: Failed to import server policy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to import server policy." }
				id => "message-Failed:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to import server policy."
					"[event][id]" => "Failed:06"
					"[rsa][message][id1]" => "Failed:06"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:07
		# line in RSA: Failed to load plugin:<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to load plugin:%{filename}" }
				id => "message-Failed:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to load plugin"
					"[event][id]" => "Failed:07"
					"[rsa][message][id1]" => "Failed:07"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:08
		# line in RSA: Failed to clean up LiveUpdate downloaded content
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to clean up LiveUpdate downloaded content" }
				id => "message-Failed:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to clean up LiveUpdate downloaded content"
					"[event][id]" => "Failed:08"
					"[rsa][message][id1]" => "Failed:08"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:09
		# line in RSA: Failed to Login to Remote Site [<node>] Failed to connect to the server.  Make sure that the server is running and your session has not timed out. If you can reach the server but cannot log on, make sure that you provided the correct parameters. If you are experiencing network issues, contact your system administrator.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to Login to Remote Site [%{node}] Failed to connect to the server.  Make sure that the server is running and your session has not timed out. If you can reach the server but cannot log on, make sure that you provided the correct parameters. If you are experiencing network issues, contact your system administrator." }
				id => "message-Failed:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to Login to Remote Site"
					"[event][id]" => "Failed:09"
					"[rsa][message][id1]" => "Failed:09"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:10
		# line in RSA: Failed to Login to Remote Site [<node>] Replication partnership has been deleted from remote site.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to Login to Remote Site [%{node}] Replication partnership has been deleted from remote site." }
				id => "message-Failed:10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to Login to Remote Site"
					"[event][id]" => "Failed:10"
					"[rsa][message][id1]" => "Failed:10"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Failed:11
		# line in RSA: Failed to import new policy.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to import new policy.,Event time: %{event_time_string}" }
				id => "message-Failed:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Failed to import new policy."
					"[event][id]" => "Failed:11"
					"[rsa][message][id1]" => "Failed:11"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:24
		# line in RSA: Failed to set a custom action for IPS signature <sigid> (errcode=0x<resultcode>). Most probably, this IPS signature was removed from the IPS {content."|content.}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Failed[\s]+to[\s]+set[\s]+a[\s]+custom[\s]+action[\s]+for[\s]+IPS[\s]+signature[\s]+(?<sigid>[^\s]*)[\s]+\(errcode=0x(?<resultcode>[^\)]*)\)\.[\s]+Most[\s]+probably,[\s]+this[\s]+IPS[\s]+signature[\s]+was[\s]+removed[\s]+from[\s]+the[\s]+IPS[\s]+(content\.\"|content\.)$" }
				id => "message-Network:24"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to set a custom action for IPS signature"
					"[event][id]" => "Network:24"
					"[rsa][message][id1]" => "Network:24"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SYLINK:03
		# line in RSA: Failed to connect to all GUPs, now trying to connect SEPM"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to connect to all GUPs, now trying to connect SEPM\"" }
				id => "message-SYLINK:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Failed to connect to all GUPs."
					"[event][id]" => "SYLINK:03"
					"[rsa][message][id1]" => "SYLINK:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Firewall" {
		# MESSAGE Firewall
		# line in RSA:  Firewall driver failed to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Firewall driver failed to %{info}" }
				id => "message-Firewall"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Firewall driver failed."
					"[event][id]" => "Firewall"
					"[rsa][message][id1]" => "Firewall"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Firewall:01
		# line in RSA: Firewall is enabled,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Firewall is enabled,Event time: %{event_time_string}" }
				id => "message-Firewall:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Firewall is enabled"
					"[event][id]" => "Firewall:01"
					"[rsa][message][id1]" => "Firewall:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Firewall:02
		# line in RSA: Firewall is disabled by policy,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Firewall is disabled by policy,Event time: %{event_time_string}" }
				id => "message-Firewall:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Firewall is disabled by policy"
					"[event][id]" => "Firewall:02"
					"[rsa][message][id1]" => "Firewall:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Firewall:03
		# line in RSA: Firewall is disabled,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Firewall is disabled,Event time: %{event_time_string}" }
				id => "message-Firewall:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Firewall is disabled"
					"[event][id]" => "Firewall:03"
					"[rsa][message][id1]" => "Firewall:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Group" {
		# MESSAGE Group:created
		# line in RSA: Group has been created
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group has been created" }
				id => "message-Group:created"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Group has been created"
					"[event][id]" => "Group:created"
					"[rsa][message][id1]" => "Group:created"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Group:deleted
		# line in RSA: Group has been deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group has been deleted" }
				id => "message-Group:deleted"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Group has been deleted"
					"[event][id]" => "Group:deleted"
					"[rsa][message][id1]" => "Group:deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Group:deleted_01
		# line in RSA: Group '<group>' was deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group '%{group}' was deleted" }
				id => "message-Group:deleted_01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Group was deleted"
					"[event][id]" => "Group:deleted_01"
					"[rsa][message][id1]" => "Group:deleted_01"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Group:moved
		# line in RSA: Group has been moved
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group has been moved" }
				id => "message-Group:moved"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Group has been moved"
					"[event][id]" => "Group:moved"
					"[rsa][message][id1]" => "Group:moved"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Group:renamed
		# line in RSA: Group has been renamed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group has been renamed" }
				id => "message-Group:renamed"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Group has been renamed"
					"[event][id]" => "Group:renamed"
					"[rsa][message][id1]" => "Group:renamed"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Group:added
		# line in RSA: Group '<group>' was added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group '%{group}' was added" }
				id => "message-Group:added"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Group was added"
					"[event][id]" => "Group:added"
					"[rsa][message][id1]" => "Group:added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Host" {
		# MESSAGE Host
		# line in RSA:  Host Integrity check is disabled. <info> by the <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity check is disabled. %{info} by the %{username}" }
				id => "message-Host"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check is disabled."
					"[event][id]" => "Host"
					"[rsa][message][id1]" => "Host"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:01
		# line in RSA:  <info> up-to-date
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info} up-to-date" }
				id => "message-Host:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Component is up-to-date"
					"[event][id]" => "Host:01"
					"[rsa][message][id1]" => "Host:01"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:02
		# line in RSA:  Host Integrity check failed   Requirement: "<fld11>" passed   Requirement: "<fld12>" failed   Requirement: "<fld13>" passed   Requirement: "<fld14>" passed <fld44>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity check failed   Requirement: \"%{fld11}\" passed   Requirement: \"%{fld12}\" failed   Requirement: \"%{fld13}\" passed   Requirement: \"%{fld14}\" passed %{fld44},Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain}" }
				id => "message-Host:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check failed."
					"[event][id]" => "Host:02"
					"[rsa][message][id1]" => "Host:02"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:05
		# line in RSA:  Host Integrity failed but reported as pass   Requirement: "<fld11>" passed   Requirement: "<fld12>" passed   Requirement: "<fld13>" passed   Requirement: "<fld14>" failed <fld44>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity failed but reported as pass   Requirement: \"%{fld11}\" passed   Requirement: \"%{fld12}\" passed   Requirement: \"%{fld13}\" passed   Requirement: \"%{fld14}\" failed %{fld44},Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity failed but reported as pass"
					"[event][id]" => "Host:05"
					"[rsa][message][id1]" => "Host:05"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:06
		# line in RSA:  Host Integrity failed but reported as pass   Requirement: "<fld11>" <fld18>   Requirement: "<fld12>" <fld17>   Requirement: "<fld13>" <fld16>   Requirement: "<fld14>" <fld15> <fld44>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity failed but reported as pass   Requirement: \"%{fld11}\" %{fld18}   Requirement: \"%{fld12}\" %{fld17}   Requirement: \"%{fld13}\" %{fld16}   Requirement: \"%{fld14}\" %{fld15} %{fld44},Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity failed but reported as pass"
					"[event][id]" => "Host:06"
					"[rsa][message][id1]" => "Host:06"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:04
		# line in RSA:  Host Integrity check failed   <result>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity check failed   %{result},Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check failed"
					"[event][id]" => "Host:04"
					"[rsa][message][id1]" => "Host:04"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:03
		# line in RSA:  Host Integrity check passed   Requirement: "<fld11>" passed   Requirement: "<fld12>" passed   Requirement: "<fld13>" passed   Requirement: "<fld14>" passed <fld44>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity check passed   Requirement: \"%{fld11}\" passed   Requirement: \"%{fld12}\" passed   Requirement: \"%{fld13}\" passed   Requirement: \"%{fld14}\" passed %{fld44},Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check passed"
					"[event][id]" => "Host:03"
					"[rsa][message][id1]" => "Host:03"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:07
		# line in RSA:  Host Integrity check passed<space>Requirement: '<fld11>' passed <fld12>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<fld24>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity check passed%{space}Requirement: '%{fld11}' passed %{fld12},Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL:%{fld24},Intrusion Payload URL:%{fld25}" }
				id => "message-Host:07"
				add_field => {
				"hostip" => "%{hhostip}"
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check passed"
					"[event][id]" => "Host:07"
					"[rsa][message][id1]" => "Host:07"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Host:08
		# line in RSA: {<shost>, Host Integrity check passed | Host Integrity check passed} ,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<shost>[^,]*),[\s]+Host[\s]+Integrity[\s]+check[\s]+passed[\s]+|[\s]*Host[\s]+Integrity[\s]+check[\s]+passed)[\s]+,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld3>[^,]*),Remote:[\s]+(?<fld4>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld5>[^,]*),Unknown,OTHERS,,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Host:08"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_outcome" => "Success"
				"event_description" => "Host Integrity check passed"
					"[event][id]" => "Host:08"
					"[rsa][message][id1]" => "Host:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Host:09
		# line in RSA: <shost>, Host Integrity check pass.<info>,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,{Domain:| Domain:} <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<shost>[^,]*),[\s]+Host[\s]+Integrity[\s]+check[\s]+pass\.(?<info>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld3>[^,]*),Remote:[\s]+(?<fld4>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld5>[^,]*),Unknown,OTHERS,,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),(Domain:|[\s]*Domain:)[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)$" }
				id => "message-Host:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "Host:09"
					"[rsa][message][id1]" => "Host:09"
					"[event][categoryid]" => "1701070000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Smc:06
		# line in RSA: Host Integrity check is disabled.  Only do Host Integrity checking when connected to the Symantec Endpoint Protection Manager is checked.,Event time: <fld17> <fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Integrity check is disabled.  Only do Host Integrity checking when connected to the Symantec Endpoint Protection Manager is checked.,Event time: %{fld17} %{fld18}" }
				id => "message-Smc:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Host Integrity check is disabled."
					"[event][id]" => "Smc:06"
					"[rsa][message][id1]" => "Smc:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId131
	# line in RSA: <fld31> ???????????????   ??: "<fld11>"??   ??: "<fld12>"??   ??: "<fld13>"??   ??: "<fld14>"??,??????????? ,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld25>
	else if [logstash][msgparser][id] == "msgParserId131" {
		dissect {
			mapping => { "message" => "%{fld31} ???????????????   ??: \"%{fld11}\"??   ??: \"%{fld12}\"??   ??: \"%{fld13}\"??   ??: \"%{fld14}\"??,??????????? ,Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld25}" }
			id => "msgParserId131"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Intrusion" {
		# MESSAGE Intrusion
		# line in RSA: <info> { is | was } <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<info>[^\s]*)[\s]+([\s]*is[\s]+|[\s]*was[\s]+)[\s]+(?<action>.*)$" }
				id => "message-Intrusion"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Intrusion Prevention signatures is up-to-date."
					"[event][id]" => "Intrusion"
					"[rsa][message][id1]" => "Intrusion"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Intrusion:01
		# line in RSA: <info> failed to update
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info} failed to update" }
				id => "message-Intrusion:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => " Failed to update Signature"
					"[event][id]" => "Intrusion:01"
					"[rsa][message][id1]" => "Intrusion:01"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId137
	# line in RSA: Invalid log record:<info>
	else if [logstash][msgparser][id] == "msgParserId137" {
		dissect {
			mapping => { "message" => "Invalid log record:%{info}" }
			id => "msgParserId137"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Invalid log record"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA: Limited Administrator administrator "<change_old>" was renamed to "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "Limited Administrator administrator \"%{change_old}\" was renamed to \"%{change_new}\"" }
			id => "msgParserId138"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Limited Administrator renamed"
				"username" => "%{husername}"
				"change_attribute" => "limited administrator username."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "LiveUpdate" {
		# MESSAGE LiveUpdate:08
		# line in RSA: LiveUpdate will start next on <info> on <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate will start next on %{info} on %{product}" }
				id => "message-LiveUpdate:08"
				add_field => {
				"event_description" => "LiveUpdate"
					"[event][id]" => "LiveUpdate:08"
					"[rsa][message][id1]" => "LiveUpdate:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:01
		# line in RSA: LiveUpdate <info> on <product>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate %{info} on %{product}\"" }
				id => "message-LiveUpdate:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate"
					"[event][id]" => "LiveUpdate:01"
					"[rsa][message][id1]" => "LiveUpdate:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate
		# line in RSA: LiveUpdate failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate failed." }
				id => "message-LiveUpdate"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate failed."
					"[event][id]" => "LiveUpdate"
					"[rsa][message][id1]" => "LiveUpdate"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:04
		# line in RSA: LiveUpdate encountered one or more errors. Return code = <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate encountered one or more errors. Return code = %{resultcode}" }
				id => "message-LiveUpdate:04"
				add_field => {
				"event_description" => "LiveUpdate encountered one or more errors"
					"[event][id]" => "LiveUpdate:04"
					"[rsa][message][id1]" => "LiveUpdate:04"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:02
		# line in RSA: LiveUpdate succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate succeeded" }
				id => "message-LiveUpdate:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate succeeded"
					"[event][id]" => "LiveUpdate:02"
					"[rsa][message][id1]" => "LiveUpdate:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:09
		# line in RSA: Category: <fld22>,LiveUpdate Manager,[LiveUpdate error submission] Submitting information to Symantec failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,[LiveUpdate error submission] Submitting information to Symantec failed." }
				id => "message-LiveUpdate:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Submitting information to Symantec failed."
					"[event][id]" => "LiveUpdate:09"
					"[rsa][message][id1]" => "LiveUpdate:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:10
		# line in RSA: LiveUpdate encountered an error: Failed to connect to the LiveUpdate server { (<resultcode>).,Event time:<fld17><fld18>|(<resultcode>)}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:11
		# line in RSA: Category: <fld22>,LiveUpdate Manager,"An update for <application> failed to install.  Error: <resultcode>, DuResult:<fld23>{.",Event time:<fld17><fld18>|."}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:12
		# line in RSA: LiveUpdate re-run triggered by the download of content catalog.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate re-run triggered by the download of content catalog." }
				id => "message-LiveUpdate:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate re-run triggered by the download of content catalog."
					"[event][id]" => "LiveUpdate:12"
					"[rsa][message][id1]" => "LiveUpdate:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:13
		# line in RSA: LiveUpdate cannot be run because all licenses have expired.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate cannot be run because all licenses have expired." }
				id => "message-LiveUpdate:13"
				add_field => {
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate cannot be run because all licenses have expired."
					"[event][id]" => "LiveUpdate:13"
					"[rsa][message][id1]" => "LiveUpdate:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate::05
		# line in RSA: LiveUpdate started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate started." }
				id => "message-LiveUpdate::05"
				add_field => {
				"action" => "LiveUpdate started."
					"[event][id]" => "LiveUpdate::05"
					"[rsa][message][id1]" => "LiveUpdate::05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate::06
		# line in RSA: LiveUpdate retry started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate retry started." }
				id => "message-LiveUpdate::06"
				add_field => {
				"action" => "LiveUpdate retry started."
					"[event][id]" => "LiveUpdate::06"
					"[rsa][message][id1]" => "LiveUpdate::06"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate::07
		# line in RSA: LiveUpdate retry succeeded.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate retry succeeded." }
				id => "message-LiveUpdate::07"
				add_field => {
				"action" => "LiveUpdate retry succeeded."
					"[event][id]" => "LiveUpdate::07"
					"[rsa][message][id1]" => "LiveUpdate::07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate::08
		# line in RSA: LiveUpdate retry failed.  Will try again.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate retry failed.  Will try again." }
				id => "message-LiveUpdate::08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"action" => "LiveUpdate retry failed."
					"[event][id]" => "LiveUpdate::08"
					"[rsa][message][id1]" => "LiveUpdate::08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:14
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Centralized Reputation Settings from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Centralized Reputation Settings from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:14"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Centralized Reputation Settings from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:14"
					"[rsa][message][id1]" => "LiveUpdate:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:15
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Intrusion Prevention Signatures (hub) from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Intrusion Prevention Signatures (hub) from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "SignatureDB"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Intrusion Prevention Signatures (hub) from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:15"
					"[rsa][message][id1]" => "LiveUpdate:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:16
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Intrusion Prevention Signatures from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Intrusion Prevention Signatures from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:16"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "SignatureDB"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Intrusion Prevention Signatures from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:16"
					"[rsa][message][id1]" => "LiveUpdate:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:17
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Revocation Data from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Revocation Data from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:17"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Revocation Data from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:17"
					"[rsa][message][id1]" => "LiveUpdate:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:18
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for SONAR Definitions from LiveUpdate failed to install. Error:<result>{(<resultcode>),Event time:<fld17><fld18>|(<resultcode>)}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:19
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Symantec Whitelist from LiveUpdate failed to install. Error:<result>{(<resultcode>),Event time:<fld17><fld18>|(<resultcode>)}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:20
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Virus and Spyware Definitions Win32 (hub) from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Virus and Spyware Definitions Win32 (hub) from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:20"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "SignatureDB"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Virus and Spyware Definitions Win32 (hub) from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:20"
					"[rsa][message][id1]" => "LiveUpdate:20"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:21
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Virus and Spyware Definitions Win32 from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Virus and Spyware Definitions Win32 from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:21"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "SignatureDB"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Virus and Spyware Definitions Win32 from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:21"
					"[rsa][message][id1]" => "LiveUpdate:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:22
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Virus and Spyware Definitions Win64 (hub) from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Virus and Spyware Definitions Win64 (hub) from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:22"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "SignatureDB"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Virus and Spyware Definitions Win64 (hub) from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:22"
					"[rsa][message][id1]" => "LiveUpdate:22"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:23
		# line in RSA: Category: <fld11>,LiveUpdate Manager,An update for Virus and Spyware Definitions Win64 from LiveUpdate failed to install. Error:<result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,An update for Virus and Spyware Definitions Win64 from LiveUpdate failed to install. Error:%{result}(%{resultcode})" }
				id => "message-LiveUpdate:23"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "SignatureDB"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
				"event_time_string" => "%{htime}"
				"event_description" => "An update for Virus and Spyware Definitions Win64 from LiveUpdate failed to install."
					"[event][id]" => "LiveUpdate:23"
					"[rsa][message][id1]" => "LiveUpdate:23"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:24
		# line in RSA: LiveUpdate encountered an error: <result> {(<resultcode>).,Event time:<fld17><fld18>|(<resultcode>).}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:25
		# line in RSA: Category: <fld11>,LiveUpdate Manager,The latest Revocation Data update failed to load. The component has no valid content and will not function correctly until it is updated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,The latest Revocation Data update failed to load. The component has no valid content and will not function correctly until it is updated." }
				id => "message-LiveUpdate:25"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The latest Revocation Data update failed to load. The component has no valid content and will not function correctly until it is updated."
					"[event][id]" => "LiveUpdate:25"
					"[rsa][message][id1]" => "LiveUpdate:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:26
		# line in RSA: Category: <fld11>,LiveUpdate Manager,The latest Symantec Whitelist update failed to load. The component has no valid content and will not function correctly until it is updated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,The latest Symantec Whitelist update failed to load. The component has no valid content and will not function correctly until it is updated." }
				id => "message-LiveUpdate:26"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The latest Symantec Whitelist update failed to load. The component has no valid content and will not function correctly until it is updated."
					"[event][id]" => "LiveUpdate:26"
					"[rsa][message][id1]" => "LiveUpdate:26"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:27
		# line in RSA: Category: <fld11>,LiveUpdate Manager,A LiveUpdate session encountered errors.  <fld1> update(s) were available. <fld2> update(s) installed successfully. <fld3> update(s) failed to { install.,Event time:<fld17><fld18>| install.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:28
		# line in RSA: Category: <fld11>,LiveUpdate Manager,The latest Revocation Data update failed to load. The component will continue to use its previous {content.,Event time:<fld17><fld18>|content.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:29
		# line in RSA: <fld11>: Impossible de se connecter au serveur LiveUpdate <fld12>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld11}: Impossible de se connecter au serveur LiveUpdate %{fld12}." }
				id => "message-LiveUpdate:29"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate a rencontrï¿½ une erreur"
					"[event][id]" => "LiveUpdate:29"
					"[rsa][message][id1]" => "LiveUpdate:29"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:30
		# line in RSA: Category: <fld22>,LiveUpdate Manager,An update for <application> was successfully installed.<space>The new sequence number is <fld23>{.<space>Content was downloaded from <url> (<sport>).,Event time:<fld17><fld18>|.<space>Content was downloaded from <url> (<sport>).|.,Event time:<fld17><fld18>|.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:31
		# line in RSA: Category: <fld22>,LiveUpdate Manager,The latest <application> update failed to load. The component will continue to use its previous {content.,Event time:<fld17><fld18>| content.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:32
		# line in RSA: Category: <fld22>,LiveUpdate Manager,Scheduled LiveUpdate switched to <change_new>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,Scheduled LiveUpdate switched to %{change_new}." }
				id => "message-LiveUpdate:32"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Scheduled LiveUpdate interval switched."
					"[event][id]" => "LiveUpdate:32"
					"[rsa][message][id1]" => "LiveUpdate:32"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:33
		# line in RSA: Category: <fld22>,LiveUpdate Manager,An update for <application> from LiveUpdate failed to install. Error: <result>{(<resultcode>),Event time:<fld17><fld18>|(<resultcode>)}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:34
		# line in RSA: Category: <fld22>,LiveUpdate Manager,An update for <application> from Intelligent Updater was already installed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,An update for %{application} from Intelligent Updater was already installed." }
				id => "message-LiveUpdate:34"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "An update from Intelligent Updater already installed."
					"[event][id]" => "LiveUpdate:34"
					"[rsa][message][id1]" => "LiveUpdate:34"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:35
		# line in RSA: Category: <fld22>,LiveUpdate Manager,{A | The} LiveUpdate session {is | was} cancelled.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Category:[\s]+(?<fld22>[^,]*),LiveUpdate[\s]+Manager,(A[\s]+|[\s]*The)[\s]+LiveUpdate[\s]+session[\s]+(is[\s]+|[\s]*was)[\s]+cancelled\.$" }
				id => "message-LiveUpdate:35"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "A LiveUpdate session from LiveUpdate Manager was cancelled."
					"[event][id]" => "LiveUpdate:35"
					"[rsa][message][id1]" => "LiveUpdate:35"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:36
		# line in RSA: Category: <fld22>,LiveUpdate Manager,"A LiveUpdate session is already running, so the scheduled LiveUpdate was { skipped.",Event time:<fld17><fld18>|skipped."}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:37
		# line in RSA: Category: <fld22>,LiveUpdate Manager,Scheduled LiveUpdate keep trying to connect to Server for <fld23> times.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,Scheduled LiveUpdate keep trying to connect to Server for %{fld23} times." }
				id => "message-LiveUpdate:37"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "LiveUpdate is trying to connect to Server."
					"[event][id]" => "LiveUpdate:37"
					"[rsa][message][id1]" => "LiveUpdate:37"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:38
		# line in RSA: Category: <fld22>,LiveUpdate Manager,A LiveUpdate session ran successfully. { <fld23>,Event time:<fld17><fld18>|<fld23>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:39
		# line in RSA: Category: <fld22>,LiveUpdate Manager,[LiveUpdate error submission] Information submitted to { Symantec.,Event time:<fld17><fld18>|Symantec.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE LiveUpdate:41
		# line in RSA: Category: <fld11>,LiveUpdate Manager,The latest Submission Control Thresholds update failed to load. The component has no valid content and will not function correctly until it is updated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,The latest Submission Control Thresholds update failed to load. The component has no valid content and will not function correctly until it is updated." }
				id => "message-LiveUpdate:41"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The latest Submission Control Thresholds update failed to load."
					"[event][id]" => "LiveUpdate:41"
					"[rsa][message][id1]" => "LiveUpdate:41"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:42
		# line in RSA: Category: <fld11>,LiveUpdate Manager,The latest SONAR Definitions update failed to load. The component has no valid content and will not function correctly until it is updated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,The latest SONAR Definitions update failed to load. The component has no valid content and will not function correctly until it is updated." }
				id => "message-LiveUpdate:42"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The latest SONAR Definitions update failed to load."
					"[event][id]" => "LiveUpdate:42"
					"[rsa][message][id1]" => "LiveUpdate:42"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:43
		# line in RSA: Category: <fld11>,LiveUpdate Manager,The latest Endpoint Detection and Response update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},LiveUpdate Manager,The latest Endpoint Detection and Response update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: %{event_time_string}" }
				id => "message-LiveUpdate:43"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The latest SONAR Definitions update failed to load."
					"[event][id]" => "LiveUpdate:43"
					"[rsa][message][id1]" => "LiveUpdate:43"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:44
		# line in RSA: Category: <fld22>,LiveUpdate Manager,"[LiveUpdate error submission] Submitting information to Symantec failed. Network error : '<result>'<fld23>",Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,\"[LiveUpdate error submission] Submitting information to Symantec failed. Network error : '%{result}'%{fld23}\",Event time: %{event_time_string}" }
				id => "message-LiveUpdate:44"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Submitting information to Symantec failed."
					"[event][id]" => "LiveUpdate:44"
					"[rsa][message][id1]" => "LiveUpdate:44"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:45
		# line in RSA: LiveUpdate encountered an error.,Event time: <fld17> <fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LiveUpdate encountered an error.,Event time: %{fld17} %{fld18}" }
				id => "message-LiveUpdate:45"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "LiveUpdate encountered an error."
					"[event][id]" => "LiveUpdate:45"
					"[rsa][message][id1]" => "LiveUpdate:45"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE LiveUpdate:46
		# line in RSA: Category: <fld22>,LiveUpdate Manager,The latest AP Portal List update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,The latest AP Portal List update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: %{event_time_string}" }
				id => "message-LiveUpdate:46"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The latest AP Portal List update failed to load."
					"[event][id]" => "LiveUpdate:46"
					"[rsa][message][id1]" => "LiveUpdate:46"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:47
		# line in RSA: Category: <fld22>,LiveUpdate Manager,The latest Centralized Reputation Settings update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,The latest Centralized Reputation Settings update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: %{event_time_string}" }
				id => "message-LiveUpdate:47"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The latest Centralized Reputation Settings update failed to load."
					"[event][id]" => "LiveUpdate:47"
					"[rsa][message][id1]" => "LiveUpdate:47"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:48
		# line in RSA: Category: <fld22>,LiveUpdate Manager,The latest Power Eraser Definitions update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,The latest Power Eraser Definitions update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: %{event_time_string}" }
				id => "message-LiveUpdate:48"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The latest Power Eraser Definitions update failed to load."
					"[event][id]" => "LiveUpdate:48"
					"[rsa][message][id1]" => "LiveUpdate:48"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:49
		# line in RSA: Category: <fld22>,LiveUpdate Manager,The latest Common Network Transport Library and Configuration update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,The latest Common Network Transport Library and Configuration update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: %{event_time_string}" }
				id => "message-LiveUpdate:49"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The latest Common Network Transport Library and Configuration update failed to load."
					"[event][id]" => "LiveUpdate:49"
					"[rsa][message][id1]" => "LiveUpdate:49"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LiveUpdate:50
		# line in RSA: Category: <fld22>,LiveUpdate Manager,The latest Extended File Attributes and Signatures update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},LiveUpdate Manager,The latest Extended File Attributes and Signatures update failed to load. The component has no valid content and will not function correctly until it is updated.,Event time: %{event_time_string}" }
				id => "message-LiveUpdate:50"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The latest Extended File Attributes and Signatures update failed to load."
					"[event][id]" => "LiveUpdate:50"
					"[rsa][message][id1]" => "LiveUpdate:50"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Virus" {
		# MESSAGE LiveUpdate:40
		# line in RSA: Virus and Spyware Definitions were updated recently, so the scheduled LiveUpdate was {skipped.",Event time:<fld17><fld18>|skipped.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Virus
		# line in RSA:  Virus Found..Computer: <shost>..Date: <fld5>..Time: <fld6>..Virus Name: <virusname>..Path: <filename>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Virus Found..Computer: %{shost}..Date: %{fld5}..Time: %{fld6}..Virus Name: %{virusname}..Path: %{filename}..Severity: %{severity}..Source: %{product}" }
				id => "message-Virus"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Virus Found"
					"[event][id]" => "Virus"
					"[rsa][message][id1]" => "Virus"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:01
		# line in RSA:  Virus Found..Computer: <shost>..Date: <fld5>..Time: <fld6>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Virus Found..Computer: %{shost}..Date: %{fld5}..Time: %{fld6}..Severity: %{severity}..Source: %{product}" }
				id => "message-Virus:01"
				add_field => {
				"event_description" => "Virus Found"
					"[event][id]" => "Virus:01"
					"[rsa][message][id1]" => "Virus:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:02
		# line in RSA:  Virus Definition File Update..<fld4>..<fld5>..Update to computer <shost> of virus definition file <fld6> failed. Status <fld7>{ ... | .. } <severity>..<product>..<fld8>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Virus[\s]+Definition[\s]+File[\s]+Update\.\.(?<fld4>[^\.]*)\.\.(?<fld5>[^\.]*)\.\.Update[\s]+to[\s]+computer[\s]+(?<shost>[^\s]*)[\s]+of[\s]+virus[\s]+definition[\s]+file[\s]+(?<fld6>[^\s]*)[\s]+failed\.[\s]+Status[\s]+(?<fld7>[^\s\s]*)([\s]*\.\.\.[\s]+|[\s]*\.\.[\s]+)[\s]+(?<severity>[^\.]*)\.\.(?<product>[^\.]*)\.\.(?<fld8>.*)$" }
				id => "message-Virus:02"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "SignatureDB"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "Virus Definition File Update"
					"[event][id]" => "Virus:02"
					"[rsa][message][id1]" => "Virus:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:03
		# line in RSA:  Virus Definition File Update..<shost>..<fld5>..<severity>..<product>..<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Virus Definition File Update..%{shost}..%{fld5}..%{severity}..%{product}..%{fld6}" }
				id => "message-Virus:03"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "SignatureDB"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Virus Definition File Update"
					"[event][id]" => "Virus:03"
					"[rsa][message][id1]" => "Virus:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:09
		# line in RSA:  Virus Found..<shost>..<fld5>..<filename>.....<info>..<action>....<severity>..<product>..<fld6>..<username>..<virusname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Virus Found..%{shost}..%{fld5}..%{filename}.....%{info}..%{action}....%{severity}..%{product}..%{fld6}..%{username}..%{virusname}" }
				id => "message-Virus:09"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "%{hfld1}"
					"[event][id]" => "Virus:09"
					"[rsa][message][id1]" => "Virus:09"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:04
		# line in RSA:  Virus Found..<fld12>..<fld5>..<filename>..<info>..<action>..<severity>..<product>..<fld6>..<username>..<virusname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Virus Found..%{fld12}..%{fld5}..%{filename}..%{info}..%{action}..%{severity}..%{product}..%{fld6}..%{username}..%{virusname}" }
				id => "message-Virus:04"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "%{hfld1}"
					"[event][id]" => "Virus:04"
					"[rsa][message][id1]" => "Virus:04"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:12
		# line in RSA: Virus found,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<fld1>"|<fld1>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,0,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,IP[\s]+Address:[\s]+(?<saddr>[^,]*),Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<fld1>[^\"]*)\"|(?<fld1>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),,First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld52>[^,]*),0,Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>.*)$" }
				id => "message-Virus:12"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:12"
					"[rsa][message][id1]" => "Virus:12"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:15
		# line in RSA: Virus found,IP Address: <saddr>,{Computer name: <shost>,Intensive Protection Level: <fld61>,Certificate issuer: <fld60>,Certificate signer: <fld62>,Certificate thumbprint: <fld63>,Signing timestamp: <fld64>,Certificate serial number: <fld65>,Source: <event_source>|Computer name: <shost>,Source: <event_source>},Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<fld1>"|<fld1>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <url>,Web domain: <fld45>,Downloaded by: <filename>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>,Category set: <category>,Category type: <event_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,IP[\s]+Address:[\s]+(?<saddr>[^,]*),(Computer[\s]+name:[\s]+(?<shost>[^,]*),Intensive[\s]+Protection[\s]+Level:[\s]+(?<fld61>[^,]*),Certificate[\s]+issuer:[\s]+(?<fld60>[^,]*),Certificate[\s]+signer:[\s]+(?<fld62>[^,]*),Certificate[\s]+thumbprint:[\s]+(?<fld63>[^,]*),Signing[\s]+timestamp:[\s]+(?<fld64>[^,]*),Certificate[\s]+serial[\s]+number:[\s]+(?<fld65>[^,]*),Source:[\s]+(?<event_source>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*)),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<fld1>[^\"]*)\"|(?<fld1>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<url>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<filename>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),,First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld52>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<event_type>.*)$" }
				id => "message-Virus:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:15"
					"[rsa][message][id1]" => "Virus:15"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:13
		# line in RSA: Virus found,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<fld1>"|<fld1>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,{"Group: <group>"|Group: <group>},Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): {<filename_size>,Category set: <category>,Category type: <event_type>|<filename_size>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,IP[\s]+Address:[\s]+(?<saddr>[^,]*),Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<fld1>[^\"]*)\"|(?<fld1>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),(\"Group:[\s]+(?<group>[^\"]*)\"|Group:[\s]+(?<group>[^,]*)),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),,First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld52>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+((?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<event_type>.*)|(?<filename_size>.*))$" }
				id => "message-Virus:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:13"
					"[rsa][message][id1]" => "Virus:13"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:10
		# line in RSA: Virus found,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<fld1>"|<fld1>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,IP[\s]+Address:[\s]+(?<saddr>[^,]*),Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<fld1>[^\"]*)\"|(?<fld1>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>.*)$" }
				id => "message-Virus:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:10"
					"[rsa][message][id1]" => "Virus:10"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:14
		# line in RSA: Virus found,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<fld22>"|<fld22>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,First Seen: <fld50>,Sensitivity: <fld58>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<fld22>[^\"]*)\"|(?<fld22>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld58>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>.*)$" }
				id => "message-Virus:14"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:14"
					"[rsa][message][id1]" => "Virus:14"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:05
		# line in RSA: Virus found,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<info>"|<info>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<info>[^\"]*)\"|(?<info>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Virus:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:05"
					"[rsa][message][id1]" => "Virus:05"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:11
		# line in RSA: Virus found,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,{"<info>"|<info>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,"Group: <group>",Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Virus[\s]+found,Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(\"(?<info>[^\"]*)\"|(?<info>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),\"Group:[\s]+(?<group>[^\"]*)\",Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Virus:11"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Virus found"
					"[event][id]" => "Virus:11"
					"[rsa][message][id1]" => "Virus:11"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Virus:06
		# line in RSA:  Virus Found..Computer: <shost>..{Date: <fld5>|<fld5>}..File Path:<filename>..<info>..Requested Action:<action>..Severity:<severity>..Source:<product>..Time:<fld6>..User:<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Virus[\s]+Found\.\.Computer:[\s]+(?<shost>[^\.]*)\.\.(Date:[\s]+(?<fld5>[^\.]*)|(?<fld5>[^\.]*))\.\.File[\s]+Path:(?<filename>[^\.]*)\.\.(?<info>[^\.]*)\.\.Requested[\s]+Action:(?<action>[^\.]*)\.\.Severity:(?<severity>[^\.]*)\.\.Source:(?<product>[^\.]*)\.\.Time:(?<fld6>[^\.]*)\.\.User:(?<username>.*)$" }
				id => "message-Virus:06"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_description" => "%{hfld1}"
					"[event][id]" => "Virus:06"
					"[rsa][message][id1]" => "Virus:06"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Virus:07
		# line in RSA: <fld1>  Virus Found  <shost>  <fld5>  <filename>  Forward from <info>  <action>  <severity>  <product> Edition  <version>  <virusname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}  Virus Found  %{shost}  %{fld5}  %{filename}  Forward from %{info}  %{action}  %{severity}  %{product} Edition  %{version}  %{virusname}" }
				id => "message-Virus:07"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "%{hfld1}"
					"[event][id]" => "Virus:07"
					"[rsa][message][id1]" => "Virus:07"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Virus:08
		# line in RSA: <product> definitions <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{product} definitions %{info}" }
				id => "message-Virus:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Product successfully updated."
					"[event][id]" => "Virus:08"
					"[rsa][message][id1]" => "Virus:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Local" {
		# MESSAGE Local:01
		# line in RSA: <shost>, Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}, Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Local:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "Local:01"
					"[rsa][message][id1]" => "Local:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Local:02
		# line in RSA: Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{url},Intrusion Payload URL:%{fld25}" }
				id => "message-Local:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "Local:02"
					"[rsa][message][id1]" => "Local:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	# PARSER msgParserId218
	# line in RSA:  Location has been {changed | switched} to { <info>,Event time:<fld17><fld18>|<info>}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId219
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId219" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId219"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Management" {
		# MESSAGE Management
		# line in RSA:  Management server started up successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Management server started up successfully" }
				id => "message-Management"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Management server started up successfully."
					"[event][id]" => "Management"
					"[rsa][message][id1]" => "Management"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Management:01
		# line in RSA:  Management server shut down gracefully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Management server shut down gracefully" }
				id => "message-Management:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Management server shut down gracefully"
					"[event][id]" => "Management:01"
					"[rsa][message][id1]" => "Management:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Management:02
		# line in RSA:  Management Server has detected and ignored one or more duplicate entries.Please check the following entries in your directory server:<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Management Server has detected and ignored one or more duplicate entries.Please check the following entries in your directory server:%{fld12}" }
				id => "message-Management:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Management Server has detected and ignored one or more duplicate entries."
					"[event][id]" => "Management:02"
					"[rsa][message][id1]" => "Management:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "management" {
		# MESSAGE management
		# line in RSA: management server received the client log successfully,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "management server received the client log successfully,%{shost},%{username},%{group}" }
				id => "message-management"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The management server received the client log successfully."
					"[event][id]" => "management"
					"[rsa][message][id1]" => "management"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE management:01
		# line in RSA: management server received a report that the client computer changed its hardware identity,<shost>,<username>,<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "management server received a report that the client computer changed its hardware identity,%{shost},%{username},%{group}" }
				id => "message-management:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The management server received a report that the client computer changed its hardware identity."
					"[event][id]" => "management:01"
					"[rsa][message][id1]" => "management:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Network" {
		# MESSAGE Network
		# line in RSA: Network Threat Protection {---- Engine  version|-- Engine version} : <version>  Windows Version info:  Operating System: <os> Network  info:<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Network[\s]+Threat[\s]+Protection[\s]+(\-\-\-\-[\s]+Engine[\s]+version|\-\-[\s]+Engine[\s]+version)[\s]+:[\s]+(?<version>[^\s]*)[\s]+Windows[\s]+Version[\s]+info:[\s]+Operating[\s]+System:[\s]+(?<os>[^\s]*)[\s]+Network[\s]+info:(?<info>.*)$" }
				id => "message-Network"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Threat Protection information."
					"[event][id]" => "Network"
					"[rsa][message][id1]" => "Network"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:01
		# line in RSA: Network Threat Protection has been activated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Threat Protection has been activated" }
				id => "message-Network:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Threat Protection has been activated"
					"[event][id]" => "Network:01"
					"[rsa][message][id1]" => "Network:01"
					"[event][categoryid]" => "1701060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:02
		# line in RSA: Network Threat Protection applied a new IPS {Library|library} .
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Network[\s]+Threat[\s]+Protection[\s]+applied[\s]+a[\s]+new[\s]+IPS[\s]+(Library|library)[\s]+\.$" }
				id => "message-Network:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Threat Protection applied a new IPS Library."
					"[event][id]" => "Network:02"
					"[rsa][message][id1]" => "Network:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:03
		# line in RSA: The Network Threat Protection already has the newest policy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The Network Threat Protection already has the newest policy." }
				id => "message-Network:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The Network Threat Protection already has the newest policy."
					"[event][id]" => "Network:03"
					"[rsa][message][id1]" => "Network:03"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:04
		# line in RSA: The Network Threat Protection is unable to download the newest policy from the Symantec Endpoint Protection Manager.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The Network Threat Protection is unable to download the newest policy from the Symantec Endpoint Protection Manager." }
				id => "message-Network:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The Network Threat Protection is unable to download the newest policy from the Symantec Endpoint Protection Manager."
					"[event][id]" => "Network:04"
					"[rsa][message][id1]" => "Network:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:05
		# line in RSA: Network Threat Protection's firewall and Intrusion Prevention features are disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Threat Protection's firewall and Intrusion Prevention features are disabled" }
				id => "message-Network:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Threat Protection's firewall and Intrusion Prevention features are disabled"
					"[event][id]" => "Network:05"
					"[rsa][message][id1]" => "Network:05"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:06
		# line in RSA: The Network Threat Protection is unable to communicate with the Symantec Endpoint Protection Manager.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The Network Threat Protection is unable to communicate with the Symantec Endpoint Protection Manager." }
				id => "message-Network:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "The Network Threat Protection is unable to communicate with the Symantec Endpoint Protection Manager."
					"[event][id]" => "Network:06"
					"[rsa][message][id1]" => "Network:06"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:07
		# line in RSA: Network Audit Search Unagented Hosts Started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Audit Search Unagented Hosts Started" }
				id => "message-Network:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Audit Search Unagented Hosts Started."
					"[event][id]" => "Network:07"
					"[rsa][message][id1]" => "Network:07"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:08
		# line in RSA: Network Audit Search Unagented Hosts From NST Finished Abnormally
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Audit Search Unagented Hosts From NST Finished Abnormally" }
				id => "message-Network:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Audit Search Unagented Hosts From NST Finished Abnormally."
					"[event][id]" => "Network:08"
					"[rsa][message][id1]" => "Network:08"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:09
		# line in RSA: Network Audit Search Unagented Hosts From NST Finished Normally
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Audit Search Unagented Hosts From NST Finished Normally" }
				id => "message-Network:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Audit Search Unagented Hosts From NST Finished Abnormally."
					"[event][id]" => "Network:09"
					"[rsa][message][id1]" => "Network:09"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:10
		# line in RSA: Network Audit Client Remote Pushing Install Started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Audit Client Remote Pushing Install Started" }
				id => "message-Network:10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Audit Client Remote Pushing Install Started."
					"[event][id]" => "Network:10"
					"[rsa][message][id1]" => "Network:10"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:11
		# line in RSA: Network Audit Client Remote Pushing Install Finished Normally
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Audit Client Remote Pushing Install Finished Normally" }
				id => "message-Network:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Audit Client Remote Pushing Install Finished Normally."
					"[event][id]" => "Network:11"
					"[rsa][message][id1]" => "Network:11"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:12
		# line in RSA: Network Intrusion Prevention is malfunctioning, <result>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Intrusion Prevention is malfunctioning, %{result}\"" }
				id => "message-Network:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Intrusion Prevention is malfunctioning"
					"[event][id]" => "Network:12"
					"[rsa][message][id1]" => "Network:12"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:13
		# line in RSA: Category: <fld11>,Network Intrusion Protection Sys,Browser Intrusion Prevention is malfunctioning. Browser type: <obj_name>.Try to update the signatures Browser path: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld11},Network Intrusion Protection Sys,Browser Intrusion Prevention is malfunctioning. Browser type: %{obj_name}.Try to update the signatures Browser path: %{filename}" }
				id => "message-Network:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => "Browser Intrusion Prevention is malfunctioning."
					"[event][id]" => "Network:13"
					"[rsa][message][id1]" => "Network:13"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:16
		# line in RSA: Network Intrusion Prevention and Browser Intrusion Prevention are malfunctioning because their content is not installed. The IPS content is going to be installed automatically
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Intrusion Prevention and Browser Intrusion Prevention are malfunctioning because their content is not installed. The IPS content is going to be installed automatically" }
				id => "message-Network:16"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Intrusion Prevention and Browser Intrusion Prevention are malfunctioning because their content is not installed."
					"[event][id]" => "Network:16"
					"[rsa][message][id1]" => "Network:16"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:17
		# line in RSA: Network Intrusion Prevention is malfunctioning
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Intrusion Prevention is malfunctioning" }
				id => "message-Network:17"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Intrusion Prevention is malfunctioning"
					"[event][id]" => "Network:17"
					"[rsa][message][id1]" => "Network:17"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:18
		# line in RSA: Network Intrusion Prevention is not protecting machine because its driver was unloaded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Intrusion Prevention is not protecting machine because its driver was unloaded" }
				id => "message-Network:18"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Intrusion Prevention is not protecting machine because its driver was unloaded"
					"[event][id]" => "Network:18"
					"[rsa][message][id1]" => "Network:18"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:19
		# line in RSA: Network Threat Protection's firewall is disabled by policy
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Threat Protection's firewall is disabled by policy" }
				id => "message-Network:19"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Threat Protection's firewall is disabled"
					"[event][id]" => "Network:19"
					"[rsa][message][id1]" => "Network:19"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:21
		# line in RSA: <service> has been restored and <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{service} has been restored and %{result}" }
				id => "message-Network:21"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Intrusion Prevention has been restored"
					"[event][id]" => "Network:21"
					"[rsa][message][id1]" => "Network:21"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:33
		# line in RSA: <service> is not protecting machine because its driver was disabled,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{service} is not protecting machine because its driver was disabled,Event time: %{event_time_string}" }
				id => "message-Network:33"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Network Intrusion Prevention is not protecting machine because its driver was disabled"
					"[event][id]" => "Network:33"
					"[rsa][message][id1]" => "Network:33"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:25
		# line in RSA:  Network Threat Protection's firewall is { enabled,Event time:<fld17><fld18>| enabled }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Network:27
		# line in RSA: Network Intrusion Prevention {disabled | disabled by policy}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Network[\s]+Intrusion[\s]+Prevention[\s]+(disabled[\s]+|[\s]*disabled[\s]+by[\s]+policy)$" }
				id => "message-Network:27"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Intrusion Prevention disabled"
					"[event][id]" => "Network:27"
					"[rsa][message][id1]" => "Network:27"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:28
		# line in RSA: Network Intrusion Prevention {enabled,Event time:<fld17><fld18>| enabled}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Network:30
		# line in RSA: Network Audit Client Remote Pushing Install Finished Abnormally in Pusing Stage
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Audit Client Remote Pushing Install Finished Abnormally in Pusing Stage" }
				id => "message-Network:30"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Network Audit Client Remote Pushing Install Finished Abnormally in Pusing Stage"
					"[event][id]" => "Network:30"
					"[rsa][message][id1]" => "Network:30"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Firefox" {
		# MESSAGE Network:14
		# line in RSA: Firefox Browser Intrusion Prevention is malfunctioning
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Firefox Browser Intrusion Prevention is malfunctioning" }
				id => "message-Network:14"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => "Firefox Browser Intrusion Prevention is malfunctioning."
					"[event][id]" => "Network:14"
					"[rsa][message][id1]" => "Network:14"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:20
		# line in RSA: Firefox Browser Intrusion Prevention {disabled | disabled by policy}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Firefox[\s]+Browser[\s]+Intrusion[\s]+Prevention[\s]+(disabled[\s]+|[\s]*disabled[\s]+by[\s]+policy)$" }
				id => "message-Network:20"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Firefox Browser Intrusion Prevention disabled"
					"[event][id]" => "Network:20"
					"[rsa][message][id1]" => "Network:20"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:26
		# line in RSA: Firefox Browser Intrusion Prevention { enabled,Event time:<fld17><fld18>| enabled }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Internet" {
		# MESSAGE Network:15
		# line in RSA: Internet Explorer Browser Intrusion Prevention is malfunctioning
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Internet Explorer Browser Intrusion Prevention is malfunctioning" }
				id => "message-Network:15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => "Internet Explorer Browser Intrusion Prevention is malfunctioning."
					"[event][id]" => "Network:15"
					"[rsa][message][id1]" => "Network:15"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:22
		# line in RSA: Internet Explorer Browser Intrusion Prevention { enabled,Event time:<fld17><fld18>| enabled}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Network:23
		# line in RSA: Internet Explorer Browser Intrusion Prevention {disabled | disabled by policy}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Internet[\s]+Explorer[\s]+Browser[\s]+Intrusion[\s]+Prevention[\s]+(disabled[\s]+|[\s]*disabled[\s]+by[\s]+policy)$" }
				id => "message-Network:23"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Internet Explorer Browser Intrusion Prevention disabled"
					"[event][id]" => "Network:23"
					"[rsa][message][id1]" => "Network:23"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Generic" {
		# MESSAGE Network:29
		# line in RSA: Generic Exploit Mitigation {enabled|disabled|is malfunctioning},Event time: <event_time_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Generic[\s]+Exploit[\s]+Mitigation[\s]+(enabled|disabled|is[\s]+malfunctioning),Event[\s]+time:[\s]+(?<event_time_string>.*)$" }
				id => "message-Network:29"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Generic Exploit Mitigation"
					"[event][id]" => "Network:29"
					"[rsa][message][id1]" => "Network:29"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Network:31
		# line in RSA: Category: <fld22>,Generic Exploit Mitigation Syste,Already running process (PID:<process_id>) '<process>' is affected by a change to the application rules.,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},Generic Exploit Mitigation Syste,Already running process (PID:%{process_id}) '%{process}' is affected by a change to the application rules.,Event time: %{event_time_string}" }
				id => "message-Network:31"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Generic Exploit Mitigation"
					"[event][id]" => "Network:31"
					"[rsa][message][id1]" => "Network:31"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId258
	# line in RSA: <event_description>,Event time: <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "%{event_description},Event time: %{event_time_string}" }
			id => "msgParserId258"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "New" {
		# MESSAGE New
		# line in RSA: New virus definition file loaded. { Version: <version>,Event time:<fld17><fld18> |Version: <version>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE New:01
		# line in RSA:  New Value '<change_attribute>' = { '<change_new>',Event time:<fld17><fld18>|'<change_new>' }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE New:02
		# line in RSA:  New AgentGUID = <fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "New AgentGUID = %{fld22}" }
				id => "message-New:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"domain" => "%{hdomain}"
				"event_description" => "New AgentGUID"
					"[event][id]" => "New:02"
					"[rsa][message][id1]" => "New:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE New:03
		# line in RSA:  New policy has been imported.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "New policy has been imported." }
				id => "message-New:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"domain" => "%{hdomain}"
				"event_description" => "New policy has been imported."
					"[event][id]" => "New:03"
					"[rsa][message][id1]" => "New:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE New:04
		# line in RSA: New content update failed to download from the management server.     Remote file path: { <url>,Event time: <event_time_string> | <url> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^New[\s]+content[\s]+update[\s]+failed[\s]+to[\s]+download[\s]+from[\s]+the[\s]+management[\s]+server\.[\s]+Remote[\s]+file[\s]+path:[\s]+([\s]*(?<url>[^,]*),Event[\s]+time:[\s]+(?<event_time_string>[^\s]*)[\s]+|[\s]*(?<url>[^\s]*)[\s]+)$" }
				id => "message-New:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"domain" => "%{hdomain}"
				"event_description" => "New content update failed to download from the management server"
					"[event][id]" => "New:04"
					"[rsa][message][id1]" => "New:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE New:05
		# line in RSA: New content update failed to download from Group Update Provider.     Remote file path: <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "New content update failed to download from Group Update Provider.     Remote file path: %{url}" }
				id => "message-New:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"domain" => "%{hdomain}"
				"event_description" => "New content update failed to download from Group Update Provider"
					"[event][id]" => "New:05"
					"[rsa][message][id1]" => "New:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "No" {
		# MESSAGE No
		# line in RSA: No <virusname> virus found events got swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No %{virusname} virus found events got swept." }
				id => "message-No"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"threat_name" => "%{virusname}"
				"event_time_string" => "%{htime}"
				"event_description" => "No virus found events got swept."
					"[event][id]" => "No"
					"[rsa][message][id1]" => "No"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:01
		# line in RSA: No clients got swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No clients got swept." }
				id => "message-No:01"
				add_field => {
				"event_description" => "No clients got swept."
					"[event][id]" => "No:01"
					"[rsa][message][id1]" => "No:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:02
		# line in RSA: No objects got swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No objects got swept." }
				id => "message-No:02"
				add_field => {
				"event_description" => "No objects got swept."
					"[event][id]" => "No:02"
					"[rsa][message][id1]" => "No:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:06
		# line in RSA: No clients got swept [Domain: <sdomain>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No clients got swept [Domain: %{sdomain}]." }
				id => "message-No:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "No objects got swept."
					"[event][id]" => "No:06"
					"[rsa][message][id1]" => "No:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:03
		# line in RSA: No old risk events got swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No old risk events got swept." }
				id => "message-No:03"
				add_field => {
				"event_description" => "No old risk events got swept."
					"[event][id]" => "No:03"
					"[rsa][message][id1]" => "No:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:04
		# line in RSA: No physical files got swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No physical files got swept." }
				id => "message-No:04"
				add_field => {
				"event_description" => "No physical files got swept."
					"[event][id]" => "No:04"
					"[rsa][message][id1]" => "No:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:05
		# line in RSA: No risk events from deleted clients got swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No risk events from deleted clients got swept." }
				id => "message-No:05"
				add_field => {
				"event_description" => "No risk events from deleted clients got swept."
					"[event][id]" => "No:05"
					"[rsa][message][id1]" => "No:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE No:07
		# line in RSA: No updates found for <application>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No updates found for %{application}." }
				id => "message-No:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "No updates found."
					"[event][id]" => "No:07"
					"[rsa][message][id1]" => "No:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Organization" {
		# MESSAGE Organization:03
		# line in RSA:  Organization Unit or Container importing finished successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Organization Unit or Container importing finished successfully" }
				id => "message-Organization:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Organization Unit or Container importing finished successfully"
					"[event][id]" => "Organization:03"
					"[rsa][message][id1]" => "Organization:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Organization:02
		# line in RSA:  Organization Unit or Container importing started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Organization Unit or Container importing started" }
				id => "message-Organization:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Organization Unit or Container importing started."
					"[event][id]" => "Organization:02"
					"[rsa][message][id1]" => "Organization:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Organization:01
		# line in RSA:  Organization importing finished successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Organization importing finished successfully" }
				id => "message-Organization:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Organization importing finished successfully."
					"[event][id]" => "Organization:01"
					"[rsa][message][id1]" => "Organization:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Organization
		# line in RSA:  Organization importing started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Organization importing started" }
				id => "message-Organization"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Organization importing started."
					"[event][id]" => "Organization"
					"[rsa][message][id1]" => "Organization"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Number" {
		# MESSAGE Number:01
		# line in RSA: Number of <virusname> virus found events swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of %{virusname} virus found events swept: %{dclass_counter1}" }
				id => "message-Number:01"
				add_field => {
				"threat_name" => "%{virusname}"
				"event_description" => "Number of virus found events swept."
					"[event][id]" => "Number:01"
					"[rsa][message][id1]" => "Number:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number
		# line in RSA: Number of virus definition records swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of virus definition records swept: %{dclass_counter1}" }
				id => "message-Number"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Number of virus definition records swept."
					"[event][id]" => "Number"
					"[rsa][message][id1]" => "Number"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:02
		# line in RSA: Number of scan events swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of scan events swept: %{dclass_counter1}" }
				id => "message-Number:02"
				add_field => {
				"event_description" => "Number of scan events swept."
					"[event][id]" => "Number:02"
					"[rsa][message][id1]" => "Number:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:04
		# line in RSA: Number of clients swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of clients swept: %{dclass_counter1}" }
				id => "message-Number:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of clients swept."
					"[event][id]" => "Number:04"
					"[rsa][message][id1]" => "Number:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:05
		# line in RSA: Number of old risk events swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of old risk events swept: %{dclass_counter1}" }
				id => "message-Number:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of old risk events swept."
					"[event][id]" => "Number:05"
					"[rsa][message][id1]" => "Number:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:06
		# line in RSA: Number of unacknowledged notifications swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of unacknowledged notifications swept: %{dclass_counter1}" }
				id => "message-Number:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of unacknowledged notification swept."
					"[event][id]" => "Number:06"
					"[rsa][message][id1]" => "Number:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:07
		# line in RSA: Number of objects swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of objects swept: %{dclass_counter1}" }
				id => "message-Number:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of objects swept."
					"[event][id]" => "Number:07"
					"[rsa][message][id1]" => "Number:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:08
		# line in RSA: Number of risk events from deleted clients swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of risk events from deleted clients swept: %{dclass_counter1}" }
				id => "message-Number:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of risk events swept."
					"[event][id]" => "Number:08"
					"[rsa][message][id1]" => "Number:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:09
		# line in RSA: Number of old risk events compressed: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of old risk events compressed: %{dclass_counter1}" }
				id => "message-Number:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of old risk events compressed."
					"[event][id]" => "Number:09"
					"[rsa][message][id1]" => "Number:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:10
		# line in RSA: Number of compressed risk events swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of compressed risk events swept: %{dclass_counter1}" }
				id => "message-Number:10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of compressed risk events swept."
					"[event][id]" => "Number:10"
					"[rsa][message][id1]" => "Number:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:11
		# line in RSA: Number of <info> { in the policy: <dclass_counter1>,Event time:<fld17><fld18> | in the policy: <dclass_counter1>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Number:12
		# line in RSA: Number of physical files swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of physical files swept: %{dclass_counter1}" }
				id => "message-Number:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Number of Group Update Providers"
					"[event][id]" => "Number:12"
					"[rsa][message][id1]" => "Number:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Number:13
		# line in RSA: Number of <fld1> swept: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of %{fld1} swept: %{dclass_counter1}" }
				id => "message-Number:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hhostid}"
				"a" => "Number of "
				"event_description" => "%{a}%{fld1}\t%{swept.}"
					"[event][id]" => "Number:13"
					"[rsa][message][id1]" => "Number:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Policy" {
		# MESSAGE Policy:added
		# line in RSA: Policy has been added,<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy has been added,%{info}" }
				id => "message-Policy:added"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Create"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Policy has been added"
					"[event][id]" => "Policy:added"
					"[rsa][message][id1]" => "Policy:added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Policy:added_01
		# line in RSA: Policy has been added:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy has been added:%{info}" }
				id => "message-Policy:added_01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Create"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Policy has been added"
					"[event][id]" => "Policy:added_01"
					"[rsa][message][id1]" => "Policy:added_01"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Policy:edited
		# line in RSA: Policy has been edited,<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy has been edited,%{info}" }
				id => "message-Policy:edited"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Policy has been edited"
					"[event][id]" => "Policy:edited"
					"[rsa][message][id1]" => "Policy:edited"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Policy:edited_01
		# line in RSA: Policy has been edited:<info>,<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy has been edited:%{info},%{fld1}" }
				id => "message-Policy:edited_01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Policy has been edited"
					"[event][id]" => "Policy:edited_01"
					"[rsa][message][id1]" => "Policy:edited_01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Policy:deleted
		# line in RSA: Policy has been deleted{,|:}<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Policy[\s]+has[\s]+been[\s]+deleted(,|:)(?<info>.*)$" }
				id => "message-Policy:deleted"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Delete"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "Policy has been deleted"
					"[event][id]" => "Policy:deleted"
					"[rsa][message][id1]" => "Policy:deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Potential" {
		# MESSAGE Potential:03
		# line in RSA: Potential risk found,IP Address: <saddr>,Computer name: <shost>,Intensive Protection Level: <fld61>,Certificate issuer: <fld60>,Certificate signer: <fld62>,Certificate thumbprint: <fld63>,Signing timestamp: <fld64>,Certificate serial number: <fld65>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<fld1>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Last update time: <fld53>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld100>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>,Category set: <category>,Category type: <vendor_event_cat>,Location:<fld55>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Potential risk found,IP Address: %{saddr},Computer name: %{shost},Intensive Protection Level: %{fld61},Certificate issuer: %{fld60},Certificate signer: %{fld62},Certificate thumbprint: %{fld63},Signing timestamp: %{fld64},Certificate serial number: %{fld65},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},%{filename},%{fld1},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld17} %{fld18},Inserted: %{fld19},End: %{fld51},Last update time: %{fld53},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{fld100},Disposition: %{result},Download site: %{fld44},Web domain: %{fld45},Downloaded by: %{fld46},Prevalence: %{info},Confidence: %{context},URL Tracking Status: %{fld49},,First Seen: %{fld50},Sensitivity: %{fld52},%{fld56},Application hash: %{checksum},Hash type: %{encryption_type},Company name: %{fld54},Application name: %{application},Application version: %{version},Application type: %{obj_type},File size (bytes): %{filename_size},Category set: %{category},Category type: %{vendor_event_cat},Location:%{fld55}" }
				id => "message-Potential:03"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Potential risk found"
					"[event][id]" => "Potential:03"
					"[rsa][message][id1]" => "Potential:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Potential:02
		# line in RSA: Potential risk found,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <severity>,First Seen:<fld55>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score:<fld7>,COH Engine Version: <fld41>,Detection Submissions No,Permitted application reason: <fld42>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,Risk Level: <fld50>,Detection Source: <fld52>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,{"<filename>"|<filename>},<fld1>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld19>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Potential[\s]+risk[\s]+found,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<severity>[^,]*),First[\s]+Seen:(?<fld55>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),COH[\s]+Engine[\s]+Version:[\s]+(?<fld41>[^,]*),Detection[\s]+Submissions[\s]+No,Permitted[\s]+application[\s]+reason:[\s]+(?<fld42>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),Risk[\s]+Level:[\s]+(?<fld50>[^,]*),Detection[\s]+Source:[\s]+(?<fld52>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),(?<fld1>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld19>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Potential:02"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Potential risk found"
					"[event][id]" => "Potential:02"
					"[rsa][message][id1]" => "Potential:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Potential
		# line in RSA: Potential risk found,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <fld23>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score:<fld7>,Submission recommendation: <fld8>,Permitted application reason: <fld9>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<fld1>,{"<filename>"|<filename>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld20>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Potential[\s]+risk[\s]+found,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<fld23>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),Submission[\s]+recommendation:[\s]+(?<fld8>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld9>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<fld1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld20>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Potential"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Potential risk found"
					"[event][id]" => "Potential"
					"[rsa][message][id1]" => "Potential"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Potential:01
		# line in RSA: Potential risk found,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<fld1>,{"<filename>"|<filename>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld20>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Potential[\s]+risk[\s]+found,Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<fld1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld20>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Potential:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Potential risk found"
					"[event][id]" => "Potential:01"
					"[rsa][message][id1]" => "Potential:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA:  Previous virus definition file loaded. Version: <version>
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "Previous virus definition file loaded. Version: %{version}" }
			id => "msgParserId301"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Previous virus definition file loaded."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Proactive" {
		# MESSAGE Proactive
		# line in RSA: Proactive Threat Scan <info> failed to update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Proactive Threat Scan %{info} failed to update." }
				id => "message-Proactive"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Proactive Threat Scan failed to update."
					"[event][id]" => "Proactive"
					"[rsa][message][id1]" => "Proactive"
					"[event][categoryid]" => "1703020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Proactive:01
		# line in RSA: Proactive Threat Scan whitelist <info> is up-to-date.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Proactive Threat Scan whitelist %{info} is up-to-date." }
				id => "message-Proactive:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Proactive Threat Scan whitelist is up-to-date."
					"[event][id]" => "Proactive:01"
					"[rsa][message][id1]" => "Proactive:01"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:38
		# line in RSA: Proactive Threat Protection has been {enabled,Event time:<fld17><fld18>|enabled }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:42
		# line in RSA: Proactive Threat Protection has been disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Proactive Threat Protection has been disabled" }
				id => "message-Symantec:42"
				add_field => {
				"ec_activity" => "Disable"
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Proactive Threat Protection has been disabled"
					"[event][id]" => "Symantec:42"
					"[rsa][message][id1]" => "Symantec:42"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "process" {
		# MESSAGE process
		# line in RSA: process <process> can not lock the process status table. The process status has been locked by the server <info> since <fld50>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "process %{process} can not lock the process status table. The process status has been locked by the server %{info} since %{fld50}." }
				id => "message-process"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Cannot lock process status table since it has been locked by server."
					"[event][id]" => "process"
					"[rsa][message][id1]" => "process"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE process:01
		# line in RSA: "Application has changed since the last time you opened it, process id: <process_id>  Filename: <filename>  The change was allowed by profile.",Local: <saddr>,Local: <fld1>,Remote: <fld25>,Remote: <daddr>,Remote: <fld3>,Outbound,<protocol>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"Application has changed since the last time you opened it, process id: %{process_id}  Filename: %{filename}  The change was allowed by profile.\",Local: %{saddr},Local: %{fld1},Remote: %{fld25},Remote: %{daddr},Remote: %{fld3},Outbound,%{protocol},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld8},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld12}" }
				id => "message-process:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
					"[event][id]" => "process:01"
					"[rsa][message][id1]" => "process:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE process:11
		# line in RSA: "Application has changed since the last time you opened it, process id: <process_id>  Filename: <filename>  The change was allowed by profile.",Local: <daddr>,Local: <fld1>,Remote: <fld25>,Remote: <saddr>,Remote: <fld3>,Inbound,<protocol>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"Application has changed since the last time you opened it, process id: %{process_id}  Filename: %{filename}  The change was allowed by profile.\",Local: %{daddr},Local: %{fld1},Remote: %{fld25},Remote: %{saddr},Remote: %{fld3},Inbound,%{protocol},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld8},User: %{username},Domain: %{domain},Local Port %{dport},Remote Port %{sport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld12}" }
				id => "message-process:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
					"[event][id]" => "process:11"
					"[rsa][message][id1]" => "process:11"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE process:03
		# line in RSA: <event_description>, process id: <process_id>  Filename: <filename>  The change was denied by user<fld6>{""|"},Local: <saddr>,Local: <fld12>,Remote: <fld13>,Remote: <daddr>,Remote: <fld15>,Outbound,<protocol>,{Intrusion ID: <fld33>|<fld33>},Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),[\s]+process[\s]+id:[\s]+(?<process_id>[^\s]*)[\s]+Filename:[\s]+(?<filename>[^\s]*)[\s]+The[\s]+change[\s]+was[\s]+denied[\s]+by[\s]+user(?<fld6>[^\"\"]*)(\"\"|\"),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Outbound,(?<protocol>[^,]*),(Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*)|(?<fld33>[^,]*)),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-process:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Outbound"
					"[event][id]" => "process:03"
					"[rsa][message][id1]" => "process:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE process:13
		# line in RSA: <event_description>, process id: <process_id>  Filename: <filename>  The change was denied by user<fld6>{""|"},Local: <daddr>,Local: <fld12>,Remote: <fld13>,Remote: <saddr>,Remote: <fld15>,Inbound,<protocol>,{Intrusion ID: <fld33>|<fld33>},Begin: <fld50> <fld54>,End: <fld16> <fld19>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld11>,User: <username>,Domain: <domain>,Local Port <dport>,Remote Port <sport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,{Intrusion URL: <url>,Intrusion Payload URL:<fld25>|Intrusion URL: <url>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^,]*),[\s]+process[\s]+id:[\s]+(?<process_id>[^\s]*)[\s]+Filename:[\s]+(?<filename>[^\s]*)[\s]+The[\s]+change[\s]+was[\s]+denied[\s]+by[\s]+user(?<fld6>[^\"\"]*)(\"\"|\"),Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld12>[^,]*),Remote:[\s]+(?<fld13>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld15>[^,]*),Inbound,(?<protocol>[^,]*),(Intrusion[\s]+ID:[\s]+(?<fld33>[^,]*)|(?<fld33>[^,]*)),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld54>[^,]*),End:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld19>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld11>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<dport>[^,]*),Remote[\s]+Port[\s]+(?<sport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),(Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>.*)|Intrusion[\s]+URL:[\s]+(?<url>.*))$" }
				id => "message-process:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"direction" => "Inbound"
					"[event][id]" => "process:13"
					"[rsa][message][id1]" => "process:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "properties" {
		# MESSAGE properties
		# line in RSA:  properties of domain {"<domain>"|'<domain>'} were changed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*properties[\s]+of[\s]+domain[\s]+(\"(?<domain>[^\"]*)\"|'(?<domain>[^']*)')[\s]+were[\s]+changed$" }
				id => "message-properties"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "The properties of domain were changed"
					"[event][id]" => "properties"
					"[rsa][message][id1]" => "properties"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE properties:01
		# line in RSA:  properties for system administrator {"<c_username>"|'<c_username>'} have been changed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*properties[\s]+for[\s]+system[\s]+administrator[\s]+(\"(?<c_username>[^\"]*)\"|'(?<c_username>[^']*)')[\s]+have[\s]+been[\s]+changed$" }
				id => "message-properties:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "The properties of system administrator have been changed"
					"[event][id]" => "properties:01"
					"[rsa][message][id1]" => "properties:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA: PTS has generated an error: code <resultcode>: description: <info>
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "PTS has generated an error: code %{resultcode}: description: %{info}" }
			id => "msgParserId312"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "PTS has generated an error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Received" {
		# MESSAGE Received
		# line in RSA: Received a new policy with { <info>,Event time: <fld17><fld18> | <info> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Smc:03
		# line in RSA: Received a new profile with serial number <fld23> from Symantec Endpoint Protection Manager.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Received a new profile with serial number %{fld23} from Symantec Endpoint Protection Manager." }
				id => "message-Smc:03"
				add_field => {
				"hostip" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Received a new profile from Symantec Endpoint Protection Manager."
					"[event][id]" => "Smc:03"
					"[rsa][message][id1]" => "Smc:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA: Reconfiguring Symantec Management Client....
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "Reconfiguring Symantec Management Client...." }
			id => "msgParserId314"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Reconfiguring Symantec Management Client."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA: Reconnected to server after server was {unreacheable.,Event time:<fld17><fld18>|unreacheable.}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId316
	# line in RSA:  Please restart your computer to enable <info> { changes.,Event time:<fld17><fld18>|changes.}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	else if [logstash][msgparser][id] == "Retry" {
		# MESSAGE Retry
		# line in RSA: Retry <info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Retry %{info}\"" }
				id => "message-Retry"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Retry."
					"[event][id]" => "Retry"
					"[rsa][message][id1]" => "Retry"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Retry:01
		# line in RSA: Retry timestamp is equal or over the next schedule time, switching to regular schedule run.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Retry timestamp is equal or over the next schedule time, switching to regular schedule run." }
				id => "message-Retry:01"
				add_field => {
				"action" => "Retry timestamp is equal or over the next schedule time, switching to regular schedule run."
					"[event][id]" => "Retry:01"
					"[rsa][message][id1]" => "Retry:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Retry:02
		# line in RSA: Retry timestamp is over the maximum retry window, switching to regular schedule run.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Retry timestamp is over the maximum retry window, switching to regular schedule run." }
				id => "message-Retry:02"
				add_field => {
				"event_description" => "Retry."
					"[event][id]" => "Retry:02"
					"[rsa][message][id1]" => "Retry:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Successfully" {
		# MESSAGE Successfully
		# line in RSA: Successfully downloaded the <application> security definitions from LiveUpdate. The security definitions are now available for deployment.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Successfully downloaded the %{application} security definitions from LiveUpdate. The security definitions are now available for deployment." }
				id => "message-Successfully"
				add_field => {
				"event_description" => "Successfully Downloaded."
					"[event][id]" => "Successfully"
					"[rsa][message][id1]" => "Successfully"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Successfully:01
		# line in RSA: Successfully deleted the client install package '<info>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Successfully deleted the client install package '%{info}'." }
				id => "message-Successfully:01"
				add_field => {
				"event_description" => "Successfully deleted the client install package"
					"[event][id]" => "Successfully:01"
					"[rsa][message][id1]" => "Successfully:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Successfully:02
		# line in RSA: Successfully imported the Symantec Endpoint Protection version <version> for <fld3> package during the server upgrade. This package is now available for deployment.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Successfully imported the Symantec Endpoint Protection version %{version} for %{fld3} package during the server upgrade. This package is now available for deployment." }
				id => "message-Successfully:02"
				add_field => {
				"event_description" => "Successfully deleted the client install package"
					"[event][id]" => "Successfully:02"
					"[rsa][message][id1]" => "Successfully:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Risk" {
		# MESSAGE Risk:01
		# line in RSA:  Risk Repair Failed..Computer: <shost>..Date: <fld5>..Time: <fld6> <fld7> ..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Risk Repair Failed..Computer: %{shost}..Date: %{fld5}..Time: %{fld6} %{fld7} ..Severity: %{severity}..Source: %{product}" }
				id => "message-Risk:01"
				add_field => {
				"event_description" => "Risk Repair Failed"
					"[event][id]" => "Risk:01"
					"[rsa][message][id1]" => "Risk:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Risk:02
		# line in RSA:  Risk Repair Failed..<shost>..<fld5>..<filename>..<info>..<action>..<severity>..<product>..<fld6> <fld7>..<username>..<virusname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Risk Repair Failed..%{shost}..%{fld5}..%{filename}..%{info}..%{action}..%{severity}..%{product}..%{fld6} %{fld7}..%{username}..%{virusname}" }
				id => "message-Risk:02"
				add_field => {
				"threat_name" => "%{virusname}"
				"event_description" => "Risk Repair Failed"
					"[event][id]" => "Risk:02"
					"[rsa][message][id1]" => "Risk:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Risk:03
		# line in RSA:  Risk Repaired..Computer: <shost>..Date: <fld5>..Time: <fld6> <fld7>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Risk Repaired..Computer: %{shost}..Date: %{fld5}..Time: %{fld6} %{fld7}..Severity: %{severity}..Source: %{product}" }
				id => "message-Risk:03"
				add_field => {
				"event_description" => "Risk Repaired"
					"[event][id]" => "Risk:03"
					"[rsa][message][id1]" => "Risk:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Risk:04
		# line in RSA:  Risk Repaired..<shost>..<fld5>..<filename>..<info>..<action>..<severity>..<product>..<fld6> <fld7>..<username>..<virusname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Risk Repaired..%{shost}..%{fld5}..%{filename}..%{info}..%{action}..%{severity}..%{product}..%{fld6} %{fld7}..%{username}..%{virusname}" }
				id => "message-Risk:04"
				add_field => {
				"threat_name" => "%{virusname}"
				"event_description" => "Risk Repaired"
					"[event][id]" => "Risk:04"
					"[rsa][message][id1]" => "Risk:04"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Risk:05
		# line in RSA: Risk sample submitted to Symantec,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <event_type>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score:<fld7>,Submission recommendation: <fld8>,Permitted application reason: <fld9>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<fld1>,{"<filename>"|<filename>},Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld16> <fld17>,Inserted: <fld20>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Risk[\s]+sample[\s]+submitted[\s]+to[\s]+Symantec,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<event_type>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),Submission[\s]+recommendation:[\s]+(?<fld8>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld9>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<fld1>[^,]*),(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^,]*),Inserted:[\s]+(?<fld20>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Risk:05"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Risk sample submitted to Symantec."
					"[event][id]" => "Risk:05"
					"[rsa][message][id1]" => "Risk:05"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld16} %{fld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Scan" {
		# MESSAGE Scan
		# line in RSA:  Scan Start/Stop..<shost>..<fld5>..<filename>..<info>..<fld22>..<severity>..<product>..<fld6>..<username>..<virusname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan Start/Stop..%{shost}..%{fld5}..%{filename}..%{info}..%{fld22}..%{severity}..%{product}..%{fld6}..%{username}..%{virusname}" }
				id => "message-Scan"
				add_field => {
				"threat_name" => "%{virusname}"
				"event_description" => "Scan Start/Stop"
					"[event][id]" => "Scan"
					"[rsa][message][id1]" => "Scan"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Scan:01
		# line in RSA:  Scan Start/Stop..<shost>..<fld5>..<info>..<severity>..<product>..<fld6>..<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan Start/Stop..%{shost}..%{fld5}..%{info}..%{severity}..%{product}..%{fld6}..%{username}" }
				id => "message-Scan:01"
				add_field => {
				"event_description" => "Scan Start/Stop"
					"[event][id]" => "Scan:01"
					"[rsa][message][id1]" => "Scan:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Scan:02
		# line in RSA: Scan ID: <fld11>,Begin: <fld50> <fld52>,End: <fld51>,<disposition>,Duration (seconds): <duration_string>,User1: <username>,User2: <fld3>,"<info>","<context>",Command: Not a command scan (),Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <dclass_counter2>,Omitted: <fld4>Computer: <shost>,IP Address: <saddr>Domain: <domain>Group: <group>,Server: <hostid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld11},Begin: %{fld50} %{fld52},End: %{fld51},%{disposition},Duration (seconds): %{duration_string},User1: %{username},User2: %{fld3},\"%{info}\",\"%{context}\",Command: Not a command scan (),Threats: %{dclass_counter3},Infected: %{dclass_counter1},Total files: %{dclass_counter2},Omitted: %{fld4}Computer: %{shost},IP Address: %{saddr}Domain: %{domain}Group: %{group},Server: %{hostid}" }
				id => "message-Scan:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan Start"
					"[event][id]" => "Scan:02"
					"[rsa][message][id1]" => "Scan:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:09
		# line in RSA: Scan ID: <fld11>,Begin: <fld1>,End: <fld2>,<disposition>,Duration (seconds): <duration_string>,User1: <username>,User2: <fld3>,<fld22>,,Command: <fld4>,Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <fld5>,Omitted: <fld21>,Computer: <shost>,IP Address: <saddr>,"Group: <group>,Server: <hostid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld11},Begin: %{fld1},End: %{fld2},%{disposition},Duration (seconds): %{duration_string},User1: %{username},User2: %{fld3},%{fld22},,Command: %{fld4},Threats: %{dclass_counter3},Infected: %{dclass_counter1},Total files: %{fld5},Omitted: %{fld21},Computer: %{shost},IP Address: %{saddr},\"Group: %{group},Server: %{hostid}" }
				id => "message-Scan:09"
				add_field => {
				"hostname" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan"
					"[event][id]" => "Scan:09"
					"[rsa][message][id1]" => "Scan:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:03
		# line in RSA: Scan ID: <fld11>,Begin: <fld50> <fld52>,End: <fld51>,<disposition>,Duration (seconds): <duration_string>,User1: <username>,User2: <fld22>,<info>,Command: Not a command scan (),Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <dclass_counter2>,Omitted: <fld21>Computer: <shost>,IP Address: <saddr>,Domain: <domain>,{"Group: <group>"|Group: <group>},Server: <hostid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+ID:[\s]+(?<fld11>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^,]*),(?<disposition>[^,]*),Duration[\s]+\(seconds\):[\s]+(?<duration_string>[^,]*),User1:[\s]+(?<username>[^,]*),User2:[\s]+(?<fld22>[^,]*),(?<info>[^,]*),Command:[\s]+Not[\s]+a[\s]+command[\s]+scan[\s]+\(\),Threats:[\s]+(?<dclass_counter3>[^,]*),Infected:[\s]+(?<dclass_counter1>[^,]*),Total[\s]+files:[\s]+(?<dclass_counter2>[^,]*),Omitted:[\s]+(?<fld21>[^C]*)Computer:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*),Domain:[\s]+(?<domain>[^,]*),(\"Group:[\s]+(?<group>[^\"]*)\"|Group:[\s]+(?<group>[^,]*)),Server:[\s]+(?<hostid>.*)$" }
				id => "message-Scan:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan"
					"[event][id]" => "Scan:03"
					"[rsa][message][id1]" => "Scan:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:08
		# line in RSA: Scan ID: <fld11>,Begin: <fld1>,End: <fld2>,<disposition>,Duration (seconds): <duration_string>,User1: <username>,User2: <fld3>,Files scanned: <dclass_counter2>,,Command: <fld4>,Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <fld5>,Omitted: <fld21>,Computer: <shost>,IP Address: <saddr>,Domain: <domain>,Group: <group>,Server: <hostid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld11},Begin: %{fld1},End: %{fld2},%{disposition},Duration (seconds): %{duration_string},User1: %{username},User2: %{fld3},Files scanned: %{dclass_counter2},,Command: %{fld4},Threats: %{dclass_counter3},Infected: %{dclass_counter1},Total files: %{fld5},Omitted: %{fld21},Computer: %{shost},IP Address: %{saddr},Domain: %{domain},Group: %{group},Server: %{hostid}" }
				id => "message-Scan:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan"
					"[event][id]" => "Scan:08"
					"[rsa][message][id1]" => "Scan:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:04
		# line in RSA: Scan Delayed:  Risks: <dclass_counter1>   Scanned: <dclass_counter2>   { Files/Folders/Drives Omitted: <dclass_counter3> Trusted Files Skipped: <fld1> | Files/Folders/Drives Omitted: <dclass_counter3> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+Delayed:[\s]+Risks:[\s]+(?<dclass_counter1>[^\s]*)[\s]+Scanned:[\s]+(?<dclass_counter2>[^\s]*)[\s]+([\s]*Files/Folders/Drives[\s]+Omitted:[\s]+(?<dclass_counter3>[^\s]*)[\s]+Trusted[\s]+Files[\s]+Skipped:[\s]+(?<fld1>[^\s]*)[\s]+|[\s]*Files/Folders/Drives[\s]+Omitted:[\s]+(?<dclass_counter3>[^\s]*)[\s]+)$" }
				id => "message-Scan:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan Delayed."
					"[event][id]" => "Scan:04"
					"[rsa][message][id1]" => "Scan:04"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:05
		# line in RSA: <action>..Computer: <shost>..Date: <fld5>..Description: <event_description>:  Risks: <dclass_counter1>   Scanned: <dclass_counter2>   Files/Folders/Drives Omitted: <dclass_counter3>..Time: <fld6> <fld4>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}..Computer: %{shost}..Date: %{fld5}..Description: %{event_description}:  Risks: %{dclass_counter1}   Scanned: %{dclass_counter2}   Files/Folders/Drives Omitted: %{dclass_counter3}..Time: %{fld6} %{fld4}..Severity: %{severity}..Source: %{product}" }
				id => "message-Scan:05"
				add_field => {
					"[event][id]" => "Scan:05"
					"[rsa][message][id1]" => "Scan:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Scan:06
		# line in RSA: <action>..Computer: <shost>..Date: <fld5>..Description: <event_description>...Time: <fld6> <fld4>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}..Computer: %{shost}..Date: %{fld5}..Description: %{event_description}...Time: %{fld6} %{fld4}..Severity: %{severity}..Source: %{product}" }
				id => "message-Scan:06"
				add_field => {
					"[event][id]" => "Scan:06"
					"[rsa][message][id1]" => "Scan:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Scan:07
		# line in RSA: Scan started on all drives and all extensions.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan started on all drives and all extensions." }
				id => "message-Scan:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan started on all drives and all extensions."
					"[event][id]" => "Scan:07"
					"[rsa][message][id1]" => "Scan:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:11
		# line in RSA: Scan Suspended: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan Suspended: %{info}" }
				id => "message-Scan:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan Suspended."
					"[event][id]" => "Scan:11"
					"[rsa][message][id1]" => "Scan:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:10
		# line in RSA: Scan resumed on all drives and all extensions.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan resumed on all drives and all extensions." }
				id => "message-Scan:10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan resumed on all drives and all extensions."
					"[event][id]" => "Scan:10"
					"[rsa][message][id1]" => "Scan:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:12
		# line in RSA: Scan ID: <fld11>,Begin: <fld50> <fld52>,End: <fld51>,<disposition>,Duration (seconds): <duration_string>,User1: <uid>,User2: <fld3>,'<info>',{'<context>',|,}Command: Update Content and Scan Active,Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <dclass_counter2>,Omitted: <fld4>Computer: <shost>,IP Address: <saddr>,Domain: <domain>,Group: <group>,Server: <hostid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+ID:[\s]+(?<fld11>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^,]*),(?<disposition>[^,]*),Duration[\s]+\(seconds\):[\s]+(?<duration_string>[^,]*),User1:[\s]+(?<uid>[^,]*),User2:[\s]+(?<fld3>[^,]*),'(?<info>[^']*)',('(?<context>[^']*)',|,)Command:[\s]+Update[\s]+Content[\s]+and[\s]+Scan[\s]+Active,Threats:[\s]+(?<dclass_counter3>[^,]*),Infected:[\s]+(?<dclass_counter1>[^,]*),Total[\s]+files:[\s]+(?<dclass_counter2>[^,]*),Omitted:[\s]+(?<fld4>[^C]*)Computer:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>.*)$" }
				id => "message-Scan:12"
				add_field => {
				"hostip" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan Start"
					"[event][id]" => "Scan:12"
					"[rsa][message][id1]" => "Scan:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:13
		# line in RSA: Scan ID: <fld11>,Begin: <fld50> <fld52>,End:<fld51>,<disposition>,Duration (seconds): <duration_string>,User1: <uid>,User2:<fld3>,'<info>',{'<context>',|,}Command: Full Scan,Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <dclass_counter2>,Omitted: <fld4>Computer: <shost>,IP Address: <saddr>,Domain: <domain>,Group: <group>,Server: <hostid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+ID:[\s]+(?<fld11>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:(?<fld51>[^,]*),(?<disposition>[^,]*),Duration[\s]+\(seconds\):[\s]+(?<duration_string>[^,]*),User1:[\s]+(?<uid>[^,]*),User2:(?<fld3>[^,]*),'(?<info>[^']*)',('(?<context>[^']*)',|,)Command:[\s]+Full[\s]+Scan,Threats:[\s]+(?<dclass_counter3>[^,]*),Infected:[\s]+(?<dclass_counter1>[^,]*),Total[\s]+files:[\s]+(?<dclass_counter2>[^,]*),Omitted:[\s]+(?<fld4>[^C]*)Computer:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>.*)$" }
				id => "message-Scan:13"
				add_field => {
				"hostip" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Scan Start"
					"[event][id]" => "Scan:13"
					"[rsa][message][id1]" => "Scan:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan:14
		# line in RSA: Scan ID: <fld11>,Begin: <fld50> <fld52>,End: <fld51>,<disposition>,Duration (seconds): <duration_string>,User1: <username>,User2: <fld3>{,"|,}<info>{","|,}<context>{",|,}Command: <fld10>,Threats: <dclass_counter3>,Infected: <dclass_counter1>,Total files: <dclass_counter2>,Omitted: <fld4>,Computer: <shost>,IP Address: <saddr>,Domain: <domain>,Group: <group>,Server: <hostid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+ID:[\s]+(?<fld11>[^,]*),Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^,]*),(?<disposition>[^,]*),Duration[\s]+\(seconds\):[\s]+(?<duration_string>[^,]*),User1:[\s]+(?<username>[^,]*),User2:[\s]+(?<fld3>[^,,]*)(,\"|,)(?<info>[^\",]*)(\",\"|,)(?<context>[^\",]*)(\",|,)Command:[\s]+(?<fld10>[^,]*),Threats:[\s]+(?<dclass_counter3>[^,]*),Infected:[\s]+(?<dclass_counter1>[^,]*),Total[\s]+files:[\s]+(?<dclass_counter2>[^,]*),Omitted:[\s]+(?<fld4>[^,]*),Computer:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>.*)$" }
				id => "message-Scan:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_time_string" => "%{htime}"
				"event_description" => "%{fld10}"
					"[event][id]" => "Scan:14"
					"[rsa][message][id1]" => "Scan:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Security" {
		# MESSAGE Security:03
		# line in RSA: Security risk found,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <severity>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld13>,Detection score:<fld7>,Submission recommendation: <fld8>,Permitted application reason: <fld9>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<info>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+risk[\s]+found,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<severity>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld13>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),Submission[\s]+recommendation:[\s]+(?<fld8>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld9>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(?<info>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld5>[^\s]*)[\s]+(?<fld6>[^,]*),Inserted:(?<fld12>[^,]*),End:(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Security:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"process" => "%{filename}"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:03"
					"[rsa][message][id1]" => "Security:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:06
		# line in RSA: Security risk found,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <severity>,First Seen: <fld55>,Application name: <application>,Application type: <obj_type>,Application version:<version>,Hash type:<encryption_type>,Application hash: <checksum>,Company name: <fld11>,File size (bytes): <filename_size>,Sensitivity: <fld13>,Detection score:<fld7>,COH Engine Version: <fld41>,<fld53>,Permitted application reason: <fld54>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,Risk Level: <fld50>,Detection Source: <fld52>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<fld22>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+risk[\s]+found,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<severity>[^,]*),First[\s]+Seen:[\s]+(?<fld55>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^,]*),Hash[\s]+type:(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld11>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld13>[^,]*),Detection[\s]+score:(?<fld7>[^,]*),COH[\s]+Engine[\s]+Version:[\s]+(?<fld41>[^,]*),(?<fld53>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld54>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),Risk[\s]+Level:[\s]+(?<fld50>[^,]*),Detection[\s]+Source:[\s]+(?<fld52>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(?<fld22>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld5>[^\s]*)[\s]+(?<fld6>[^,]*),Inserted:(?<fld12>[^,]*),End:(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-Security:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"process" => "%{filename}"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:06"
					"[rsa][message][id1]" => "Security:06"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:05
		# line in RSA: Security risk found,IP Address: <saddr>,{Computer name: <shost>,Intensive Protection Level: <fld61>,Certificate issuer: <fld60>,Certificate signer: <fld62>,Certificate thumbprint: <fld63>,Signing timestamp: <fld64>,Certificate serial number: <fld65>,Source: <event_source>|Computer name: <shost>,Source: <event_source>},Risk name: <virusname>,Occurrences: <dclass_counter1>,Cookie:<filename>,<fld22>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Last update time: <fld57>,Domain: <domain>{ ," | , }Group: <group>{ ", | , }Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,{ File size (bytes): <filename_size>,Category set: <category>,Category type: <vendor_event_cat> | File size (bytes): <filename_size> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+risk[\s]+found,IP[\s]+Address:[\s]+(?<saddr>[^,]*),(Computer[\s]+name:[\s]+(?<shost>[^,]*),Intensive[\s]+Protection[\s]+Level:[\s]+(?<fld61>[^,]*),Certificate[\s]+issuer:[\s]+(?<fld60>[^,]*),Certificate[\s]+signer:[\s]+(?<fld62>[^,]*),Certificate[\s]+thumbprint:[\s]+(?<fld63>[^,]*),Signing[\s]+timestamp:[\s]+(?<fld64>[^,]*),Certificate[\s]+serial[\s]+number:[\s]+(?<fld65>[^,]*),Source:[\s]+(?<event_source>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*)),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Cookie:(?<filename>[^,]*),(?<fld22>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld5>[^\s]*)[\s]+(?<fld6>[^,]*),Inserted:(?<fld12>[^,]*),End:(?<fld51>[^,]*),Last[\s]+update[\s]+time:[\s]+(?<fld57>[^,]*),Domain:[\s]+(?<domain>[^\s\s]*)([\s]*,\"[\s]+|[\s]*,[\s]+)Group:[\s]+(?<group>[^\s\s]*)([\s]*\",[\s]+|[\s]*,[\s]+)Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),,First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld52>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),([\s]*File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<vendor_event_cat>[^\s]*)[\s]+|[\s]*File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^\s]*)[\s]+)$" }
				id => "message-Security:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:05"
					"[rsa][message][id1]" => "Security:05"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:04
		# line in RSA: Security risk found,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<fld22>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,0,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): <filename_size>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security risk found,IP Address: %{saddr},Computer name: %{shost},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},%{filename},%{fld22},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld5} %{fld6},Inserted:%{fld12},End:%{fld51},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{fld31},Disposition: %{result},Download site: %{fld44},Web domain: %{fld45},Downloaded by: %{fld46},Prevalence: %{info},Confidence: %{context},URL Tracking Status: %{fld49},,First Seen: %{fld50},Sensitivity: %{fld52},0,Application hash: %{checksum},Hash type: %{encryption_type},Company name: %{fld54},Application name: %{application},Application version: %{version},Application type: %{obj_type},File size (bytes): %{filename_size}" }
				id => "message-Security:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:04"
					"[rsa][message][id1]" => "Security:04"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:07
		# line in RSA: Security risk found,IP Address: <saddr>,{Computer name: <shost>,Intensive Protection Level: <fld61>,Certificate issuer: <fld60>,Certificate signer: <fld62>,Certificate thumbprint: <fld63>,Signing timestamp: <fld64>,Certificate serial number: <fld65>,Source: <event_source>|Computer name: <shost>,Source: <event_source>},Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<fld22>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Last update time: <fld57>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,{ File size (bytes): <filename_size>,Category set: <category>,Category type: <vendor_event_cat> | File size (bytes): <filename_size> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+risk[\s]+found,IP[\s]+Address:[\s]+(?<saddr>[^,]*),(Computer[\s]+name:[\s]+(?<shost>[^,]*),Intensive[\s]+Protection[\s]+Level:[\s]+(?<fld61>[^,]*),Certificate[\s]+issuer:[\s]+(?<fld60>[^,]*),Certificate[\s]+signer:[\s]+(?<fld62>[^,]*),Certificate[\s]+thumbprint:[\s]+(?<fld63>[^,]*),Signing[\s]+timestamp:[\s]+(?<fld64>[^,]*),Certificate[\s]+serial[\s]+number:[\s]+(?<fld65>[^,]*),Source:[\s]+(?<event_source>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*)),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(?<fld22>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld5>[^\s]*)[\s]+(?<fld6>[^,]*),Inserted:(?<fld12>[^,]*),End:(?<fld51>[^,]*),Last[\s]+update[\s]+time:[\s]+(?<fld57>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),,First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld52>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),([\s]*File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<vendor_event_cat>[^\s]*)[\s]+|[\s]*File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^\s]*)[\s]+)$" }
				id => "message-Security:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:07"
					"[rsa][message][id1]" => "Security:07"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:13
		# line in RSA: Security risk found,{Computer name: <shost>,Intensive Protection Level: <fld61>,Certificate issuer: <fld60>,Certificate signer: <fld62>,Certificate thumbprint: <fld63>,Signing timestamp: <fld64>,Certificate serial number: <fld65>,|Computer name: <shost>,}IP Address: <saddr>,Detection type: <severity>,First Seen: <fld1>,Application name: <application>,Application type: <obj_type>,Application version:<version> ,Hash type: <encryption_type>,Application hash: <checksum>,Company name: <fld3> ,File size (bytes): <filename_size>,Sensitivity: <fld4>,Detection score: <fld5>,COH Engine Version: <fld6>,<fld7>,Permitted application reason: <fld8>,Disposition: <result>,Download site: <fld10>,Web domain:<fld11> ,Downloaded by: <fld12>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld15>,Risk Level: <fld16>,Risk type: <fld17>,Source: <event_source>,Risk name:<virusname>,Occurrences: <dclass_counter1>,<filename>,<fld18>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld19> <fld20>,Inserted: <fld21>,End: <fld22>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld23>,Source IP: <fld24> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+risk[\s]+found,(Computer[\s]+name:[\s]+(?<shost>[^,]*),Intensive[\s]+Protection[\s]+Level:[\s]+(?<fld61>[^,]*),Certificate[\s]+issuer:[\s]+(?<fld60>[^,]*),Certificate[\s]+signer:[\s]+(?<fld62>[^,]*),Certificate[\s]+thumbprint:[\s]+(?<fld63>[^,]*),Signing[\s]+timestamp:[\s]+(?<fld64>[^,]*),Certificate[\s]+serial[\s]+number:[\s]+(?<fld65>[^,]*),|Computer[\s]+name:[\s]+(?<shost>[^,]*),)IP[\s]+Address:[\s]+(?<saddr>[^,]*),Detection[\s]+type:[\s]+(?<severity>[^,]*),First[\s]+Seen:[\s]+(?<fld1>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:(?<version>[^\s]*)[\s]+,Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld3>[^\s]*)[\s]+,File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld4>[^,]*),Detection[\s]+score:[\s]+(?<fld5>[^,]*),COH[\s]+Engine[\s]+Version:[\s]+(?<fld6>[^,]*),(?<fld7>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld8>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld10>[^,]*),Web[\s]+domain:(?<fld11>[^\s]*)[\s]+,Downloaded[\s]+by:[\s]+(?<fld12>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld15>[^,]*),Risk[\s]+Level:[\s]+(?<fld16>[^,]*),Risk[\s]+type:[\s]+(?<fld17>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(?<fld18>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld19>[^\s]*)[\s]+(?<fld20>[^,]*),Inserted:[\s]+(?<fld21>[^,]*),End:[\s]+(?<fld22>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld23>[^,]*),Source[\s]+IP:[\s]+(?<fld24>[^\s]*)[\s]+$" }
				id => "message-Security:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:13"
					"[rsa][message][id1]" => "Security:13"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld19} %{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security
		# line in RSA: Security risk found,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<info>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security risk found,Computer name: %{shost},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},%{filename},%{info},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld5} %{fld6},Inserted:%{fld12},End:%{fld51},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{saddr}" }
				id => "message-Security"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
				"process" => "%{filename}"
					"[event][id]" => "Security"
					"[rsa][message][id1]" => "Security"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:01
		# line in RSA: Security risk found,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,Cookie: <fld1>,<info>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security risk found,IP Address: %{saddr},Computer name: %{shost},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},Cookie: %{fld1},%{info},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld5} %{fld6},Inserted:%{fld12},End:%{fld51},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{fld31}" }
				id => "message-Security:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
					"[event][id]" => "Security:01"
					"[rsa][message][id1]" => "Security:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:02
		# line in RSA: Security risk found,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<info>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security risk found,IP Address: %{saddr},Computer name: %{shost},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},%{filename},%{info},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld5} %{fld6},Inserted:%{fld12},End:%{fld51},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{fld31}" }
				id => "message-Security:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
				"process" => "%{filename}"
					"[event][id]" => "Security:02"
					"[rsa][message][id1]" => "Security:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Compressed" {
		# MESSAGE Compressed
		# line in RSA: Compressed File,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<info>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Compressed File,Computer name: %{shost},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},%{filename},%{info},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld5} %{fld6},Inserted:%{fld12},End:%{fld51},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{saddr}" }
				id => "message-Compressed"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Compressed File"
					"[event][id]" => "Compressed"
					"[rsa][message][id1]" => "Compressed"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Compressed:02
		# line in RSA: Compressed File,IP Address: <saddr>,{Computer name: <shost>,Intensive Protection Level: <fld61>,Certificate issuer: <fld60>,Certificate signer: <fld62>,Certificate thumbprint: <fld63>,Signing timestamp: <fld64>,Certificate serial number: <fld65>,Source: <event_source>|Computer name: <shost>,Source: <event_source>},Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<fld22>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,{"Group: <group>"|Group: <group>},Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>,Disposition: <result>,Download site: <fld44>,Web domain: <fld45>,Downloaded by: <fld46>,Prevalence: <info>,Confidence: <context>,URL Tracking Status: <fld49>,,First Seen: <fld50>,Sensitivity: <fld52>,<fld56>,Application hash: <checksum>,Hash type: <encryption_type>,Company name: <fld54>,Application name: <application>,Application version: <version>,Application type: <obj_type>,File size (bytes): {<filename_size>,Category set: <category>,Category type: <event_type>|<filename_size>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Compressed[\s]+File,IP[\s]+Address:[\s]+(?<saddr>[^,]*),(Computer[\s]+name:[\s]+(?<shost>[^,]*),Intensive[\s]+Protection[\s]+Level:[\s]+(?<fld61>[^,]*),Certificate[\s]+issuer:[\s]+(?<fld60>[^,]*),Certificate[\s]+signer:[\s]+(?<fld62>[^,]*),Certificate[\s]+thumbprint:[\s]+(?<fld63>[^,]*),Signing[\s]+timestamp:[\s]+(?<fld64>[^,]*),Certificate[\s]+serial[\s]+number:[\s]+(?<fld65>[^,]*),Source:[\s]+(?<event_source>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*),Source:[\s]+(?<event_source>[^,]*)),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),(?<fld22>[^,]*),Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld5>[^\s]*)[\s]+(?<fld6>[^,]*),Inserted:(?<fld12>[^,]*),End:(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),(\"Group:[\s]+(?<group>[^\"]*)\"|Group:[\s]+(?<group>[^,]*)),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<fld31>[^,]*),Disposition:[\s]+(?<result>[^,]*),Download[\s]+site:[\s]+(?<fld44>[^,]*),Web[\s]+domain:[\s]+(?<fld45>[^,]*),Downloaded[\s]+by:[\s]+(?<fld46>[^,]*),Prevalence:[\s]+(?<info>[^,]*),Confidence:[\s]+(?<context>[^,]*),URL[\s]+Tracking[\s]+Status:[\s]+(?<fld49>[^,]*),,First[\s]+Seen:[\s]+(?<fld50>[^,]*),Sensitivity:[\s]+(?<fld52>[^,]*),(?<fld56>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Company[\s]+name:[\s]+(?<fld54>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+((?<filename_size>[^,]*),Category[\s]+set:[\s]+(?<category>[^,]*),Category[\s]+type:[\s]+(?<event_type>.*)|(?<filename_size>.*))$" }
				id => "message-Compressed:02"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Compressed File"
					"[event][id]" => "Compressed:02"
					"[rsa][message][id1]" => "Compressed:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Compressed:01
		# line in RSA: Compressed File,IP Address: <saddr>,Computer name: <shost>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,<info>,Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld5> <fld6>,Inserted:<fld12>,End:<fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <fld31>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Compressed File,IP Address: %{saddr},Computer name: %{shost},Source: %{event_source},Risk name: %{virusname},Occurrences: %{dclass_counter1},%{filename},%{info},Actual action: %{action},Requested action: %{disposition},Secondary action: %{event_state},Event time: %{fld5} %{fld6},Inserted:%{fld12},End:%{fld51},Domain: %{domain},Group: %{group},Server: %{hostid},User: %{username},Source computer: %{fld29},Source IP: %{fld31}" }
				id => "message-Compressed:01"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => "Compressed File"
					"[event][id]" => "Compressed:01"
					"[rsa][message][id1]" => "Compressed:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Stop" {
		# MESSAGE Stop
		# line in RSA: Stop serving as the Group Update Provider (proxy server)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Stop serving as the Group Update Provider (proxy server)" }
				id => "message-Stop"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Stop serving as the Group Update Provider (proxy server)."
					"[event][id]" => "Stop"
					"[rsa][message][id1]" => "Stop"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Stop:01
		# line in RSA: Stop Symantec Network Access Control client.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Stop Symantec Network Access Control client." }
				id => "message-Stop:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Stop serving as the Group Update Provider (proxy server)."
					"[event][id]" => "Stop:01"
					"[rsa][message][id1]" => "Stop:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Stop:02
		# line in RSA: Stop using Group Update Provider (proxy server) @ <saddr>:<sport>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Stop using Group Update Provider (proxy server) @ %{saddr}:%{sport}." }
				id => "message-Stop:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Stop using Group Update Provider (proxy server)."
					"[event][id]" => "Stop:02"
					"[rsa][message][id1]" => "Stop:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId358
	# line in RSA:  {Stopping Symantec Management Client....,Event time:<fld17><fld18>|Stopping Symantec Management Client....}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId359
	# line in RSA:  Submission Control signatures <version> is up-to-date.
	else if [logstash][msgparser][id] == "msgParserId359" {
		dissect {
			mapping => { "message" => "Submission Control signatures %{version} is up-to-date." }
			id => "msgParserId359"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Submission Control signatures is up to date"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId360
	# line in RSA: Switched to server control.
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "Switched to server control." }
			id => "msgParserId360"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"event_description" => "Switched to server control."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Symantec" {
		# MESSAGE Symantec:18
		# line in RSA: Symantec Endpoint Protection Manager Content Catalog <version> is up-to-date.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Manager Content Catalog %{version} is up-to-date." }
				id => "message-Symantec:18"
				add_field => {
				"event_description" => "Symantec Endpoint Protection Manager Content Catalog is up to date."
					"[event][id]" => "Symantec:18"
					"[rsa][message][id1]" => "Symantec:18"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:33
		# line in RSA: Symantec Endpoint Protection Manager could not update TruScan proactive threat scan commercial application list <application>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Manager could not update TruScan proactive threat scan commercial application list %{application}." }
				id => "message-Symantec:33"
				add_field => {
				"event_description" => "Symantec Endpoint Protection Manager could not update TruScan proactive threat scan."
					"[event][id]" => "Symantec:33"
					"[rsa][message][id1]" => "Symantec:33"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:17
		# line in RSA: Symantec Endpoint Protection <application> <version> (<info>) is up-to-date.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection %{application} %{version} (%{info}) is up-to-date." }
				id => "message-Symantec:17"
				add_field => {
				"event_description" => "Symantec Endpoint Protection is up to date."
					"[event][id]" => "Symantec:17"
					"[rsa][message][id1]" => "Symantec:17"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:20
		# line in RSA: Symantec Endpoint Protection <application> <version> (<info>) failed to update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection %{application} %{version} (%{info}) failed to update." }
				id => "message-Symantec:20"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Symantec Endpoint Protection failed to update."
					"[event][id]" => "Symantec:20"
					"[rsa][message][id1]" => "Symantec:20"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:16
		# line in RSA: Symantec Endpoint Protection Microsoft Exchange E-mail Auto-Protect { Disabled,Event time:<fld17><fld18>| Disabled}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:15
		# line in RSA: Symantec Network Access Control client started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Network Access Control client started." }
				id => "message-Symantec:15"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Symantec Network Access Control client started."
					"[event][id]" => "Symantec:15"
					"[rsa][message][id1]" => "Symantec:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:11
		# line in RSA:  Symantec Endpoint Protection Tamper Protection Disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Tamper Protection Disabled" }
				id => "message-Symantec:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Tamper Protection disabled"
					"[event][id]" => "Symantec:11"
					"[rsa][message][id1]" => "Symantec:11"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec
		# line in RSA:  Symantec AntiVirus Startup/Shutdown..Computer: <shost>..Date: <fld5>..Time: <fld6>..Description: <info>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec AntiVirus Startup/Shutdown..Computer: %{shost}..Date: %{fld5}..Time: %{fld6}..Description: %{info}..Severity: %{severity}..Source: %{product}" }
				id => "message-Symantec"
				add_field => {
				"event_description" => "Symantec AntiVirus Startup/Shutdown"
					"[event][id]" => "Symantec"
					"[rsa][message][id1]" => "Symantec"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Symantec:01
		# line in RSA:  Symantec AntiVirus Startup/Shutdown..<shost>..<fld5>........<severity>..<product>..<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec AntiVirus Startup/Shutdown..%{shost}..%{fld5}........%{severity}..%{product}..%{fld6}" }
				id => "message-Symantec:01"
				add_field => {
				"event_description" => "Symantec AntiVirus Startup/Shutdown"
					"[event][id]" => "Symantec:01"
					"[rsa][message][id1]" => "Symantec:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Symantec:02
		# line in RSA:  Symantec AntiVirus Startup/Shutdown..<shost>..<fld5>..<severity>..<product>..<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec AntiVirus Startup/Shutdown..%{shost}..%{fld5}..%{severity}..%{product}..%{fld6}" }
				id => "message-Symantec:02"
				add_field => {
				"event_description" => "Symantec AntiVirus Startup/Shutdown"
					"[event][id]" => "Symantec:02"
					"[rsa][message][id1]" => "Symantec:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Symantec:03
		# line in RSA: Symantec Endpoint Protection Manager Content Catalog <version> { is up-to-date | was successfully updated }.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Symantec[\s]+Endpoint[\s]+Protection[\s]+Manager[\s]+Content[\s]+Catalog[\s]+(?<version>[^\s]*)[\s]+([\s]*is[\s]+up\-to\-date[\s]+|[\s]*was[\s]+successfully[\s]+updated[\s]+)\.$" }
				id => "message-Symantec:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Symantec Endpoint Protection Manager Content Catalog is up to date or successfully updated."
					"[event][id]" => "Symantec:03"
					"[rsa][message][id1]" => "Symantec:03"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:04
		# line in RSA: Symantec Endpoint Protection services shutdown was {successful.,Event time:<fld17><fld18>| successful.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:05
		# line in RSA:  Symantec Endpoint Protection services startup was {successful.,Event time:<fld17><fld18>| successful.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:06
		# line in RSA:  Symantec Management Client is { stopped.,Event time:<fld17><fld18>| stopped.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:07
		# line in RSA: Symantec Management Client has been  {started|activated}{.,Event time:<fld17><fld18>| .}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:08
		# line in RSA: Symantec Management Client has been <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Management Client has been %{info}" }
				id => "message-Symantec:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Symantec Management Client has been activated."
					"[event][id]" => "Symantec:08"
					"[rsa][message][id1]" => "Symantec:08"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:09
		# line in RSA:  Symantec Endpoint Protection Auto-Protect failed to load.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Auto-Protect failed to load." }
				id => "message-Symantec:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Symantec Endpoint Protection Auto-Protect failed to load."
					"[event][id]" => "Symantec:09"
					"[rsa][message][id1]" => "Symantec:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:10
		# line in RSA: Symantec Endpoint Protection has determined that the virus definitions are missing on this computer. { <info>,Event time:<fld17><fld18>|<info> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:12
		# line in RSA:  Symantec AntiVirus services startup was successful
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec AntiVirus services startup was successful" }
				id => "message-Symantec:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "services startup was successful"
					"[event][id]" => "Symantec:12"
					"[rsa][message][id1]" => "Symantec:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:13
		# line in RSA:  Symantec AntiVirus services shutdown was successful
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec AntiVirus services shutdown was successful" }
				id => "message-Symantec:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "services shutdown was successful"
					"[event][id]" => "Symantec:13"
					"[rsa][message][id1]" => "Symantec:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:14
		# line in RSA:  Symantec AntiVirus services failed to start. <space> (<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec AntiVirus services failed to start. %{space} (%{resultcode})" }
				id => "message-Symantec:14"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "services failed to start"
					"[event][id]" => "Symantec:14"
					"[rsa][message][id1]" => "Symantec:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:19
		# line in RSA:  Symantec Endpoint Protection services failed to start. <space> (<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection services failed to start. %{space} (%{resultcode})" }
				id => "message-Symantec:19"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "services failed to start"
					"[event][id]" => "Symantec:19"
					"[rsa][message][id1]" => "Symantec:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:21
		# line in RSA: Symantec Endpoint Protection Manager server started with trial license.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Manager server started with trial license." }
				id => "message-Symantec:21"
				add_field => {
				"event_description" => "Symantec Endpoint Protection Manager server started with trial license."
					"[event][id]" => "Symantec:21"
					"[rsa][message][id1]" => "Symantec:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:22
		# line in RSA: Symantec trial license has expired.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec trial license has expired." }
				id => "message-Symantec:22"
				add_field => {
				"event_description" => "Symantec trial license has expired."
					"[event][id]" => "Symantec:22"
					"[rsa][message][id1]" => "Symantec:22"
					"[event][categoryid]" => "1608010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:23
		# line in RSA: Category: <fld22>,Symantec Endpoint Protection,"Reputation check timed out during unproven file evaluation, likely due to network delays."
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},Symantec Endpoint Protection,\"Reputation check timed out during unproven file evaluation, likely due to network delays.\"" }
				id => "message-Symantec:23"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Reputation check timed out"
					"[event][id]" => "Symantec:23"
					"[rsa][message][id1]" => "Symantec:23"
					"[event][categoryid]" => "1608010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:24
		# line in RSA: Symantec Endpoint Protection Lotus Notes E-mail Auto-Protect Disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Lotus Notes E-mail Auto-Protect Disabled" }
				id => "message-Symantec:24"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Symantec Endpoint Protection Lotus Notes E-mail Auto-Protect Disabled"
					"[event][id]" => "Symantec:24"
					"[rsa][message][id1]" => "Symantec:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:25
		# line in RSA: Category: <fld22>,Symantec AntiVirus,[Antivirus advanced heuristic detection submission] Submitting file to Symantec failed.  File : '<filename>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},Symantec AntiVirus,[Antivirus advanced heuristic detection submission] Submitting file to Symantec failed.  File : '%{filename}'." }
				id => "message-Symantec:25"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Submitting file to Symantec failed"
					"[event][id]" => "Symantec:25"
					"[rsa][message][id1]" => "Symantec:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:26
		# line in RSA: Category: <fld22>,Symantec AntiVirus,{[Antivirus|"[Antivirus} advanced heuristic detection submission] Submitting information to Symantec about file failed. File : '<filename>'{. Network error : '<fld56>'.,Event time: <fld17><fld18>|."|.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:39
		# line in RSA: Category: <fld22>,Symantec AntiVirus,{"[Antivirus|[Antivirus} {detection|advanced heuristic detection} submission] Information submitted to Symantec about file. File : '<filename>'{,  Size (bytes): <filename_size>.",Event time:<fld17><fld18>|,",Event time:<fld17><fld18>|,Event time:<fld17><fld18>|,"|,}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:40
		# line in RSA: Category: <fld22>,Symantec AntiVirus,{"[Antivirus|[Antivirus} {detection|advanced heuristic detection} submission] File submitted to Symantec for analysis. File : '<filename>'{,  Size (bytes): <filename_size>.",Event time:<fld17><fld18>|,",Event time:<fld17><fld18>|,Event time:<fld17><fld18>|,"|,}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:27
		# line in RSA: Symantec Endpoint Protection Manager server started with paid license.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Manager server started with paid license." }
				id => "message-Symantec:27"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Symantec Endpoint Protection Manager server started with paid license."
					"[event][id]" => "Symantec:27"
					"[rsa][message][id1]" => "Symantec:27"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:28
		# line in RSA: Uninstalling Symantec Management Client....
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Uninstalling Symantec Management Client...." }
				id => "message-Symantec:28"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Uninstalling Symantec Management Client"
					"[event][id]" => "Symantec:28"
					"[rsa][message][id1]" => "Symantec:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:29
		# line in RSA: Category: 2,Symantec Endpoint Protection,SONAR has generated an error: code <resultcode>: description: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: 2,Symantec Endpoint Protection,SONAR has generated an error: code %{resultcode}: description: %{result}" }
				id => "message-Symantec:29"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_outcome" => "Error"
				"event_description" => "SONAR has generated an error"
					"[event][id]" => "Symantec:29"
					"[rsa][message][id1]" => "Symantec:29"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:30
		# line in RSA: Symantec Endpoint Protection cannot connect to Symantec Endpoint Protection Manager. <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection cannot connect to Symantec Endpoint Protection Manager. %{result}." }
				id => "message-Symantec:30"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_description" => "Symantec Endpoint Protection cannot connect to Symantec Endpoint Protection Manager."
					"[event][id]" => "Symantec:30"
					"[rsa][message][id1]" => "Symantec:30"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:31
		# line in RSA: The Symantec Endpoint Protection is unable to communicate with the Symantec Endpoint Protection Manager.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The Symantec Endpoint Protection is unable to communicate with the Symantec Endpoint Protection Manager." }
				id => "message-Symantec:31"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_description" => "The Symantec Endpoint Protection is unable to communicate with the Symantec Endpoint Protection Manager."
					"[event][id]" => "Symantec:31"
					"[rsa][message][id1]" => "Symantec:31"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:32
		# line in RSA: The Symantec Endpoint Protection is unable to download the newest policy from the Symantec Endpoint Protection Manager.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The Symantec Endpoint Protection is unable to download the newest policy from the Symantec Endpoint Protection Manager." }
				id => "message-Symantec:32"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "The Symantec Endpoint Protection is unable to download the newest policy from the Symantec Endpoint Protection Manager."
					"[event][id]" => "Symantec:32"
					"[rsa][message][id1]" => "Symantec:32"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:36
		# line in RSA: Category: 2,Symantec Endpoint Protection,SymELAM Protection has been { enabled,Event time:<fld17><fld18> | enabled }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:37
		# line in RSA: Category: 2,Symantec Endpoint Protection,SONAR has been {enabled,Event time:<fld17><fld18>|enabled}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:41
		# line in RSA: Category: <fld22>,Symantec Endpoint Protection,SONAR has been disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},Symantec Endpoint Protection,SONAR has been disabled" }
				id => "message-Symantec:41"
				add_field => {
				"ec_activity" => "Disable"
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "SONAR has been disabled"
					"[event][id]" => "Symantec:41"
					"[rsa][message][id1]" => "Symantec:41"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:44
		# line in RSA: Symantec Endpoint Protection Internet E-mail Auto-Protect Disabled,Event time: <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Internet E-mail Auto-Protect Disabled,Event time: %{event_time_string}" }
				id => "message-Symantec:44"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Symantec Endpoint Protection Internet E-mail Auto-Protect Disabled"
					"[event][id]" => "Symantec:44"
					"[rsa][message][id1]" => "Symantec:44"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Server:02
		# line in RSA: Symantec Network Access Control is overdeployed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Network Access Control is overdeployed" }
				id => "message-Server:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hhostid}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Server:02"
					"[rsa][message][id1]" => "Server:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Server:04
		# line in RSA: Symantec Endpoint Protection is overdeployed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection is overdeployed" }
				id => "message-Server:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hhostid}"
				"event_description" => "Symantec Endpoint Protection is overdeployed"
					"[event][id]" => "Server:04"
					"[rsa][message][id1]" => "Server:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
		# MESSAGE Symantec:34
		# line in RSA:  Symantec Endpoint Protection Manager could not update <application>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Symantec Endpoint Protection Manager could not update %{application}." }
				id => "message-Symantec:34"
				add_field => {
				"event_time_string" => "%{htime}"
				"event_description" => "Symantec Endpoint Protection Manager could not update."
					"[event][id]" => "Symantec:34"
					"[rsa][message][id1]" => "Symantec:34"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Symantec:35
		# line in RSA: { <event_description>. File : <filename>,  Size (bytes): <filename_size>.",Event time:<fld17><fld18>|<event_description>. File : <filename>,Event time:<fld17><fld18>|<event_description>.,Event time:<fld17><fld18>|<event_description>Operating System: <os>Network  info:<info>,Event time:<fld17><fld18>|<event_description>.}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Symantec:45
		# line in RSA: Category: <fld22>,Symantec Endpoint Protection,<event_description>,Event time:<fld17><fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Category: %{fld22},Symantec Endpoint Protection,%{event_description},Event time:%{fld17}%{fld18}" }
				id => "message-Symantec:45"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
					"[event][id]" => "Symantec:45"
					"[rsa][message][id1]" => "Symantec:45"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Server:05
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Server:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hhostid}"
					"[event][id]" => "Server:05"
					"[rsa][message][id1]" => "Server:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA: Suspicious Behavior Detection has been <fld2>,Event time: <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId402" {
		dissect {
			mapping => { "message" => "Suspicious Behavior Detection has been %{fld2},Event time: %{event_time_string}" }
			id => "msgParserId402"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"a" => "Suspicious Behavior Detection has been "
				"event_description" => "%{a}%{fld2}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE System
		# line in RSA:  System has been restarted <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System has been restarted %{info}." }
				id => "message-System"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "System has been restarted"
					"[event][id]" => "System"
					"[rsa][message][id1]" => "System"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:01
		# line in RSA: System client-server activity logs have been swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System client-server activity logs have been swept." }
				id => "message-System:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "System client-server activity logs have been swept."
					"[event][id]" => "System:01"
					"[rsa][message][id1]" => "System:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:02
		# line in RSA: System server activity logs have been swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System server activity logs have been swept." }
				id => "message-System:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "System server activity logs have been swept."
					"[event][id]" => "System:02"
					"[rsa][message][id1]" => "System:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:03
		# line in RSA: System administrative logs have been swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System administrative logs have been swept." }
				id => "message-System:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "System administrative logs have been swept."
					"[event][id]" => "System:03"
					"[rsa][message][id1]" => "System:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:04
		# line in RSA: System enforcer activity logs have been swept.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System enforcer activity logs have been swept." }
				id => "message-System:04"
				add_field => {
				"event_time_string" => "%{htime}"
				"event_description" => "System enforcer activity logs have been swept."
					"[event][id]" => "System:04"
					"[rsa][message][id1]" => "System:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:05
		# line in RSA: System administrator "<username>" was added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System administrator \"%{username}\" was added" }
				id => "message-System:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "System:05"
					"[rsa][message][id1]" => "System:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId410
	# line in RSA: { - Caller MD5=<fld6>,|,}<action>,Begin:<fld50><fld52>,End:<fld51><fld53>,Rule:<rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User:<username>,Domain:<domain>,Action Type:<fld45>,File size (bytes):<filename_size>,Device ID:<device>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId411
	# line in RSA: Compliance { server | client | traffic | criteria } logs have been swept.
	else if [logstash][msgparser][id] == "msgParserId411" {
		grok {
			match => { "message" => "^Compliance[\s]+([\s]*server[\s]+|[\s]*client[\s]+|[\s]*traffic[\s]+|[\s]*criteria[\s]+)[\s]+logs[\s]+have[\s]+been[\s]+swept\.$" }
			id => "msgParserId411"
			add_field => {
				"event_time_string" => "%{htime}"
				"event_description" => "Compliance logs have been swept."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId412
	# line in RSA: Download started.
	else if [logstash][msgparser][id] == "msgParserId412" {
		dissect {
			mapping => { "message" => "Download started." }
			id => "msgParserId412"
			add_field => {
				"event_time_string" => "%{htime}"
				"event_description" => "Download started."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Traffic" {
		# MESSAGE Traffic
		# line in RSA: Traffic from IP address <hostip> is blocked from <fld14> to <fld15>.,Local: <daddr>,Local: <fld16>,Remote: <fld17>,Remote: <saddr>,Remote: <fld18>,Inbound,<fld19>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld10>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Traffic from IP address %{hostip} is blocked from %{fld14} to %{fld15}.,Local: %{daddr},Local: %{fld16},Remote: %{fld17},Remote: %{saddr},Remote: %{fld18},Inbound,%{fld19},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld10},User: %{username},Domain: %{domain}" }
				id => "message-Traffic"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address is blocked."
				"direction" => "Inbound"
					"[event][id]" => "Traffic"
					"[rsa][message][id1]" => "Traffic"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Traffic:11
		# line in RSA: Traffic from IP address <hostip> is blocked from <fld14> to <fld15>.,Local: <saddr>,Local: <fld16>,Remote: <fld17>,Remote: <daddr>,Remote: <fld18>,Outbound,<fld19>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld10>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Traffic from IP address %{hostip} is blocked from %{fld14} to %{fld15}.,Local: %{saddr},Local: %{fld16},Remote: %{fld17},Remote: %{daddr},Remote: %{fld18},Outbound,%{fld19},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld10},User: %{username},Domain: %{domain}" }
				id => "message-Traffic:11"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address is blocked."
				"direction" => "Outbound"
					"[event][id]" => "Traffic:11"
					"[rsa][message][id1]" => "Traffic:11"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Traffic:01
		# line in RSA: Traffic from IP address <hostip> is blocked from <fld1> to <fld2>.  ,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,1,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Traffic from IP address %{hostip} is blocked from %{fld1} to %{fld2}.  ,Local: %{saddr},Local: %{fld3},Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},1,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain}" }
				id => "message-Traffic:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address is blocked."
					"[event][id]" => "Traffic:01"
					"[rsa][message][id1]" => "Traffic:01"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Traffic:02
		# line in RSA: Traffic from IP address <hostip> is blocked from <fld1> to <fld2>.  ,Local: <daddr>,Local: <fld3>,Remote: <fld4>,Remote: <saddr>,Remote: <fld5>,Inbound,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld6>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Traffic[\s]+from[\s]+IP[\s]+address[\s]+(?<hostip>[^\s]*)[\s]+is[\s]+blocked[\s]+from[\s]+(?<fld1>[^\s]*)[\s]+to[\s]+(?<fld2>[^\.]*)\.[\s]+,Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld3>[^,]*),Remote:[\s]+(?<fld4>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld5>[^,]*),Inbound,OTHERS,,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*)$" }
				id => "message-Traffic:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address is blocked."
				"direction" => "Inbound"
					"[event][id]" => "Traffic:02"
					"[rsa][message][id1]" => "Traffic:02"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Traffic:12
		# line in RSA: Traffic from IP address <hostip> is blocked from <fld1> to <fld2>.  ,Local: <saddr>,Local: <fld3>,Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Outbound,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,{ "Location: | Location: } <fld6>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Traffic[\s]+from[\s]+IP[\s]+address[\s]+(?<hostip>[^\s]*)[\s]+is[\s]+blocked[\s]+from[\s]+(?<fld1>[^\s]*)[\s]+to[\s]+(?<fld2>[^\.]*)\.[\s]+,Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld3>[^,]*),Remote:[\s]+(?<fld4>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld5>[^,]*),Outbound,OTHERS,,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),([\s]*\"Location:[\s]+|[\s]*Location:[\s]+)[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*)$" }
				id => "message-Traffic:12"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Traffic from IP address is blocked."
				"direction" => "Outbound"
					"[event][id]" => "Traffic:12"
					"[rsa][message][id1]" => "Traffic:12"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Traffic:13
		# line in RSA: <fld1> Traffic Redirection disabled.,Event time: <fld17> <fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} Traffic Redirection disabled.,Event time: %{fld17} %{fld18}" }
				id => "message-Traffic:13"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Traffic Redirection disabled."
					"[event][id]" => "Traffic:13"
					"[rsa][message][id1]" => "Traffic:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Traffic:14
		# line in RSA: <fld1> Traffic Redirection is malfunctioning.,Event time: <fld17> <fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} Traffic Redirection is malfunctioning.,Event time: %{fld17} %{fld18}" }
				id => "message-Traffic:14"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Traffic Redirection is malfunctioning."
					"[event][id]" => "Traffic:14"
					"[rsa][message][id1]" => "Traffic:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TruScan" {
		# MESSAGE TruScan
		# line in RSA: TruScan has generated an error: code <resultcode>: description: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TruScan has generated an error: code %{resultcode}: description: %{info}" }
				id => "message-TruScan"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "TruScan has generated an error"
					"[event][id]" => "TruScan"
					"[rsa][message][id1]" => "TruScan"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TruScan:01
		# line in RSA: Forced TruScan proactive threat detected,{Computer name: <shost>,IP Address: <saddr>|Computer name: <shost>},Detection type: <fld1>,Application name: <application>,Application type: <obj_type>,Application version: <version>,Hash type: <encryption_type>,Application hash: <checksum>,Company name: <fld13>,File size (bytes): <filename_size>,Sensitivity: <fld6>,Detection score: <fld7>,Submission recommendation: <fld8>,Permitted application reason: <fld9>,Source: <event_source>,Risk name: <virusname>,Occurrences: <dclass_counter1>,<filename>,"<fld12>",Actual action: <action>,Requested action: <disposition>,Secondary action: <event_state>,Event time: <fld17> <fld18>,Inserted: <fld15>,End: <fld51>,Domain: <domain>,Group: <group>,Server: <hostid>,User: <username>,Source computer: <fld29>,Source IP: <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Forced[\s]+TruScan[\s]+proactive[\s]+threat[\s]+detected,(Computer[\s]+name:[\s]+(?<shost>[^,]*),IP[\s]+Address:[\s]+(?<saddr>[^,]*)|Computer[\s]+name:[\s]+(?<shost>[^,]*)),Detection[\s]+type:[\s]+(?<fld1>[^,]*),Application[\s]+name:[\s]+(?<application>[^,]*),Application[\s]+type:[\s]+(?<obj_type>[^,]*),Application[\s]+version:[\s]+(?<version>[^,]*),Hash[\s]+type:[\s]+(?<encryption_type>[^,]*),Application[\s]+hash:[\s]+(?<checksum>[^,]*),Company[\s]+name:[\s]+(?<fld13>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Sensitivity:[\s]+(?<fld6>[^,]*),Detection[\s]+score:[\s]+(?<fld7>[^,]*),Submission[\s]+recommendation:[\s]+(?<fld8>[^,]*),Permitted[\s]+application[\s]+reason:[\s]+(?<fld9>[^,]*),Source:[\s]+(?<event_source>[^,]*),Risk[\s]+name:[\s]+(?<virusname>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),(?<filename>[^,]*),\"(?<fld12>[^\"]*)\",Actual[\s]+action:[\s]+(?<action>[^,]*),Requested[\s]+action:[\s]+(?<disposition>[^,]*),Secondary[\s]+action:[\s]+(?<event_state>[^,]*),Event[\s]+time:[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^,]*),Inserted:[\s]+(?<fld15>[^,]*),End:[\s]+(?<fld51>[^,]*),Domain:[\s]+(?<domain>[^,]*),Group:[\s]+(?<group>[^,]*),Server:[\s]+(?<hostid>[^,]*),User:[\s]+(?<username>[^,]*),Source[\s]+computer:[\s]+(?<fld29>[^,]*),Source[\s]+IP:[\s]+(?<saddr>.*)$" }
				id => "message-TruScan:01"
				add_field => {
				"hostname" => "%{hhost}"
				"threat_name" => "%{virusname}"
				"process" => "%{filename}"
				"event_description" => " TruScan proactive threat detected"
					"[event][id]" => "TruScan:01"
					"[rsa][message][id1]" => "TruScan:01"
					"[event][categoryid]" => "1001030200"
					"[logstash][fullDateTimeString]" => "%{fld17} %{fld18}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE TruScan:update
		# line in RSA: TruScan <info> {was successfully updated|is up-to-date}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^TruScan[\s]+(?<info>[^\s]*)[\s]+(was[\s]+successfully[\s]+updated|is[\s]+up\-to\-date)$" }
				id => "message-TruScan:update"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Truscan was successfully updated or is up-to-date."
					"[event][id]" => "TruScan:update"
					"[rsa][message][id1]" => "TruScan:update"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TruScan:updatefailed
		# line in RSA: TruScan <info> failed to update. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TruScan %{info} failed to update." }
				id => "message-TruScan:updatefailed"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Truscan failed to update."
					"[event][id]" => "TruScan:updatefailed"
					"[rsa][message][id1]" => "TruScan:updatefailed"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Unexpected" {
		# MESSAGE Unexpected
		# line in RSA: Unexpected server error. ErrorCode: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unexpected server error. ErrorCode: %{resultcode}" }
				id => "message-Unexpected"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Unexpected server error."
					"[event][id]" => "Unexpected"
					"[rsa][message][id1]" => "Unexpected"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Unexpected:01
		# line in RSA: Unexpected server error.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unexpected server error." }
				id => "message-Unexpected:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Unexpected server error."
					"[event][id]" => "Unexpected:01"
					"[rsa][message][id1]" => "Unexpected:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Unsolicited" {
		# MESSAGE Unsolicited
		# line in RSA: Unsolicited incoming ARP reply detected,<info>",Local:  <daddr>,Local: <fld16>,Remote: <fld17>,Remote: <saddr>,Remote: <fld18>,Inbound,<fld19>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld20>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unsolicited incoming ARP reply detected,%{info}\",Local:  %{daddr},Local: %{fld16},Remote: %{fld17},Remote: %{saddr},Remote: %{fld18},Inbound,%{fld19},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld20},User: %{username},Domain: %{domain}" }
				id => "message-Unsolicited"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Unsolicited incoming ARP reply detected."
				"direction" => "Inbound"
					"[event][id]" => "Unsolicited"
					"[rsa][message][id1]" => "Unsolicited"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Unsolicited:01
		# line in RSA: Unsolicited incoming ARP reply detected,<info>",Local:  <saddr>,Local: <fld16>,Remote: <fld17>,Remote: <daddr>,Remote: <fld18>,Outbound,<fld19>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld20>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unsolicited incoming ARP reply detected,%{info}\",Local:  %{saddr},Local: %{fld16},Remote: %{fld17},Remote: %{daddr},Remote: %{fld18},Outbound,%{fld19},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld20},User: %{username},Domain: %{domain}" }
				id => "message-Unsolicited:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Unsolicited incoming ARP reply detected."
				"direction" => "Outbound"
					"[event][id]" => "Unsolicited:01"
					"[rsa][message][id1]" => "Unsolicited:01"
					"[event][categoryid]" => "1001020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "User" {
		# MESSAGE User
		# line in RSA:  User is attempting to terminate Symantec Management { Client....,Event time:<fld17><fld18>|Client }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE User:01
		# line in RSA: <fld44>,User - Kernel Hook Error,<fld1>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<fld4>,<fld5>,<fld6>,<fld7>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld44},User - Kernel Hook Error,%{fld1},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{fld4},%{fld5},%{fld6},%{fld7},User: %{username},Domain: %{domain}" }
				id => "message-User:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"event_time_string" => "%{htime}"
				"event_description" => " User - Kernel Hook Error"
					"[event][id]" => "User:01"
					"[rsa][message][id1]" => "User:01"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE User:created
		# line in RSA: User has been created
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User has been created" }
				id => "message-User:created"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "User has been created."
					"[event][id]" => "User:created"
					"[rsa][message][id1]" => "User:created"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE User:deleted
		# line in RSA: User has been deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User has been deleted" }
				id => "message-User:deleted"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"event_time_string" => "%{htime}"
				"username" => "%{husername}"
				"event_description" => "User has been deleted."
					"[event][id]" => "User:deleted"
					"[rsa][message][id1]" => "User:deleted"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Windows" {
		# MESSAGE Windows
		# line in RSA: Windows Version info:  Operating System: <os> { Network  info:<info>,Event time:<fld17><fld18>|Network  info:<info>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Windows:01
		# line in RSA: Windows Host Integrity Content <version> was successfully updated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Windows Host Integrity Content %{version} was successfully updated." }
				id => "message-Windows:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Windows Version info."
					"[event][id]" => "Windows:01"
					"[rsa][message][id1]" => "Windows:01"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId448
	# line in RSA: "=======EXCEPTION:<event_description>"
	else if [logstash][msgparser][id] == "msgParserId448" {
		dissect {
			mapping => { "message" => "\"=======EXCEPTION:%{event_description}\"" }
			id => "msgParserId448"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Allowed" {
		# MESSAGE Allowed:08
		# line in RSA: Sysfer exception: <info>,Sysfer exception,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<filename>,<fld4>,<event_description>,User: <username>,Domain: <domain>,Action Type:<fld6>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sysfer exception: %{info},Sysfer exception,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{filename},%{fld4},%{event_description},User: %{username},Domain: %{domain},Action Type:%{fld6},File size (bytes): %{filename_size},Device ID: %{device}" }
				id => "message-Allowed:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"process" => "%{filename}"
					"[event][id]" => "Allowed:08"
					"[rsa][message][id1]" => "Allowed:08"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed
		# line in RSA: Sysfer exception: <info>,Sysfer exception,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<filename>,<fld4>,<event_description>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sysfer exception: %{info},Sysfer exception,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{filename},%{fld4},%{event_description},User: %{username},Domain: %{domain}" }
				id => "message-Allowed"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"process" => "%{filename}"
					"[event][id]" => "Allowed"
					"[rsa][message][id1]" => "Allowed"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:05
		# line in RSA: "<filename>",<fld1>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld4>,<process>,<fld5>,<fld6>,<info>,User: <username>,Domain: <domain>,Action Type: <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{filename}\",%{fld1},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld4},%{process},%{fld5},%{fld6},%{info},User: %{username},Domain: %{domain},Action Type: %{fld8}" }
				id => "message-Allowed:05"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Allowed:05"
					"[rsa][message][id1]" => "Allowed:05"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:06
		# line in RSA: "<filename>,<fld1>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld4>,<process>,<fld5>,<fld6>,<info>,User: <username>,Domain: <domain>,Action Type: <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{filename},%{fld1},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld4},%{process},%{fld5},%{fld6},%{info},User: %{username},Domain: %{domain},Action Type: %{fld8}" }
				id => "message-Allowed:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Allowed:06"
					"[rsa][message][id1]" => "Allowed:06"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:01
		# line in RSA: "<filename>",<fld1>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld4>,<process>,<fld5>,<fld6>,<info>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{filename}\",%{fld1},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld4},%{process},%{fld5},%{fld6},%{info},User: %{username},Domain: %{domain}" }
				id => "message-Allowed:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Allowed:01"
					"[rsa][message][id1]" => "Allowed:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:02
		# line in RSA: <fld1>,File Read,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<filename>,<fld4>,No Module Name,<directory>,User: <username>,{Domain: <domain>,Action Type:<fld45>,File size (bytes):<filename_size>,Device ID:<device>|Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^,]*),File[\s]+Read,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<filename>[^,]*),(?<fld4>[^,]*),No[\s]+Module[\s]+Name,(?<directory>[^,]*),User:[\s]+(?<username>[^,]*),(Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:(?<fld45>[^,]*),File[\s]+size[\s]+\(bytes\):(?<filename_size>[^,]*),Device[\s]+ID:(?<device>.*)|Domain:[\s]+(?<domain>.*))$" }
				id => "message-Allowed:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read"
				"process" => "%{filename}"
				"ec_subject" => "File"
				"action" => "Read"
					"[event][id]" => "Allowed:02"
					"[rsa][message][id1]" => "Allowed:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:09
		# line in RSA: { - Caller MD5=<checksum>|<fld1>},File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,{"<filename>"|<filename>},User: <username>,Domain: <domain>,Action Type:<fld46>,File size (<fld10>): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*\-[\s]+Caller[\s]+MD5=(?<checksum>[^,]*)|(?<fld1>[^,]*)),File[\s]+Write,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<process>[^,]*),(?<fld4>[^,]*),No[\s]+Module[\s]+Name,(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:(?<fld46>[^,]*),File[\s]+size[\s]+\((?<fld10>[^\)]*)\):[\s]+(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)$" }
				id => "message-Allowed:09"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"saddr" => "%{hsaddr}"
				"event_description" => "File Write"
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "Allowed:09"
					"[rsa][message][id1]" => "Allowed:09"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:03
		# line in RSA: <fld1>,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<filename>,<fld4>,No Module Name,<directory>,User: <username>,Domain: <domain>,Action Type:<fld46>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{filename},%{fld4},No Module Name,%{directory},User: %{username},Domain: %{domain},Action Type:%{fld46}" }
				id => "message-Allowed:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write"
				"process" => "%{filename}"
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "Allowed:03"
					"[rsa][message][id1]" => "Allowed:03"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:10
		# line in RSA:  - Caller MD5=<checksum>,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name{,"<filename>",|,<filename>,}User: <username>,Domain: <domain>,{Action Type:<fld46>,File size (<fld10>): <filename_size>,Device ID: <device>|Action Type:<fld46>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*\-[\s]+Caller[\s]+MD5=(?<checksum>[^,]*),File[\s]+Delete,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<process>[^,]*),(?<fld4>[^,]*),No[\s]+Module[\s]+Name(,\"(?<filename>[^\"]*)\",|,(?<filename>[^,]*),)User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),(Action[\s]+Type:(?<fld46>[^,]*),File[\s]+size[\s]+\((?<fld10>[^\)]*)\):[\s]+(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)|Action[\s]+Type:(?<fld46>.*))$" }
				id => "message-Allowed:10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "File"
				"ec_activity" => "Delete"
				"event_time_string" => "%{htime}"
				"event_description" => "File Delete"
				"action" => "Delete"
					"[event][id]" => "Allowed:10"
					"[rsa][message][id1]" => "Allowed:10"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:04
		# line in RSA: <fld1>,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<filename>,<fld4>,No Module Name,<directory>,User: <username>,Domain: <domain>,Action Type:<fld46>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Delete,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{filename},%{fld4},No Module Name,%{directory},User: %{username},Domain: %{domain},Action Type:%{fld46}" }
				id => "message-Allowed:04"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"ec_subject" => "File"
				"ec_activity" => "Delete"
				"event_time_string" => "%{htime}"
				"process" => "%{filename}"
				"event_description" => "File Delete"
				"action" => "Delete"
					"[event][id]" => "Allowed:04"
					"[rsa][message][id1]" => "Allowed:04"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Allowed:07
		# line in RSA: <filename>,<fld1>,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld4>,<process>,<fld5>,<fld6>,<info>,User: <username>,Domain: <domain>,Action Type: <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{filename},%{fld1},Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld4},%{process},%{fld5},%{fld6},%{info},User: %{username},Domain: %{domain},Action Type: %{fld8}" }
				id => "message-Allowed:07"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Allowed:07"
					"[rsa][message][id1]" => "Allowed:07"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId460
	# line in RSA: Audit logs have been swept.
	else if [logstash][msgparser][id] == "msgParserId460" {
		dissect {
			mapping => { "message" => "Audit logs have been swept." }
			id => "msgParserId460"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Audit logs have been swept."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Category" {
		# MESSAGE Category
		# line in RSA: <fld24>,<fld1>,FATAL: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld24},%{fld1},FATAL: %{event_description}" }
				id => "message-Category"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Category"
					"[rsa][message][id1]" => "Category"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Category:03
		# line in RSA: <fld1>,<fld2>,<event_description> { Remote file path:<url>,Event time:<fld17><fld18>|Remote file path:<url>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Category:02
		# line in RSA: <fld1>,<fld2>,Downloaded content from GUP <daddr>:{ <dport>,Event time:<fld17><fld18>| <dport>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Category:01
		# line in RSA: <fld1>,<fld2>,{<event_description>. File : '<filename>',",Event time: <fld17><fld18>|<event_description>Size (bytes): <filename_size>.,Event time: <fld17><fld18>|<event_description>,Event time: <fld17><fld18>|<event_description>.  Size (bytes):<filename_size>.|<event_description>. <space> File : '<filename>',"|<event_description>. <space> File : '<filename>'|<event_description>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Default" {
		# MESSAGE Default
		# line in RSA: Default <info>..Computer: <shost>..Date: <fld2>..Failed Alert Name: <action>..Time: <fld3> <fld1>..Severity: <severity>..Source: <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Default %{info}..Computer: %{shost}..Date: %{fld2}..Failed Alert Name: %{action}..Time: %{fld3} %{fld1}..Severity: %{severity}..Source: %{product}" }
				id => "message-Default"
				add_field => {
				"event_description" => "Default Alert"
					"[event][id]" => "Default"
					"[rsa][message][id1]" => "Default"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Default:01
		# line in RSA: Default Group blocks new clients. The client cannot register with the Default Group.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Default Group blocks new clients. The client cannot register with the Default Group." }
				id => "message-Default:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_description" => "Default Group blocks new clients. The client cannot register with the Default Group."
					"[event][id]" => "Default:01"
					"[rsa][message][id1]" => "Default:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Device" {
		# MESSAGE Device:01
		# line in RSA: <action>.   <info>,Local: <saddr>,Local: <fld1>,Remote: <fld25>,Remote: <daddr>,Remote: <fld3>,<direction>,<fld5>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <fld24>,Intrusion Payload URL:<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}.   %{info},Local: %{saddr},Local: %{fld1},Remote: %{fld25},Remote: %{daddr},Remote: %{fld3},%{direction},%{fld5},,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld8},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL: %{fld24},Intrusion Payload URL:%{fld12}" }
				id => "message-Device:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Device:01"
					"[rsa][message][id1]" => "Device:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Device
		# line in RSA: <action>.   <info>,Local: <saddr>,Local: <fld1>,Remote: <fld25>,Remote: <daddr>,Remote: <fld3>,<direction>,<fld5>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld8>,{"User:<username>",Domain:<domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld26> | User: <username>,Domain: <domain>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<action>[^\.]*)\.[\s]+(?<info>[^,]*),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld1>[^,]*),Remote:[\s]+(?<fld25>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld3>[^,]*),(?<direction>[^,]*),(?<fld5>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld8>[^,]*),(\"User:(?<username>[^\"]*)\",Domain:(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld26>[^\s]*)[\s]+|[\s]*User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>.*))$" }
				id => "message-Device"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Device"
					"[rsa][message][id1]" => "Device"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId473
	# line in RSA: Email sending failed
	else if [logstash][msgparser][id] == "msgParserId473" {
		dissect {
			mapping => { "message" => "Email sending failed" }
			id => "msgParserId473"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "Email sending failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Continue" {
		# MESSAGE FileWrite:02
		# line in RSA: <fld5> - Caller MD5=<checksum>,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,{"<filename>"|<filename>},User: <username>,Domain: <domain>,{Action Type:<fld46>,File size (<fld10>): <filename_size>,Device ID: <device>|Action Type:<fld44>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld5>[^\s]*)[\s]+\-[\s]+Caller[\s]+MD5=(?<checksum>[^,]*),File[\s]+Write,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<process>[^,]*),(?<fld4>[^,]*),No[\s]+Module[\s]+Name,(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),(Action[\s]+Type:(?<fld46>[^,]*),File[\s]+size[\s]+\((?<fld10>[^\)]*)\):[\s]+(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)|Action[\s]+Type:(?<fld44>.*))$" }
				id => "message-FileWrite:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write Begin."
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "FileWrite:02"
					"[rsa][message][id1]" => "FileWrite:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileWrite:01
		# line in RSA: [AC5-1.1] Log files written to Removable Media,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[AC5-1.1] Log files written to Removable Media,File Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-FileWrite:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write Begin."
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "FileWrite:01"
					"[rsa][message][id1]" => "FileWrite:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileWrite:03
		# line in RSA: <fld5>,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5},File Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-FileWrite:03"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write Begin."
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "FileWrite:03"
					"[rsa][message][id1]" => "FileWrite:03"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileWrite
		# line in RSA: ,File Write,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => ",File Write,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain}" }
				id => "message-FileWrite"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Write Begin."
				"ec_subject" => "File"
				"action" => "Write"
					"[event][id]" => "FileWrite"
					"[rsa][message][id1]" => "FileWrite"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileDelete
		# line in RSA: [AC5-1.1] Log files written to Removable Media,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[AC5-1.1] Log files written to Removable Media,File Delete,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-FileDelete"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Delete Begin."
				"ec_subject" => "File"
				"action" => "Delete"
					"[event][id]" => "FileDelete"
					"[rsa][message][id1]" => "FileDelete"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Continue
		# line in RSA: <info> - Caller MD5=<checksum>,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,{"<filename>"|<filename>},User: <username>,Domain: <domain>,Action Type:<fld44>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<info>[^\s]*)[\s]+\-[\s]+Caller[\s]+MD5=(?<checksum>[^,]*),File[\s]+Delete,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<fld3>[^,]*),(?<process>[^,]*),(?<fld4>[^,]*),No[\s]+Module[\s]+Name,(\"(?<filename>[^\"]*)\"|(?<filename>[^,]*)),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:(?<fld44>[^,]*),File[\s]+size[\s]+\(bytes\):[\s]+(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)$" }
				id => "message-Continue"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"saddr" => "%{hsaddr}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Delete Begin."
				"ec_subject" => "File"
				"action" => "Delete"
					"[event][id]" => "Continue"
					"[rsa][message][id1]" => "Continue"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileDelete:01
		# line in RSA: <fld5> - Caller MD5=<fld6>,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5} - Caller MD5=%{fld6},File Delete,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-FileDelete:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Delete Begin."
				"ec_subject" => "File"
				"action" => "Delete"
					"[event][id]" => "FileDelete:01"
					"[rsa][message][id1]" => "FileDelete:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileDelete:02
		# line in RSA: <fld5>,File Delete,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,No Module Name,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5},File Delete,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},No Module Name,%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-FileDelete:02"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Delete Begin."
				"ec_subject" => "File"
				"action" => "Delete"
					"[event][id]" => "FileDelete:02"
					"[rsa][message][id1]" => "FileDelete:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:06
		# line in RSA: <fld5>,System,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,<fld6>,<filename>,User: <username>,Domain: <domain>,Action Type:<fld44>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5},System,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld6},%{filename},User: %{username},Domain: %{domain},Action Type:%{fld44}" }
				id => "message-System:06"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "System:06"
					"[rsa][message][id1]" => "System:06"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE File:10
		# line in RSA: <fld1>,File Read,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Rule: <rulename>,<fld3>,<process>,<fld4>,<fld5>,<filename>,User: <username>,Domain: <domain>,Action Type:<fld6>,File size (bytes): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},File Read,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Rule: %{rulename},%{fld3},%{process},%{fld4},%{fld5},%{filename},User: %{username},Domain: %{domain},Action Type:%{fld6},File size (bytes): %{filename_size},Device ID: %{device}" }
				id => "message-File:10"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"event_description" => "File Read."
				"ec_subject" => "File"
				"action" => "Read"
					"[event][id]" => "File:10"
					"[rsa][message][id1]" => "File:10"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Blocked:08
		# line in RSA: {<fld11> - Caller MD5=<fld6>,|,}<action>,Begin: <fld2> <fld3>,End: <fld4> <fld5>,Rule: <rulename>,<process_id>,<process>,<fld6>,<fld7>,<fld8>,User: <username>,Domain: <domain>,Action Type: <fld9>,File size (<fld10>): <filename_size>,Device ID: <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld11>[^\s]*)[\s]+\-[\s]+Caller[\s]+MD5=(?<fld6>[^,]*),|,)(?<action>[^,]*),Begin:[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^,]*),End:[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^,]*),Rule:[\s]+(?<rulename>[^,]*),(?<process_id>[^,]*),(?<process>[^,]*),(?<fld6>[^,]*),(?<fld7>[^,]*),(?<fld8>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<domain>[^,]*),Action[\s]+Type:[\s]+(?<fld9>[^,]*),File[\s]+size[\s]+\((?<fld10>[^\)]*)\):[\s]+(?<filename_size>[^,]*),Device[\s]+ID:[\s]+(?<device>.*)$" }
				id => "message-Blocked:08"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"saddr" => "%{hsaddr}"
					"[event][id]" => "Blocked:08"
					"[rsa][message][id1]" => "Blocked:08"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Ping" {
		# MESSAGE Ping
		# line in RSA: { ""<action> | <action> }. Description:  <event_description>",Local: <daddr>,Local: <fld1>,Remote: <fld9>,Remote: <saddr>,Remote: <fld3>,Inbound,<protocol>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <fld7>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*\"\"(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)\.[\s]+Description:[\s]+(?<event_description>[^\"]*)\",Local:[\s]+(?<daddr>[^,]*),Local:[\s]+(?<fld1>[^,]*),Remote:[\s]+(?<fld9>[^,]*),Remote:[\s]+(?<saddr>[^,]*),Remote:[\s]+(?<fld3>[^,]*),Inbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<fld7>.*)$" }
				id => "message-Ping"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Inbound"
					"[event][id]" => "Ping"
					"[rsa][message][id1]" => "Ping"
					"[event][categoryid]" => "1001030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Ping:01
		# line in RSA: { ""<action> | <action> }. Description:  <event_description>",Local: <saddr>,Local: <fld1>,Remote: <fld9>,Remote: <daddr>,Remote: <fld3>,Outbound,<protocol>,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <fld7>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*\"\"(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)\.[\s]+Description:[\s]+(?<event_description>[^\"]*)\",Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld1>[^,]*),Remote:[\s]+(?<fld9>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld3>[^,]*),Outbound,(?<protocol>[^,]*),,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),Domain:[\s]+(?<fld7>.*)$" }
				id => "message-Ping:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"direction" => "Outbound"
					"[event][id]" => "Ping:01"
					"[rsa][message][id1]" => "Ping:01"
					"[event][categoryid]" => "1001030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE Server
		# line in RSA: <fld1>: Site: <fld2>,Server: <hostid>,<directory> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: Site: %{fld2},Server: %{hostid},%{directory} %{event_description}" }
				id => "message-Server"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Server"
					"[rsa][message][id1]" => "Server"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Server:01
		# line in RSA: Server returned HTTP response code: <resultcode> for URL: <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server returned HTTP response code: %{resultcode} for URL: %{url}" }
				id => "message-Server:01"
				add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Server:01"
					"[rsa][message][id1]" => "Server:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Server:03
		# line in RSA: Server security validation failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server security validation failed." }
				id => "message-Server:03"
				add_field => {
				"hostip" => "%{hhost}"
				"saddr" => "%{hhostid}"
				"event_time_string" => "%{htime}"
					"[event][id]" => "Server:03"
					"[rsa][message][id1]" => "Server:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId514
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId514" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId514"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Virus found"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId515
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId515" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId515"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Security risk found"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId516
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId516" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId516"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "FW Violation Event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId517
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId517" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId517"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "IDS Event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId518
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId518" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId518"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "CAL Event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId519
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId519" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId519"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Forced Detection Event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId520
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId520" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId520"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Detection Whitelisted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId521
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId521" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId521"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Potential risk found"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId522
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId522" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId522"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Risk submitted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId523
	# line in RSA: <hostip>^^<hostname>^^<domain>^^<username>^^<shost>^^<saddr>^^<event_source>^^<virusname>^^<info>^^<disposition>^^<action>^^<recorded_time>^^<fld33>^^<fld1>^^<dclass_counter1>^^<filename>^^<fld2>
	else if [logstash][msgparser][id] == "msgParserId523" {
		dissect {
			mapping => { "message" => "%{hostip}^^%{hostname}^^%{domain}^^%{username}^^%{shost}^^%{saddr}^^%{event_source}^^%{virusname}^^%{info}^^%{disposition}^^%{action}^^%{recorded_time}^^%{fld33}^^%{fld1}^^%{dclass_counter1}^^%{filename}^^%{fld2}" }
			id => "msgParserId523"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"threat_name" => "%{virusname}"
				"event_description" => "Compressed File"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId524
	# line in RSA: <id>^^<event_description>
	else if [logstash][msgparser][id] == "msgParserId524" {
		dissect {
			mapping => { "message" => "%{id}^^%{event_description}" }
			id => "msgParserId524"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId525
	# line in RSA: <id>^^<fld1> <fld2> <fld3> Organization importing started
	else if [logstash][msgparser][id] == "msgParserId525" {
		dissect {
			mapping => { "message" => "%{id}^^%{fld1} %{fld2} %{fld3} Organization importing started" }
			id => "msgParserId525"
			add_field => {
				"event_description" => "Organization importing started."
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
		}
	}
	# PARSER msgParserId526
	# line in RSA: <id>^^<fld1> <fld2> <fld3> Organization importing finished successfully
	else if [logstash][msgparser][id] == "msgParserId526" {
		dissect {
			mapping => { "message" => "%{id}^^%{fld1} %{fld2} %{fld3} Organization importing finished successfully" }
			id => "msgParserId526"
			add_field => {
				"event_description" => "Organization importing finished successfully."
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
		}
	}
	# PARSER msgParserId527
	# line in RSA: <id>^^The process <process> can not lock the process status table. The process status has been locked by the server <shost> (<fld22>) since <recorded_time>.
	else if [logstash][msgparser][id] == "msgParserId527" {
		dissect {
			mapping => { "message" => "%{id}^^The process %{process} can not lock the process status table. The process status has been locked by the server %{shost} (%{fld22}) since %{recorded_time}." }
			id => "msgParserId527"
			add_field => {
				"event_description" => "The process can not lock the process status table"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "1029" {
		# MESSAGE 1029
		# line in RSA: <id>^^<fld1> <fld2> <fld3> Backup succeeded and finished at <fld4> <fld5> <fld6>.  The backup file resides at the following location on the server <shost>:  <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{fld1} %{fld2} %{fld3} Backup succeeded and finished at %{fld4} %{fld5} %{fld6}.  The backup file resides at the following location on the server %{shost}:  %{directory}" }
				id => "message-1029"
				add_field => {
				"event_description" => "Backup succeeded and finished."
					"[event][id]" => "1029"
					"[rsa][message][id1]" => "1029"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
			}
		}
		# MESSAGE 1029:01
		# line in RSA: <id>^^Backup succeeded and finished.  The backup file resides at the following location on the server <shost>:  <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^Backup succeeded and finished.  The backup file resides at the following location on the server %{shost}:  %{directory}" }
				id => "message-1029:01"
				add_field => {
				"event_description" => "Backup succeeded and finished."
					"[event][id]" => "1029:01"
					"[rsa][message][id1]" => "1029:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "1030" {
		# MESSAGE 1030
		# line in RSA: <id>^^<fld1> <fld2> <fld3> Backup started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^%{fld1} %{fld2} %{fld3} Backup started" }
				id => "message-1030"
				add_field => {
				"event_description" => "Backup started."
					"[event][id]" => "1030"
					"[rsa][message][id1]" => "1030"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
			}
		}
		# MESSAGE 1030:01
		# line in RSA: <id>^^Backup started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}^^Backup started" }
				id => "message-1030:01"
				add_field => {
				"event_description" => "Backup started."
					"[event][id]" => "1030:01"
					"[rsa][message][id1]" => "1030:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId532
	# line in RSA: <id>^^Sending Email Failed for following email address [<user_address>].
	else if [logstash][msgparser][id] == "msgParserId532" {
		dissect {
			mapping => { "message" => "%{id}^^Sending Email Failed for following email address [%{user_address}]." }
			id => "msgParserId532"
			add_field => {
				"event_description" => "Sending Email Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "302449153" {
		# MESSAGE 302449153
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449153"
				add_field => {
					"[event][id]" => "302449153"
					"[rsa][message][id1]" => "302449153"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449153:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449153:01"
				add_field => {
					"[event][id]" => "302449153:01"
					"[rsa][message][id1]" => "302449153:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449154" {
		# MESSAGE 302449154
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449154"
				add_field => {
					"[event][id]" => "302449154"
					"[rsa][message][id1]" => "302449154"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449154:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449154:01"
				add_field => {
					"[event][id]" => "302449154:01"
					"[rsa][message][id1]" => "302449154:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449155" {
		# MESSAGE 302449155
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449155"
				add_field => {
					"[event][id]" => "302449155"
					"[rsa][message][id1]" => "302449155"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449155:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449155:01"
				add_field => {
					"[event][id]" => "302449155:01"
					"[rsa][message][id1]" => "302449155:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449156" {
		# MESSAGE 302449156
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449156"
				add_field => {
					"[event][id]" => "302449156"
					"[rsa][message][id1]" => "302449156"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449156:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449156:01"
				add_field => {
					"[event][id]" => "302449156:01"
					"[rsa][message][id1]" => "302449156:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449158" {
		# MESSAGE 302449158
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449158"
				add_field => {
					"[event][id]" => "302449158"
					"[rsa][message][id1]" => "302449158"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449158:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449158:01"
				add_field => {
					"[event][id]" => "302449158:01"
					"[rsa][message][id1]" => "302449158:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449166" {
		# MESSAGE 302449166
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449166"
				add_field => {
					"[event][id]" => "302449166"
					"[rsa][message][id1]" => "302449166"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449166:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449166:01"
				add_field => {
					"[event][id]" => "302449166:01"
					"[rsa][message][id1]" => "302449166:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449168" {
		# MESSAGE 302449168
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449168"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
					"[event][id]" => "302449168"
					"[rsa][message][id1]" => "302449168"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449168:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449168:01"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
					"[event][id]" => "302449168:01"
					"[rsa][message][id1]" => "302449168:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449169" {
		# MESSAGE 302449169
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449169"
				add_field => {
					"[event][id]" => "302449169"
					"[rsa][message][id1]" => "302449169"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449169:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449169:01"
				add_field => {
					"[event][id]" => "302449169:01"
					"[rsa][message][id1]" => "302449169:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449176" {
		# MESSAGE 302449176
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449176"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Enable"
				"ec_outcome" => "Success"
					"[event][id]" => "302449176"
					"[rsa][message][id1]" => "302449176"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449176:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449176:01"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Enable"
				"ec_outcome" => "Success"
					"[event][id]" => "302449176:01"
					"[rsa][message][id1]" => "302449176:01"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449178" {
		# MESSAGE 302449178
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449178"
				add_field => {
					"[event][id]" => "302449178"
					"[rsa][message][id1]" => "302449178"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449178:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449178:01"
				add_field => {
					"[event][id]" => "302449178:01"
					"[rsa][message][id1]" => "302449178:01"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449409" {
		# MESSAGE 302449409
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449409"
				add_field => {
					"[event][id]" => "302449409"
					"[rsa][message][id1]" => "302449409"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449409:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449409:01"
				add_field => {
					"[event][id]" => "302449409:01"
					"[rsa][message][id1]" => "302449409:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449410" {
		# MESSAGE 302449410
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449410"
				add_field => {
					"[event][id]" => "302449410"
					"[rsa][message][id1]" => "302449410"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449410:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449410:01"
				add_field => {
					"[event][id]" => "302449410:01"
					"[rsa][message][id1]" => "302449410:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449412" {
		# MESSAGE 302449412
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449412"
				add_field => {
					"[event][id]" => "302449412"
					"[rsa][message][id1]" => "302449412"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449412:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449412:01"
				add_field => {
					"[event][id]" => "302449412:01"
					"[rsa][message][id1]" => "302449412:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449413" {
		# MESSAGE 302449413
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449413"
				add_field => {
					"[event][id]" => "302449413"
					"[rsa][message][id1]" => "302449413"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449413:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449413:01"
				add_field => {
					"[event][id]" => "302449413:01"
					"[rsa][message][id1]" => "302449413:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449414" {
		# MESSAGE 302449414
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449414"
				add_field => {
					"[event][id]" => "302449414"
					"[rsa][message][id1]" => "302449414"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449414:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449414:01"
				add_field => {
					"[event][id]" => "302449414:01"
					"[rsa][message][id1]" => "302449414:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449415" {
		# MESSAGE 302449415
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449415"
				add_field => {
					"[event][id]" => "302449415"
					"[rsa][message][id1]" => "302449415"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449415:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449415:01"
				add_field => {
					"[event][id]" => "302449415:01"
					"[rsa][message][id1]" => "302449415:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449418" {
		# MESSAGE 302449418
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449418"
				add_field => {
					"[event][id]" => "302449418"
					"[rsa][message][id1]" => "302449418"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449418:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449418:01"
				add_field => {
					"[event][id]" => "302449418:01"
					"[rsa][message][id1]" => "302449418:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302449420" {
		# MESSAGE 302449420
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449420"
				add_field => {
					"[event][id]" => "302449420"
					"[rsa][message][id1]" => "302449420"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302449420:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302449420:01"
				add_field => {
					"[event][id]" => "302449420:01"
					"[rsa][message][id1]" => "302449420:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302450432" {
		# MESSAGE 302450432
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302450432"
				add_field => {
					"[event][id]" => "302450432"
					"[rsa][message][id1]" => "302450432"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302450432:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302450432:01"
				add_field => {
					"[event][id]" => "302450432:01"
					"[rsa][message][id1]" => "302450432:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302450688" {
		# MESSAGE 302450688
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302450688"
				add_field => {
					"[event][id]" => "302450688"
					"[rsa][message][id1]" => "302450688"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302450688:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302450688:01"
				add_field => {
					"[event][id]" => "302450688:01"
					"[rsa][message][id1]" => "302450688:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302450944" {
		# MESSAGE 302450944
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302450944"
				add_field => {
					"[event][id]" => "302450944"
					"[rsa][message][id1]" => "302450944"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302450944:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302450944:01"
				add_field => {
					"[event][id]" => "302450944:01"
					"[rsa][message][id1]" => "302450944:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452736" {
		# MESSAGE 302452736
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452736"
				add_field => {
					"[event][id]" => "302452736"
					"[rsa][message][id1]" => "302452736"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452736:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452736:01"
				add_field => {
					"[event][id]" => "302452736:01"
					"[rsa][message][id1]" => "302452736:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452743" {
		# MESSAGE 302452743
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452743"
				add_field => {
					"[event][id]" => "302452743"
					"[rsa][message][id1]" => "302452743"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452743:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452743:01"
				add_field => {
					"[event][id]" => "302452743:01"
					"[rsa][message][id1]" => "302452743:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452758" {
		# MESSAGE 302452758
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452758"
				add_field => {
					"[event][id]" => "302452758"
					"[rsa][message][id1]" => "302452758"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452758:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452758:01"
				add_field => {
					"[event][id]" => "302452758:01"
					"[rsa][message][id1]" => "302452758:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452801" {
		# MESSAGE 302452801
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452801"
				add_field => {
					"[event][id]" => "302452801"
					"[rsa][message][id1]" => "302452801"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452801:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452801:01"
				add_field => {
					"[event][id]" => "302452801:01"
					"[rsa][message][id1]" => "302452801:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452802" {
		# MESSAGE 302452802
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452802"
				add_field => {
					"[event][id]" => "302452802"
					"[rsa][message][id1]" => "302452802"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452802:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452802:01"
				add_field => {
					"[event][id]" => "302452802:01"
					"[rsa][message][id1]" => "302452802:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452807" {
		# MESSAGE 302452807
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452807"
				add_field => {
					"[event][id]" => "302452807"
					"[rsa][message][id1]" => "302452807"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452807:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452807:01"
				add_field => {
					"[event][id]" => "302452807:01"
					"[rsa][message][id1]" => "302452807:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452808" {
		# MESSAGE 302452808
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452808"
				add_field => {
					"[event][id]" => "302452808"
					"[rsa][message][id1]" => "302452808"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452808:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452808:01"
				add_field => {
					"[event][id]" => "302452808:01"
					"[rsa][message][id1]" => "302452808:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452816" {
		# MESSAGE 302452816
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452816"
				add_field => {
					"[event][id]" => "302452816"
					"[rsa][message][id1]" => "302452816"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452816:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452816:01"
				add_field => {
					"[event][id]" => "302452816:01"
					"[rsa][message][id1]" => "302452816:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452817" {
		# MESSAGE 302452817
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452817"
				add_field => {
					"[event][id]" => "302452817"
					"[rsa][message][id1]" => "302452817"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452817:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452817:01"
				add_field => {
					"[event][id]" => "302452817:01"
					"[rsa][message][id1]" => "302452817:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302452819" {
		# MESSAGE 302452819
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452819"
				add_field => {
					"[event][id]" => "302452819"
					"[rsa][message][id1]" => "302452819"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302452819:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302452819:01"
				add_field => {
					"[event][id]" => "302452819:01"
					"[rsa][message][id1]" => "302452819:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302710785" {
		# MESSAGE 302710785
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710785"
				add_field => {
					"[event][id]" => "302710785"
					"[rsa][message][id1]" => "302710785"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302710785:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710785:01"
				add_field => {
					"[event][id]" => "302710785:01"
					"[rsa][message][id1]" => "302710785:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302710786" {
		# MESSAGE 302710786
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710786"
				add_field => {
					"[event][id]" => "302710786"
					"[rsa][message][id1]" => "302710786"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302710786:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710786:01"
				add_field => {
					"[event][id]" => "302710786:01"
					"[rsa][message][id1]" => "302710786:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302710790" {
		# MESSAGE 302710790
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710790"
				add_field => {
					"[event][id]" => "302710790"
					"[rsa][message][id1]" => "302710790"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302710790:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710790:01"
				add_field => {
					"[event][id]" => "302710790:01"
					"[rsa][message][id1]" => "302710790:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302710791" {
		# MESSAGE 302710791
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710791"
				add_field => {
					"[event][id]" => "302710791"
					"[rsa][message][id1]" => "302710791"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302710791:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302710791:01"
				add_field => {
					"[event][id]" => "302710791:01"
					"[rsa][message][id1]" => "302710791:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302776321" {
		# MESSAGE 302776321
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776321"
				add_field => {
					"[event][id]" => "302776321"
					"[rsa][message][id1]" => "302776321"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302776321:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776321:01"
				add_field => {
					"[event][id]" => "302776321:01"
					"[rsa][message][id1]" => "302776321:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302776322" {
		# MESSAGE 302776322
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776322"
				add_field => {
					"[event][id]" => "302776322"
					"[rsa][message][id1]" => "302776322"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302776322:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776322:01"
				add_field => {
					"[event][id]" => "302776322:01"
					"[rsa][message][id1]" => "302776322:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302776576" {
		# MESSAGE 302776576
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776576"
				add_field => {
					"[event][id]" => "302776576"
					"[rsa][message][id1]" => "302776576"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302776576:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776576:01"
				add_field => {
					"[event][id]" => "302776576:01"
					"[rsa][message][id1]" => "302776576:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302776834" {
		# MESSAGE 302776834
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776834"
				add_field => {
					"[event][id]" => "302776834"
					"[rsa][message][id1]" => "302776834"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302776834:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302776834:01"
				add_field => {
					"[event][id]" => "302776834:01"
					"[rsa][message][id1]" => "302776834:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303077785" {
		# MESSAGE 303077785
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303077785"
				add_field => {
					"[event][id]" => "303077785"
					"[rsa][message][id1]" => "303077785"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303077785:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303077785:01"
				add_field => {
					"[event][id]" => "303077785:01"
					"[rsa][message][id1]" => "303077785:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303169538" {
		# MESSAGE 303169538
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303169538"
				add_field => {
					"[event][id]" => "303169538"
					"[rsa][message][id1]" => "303169538"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303169538:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303169538:01"
				add_field => {
					"[event][id]" => "303169538:01"
					"[rsa][message][id1]" => "303169538:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235073" {
		# MESSAGE 303235073
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235073"
				add_field => {
					"[event][id]" => "303235073"
					"[rsa][message][id1]" => "303235073"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235073:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235073:01"
				add_field => {
					"[event][id]" => "303235073:01"
					"[rsa][message][id1]" => "303235073:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235074" {
		# MESSAGE 303235074
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235074"
				add_field => {
					"[event][id]" => "303235074"
					"[rsa][message][id1]" => "303235074"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235074:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235074:01"
				add_field => {
					"[event][id]" => "303235074:01"
					"[rsa][message][id1]" => "303235074:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235075" {
		# MESSAGE 303235075
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235075"
				add_field => {
					"[event][id]" => "303235075"
					"[rsa][message][id1]" => "303235075"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235075:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235075:01"
				add_field => {
					"[event][id]" => "303235075:01"
					"[rsa][message][id1]" => "303235075:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235079" {
		# MESSAGE 303235079
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235079"
				add_field => {
					"[event][id]" => "303235079"
					"[rsa][message][id1]" => "303235079"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235079:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235079:01"
				add_field => {
					"[event][id]" => "303235079:01"
					"[rsa][message][id1]" => "303235079:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235080" {
		# MESSAGE 303235080
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^{<event_description> [name]:<obj_name> [class]:<obj_type> [guid]:<hardware_id> [deviceID]:<info>|<event_description>. <info>|<event_description>}^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\^]*)\^\^(?<domain>[^\^]*)\^\^(?<fld3>[^\^]*)\^\^(?<hostname>[^\^]*)\^\^(?<group>[^\^]*)\^\^(?<fld6>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<fld7>[^\^]*)\^\^(?<fld8>[^\^]*)\^\^(?<severity>[^\^]*)\^\^(?<fld9>[^\^]*)\^\^(?<fld10>[^\^]*)\^\^(?<shost>[^\^]*)\^\^(?<fld11>[^\^]*)\^\^(?<event_source>[^\^]*)\^\^((?<event_description>[^\s]*)[\s]+\[name\]:(?<obj_name>[^\s]*)[\s]+\[class\]:(?<obj_type>[^\s]*)[\s]+\[guid\]:(?<hardware_id>[^\s]*)[\s]+\[deviceID\]:(?<info>[^\^]*)|(?<event_description>[^\.]*)\.[\s]+(?<info>[^\^]*)|(?<event_description>[^\^]*))\^\^(?<fld17>[^\^]*)\^\^(?<fld18>[^\^]*)\^\^(?<fld20>[^\^]*)\^\^(?<fld21>[^\^]*)\^\^(?<fld22>[^\^]*)\^\^(?<fld23>[^\^]*)\^\^(?<fld24>[^\^]*)\^\^(?<fld25>[^\^]*)\^\^(?<fld26>[^\^]*)\^\^(?<fld27>[^\^]*)\^\^(?<fld28>.*)$" }
				id => "message-303235080"
				add_field => {
					"[event][id]" => "303235080"
					"[rsa][message][id1]" => "303235080"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235080:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^{<event_description> [name]:<obj_name> [class]:<obj_type> [guid]:<hardware_id> [deviceID]:<info>|<event_description>. <info>|<event_description>}^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\^]*)\^\^(?<domain>[^\^]*)\^\^(?<fld3>[^\^]*)\^\^(?<fld6>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<fld7>[^\^]*)\^\^(?<fld8>[^\^]*)\^\^(?<severity>[^\^]*)\^\^(?<fld9>[^\^]*)\^\^(?<fld10>[^\^]*)\^\^(?<shost>[^\^]*)\^\^(?<fld11>[^\^]*)\^\^(?<event_source>[^\^]*)\^\^((?<event_description>[^\s]*)[\s]+\[name\]:(?<obj_name>[^\s]*)[\s]+\[class\]:(?<obj_type>[^\s]*)[\s]+\[guid\]:(?<hardware_id>[^\s]*)[\s]+\[deviceID\]:(?<info>[^\^]*)|(?<event_description>[^\.]*)\.[\s]+(?<info>[^\^]*)|(?<event_description>[^\^]*))\^\^(?<fld17>[^\^]*)\^\^(?<fld18>[^\^]*)\^\^(?<fld20>[^\^]*)\^\^(?<fld21>[^\^]*)\^\^(?<fld22>[^\^]*)\^\^(?<fld23>[^\^]*)\^\^(?<fld24>[^\^]*)\^\^(?<fld25>[^\^]*)\^\^(?<fld26>[^\^]*)\^\^(?<fld27>[^\^]*)\^\^(?<fld28>.*)$" }
				id => "message-303235080:01"
				add_field => {
					"[event][id]" => "303235080:01"
					"[rsa][message][id1]" => "303235080:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235081" {
		# MESSAGE 303235081
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235081"
				add_field => {
					"[event][id]" => "303235081"
					"[rsa][message][id1]" => "303235081"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235081:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235081:01"
				add_field => {
					"[event][id]" => "303235081:01"
					"[rsa][message][id1]" => "303235081:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235082" {
		# MESSAGE 303235082
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235082"
				add_field => {
					"[event][id]" => "303235082"
					"[rsa][message][id1]" => "303235082"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235082:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235082:01"
				add_field => {
					"[event][id]" => "303235082:01"
					"[rsa][message][id1]" => "303235082:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "303235083" {
		# MESSAGE 303235083
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235083"
				add_field => {
					"[event][id]" => "303235083"
					"[rsa][message][id1]" => "303235083"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235083:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235083:01"
				add_field => {
					"[event][id]" => "303235083:01"
					"[rsa][message][id1]" => "303235083:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId533
	# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
	else if [logstash][msgparser][id] == "msgParserId533" {
		dissect {
			mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
			id => "msgParserId533"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}
	else if [logstash][msgparser][id] == "303235076" {
		# MESSAGE 303235076
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235076"
				add_field => {
					"[event][id]" => "303235076"
					"[rsa][message][id1]" => "303235076"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 303235076:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-303235076:01"
				add_field => {
					"[event][id]" => "303235076:01"
					"[rsa][message][id1]" => "303235076:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId534
	# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<id>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<event_source>^^<event_description>^^<fld17>^^<fld18>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
	else if [logstash][msgparser][id] == "msgParserId534" {
		dissect {
			mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{id}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{event_source}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
			id => "msgParserId534"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}
	else if [logstash][msgparser][id] == "301" {
		# MESSAGE 301
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^Block all other IP traffic and log^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^Block all other IP traffic and log^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-301"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_description" => "Block all other IP traffic and log"
				"rulename" => "Block all other IP traffic and log"
					"[event][id]" => "301"
					"[rsa][message][id1]" => "301"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 301:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^Block all other IP traffic and log^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^Block all other IP traffic and log^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-301:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_description" => "Block all other IP traffic and log"
				"rulename" => "Block all other IP traffic and log"
					"[event][id]" => "301:01"
					"[rsa][message][id1]" => "301:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 301:02
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-301:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "301:02"
					"[rsa][message][id1]" => "301:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "302" {
		# MESSAGE 302
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block Local File Sharing to external computers"
					"[event][id]" => "302"
					"[rsa][message][id1]" => "302"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 302:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-302:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block Local File Sharing to external computers"
					"[event][id]" => "302:01"
					"[rsa][message][id1]" => "302:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "306" {
		# MESSAGE 306
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-306"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block all other IP traffic and log"
					"[event][id]" => "306"
					"[rsa][message][id1]" => "306"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 306:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-306:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block all other IP traffic and log"
					"[event][id]" => "306:01"
					"[rsa][message][id1]" => "306:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "307" {
		# MESSAGE 307
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-307"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block all other traffic"
					"[event][id]" => "307"
					"[rsa][message][id1]" => "307"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 307:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-307:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block all other traffic"
					"[event][id]" => "307:01"
					"[rsa][message][id1]" => "307:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "308" {
		# MESSAGE 308
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^Block all other IP traffic and log^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^Block all other IP traffic and log^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-308"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block all other IP traffic and log"
				"rulename" => "Block all other IP traffic and log"
					"[event][id]" => "308"
					"[rsa][message][id1]" => "308"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 308:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^Block all other IP traffic and log^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^Block all other IP traffic and log^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-308:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_description" => "Block all other IP traffic and log"
				"rulename" => "Block all other IP traffic and log"
					"[event][id]" => "308:01"
					"[rsa][message][id1]" => "308:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 308:02
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<id>^^<saddr_v6>^^<daddr_v6>^^<saddr>^^<daddr>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<sport>^^<dport>^^<fld14>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<fld17>^^<rule>^^<rulename>^^<fld18>^^<fld19>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{id}^^%{saddr_v6}^^%{daddr_v6}^^%{saddr}^^%{daddr}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{sport}^^%{dport}^^%{fld14}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{fld17}^^%{rule}^^%{rulename}^^%{fld18}^^%{fld19}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-308:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "308:02"
					"[rsa][message][id1]" => "308:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId553
	# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
	else if [logstash][msgparser][id] == "msgParserId553" {
		dissect {
			mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
			id => "msgParserId553"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Scan"
				"ec_theme" => "Communication"
				"[logstash][fullDateTimeString]" => "%{fld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}
	else if [logstash][msgparser][id] == "206" {
		# MESSAGE 206
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
				id => "message-206"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "206"
					"[rsa][message][id1]" => "206"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 206:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-206:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "206:01"
					"[rsa][message][id1]" => "206:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "207" {
		# MESSAGE 207
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
				id => "message-207"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "207"
					"[rsa][message][id1]" => "207"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 207:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-207:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "207:01"
					"[rsa][message][id1]" => "207:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId556
	# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
	else if [logstash][msgparser][id] == "msgParserId556" {
		dissect {
			mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
			id => "msgParserId556"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"[logstash][fullDateTimeString]" => "%{fld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}
	else if [logstash][msgparser][id] == "210" {
		# MESSAGE 210
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
				id => "message-210"
				add_field => {
					"[event][id]" => "210"
					"[rsa][message][id1]" => "210"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 210:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-210:01"
				add_field => {
					"[event][id]" => "210:01"
					"[rsa][message][id1]" => "210:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "211" {
		# MESSAGE 211
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
				id => "message-211"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "211"
					"[rsa][message][id1]" => "211"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 211:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}" }
				id => "message-211:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "211:01"
					"[rsa][message][id1]" => "211:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId557
	# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
	else if [logstash][msgparser][id] == "msgParserId557" {
		dissect {
			mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}^^%{fld17}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
			id => "msgParserId557"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
		}
	}
	else if [logstash][msgparser][id] == "238" {
		# MESSAGE 238
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^{<event_description> [name]:<obj_name> [class]:<obj_type> [guid]:<hardware_id> [deviceID]:<info>|<event_description>. <info>|<event_description>}^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\^]*)\^\^(?<domain>[^\^]*)\^\^(?<fld3>[^\^]*)\^\^(?<hostname>[^\^]*)\^\^(?<group>[^\^]*)\^\^(?<fld6>[^\^]*)\^\^(?<fld7>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<saddr>[^\^]*)\^\^(?<daddr>[^\^]*)\^\^(?<smacaddr>[^\^]*)\^\^(?<dmacaddr>[^\^]*)\^\^(?<zone>[^\^]*)\^\^(?<username>[^\^]*)\^\^(?<sdomain>[^\^]*)\^\^(?<fld8>[^\^]*)\^\^(?<severity>[^\^]*)\^\^(?<fld9>[^\^]*)\^\^(?<fld10>[^\^]*)\^\^(?<shost>[^\^]*)\^\^(?<fld11>[^\^]*)\^\^(?<fld12>[^\^]*)\^\^(?<dhost>[^\^]*)\^\^(?<fld13>[^\^]*)\^\^(?<fld14>[^\^]*)\^\^(?<fld29>[^\^]*)\^\^(?<fld15>[^\^]*)\^\^(?<fld16>[^\^]*)\^\^(?<dclass_counter1>[^\^]*)\^\^(?<application>[^\^]*)\^\^((?<event_description>[^\s]*)[\s]+\[name\]:(?<obj_name>[^\s]*)[\s]+\[class\]:(?<obj_type>[^\s]*)[\s]+\[guid\]:(?<hardware_id>[^\s]*)[\s]+\[deviceID\]:(?<info>[^\^]*)|(?<event_description>[^\.]*)\.[\s]+(?<info>[^\^]*)|(?<event_description>[^\^]*))\^\^(?<fld17>[^\^]*)\^\^(?<fld18>[^\^]*)\^\^(?<fld19>[^\^]*)\^\^(?<fld20>[^\^]*)\^\^(?<fld21>[^\^]*)\^\^(?<fld22>[^\^]*)\^\^(?<fld23>[^\^]*)\^\^(?<fld24>[^\^]*)\^\^(?<fld25>[^\^]*)\^\^(?<fld26>[^\^]*)\^\^(?<fld27>[^\^]*)\^\^(?<fld28>[^\^]*)\^\^(?<saddr_v6>[^\^]*)\^\^(?<daddr_v6>[^\^]*)\^\^(?<sport>[^\^]*)\^\^(?<dport>[^\^]*)\^\^(?<sigid>[^\^]*)\^\^(?<sigid_string>[^\^]*)\^\^(?<sigid1>[^\^]*)\^\^(?<url>[^\^]*)\^\^(?<web_referer>[^\^]*)\^\^(?<fld30>[^\^]*)\^\^(?<version>[^\^]*)\^\^(?<policy_id>.*)$" }
				id => "message-238"
				add_field => {
					"[event][id]" => "238"
					"[rsa][message][id1]" => "238"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 238:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^{<event_description> [name]:<obj_name> [class]:<obj_type> [guid]:<hardware_id> [deviceID]:<info>|<event_description>. <info>|<event_description>}^^<fld17>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\^]*)\^\^(?<domain>[^\^]*)\^\^(?<fld3>[^\^]*)\^\^(?<fld6>[^\^]*)\^\^(?<fld7>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<saddr>[^\^]*)\^\^(?<daddr>[^\^]*)\^\^(?<smacaddr>[^\^]*)\^\^(?<dmacaddr>[^\^]*)\^\^(?<zone>[^\^]*)\^\^(?<username>[^\^]*)\^\^(?<sdomain>[^\^]*)\^\^(?<fld8>[^\^]*)\^\^(?<severity>[^\^]*)\^\^(?<fld9>[^\^]*)\^\^(?<fld10>[^\^]*)\^\^(?<shost>[^\^]*)\^\^(?<fld11>[^\^]*)\^\^(?<fld12>[^\^]*)\^\^(?<dhost>[^\^]*)\^\^(?<fld13>[^\^]*)\^\^(?<fld14>[^\^]*)\^\^(?<fld29>[^\^]*)\^\^(?<fld15>[^\^]*)\^\^(?<fld16>[^\^]*)\^\^(?<dclass_counter1>[^\^]*)\^\^(?<application>[^\^]*)\^\^((?<event_description>[^\s]*)[\s]+\[name\]:(?<obj_name>[^\s]*)[\s]+\[class\]:(?<obj_type>[^\s]*)[\s]+\[guid\]:(?<hardware_id>[^\s]*)[\s]+\[deviceID\]:(?<info>[^\^]*)|(?<event_description>[^\.]*)\.[\s]+(?<info>[^\^]*)|(?<event_description>[^\^]*))\^\^(?<fld17>[^\^]*)\^\^(?<fld18>[^\^]*)\^\^(?<fld19>[^\^]*)\^\^(?<fld20>[^\^]*)\^\^(?<fld21>[^\^]*)\^\^(?<fld22>[^\^]*)\^\^(?<fld23>[^\^]*)\^\^(?<fld24>[^\^]*)\^\^(?<fld25>[^\^]*)\^\^(?<fld26>[^\^]*)\^\^(?<fld27>[^\^]*)\^\^(?<fld28>.*)$" }
				id => "message-238:01"
				add_field => {
					"[event][id]" => "238:01"
					"[rsa][message][id1]" => "238:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "501" {
		# MESSAGE 501
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<username>^^<sdomain>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<event_description>^^<fld13>^^<fld14>^^<fld15>^^<fld16>^^<rule>^^<rulename>^^<parent_pid>^^<parent_process>^^<fld17>^^<fld18>^^<param>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<fld29>^^<dclass_counter1>^^<fld30>^^<fld31>^^<filename_size>^^<fld32>^^<fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{username}^^%{sdomain}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{event_description}^^%{fld13}^^%{fld14}^^%{fld15}^^%{fld16}^^%{rule}^^%{rulename}^^%{parent_pid}^^%{parent_process}^^%{fld17}^^%{fld18}^^%{param}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{fld29}^^%{dclass_counter1}^^%{fld30}^^%{fld31}^^%{filename_size}^^%{fld32}^^%{fld33}" }
				id => "message-501"
				add_field => {
				"filename" => "%{parent_process}"
					"[event][id]" => "501"
					"[rsa][message][id1]" => "501"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 501:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<username>^^<sdomain>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<event_description>^^<fld13>^^<fld14>^^<fld15>^^<fld16>^^<rule>^^<rulename>^^<parent_pid>^^<parent_process>^^<fld17>^^<fld18>^^<param>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<fld29>^^<dclass_counter1>^^<fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{username}^^%{sdomain}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{event_description}^^%{fld13}^^%{fld14}^^%{fld15}^^%{fld16}^^%{rule}^^%{rulename}^^%{parent_pid}^^%{parent_process}^^%{fld17}^^%{fld18}^^%{param}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{fld29}^^%{dclass_counter1}^^%{fld30}" }
				id => "message-501:01"
				add_field => {
				"filename" => "%{parent_process}"
					"[event][id]" => "501:01"
					"[rsa][message][id1]" => "501:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "502" {
		# MESSAGE 502
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<username>^^<sdomain>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<event_description>^^<fld13>^^<fld14>^^<fld15>^^<fld16>^^<rule>^^<rulename>^^<parent_pid>^^<parent_process>^^<fld17>^^<fld18>^^<param>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<fld29>^^<dclass_counter1>^^<fld30>^^<fld31>^^<filename_size>^^<fld32>^^<fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{username}^^%{sdomain}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{event_description}^^%{fld13}^^%{fld14}^^%{fld15}^^%{fld16}^^%{rule}^^%{rulename}^^%{parent_pid}^^%{parent_process}^^%{fld17}^^%{fld18}^^%{param}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{fld29}^^%{dclass_counter1}^^%{fld30}^^%{fld31}^^%{filename_size}^^%{fld32}^^%{fld33}" }
				id => "message-502"
				add_field => {
				"filename" => "%{parent_process}"
					"[event][id]" => "502"
					"[rsa][message][id1]" => "502"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 502:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<username>^^<sdomain>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<event_description>^^<fld13>^^<fld14>^^<fld15>^^<fld16>^^<rule>^^<rulename>^^<parent_pid>^^<parent_process>^^<fld17>^^<fld18>^^<param>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<fld29>^^<dclass_counter1>^^<fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{username}^^%{sdomain}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{event_description}^^%{fld13}^^%{fld14}^^%{fld15}^^%{fld16}^^%{rule}^^%{rulename}^^%{parent_pid}^^%{parent_process}^^%{fld17}^^%{fld18}^^%{param}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{fld29}^^%{dclass_counter1}^^%{fld30}" }
				id => "message-502:01"
				add_field => {
				"filename" => "%{parent_process}"
					"[event][id]" => "502:01"
					"[rsa][message][id1]" => "502:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "999" {
		# MESSAGE 999
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<saddr>^^<username>^^<sdomain>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<event_description>^^<fld13>^^<fld14>^^<fld15>^^<fld16>^^<rule>^^<rulename>^^<parent_pid>^^<parent_process>^^<fld17>^^<fld18>^^<param>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<fld29>^^<dclass_counter1>^^<fld30>^^<fld31>^^<filename_size>^^<fld32>^^<fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{saddr}^^%{username}^^%{sdomain}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{event_description}^^%{fld13}^^%{fld14}^^%{fld15}^^%{fld16}^^%{rule}^^%{rulename}^^%{parent_pid}^^%{parent_process}^^%{fld17}^^%{fld18}^^%{param}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{fld29}^^%{dclass_counter1}^^%{fld30}^^%{fld31}^^%{filename_size}^^%{fld32}^^%{fld33}" }
				id => "message-999"
				add_field => {
				"filename" => "%{parent_process}"
					"[event][id]" => "999"
					"[rsa][message][id1]" => "999"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 999:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<id>^^<username>^^<sdomain>^^<fld6>^^<fld7>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<event_description>^^<fld13>^^<fld14>^^<fld15>^^<fld16>^^<rule>^^<rulename>^^<parent_pid>^^<parent_process>^^<fld17>^^<fld18>^^<param>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<fld29>^^<dclass_counter1>^^<fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{id}^^%{username}^^%{sdomain}^^%{fld6}^^%{fld7}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{event_description}^^%{fld13}^^%{fld14}^^%{fld15}^^%{fld16}^^%{rule}^^%{rulename}^^%{parent_pid}^^%{parent_process}^^%{fld17}^^%{fld18}^^%{param}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{fld29}^^%{dclass_counter1}^^%{fld30}" }
				id => "message-999:01"
				add_field => {
				"filename" => "%{parent_process}"
					"[event][id]" => "999:01"
					"[rsa][message][id1]" => "999:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId565
	# line in RSA: Application,rn=<fld1> cid=<fld2> eid=<fld3>,<fld4> <fld5>,<fld6>,Symantec AntiVirus,SYSTEM,Information,<shost>,<event_description>. string-data=[    Scan type: <event_type> Event: <result> Security risk detected: <directory> File: <filename> Location: <fld7>  Computer: <fld8> User: <username> Action taken:<action> Date found: <fld9>]
	else if [logstash][msgparser][id] == "msgParserId565" {
		dissect {
			mapping => { "message" => "Application,rn=%{fld1} cid=%{fld2} eid=%{fld3},%{fld4} %{fld5},%{fld6},Symantec AntiVirus,SYSTEM,Information,%{shost},%{event_description}. string-data=[    Scan type: %{event_type} Event: %{result} Security risk detected: %{directory} File: %{filename} Location: %{fld7}  Computer: %{fld8} User: %{username} Action taken:%{action} Date found: %{fld9}]" }
			id => "msgParserId565"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId575
	# line in RSA:  Using Group Update Provider type: {Single Group Update Provider,Event time:<fld17><fld18>|Multiple Group Update Providers,Event time:<fld17><fld18>|Mapped Group Update Providers,Event time:<fld17><fld18>|Single Group Update Provider|Multiple Group Update Providers|Mapped Group Update Providers}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	else if [logstash][msgparser][id] == "242" {
		# MESSAGE 242
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>   [name]:<obj_name>   [class]:<obj_type>   [guid]:<hardware_id>   [deviceID]:<info>^^<fld79>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}   [name]:%{obj_name}   [class]:%{obj_type}   [guid]:%{hardware_id}   [deviceID]:%{info}^^%{fld79}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
				id => "message-242"
				add_field => {
					"[event][id]" => "242"
					"[rsa][message][id1]" => "242"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 242:01
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>   {[Device]: <device> [guid]: <hardware_id> [Volume]:|[Volume]:} <disk_volume>  [Vendor]:<devvendor> [Model]: <product> [Access]: <accesses>^^<fld79>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\^]*)\^\^(?<domain>[^\^]*)\^\^(?<fld3>[^\^]*)\^\^(?<hostname>[^\^]*)\^\^(?<group>[^\^]*)\^\^(?<fld6>[^\^]*)\^\^(?<fld7>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<saddr>[^\^]*)\^\^(?<daddr>[^\^]*)\^\^(?<smacaddr>[^\^]*)\^\^(?<dmacaddr>[^\^]*)\^\^(?<zone>[^\^]*)\^\^(?<username>[^\^]*)\^\^(?<sdomain>[^\^]*)\^\^(?<fld8>[^\^]*)\^\^(?<severity>[^\^]*)\^\^(?<fld9>[^\^]*)\^\^(?<fld10>[^\^]*)\^\^(?<shost>[^\^]*)\^\^(?<fld11>[^\^]*)\^\^(?<fld12>[^\^]*)\^\^(?<dhost>[^\^]*)\^\^(?<fld13>[^\^]*)\^\^(?<fld14>[^\^]*)\^\^(?<fld29>[^\^]*)\^\^(?<fld15>[^\^]*)\^\^(?<fld16>[^\^]*)\^\^(?<dclass_counter1>[^\^]*)\^\^(?<application>[^\^]*)\^\^(?<event_description>[^\s]*)[\s]+(\[Device\]:[\s]+(?<device>[^\s]*)[\s]+\[guid\]:[\s]+(?<hardware_id>[^\s]*)[\s]+\[Volume\]:|\[Volume\]:)[\s]+(?<disk_volume>[^\s]*)[\s]+\[Vendor\]:(?<devvendor>[^\s]*)[\s]+\[Model\]:[\s]+(?<product>[^\s]*)[\s]+\[Access\]:[\s]+(?<accesses>[^\^]*)\^\^(?<fld79>[^\^]*)\^\^(?<fld18>[^\^]*)\^\^(?<fld19>[^\^]*)\^\^(?<fld20>[^\^]*)\^\^(?<fld21>[^\^]*)\^\^(?<fld22>[^\^]*)\^\^(?<fld23>[^\^]*)\^\^(?<fld24>[^\^]*)\^\^(?<fld25>[^\^]*)\^\^(?<fld26>[^\^]*)\^\^(?<fld27>[^\^]*)\^\^(?<fld28>[^\^]*)\^\^(?<saddr_v6>[^\^]*)\^\^(?<daddr_v6>[^\^]*)\^\^(?<sport>[^\^]*)\^\^(?<dport>[^\^]*)\^\^(?<sigid>[^\^]*)\^\^(?<sigid_string>[^\^]*)\^\^(?<sigid1>[^\^]*)\^\^(?<url>[^\^]*)\^\^(?<web_referer>[^\^]*)\^\^(?<fld30>[^\^]*)\^\^(?<version>[^\^]*)\^\^(?<policy_id>.*)$" }
				id => "message-242:01"
				add_field => {
					"[event][id]" => "242:01"
					"[rsa][message][id1]" => "242:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 242:02
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^<event_description>   [Volume]: <disk_volume> [Model]: <product> [Access]: <accesses>^^<fld79>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}^^%{domain}^^%{fld3}^^%{hostname}^^%{group}^^%{fld6}^^%{fld7}^^%{id}^^%{saddr}^^%{daddr}^^%{smacaddr}^^%{dmacaddr}^^%{zone}^^%{username}^^%{sdomain}^^%{fld8}^^%{severity}^^%{fld9}^^%{fld10}^^%{shost}^^%{fld11}^^%{fld12}^^%{dhost}^^%{fld13}^^%{fld14}^^%{fld29}^^%{fld15}^^%{fld16}^^%{dclass_counter1}^^%{application}^^%{event_description}   [Volume]: %{disk_volume} [Model]: %{product} [Access]: %{accesses}^^%{fld79}^^%{fld18}^^%{fld19}^^%{fld20}^^%{fld21}^^%{fld22}^^%{fld23}^^%{fld24}^^%{fld25}^^%{fld26}^^%{fld27}^^%{fld28}^^%{saddr_v6}^^%{daddr_v6}^^%{sport}^^%{dport}^^%{sigid}^^%{sigid_string}^^%{sigid1}^^%{url}^^%{web_referer}^^%{fld30}^^%{version}^^%{policy_id}" }
				id => "message-242:02"
				add_field => {
					"[event][id]" => "242:02"
					"[rsa][message][id1]" => "242:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 242:03
		# line in RSA: <fld1>^^<domain>^^<fld3>^^<hostname>^^<group>^^<fld6>^^<fld7>^^<id>^^<saddr>^^<daddr>^^<smacaddr>^^<dmacaddr>^^<zone>^^<username>^^<sdomain>^^<fld8>^^<severity>^^<fld9>^^<fld10>^^<shost>^^<fld11>^^<fld12>^^<dhost>^^<fld13>^^<fld14>^^<fld29>^^<fld15>^^<fld16>^^<dclass_counter1>^^<application>^^{<event_description>. <info> [Access]: <accesses>| <event_description>. <info>| <event_description>}^^<fld79>^^<fld18>^^<fld19>^^<fld20>^^<fld21>^^<fld22>^^<fld23>^^<fld24>^^<fld25>^^<fld26>^^<fld27>^^<fld28>^^<saddr_v6>^^<daddr_v6>^^<sport>^^<dport>^^<sigid>^^<sigid_string>^^<sigid1>^^<url>^^<web_referer>^^<fld30>^^<version>^^<policy_id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\^]*)\^\^(?<domain>[^\^]*)\^\^(?<fld3>[^\^]*)\^\^(?<hostname>[^\^]*)\^\^(?<group>[^\^]*)\^\^(?<fld6>[^\^]*)\^\^(?<fld7>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<saddr>[^\^]*)\^\^(?<daddr>[^\^]*)\^\^(?<smacaddr>[^\^]*)\^\^(?<dmacaddr>[^\^]*)\^\^(?<zone>[^\^]*)\^\^(?<username>[^\^]*)\^\^(?<sdomain>[^\^]*)\^\^(?<fld8>[^\^]*)\^\^(?<severity>[^\^]*)\^\^(?<fld9>[^\^]*)\^\^(?<fld10>[^\^]*)\^\^(?<shost>[^\^]*)\^\^(?<fld11>[^\^]*)\^\^(?<fld12>[^\^]*)\^\^(?<dhost>[^\^]*)\^\^(?<fld13>[^\^]*)\^\^(?<fld14>[^\^]*)\^\^(?<fld29>[^\^]*)\^\^(?<fld15>[^\^]*)\^\^(?<fld16>[^\^]*)\^\^(?<dclass_counter1>[^\^]*)\^\^(?<application>[^\^]*)\^\^((?<event_description>[^\.]*)\.[\s]+(?<info>[^\s]*)[\s]+\[Access\]:[\s]+(?<accesses>[^\^]*)|[\s]*(?<event_description>[^\.]*)\.[\s]+(?<info>[^\^]*)|[\s]*(?<event_description>[^\^]*))\^\^(?<fld79>[^\^]*)\^\^(?<fld18>[^\^]*)\^\^(?<fld19>[^\^]*)\^\^(?<fld20>[^\^]*)\^\^(?<fld21>[^\^]*)\^\^(?<fld22>[^\^]*)\^\^(?<fld23>[^\^]*)\^\^(?<fld24>[^\^]*)\^\^(?<fld25>[^\^]*)\^\^(?<fld26>[^\^]*)\^\^(?<fld27>[^\^]*)\^\^(?<fld28>[^\^]*)\^\^(?<saddr_v6>[^\^]*)\^\^(?<daddr_v6>[^\^]*)\^\^(?<sport>[^\^]*)\^\^(?<dport>[^\^]*)\^\^(?<sigid>[^\^]*)\^\^(?<sigid_string>[^\^]*)\^\^(?<sigid1>[^\^]*)\^\^(?<url>[^\^]*)\^\^(?<web_referer>[^\^]*)\^\^(?<fld30>[^\^]*)\^\^(?<version>[^\^]*)\^\^(?<policy_id>.*)$" }
				id => "message-242:03"
				add_field => {
					"[event][id]" => "242:03"
					"[rsa][message][id1]" => "242:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
	}
	# PARSER msgParserId590
	# line in RSA: <shost>, Remote: <fld4>,Remote: <daddr>,Remote: <fld5>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,Domain: <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL:<url>,Intrusion Payload URL:<fld25>
	else if [logstash][msgparser][id] == "msgParserId590" {
		dissect {
			mapping => { "message" => "%{shost}, Remote: %{fld4},Remote: %{daddr},Remote: %{fld5},Unknown,OTHERS,,Begin: %{fld50} %{fld52},End: %{fld51} %{fld53},Occurrences: %{dclass_counter1},Application: %{application},Location: %{fld6},User: %{username},Domain: %{domain},Local Port %{sport},Remote Port %{dport},CIDS Signature ID: %{sigid},CIDS Signature string: %{sigid_string},CIDS Signature SubID: %{fld23},Intrusion URL:%{url},Intrusion Payload URL:%{fld25}" }
			id => "msgParserId590"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
		}
	}
	# PARSER msgParserId591
	# line in RSA: { "<info>"|<info>},Local: <saddr>,Local: <fld1>,Remote: <fld9>,Remote: <daddr>,Remote: <fld3>,Unknown,OTHERS,,Begin: <fld50> <fld52>,End: <fld51> <fld53>,Occurrences: <dclass_counter1>,Application: <application>,Location: <fld6>,User: <username>,{ Domain:|Domain:} <domain>,Local Port <sport>,Remote Port <dport>,CIDS Signature ID: <sigid>,CIDS Signature string: <sigid_string>,CIDS Signature SubID: <fld23>,Intrusion URL: <url>,Intrusion Payload URL:<fld25> 
	else if [logstash][msgparser][id] == "msgParserId591" {
		grok {
			match => { "message" => "^([\s]*\"(?<info>[^\"]*)\"|(?<info>[^,]*)),Local:[\s]+(?<saddr>[^,]*),Local:[\s]+(?<fld1>[^,]*),Remote:[\s]+(?<fld9>[^,]*),Remote:[\s]+(?<daddr>[^,]*),Remote:[\s]+(?<fld3>[^,]*),Unknown,OTHERS,,Begin:[\s]+(?<fld50>[^\s]*)[\s]+(?<fld52>[^,]*),End:[\s]+(?<fld51>[^\s]*)[\s]+(?<fld53>[^,]*),Occurrences:[\s]+(?<dclass_counter1>[^,]*),Application:[\s]+(?<application>[^,]*),Location:[\s]+(?<fld6>[^,]*),User:[\s]+(?<username>[^,]*),([\s]*Domain:|Domain:)[\s]+(?<domain>[^,]*),Local[\s]+Port[\s]+(?<sport>[^,]*),Remote[\s]+Port[\s]+(?<dport>[^,]*),CIDS[\s]+Signature[\s]+ID:[\s]+(?<sigid>[^,]*),CIDS[\s]+Signature[\s]+string:[\s]+(?<sigid_string>[^,]*),CIDS[\s]+Signature[\s]+SubID:[\s]+(?<fld23>[^,]*),Intrusion[\s]+URL:[\s]+(?<url>[^,]*),Intrusion[\s]+Payload[\s]+URL:(?<fld25>[^\s]*)[\s]+$" }
			id => "msgParserId591"
			add_field => {
				"hostname" => "%{hhost}"
				"shost" => "%{hshost}"
				"event_time_string" => "%{htime}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[fld14]"
		destination => "[protocol]"
		dictionary => {
			"1" => "Others"
			"2" => "TCP"
			"3" => "UDP"
			"4" => "ICMP"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[fld13]"
		destination => "[direction]"
		dictionary => {
			"0" => "Unknown"
			"1" => "inbound"
			"2" => "outbound"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[fld11]"
		destination => "[action]"
		dictionary => {
			"0" => "Allow"
			"1" => "Block"
			"2" => "Ask"
			"3" => "Continue"
			"4" => "Terminate"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[fld11]"
		destination => "[ec_activity]"
		dictionary => {
			"0" => "Allow"
			"1" => "Deny"
			"3" => "Allow"
			"4" => "Deny"
		}
		fallback => ""
		override => true
	}
}

# Rename fields
filter {
	mutate {
		rename => {
			"cert.serial" => "cert_serial"
		}
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_symantecavmsg.json"
#			template_name => "symantecav_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
