# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ciscosecureacs"
			"[observer][name]" => "Cisco Secure ACS Appliance"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> <hfld12> Kiwi_Syslog_Server Original Address=<hfld16> <hfld1> <hfld2> <hfld3> <hnode> CSCOacs_<messageid> <hfld4> <hfld5> <hfld6> <hyear>-<hmonth>-<hday> <hhour>:<hmin>:<hsec>.<hfld7> <hfld8> <hfld9> <hfld10> <hseverity> <hfld11>: <hevent_description>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hfld12} Kiwi_Syslog_Server Original Address=%{hfld16} %{hfld1} %{hfld2} %{hfld3} %{hnode} CSCOacs_%{messageid} %{hfld4} %{hfld5} %{hfld6} %{hyear}-%{hmonth}-%{hday} %{hhour}:%{hmin}:%{hsec}.%{hfld7} %{hfld8} %{hfld9} %{hfld10} %{hseverity} %{hfld11}: %{hevent_description}, %{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> <hnode> CSCOacs_<messageid> <hfld4> <hfld5> <hfld6> <hyear>-<hmonth>-<hday> <hhour>:<hmin>:<hsec>.<hfld7> <hfld8> <hfld9> <hfld10> <hseverity> <hfld11>: <hevent_description>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hnode} CSCOacs_%{messageid} %{hfld4} %{hfld5} %{hfld6} %{hyear}-%{hmonth}-%{hday} %{hhour}:%{hmin}:%{hsec}.%{hfld7} %{hfld8} %{hfld9} %{hfld10} %{hseverity} %{hfld11}: %{hevent_description}, %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> <hfld12> Kiwi_Syslog_Server Original Address=<hfld11> <hfld1> <hfld2> <hfld3> <hnode> CSCOacs_<messageid> <hfld4> <hfld5> <hfld6> <hfld7>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hfld12} Kiwi_Syslog_Server Original Address=%{hfld11} %{hfld1} %{hfld2} %{hfld3} %{hnode} CSCOacs_%{messageid} %{hfld4} %{hfld5} %{hfld6} %{hfld7}, %{message}" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> <hfld12> Kiwi_Syslog_Server Original Address=<hfld11> <hfld1> <hfld2> <hfld3> <hnode> CSCOacs_<messageid> <hfld4> <hfld5> <hfld6> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hfld12} Kiwi_Syslog_Server Original Address=%{hfld11} %{hfld1} %{hfld2} %{hfld3} %{hnode} CSCOacs_%{messageid} %{hfld4} %{hfld5} %{hfld6} %{message}" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> <hnode> CSCOacs_<messageid> <hfld4> <hfld5> <hfld6> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hnode} CSCOacs_%{messageid} %{hfld4} %{hfld5} %{hfld6} %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> <hsaddr> CisACS_<messageid> <hinfo> 1 0 <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hsaddr} CisACS_%{messageid} %{hinfo} 1 0 %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: <hmonth> <hday> <htime> <hnode> CISE_Profiler <hfld4> <hfld5> <hfld6> <hyear>-<hmonth>-<hday> <hhour>:<hmin>:<hsec>.<hfld7> <hfld8> <hfld9> <hfld10> <hseverity> Profiler: <hevent_description>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hnode} CISE_Profiler %{hfld4} %{hfld5} %{hfld6} %{hyear}-%{hmonth}-%{hday} %{hhour}:%{hmin}:%{hsec}.%{hfld7} %{hfld8} %{hfld9} %{hfld10} %{hseverity} Profiler: %{hevent_description}, %{message}" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "Profiler"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> <hnode> CISE_<messageid> <hfld4> <hfld5> <hfld6> <hyear>-<hmonth>-<hday> <hhour>:<hmin>:<hsec>.<hfld7> <hfld8> <hfld9> <hfld10> <hseverity> <hfld11>: <hevent_description>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hnode} CISE_%{messageid} %{hfld4} %{hfld5} %{hfld6} %{hyear}-%{hmonth}-%{hday} %{hhour}:%{hmin}:%{hsec}.%{hfld7} %{hfld8} %{hfld9} %{hfld10} %{hseverity} %{hfld11}: %{hevent_description}, %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00017
	# line in RSA: <hmonth> <hday> <htime> <messageid> <hfld4> <hfld5> <hfld6> <hyear>-<hmonth>-<hday> <hhour>:<hmin>:<hsec>.<hfld7> <hfld8> <hfld9> <hfld10> <hseverity> <hfld11>: <hevent_description>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{messageid} %{hfld4} %{hfld5} %{hfld6} %{hyear}-%{hmonth}-%{hday} %{hhour}:%{hmin}:%{hsec}.%{hfld7} %{hfld8} %{hfld9} %{hfld10} %{hseverity} %{hfld11}: %{hevent_description}, %{message}" }
			id => "header-00017"
			add_field => {
				"[rsa][header][id]" => "00017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <hmonth>  <hday> <htime> <hostname> <fld1>/<username>: [ACS <messageid>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth}  %{hday} %{htime} %{hostname} %{fld1}/%{username}: [ACS %{messageid}] %{message}" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> <hsaddr> <messageid> <hinfo> <hfld5> <hfld6> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hsaddr} %{messageid} %{hinfo} %{hfld5} %{hfld6} %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00016
	# line in RSA: <hmonth> <hday> <htime> <messageid> <hinfo> <hfld5> <hfld6> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{messageid} %{hinfo} %{hfld5} %{hfld6} %{message}" }
			id => "header-00016"
			add_field => {
				"[rsa][header][id]" => "00016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00018
	# line in RSA: <hmonth> <hday> <htime> <hsaddr> CISE_<messageid> <hyear>-<hmonth>-<hday> <hhour>:<hmin>:<hsec>.<hfld7> <hfld8> <hfld9> <hfld10> <hseverity> <hfld11>: <hevent_description>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hsaddr} CISE_%{messageid} %{hyear}-%{hmonth}-%{hday} %{hhour}:%{hmin}:%{hsec}.%{hfld7} %{hfld8} %{hfld9} %{hfld10} %{hseverity} %{hfld11}: %{hevent_description}, %{message}" }
			id => "header-00018"
			add_field => {
				"[rsa][header][id]" => "00018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <hmonth> <hday> <htime> CISE_<messageid> <hseverity>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} CISE_%{messageid} %{hseverity}: %{message}" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <hmonth> <hday> <htime> <hsaddr> CisACS_<messageid> <hinfo> <hfld5> <hfld6> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hsaddr} CisACS_%{messageid} %{hinfo} %{hfld5} %{hfld6} %{message}" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <hmonth> <hday> <htime> <hsaddr> CISE_<messageid> <hinfo> <hfld5> <hfld6> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hsaddr} CISE_%{messageid} %{hinfo} %{hfld5} %{hfld6} %{message}" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <hmonth> <hday> <htime> <hostname> [<messageid>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hostname} [%{messageid}]: %{message}" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <hmonth> <hday> <htime> <hostname> <messageid>[<fld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ciscosecureacsmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "CISE_Administrative_and_Operational_Audit" {
		# MESSAGE CISE_Administrative_and_Operational_Audit:01
		# line in RSA: SGA:Device Password=<fld1>\\SGA:CoA Enable Type:String(ENABLE_USING_CLI|ENABLE_USING_COA|DISABLE_ALL)=<fld2>\\Authentication Key=<fld3>\\Encryption Key=<fld4>\\Enable Key Wrap=<fld5>\\SNMP:Username=<fld21>\\SNMP:Privacy Password=<fld6>\\SNMP:Authentication Protocol=<protocol>\\Network Device Groups=<group>\\SNMP:Is Link Trap Query=<fld7>\\Description=<location_desc>\\SNMP:Security Level=<fld8>\\Authentication:Shared Secret=<fld9>\\Authentication:Protocol=<protocol>\\SNMP:Authentication Password=<fld10>\\Software Version=<version>\\Name=<username>\\SNMP:Is MAC Trap Query=<fld11>\\Deployment:Enable Mode Password=<fld12>\\IP Address=<saddr>/<fld13>\\Model Name=<device><fld14>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SGA:Device Password=%{fld1}\\SGA:CoA Enable Type:String(ENABLE_USING_CLI|ENABLE_USING_COA|DISABLE_ALL)=%{fld2}\\Authentication Key=%{fld3}\\Encryption Key=%{fld4}\\Enable Key Wrap=%{fld5}\\SNMP:Username=%{fld21}\\SNMP:Privacy Password=%{fld6}\\SNMP:Authentication Protocol=%{protocol}\\Network Device Groups=%{group}\\SNMP:Is Link Trap Query=%{fld7}\\Description=%{location_desc}\\SNMP:Security Level=%{fld8}\\Authentication:Shared Secret=%{fld9}\\Authentication:Protocol=%{protocol}\\SNMP:Authentication Password=%{fld10}\\Software Version=%{version}\\Name=%{username}\\SNMP:Is MAC Trap Query=%{fld11}\\Deployment:Enable Mode Password=%{fld12}\\IP Address=%{saddr}/%{fld13}\\Model Name=%{device}%{fld14}" }
				id => "message-CISE_Administrative_and_Operational_Audit:01"
				add_field => {
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:01"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:02
		# line in RSA: Acct-Authentic=<au>\, Acct-Session-Time=<duration>\, Acct-Input-Packets=<fld9>\, Acct-Output-Packets=<fld10>\, NAS-Port-Type=<context>\, NAS-Port-Id=<interface>\, undefined-151=<bq>\, cisco-av-pair=<info>\, cisco-av-pair=<fld11>\,,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Acct-Authentic=%{au}\, Acct-Session-Time=%{duration}\, Acct-Input-Packets=%{fld9}\, Acct-Output-Packets=%{fld10}\, NAS-Port-Type=%{context}\, NAS-Port-Id=%{interface}\, undefined-151=%{bq}\, cisco-av-pair=%{info}\, cisco-av-pair=%{fld11}\,," }
				id => "message-CISE_Administrative_and_Operational_Audit:02"
				add_field => {
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:02"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:03
		# line in RSA: Response=\{{UserName=<username>\; User-Name=<username>\; State=<event_state>\; Class=<fld14>\; cisco-av-pair=<context>\; cisco-av-pair=<fld15>\; LicenseTypes=<fld16>\; \}\,,
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Response=\\\{UserName=(?<username>[^\\]*)\\;[\s]+User\-Name=(?<username>[^\\]*)\\;[\s]+State=(?<event_state>[^\\]*)\\;[\s]+Class=(?<fld14>[^\\]*)\\;[\s]+cisco\-av\-pair=(?<context>[^\\]*)\\;[\s]+cisco\-av\-pair=(?<fld15>[^\\]*)\\;[\s]+LicenseTypes=(?<fld16>[^\\]*)\\;[\s]+\\\}\\,,$" }
				id => "message-CISE_Administrative_and_Operational_Audit:03"
				add_field => {
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:03"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:04
		# line in RSA: Step=<fld5>\, NetworkDeviceGroups=<fld6>\, NetworkDeviceGroups=<fld7>\, EapAuthentication=<bm>\,,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Step=%{fld5}\, NetworkDeviceGroups=%{fld6}\, NetworkDeviceGroups=%{fld7}\, EapAuthentication=%{bm}\,," }
				id => "message-CISE_Administrative_and_Operational_Audit:04"
				add_field => {
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:04"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:04"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit
		# line in RSA: Guest.EmailAddress=<mail_id>,AdminIPAddress=<saddr>,Guest.AcceptUsePolicy=<fld3>,Guest.EnableFlag=<fld4>,Guest.TimeZone=<timezone>,Guest.CountryCode=<location_country>, ObjectType=<obj_type>, ObjectName=<obj_name>, Component=<fld8>, ObjectInternalID=<fld9>, ConfigChangeData=<fld30>,5=<aa>,6=<ab>,7=<ac>,8=<ad>,9=<ae>,10=<af>,11=<ag>,18=<ah>,19=<ai>,20=<aj>,21=<ak>,22=<al>,23=<am>,24=<an>,25=<ao>,26=<ap>,29=<aq>,30=<ar>,31=<as>,32=<at>,33=<au>,34=<av>,35=<aw>,36=<ax>,37=<ay>,38=<az>,39=<ba>,50=<bb>,51=<bc>,52=<bd>,53=<be>,54=<bf>,55=<bg>,16=<bh>,17=<bi>,56=<bj>,57=<bk>,73=<bl>,75=<bm>,76=<bn>,77=<bo>,78=<bp>,79=<bq>,80=<br>,81=<bs>,92=<bt>,93=<bu>,94=<bv>,95=<bw>,96=<bx>,97=<by>,98=<bz>,OriginalUserName=<c_username>,NetworkDeviceProfileName=<fld1>,NetworkDeviceProfileId=<fld2>,IsThirdPartyDeviceFlow=<fld3>,RadiusFlowType=<fld4>,SSID=<ssid>,AcsSessionID=<sessionid>, NetworkDeviceGroups=<fld7>, AuthorizationPolicyMatchedRule=<rulename>, UserType=<fld10>, CPMSessionID=<sessionid>, EndpointMacAddress=<dmacaddr>, PostureAssessmentStatus=<fld11>, EapAuthentication=<fld12>, Serial Number=<serial_number>, Subject - Common Name=<fld14>, Acct-Terminate-Cause=<action>, Acct-Session-Time=<duration>, Acct-Input-Packets=<fld>, Acct-Output-Packets=<fld>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>, undefined-151=<fld>, cisco-av-pair=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Guest.EmailAddress=%{mail_id},AdminIPAddress=%{saddr},Guest.AcceptUsePolicy=%{fld3},Guest.EnableFlag=%{fld4},Guest.TimeZone=%{timezone},Guest.CountryCode=%{location_country}, ObjectType=%{obj_type}, ObjectName=%{obj_name}, Component=%{fld8}, ObjectInternalID=%{fld9}, ConfigChangeData=%{fld30},5=%{aa},6=%{ab},7=%{ac},8=%{ad},9=%{ae},10=%{af},11=%{ag},18=%{ah},19=%{ai},20=%{aj},21=%{ak},22=%{al},23=%{am},24=%{an},25=%{ao},26=%{ap},29=%{aq},30=%{ar},31=%{as},32=%{at},33=%{au},34=%{av},35=%{aw},36=%{ax},37=%{ay},38=%{az},39=%{ba},50=%{bb},51=%{bc},52=%{bd},53=%{be},54=%{bf},55=%{bg},16=%{bh},17=%{bi},56=%{bj},57=%{bk},73=%{bl},75=%{bm},76=%{bn},77=%{bo},78=%{bp},79=%{bq},80=%{br},81=%{bs},92=%{bt},93=%{bu},94=%{bv},95=%{bw},96=%{bx},97=%{by},98=%{bz},OriginalUserName=%{c_username},NetworkDeviceProfileName=%{fld1},NetworkDeviceProfileId=%{fld2},IsThirdPartyDeviceFlow=%{fld3},RadiusFlowType=%{fld4},SSID=%{ssid},AcsSessionID=%{sessionid}, NetworkDeviceGroups=%{fld7}, AuthorizationPolicyMatchedRule=%{rulename}, UserType=%{fld10}, CPMSessionID=%{sessionid}, EndpointMacAddress=%{dmacaddr}, PostureAssessmentStatus=%{fld11}, EapAuthentication=%{fld12}, Serial Number=%{serial_number}, Subject - Common Name=%{fld14}, Acct-Terminate-Cause=%{action}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{fld}, Acct-Output-Packets=%{fld}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface}, undefined-151=%{fld}, cisco-av-pair=%{info}" }
				id => "message-CISE_Administrative_and_Operational_Audit"
				add_field => {
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Administrative_and_Operational_Audit"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:06
		# line in RSA: <fld0>\\ Attribute:IdentityGroupID<space>value:<fld1>\\ Attribute:LastNmapScanTime<space>value:<fld2>\\ Attribute:Location<space>value:<location_desc>\\ Attribute:MACAddress<space>value:<macaddr>\\ Attribute:MDMServerID<space>value:<fld3>\\ Attribute:MatchedPolicy<space>value:<fld4>\\ Attribute:MatchedPolicyID<space>value:<fld5>\\ Attribute:MessageCode<space>value:<fld6>\\ Attribute:Model Name<space>value:<fld7>\\ Attribute:NAS-IP-Address<space>value:<stransaddr>\\ Attribute:NAS-Port<space>value:<fld8>\\ Attribute:NAS-Port-Id<space>value:<interface>\\ Attribute:NAS-Port-Type<space>value:<context>\\ Attribute:Network Device Profile<space>value:<fld10>\\ Attribute:NetworkDeviceGroups<space>value:<fld11>, Device Type#All Device Types#USB_Wired_Monitor\\ Attribute:NetworkDeviceName<space>value:<node>\\ Attribute:NmapScanCount<space>value:<fld16>\\ Attribute:NmapSubnetScanID<space>value:<fld17>\\ Attribute:OUI<space>value:<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0}\\ Attribute:IdentityGroupID%{space}value:%{fld1}\\ Attribute:LastNmapScanTime%{space}value:%{fld2}\\ Attribute:Location%{space}value:%{location_desc}\\ Attribute:MACAddress%{space}value:%{macaddr}\\ Attribute:MDMServerID%{space}value:%{fld3}\\ Attribute:MatchedPolicy%{space}value:%{fld4}\\ Attribute:MatchedPolicyID%{space}value:%{fld5}\\ Attribute:MessageCode%{space}value:%{fld6}\\ Attribute:Model Name%{space}value:%{fld7}\\ Attribute:NAS-IP-Address%{space}value:%{stransaddr}\\ Attribute:NAS-Port%{space}value:%{fld8}\\ Attribute:NAS-Port-Id%{space}value:%{interface}\\ Attribute:NAS-Port-Type%{space}value:%{context}\\ Attribute:Network Device Profile%{space}value:%{fld10}\\ Attribute:NetworkDeviceGroups%{space}value:%{fld11}, Device Type#All Device Types#USB_Wired_Monitor\\ Attribute:NetworkDeviceName%{space}value:%{node}\\ Attribute:NmapScanCount%{space}value:%{fld16}\\ Attribute:NmapSubnetScanID%{space}value:%{fld17}\\ Attribute:OUI%{space}value:%{fld13}" }
				id => "message-CISE_Administrative_and_Operational_Audit:06"
				add_field => {
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:06"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:06"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:07
		# line in RSA: Attribute:MACAddress<space>value:<macaddr>\\ Attribute:MDMServerID<space>value:<fld1>\\ Attribute:MatchedPolicy<space>value:<fld2>\\ Attribute:MatchedPolicyID<space>value:<fld3>\\ Attribute:MessageCode<space>value:<fld4>\\ Attribute:Model Name<space>value:<fld5>\\ Attribute:NADAddress<space>value:<saddr>\\ Attribute:NAS-IP-Address<space>value:<stransaddr>\\ Attribute:NAS-Port<space>value:<fld6>\\ Attribute:NAS-Port-Id<space>value:<interface>\\ Attribute:NAS-Port-Type<space>value:<context>\\ Attribute:Network Device Profile<space>value:<fld8>\\ Attribute:NetworkDeviceGroups<space>value:<fld9>, Device Type#All Device Types#USB_Wired_Monitor\\ Attribute:NetworkDeviceName<space>value:<node>\\ Attribute:NetworkDeviceProfileId<space>value:<fld10>\\ Attribute:NetworkDeviceProfileName<space>value:<fld11>\\ Attribute:NmapScanCount<space>value:<fld12>\\ Attribute:NmapSubnetScanID<space>value:<fld21>\\ Attribute:OUI<space>value:<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Attribute:MACAddress%{space}value:%{macaddr}\\ Attribute:MDMServerID%{space}value:%{fld1}\\ Attribute:MatchedPolicy%{space}value:%{fld2}\\ Attribute:MatchedPolicyID%{space}value:%{fld3}\\ Attribute:MessageCode%{space}value:%{fld4}\\ Attribute:Model Name%{space}value:%{fld5}\\ Attribute:NADAddress%{space}value:%{saddr}\\ Attribute:NAS-IP-Address%{space}value:%{stransaddr}\\ Attribute:NAS-Port%{space}value:%{fld6}\\ Attribute:NAS-Port-Id%{space}value:%{interface}\\ Attribute:NAS-Port-Type%{space}value:%{context}\\ Attribute:Network Device Profile%{space}value:%{fld8}\\ Attribute:NetworkDeviceGroups%{space}value:%{fld9}, Device Type#All Device Types#USB_Wired_Monitor\\ Attribute:NetworkDeviceName%{space}value:%{node}\\ Attribute:NetworkDeviceProfileId%{space}value:%{fld10}\\ Attribute:NetworkDeviceProfileName%{space}value:%{fld11}\\ Attribute:NmapScanCount%{space}value:%{fld12}\\ Attribute:NmapSubnetScanID%{space}value:%{fld21}\\ Attribute:OUI%{space}value:%{fld13}" }
				id => "message-CISE_Administrative_and_Operational_Audit:07"
				add_field => {
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:07"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:07"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:08
		# line in RSA: <fld0>\\ Attribute:TimeToProfile<space>value:<fld1>\\ Attribute:Total Certainty Factor<space>value:<fld2>\\ Attribute:UpdateTime<space>value:<fld3>\\ Attribute:UseCase<space>value:<fld4>\\ Attribute:User-Name<space>value:<username>\\ Attribute:UserName<space>value:<fld29>\\ Attribute:UserType<space>value:<fld5>\\ Attribute:allowEasyWiredSession<space>value:<fld6>\\ Attribute:cdpCacheAddress<space>value:<fld7>\\ Attribute:cdpCacheCapabilities<space>value:<fld8>\\ Attribute:cdpCacheDeviceId<space>value:<fld9>\\ Attribute:cdpCachePlatform<space>value:<fld10>\\ Attribute:cdpCacheVersion<space>value:<fld11>\\ Attribute:cdpUndefined15<space>value:<fld12>\\ Attribute:cdpUndefined25<space>value:<fld13>\\ Attribute:dhcp-class-identifier<space>value:<fld21><fld14>\\ Attribute:dhcp-client-identifier<space>value:<fld22>\\ Attribute:dhcp-parameter-request-list<space>value:<fld23>\<fld15> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0}\\ Attribute:TimeToProfile%{space}value:%{fld1}\\ Attribute:Total Certainty Factor%{space}value:%{fld2}\\ Attribute:UpdateTime%{space}value:%{fld3}\\ Attribute:UseCase%{space}value:%{fld4}\\ Attribute:User-Name%{space}value:%{username}\\ Attribute:UserName%{space}value:%{fld29}\\ Attribute:UserType%{space}value:%{fld5}\\ Attribute:allowEasyWiredSession%{space}value:%{fld6}\\ Attribute:cdpCacheAddress%{space}value:%{fld7}\\ Attribute:cdpCacheCapabilities%{space}value:%{fld8}\\ Attribute:cdpCacheDeviceId%{space}value:%{fld9}\\ Attribute:cdpCachePlatform%{space}value:%{fld10}\\ Attribute:cdpCacheVersion%{space}value:%{fld11}\\ Attribute:cdpUndefined15%{space}value:%{fld12}\\ Attribute:cdpUndefined25%{space}value:%{fld13}\\ Attribute:dhcp-class-identifier%{space}value:%{fld21}%{fld14}\\ Attribute:dhcp-client-identifier%{space}value:%{fld22}\\ Attribute:dhcp-parameter-request-list%{space}value:%{fld23}\%{fld15}" }
				id => "message-CISE_Administrative_and_Operational_Audit:08"
				add_field => {
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:08"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:09
		# line in RSA: <fld1>\, <fld2>\, <fld3>\, <fld4>\, <fld5>\\ Attribute:dhcp-requested-address<space>value:<fld22>\\ Attribute:dhcp-server-identifier<space>value:<fld27>\\ Attribute:dot1xAuthAuthControlledPortControl<space>value:<fld26>\\ Attribute:dot1xAuthAuthControlledPortStatus<space>value:<fld25>\\ Attribute:dot1xAuthSessionUserName<space>value:<fld6>\\ Attribute:host-name<space>value:<fld7>\\ Attribute:ifDescr<space>value:<fld24>\\ Attribute:ifIndex<space>value:<fld8>\\ Attribute:ifOperStatus<space>value:<fld28>\\ Attribute:ip<space>value:<saddr>\\ Attribute:lldpCacheCapabilities<space>value:<fld9>\\ Attribute:lldpCapabilitiesMapSupported<space>value:<fld10>Attribute:lldpChassisId<space>value:<fld11>\\ Attribute:lldpManAddress<space>value:<fld12>\\ Attribute:lldpPortDescription<space>value:<fld13>\\ Attribute:lldpPortId<space>value:<fld14>\\ Attribute:lldpSystemDescription<space>value:<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}\, %{fld2}\, %{fld3}\, %{fld4}\, %{fld5}\\ Attribute:dhcp-requested-address%{space}value:%{fld22}\\ Attribute:dhcp-server-identifier%{space}value:%{fld27}\\ Attribute:dot1xAuthAuthControlledPortControl%{space}value:%{fld26}\\ Attribute:dot1xAuthAuthControlledPortStatus%{space}value:%{fld25}\\ Attribute:dot1xAuthSessionUserName%{space}value:%{fld6}\\ Attribute:host-name%{space}value:%{fld7}\\ Attribute:ifDescr%{space}value:%{fld24}\\ Attribute:ifIndex%{space}value:%{fld8}\\ Attribute:ifOperStatus%{space}value:%{fld28}\\ Attribute:ip%{space}value:%{saddr}\\ Attribute:lldpCacheCapabilities%{space}value:%{fld9}\\ Attribute:lldpCapabilitiesMapSupported%{space}value:%{fld10}Attribute:lldpChassisId%{space}value:%{fld11}\\ Attribute:lldpManAddress%{space}value:%{fld12}\\ Attribute:lldpPortDescription%{space}value:%{fld13}\\ Attribute:lldpPortId%{space}value:%{fld14}\\ Attribute:lldpSystemDescription%{space}value:%{fld15}" }
				id => "message-CISE_Administrative_and_Operational_Audit:09"
				add_field => {
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:09"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:09"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Administrative_and_Operational_Audit:05
		# line in RSA: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-CISE_Administrative_and_Operational_Audit:05"
				add_field => {
					"[event][id]" => "CISE_Administrative_and_Operational_Audit:05"
					"[rsa][message][id1]" => "CISE_Administrative_and_Operational_Audit:05"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: ConfigVersionId=<fld1>, UserType=<fld2>, UserName=<username>, EmailAddress=<mail_id>, IpAddress=<saddr>, AuthenticationIdentityStore=<fld18>, PortalName=<fld19>, IdentityGroup=<group_object>, SponsorUser=<fld3>, PsnHostName=<hostname>, GuestUserName=<username>,GuestFirstname=<user_fname>, GuestLastname=<user_lname>, GuestEmailAddress=<mail_id>, GuestPhoneNumber=<phone_number>, GuestCompanyname=<fld9>, GuestAuthenticationIdentityStore=<fld10>, GuestType=<fld11>, GuestValidDays=<fld12>, GuestFromDate=<fld13>, GuestToDate=<fld14>, GuestLocation=<fld15>, GuestPersonVisited=<fld16>, GuestSSID=<ssid>, GuestStatus=<fld17>, UpdGuestEmailAddress=<email>, UpdGuestPhoneNumber=<phone_number>, UpdGuestCompanyname=<fld18>, UpdGuestAuthenticationIdentityStore=<fld19>, UpdGuestType=<fld20>, UpdGuestValidDays=<fld21>, UpdGuestFromDate=<fld22>, UpdGuestToDate=<fld23>, UpdGuestLocation=<location_city>, UpdGuestPersonVisited=<fld25>, UpdGuestReasonForVisit=<context>, UpdGuestSSID=<ssid>, UpdGuestStatus=<event_state>, UpdSponsorUser=<c_username>,
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "ConfigVersionId=%{fld1}, UserType=%{fld2}, UserName=%{username}, EmailAddress=%{mail_id}, IpAddress=%{saddr}, AuthenticationIdentityStore=%{fld18}, PortalName=%{fld19}, IdentityGroup=%{group_object}, SponsorUser=%{fld3}, PsnHostName=%{hostname}, GuestUserName=%{username},GuestFirstname=%{user_fname}, GuestLastname=%{user_lname}, GuestEmailAddress=%{mail_id}, GuestPhoneNumber=%{phone_number}, GuestCompanyname=%{fld9}, GuestAuthenticationIdentityStore=%{fld10}, GuestType=%{fld11}, GuestValidDays=%{fld12}, GuestFromDate=%{fld13}, GuestToDate=%{fld14}, GuestLocation=%{fld15}, GuestPersonVisited=%{fld16}, GuestSSID=%{ssid}, GuestStatus=%{fld17}, UpdGuestEmailAddress=%{email}, UpdGuestPhoneNumber=%{phone_number}, UpdGuestCompanyname=%{fld18}, UpdGuestAuthenticationIdentityStore=%{fld19}, UpdGuestType=%{fld20}, UpdGuestValidDays=%{fld21}, UpdGuestFromDate=%{fld22}, UpdGuestToDate=%{fld23}, UpdGuestLocation=%{location_city}, UpdGuestPersonVisited=%{fld25}, UpdGuestReasonForVisit=%{context}, UpdGuestSSID=%{ssid}, UpdGuestStatus=%{event_state}, UpdSponsorUser=%{c_username}," }
			id => "msgParserId10"
			add_field => {
				"hostname" => "%{hsaddr}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: ConfigVersionId=<fld99>, server=<hostname>, user-session-aging-time=<duration_string>, history-interval=<fld1>, NTLMv2=<fld2>,
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "ConfigVersionId=%{fld99}, server=%{hostname}, user-session-aging-time=%{duration_string}, history-interval=%{fld1}, NTLMv2=%{fld2}," }
			id => "msgParserId11"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, UserName=<username>, AuthenticationIdentityStore=<fld7>, SelectedAccessService=<service>, Response=<info>, AccountName=<username>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, UserName=%{username}, AuthenticationIdentityStore=%{fld7}, SelectedAccessService=%{service}, Response=%{info}, AccountName=%{username}" }
			id => "msgParserId12"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, UserName=<username>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, WorkflowCurrentIDStoreIndex=<fld45>, WorkflowSequenceType=<fld48>, CurrentIDStoreName=<fld19>, WorkflowIfUserNotFound=<fld44>, WorkflowIfProcessError=<fld37>, WorkflowIfAuthenticationFailed=<fld42>, Response=<info>, Device IP Address=<hostip>, AuditSessionId=<sessionid>, EapTunnel=<ev>, EapAuthentication=<ew>, DetailedInfo=<info>,Common Name=<ca>,Subject Alternative Name=<cb>,Subject=<cc>,Subject Alternative Name - DNS=<cd>,Issuer=<ce>,DC=<cf>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, UserName=%{username}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, WorkflowCurrentIDStoreIndex=%{fld45}, WorkflowSequenceType=%{fld48}, CurrentIDStoreName=%{fld19}, WorkflowIfUserNotFound=%{fld44}, WorkflowIfProcessError=%{fld37}, WorkflowIfAuthenticationFailed=%{fld42}, Response=%{info}, Device IP Address=%{hostip}, AuditSessionId=%{sessionid}, EapTunnel=%{ev}, EapAuthentication=%{ew}, DetailedInfo=%{info},Common Name=%{ca},Subject Alternative Name=%{cb},Subject=%{cc},Subject Alternative Name - DNS=%{cd},Issuer=%{ce},DC=%{cf}" }
			id => "msgParserId13"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Administrative_and_Operational_Audit" {
		# MESSAGE Administrative_and_Operational_Audit:01
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, AdminInterface=<logon_type>, AdminIPAddress=<saddr>, AdminSession=<sessionid>, AdminName=<administrator>, ConfigChangeData=<fld30>, ObjectType=<obj_type>, ObjectName=<obj_name>, ObjectId=<fld36>, inLocalMode=<fld13>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, AdminInterface=%{logon_type}, AdminIPAddress=%{saddr}, AdminSession=%{sessionid}, AdminName=%{administrator}, ConfigChangeData=%{fld30}, ObjectType=%{obj_type}, ObjectName=%{obj_name}, ObjectId=%{fld36}, inLocalMode=%{fld13}," }
				id => "message-Administrative_and_Operational_Audit:01"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Administrative_and_Operational_Audit:01"
					"[rsa][message][id1]" => "Administrative_and_Operational_Audit:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Administrative_and_Operational_Audit:02
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, ConfigChangeData=<fld30>, 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, ConfigChangeData=%{fld30}," }
				id => "message-Administrative_and_Operational_Audit:02"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Administrative_and_Operational_Audit:02"
					"[rsa][message][id1]" => "Administrative_and_Operational_Audit:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Administrative_and_Operational_Audit:03
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, AdminInterface=<logon_type>, AdminIPAddress=<saddr>, AdminSession=<sessionid>, AdminName=<administrator>, inLocalMode=<fld13>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, AdminInterface=%{logon_type}, AdminIPAddress=%{saddr}, AdminSession=%{sessionid}, AdminName=%{administrator}, inLocalMode=%{fld13}," }
				id => "message-Administrative_and_Operational_Audit:03"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Administrative_and_Operational_Audit:03"
					"[rsa][message][id1]" => "Administrative_and_Operational_Audit:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Administrative_and_Operational_Audit
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, AdminInterface=<logon_type>, AdminIPAddress=<saddr>, AdminSession=<sessionid>, AdminName=<administrator>, inLocalMode=<fld13>, ObjectType=<obj_type>, ObjectName=<obj_name>, ObjectId=<fld36>, ConfigChangeData=<fld30>, UserAdminFlag=<fld41>, AccountName=<username>, AuditPasswordType=<fld43>, IdentityStoreName=<fld44>, ChangePasswordMethod=<fld45>, OperatorName=<fld46>, OperationMessageText=<fld47>, CredentialPassword=<fld48>, Description=<event_description>, nsfUserTypeRole=<fld49>, Component=<fld50>, ObjectInternalID=<fld52>, EmailAddress=<mail_id>, Lastname=<user_lname>, Firstname=<user_fname>, AllowPasswordChangeAfterLogin=<fld56>, Guest.Suspended=<fld57>,Guest.ProvisionTime=<fld58>,Guest.IdentityGroup=<fld59>,Guest.Lastname=<user_lname>,Guest.AccountTimeRemaining=<fld11>,Guest.TimeProfile=<fld2>,Guest.OptionalData2=<fld3>,Guest.OptionalData3=<fld4>,Guest.SponsorGroup=<fld5>,Guest.Firstname=<user_fname>,Guest.AccountStart=<fld67>,Guest.OptionalData1=<fld68>,Guest.OptionalData4=<fld69>,Guest.FirstLoginProfile=<fld70>,Guest.OptionalData5=<fld6>,Guest.SponsorUser=<fld7>,Guest.AccountExpiration=<fld8>,Guest.PhoneNumber=<phone_number>,Guest.Company=<fld10>,Guest.CredentialPassword=<fld76>,Guest.Username=<username>,Guest.Sponsor=<fld77>,'PEAP Inner Methods'=<fld79>,'EAP-FAST Inner Methods'=<fld78>,RequestResponseType=<fld80>,FailureFlag=<fld81>, -Dcom.sun.management.jmxremote.ssl=<fld36>, UserName=<username>, RecoveryAccount=<fld12>, AdministratorClientIP=<daddr>, AuthenticationIdentityStore=<fld15>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, Step=<fld17>, Response=<info>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, ExternalGroups=<fld14>, IdentityAccessRestricted=<fld23>, 'Change Password on Next Login'=<pw>,6=<aa>, 7=<ab>, 10=<ac>, 15=<ad>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, AdminInterface=%{logon_type}, AdminIPAddress=%{saddr}, AdminSession=%{sessionid}, AdminName=%{administrator}, inLocalMode=%{fld13}, ObjectType=%{obj_type}, ObjectName=%{obj_name}, ObjectId=%{fld36}, ConfigChangeData=%{fld30}, UserAdminFlag=%{fld41}, AccountName=%{username}, AuditPasswordType=%{fld43}, IdentityStoreName=%{fld44}, ChangePasswordMethod=%{fld45}, OperatorName=%{fld46}, OperationMessageText=%{fld47}, CredentialPassword=%{fld48}, Description=%{event_description}, nsfUserTypeRole=%{fld49}, Component=%{fld50}, ObjectInternalID=%{fld52}, EmailAddress=%{mail_id}, Lastname=%{user_lname}, Firstname=%{user_fname}, AllowPasswordChangeAfterLogin=%{fld56}, Guest.Suspended=%{fld57},Guest.ProvisionTime=%{fld58},Guest.IdentityGroup=%{fld59},Guest.Lastname=%{user_lname},Guest.AccountTimeRemaining=%{fld11},Guest.TimeProfile=%{fld2},Guest.OptionalData2=%{fld3},Guest.OptionalData3=%{fld4},Guest.SponsorGroup=%{fld5},Guest.Firstname=%{user_fname},Guest.AccountStart=%{fld67},Guest.OptionalData1=%{fld68},Guest.OptionalData4=%{fld69},Guest.FirstLoginProfile=%{fld70},Guest.OptionalData5=%{fld6},Guest.SponsorUser=%{fld7},Guest.AccountExpiration=%{fld8},Guest.PhoneNumber=%{phone_number},Guest.Company=%{fld10},Guest.CredentialPassword=%{fld76},Guest.Username=%{username},Guest.Sponsor=%{fld77},'PEAP Inner Methods'=%{fld79},'EAP-FAST Inner Methods'=%{fld78},RequestResponseType=%{fld80},FailureFlag=%{fld81}, -Dcom.sun.management.jmxremote.ssl=%{fld36}, UserName=%{username}, RecoveryAccount=%{fld12}, AdministratorClientIP=%{daddr}, AuthenticationIdentityStore=%{fld15}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, Step=%{fld17}, Response=%{info}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, ExternalGroups=%{fld14}, IdentityAccessRestricted=%{fld23}, 'Change Password on Next Login'=%{pw},6=%{aa}, 7=%{ab}, 10=%{ac}, 15=%{ad}" }
				id => "message-Administrative_and_Operational_Audit"
				add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Administrative_and_Operational_Audit"
					"[rsa][message][id1]" => "Administrative_and_Operational_Audit"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>,
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}," }
			id => "msgParserId18"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Failed_Attempts" {
		# MESSAGE Failed_Attempts:01
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, Device Port=<network_port>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, FailureReason=<result>, Step=<fld5>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, NetworkDeviceName=<node>, NetworkDeviceGroups=<ac>, Response=<info>, CmdSet=<action>, Authen-Method=<authmethod>, Service-Argument=<fld45>, SelectedAuthenticationIdentityStores=<ap>, RadiusPacketType=<ab>, AuthorizationPolicyMatchedRule=<rulename>, User-Name=<k>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Service-Type=<service>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>, cisco-av-pair=<context>, Location=<location_desc>, Framed-MTU=<fld12>, EAP-Key-Name=<fld11>, Framed-IP-Address=<saddr>, State=<event_state>, Class=<fld2>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>,Tunnel-Client-Endpoint=<am>,CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=<fld31>,IdentityGroup=<group_object>, IsEndpointInRejectMode=<ai>, ServiceSelectionMatchedRule=<an>, SelectedShellProfile=<bn>,  SelectedCommandSet=<bq>, MatchedCommandSet=<br>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, VendorSpecific=<pp>, Framed-Protocol=<protocol>, DetailedInfo=<info>, UseCase=<kb>, Protocol-Argument=<pn>,undefined-151=<pq>, CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld60>, CVPN3000/ASA/PIX7x-Client-Type=<fld61>, ExternalErrorCode=<resultcode>, MS-CHAP2-Response=<fld8>, Acct-Terminate-Cause=<action> Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>,attribute-89=<fld14>, attribute-131=<fld15>, Acct-Multi-Session-Id=<sessionid>, attribute-77=<fld16>, attribute-186=<fld17>, attribute-187=<fld18>, AD-Error-Details=<result>, StepData=<fld>, AD-Domain=<domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, Device Port=%{network_port}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{fld5}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, NetworkDeviceName=%{node}, NetworkDeviceGroups=%{ac}, Response=%{info}, CmdSet=%{action}, Authen-Method=%{authmethod}, Service-Argument=%{fld45}, SelectedAuthenticationIdentityStores=%{ap}, RadiusPacketType=%{ab}, AuthorizationPolicyMatchedRule=%{rulename}, User-Name=%{k}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Service-Type=%{service}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface}, cisco-av-pair=%{context}, Location=%{location_desc}, Framed-MTU=%{fld12}, EAP-Key-Name=%{fld11}, Framed-IP-Address=%{saddr}, State=%{event_state}, Class=%{fld2}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg},Tunnel-Client-Endpoint=%{am},CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=%{fld31},IdentityGroup=%{group_object}, IsEndpointInRejectMode=%{ai}, ServiceSelectionMatchedRule=%{an}, SelectedShellProfile=%{bn},  SelectedCommandSet=%{bq}, MatchedCommandSet=%{br}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, VendorSpecific=%{pp}, Framed-Protocol=%{protocol}, DetailedInfo=%{info}, UseCase=%{kb}, Protocol-Argument=%{pn},undefined-151=%{pq}, CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld60}, CVPN3000/ASA/PIX7x-Client-Type=%{fld61}, ExternalErrorCode=%{resultcode}, MS-CHAP2-Response=%{fld8}, Acct-Terminate-Cause=%{action} Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs},attribute-89=%{fld14}, attribute-131=%{fld15}, Acct-Multi-Session-Id=%{sessionid}, attribute-77=%{fld16}, attribute-186=%{fld17}, attribute-187=%{fld18}, AD-Error-Details=%{result}, StepData=%{fld}, AD-Domain=%{domain}" }
				id => "message-Failed_Attempts:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{k}"
					"[event][id]" => "Failed_Attempts:01"
					"[rsa][message][id1]" => "Failed_Attempts:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Failed_Attempts
		# line in RSA: ACSVersion=<a>, ConfigVersionId=<aa>, Device IP Address=<hostip>, Device Port=<network_port>, RadiusPacketType=<ab>, UserName=<username>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, NetworkDeviceGroups=<ac>, Authen-Type=<ad>, Service-Type=<service>, Protocol=<protocol>, RequestLatency=<i>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<m>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<aj>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, ExternalErrorCode=<resultcode>, Tunnel-Client-Endpoint=<am>, MS-CHAP2-Response=<an>, IdentityGroup=<group_object>, FailureReason=<result>, Step=<ao>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, IdentityPolicyMatchedRule=<rule>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Response=<info>, Service=<av>, User=<username>, Port=<aw>, Remote-Address=<saddr>, CmdSet=<action>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<ay>, QueryIdentityStores=<az>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<bb>, ExternalGroups=<bc>, SelectedCommandSet=<bd>, Service-Argument=<be>, Authen-Method=<authmethod>, UserIdentityGroup=<group>, SelectedShellProfile=<bf>, NAS-Identifier=<application>, AcsChangePasswordMethod=<bh>, PrivilegeLevel=<privilege>, Protocol-Argument=<bi>, GroupMappingPolicyMatchedRule=<bj>, EapTunnel=<bk>, DetailedInfo=<info>, EapAuthentication=<bm>, Framed-MTU=<bn>, State=<event_state>, Called-Station-ID=<calling_to>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, memberOf=<bu>, OU=<bv>, DC=<bw>, SelectedAuthorizationProfiles=<bx>, OpenSSLErrorStack=<cert_error>, OpenSSLErrorMessage=<result>, GroupsOrAttributesProcessFailure=<ca>, UseCase=<fld12>, attribute-89=<fld14>, attribute-131=<fld15>, RadiusFlowType=<fld6>, NetworkDeviceProfileId=<fld4>,IsThirdPartyDeviceFlow=<fld5>, NetworkDeviceProfileName =<fld7>, SSID=<ssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{a}, ConfigVersionId=%{aa}, Device IP Address=%{hostip}, Device Port=%{network_port}, RadiusPacketType=%{ab}, UserName=%{username}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, NetworkDeviceGroups=%{ac}, Authen-Type=%{ad}, Service-Type=%{service}, Protocol=%{protocol}, RequestLatency=%{i}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{m}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{aj}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, ExternalErrorCode=%{resultcode}, Tunnel-Client-Endpoint=%{am}, MS-CHAP2-Response=%{an}, IdentityGroup=%{group_object}, FailureReason=%{result}, Step=%{ao}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, IdentityPolicyMatchedRule=%{rule}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Response=%{info}, Service=%{av}, User=%{username}, Port=%{aw}, Remote-Address=%{saddr}, CmdSet=%{action}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{ay}, QueryIdentityStores=%{az}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{bb}, ExternalGroups=%{bc}, SelectedCommandSet=%{bd}, Service-Argument=%{be}, Authen-Method=%{authmethod}, UserIdentityGroup=%{group}, SelectedShellProfile=%{bf}, NAS-Identifier=%{application}, AcsChangePasswordMethod=%{bh}, PrivilegeLevel=%{privilege}, Protocol-Argument=%{bi}, GroupMappingPolicyMatchedRule=%{bj}, EapTunnel=%{bk}, DetailedInfo=%{info}, EapAuthentication=%{bm}, Framed-MTU=%{bn}, State=%{event_state}, Called-Station-ID=%{calling_to}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, memberOf=%{bu}, OU=%{bv}, DC=%{bw}, SelectedAuthorizationProfiles=%{bx}, OpenSSLErrorStack=%{cert_error}, OpenSSLErrorMessage=%{result}, GroupsOrAttributesProcessFailure=%{ca}, UseCase=%{fld12}, attribute-89=%{fld14}, attribute-131=%{fld15}, RadiusFlowType=%{fld6}, NetworkDeviceProfileId=%{fld4},IsThirdPartyDeviceFlow=%{fld5}, NetworkDeviceProfileName =%{fld7}, SSID=%{ssid}" }
				id => "message-Failed_Attempts"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"version" => "%{a}"
					"[event][id]" => "Failed_Attempts"
					"[rsa][message][id1]" => "Failed_Attempts"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Failed_Attempts:02
		# line in RSA: ACSVersion=<a>, ConfigVersionId=<aa>, Device IP Address=<hostip>, Device Port=<network_port>, RadiusPacketType=<ab>, UserName=<username>, Service-Type=<service>, Protocol=<protocol>, RequestLatency=<i>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, AcsSessionID=<sessionid>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, IdentityGroup=<group_object>, NAS-Identifier=<application>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, SelectedAuthorizationProfiles=<bx>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, UseCase=<fld12>, Framed-MTU=<fld14>, Called-Station-ID=<calling_to>, Tunnel-Type=<fld37>, FailureReason=<result>, Step=<pp>, State=<event_state>,  attribute-89=<pl>, attribute-131=<lo>, cisco-av-pair=<li>, ExternalGroups=<ay>, sAMAccountName=<by>, distinguishedName=<cy>, OU=<dy>, DC=<ey>, IdentityAccessRestricted=<fy>, Response=<info>, displayName=<hy>, givenName=<iy>, department=<jy>, memberOf=<ky>, CN=<ly>, AuthenticationIdentityStore=<my>, ADDomain=<domain>, EapTunnel=<ik>, EapAuthentication=<il>, Infoblox-version=<pl>, Infoblox-Product-Name=<po>, SelectedAuthenticationIdentityStores=<sw>,  NetworkDeviceName=<node>, NetworkDeviceGroups=<sd>,undefined-89=<sg>,undefined-131=<a>,IsEndpointInRejectMode=<a>,DetailedInfo=<info>,OriginalUserName=<c_username>, Acct-Session-Id=<sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{a}, ConfigVersionId=%{aa}, Device IP Address=%{hostip}, Device Port=%{network_port}, RadiusPacketType=%{ab}, UserName=%{username}, Service-Type=%{service}, Protocol=%{protocol}, RequestLatency=%{i}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, AcsSessionID=%{sessionid}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, IdentityGroup=%{group_object}, NAS-Identifier=%{application}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, SelectedAuthorizationProfiles=%{bx}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, UseCase=%{fld12}, Framed-MTU=%{fld14}, Called-Station-ID=%{calling_to}, Tunnel-Type=%{fld37}, FailureReason=%{result}, Step=%{pp}, State=%{event_state},  attribute-89=%{pl}, attribute-131=%{lo}, cisco-av-pair=%{li}, ExternalGroups=%{ay}, sAMAccountName=%{by}, distinguishedName=%{cy}, OU=%{dy}, DC=%{ey}, IdentityAccessRestricted=%{fy}, Response=%{info}, displayName=%{hy}, givenName=%{iy}, department=%{jy}, memberOf=%{ky}, CN=%{ly}, AuthenticationIdentityStore=%{my}, ADDomain=%{domain}, EapTunnel=%{ik}, EapAuthentication=%{il}, Infoblox-version=%{pl}, Infoblox-Product-Name=%{po}, SelectedAuthenticationIdentityStores=%{sw},  NetworkDeviceName=%{node}, NetworkDeviceGroups=%{sd},undefined-89=%{sg},undefined-131=%{a},IsEndpointInRejectMode=%{a},DetailedInfo=%{info},OriginalUserName=%{c_username}, Acct-Session-Id=%{sessionid}" }
				id => "message-Failed_Attempts:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"version" => "%{a}"
					"[event][id]" => "Failed_Attempts:02"
					"[rsa][message][id1]" => "Failed_Attempts:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Failed_Attempts:03
		# line in RSA: ConfigVersionId=<aa>, Device IP Address=<hostip>, Device Port=<network_port>, RadiusPacketType=<ab>, UserName=<d>, Protocol=<protocol>, RequestLatency=<i>, NetworkDeviceName=<node>, User-Name=<k>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Framed-IP-Address=<saddr>, Class=<fld2>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, cisco-av-pair=<m>, AcsSessionID=<sessionid>, SelectedAccessService=<service>, FailureReason=<result>, Step=<ao>, NetworkDeviceGroups=<ac>, CPMSessionID=<sessionid>, EndPointMACAddress=<dmacaddr>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Location=<location_desc>, Device Type=<obj_type>, Phases=<cp>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, IdentityPolicyMatchedRule=<rule>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, Response=<info>, EndPointMatchedProfile=<fld11>, EapAuthentication=<bm>, EapTunnel=<bk>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, IsEndpointInRejectMode=<ai>, ACSVersion=<a>, Event-Timestamp=<event_time_string>, Acct-Terminate-Cause=<action>, DetailedInfo=<info>, attribute-77=<pi>, MS-RAS-Vendor=<ki>, AuthenticationMethod=<authmethod>, ADDomain=<domain>, ExternalGroups=<my>, sAMAccountName=<ky>, Acct-Multi-Session-Id=<sessionid>, Acct-Link-Count=<pn>,StepData=<yi>, StepLatency=<ki>,Service-Type=<service>,attribute-52=<fld61>,attribute-53=<fld62>,Framed-MTU=<fld10>,EAP-Key-Name=<cf>,OriginalUserName=<c_username>,AuthenticationIdentityStore=<ap>,SelectedAuthorizationProfiles=<fld16>,UseCase=<fld29>,IdentityGroup=<group_object>,AuthorizationPolicyMatchedRule=<rulename>,IdentitySelectionMatchedRule=<fld19>,Model Name=<za>,Software Version=<version>,undefined-151=<aq>,All Stages=<sw>,Stage=<se>,NACRadiusUserName=<c_username>,IssuedPacInfo=<st>,PostureAssessmentStatus=<sy>,EapChainingResult=<su>,IdentityAccessRestricted=<si>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{aa}, Device IP Address=%{hostip}, Device Port=%{network_port}, RadiusPacketType=%{ab}, UserName=%{d}, Protocol=%{protocol}, RequestLatency=%{i}, NetworkDeviceName=%{node}, User-Name=%{k}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Framed-IP-Address=%{saddr}, Class=%{fld2}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, cisco-av-pair=%{m}, AcsSessionID=%{sessionid}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{ao}, NetworkDeviceGroups=%{ac}, CPMSessionID=%{sessionid}, EndPointMACAddress=%{dmacaddr}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Location=%{location_desc}, Device Type=%{obj_type}, Phases=%{cp}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, IdentityPolicyMatchedRule=%{rule}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, Response=%{info}, EndPointMatchedProfile=%{fld11}, EapAuthentication=%{bm}, EapTunnel=%{bk}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, IsEndpointInRejectMode=%{ai}, ACSVersion=%{a}, Event-Timestamp=%{event_time_string}, Acct-Terminate-Cause=%{action}, DetailedInfo=%{info}, attribute-77=%{pi}, MS-RAS-Vendor=%{ki}, AuthenticationMethod=%{authmethod}, ADDomain=%{domain}, ExternalGroups=%{my}, sAMAccountName=%{ky}, Acct-Multi-Session-Id=%{sessionid}, Acct-Link-Count=%{pn},StepData=%{yi}, StepLatency=%{ki},Service-Type=%{service},attribute-52=%{fld61},attribute-53=%{fld62},Framed-MTU=%{fld10},EAP-Key-Name=%{cf},OriginalUserName=%{c_username},AuthenticationIdentityStore=%{ap},SelectedAuthorizationProfiles=%{fld16},UseCase=%{fld29},IdentityGroup=%{group_object},AuthorizationPolicyMatchedRule=%{rulename},IdentitySelectionMatchedRule=%{fld19},Model Name=%{za},Software Version=%{version},undefined-151=%{aq},All Stages=%{sw},Stage=%{se},NACRadiusUserName=%{c_username},IssuedPacInfo=%{st},PostureAssessmentStatus=%{sy},EapChainingResult=%{su},IdentityAccessRestricted=%{si}" }
				id => "message-Failed_Attempts:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{d}"
				"context" => "%{m}"
					"[event][id]" => "Failed_Attempts:03"
					"[rsa][message][id1]" => "Failed_Attempts:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Failed_Attempts:05
		# line in RSA: AcsSessionID=<sessionid>,AD-Host-Candidate-Identities=<ac>,AD-Host-DNS-Domain=<ad>,AD-Host-Join-Point=<ae>,AD-Host-NetBios-Name=<af>,AD-Host-Resolved-DNs=<ag>,AD-Host-Resolved-Identities=<ah>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<ai>,AuthenticationMethod=<authmethod>,Called-Station-ID=<calling_to>,Calling-Station-ID=<connectionid>,ConfigVersionId=<al>,CPMSessionID=<sessionid>,DestinationIPAddress=<daddr>,DetailedInfo=<info>,Device IP Address=<hostip>,Device Type=<obj_type>,EapAuthentication=<bm>,EapTunnel=<bk>, EndPointMACAddress=<dmacaddr>,FailureReason=<result>,IdentityAccessRestricted=<ao>,IdentitySelectionMatchedRule=<ap>,ISEPolicySetName=<aq>,Location=<location_desc>,NAS-Identifier=<application>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NasRetransmissionTimeout=<av>,NetworkDeviceGroups=<aw>,NetworkDeviceName=<node>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<az>,Service-Type=<service>,Step=<bq>,StepData=<br>,StepLatency=<bh>,UserName=<d>,User-Name=<k>,RadiusPacketType=<bi>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,Device Port=<network_port>,DestinationPort=<dport>,Protocol=<protocol>,RequestLatency=<dclass_counter1>,Framed-IP-Address=<saddr>,Framed-MTU=<cd>,NAS-Port-Id=<interface>,EAP-Key-Name=<cf>,cisco-av-pair=<info>,cisco-nas-port=<stransport>,OriginalUserName=<c_username>,UseCase=<ci>,EapChainingResult=<ck>,SelectedAuthorizationProfiles=<bx>,UserType=<fld60>,PortalName=<fld61>,Stage=<po>,ADDomain=<domain>,State=<event_state>,OpenSSLErrorMessage=<result>,OpenSSLErrorStack=<cert_error>,IsEndpointInRejectMode=<qr>,TotalFailedAttempts=<cl>,TotalFailedTime=<ya>,AD-Groups-Names=<ah>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AcsSessionID=%{sessionid},AD-Host-Candidate-Identities=%{ac},AD-Host-DNS-Domain=%{ad},AD-Host-Join-Point=%{ae},AD-Host-NetBios-Name=%{af},AD-Host-Resolved-DNs=%{ag},AD-Host-Resolved-Identities=%{ah},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{ai},AuthenticationMethod=%{authmethod},Called-Station-ID=%{calling_to},Calling-Station-ID=%{connectionid},ConfigVersionId=%{al},CPMSessionID=%{sessionid},DestinationIPAddress=%{daddr},DetailedInfo=%{info},Device IP Address=%{hostip},Device Type=%{obj_type},EapAuthentication=%{bm},EapTunnel=%{bk}, EndPointMACAddress=%{dmacaddr},FailureReason=%{result},IdentityAccessRestricted=%{ao},IdentitySelectionMatchedRule=%{ap},ISEPolicySetName=%{aq},Location=%{location_desc},NAS-Identifier=%{application},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},NAS-Port-Type=%{context},NasRetransmissionTimeout=%{av},NetworkDeviceGroups=%{aw},NetworkDeviceName=%{node},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{az},Service-Type=%{service},Step=%{bq},StepData=%{br},StepLatency=%{bh},UserName=%{d},User-Name=%{k},RadiusPacketType=%{bi},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},Device Port=%{network_port},DestinationPort=%{dport},Protocol=%{protocol},RequestLatency=%{dclass_counter1},Framed-IP-Address=%{saddr},Framed-MTU=%{cd},NAS-Port-Id=%{interface},EAP-Key-Name=%{cf},cisco-av-pair=%{info},cisco-nas-port=%{stransport},OriginalUserName=%{c_username},UseCase=%{ci},EapChainingResult=%{ck},SelectedAuthorizationProfiles=%{bx},UserType=%{fld60},PortalName=%{fld61},Stage=%{po},ADDomain=%{domain},State=%{event_state},OpenSSLErrorMessage=%{result},OpenSSLErrorStack=%{cert_error},IsEndpointInRejectMode=%{qr},TotalFailedAttempts=%{cl},TotalFailedTime=%{ya},AD-Groups-Names=%{ah}" }
				id => "message-Failed_Attempts:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{d}"
					"[event][id]" => "Failed_Attempts:05"
					"[rsa][message][id1]" => "Failed_Attempts:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Failed_Attempts:06
		# line in RSA: <fld1> AD-Domain=<domain>, IdentityAccessRestricted=<fld2>,<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} AD-Domain=%{domain}, IdentityAccessRestricted=%{fld2},%{fld3}" }
				id => "message-Failed_Attempts:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Failed_Attempts:06"
					"[rsa][message][id1]" => "Failed_Attempts:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Failed_Attempts:04
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, Device Port=<network_port>, UserName=<username>, Protocol=<protocol>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, FailureReason=<result>, Step=<fld5>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, NetworkDeviceName=<node>, NetworkDeviceGroups=<ac>, Response=<info>, CmdSet=<action>, Authen-Method=<authmethod>, Service-Argument=<fld45>, SelectedAuthenticationIdentityStores=<ap>, RadiusPacketType=<ab>, AuthorizationPolicyMatchedRule=<rulename>, User-Name=<k>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Service-Type=<service>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>, cisco-av-pair=<context>, Location=<location_desc>, Framed-MTU=<fld12>, EAP-Key-Name=<fld11>, Framed-IP-Address=<saddr>, State=<event_state>, Class=<fld2>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>,Tunnel-Client-Endpoint=<am>,CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=<fld31>,IdentityGroup=<group_object>, IsEndpointInRejectMode=<ai>, ServiceSelectionMatchedRule=<an>, SelectedShellProfile=<bn>,  SelectedCommandSet=<bq>, MatchedCommandSet=<br>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, VendorSpecific=<pp>, Framed-Protocol=<protocol>, DetailedInfo=<info>, UseCase=<kb>, Protocol-Argument=<pn>,undefined-151=<pq>, CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld60>, CVPN3000/ASA/PIX7x-Client-Type=<fld61>, ExternalErrorCode=<resultcode>, MS-CHAP2-Response=<fld8>, Acct-Terminate-Cause=<action> Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>,attribute-89=<fld14>, attribute-131=<fld15>, Acct-Multi-Session-Id=<sessionid>, attribute-77=<fld16>, attribute-186=<fld17>, attribute-187=<fld18>, AD-Error-Details=<result>, StepData=<fld>, AD-Domain=<domain>,ACSVersion=<a>, ConfigVersionId=<aa>, Authen-Type=<ad>, RequestLatency=<i>, User-Name=<username>, cisco-av-pair=<m>, AuthenticationIdentityStore=<aj>, SelectedAccessService=<service>, Tunnel-Client-Endpoint=<am>, MS-CHAP2-Response=<an>, IdentityGroup=<group_object>, Step=<ao>, ServiceSelectionMatchedRule=<aq>, Service=<av>, Port=<aw>, SelectedQueryIdentityStores=<ay>, QueryIdentityStores=<az>, IdentityAccessRestricted=<bb>, ExternalGroups=<bc>, SelectedCommandSet=<bd>, Service-Argument=<be>, UserIdentityGroup=<group>, SelectedShellProfile=<bf>, AcsChangePasswordMethod=<bh>, PrivilegeLevel=<privilege>, Protocol-Argument=<bi>, GroupMappingPolicyMatchedRule=<bj>, EapTunnel=<bk>, EapAuthentication=<bm>, Framed-MTU=<bn>, Tunnel-Type=<bq>, Airespace-Wlan-Id=<wlan>, memberOf=<bu>, OU=<bv>, DC=<bw>, SelectedAuthorizationProfiles=<bx>, OpenSSLErrorStack=<cert_error>, OpenSSLErrorMessage=<result>, GroupsOrAttributesProcessFailure=<ca>, UseCase=<fld12>, attribute-89=<fld14>, RadiusFlowType=<fld6>, NetworkDeviceProfileId=<fld4>,IsThirdPartyDeviceFlow=<fld5>, NetworkDeviceProfileName =<fld7>, SSID=<ssid>, Framed-MTU=<fld14>, Tunnel-Type=<fld37>, Step=<pp>,  attribute-89=<pl>, attribute-131=<lo>, cisco-av-pair=<li>, ExternalGroups=<ay>, sAMAccountName=<by>, distinguishedName=<cy>, OU=<dy>, DC=<ey>, IdentityAccessRestricted=<fy>, displayName=<hy>, givenName=<iy>, department=<jy>, memberOf=<ky>, CN=<ly>, AuthenticationIdentityStore=<my>, EapTunnel=<ik>, EapAuthentication=<il>, Infoblox-version=<pl>, Infoblox-Product-Name=<po>, SelectedAuthenticationIdentityStores=<sw>,  NetworkDeviceName=<node>, NetworkDeviceGroups=<sd>,undefined-89=<sg>,undefined-131=<a>,IsEndpointInRejectMode=<a>,DetailedInfo=<info>,OriginalUserName=<c_username>,ConfigVersionId=<aa>, UserName=<d>, CPMSessionID=<sessionid>, EndPointMACAddress=<dmacaddr>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Device Type=<obj_type>, Phases=<cp>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, EndPointMatchedProfile=<fld11>, ACSVersion=<a>, Event-Timestamp=<event_time_string>, Acct-Terminate-Cause=<action>, attribute-77=<pi>, MS-RAS-Vendor=<ki>, ExternalGroups=<my>, sAMAccountName=<ky>, Acct-Link-Count=<pn>,StepData=<yi>, StepLatency=<ki>,Service-Type=<service>,attribute-52=<fld61>,attribute-53=<fld62>,Framed-MTU=<fld10>,EAP-Key-Name=<cf>,AuthenticationIdentityStore=<ap>,SelectedAuthorizationProfiles=<fld16>,UseCase=<fld29>,AuthorizationPolicyMatchedRule=<rulename>,IdentitySelectionMatchedRule=<fld19>,Model Name=<za>,Software Version=<version>,undefined-151=<aq>,All Stages=<sw>,Stage=<se>,NACRadiusUserName=<c_username>,IssuedPacInfo=<st>,PostureAssessmentStatus=<sy>,EapChainingResult=<su>,IdentityAccessRestricted=<si>,AcsSessionID=<sessionid>,AD-Host-Candidate-Identities=<ac>,AD-Host-DNS-Domain=<ad>,AD-Host-Join-Point=<ae>,AD-Host-NetBios-Name=<af>,AD-Host-Resolved-DNs=<ag>,AD-Host-Resolved-Identities=<ah>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<ai>,AuthenticationMethod=<authmethod>,Called-Station-ID=<calling_to>,Calling-Station-ID=<connectionid>,ConfigVersionId=<al>,CPMSessionID=<sessionid>,DestinationIPAddress=<daddr>,Device IP Address=<hostip>,Device Type=<obj_type>,EapAuthentication=<bm>,EapTunnel=<bk>,FailureReason=<result>,IdentityAccessRestricted=<ao>,IdentitySelectionMatchedRule=<ap>,ISEPolicySetName=<aq>,Location=<location_desc>,NAS-Identifier=<application>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NasRetransmissionTimeout=<av>,NetworkDeviceGroups=<aw>,NetworkDeviceName=<node>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<az>,Step=<bq>,StepData=<br>,StepLatency=<bh>,UserName=<d>,User-Name=<k>,RadiusPacketType=<bi>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,Device Port=<network_port>,DestinationPort=<dport>,Protocol=<protocol>,RequestLatency=<dclass_counter1>,Framed-IP-Address=<saddr>,Framed-MTU=<cd>,NAS-Port-Id=<interface>,cisco-av-pair=<info>,cisco-nas-port=<stransport>,UseCase=<ci>,EapChainingResult=<ck>,SelectedAuthorizationProfiles=<bx>,UserType=<fld60>,PortalName=<fld61>,Stage=<po>,ADDomain=<domain>,State=<event_state>,OpenSSLErrorMessage=<result>,OpenSSLErrorStack=<cert_error>,IsEndpointInRejectMode=<qr>,TotalFailedAttempts=<cl>,TotalFailedTime=<ya>,AD-Groups-Names=<ah>,SelectedAuthenticationIdentityStores=<fld27>, NetworkDeviceGroups=<fld28>, ServiceSelectionMatchedRule=<fld29>, Real Name=<user_fullname>, Organization Name=<fld32>, BEMS ID=<fld33>, US Person=<fld34>, Email Address=<mail_id>, Role=<user_role>, Manager BEMSID=<fld35>, Budget=<fld36>, Country=<location_country>, Role - PAN=<fld37>, Role - HP VC Access=<fld38>, Step=<fld39>,Description=<event_description>,ACS-RESERVED-Never-Expired=<bi>,SelectedQueryIdentityStores=<bz>,AcsChangePasswordMethod=<ca>,attribute-188=<fld63>,attribute-189=<fld64>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, Device Port=%{network_port}, UserName=%{username}, Protocol=%{protocol}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{fld5}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, NetworkDeviceName=%{node}, NetworkDeviceGroups=%{ac}, Response=%{info}, CmdSet=%{action}, Authen-Method=%{authmethod}, Service-Argument=%{fld45}, SelectedAuthenticationIdentityStores=%{ap}, RadiusPacketType=%{ab}, AuthorizationPolicyMatchedRule=%{rulename}, User-Name=%{k}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Service-Type=%{service}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface}, cisco-av-pair=%{context}, Location=%{location_desc}, Framed-MTU=%{fld12}, EAP-Key-Name=%{fld11}, Framed-IP-Address=%{saddr}, State=%{event_state}, Class=%{fld2}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg},Tunnel-Client-Endpoint=%{am},CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=%{fld31},IdentityGroup=%{group_object}, IsEndpointInRejectMode=%{ai}, ServiceSelectionMatchedRule=%{an}, SelectedShellProfile=%{bn},  SelectedCommandSet=%{bq}, MatchedCommandSet=%{br}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, VendorSpecific=%{pp}, Framed-Protocol=%{protocol}, DetailedInfo=%{info}, UseCase=%{kb}, Protocol-Argument=%{pn},undefined-151=%{pq}, CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld60}, CVPN3000/ASA/PIX7x-Client-Type=%{fld61}, ExternalErrorCode=%{resultcode}, MS-CHAP2-Response=%{fld8}, Acct-Terminate-Cause=%{action} Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs},attribute-89=%{fld14}, attribute-131=%{fld15}, Acct-Multi-Session-Id=%{sessionid}, attribute-77=%{fld16}, attribute-186=%{fld17}, attribute-187=%{fld18}, AD-Error-Details=%{result}, StepData=%{fld}, AD-Domain=%{domain},ACSVersion=%{a}, ConfigVersionId=%{aa}, Authen-Type=%{ad}, RequestLatency=%{i}, User-Name=%{username}, cisco-av-pair=%{m}, AuthenticationIdentityStore=%{aj}, SelectedAccessService=%{service}, Tunnel-Client-Endpoint=%{am}, MS-CHAP2-Response=%{an}, IdentityGroup=%{group_object}, Step=%{ao}, ServiceSelectionMatchedRule=%{aq}, Service=%{av}, Port=%{aw}, SelectedQueryIdentityStores=%{ay}, QueryIdentityStores=%{az}, IdentityAccessRestricted=%{bb}, ExternalGroups=%{bc}, SelectedCommandSet=%{bd}, Service-Argument=%{be}, UserIdentityGroup=%{group}, SelectedShellProfile=%{bf}, AcsChangePasswordMethod=%{bh}, PrivilegeLevel=%{privilege}, Protocol-Argument=%{bi}, GroupMappingPolicyMatchedRule=%{bj}, EapTunnel=%{bk}, EapAuthentication=%{bm}, Framed-MTU=%{bn}, Tunnel-Type=%{bq}, Airespace-Wlan-Id=%{wlan}, memberOf=%{bu}, OU=%{bv}, DC=%{bw}, SelectedAuthorizationProfiles=%{bx}, OpenSSLErrorStack=%{cert_error}, OpenSSLErrorMessage=%{result}, GroupsOrAttributesProcessFailure=%{ca}, UseCase=%{fld12}, attribute-89=%{fld14}, RadiusFlowType=%{fld6}, NetworkDeviceProfileId=%{fld4},IsThirdPartyDeviceFlow=%{fld5}, NetworkDeviceProfileName =%{fld7}, SSID=%{ssid}, Framed-MTU=%{fld14}, Tunnel-Type=%{fld37}, Step=%{pp},  attribute-89=%{pl}, attribute-131=%{lo}, cisco-av-pair=%{li}, ExternalGroups=%{ay}, sAMAccountName=%{by}, distinguishedName=%{cy}, OU=%{dy}, DC=%{ey}, IdentityAccessRestricted=%{fy}, displayName=%{hy}, givenName=%{iy}, department=%{jy}, memberOf=%{ky}, CN=%{ly}, AuthenticationIdentityStore=%{my}, EapTunnel=%{ik}, EapAuthentication=%{il}, Infoblox-version=%{pl}, Infoblox-Product-Name=%{po}, SelectedAuthenticationIdentityStores=%{sw},  NetworkDeviceName=%{node}, NetworkDeviceGroups=%{sd},undefined-89=%{sg},undefined-131=%{a},IsEndpointInRejectMode=%{a},DetailedInfo=%{info},OriginalUserName=%{c_username},ConfigVersionId=%{aa}, UserName=%{d}, CPMSessionID=%{sessionid}, EndPointMACAddress=%{dmacaddr}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Device Type=%{obj_type}, Phases=%{cp}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, EndPointMatchedProfile=%{fld11}, ACSVersion=%{a}, Event-Timestamp=%{event_time_string}, Acct-Terminate-Cause=%{action}, attribute-77=%{pi}, MS-RAS-Vendor=%{ki}, ExternalGroups=%{my}, sAMAccountName=%{ky}, Acct-Link-Count=%{pn},StepData=%{yi}, StepLatency=%{ki},Service-Type=%{service},attribute-52=%{fld61},attribute-53=%{fld62},Framed-MTU=%{fld10},EAP-Key-Name=%{cf},AuthenticationIdentityStore=%{ap},SelectedAuthorizationProfiles=%{fld16},UseCase=%{fld29},AuthorizationPolicyMatchedRule=%{rulename},IdentitySelectionMatchedRule=%{fld19},Model Name=%{za},Software Version=%{version},undefined-151=%{aq},All Stages=%{sw},Stage=%{se},NACRadiusUserName=%{c_username},IssuedPacInfo=%{st},PostureAssessmentStatus=%{sy},EapChainingResult=%{su},IdentityAccessRestricted=%{si},AcsSessionID=%{sessionid},AD-Host-Candidate-Identities=%{ac},AD-Host-DNS-Domain=%{ad},AD-Host-Join-Point=%{ae},AD-Host-NetBios-Name=%{af},AD-Host-Resolved-DNs=%{ag},AD-Host-Resolved-Identities=%{ah},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{ai},AuthenticationMethod=%{authmethod},Called-Station-ID=%{calling_to},Calling-Station-ID=%{connectionid},ConfigVersionId=%{al},CPMSessionID=%{sessionid},DestinationIPAddress=%{daddr},Device IP Address=%{hostip},Device Type=%{obj_type},EapAuthentication=%{bm},EapTunnel=%{bk},FailureReason=%{result},IdentityAccessRestricted=%{ao},IdentitySelectionMatchedRule=%{ap},ISEPolicySetName=%{aq},Location=%{location_desc},NAS-Identifier=%{application},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},NAS-Port-Type=%{context},NasRetransmissionTimeout=%{av},NetworkDeviceGroups=%{aw},NetworkDeviceName=%{node},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{az},Step=%{bq},StepData=%{br},StepLatency=%{bh},UserName=%{d},User-Name=%{k},RadiusPacketType=%{bi},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},Device Port=%{network_port},DestinationPort=%{dport},Protocol=%{protocol},RequestLatency=%{dclass_counter1},Framed-IP-Address=%{saddr},Framed-MTU=%{cd},NAS-Port-Id=%{interface},cisco-av-pair=%{info},cisco-nas-port=%{stransport},UseCase=%{ci},EapChainingResult=%{ck},SelectedAuthorizationProfiles=%{bx},UserType=%{fld60},PortalName=%{fld61},Stage=%{po},ADDomain=%{domain},State=%{event_state},OpenSSLErrorMessage=%{result},OpenSSLErrorStack=%{cert_error},IsEndpointInRejectMode=%{qr},TotalFailedAttempts=%{cl},TotalFailedTime=%{ya},AD-Groups-Names=%{ah},SelectedAuthenticationIdentityStores=%{fld27}, NetworkDeviceGroups=%{fld28}, ServiceSelectionMatchedRule=%{fld29}, Real Name=%{user_fullname}, Organization Name=%{fld32}, BEMS ID=%{fld33}, US Person=%{fld34}, Email Address=%{mail_id}, Role=%{user_role}, Manager BEMSID=%{fld35}, Budget=%{fld36}, Country=%{location_country}, Role - PAN=%{fld37}, Role - HP VC Access=%{fld38}, Step=%{fld39},Description=%{event_description},ACS-RESERVED-Never-Expired=%{bi},SelectedQueryIdentityStores=%{bz},AcsChangePasswordMethod=%{ca},attribute-188=%{fld63},attribute-189=%{fld64}" }
				id => "message-Failed_Attempts:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{k}"
				"version" => "%{a}"
				"context" => "%{m}"
					"[event][id]" => "Failed_Attempts:04"
					"[rsa][message][id1]" => "Failed_Attempts:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CISE_Failed_Attempts" {
		# MESSAGE CISE_Failed_Attempts
		# line in RSA: ConfigVersionId=<aa>, Device IP Address=<hostip>, Device Port=<network_port>, RadiusPacketType=<ab>, UserName=<username>, Protocol=<protocol>, RequestLatency=<i>, NetworkDeviceName=<node>, User-Name=<k>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Framed-IP-Address=<saddr>, Class=<fld2>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, cisco-av-pair=<m>, AcsSessionID=<sessionid>, SelectedAccessService=<service>, FailureReason=<result>, Step=<ao>, NetworkDeviceGroups=<ac>, CPMSessionID=<sessionid>, EndPointMACAddress=<dmacaddr>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Location=<location_desc>, Device Type=<obj_type>, Phases=<cp>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, IdentityPolicyMatchedRule=<rule>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, Response=<info>, EndPointMatchedProfile=<fld11>, EapAuthentication=<bm>, EapTunnel=<bk>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>,  Model Name=<ay>, Software Version=<version>, All Device Types=<az>, Event-Timestamp=<event_time_string>, StepLatency=<pi>, DetailedInfo=<info>,Service-Type=<service>,StepData=<br>,AuthenticationIdentityStore=<br>,AuthenticationMethod=<authmethod>,SelectedAuthorizationProfiles=<br>,IsEndpointInRejectMode=<br>,IdentityGroup=<group_object>,undefined-151=<bq>,All Stages=<az>,OpenSSLErrorMessage=<result>,OpenSSLErrorStack=<cert_error>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{aa}, Device IP Address=%{hostip}, Device Port=%{network_port}, RadiusPacketType=%{ab}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{i}, NetworkDeviceName=%{node}, User-Name=%{k}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Framed-IP-Address=%{saddr}, Class=%{fld2}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, cisco-av-pair=%{m}, AcsSessionID=%{sessionid}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{ao}, NetworkDeviceGroups=%{ac}, CPMSessionID=%{sessionid}, EndPointMACAddress=%{dmacaddr}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Location=%{location_desc}, Device Type=%{obj_type}, Phases=%{cp}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, IdentityPolicyMatchedRule=%{rule}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, Response=%{info}, EndPointMatchedProfile=%{fld11}, EapAuthentication=%{bm}, EapTunnel=%{bk}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface},  Model Name=%{ay}, Software Version=%{version}, All Device Types=%{az}, Event-Timestamp=%{event_time_string}, StepLatency=%{pi}, DetailedInfo=%{info},Service-Type=%{service},StepData=%{br},AuthenticationIdentityStore=%{br},AuthenticationMethod=%{authmethod},SelectedAuthorizationProfiles=%{br},IsEndpointInRejectMode=%{br},IdentityGroup=%{group_object},undefined-151=%{bq},All Stages=%{az},OpenSSLErrorMessage=%{result},OpenSSLErrorStack=%{cert_error}" }
				id => "message-CISE_Failed_Attempts"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{k}"
				"context" => "%{m}"
					"[event][id]" => "CISE_Failed_Attempts"
					"[rsa][message][id1]" => "CISE_Failed_Attempts"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Failed_Attempts:01
		# line in RSA: Class=<fld2>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, cisco-av-pair=<m>, AcsSessionID=<sessionid>, SelectedAccessService=<service>, FailureReason=<result>, Step=<ao>, NetworkDeviceGroups=<ac>, CPMSessionID=<sessionid>, EndPointMACAddress=<dmacaddr>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Location=<location_desc>, Device Type=<obj_type>, Phases=<cp>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, IdentityPolicyMatchedRule=<rule>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, Response=<info>, EndPointMatchedProfile=<fld11>, EapAuthentication=<bm>, EapTunnel=<bk>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>,  Model Name=<ay>, Software Version=<version>, All Device Types=<az>, Event-Timestamp=<event_time_string>, StepLatency=<pi>, DetailedInfo=<info>,Service-Type=<service>,StepData=<br>,IdentitySelectionMatchedRule=<fld19>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,AD-Domain=<domain>,IdentityAccessRestricted=<fld79>,NasRetransmissionTimeout=<ei>,AuthenticationMethod=<authmethod>,NetworkDeviceName=<node>,User-Name=<k>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Serial Number=<serial_number>,Subject - Common Name=<br>,AuthorizationPolicyMatchedRule=<rulename>,AD-Groups-Names=<br>,Subject Alternative Name=<br>,Wireless=<fld60>,Site ID=<fld61>,Framed-IP-Address=<saddr>,Subject - Organization=<za>,Subject - Organization Unit=<zb>,Subject - Country=<zc>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Class=%{fld2}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, cisco-av-pair=%{m}, AcsSessionID=%{sessionid}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{ao}, NetworkDeviceGroups=%{ac}, CPMSessionID=%{sessionid}, EndPointMACAddress=%{dmacaddr}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Location=%{location_desc}, Device Type=%{obj_type}, Phases=%{cp}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, IdentityPolicyMatchedRule=%{rule}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, Response=%{info}, EndPointMatchedProfile=%{fld11}, EapAuthentication=%{bm}, EapTunnel=%{bk}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface},  Model Name=%{ay}, Software Version=%{version}, All Device Types=%{az}, Event-Timestamp=%{event_time_string}, StepLatency=%{pi}, DetailedInfo=%{info},Service-Type=%{service},StepData=%{br},IdentitySelectionMatchedRule=%{fld19},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},AD-Domain=%{domain},IdentityAccessRestricted=%{fld79},NasRetransmissionTimeout=%{ei},AuthenticationMethod=%{authmethod},NetworkDeviceName=%{node},User-Name=%{k},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Serial Number=%{serial_number},Subject - Common Name=%{br},AuthorizationPolicyMatchedRule=%{rulename},AD-Groups-Names=%{br},Subject Alternative Name=%{br},Wireless=%{fld60},Site ID=%{fld61},Framed-IP-Address=%{saddr},Subject - Organization=%{za},Subject - Organization Unit=%{zb},Subject - Country=%{zc}" }
				id => "message-CISE_Failed_Attempts:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{k}"
					"[event][id]" => "CISE_Failed_Attempts:01"
					"[rsa][message][id1]" => "CISE_Failed_Attempts:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Failed_Attempts:02
		# line in RSA: ConfigVersionId=<aa>, Device IP Address=<hostip>, Device Port=<network_port>, RadiusPacketType=<ab>, UserName=<username>, Protocol=<protocol>, RequestLatency=<i>, NetworkDeviceName=<node>, User-Name=<k>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Framed-IP-Address=<saddr>, Class=<fld2>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, cisco-av-pair=<m>, AcsSessionID=<sessionid>, SelectedAccessService=<service>, FailureReason=<result>, Step=<ao>, NetworkDeviceGroups=<ac>, CPMSessionID=<sessionid>, EndPointMACAddress=<dmacaddr>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Location=<location_desc>, Device Type=<obj_type>, Phases=<cp>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, IdentityPolicyMatchedRule=<rule>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, Response=<info>, EndPointMatchedProfile=<fld11>, EapAuthentication=<bm>, EapTunnel=<bk>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>,  Model Name=<ay>, Software Version=<version>, All Device Types=<az>, Event-Timestamp=<event_time_string>, StepLatency=<pi>, DetailedInfo=<info>,Service-Type=<service>,StepData=<br>,AuthenticationIdentityStore=<br>,AuthenticationMethod=<authmethod>,SelectedAuthorizationProfiles=<br>,IsEndpointInRejectMode=<br>,IdentityGroup=<group_object>,undefined-151=<bq>,All Stages=<az>,OpenSSLErrorMessage=<result>,OpenSSLErrorStack=<cert_error>,Class=<fld2>,IdentitySelectionMatchedRule=<fld19>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>, AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,AD-Domain=<domain>,IdentityAccessRestricted=<fld79>,NasRetransmissionTimeout=<ei>,NetworkDeviceName=<node>,User-Name=<k>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Serial Number=<serial_number>,Subject - Common Name=<br>,AuthorizationPolicyMatchedRule=<rulename>,AD-Groups-Names=<br>,Subject Alternative Name=<br>,Wireless=<fld60>,Site ID=<fld61>,Framed-IP-Address=<saddr>,Subject - Organization=<za>,Subject - Organization Unit=<zb>,Subject - Country=<zc>,Step=<ao>,Subject=<br>,Issuer=<br>,Issuer - Common Name=<br>,Issuer - Domain Component=<br>,Key Usage=<br>,Extended Key Usage - Name=<br>,Template Name=<br>,Days to Expiry=<br>,DC=<br>,Extended Key Usage - OID=<br>,AD-User-NetBios-Name=<br>,IdentityAccessRestricted=<br>,ExternalGroups=<br>,OU=<br>,AD-User-Resolved-DNs=<br>,Subject Alternative Name - DNS=<br>,AD-Host-Resolved-DNs=<br>,AD-Host-DNS-Domain=<br>,AD-Host-NetBios-Name=<br>,AD-Host-Resolved-Identities=<br>,AD-Host-Candidate-Identities=<br>,AD-Host-Join-Point=<br>,UseCase=<d>,FailureReason=<result>,SelectedAccessService=<service>,NAS-Identifier=<application>,ADDomain=<domain>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld64>, Subject - Organization=<za>,O=<zd>,C=<ze>,Issuer - Organization=<zf>,Issuer - Organization Unit=<zg>, Issuer - Country=<zh>,DestinationIPAddress=<daddr>,DestinationPort=<dport>NetworkDeviceProfileName=<fld11>,NetworkDeviceProfileId=<fld2>,IsThirdPartyDeviceFlow=<fld3>,RadiusFlowType=<fld4>,SSID=<ssid>,Remote-Address=<saddr>,Network Device Profile=<fld6>,Wired_Deployment=<fld5>,TLSCipher=<s_cipher>,TLSVersion=<version>,DTLSSupport=<fld68>,wired=<fld69>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{aa}, Device IP Address=%{hostip}, Device Port=%{network_port}, RadiusPacketType=%{ab}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{i}, NetworkDeviceName=%{node}, User-Name=%{k}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Framed-IP-Address=%{saddr}, Class=%{fld2}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, cisco-av-pair=%{m}, AcsSessionID=%{sessionid}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{ao}, NetworkDeviceGroups=%{ac}, CPMSessionID=%{sessionid}, EndPointMACAddress=%{dmacaddr}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Location=%{location_desc}, Device Type=%{obj_type}, Phases=%{cp}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, IdentityPolicyMatchedRule=%{rule}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, Response=%{info}, EndPointMatchedProfile=%{fld11}, EapAuthentication=%{bm}, EapTunnel=%{bk}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface},  Model Name=%{ay}, Software Version=%{version}, All Device Types=%{az}, Event-Timestamp=%{event_time_string}, StepLatency=%{pi}, DetailedInfo=%{info},Service-Type=%{service},StepData=%{br},AuthenticationIdentityStore=%{br},AuthenticationMethod=%{authmethod},SelectedAuthorizationProfiles=%{br},IsEndpointInRejectMode=%{br},IdentityGroup=%{group_object},undefined-151=%{bq},All Stages=%{az},OpenSSLErrorMessage=%{result},OpenSSLErrorStack=%{cert_error},Class=%{fld2},IdentitySelectionMatchedRule=%{fld19},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx}, AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},AD-Domain=%{domain},IdentityAccessRestricted=%{fld79},NasRetransmissionTimeout=%{ei},NetworkDeviceName=%{node},User-Name=%{k},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Serial Number=%{serial_number},Subject - Common Name=%{br},AuthorizationPolicyMatchedRule=%{rulename},AD-Groups-Names=%{br},Subject Alternative Name=%{br},Wireless=%{fld60},Site ID=%{fld61},Framed-IP-Address=%{saddr},Subject - Organization=%{za},Subject - Organization Unit=%{zb},Subject - Country=%{zc},Step=%{ao},Subject=%{br},Issuer=%{br},Issuer - Common Name=%{br},Issuer - Domain Component=%{br},Key Usage=%{br},Extended Key Usage - Name=%{br},Template Name=%{br},Days to Expiry=%{br},DC=%{br},Extended Key Usage - OID=%{br},AD-User-NetBios-Name=%{br},IdentityAccessRestricted=%{br},ExternalGroups=%{br},OU=%{br},AD-User-Resolved-DNs=%{br},Subject Alternative Name - DNS=%{br},AD-Host-Resolved-DNs=%{br},AD-Host-DNS-Domain=%{br},AD-Host-NetBios-Name=%{br},AD-Host-Resolved-Identities=%{br},AD-Host-Candidate-Identities=%{br},AD-Host-Join-Point=%{br},UseCase=%{d},FailureReason=%{result},SelectedAccessService=%{service},NAS-Identifier=%{application},ADDomain=%{domain},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld64}, Subject - Organization=%{za},O=%{zd},C=%{ze},Issuer - Organization=%{zf},Issuer - Organization Unit=%{zg}, Issuer - Country=%{zh},DestinationIPAddress=%{daddr},DestinationPort=%{dport}NetworkDeviceProfileName=%{fld11},NetworkDeviceProfileId=%{fld2},IsThirdPartyDeviceFlow=%{fld3},RadiusFlowType=%{fld4},SSID=%{ssid},Remote-Address=%{saddr},Network Device Profile=%{fld6},Wired_Deployment=%{fld5},TLSCipher=%{s_cipher},TLSVersion=%{version},DTLSSupport=%{fld68},wired=%{fld69}" }
				id => "message-CISE_Failed_Attempts:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{k}"
				"context" => "%{m}"
					"[event][id]" => "CISE_Failed_Attempts:02"
					"[rsa][message][id1]" => "CISE_Failed_Attempts:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CISE_Passed_Authentications" {
		# MESSAGE CISE_Passed_Authentications
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, IdentityDn=<fld92>, CPMSessionID=<sessionid>, ou=<fld93>, dc=<fld93>, PostureAssessmentStatus=<fld94>, Device Type=<obj_type>, Location=<location_desc>, Model Name=<fld97>, PostureStatus=<disposition>,UserType=<fld9>, EndPointMACAddress=<dmacaddr>,EndPointMatchedProfile=<fld11>,HostIdentityGroup=<fld12>,Software Version=<version>, EapAuthentication=<fld48>,ISEPolicySetName=<fld13>, AllowedProtocolMatchedRule=<rulename>, IdentitySelectionMatchedRule=<fld19>, Phases=<fld22>,  DeviceRegistrationStatus=<result>, UseCase=<ai>, All Device Types=<ay>, NACRadiusUserName=<c_username>, All Stages=<az>, dNSHostName=<hostname>,EapTunnel=<br>,IssuedPacInfo=<bq>,EapChainingResult=<ck>,distinguishedName=<ci>,Airespace-Wlan-Id=<wlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, IdentityDn=%{fld92}, CPMSessionID=%{sessionid}, ou=%{fld93}, dc=%{fld93}, PostureAssessmentStatus=%{fld94}, Device Type=%{obj_type}, Location=%{location_desc}, Model Name=%{fld97}, PostureStatus=%{disposition},UserType=%{fld9}, EndPointMACAddress=%{dmacaddr},EndPointMatchedProfile=%{fld11},HostIdentityGroup=%{fld12},Software Version=%{version}, EapAuthentication=%{fld48},ISEPolicySetName=%{fld13}, AllowedProtocolMatchedRule=%{rulename}, IdentitySelectionMatchedRule=%{fld19}, Phases=%{fld22},  DeviceRegistrationStatus=%{result}, UseCase=%{ai}, All Device Types=%{ay}, NACRadiusUserName=%{c_username}, All Stages=%{az}, dNSHostName=%{hostname},EapTunnel=%{br},IssuedPacInfo=%{bq},EapChainingResult=%{ck},distinguishedName=%{ci},Airespace-Wlan-Id=%{wlan}" }
				id => "message-CISE_Passed_Authentications"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Passed_Authentications"
					"[rsa][message][id1]" => "CISE_Passed_Authentications"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Passed_Authentications:01
		# line in RSA: Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, IdentityDn=<fld92>, CPMSessionID=<sessionid>, ou=<fld93>, dc=<fld93>, PostureAssessmentStatus=<fld94>, Device Type=<obj_type>, Location=<location_desc>, Model Name=<fld97>, PostureStatus=<disposition>,UserType=<fld9>, EndPointMACAddress=<dmacaddr>,EndPointMatchedProfile=<fld11>,HostIdentityGroup=<fld12>,Software Version=<version>, EapAuthentication=<fld48>,ISEPolicySetName=<fld13>, AllowedProtocolMatchedRule=<rulename>, IdentitySelectionMatchedRule=<fld19>, Phases=<fld22>,  DeviceRegistrationStatus=<result>, UseCase=<ai>, All Device Types=<ay>, LogicalProfile=<pi>, EndPointPolicy=<pz>, StepLatency=<py>, Wireless=<fld61>, Site ID=<fld62>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld63>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, IdentityDn=%{fld92}, CPMSessionID=%{sessionid}, ou=%{fld93}, dc=%{fld93}, PostureAssessmentStatus=%{fld94}, Device Type=%{obj_type}, Location=%{location_desc}, Model Name=%{fld97}, PostureStatus=%{disposition},UserType=%{fld9}, EndPointMACAddress=%{dmacaddr},EndPointMatchedProfile=%{fld11},HostIdentityGroup=%{fld12},Software Version=%{version}, EapAuthentication=%{fld48},ISEPolicySetName=%{fld13}, AllowedProtocolMatchedRule=%{rulename}, IdentitySelectionMatchedRule=%{fld19}, Phases=%{fld22},  DeviceRegistrationStatus=%{result}, UseCase=%{ai}, All Device Types=%{ay}, LogicalProfile=%{pi}, EndPointPolicy=%{pz}, StepLatency=%{py}, Wireless=%{fld61}, Site ID=%{fld62},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld63}" }
				id => "message-CISE_Passed_Authentications:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Passed_Authentications:01"
					"[rsa][message][id1]" => "CISE_Passed_Authentications:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Passed_Authentications:02
		# line in RSA: AcsSessionID=<sessionid>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<ai>,AuthenticationMethod=<authmethod>,Called-Station-ID=<calling_to>,Calling-Station-ID=<connectionid>,ConfigVersionId=<al>,CPMSessionID=<sessionid>,DestinationIPAddress=<daddr>,DetailedInfo=<info>,Device IP Address=<hostip>,Device Type=<obj_type>,EapAuthentication=<bm>,EapTunnel=<bk>, EndPointMACAddress=<dmacaddr>,FailureReason=<result>,IdentityAccessRestricted=<ao>,IdentitySelectionMatchedRule=<ap>,ISEPolicySetName=<aq>,Location=<location_desc>,NAS-Identifier=<application>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NasRetransmissionTimeout=<av>,NetworkDeviceGroups=<aw>,NetworkDeviceName=<node>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<az>,Service-Type=<service>,Step=<bq>,StepData=<br>,StepLatency=<bh>,UserName=<d>,User-Name=<k>,RadiusPacketType=<bi>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,Device Port=<network_port>,DestinationPort=<dport>,Protocol=<protocol>,RequestLatency=<dclass_counter1>,Framed-IP-Address=<saddr>,Framed-MTU=<cd>,NAS-Port-Id=<interface>,EAP-Key-Name=<cf>,cisco-av-pair=<info>,cisco-nas-port=<stransport>,OriginalUserName=<c_username>,UseCase=<ci>,EapChainingResult=<ck>,PostureAssessmentStatus=<cl>,EndPointMatchedProfile=<cm>,HostIdentityGroup=<cn>,PostureStatus=<disposition>,State=<event_state>,SelectedAuthorizationProfiles=<cq>,IdentityGroup=<group_object>,AuthorizationPolicyMatchedRule=<rulename>,UserType=<da>,DeviceRegistrationStatus=<result>,Acct-Terminate-Cause=<action>,Event-Timestamp=<event_time_string>,AD-Groups-Names=<dg>,ExternalGroups=<dh>,AD-Domain=<domain>,Days to Expiry=<br>,Serial Number=<serial_number>,Subject - Common Name=<br>,CN=<br>,IssuedPacInfo=<bq>,Subject=<br>,Subject Alternative Name - Other Name=<br>,Issuer=<br>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld60>,CVPN3000/ASA/PIX7x-Client-Type=<fld61>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AcsSessionID=%{sessionid},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{ai},AuthenticationMethod=%{authmethod},Called-Station-ID=%{calling_to},Calling-Station-ID=%{connectionid},ConfigVersionId=%{al},CPMSessionID=%{sessionid},DestinationIPAddress=%{daddr},DetailedInfo=%{info},Device IP Address=%{hostip},Device Type=%{obj_type},EapAuthentication=%{bm},EapTunnel=%{bk}, EndPointMACAddress=%{dmacaddr},FailureReason=%{result},IdentityAccessRestricted=%{ao},IdentitySelectionMatchedRule=%{ap},ISEPolicySetName=%{aq},Location=%{location_desc},NAS-Identifier=%{application},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},NAS-Port-Type=%{context},NasRetransmissionTimeout=%{av},NetworkDeviceGroups=%{aw},NetworkDeviceName=%{node},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{az},Service-Type=%{service},Step=%{bq},StepData=%{br},StepLatency=%{bh},UserName=%{d},User-Name=%{k},RadiusPacketType=%{bi},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},Device Port=%{network_port},DestinationPort=%{dport},Protocol=%{protocol},RequestLatency=%{dclass_counter1},Framed-IP-Address=%{saddr},Framed-MTU=%{cd},NAS-Port-Id=%{interface},EAP-Key-Name=%{cf},cisco-av-pair=%{info},cisco-nas-port=%{stransport},OriginalUserName=%{c_username},UseCase=%{ci},EapChainingResult=%{ck},PostureAssessmentStatus=%{cl},EndPointMatchedProfile=%{cm},HostIdentityGroup=%{cn},PostureStatus=%{disposition},State=%{event_state},SelectedAuthorizationProfiles=%{cq},IdentityGroup=%{group_object},AuthorizationPolicyMatchedRule=%{rulename},UserType=%{da},DeviceRegistrationStatus=%{result},Acct-Terminate-Cause=%{action},Event-Timestamp=%{event_time_string},AD-Groups-Names=%{dg},ExternalGroups=%{dh},AD-Domain=%{domain},Days to Expiry=%{br},Serial Number=%{serial_number},Subject - Common Name=%{br},CN=%{br},IssuedPacInfo=%{bq},Subject=%{br},Subject Alternative Name - Other Name=%{br},Issuer=%{br},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld60},CVPN3000/ASA/PIX7x-Client-Type=%{fld61}" }
				id => "message-CISE_Passed_Authentications:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{d}"
					"[event][id]" => "CISE_Passed_Authentications:02"
					"[rsa][message][id1]" => "CISE_Passed_Authentications:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Passed_Authentications:03
		# line in RSA: Class=<fld2>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, cisco-av-pair=<m>, AcsSessionID=<sessionid>, SelectedAccessService=<service>, FailureReason=<result>, Step=<ao>,LogicalProfile=<qo>, NetworkDeviceGroups=<ac>, CPMSessionID=<sessionid>, EndPointMACAddress=<dmacaddr>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Location=<location_desc>, Device Type=<obj_type>, Phases=<cp>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, IdentityPolicyMatchedRule=<rule>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, Response=<info>, EndPointMatchedProfile=<fld11>, EapAuthentication=<bm>, EapTunnel=<bk>, NAS-Port-Type=<context>, NAS-Port-Id=<interface>,  Model Name=<ay>, Software Version=<version>, All Device Types=<az>, Event-Timestamp=<event_time_string>, StepLatency=<pi>, DetailedInfo=<info>,Service-Type=<service>,StepData=<br>,IdentitySelectionMatchedRule=<fld19>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,AD-Domain=<domain>,IdentityAccessRestricted=<fld79>,NasRetransmissionTimeout=<ei>,AuthenticationMethod=<authmethod>,NetworkDeviceName=<node>,User-Name=<k>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Serial Number=<serial_number>,Subject - Common Name=<br>,AuthorizationPolicyMatchedRule=<rulename>,AD-Groups-Names=<br>,Subject Alternative Name=<br>,Subject - Organization Unit=<bs>,PostureAssessmentStatus=<bt>,Subject - Organization=<bv>,Subject - Serial Number=<fld50>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Class=%{fld2}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, cisco-av-pair=%{m}, AcsSessionID=%{sessionid}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{ao},LogicalProfile=%{qo}, NetworkDeviceGroups=%{ac}, CPMSessionID=%{sessionid}, EndPointMACAddress=%{dmacaddr}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Location=%{location_desc}, Device Type=%{obj_type}, Phases=%{cp}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, IdentityPolicyMatchedRule=%{rule}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, Response=%{info}, EndPointMatchedProfile=%{fld11}, EapAuthentication=%{bm}, EapTunnel=%{bk}, NAS-Port-Type=%{context}, NAS-Port-Id=%{interface},  Model Name=%{ay}, Software Version=%{version}, All Device Types=%{az}, Event-Timestamp=%{event_time_string}, StepLatency=%{pi}, DetailedInfo=%{info},Service-Type=%{service},StepData=%{br},IdentitySelectionMatchedRule=%{fld19},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},AD-Domain=%{domain},IdentityAccessRestricted=%{fld79},NasRetransmissionTimeout=%{ei},AuthenticationMethod=%{authmethod},NetworkDeviceName=%{node},User-Name=%{k},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Serial Number=%{serial_number},Subject - Common Name=%{br},AuthorizationPolicyMatchedRule=%{rulename},AD-Groups-Names=%{br},Subject Alternative Name=%{br},Subject - Organization Unit=%{bs},PostureAssessmentStatus=%{bt},Subject - Organization=%{bv},Subject - Serial Number=%{fld50}" }
				id => "message-CISE_Passed_Authentications:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{k}"
					"[event][id]" => "CISE_Passed_Authentications:03"
					"[rsa][message][id1]" => "CISE_Passed_Authentications:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Passed_Authentications:04
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, IdentityDn=<fld92>, CPMSessionID=<sessionid>, ou=<fld93>, dc=<fld93>, PostureAssessmentStatus=<fld94>, Device Type=<obj_type>, Location=<location_desc>, Model Name=<fld97>, PostureStatus=<disposition>,UserType=<fld9>, EndPointMACAddress=<dmacaddr>,EndPointMatchedProfile=<fld11>,HostIdentityGroup=<fld12>,Software Version=<version>, EapAuthentication=<fld48>,ISEPolicySetName=<fld13>, AllowedProtocolMatchedRule=<rulename>, IdentitySelectionMatchedRule=<fld19>, Phases=<fld22>,  DeviceRegistrationStatus=<result>, UseCase=<ai>, All Device Types=<ay>, NACRadiusUserName=<c_username>, All Stages=<az>, dNSHostName=<hostname>,EapTunnel=<br>,IssuedPacInfo=<bq>,EapChainingResult=<ck>,distinguishedName=<ci>,Airespace-Wlan-Id=<wlan>,Device IP Address=<hostip>, LogicalProfile=<pi>, EndPointPolicy=<pz>, StepLatency=<py>, Wireless=<fld61>, Site ID=<fld62>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld63>,AcsSessionID=<sessionid>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<ai>,AuthenticationMethod=<authmethod>,Called-Station-ID=<calling_to>,Calling-Station-ID=<connectionid>,ConfigVersionId=<al>,CPMSessionID=<sessionid>,DestinationIPAddress=<daddr>,DetailedInfo=<info>,Device Type=<obj_type>,EapAuthentication=<bm>,EapTunnel=<bk>,FailureReason=<result>,IdentityAccessRestricted=<ao>,IdentitySelectionMatchedRule=<ap>,ISEPolicySetName=<aq>,Location=<location_desc>,NAS-Identifier=<application>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NasRetransmissionTimeout=<av>,NetworkDeviceGroups=<aw>,NetworkDeviceName=<node>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<az>,Service-Type=<service>,Step=<bq>,StepData=<br>,StepLatency=<bh>,UserName=<d>,User-Name=<k>,RadiusPacketType=<bi>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,Device Port=<network_port>,DestinationPort=<dport>,Protocol=<protocol>,Framed-IP-Address=<saddr>,Framed-MTU=<cd>,NAS-Port-Id=<interface>,EAP-Key-Name=<cf>,cisco-av-pair=<info>,cisco-nas-port=<stransport>,OriginalUserName=<c_username>,UseCase=<ci>,PostureAssessmentStatus=<cl>,EndPointMatchedProfile=<cm>,HostIdentityGroup=<cn>,PostureStatus=<disposition>,State=<event_state>,SelectedAuthorizationProfiles=<cq>,IdentityGroup=<group_object>,AuthorizationPolicyMatchedRule=<rulename>,UserType=<da>,DeviceRegistrationStatus=<result>,Acct-Terminate-Cause=<action>,Event-Timestamp=<event_time_string>,AD-Groups-Names=<dg>,ExternalGroups=<dh>,AD-Domain=<domain>,Days to Expiry=<br>,Serial Number=<serial_number>,Subject - Common Name=<br>,CN=<br>,Subject=<br>,Subject Alternative Name - Other Name=<br>,Issuer=<br>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld60>,CVPN3000/ASA/PIX7x-Client-Type=<fld61>,Class=<fld2>, Called-Station-ID=<calling_to>, NAS-Identifier=<application>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<as>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Session-Id=<sessionid>, Acct-Authentic=<au>, Acct-Session-Time=<duration>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, undefined-52=<cf>, undefined-53=<cg>, Tunnel-Type=<bq>, Tunnel-Medium-Type=<br>, Tunnel-Private-Group-ID=<bs>, Airespace-Wlan-Id=<wlan>, cisco-av-pair=<m>, SelectedAccessService=<service>, FailureReason=<result>, Step=<ao>,LogicalProfile=<qo>, NetworkDeviceGroups=<ac>, ISEPolicySetName=<cj>, AllowedProtocolMatchedRule=<rulename>, TotalFailedAttempts=<cl>, TotalFailedTime=<cm>, Phases=<cp>, SelectedAuthenticationIdentityStores=<ap>, ServiceSelectionMatchedRule=<aq>, UserType=<fld9>, DeviceRegistrationStatus=<result>, HostIdentityGroup=<fld12>, HostIdentityGroup=<fld4>, EndPointMatchedProfile=<fld11>, EapAuthentication=<bm>, EapTunnel=<bk>, NAS-Port-Id=<interface>,  Model Name=<ay>, Software Version=<version>, All Device Types=<az>, Event-Timestamp=<event_time_string>, StepLatency=<pi>, DetailedInfo=<info>,IdentitySelectionMatchedRule=<fld19>,IdentityAccessRestricted=<fld79>,NasRetransmissionTimeout=<ei>,AD-Groups-Names=<br>,Subject Alternative Name=<br>,Subject - Organization Unit=<bs>,PostureAssessmentStatus=<bt>,Subject - Organization=<bv>,Subject - Serial Number=<fld50>,Subject - Domain Component=<bl>,Step=<ao>,Subject - Organization Unit=<za>,C=<bf>,AD-User-Resolved-DNs=<br>,Subject - Common Name=<66>,ExternalGroups=<br>,AD-Host-Resolved-Identities=<br>,UseCase=<d>,Issuer - Country=<bj>,IdentityDn=<64>,Template Name=<br>,Subject Alternative Name - EMail=<bl>,O=<bc>,DC=<br>,Key Usage=<br>,AD-User-NetBios-Name=<br>,Issuer - Common Name=<br>,GN=<bm>,AD-Host-DNS-Domain=<br>,PostureAssessmentStatus=<br>,Subject Alternative Name - DNS=<br>,Extended Key Usage - OID=<br>,Subject - Organization=<zc>,Issuer - Organization Unit=<bh>,Subject Alternative Name - Other Name=<bk>,OpenSSLErrorMessage=<result>,Issuer - Organization=<bg>,Issuer - Domain Component=<br>,Issuer - Location=<bi>,SelectedAccessService=<service>,SERIALNUMBER=<bn>,S=<be>,Wireless=<61>,AD-Host-Join-Point=<br>,Issuer - State or Province=<bk>,OpenSSLErrorStack=<cert_error>,L=<bd>,AD-Host-NetBios-Name=<br>, Site ID=<62>,Subject - Country=<zb>,IdentityAccessRestricted=<br>,AD-Host-Resolved-DNs=<br>,OU=<br>,AD-Host-Candidate-Identities=<br>,Extended Key Usage - Name=<br>,NetworkDeviceProfileName=<fld82>,NetworkDeviceProfileId=<fld89>,IsThirdPartyDeviceFlow=<fld90>,RadiusFlowType=<fld91>,SSID=<ssid>,TLSCipher=<s_cipher>,TLSVersion=<version>,allowEasyWiredSession=<fld83>,Network Device Profile=<fld85>,AKI=<fld84>,Connect-Info=<fld64>,DTLSSupport=<fld68>,wired=<fld69>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, IdentityDn=%{fld92}, CPMSessionID=%{sessionid}, ou=%{fld93}, dc=%{fld93}, PostureAssessmentStatus=%{fld94}, Device Type=%{obj_type}, Location=%{location_desc}, Model Name=%{fld97}, PostureStatus=%{disposition},UserType=%{fld9}, EndPointMACAddress=%{dmacaddr},EndPointMatchedProfile=%{fld11},HostIdentityGroup=%{fld12},Software Version=%{version}, EapAuthentication=%{fld48},ISEPolicySetName=%{fld13}, AllowedProtocolMatchedRule=%{rulename}, IdentitySelectionMatchedRule=%{fld19}, Phases=%{fld22},  DeviceRegistrationStatus=%{result}, UseCase=%{ai}, All Device Types=%{ay}, NACRadiusUserName=%{c_username}, All Stages=%{az}, dNSHostName=%{hostname},EapTunnel=%{br},IssuedPacInfo=%{bq},EapChainingResult=%{ck},distinguishedName=%{ci},Airespace-Wlan-Id=%{wlan},Device IP Address=%{hostip}, LogicalProfile=%{pi}, EndPointPolicy=%{pz}, StepLatency=%{py}, Wireless=%{fld61}, Site ID=%{fld62},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld63},AcsSessionID=%{sessionid},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{ai},AuthenticationMethod=%{authmethod},Called-Station-ID=%{calling_to},Calling-Station-ID=%{connectionid},ConfigVersionId=%{al},CPMSessionID=%{sessionid},DestinationIPAddress=%{daddr},DetailedInfo=%{info},Device Type=%{obj_type},EapAuthentication=%{bm},EapTunnel=%{bk},FailureReason=%{result},IdentityAccessRestricted=%{ao},IdentitySelectionMatchedRule=%{ap},ISEPolicySetName=%{aq},Location=%{location_desc},NAS-Identifier=%{application},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},NAS-Port-Type=%{context},NasRetransmissionTimeout=%{av},NetworkDeviceGroups=%{aw},NetworkDeviceName=%{node},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{az},Service-Type=%{service},Step=%{bq},StepData=%{br},StepLatency=%{bh},UserName=%{d},User-Name=%{k},RadiusPacketType=%{bi},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},Device Port=%{network_port},DestinationPort=%{dport},Protocol=%{protocol},Framed-IP-Address=%{saddr},Framed-MTU=%{cd},NAS-Port-Id=%{interface},EAP-Key-Name=%{cf},cisco-av-pair=%{info},cisco-nas-port=%{stransport},OriginalUserName=%{c_username},UseCase=%{ci},PostureAssessmentStatus=%{cl},EndPointMatchedProfile=%{cm},HostIdentityGroup=%{cn},PostureStatus=%{disposition},State=%{event_state},SelectedAuthorizationProfiles=%{cq},IdentityGroup=%{group_object},AuthorizationPolicyMatchedRule=%{rulename},UserType=%{da},DeviceRegistrationStatus=%{result},Acct-Terminate-Cause=%{action},Event-Timestamp=%{event_time_string},AD-Groups-Names=%{dg},ExternalGroups=%{dh},AD-Domain=%{domain},Days to Expiry=%{br},Serial Number=%{serial_number},Subject - Common Name=%{br},CN=%{br},Subject=%{br},Subject Alternative Name - Other Name=%{br},Issuer=%{br},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld60},CVPN3000/ASA/PIX7x-Client-Type=%{fld61},Class=%{fld2}, Called-Station-ID=%{calling_to}, NAS-Identifier=%{application}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{as}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{au}, Acct-Session-Time=%{duration}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, undefined-52=%{cf}, undefined-53=%{cg}, Tunnel-Type=%{bq}, Tunnel-Medium-Type=%{br}, Tunnel-Private-Group-ID=%{bs}, Airespace-Wlan-Id=%{wlan}, cisco-av-pair=%{m}, SelectedAccessService=%{service}, FailureReason=%{result}, Step=%{ao},LogicalProfile=%{qo}, NetworkDeviceGroups=%{ac}, ISEPolicySetName=%{cj}, AllowedProtocolMatchedRule=%{rulename}, TotalFailedAttempts=%{cl}, TotalFailedTime=%{cm}, Phases=%{cp}, SelectedAuthenticationIdentityStores=%{ap}, ServiceSelectionMatchedRule=%{aq}, UserType=%{fld9}, DeviceRegistrationStatus=%{result}, HostIdentityGroup=%{fld12}, HostIdentityGroup=%{fld4}, EndPointMatchedProfile=%{fld11}, EapAuthentication=%{bm}, EapTunnel=%{bk}, NAS-Port-Id=%{interface},  Model Name=%{ay}, Software Version=%{version}, All Device Types=%{az}, Event-Timestamp=%{event_time_string}, StepLatency=%{pi}, DetailedInfo=%{info},IdentitySelectionMatchedRule=%{fld19},IdentityAccessRestricted=%{fld79},NasRetransmissionTimeout=%{ei},AD-Groups-Names=%{br},Subject Alternative Name=%{br},Subject - Organization Unit=%{bs},PostureAssessmentStatus=%{bt},Subject - Organization=%{bv},Subject - Serial Number=%{fld50},Subject - Domain Component=%{bl},Step=%{ao},Subject - Organization Unit=%{za},C=%{bf},AD-User-Resolved-DNs=%{br},Subject - Common Name=%{66},ExternalGroups=%{br},AD-Host-Resolved-Identities=%{br},UseCase=%{d},Issuer - Country=%{bj},IdentityDn=%{64},Template Name=%{br},Subject Alternative Name - EMail=%{bl},O=%{bc},DC=%{br},Key Usage=%{br},AD-User-NetBios-Name=%{br},Issuer - Common Name=%{br},GN=%{bm},AD-Host-DNS-Domain=%{br},PostureAssessmentStatus=%{br},Subject Alternative Name - DNS=%{br},Extended Key Usage - OID=%{br},Subject - Organization=%{zc},Issuer - Organization Unit=%{bh},Subject Alternative Name - Other Name=%{bk},OpenSSLErrorMessage=%{result},Issuer - Organization=%{bg},Issuer - Domain Component=%{br},Issuer - Location=%{bi},SelectedAccessService=%{service},SERIALNUMBER=%{bn},S=%{be},Wireless=%{61},AD-Host-Join-Point=%{br},Issuer - State or Province=%{bk},OpenSSLErrorStack=%{cert_error},L=%{bd},AD-Host-NetBios-Name=%{br}, Site ID=%{62},Subject - Country=%{zb},IdentityAccessRestricted=%{br},AD-Host-Resolved-DNs=%{br},OU=%{br},AD-Host-Candidate-Identities=%{br},Extended Key Usage - Name=%{br},NetworkDeviceProfileName=%{fld82},NetworkDeviceProfileId=%{fld89},IsThirdPartyDeviceFlow=%{fld90},RadiusFlowType=%{fld91},SSID=%{ssid},TLSCipher=%{s_cipher},TLSVersion=%{version},allowEasyWiredSession=%{fld83},Network Device Profile=%{fld85},AKI=%{fld84},Connect-Info=%{fld64},DTLSSupport=%{fld68},wired=%{fld69}" }
				id => "message-CISE_Passed_Authentications:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"timezone" => "%{hfld8}"
				"username" => "%{d}"
					"[event][id]" => "CISE_Passed_Authentications:04"
					"[rsa][message][id1]" => "CISE_Passed_Authentications:04"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Passed_Authentications:05
		# line in RSA: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-CISE_Passed_Authentications:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_Passed_Authentications:05"
					"[rsa][message][id1]" => "CISE_Passed_Authentications:05"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, UserName=<username>, Protocol=<protocol>, AcsSessionID=<sessionid>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, CurrentIDStoreName=<fld19>, ExternalGroups=<fld17>, IdentityAccessRestricted=<fld79>, sAMAccountName=<fld80>, Response=<info>, displayName=<hy>, givenName=<iy>, department=<jy>, memberOf=<ky>, distinguishedName=<cy>, OU=<dy>, DC=<ey>, IdentityAccessRestricted=<fy>, CN=<fg>, DetailedInfo=<info>, CPMSessionID=<sessionid>, AD-Log-Id=<fi>,Description=<event_description>,ACS-RESERVED-Never-Expired=<bi>,Real Name=<by>,UserIdentityGroup=<group>,HostIdentityGroup=<bz>,AcsChangePasswordMethod=<ca>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, UserName=%{username}, Protocol=%{protocol}, AcsSessionID=%{sessionid}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, CurrentIDStoreName=%{fld19}, ExternalGroups=%{fld17}, IdentityAccessRestricted=%{fld79}, sAMAccountName=%{fld80}, Response=%{info}, displayName=%{hy}, givenName=%{iy}, department=%{jy}, memberOf=%{ky}, distinguishedName=%{cy}, OU=%{dy}, DC=%{ey}, IdentityAccessRestricted=%{fy}, CN=%{fg}, DetailedInfo=%{info}, CPMSessionID=%{sessionid}, AD-Log-Id=%{fi},Description=%{event_description},ACS-RESERVED-Never-Expired=%{bi},Real Name=%{by},UserIdentityGroup=%{group},HostIdentityGroup=%{bz},AcsChangePasswordMethod=%{ca}" }
			id => "msgParserId35"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId36
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, CPMSessionID=<sessionid>, NADAddress=<saddr>, EndpointCoA=<info>, EPMacAddress=<dmacaddr>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, CPMSessionID=%{sessionid}, NADAddress=%{saddr}, EndpointCoA=%{info}, EPMacAddress=%{dmacaddr}" }
			id => "msgParserId36"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, AdminInterface=<logon_type>, AdminIPAddress=<saddr>, AdminSession=<sessionid>, AdminName=<administrator>, ConfigTransactionID=<fld35>, PolicyName=<policyname>, LogFileName=<filename>, LogErrorMessage=<result>, MissingLogMessages=<fld36>, DestinationPort=<dport>, LoggerName=<fld37>, MessageCode=<fld38>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, AdminInterface=%{logon_type}, AdminIPAddress=%{saddr}, AdminSession=%{sessionid}, AdminName=%{administrator}, ConfigTransactionID=%{fld35}, PolicyName=%{policyname}, LogFileName=%{filename}, LogErrorMessage=%{result}, MissingLogMessages=%{fld36}, DestinationPort=%{dport}, LoggerName=%{fld37}, MessageCode=%{fld38}" }
			id => "msgParserId37"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Passed_Authentications" {
		# MESSAGE Passed_Authentications
		# line in RSA: ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, Called-Station-ID=<calling_to>, OU=<fld54>, DC=<fld31>, Real Name=<fld79>, Description=<event_description>, IdentityDn=<fld81>, ou=<fld82>, dc=<fld83>, CPMSessionID=<sessionid>, DestinationIPAddress=<daddr>, DestinationPort=<dport>,Device Type=<obj_type>,Location=<location_desc>,Model Name=<fld99>,Software Version=<version>,PostureStatus=<disposition>,Event-Timestamp=<event_time_string>,Framed-IP-Address=<saddr>,Framed-MTU=<fld10>,EAP-Key-Name=<fld11>,UseCase=<fld29>,Company=<fld13>,State=<event_state>,Tunnel-Type=<fld37>,Tunnel-Medium-Type=<fld38>,Tunnel-Private-Group-ID=<fld39>,Airespace-Wlan-Id=<wlan>,EapAuthentication=<bm>,DeviceRegistrationStatus=<result>,All Stages=<ci>,Wireless=<fld60>,Site ID=<fld61>,msExchHomeServerName=<application>,extensionAttribute1=<fld63>,EndPointMACAddress=<dmacaddr>,Acct-Session-Id=<sessionid>,Acct-Terminate-Cause=<action>,StepLatency=<zd>,NACRadiusUserName=<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, Called-Station-ID=%{calling_to}, OU=%{fld54}, DC=%{fld31}, Real Name=%{fld79}, Description=%{event_description}, IdentityDn=%{fld81}, ou=%{fld82}, dc=%{fld83}, CPMSessionID=%{sessionid}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport},Device Type=%{obj_type},Location=%{location_desc},Model Name=%{fld99},Software Version=%{version},PostureStatus=%{disposition},Event-Timestamp=%{event_time_string},Framed-IP-Address=%{saddr},Framed-MTU=%{fld10},EAP-Key-Name=%{fld11},UseCase=%{fld29},Company=%{fld13},State=%{event_state},Tunnel-Type=%{fld37},Tunnel-Medium-Type=%{fld38},Tunnel-Private-Group-ID=%{fld39},Airespace-Wlan-Id=%{wlan},EapAuthentication=%{bm},DeviceRegistrationStatus=%{result},All Stages=%{ci},Wireless=%{fld60},Site ID=%{fld61},msExchHomeServerName=%{application},extensionAttribute1=%{fld63},EndPointMACAddress=%{dmacaddr},Acct-Session-Id=%{sessionid},Acct-Terminate-Cause=%{action},StepLatency=%{zd},NACRadiusUserName=%{c_username}" }
				id => "message-Passed_Authentications"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications"
					"[rsa][message][id1]" => "Passed_Authentications"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:01
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, inside) CmdArgAV=<fld46>, outside) CmdArgAV=<fld47>, Protocol-Argument=<fld33>, GroupMappingPolicyMatchedRule=<fld28>, EapTunnel=<fld29>, DetailedInfo=<info>, EapAuthentication=<fld48>, Framed-MTU=<fld12>, State=<event_state>, Called-Station-ID=<calling_to>, Tunnel-Type=<fld37>, Tunnel-Medium-Type=<fld38>, Tunnel-Private-Group-ID=<fld39>, Tunnel-Client-Endpoint=<fld49>, MS-CHAP2-Response=<fld50>, memberOf=<fld51>, OU=<fld54>, DC=<fld31>, Real Name=<fld79>, Description=<event_description>, priv_lvl=<privilege>, max_priv_lvl=<fld78>, sAMAccountName=<fld80>, Framed-Protocol=<protocol>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, inside) CmdArgAV=%{fld46}, outside) CmdArgAV=%{fld47}, Protocol-Argument=%{fld33}, GroupMappingPolicyMatchedRule=%{fld28}, EapTunnel=%{fld29}, DetailedInfo=%{info}, EapAuthentication=%{fld48}, Framed-MTU=%{fld12}, State=%{event_state}, Called-Station-ID=%{calling_to}, Tunnel-Type=%{fld37}, Tunnel-Medium-Type=%{fld38}, Tunnel-Private-Group-ID=%{fld39}, Tunnel-Client-Endpoint=%{fld49}, MS-CHAP2-Response=%{fld50}, memberOf=%{fld51}, OU=%{fld54}, DC=%{fld31}, Real Name=%{fld79}, Description=%{event_description}, priv_lvl=%{privilege}, max_priv_lvl=%{fld78}, sAMAccountName=%{fld80}, Framed-Protocol=%{protocol}," }
				id => "message-Passed_Authentications:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:01"
					"[rsa][message][id1]" => "Passed_Authentications:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:02
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>,DestinationIPAddress=<daddr>,DestinationPort=<dport>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>,CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=<fld9>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, Step=<fld5>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, Called-Station-ID=<calling_to>, Tunnel-Client-Endpoint=<fld49>,State=<event_state>,UserIdentityGroup=<group>,IP address=<saddr>,Response=<info>,SelectedAuthenticationIdentityStores=<ap>,SelectedQueryIdentityStores=<ay>,NetworkDeviceName=<node>,NetworkDeviceGroups=<ac>,ServiceSelectionMatchedRule=<aq>,IdentityPolicyMatchedRule=<rule>,GroupMappingPolicyMatchedRule=<bj>,AuthorizationPolicyMatchedRule=<rulename>, Service-Type=<service>, NAS-Identifier=<application>, Framed-MTU=<fld10>, Tunnel-Type=<fld37>, Tunnel-Medium-Type=<fld38>, Tunnel-Private-Group-ID=<fld39>, Airespace-Wlan-Id=<wlan>, OriginalUserName=<c_username>, UseCase=<ni>, MisconfiguredClientFixReason=<nb>, NAS-Port-Id=<interface>, Framed-IP-Address=<saddr>, EAP-Key-Name=<fld11>, Acct-Session-Id=<sessionid>, ADDomain=<domain>, IdentityAccessRestricted=<zy>, ExternalGroups=<zx>, Framed-Protocol=<protocol>, VendorSpecific=<po>, attribute-77=<lp>, Acct-Multi-Session-Id=<sessionid>, Proxy-State=<event_state>, Event-Timestamp=<event_time_string>, MS-CHAP2-Response=<ik>, MS-RAS-Vendor=<ol>, attribute-89=<ge>, attribute-131=<gi>, Infoblox-version=<kl>, Infoblox-Product-Name=<ds>,homePhone=<du>, pager=<dv>, mobile=<dw>, QueryIdentityStores=<dx>,undefined-89=<dz>,undefined-131=<br>,Days to Expiry=<ea>,ACS-RESERVED-Never-Expired=<eb>, Framed-Compression=<fld61>, Connect-Info=<fld62>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld63>,CVPN3000/ASA/PIX7x-Client-Type=<fld64>,MS-CHAP-NT-Enc-PW=<fld65>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip},DestinationIPAddress=%{daddr},DestinationPort=%{dport}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context},CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=%{fld9}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, Step=%{fld5}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, Called-Station-ID=%{calling_to}, Tunnel-Client-Endpoint=%{fld49},State=%{event_state},UserIdentityGroup=%{group},IP address=%{saddr},Response=%{info},SelectedAuthenticationIdentityStores=%{ap},SelectedQueryIdentityStores=%{ay},NetworkDeviceName=%{node},NetworkDeviceGroups=%{ac},ServiceSelectionMatchedRule=%{aq},IdentityPolicyMatchedRule=%{rule},GroupMappingPolicyMatchedRule=%{bj},AuthorizationPolicyMatchedRule=%{rulename}, Service-Type=%{service}, NAS-Identifier=%{application}, Framed-MTU=%{fld10}, Tunnel-Type=%{fld37}, Tunnel-Medium-Type=%{fld38}, Tunnel-Private-Group-ID=%{fld39}, Airespace-Wlan-Id=%{wlan}, OriginalUserName=%{c_username}, UseCase=%{ni}, MisconfiguredClientFixReason=%{nb}, NAS-Port-Id=%{interface}, Framed-IP-Address=%{saddr}, EAP-Key-Name=%{fld11}, Acct-Session-Id=%{sessionid}, ADDomain=%{domain}, IdentityAccessRestricted=%{zy}, ExternalGroups=%{zx}, Framed-Protocol=%{protocol}, VendorSpecific=%{po}, attribute-77=%{lp}, Acct-Multi-Session-Id=%{sessionid}, Proxy-State=%{event_state}, Event-Timestamp=%{event_time_string}, MS-CHAP2-Response=%{ik}, MS-RAS-Vendor=%{ol}, attribute-89=%{ge}, attribute-131=%{gi}, Infoblox-version=%{kl}, Infoblox-Product-Name=%{ds},homePhone=%{du}, pager=%{dv}, mobile=%{dw}, QueryIdentityStores=%{dx},undefined-89=%{dz},undefined-131=%{br},Days to Expiry=%{ea},ACS-RESERVED-Never-Expired=%{eb}, Framed-Compression=%{fld61}, Connect-Info=%{fld62},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld63},CVPN3000/ASA/PIX7x-Client-Type=%{fld64},MS-CHAP-NT-Enc-PW=%{fld65}" }
				id => "message-Passed_Authentications:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:02"
					"[rsa][message][id1]" => "Passed_Authentications:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:03
		# line in RSA: ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, AcsSessionID=<sessionid>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedShellProfile=<fld15>, IdentityGroup=<group_object>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, ACSVersion=<version>, Type=<event_type>, AVPair=<context>, Protocol-Argument=<fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, AcsSessionID=%{sessionid}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedShellProfile=%{fld15}, IdentityGroup=%{group_object}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, ACSVersion=%{version}, Type=%{event_type}, AVPair=%{context}, Protocol-Argument=%{fld29}" }
				id => "message-Passed_Authentications:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:03"
					"[rsa][message][id1]" => "Passed_Authentications:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:04
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<fld3>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Service-Type=<service>, Framed-MTU=<fld10>, State=<event_state>, VendorSpecific=<fld12>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, NAS-Identifier=<application>, NAS-Port-Type=<context>, AcsSessionID=<sessionid>, AuthenticationIdentityStore=<fld18>, SelectedAccessService=<service>, ExternalGroups=<fld20>, distinguishedName=<fld21>, cn=<fld22>, displayName=<fld23>, sAMAccountName=<fld24>, memberOf=<fld25>,OU=<fld26>,DC=<fld27>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld29>, Service=<fld30>, User=<username>, SelectedShellProfile=<fld32>, IdentityGroup=<group_object>, SelectedAuthenticationIdentityStores=<fld34>, Step=<fld35>, Response=<info>, NetworkDeviceName=<node>, NetworkDeviceGroups=<fld36>, ServiceSelectionMatchedRule=<fld37>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, Port=<fld40>, Remote-Address=<saddr>, IdentityAccessRestricted=<fld42>, GroupMappingPolicyMatchedRule=<pk>, CmdSet=<action>, Authen-Method=<authmethod>, Service-Argument=<ap>, MatchedCommandSet=<ah>, SelectedCommandSet=<ai>, EapTunnel=<ev>, EapAuthentication=<ew>, givenName=<er>, department=<ei>, CN=<eb>,CmdArgAV=<zd>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{fld3}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Service-Type=%{service}, Framed-MTU=%{fld10}, State=%{event_state}, VendorSpecific=%{fld12}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, NAS-Identifier=%{application}, NAS-Port-Type=%{context}, AcsSessionID=%{sessionid}, AuthenticationIdentityStore=%{fld18}, SelectedAccessService=%{service}, ExternalGroups=%{fld20}, distinguishedName=%{fld21}, cn=%{fld22}, displayName=%{fld23}, sAMAccountName=%{fld24}, memberOf=%{fld25},OU=%{fld26},DC=%{fld27}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld29}, Service=%{fld30}, User=%{username}, SelectedShellProfile=%{fld32}, IdentityGroup=%{group_object}, SelectedAuthenticationIdentityStores=%{fld34}, Step=%{fld35}, Response=%{info}, NetworkDeviceName=%{node}, NetworkDeviceGroups=%{fld36}, ServiceSelectionMatchedRule=%{fld37}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, Port=%{fld40}, Remote-Address=%{saddr}, IdentityAccessRestricted=%{fld42}, GroupMappingPolicyMatchedRule=%{pk}, CmdSet=%{action}, Authen-Method=%{authmethod}, Service-Argument=%{ap}, MatchedCommandSet=%{ah}, SelectedCommandSet=%{ai}, EapTunnel=%{ev}, EapAuthentication=%{ew}, givenName=%{er}, department=%{ei}, CN=%{eb},CmdArgAV=%{zd}" }
				id => "message-Passed_Authentications:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:04"
					"[rsa][message][id1]" => "Passed_Authentications:04"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:05
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Type=<event_type>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, IdentityDn=<fld92>, CPMSessionID=<sessionid>, ou=<fld93>, dc=<fld93>, PostureAssessmentStatus=<fld94>, Device Type=<obj_type>, Location=<location_desc>, Model Name=<fld97>, PostureStatus=<disposition>,UserType=<fld9>, EndPointMACAddress=<dmacaddr>,EndPointMatchedProfile=<fld11>,HostIdentityGroup=<fld12>,Software Version=<version>, EapAuthentication=<fld48>,ISEPolicySetName=<fld13>, AllowedProtocolMatchedRule=<rulename>, IdentitySelectionMatchedRule=<fld19>, Phases=<fld22>,  DeviceRegistrationStatus=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Type=%{event_type}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, IdentityDn=%{fld92}, CPMSessionID=%{sessionid}, ou=%{fld93}, dc=%{fld93}, PostureAssessmentStatus=%{fld94}, Device Type=%{obj_type}, Location=%{location_desc}, Model Name=%{fld97}, PostureStatus=%{disposition},UserType=%{fld9}, EndPointMACAddress=%{dmacaddr},EndPointMatchedProfile=%{fld11},HostIdentityGroup=%{fld12},Software Version=%{version}, EapAuthentication=%{fld48},ISEPolicySetName=%{fld13}, AllowedProtocolMatchedRule=%{rulename}, IdentitySelectionMatchedRule=%{fld19}, Phases=%{fld22},  DeviceRegistrationStatus=%{result}" }
				id => "message-Passed_Authentications:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:05"
					"[rsa][message][id1]" => "Passed_Authentications:05"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:06
		# line in RSA: SelectedAuthenticationIdentityStores=<fld27>, NetworkDeviceName=<node>, NetworkDeviceGroups=<fld28>, ServiceSelectionMatchedRule=<fld29>, IdentityPolicyMatchedRule=<rule>, UserIdentityGroup=<group>, Real Name=<user_fullname>, Organization Name=<fld32>, BEMS ID=<fld33>, US Person=<fld34>, Email Address=<mail_id>, Role=<user_role>, Manager BEMSID=<fld35>, Budget=<fld36>, Country=<location_country>, Response=<info>, Role - PAN=<fld37>, Role - HP VC Access=<fld38>, Step=<fld39>, AuthorizationPolicyMatchedRule=<rulename>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>,SelectedQueryIdentityStores=<bg>,Description=<event_description>,ACS-RESERVED-Never-Expired=<bi>,IdentityDn=<bk>,ou=<bl>,o=<bm>,MSG_WAN_ACCESS=<fld61>,MSG_LAN_ACCESS=<fld62>,NOC_NAC_GUEST_SERVER=<fld63>,NOC_ISE_ACCESS=<fld64>,Serviceaccount=<fld65>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SelectedAuthenticationIdentityStores=%{fld27}, NetworkDeviceName=%{node}, NetworkDeviceGroups=%{fld28}, ServiceSelectionMatchedRule=%{fld29}, IdentityPolicyMatchedRule=%{rule}, UserIdentityGroup=%{group}, Real Name=%{user_fullname}, Organization Name=%{fld32}, BEMS ID=%{fld33}, US Person=%{fld34}, Email Address=%{mail_id}, Role=%{user_role}, Manager BEMSID=%{fld35}, Budget=%{fld36}, Country=%{location_country}, Response=%{info}, Role - PAN=%{fld37}, Role - HP VC Access=%{fld38}, Step=%{fld39}, AuthorizationPolicyMatchedRule=%{rulename}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr},SelectedQueryIdentityStores=%{bg},Description=%{event_description},ACS-RESERVED-Never-Expired=%{bi},IdentityDn=%{bk},ou=%{bl},o=%{bm},MSG_WAN_ACCESS=%{fld61},MSG_LAN_ACCESS=%{fld62},NOC_NAC_GUEST_SERVER=%{fld63},NOC_ISE_ACCESS=%{fld64},Serviceaccount=%{fld65}" }
				id => "message-Passed_Authentications:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:06"
					"[rsa][message][id1]" => "Passed_Authentications:06"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:07
		# line in RSA: ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, NAS-Port=<stransport>, Calling-Station-ID=<connectionid>, NAS-Port-Type=<context>, cisco-av-pair=<context>, AcsSessionID=<sessionid>, Action=<action>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Authen-Method=<authmethod>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Response=<info>, CmdSet=<action>, MatchedCommandSet=<fld24>, Service-Argument=<fld45>, AuthenticationIdentityStore=<fld7>, AuthenticationMethod=<authmethod>, SelectedAccessService=<service>, SelectedCommandSet=<fld18>, Step=<fld5>, SelectedAuthenticationIdentityStores=<fld27>, SelectedShellProfile=<fld15>, NetworkDeviceGroups=<fld6>, ServiceSelectionMatchedRule=<fld21>, IdentityPolicyMatchedRule=<rule>, ADDomain=<domain>, AuthorizationPolicyMatchedRule=<rulename>, IdentityAccessRestricted=<fld23>, ExternalGroups=<fld17>, Reply-Message=<fld35>, NAS-Port-Id=<interface>, SelectedQueryIdentityStores=<fld36>, QueryIdentityStores=<fld26>, SelectedAuthorizationProfiles=<fld16>, IdentityGroup=<group_object>, UserIdentityGroup=<group>, Service-Type=<service>, NAS-Identifier=<application>, AVPair=<context>, PrivilegeLevel=<privilege>, Called-Station-ID=<calling_to>, OU=<fld54>, DC=<fld31>, Real Name=<fld79>, Description=<event_description>, IdentityDn=<fld81>, ou=<fld82>, dc=<fld83>, CPMSessionID=<sessionid>, DestinationIPAddress=<daddr>, DestinationPort=<dport>,Device Type=<obj_type>,Location=<location_desc>,Model Name=<fld99>,Software Version=<version>,PostureStatus=<disposition>,Event-Timestamp=<event_time_string>,Framed-IP-Address=<saddr>,Framed-MTU=<fld10>,EAP-Key-Name=<fld11>,UseCase=<fld29>,Company=<fld13>,State=<event_state>,Tunnel-Type=<fld37>,Tunnel-Medium-Type=<fld38>,Tunnel-Private-Group-ID=<fld39>,Airespace-Wlan-Id=<wlan>,EapAuthentication=<bm>,DeviceRegistrationStatus=<result>,All Stages=<ci>,Wireless=<fld60>,Site ID=<fld61>,msExchHomeServerName=<application>,extensionAttribute1=<fld63>,EndPointMACAddress=<dmacaddr>,Acct-Session-Id=<sessionid>,Acct-Terminate-Cause=<action>,StepLatency=<zd>,NACRadiusUserName=<c_username>,ACSVersion=<version>, ConfigVersionId=<fld1>, Type=<event_type>, inside) CmdArgAV=<fld46>, outside) CmdArgAV=<fld47>, Protocol-Argument=<fld33>, GroupMappingPolicyMatchedRule=<fld28>, EapTunnel=<fld29>, DetailedInfo=<info>, EapAuthentication=<fld48>, Framed-MTU=<fld12>, State=<event_state>, Tunnel-Type=<fld37>, Tunnel-Medium-Type=<fld38>, Tunnel-Private-Group-ID=<fld39>, Tunnel-Client-Endpoint=<fld49>, MS-CHAP2-Response=<fld50>, memberOf=<fld51>, priv_lvl=<privilege>, max_priv_lvl=<fld78>, sAMAccountName=<fld80>, Framed-Protocol=<protocol>,,DestinationIPAddress=<daddr>,DestinationPort=<dport>,CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=<fld9>,UserIdentityGroup=<group>,IP address=<saddr>,Response=<info>,SelectedAuthenticationIdentityStores=<ap>,SelectedQueryIdentityStores=<ay>,NetworkDeviceName=<node>,NetworkDeviceGroups=<ac>,ServiceSelectionMatchedRule=<aq>,IdentityPolicyMatchedRule=<rule>,GroupMappingPolicyMatchedRule=<bj>,AuthorizationPolicyMatchedRule=<rulename>, Framed-MTU=<fld10>, Airespace-Wlan-Id=<wlan>, OriginalUserName=<c_username>, UseCase=<ni>, MisconfiguredClientFixReason=<nb>, Framed-IP-Address=<saddr>, EAP-Key-Name=<fld11>, Acct-Session-Id=<sessionid>, IdentityAccessRestricted=<zy>, ExternalGroups=<zx>, VendorSpecific=<po>, attribute-77=<lp>, Acct-Multi-Session-Id=<sessionid>, Proxy-State=<event_state>, Event-Timestamp=<event_time_string>, MS-CHAP2-Response=<ik>, MS-RAS-Vendor=<ol>, attribute-89=<ge>, attribute-131=<gi>, Infoblox-version=<kl>, Infoblox-Product-Name=<ds>,homePhone=<du>, pager=<dv>, mobile=<dw>, QueryIdentityStores=<dx>,undefined-89=<dz>,undefined-131=<br>,Days to Expiry=<ea>,ACS-RESERVED-Never-Expired=<eb>, Framed-Compression=<fld61>, Connect-Info=<fld62>,CVPN3000/ASA/PIX7x-Tunnel-Group-Name=<fld63>,CVPN3000/ASA/PIX7x-Client-Type=<fld64>,MS-CHAP-NT-Enc-PW=<fld65>, ACSVersion=<version>, Protocol-Argument=<fld29>, AuthenticationIdentityStore=<fld3>, VendorSpecific=<fld12>, Called-Station-ID=<calling_to>, NAS-Identifier=<application>, AuthenticationIdentityStore=<fld18>, SelectedAccessService=<service>, ExternalGroups=<fld20>, distinguishedName=<fld21>, cn=<fld22>, displayName=<fld23>, sAMAccountName=<fld24>, memberOf=<fld25>,OU=<fld26>,DC=<fld27>, Authen-Type=<fld29>, Service=<fld30>, SelectedShellProfile=<fld32>, SelectedAuthenticationIdentityStores=<fld34>, Step=<fld35>, NetworkDeviceGroups=<fld36>, ServiceSelectionMatchedRule=<fld37>, Port=<fld40>, IdentityAccessRestricted=<fld42>, GroupMappingPolicyMatchedRule=<pk>, Service-Argument=<ap>, MatchedCommandSet=<ah>, SelectedCommandSet=<ai>, EapTunnel=<ev>, EapAuthentication=<ew>, givenName=<er>, department=<ei>, CN=<eb>,CmdArgAV=<zd>, IdentityDn=<fld92>, ou=<fld93>, dc=<fld93>, PostureAssessmentStatus=<fld94>, Device Type=<obj_type>, Location=<location_desc>, Model Name=<fld97>, PostureStatus=<disposition>,UserType=<fld9>, EndPointMACAddress=<dmacaddr>,EndPointMatchedProfile=<fld11>,HostIdentityGroup=<fld12>,ISEPolicySetName=<fld13>, AllowedProtocolMatchedRule=<rulename>, IdentitySelectionMatchedRule=<fld19>, Phases=<fld22>,  DeviceRegistrationStatus=<result>,SelectedAuthenticationIdentityStores=<fld27>, NetworkDeviceGroups=<fld28>, ServiceSelectionMatchedRule=<fld29>, Real Name=<user_fullname>, Organization Name=<fld32>, BEMS ID=<fld33>, US Person=<fld34>, Email Address=<mail_id>, Role=<user_role>, Manager BEMSID=<fld35>, Budget=<fld36>, Country=<location_country>, Role - PAN=<fld37>, Role - HP VC Access=<fld38>, Step=<fld39>,SelectedQueryIdentityStores=<bg>,Description=<event_description>,ACS-RESERVED-Never-Expired=<bi>,IdentityDn=<bk>,ou=<bl>,o=<bm>,MSG_WAN_ACCESS=<fld61>,MSG_LAN_ACCESS=<fld62>,NOC_NAC_GUEST_SERVER=<fld63>,NOC_ISE_ACCESS=<fld64>,Serviceaccount=<fld65>,AcsSessionID=<sessionid>,AD-Host-Candidate-Identities=<ac>,AD-Host-DNS-Domain=<ad>,AD-Host-Join-Point=<ae>,AD-Host-NetBios-Name=<af>,AD-Host-Resolved-DNs=<ag>,AD-Host-Resolved-Identities=<ah>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<ai>,AuthenticationMethod=<authmethod>,Called-Station-ID=<calling_to>,Calling-Station-ID=<connectionid>,ConfigVersionId=<al>,CPMSessionID=<sessionid>,DetailedInfo=<info>,Device IP Address=<hostip>,EapTunnel=<bk>,FailureReason=<result>,IdentityAccessRestricted=<ao>,IdentitySelectionMatchedRule=<ap>,ISEPolicySetName=<aq>,NAS-Identifier=<application>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NasRetransmissionTimeout=<av>,NetworkDeviceGroups=<aw>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<az>,Service-Type=<service>,Step=<bq>,StepData=<br>,StepLatency=<bh>,UserName=<d>,User-Name=<k>,RadiusPacketType=<bi>,AD-Error-Details=<result>,AD-User-Resolved-Identities=<bn>,AD-User-Candidate-Identities=<bm>,AD-User-Join-Point=<bo>,AD-User-Resolved-DNs=<bs>,OU=<bv>,DC=<bx>,AD-User-DNS-Domain=<sdomain>,AD-User-NetBios-Name=<il>,Device Port=<network_port>,Protocol=<protocol>,Framed-MTU=<cd>,NAS-Port-Id=<interface>,EAP-Key-Name=<cf>,cisco-av-pair=<info>,cisco-nas-port=<stransport>,OriginalUserName=<c_username>,UseCase=<ci>,EapChainingResult=<ck>,PostureAssessmentStatus=<cl>,EndPointMatchedProfile=<cm>,HostIdentityGroup=<cn>,SelectedAuthorizationProfiles=<cq>,IdentityGroup=<group_object>,UserType=<da>,PortalName=<pn>,Stage=<po>,size=<pq>,medium=<pr>,device.type=<obj_type>,All Stages=<aq>,LogicalProfile=<sw>,EndPointPolicy=<dr>,ADDomain=<domain>,VendorSpecific=<po>,Aruba-Essid-Name=<pi>,Aruba-Location-Id=<pu>,MisconfiguredClientFixReason=<py>,IssuedPacInfo=<pu>,Aruba-Port-Identifier=<pi>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, NAS-Port=%{stransport}, Calling-Station-ID=%{connectionid}, NAS-Port-Type=%{context}, cisco-av-pair=%{context}, AcsSessionID=%{sessionid}, Action=%{action}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Authen-Method=%{authmethod}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Response=%{info}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, Service-Argument=%{fld45}, AuthenticationIdentityStore=%{fld7}, AuthenticationMethod=%{authmethod}, SelectedAccessService=%{service}, SelectedCommandSet=%{fld18}, Step=%{fld5}, SelectedAuthenticationIdentityStores=%{fld27}, SelectedShellProfile=%{fld15}, NetworkDeviceGroups=%{fld6}, ServiceSelectionMatchedRule=%{fld21}, IdentityPolicyMatchedRule=%{rule}, ADDomain=%{domain}, AuthorizationPolicyMatchedRule=%{rulename}, IdentityAccessRestricted=%{fld23}, ExternalGroups=%{fld17}, Reply-Message=%{fld35}, NAS-Port-Id=%{interface}, SelectedQueryIdentityStores=%{fld36}, QueryIdentityStores=%{fld26}, SelectedAuthorizationProfiles=%{fld16}, IdentityGroup=%{group_object}, UserIdentityGroup=%{group}, Service-Type=%{service}, NAS-Identifier=%{application}, AVPair=%{context}, PrivilegeLevel=%{privilege}, Called-Station-ID=%{calling_to}, OU=%{fld54}, DC=%{fld31}, Real Name=%{fld79}, Description=%{event_description}, IdentityDn=%{fld81}, ou=%{fld82}, dc=%{fld83}, CPMSessionID=%{sessionid}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport},Device Type=%{obj_type},Location=%{location_desc},Model Name=%{fld99},Software Version=%{version},PostureStatus=%{disposition},Event-Timestamp=%{event_time_string},Framed-IP-Address=%{saddr},Framed-MTU=%{fld10},EAP-Key-Name=%{fld11},UseCase=%{fld29},Company=%{fld13},State=%{event_state},Tunnel-Type=%{fld37},Tunnel-Medium-Type=%{fld38},Tunnel-Private-Group-ID=%{fld39},Airespace-Wlan-Id=%{wlan},EapAuthentication=%{bm},DeviceRegistrationStatus=%{result},All Stages=%{ci},Wireless=%{fld60},Site ID=%{fld61},msExchHomeServerName=%{application},extensionAttribute1=%{fld63},EndPointMACAddress=%{dmacaddr},Acct-Session-Id=%{sessionid},Acct-Terminate-Cause=%{action},StepLatency=%{zd},NACRadiusUserName=%{c_username},ACSVersion=%{version}, ConfigVersionId=%{fld1}, Type=%{event_type}, inside) CmdArgAV=%{fld46}, outside) CmdArgAV=%{fld47}, Protocol-Argument=%{fld33}, GroupMappingPolicyMatchedRule=%{fld28}, EapTunnel=%{fld29}, DetailedInfo=%{info}, EapAuthentication=%{fld48}, Framed-MTU=%{fld12}, State=%{event_state}, Tunnel-Type=%{fld37}, Tunnel-Medium-Type=%{fld38}, Tunnel-Private-Group-ID=%{fld39}, Tunnel-Client-Endpoint=%{fld49}, MS-CHAP2-Response=%{fld50}, memberOf=%{fld51}, priv_lvl=%{privilege}, max_priv_lvl=%{fld78}, sAMAccountName=%{fld80}, Framed-Protocol=%{protocol},,DestinationIPAddress=%{daddr},DestinationPort=%{dport},CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=%{fld9},UserIdentityGroup=%{group},IP address=%{saddr},Response=%{info},SelectedAuthenticationIdentityStores=%{ap},SelectedQueryIdentityStores=%{ay},NetworkDeviceName=%{node},NetworkDeviceGroups=%{ac},ServiceSelectionMatchedRule=%{aq},IdentityPolicyMatchedRule=%{rule},GroupMappingPolicyMatchedRule=%{bj},AuthorizationPolicyMatchedRule=%{rulename}, Framed-MTU=%{fld10}, Airespace-Wlan-Id=%{wlan}, OriginalUserName=%{c_username}, UseCase=%{ni}, MisconfiguredClientFixReason=%{nb}, Framed-IP-Address=%{saddr}, EAP-Key-Name=%{fld11}, Acct-Session-Id=%{sessionid}, IdentityAccessRestricted=%{zy}, ExternalGroups=%{zx}, VendorSpecific=%{po}, attribute-77=%{lp}, Acct-Multi-Session-Id=%{sessionid}, Proxy-State=%{event_state}, Event-Timestamp=%{event_time_string}, MS-CHAP2-Response=%{ik}, MS-RAS-Vendor=%{ol}, attribute-89=%{ge}, attribute-131=%{gi}, Infoblox-version=%{kl}, Infoblox-Product-Name=%{ds},homePhone=%{du}, pager=%{dv}, mobile=%{dw}, QueryIdentityStores=%{dx},undefined-89=%{dz},undefined-131=%{br},Days to Expiry=%{ea},ACS-RESERVED-Never-Expired=%{eb}, Framed-Compression=%{fld61}, Connect-Info=%{fld62},CVPN3000/ASA/PIX7x-Tunnel-Group-Name=%{fld63},CVPN3000/ASA/PIX7x-Client-Type=%{fld64},MS-CHAP-NT-Enc-PW=%{fld65}, ACSVersion=%{version}, Protocol-Argument=%{fld29}, AuthenticationIdentityStore=%{fld3}, VendorSpecific=%{fld12}, Called-Station-ID=%{calling_to}, NAS-Identifier=%{application}, AuthenticationIdentityStore=%{fld18}, SelectedAccessService=%{service}, ExternalGroups=%{fld20}, distinguishedName=%{fld21}, cn=%{fld22}, displayName=%{fld23}, sAMAccountName=%{fld24}, memberOf=%{fld25},OU=%{fld26},DC=%{fld27}, Authen-Type=%{fld29}, Service=%{fld30}, SelectedShellProfile=%{fld32}, SelectedAuthenticationIdentityStores=%{fld34}, Step=%{fld35}, NetworkDeviceGroups=%{fld36}, ServiceSelectionMatchedRule=%{fld37}, Port=%{fld40}, IdentityAccessRestricted=%{fld42}, GroupMappingPolicyMatchedRule=%{pk}, Service-Argument=%{ap}, MatchedCommandSet=%{ah}, SelectedCommandSet=%{ai}, EapTunnel=%{ev}, EapAuthentication=%{ew}, givenName=%{er}, department=%{ei}, CN=%{eb},CmdArgAV=%{zd}, IdentityDn=%{fld92}, ou=%{fld93}, dc=%{fld93}, PostureAssessmentStatus=%{fld94}, Device Type=%{obj_type}, Location=%{location_desc}, Model Name=%{fld97}, PostureStatus=%{disposition},UserType=%{fld9}, EndPointMACAddress=%{dmacaddr},EndPointMatchedProfile=%{fld11},HostIdentityGroup=%{fld12},ISEPolicySetName=%{fld13}, AllowedProtocolMatchedRule=%{rulename}, IdentitySelectionMatchedRule=%{fld19}, Phases=%{fld22},  DeviceRegistrationStatus=%{result},SelectedAuthenticationIdentityStores=%{fld27}, NetworkDeviceGroups=%{fld28}, ServiceSelectionMatchedRule=%{fld29}, Real Name=%{user_fullname}, Organization Name=%{fld32}, BEMS ID=%{fld33}, US Person=%{fld34}, Email Address=%{mail_id}, Role=%{user_role}, Manager BEMSID=%{fld35}, Budget=%{fld36}, Country=%{location_country}, Role - PAN=%{fld37}, Role - HP VC Access=%{fld38}, Step=%{fld39},SelectedQueryIdentityStores=%{bg},Description=%{event_description},ACS-RESERVED-Never-Expired=%{bi},IdentityDn=%{bk},ou=%{bl},o=%{bm},MSG_WAN_ACCESS=%{fld61},MSG_LAN_ACCESS=%{fld62},NOC_NAC_GUEST_SERVER=%{fld63},NOC_ISE_ACCESS=%{fld64},Serviceaccount=%{fld65},AcsSessionID=%{sessionid},AD-Host-Candidate-Identities=%{ac},AD-Host-DNS-Domain=%{ad},AD-Host-Join-Point=%{ae},AD-Host-NetBios-Name=%{af},AD-Host-Resolved-DNs=%{ag},AD-Host-Resolved-Identities=%{ah},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{ai},AuthenticationMethod=%{authmethod},Called-Station-ID=%{calling_to},Calling-Station-ID=%{connectionid},ConfigVersionId=%{al},CPMSessionID=%{sessionid},DetailedInfo=%{info},Device IP Address=%{hostip},EapTunnel=%{bk},FailureReason=%{result},IdentityAccessRestricted=%{ao},IdentitySelectionMatchedRule=%{ap},ISEPolicySetName=%{aq},NAS-Identifier=%{application},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},NAS-Port-Type=%{context},NasRetransmissionTimeout=%{av},NetworkDeviceGroups=%{aw},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{az},Service-Type=%{service},Step=%{bq},StepData=%{br},StepLatency=%{bh},UserName=%{d},User-Name=%{k},RadiusPacketType=%{bi},AD-Error-Details=%{result},AD-User-Resolved-Identities=%{bn},AD-User-Candidate-Identities=%{bm},AD-User-Join-Point=%{bo},AD-User-Resolved-DNs=%{bs},OU=%{bv},DC=%{bx},AD-User-DNS-Domain=%{sdomain},AD-User-NetBios-Name=%{il},Device Port=%{network_port},Protocol=%{protocol},Framed-MTU=%{cd},NAS-Port-Id=%{interface},EAP-Key-Name=%{cf},cisco-av-pair=%{info},cisco-nas-port=%{stransport},OriginalUserName=%{c_username},UseCase=%{ci},EapChainingResult=%{ck},PostureAssessmentStatus=%{cl},EndPointMatchedProfile=%{cm},HostIdentityGroup=%{cn},SelectedAuthorizationProfiles=%{cq},IdentityGroup=%{group_object},UserType=%{da},PortalName=%{pn},Stage=%{po},size=%{pq},medium=%{pr},device.type=%{obj_type},All Stages=%{aq},LogicalProfile=%{sw},EndPointPolicy=%{dr},ADDomain=%{domain},VendorSpecific=%{po},Aruba-Essid-Name=%{pi},Aruba-Location-Id=%{pu},MisconfiguredClientFixReason=%{py},IssuedPacInfo=%{pu},Aruba-Port-Identifier=%{pi}" }
				id => "message-Passed_Authentications:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"username" => "%{d}"
					"[event][id]" => "Passed_Authentications:07"
					"[rsa][message][id1]" => "Passed_Authentications:07"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Passed_Authentications:08
		# line in RSA: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-Passed_Authentications:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "Passed_Authentications:08"
					"[rsa][message][id1]" => "Passed_Authentications:08"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, UserName=<username>, Protocol=<protocol>, Time And Date=<fld42>, PolicyType=<fld33>, AcsSessionID=<sessionid>, Response=<info>, CurrentIDStoreName=<fld19>, SelectedAccessService=<service>, CPMSessionID=<sessionid>, UserIdentityGroup=<group>, SelectedShellProfile=<fld15>, SelectedCommandSet=<fld18>, ExternalGroups=<fld17>, IdentityAccessRestricted=<fld79>, sAMAccountName=<fld80>, displayName=<hy>, givenName=<iy>, department=<jy>, memberOf=<ky>, distinguishedName=<cy>, OU=<dy>, DC=<ey>, IdentityAccessRestricted=<fy>, CN=<fg>, DetailedInfo=<info>, SelectedAuthorizationProfiles=<iu>,HostIdentityGroup=<bz>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, UserName=%{username}, Protocol=%{protocol}, Time And Date=%{fld42}, PolicyType=%{fld33}, AcsSessionID=%{sessionid}, Response=%{info}, CurrentIDStoreName=%{fld19}, SelectedAccessService=%{service}, CPMSessionID=%{sessionid}, UserIdentityGroup=%{group}, SelectedShellProfile=%{fld15}, SelectedCommandSet=%{fld18}, ExternalGroups=%{fld17}, IdentityAccessRestricted=%{fld79}, sAMAccountName=%{fld80}, displayName=%{hy}, givenName=%{iy}, department=%{jy}, memberOf=%{ky}, distinguishedName=%{cy}, OU=%{dy}, DC=%{ey}, IdentityAccessRestricted=%{fy}, CN=%{fg}, DetailedInfo=%{info}, SelectedAuthorizationProfiles=%{iu},HostIdentityGroup=%{bz}" }
			id => "msgParserId46"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId47
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, User-Name=<username>, NAS-IP-Address=<stransaddr>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<fld50>, Acct-Session-Id=<sessionid>, Acct-Authentic=<fld39>, Acct-Session-Time=<duration>, Acct-Terminate-Cause=<action>, NAS-Port-Type=<context>, AcsSessionID=<sessionid>, Step=<fld5>, NetworkDeviceGroups=<fld6>, Service-Type=<service>, Framed-Protocol=<protocol>, Framed-IP-Address=<saddr>, Class=<fld14>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Input-Packets=<fld19>, Acct-Output-Packets=<fld20>, Tunnel-Client-Endpoint=<fld21>, NAS-Port=<stransport>, CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=<fld31>,NAS-Identifier=<application>,Acct-Multi-Session-Id=<sessionid>,Acct-Link-Count=<fld59>,NAS-Port-Id=<interface>,attribute-151=<fld2>,cisco-av-pair=<context>,SelectedAccessService=<service>, attribute-52=<fld3>, attribute-53=<fld7>, DestinationIPAddress=<daddr>, DestinationPort=<dport>, Event-Timestamp=<event_time_string>, Tunnel-Type=<pi>, Tunnel-Medium-Type=<pl>, Tunnel-Private-Group-ID=<fld39>, Airespace-Wlan-Id=<wlan>, AuditSessionId=<sessionid>, Framed-MTU=<wr>, VendorSpecific=<rt>, MS-RAS-Vendor=<zd>, attribute-97=<ze>, CPMSessionID=<sessionid>,AllowedProtocolMatchedRule=<rulename>,Location=<location_desc>,Device Type=<obj_type>,cisco-nas-port=<stransport>,undefined-52=<ch>,undefined-97=<cj>,undefined-53=<ck>,undefined-151=<cl>,Model Name=<mn>,All Stages=<mb>,Stage=<po>,Aruba-User-Role=<user_role>,Aruba-Port-Identifier=<pi>,Aruba-Essid-Name=<pu>,Aruba-Location-Id=<py>,Software Version=<pu>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{fld50}, Acct-Session-Id=%{sessionid}, Acct-Authentic=%{fld39}, Acct-Session-Time=%{duration}, Acct-Terminate-Cause=%{action}, NAS-Port-Type=%{context}, AcsSessionID=%{sessionid}, Step=%{fld5}, NetworkDeviceGroups=%{fld6}, Service-Type=%{service}, Framed-Protocol=%{protocol}, Framed-IP-Address=%{saddr}, Class=%{fld14}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Input-Packets=%{fld19}, Acct-Output-Packets=%{fld20}, Tunnel-Client-Endpoint=%{fld21}, NAS-Port=%{stransport}, CVPN3000/ASA/PIX7.x-DAP-Tunnel-Group-Name=%{fld31},NAS-Identifier=%{application},Acct-Multi-Session-Id=%{sessionid},Acct-Link-Count=%{fld59},NAS-Port-Id=%{interface},attribute-151=%{fld2},cisco-av-pair=%{context},SelectedAccessService=%{service}, attribute-52=%{fld3}, attribute-53=%{fld7}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}, Event-Timestamp=%{event_time_string}, Tunnel-Type=%{pi}, Tunnel-Medium-Type=%{pl}, Tunnel-Private-Group-ID=%{fld39}, Airespace-Wlan-Id=%{wlan}, AuditSessionId=%{sessionid}, Framed-MTU=%{wr}, VendorSpecific=%{rt}, MS-RAS-Vendor=%{zd}, attribute-97=%{ze}, CPMSessionID=%{sessionid},AllowedProtocolMatchedRule=%{rulename},Location=%{location_desc},Device Type=%{obj_type},cisco-nas-port=%{stransport},undefined-52=%{ch},undefined-97=%{cj},undefined-53=%{ck},undefined-151=%{cl},Model Name=%{mn},All Stages=%{mb},Stage=%{po},Aruba-User-Role=%{user_role},Aruba-Port-Identifier=%{pi},Aruba-Essid-Name=%{pu},Aruba-Location-Id=%{py},Software Version=%{pu}" }
			id => "msgParserId47"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "RADIUS_Diagnostics" {
		# MESSAGE RADIUS_Diagnostics
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, Device Port=<network_port>, DestinationPort=<dport>, RadiusPacketType=<fld46>, RadiusIdentifier=<fld43>, User-Name=<username>, NAS-IP-Address=<stransaddr>, AcsSessionID=<sessionid>, SelectedAccessService=<service>, Response=<info>, Acct-Status-Type=<event_state>, Acct-Delay-Time=<fld50>, Acct-Session-Id=<sessionid>, Acct-Session-Time=<duration>, Acct-Terminate-Cause=<action>, Acct-Authentic=<fld39>, NAS-Port-Type=<context>, Called-Station-ID=<calling_to>, Calling-Station-ID=<connectionid>, Tunnel-Client-Endpoint=<fld23>, cisco-av-pair=<context>, NAS-Port=<stransport>, DestinationIPAddress=<daddr>, Service-Type=<service>, NAS-Identifier=<application>, Framed-MTU=<fld10>, Tunnel-Type=<fld37>, Tunnel-Medium-Type=<fld38>, Tunnel-Private-Group-ID=<fld39>, Airespace-Wlan-Id=<wlan>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>, Acct-Input-Packets=<cd>, Acct-Output-Packets=<ce>, State=<event_state>, Class=<fld2>, Framed-IP-Address=<saddr>, EapTunnel=<ev>, EapAuthentication=<ew>, DetailedInfo=<info>, UseCase=<po>, CPMSessionID=<sessionid>, OpenSSLErrorMessage=<result>, OpenSSLErrorStack=<cert_error>,Binary Encoded=<ci>,Subject Alternative Name - DNS=<cj>,Common Name=<ca>,Subject Alternative Name=<cb>,Subject=<cc>,Issuer=<ce>,DC=<cf>,Serial Number=<serial_number>,Subject - Common Name=<cn>,Subject - Organization=<za>,Subject - Organization Unit=<zb>,Subject - Country=<zc>,OU=<zd>,O=<zk>,TotalFailedTime=<ya>,TotalFailedAttempts=<yb>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, Device Port=%{network_port}, DestinationPort=%{dport}, RadiusPacketType=%{fld46}, RadiusIdentifier=%{fld43}, User-Name=%{username}, NAS-IP-Address=%{stransaddr}, AcsSessionID=%{sessionid}, SelectedAccessService=%{service}, Response=%{info}, Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{fld50}, Acct-Session-Id=%{sessionid}, Acct-Session-Time=%{duration}, Acct-Terminate-Cause=%{action}, Acct-Authentic=%{fld39}, NAS-Port-Type=%{context}, Called-Station-ID=%{calling_to}, Calling-Station-ID=%{connectionid}, Tunnel-Client-Endpoint=%{fld23}, cisco-av-pair=%{context}, NAS-Port=%{stransport}, DestinationIPAddress=%{daddr}, Service-Type=%{service}, NAS-Identifier=%{application}, Framed-MTU=%{fld10}, Tunnel-Type=%{fld37}, Tunnel-Medium-Type=%{fld38}, Tunnel-Private-Group-ID=%{fld39}, Airespace-Wlan-Id=%{wlan}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes}, Acct-Input-Packets=%{cd}, Acct-Output-Packets=%{ce}, State=%{event_state}, Class=%{fld2}, Framed-IP-Address=%{saddr}, EapTunnel=%{ev}, EapAuthentication=%{ew}, DetailedInfo=%{info}, UseCase=%{po}, CPMSessionID=%{sessionid}, OpenSSLErrorMessage=%{result}, OpenSSLErrorStack=%{cert_error},Binary Encoded=%{ci},Subject Alternative Name - DNS=%{cj},Common Name=%{ca},Subject Alternative Name=%{cb},Subject=%{cc},Issuer=%{ce},DC=%{cf},Serial Number=%{serial_number},Subject - Common Name=%{cn},Subject - Organization=%{za},Subject - Organization Unit=%{zb},Subject - Country=%{zc},OU=%{zd},O=%{zk},TotalFailedTime=%{ya},TotalFailedAttempts=%{yb}" }
				id => "message-RADIUS_Diagnostics"
				add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "RADIUS_Diagnostics"
					"[rsa][message][id1]" => "RADIUS_Diagnostics"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE RADIUS_Diagnostics:01
		# line in RSA: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-RADIUS_Diagnostics:01"
				add_field => {
				"event_description" => "%{hevent_description}"
					"[event][id]" => "RADIUS_Diagnostics:01"
					"[rsa][message][id1]" => "RADIUS_Diagnostics:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System_Statistics" {
		# MESSAGE System_Statistics
		# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, SysStatsUtilizationCpu=<dclass_ratio1>, SysStatsUtilizationNetwork=<fld9>, SysStatsUtilizationMemory=<dclass_ratio2>, SysStatsAcsProcessHealth=<fld10>, SysStatsUtilizationDiskIO=<dclass_ratio3>, SysStatsUtilizationDiskSpace=<fld11>, AverageRadiusRequestLatency=<dclass_counter2>, AverageTacacsRequestLatency=<dclass_counter3>, DeltaRadiusRequestCount=<fld34>, DeltaTacacsRequestCount=<fld47>, SysStatsUtilizationLoadAvg=<fld48>, SysStatsCpuCount=<fld49>, SysStatsProcessMemoryMB=<fld50>,OperationCounters=<fld51>,MDMServerName=<hostname>,FailureReason=<result>,ActiveSessionCount=<fld51>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, SysStatsUtilizationCpu=%{dclass_ratio1}, SysStatsUtilizationNetwork=%{fld9}, SysStatsUtilizationMemory=%{dclass_ratio2}, SysStatsAcsProcessHealth=%{fld10}, SysStatsUtilizationDiskIO=%{dclass_ratio3}, SysStatsUtilizationDiskSpace=%{fld11}, AverageRadiusRequestLatency=%{dclass_counter2}, AverageTacacsRequestLatency=%{dclass_counter3}, DeltaRadiusRequestCount=%{fld34}, DeltaTacacsRequestCount=%{fld47}, SysStatsUtilizationLoadAvg=%{fld48}, SysStatsCpuCount=%{fld49}, SysStatsProcessMemoryMB=%{fld50},OperationCounters=%{fld51},MDMServerName=%{hostname},FailureReason=%{result},ActiveSessionCount=%{fld51}" }
				id => "message-System_Statistics"
				add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "System_Statistics"
					"[rsa][message][id1]" => "System_Statistics"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE System_Statistics:01
		# line in RSA: ConfigVersionId=<fld1>, SysStatsAcsProcessHealth=<fld2>, PID: <fld3> ISE Database=<fld4>, number of processes: <fld5>  ISE Application Server=<fld6>, PID: <fld7>  ISE M&T Session Database=<fld8>, PID: <fld9>  ISE M&T Log Collector=<fld10>, PID: <fld11>  ISE M&T Log Processor=<fld12>, PID: <fld13>  ISE M&T Alert Process=<fld14>, PID: <fld15>, 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld1}, SysStatsAcsProcessHealth=%{fld2}, PID: %{fld3} ISE Database=%{fld4}, number of processes: %{fld5}  ISE Application Server=%{fld6}, PID: %{fld7}  ISE M&T Session Database=%{fld8}, PID: %{fld9}  ISE M&T Log Collector=%{fld10}, PID: %{fld11}  ISE M&T Log Processor=%{fld12}, PID: %{fld13}  ISE M&T Alert Process=%{fld14}, PID: %{fld15}," }
				id => "message-System_Statistics:01"
				add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "System_Statistics:01"
					"[rsa][message][id1]" => "System_Statistics:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE System_Statistics:02
		# line in RSA: ConfigVersionId=<fld1>, SysStatsAcsProcessHealth=<fld10>\, PID: <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld1}, SysStatsAcsProcessHealth=%{fld10}\, PID: %{fld11}" }
				id => "message-System_Statistics:02"
				add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "System_Statistics:02"
					"[rsa][message][id1]" => "System_Statistics:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, CmdSet=<action>, RequestLatency=<dclass_counter1>, NetworkDeviceName=<node>, Type=<event_type>, Privilege-Level=<privilege>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, Authen-Method=<authmethod>, AVPair=<context>, AcctRequest-Flags=<fld21>, Service-Argument=<fld45>, AcsSessionID=<sessionid>, Response=<info>, SelectedAccessService=<service>, Step=<fld5>, NetworkDeviceGroups=<fld6>, Protocol-Argument=<fld26>, AuditSessionId=<sessionid>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, CmdSet=%{action}, RequestLatency=%{dclass_counter1}, NetworkDeviceName=%{node}, Type=%{event_type}, Privilege-Level=%{privilege}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, Authen-Method=%{authmethod}, AVPair=%{context}, AcctRequest-Flags=%{fld21}, Service-Argument=%{fld45}, AcsSessionID=%{sessionid}, Response=%{info}, SelectedAccessService=%{service}, Step=%{fld5}, NetworkDeviceGroups=%{fld6}, Protocol-Argument=%{fld26}, AuditSessionId=%{sessionid}" }
			id => "msgParserId53"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA: ACSVersion=<version>, ConfigVersionId=<fld1>, Device IP Address=<hostip>, Device Port=<network_port>, CmdSet=<action>, MatchedCommandSet=<fld24>, MatchedRule=<fld22>, MajorVersion=<fld28>, MinorVersion=<fld32>, Type=<event_type>, Sequence-Number=<fld43>, Header-Flags=<fld44>, SessionId=<fld25>, Privilege-Level=<privilege>, Authen-Type=<fld2>, Action=<action>, Service=<fld3>, User=<username>, Port=<fld58>, Remote-Address=<saddr>, AcsSessionID=<sessionid>, EnableSingleConnect=<fld41>, CiscoIOS=<fld29>, UseSingleConnect=<fld39>, Response=<info>, Authen-Method=<authmethod>, AVPair=<context>, AcctRequest-Flags=<fld21>, Service-Argument=<fld45>, SelectedAccessService=<service>, SelectedShellProfile=<fld15>, SelectedCommandSet=<fld18>, Protocol-Argument=<fld26>, ParseError=<fld5>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "ACSVersion=%{version}, ConfigVersionId=%{fld1}, Device IP Address=%{hostip}, Device Port=%{network_port}, CmdSet=%{action}, MatchedCommandSet=%{fld24}, MatchedRule=%{fld22}, MajorVersion=%{fld28}, MinorVersion=%{fld32}, Type=%{event_type}, Sequence-Number=%{fld43}, Header-Flags=%{fld44}, SessionId=%{fld25}, Privilege-Level=%{privilege}, Authen-Type=%{fld2}, Action=%{action}, Service=%{fld3}, User=%{username}, Port=%{fld58}, Remote-Address=%{saddr}, AcsSessionID=%{sessionid}, EnableSingleConnect=%{fld41}, CiscoIOS=%{fld29}, UseSingleConnect=%{fld39}, Response=%{info}, Authen-Method=%{authmethod}, AVPair=%{context}, AcctRequest-Flags=%{fld21}, Service-Argument=%{fld45}, SelectedAccessService=%{service}, SelectedShellProfile=%{fld15}, SelectedCommandSet=%{fld18}, Protocol-Argument=%{fld26}, ParseError=%{fld5}" }
			id => "msgParserId54"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: ACSVIEW_ALARM Threshold alarm  name=<fld12>,severity=<severity>,cause=<result>,detail=<event_description> between <fld3> <fld4> UTC <fld5> and <fld6> <fld7> UTC <fld8> from the following <info> 
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "ACSVIEW_ALARM Threshold alarm  name=%{fld12},severity=%{severity},cause=%{result},detail=%{event_description} between %{fld3} %{fld4} UTC %{fld5} and %{fld6} %{fld7} UTC %{fld8} from the following %{info}" }
			id => "msgParserId55"
			add_field => {
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId56
	# line in RSA: Message-Type=<fld21>,User-Name=<username>,Group-Name=<group>,Caller-ID=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Network Device Group=<fld19>,System-Posture-Token=<fld22>,Application-Posture-Token=<fld18>,AAA Server=<hostname>,Access Device=<fld52>,Network Access Profile Name=<c_username>,Real Name=<user_fullname>,Description=<event_description>,Priv-lvl=<privilege>,Filter Information=<fld17>,
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "Message-Type=%{fld21},User-Name=%{username},Group-Name=%{group},Caller-ID=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Network Device Group=%{fld19},System-Posture-Token=%{fld22},Application-Posture-Token=%{fld18},AAA Server=%{hostname},Access Device=%{fld52},Network Access Profile Name=%{c_username},Real Name=%{user_fullname},Description=%{event_description},Priv-lvl=%{privilege},Filter Information=%{fld17}," }
			id => "msgParserId56"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId57
	# line in RSA: Message-Type=<fld21>,User-Name=<username>,Group-Name=<group>,Caller-ID=<connectionid>,Called-Station-Id=<calling_to>,Authen-Failure-Code=<result>,Author-Failure-Code=<fld17>,Author-Data=<info>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Network Device Group=<fld19>,System-Posture-Token=<fld22>,Application-Posture-Token=<fld18>,AAA Server=<hostname>,Access Device=<fld52>,Network Access Profile Name=<c_username>,Priv-lvl=<privilege>,
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "Message-Type=%{fld21},User-Name=%{username},Group-Name=%{group},Caller-ID=%{connectionid},Called-Station-Id=%{calling_to},Authen-Failure-Code=%{result},Author-Failure-Code=%{fld17},Author-Data=%{info},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Network Device Group=%{fld19},System-Posture-Token=%{fld22},Application-Posture-Token=%{fld18},AAA Server=%{hostname},Access Device=%{fld52},Network Access Profile Name=%{c_username},Priv-lvl=%{privilege}," }
			id => "msgParserId57"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId58
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,Acct-Input-Packets=<fld9>,Acct-Output-Packets=<fld10>
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},Acct-Input-Packets=%{fld9},Acct-Output-Packets=%{fld10}" }
			id => "msgParserId58"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId59
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>,bytes_in=<rbytes>,bytes_out=<sbytes>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege},bytes_in=%{rbytes},bytes_out=%{sbytes}" }
			id => "msgParserId59"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId60
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>,cmd=<param>
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege},cmd=%{param}" }
			id => "msgParserId60"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId61
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege}" }
			id => "msgParserId61"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId62
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>,action-type=<action>,text-message=<event_description>
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege},action-type=%{action},text-message=%{event_description}" }
			id => "msgParserId62"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId63
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>,status-class=<bq>,text-message=<event_description>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege},status-class=%{bq},text-message=%{event_description}" }
			id => "msgParserId63"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId64
	# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>,admin-username=<administrator>,browser-ip=<saddr>,text-message=<event_description>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege},admin-username=%{administrator},browser-ip=%{saddr},text-message=%{event_description}" }
			id => "msgParserId64"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "15_ServiceMon" {
		# MESSAGE 15_ServiceMon
		# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege}" }
				id => "message-15_ServiceMon"
				add_field => {
					"[event][id]" => "15_ServiceMon"
					"[rsa][message][id1]" => "15_ServiceMon"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE 15_ServiceMon:01
		# line in RSA: User-Name=<username>,Group-Name=<group>,Calling-Station-Id=<connectionid>,Called-Station-Id=<calling_to>,NAS-IP-Address=<stransaddr>,NAS-Port=<stransport>,Acct-Status-Type=<event_state>,Acct-Session-Id=<sessionid>,Acct-Session-Time=<duration>,Service-Type=<service>,Framed-IP-Address=<saddr>,Framed-Protocol=<protocol>,Login-IP-Host=<daddr>,Acct-Authentic=<fld39>,AAA Server=<hostname>,ExtDB Info=<info>,Access Device=<fld52>,Acct-Terminate-Cause=<action>,Acct-Input-Octets=<rbytes>,Acct-Output-Octets=<sbytes>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>,service=<service>,priv-lvl=<privilege>,text-message=<event_description>,CSAdmin-handle-count=<fld2>,CSAdmin-memory-usage=<fld3>,CSAdmin-CPU-usage=<fld4>,CSAdmin-thread-count=<fld5>,CSAuth-handle-count=<fld6>,CSAuth-memory-usage=<fld7>,CSAuth-CPU-usage=<fld9>,CSAuth-thread-count=<fld10>,CSDbSync-handle-count=<fld12>,CSDbSync-memory-usage=<fld13>,CSDbSync-CPU-usage=<fld14>,CSDbSync -thread-count=<fld15>,CSLog-handle-count=<fld16>,CSLog-memory-usage=<fld19>,CSLog-CPU-usage=<fld20>,CSLog-thread-count=<fld22>,CSRadius-handle-count=<fld23>,CSRadius-memory-usage=<fld24>,CSRadius-CPU-usage=<fld25>,CSRadius-thread-count=<fld26>,CSRadius-auth-latency=<fld27>,CSTacacs-handle-count=<fld28>,CSTacacs-memory-usage=<fld29>,CSTacacs-CPU-usage=<fld30>,CSTacacs-thread-count=<fld31>,CSTacacs-auth-latency=<fld32>,system-memory-usage=<fld33>,system-free-disk-space=<fld34>,System-CPU-usage=<fld35>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User-Name=%{username},Group-Name=%{group},Calling-Station-Id=%{connectionid},Called-Station-Id=%{calling_to},NAS-IP-Address=%{stransaddr},NAS-Port=%{stransport},Acct-Status-Type=%{event_state},Acct-Session-Id=%{sessionid},Acct-Session-Time=%{duration},Service-Type=%{service},Framed-IP-Address=%{saddr},Framed-Protocol=%{protocol},Login-IP-Host=%{daddr},Acct-Authentic=%{fld39},AAA Server=%{hostname},ExtDB Info=%{info},Access Device=%{fld52},Acct-Terminate-Cause=%{action},Acct-Input-Octets=%{rbytes},Acct-Output-Octets=%{sbytes},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89},service=%{service},priv-lvl=%{privilege},text-message=%{event_description},CSAdmin-handle-count=%{fld2},CSAdmin-memory-usage=%{fld3},CSAdmin-CPU-usage=%{fld4},CSAdmin-thread-count=%{fld5},CSAuth-handle-count=%{fld6},CSAuth-memory-usage=%{fld7},CSAuth-CPU-usage=%{fld9},CSAuth-thread-count=%{fld10},CSDbSync-handle-count=%{fld12},CSDbSync-memory-usage=%{fld13},CSDbSync-CPU-usage=%{fld14},CSDbSync -thread-count=%{fld15},CSLog-handle-count=%{fld16},CSLog-memory-usage=%{fld19},CSLog-CPU-usage=%{fld20},CSLog-thread-count=%{fld22},CSRadius-handle-count=%{fld23},CSRadius-memory-usage=%{fld24},CSRadius-CPU-usage=%{fld25},CSRadius-thread-count=%{fld26},CSRadius-auth-latency=%{fld27},CSTacacs-handle-count=%{fld28},CSTacacs-memory-usage=%{fld29},CSTacacs-CPU-usage=%{fld30},CSTacacs-thread-count=%{fld31},CSTacacs-auth-latency=%{fld32},system-memory-usage=%{fld33},system-free-disk-space=%{fld34},System-CPU-usage=%{fld35}" }
				id => "message-15_ServiceMon:01"
				add_field => {
					"[event][id]" => "15_ServiceMon:01"
					"[rsa][message][id1]" => "15_ServiceMon:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA: User-Name=<username>,Group-Name=<group>,NAS-IP-Address=<stransaddr>,service=<service>,cmd=<param>,priv-lvl=<privilege>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},NAS-IP-Address=%{stransaddr},service=%{service},cmd=%{param},priv-lvl=%{privilege},task_id=%{id},NAS-Portname=%{fld87},reason=%{result}," }
			id => "msgParserId66"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId67
	# line in RSA: User-Name=<username>,Group-Name=<group>,NAS-IP-Address=<stransaddr>,service=<service>,cmd=<param>,priv-lvl=<privilege>,task_id=<id>,NAS-Portname=<fld87>,reason=<result>,Acct-Flags=<fld88>,Caller-Id=<connectionid>,elapsed_time=<fld89>
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "User-Name=%{username},Group-Name=%{group},NAS-IP-Address=%{stransaddr},service=%{service},cmd=%{param},priv-lvl=%{privilege},task_id=%{id},NAS-Portname=%{fld87},reason=%{result},Acct-Flags=%{fld88},Caller-Id=%{connectionid},elapsed_time=%{fld89}" }
			id => "msgParserId67"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "CISE_Profiler" {
		# MESSAGE CISE_Profiler
		# line in RSA: Authorization=<fld1>,OpenSSLErrorStack=<cert_error>,hrDeviceDescr=<ag>,sysObjectID=<ah>,Serial Number=<serial_number>,Subject Alternative Name=<ab>,Days to Expiry=<ac>,EndPointPolicyID=<fld2>,IsEndpointInRejectMode=<ir>,161-udp=<ud>,MisconfiguredClientFixReason=<mc>,FirstCollection=<fld3>,TimeToProfile=<fld4>,LastNmapScanTime=<fld5>,DNT=<fld6>,StaticGroupAssignment=<fld7>,Via=<fld8>,DeviceRegistrationStatus=<result>,From=<fld10>,Range=<fld11>,PolicyVersion=<fld12>,IdentityGroupID=<fld13>,UA-CPU=<fld14>,Total Certainty Factor=<fld15>,MatchedPolicyID=<fld16>,NmapScanCount=<fld17>,NmapSubnetScanID=<fld18>,Content-Type=<fld19>,PortalUser=<username>,EndpointUserAgent=<user_agent>,AAA-Server=<hostname>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<c>,AuthenticationMethod=<authmethod>,AuthorizationPolicyMatchedRule=<rulename>,BYODRegistration=<f>,CacheUpdateTime=<g>,Called-Station-ID=<calling_to>,chaddr=<i>,ciaddr=<j>,client-fqdn=<k>,DestinationIPAddress=<daddr>,Device IP Address=<hostip>,Device Type=<obj_type>,dhcp-class-identifier=<o>,dhcp-client-identifier=<p>,dhcp-message-type=<q>,dhcp-parameter-request-list=<r>,dhcp-requested-address=<s>,dot1xAuthAuthControlledPortControl=<t>,dot1xAuthAuthControlledPortStatus=<u>,EndpointIdentityGroup=<v>,EndPointMACAddress=<dmacaddr>,EndpointSourceEvent=<x>,FeedService=<y>,flags=<z>,Framed-IP-Address=<saddr>,giaddr=<ab>,hlen=<ac>,host-name=<ad>,htype=<ae>,IdentityAccessRestricted=<af>,ifDescr=<ag>,ifOperStatus=<ah>,Location=<location_desc>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NetworkDeviceGroups=<al>,NetworkDeviceName=<node>,op=<an>,OriginalUserName=<c_username>,PostureAssessmentStatus=<ap>,ProfilerServer=<aq>,pxe-client-arch=<ar>,pxe-client-machine-id=<as>,pxe-client-network-id=<at>,RegistrationTimeStamp=<au>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<ax>,SelectedAuthorizationProfiles=<ay>,Service-Type=<service>,undefined-151=<ba>,UpdateTime=<bb>,UseCase=<bc>,UserName=<username>,User-Name=<username>,UserType=<bf>,yiaddr=<bg>,dot1xAuthSessionUserName=<bh>,cdpCacheCapabilities=<bi>,lldpCacheCapabilities=<bj>,cdpCachePlatform=<bk>,lldpSystemName=<bl>,lldpChassisId=<bm>,lldpCapabilitiesMapSupported=<bn>,lldpTimeToLive=<bo>,lldpPortId=<bp>,Model Name=<mn>,lldpManAddress=<bq>,cdpUndefined25=<br>,cdpCacheDeviceId=<bs>,cdpUndefined15=<bt>,cdpCacheAddress=<bu>,dhcp-max-message-size=<bv>,dhcp-server-identifier=<bw>,AD-Host-NetBios-Name=<nb>,Device Port=<network_port>,AD-Domain=<domain>, Device Identifier=<di>,PostureApplicable=<pa>,operating-system=<os>,RadiusPacketType=<rp>,AD-Host-Resolved-DNs=<hr>,AD-Host-Join-Point=<jp>,AD-Host-DNS-Domain=<dd>,PostureExpiry=<pe>,CreateTime=<ct>,LastActivity=<la>,135-tcp=<fld71>,80-tcp=<qo>,1027-tcp=<qp>,5357-tcp=<fld72>,3389-tcp=<fld73>,445-tcp=<fld74>,1026-tcp=<fld24>,8081-tcp=<fld74>,49155-tcp=<fld75>,49154-tcp=<fld76>,49157-tcp=<fld77>,33=<fld35>,22=<ua>,23=<ub>,24=<uc>,44=<ub>,34=<fld36>,35=<fld37>,36=<fld38>,37=<fld39>,38=<fld40>,39=<fld41>,50=<fld42>,51=<fld43>,52=<fld44>,53=<fld45>,54=<fld46>,55=<fld47>,56=<fld48>,Issuer - Organization Unit=<zu>,Subject - Country=<co>,Issuer - Common Name=<za>,Software Version=<version>,Subject - Organization=<zb>,cdpCacheVersion=<zc>,RadiusPacketType=<zd>,Key Usage=<ze>,Subject - Common Name=<zf>,8080-tcp=<zi>,cdpUndefined18=<zj>,cdpUndefined19=<zk>,cdpUndefined26=<zl>,cdpUndefined31=<zm>,cdpUndefined8=<zn>,49156-tcp=<zo>,389-tcp=<zp>,8888-tcp=<zq>,sysContact=<xa>,StepData=<xb>,5=<xc>,6=<xd>,7=<xe>,dhcp-lease-time=<xf>,631-tcp=<xi>,8009-tcp=<xz>,57=<xp>,subnet-mask=<xq>,EndpointSubnet=<xr>,1433-tcp=<vb>,Subject=<vc>,sysLocation=<vc>,7-tcp=<vd>,PhoneID=<ve>,sysDescr=<vl>,sysLocation=<ve>,22-tcp=<vf>,18=<vg>,10000-tcp=<vh>,cdpUndefined34=<vi>,88-tcp=<vj>,21=<vk>,AD-Host-Resolved-Identities=<xn>,dhcp-server-identifier=<xp>,NasRetransmissionTimeout=<xq>,TotalFailedTime=<ya>,TotalFailedAttempts=<yb>,RadiusPacketType=<yc>,Model Name=<yd>,20=<ye>,21=<yf>,22=<yg>,23=<yh>,24=<yi>,25=<yj>,26=<yk>,27=<yl>,631-tcp=<ym>,1720-tcp=<yn>,2000-tcp=<yo>,1433-tcp=<yp>,111-tcp=<ya>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authorization=%{fld1},OpenSSLErrorStack=%{cert_error},hrDeviceDescr=%{ag},sysObjectID=%{ah},Serial Number=%{serial_number},Subject Alternative Name=%{ab},Days to Expiry=%{ac},EndPointPolicyID=%{fld2},IsEndpointInRejectMode=%{ir},161-udp=%{ud},MisconfiguredClientFixReason=%{mc},FirstCollection=%{fld3},TimeToProfile=%{fld4},LastNmapScanTime=%{fld5},DNT=%{fld6},StaticGroupAssignment=%{fld7},Via=%{fld8},DeviceRegistrationStatus=%{result},From=%{fld10},Range=%{fld11},PolicyVersion=%{fld12},IdentityGroupID=%{fld13},UA-CPU=%{fld14},Total Certainty Factor=%{fld15},MatchedPolicyID=%{fld16},NmapScanCount=%{fld17},NmapSubnetScanID=%{fld18},Content-Type=%{fld19},PortalUser=%{username},EndpointUserAgent=%{user_agent},AAA-Server=%{hostname},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{c},AuthenticationMethod=%{authmethod},AuthorizationPolicyMatchedRule=%{rulename},BYODRegistration=%{f},CacheUpdateTime=%{g},Called-Station-ID=%{calling_to},chaddr=%{i},ciaddr=%{j},client-fqdn=%{k},DestinationIPAddress=%{daddr},Device IP Address=%{hostip},Device Type=%{obj_type},dhcp-class-identifier=%{o},dhcp-client-identifier=%{p},dhcp-message-type=%{q},dhcp-parameter-request-list=%{r},dhcp-requested-address=%{s},dot1xAuthAuthControlledPortControl=%{t},dot1xAuthAuthControlledPortStatus=%{u},EndpointIdentityGroup=%{v},EndPointMACAddress=%{dmacaddr},EndpointSourceEvent=%{x},FeedService=%{y},flags=%{z},Framed-IP-Address=%{saddr},giaddr=%{ab},hlen=%{ac},host-name=%{ad},htype=%{ae},IdentityAccessRestricted=%{af},ifDescr=%{ag},ifOperStatus=%{ah},Location=%{location_desc},NAS-Port=%{stransport},NAS-Port-Type=%{context},NetworkDeviceGroups=%{al},NetworkDeviceName=%{node},op=%{an},OriginalUserName=%{c_username},PostureAssessmentStatus=%{ap},ProfilerServer=%{aq},pxe-client-arch=%{ar},pxe-client-machine-id=%{as},pxe-client-network-id=%{at},RegistrationTimeStamp=%{au},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{ax},SelectedAuthorizationProfiles=%{ay},Service-Type=%{service},undefined-151=%{ba},UpdateTime=%{bb},UseCase=%{bc},UserName=%{username},User-Name=%{username},UserType=%{bf},yiaddr=%{bg},dot1xAuthSessionUserName=%{bh},cdpCacheCapabilities=%{bi},lldpCacheCapabilities=%{bj},cdpCachePlatform=%{bk},lldpSystemName=%{bl},lldpChassisId=%{bm},lldpCapabilitiesMapSupported=%{bn},lldpTimeToLive=%{bo},lldpPortId=%{bp},Model Name=%{mn},lldpManAddress=%{bq},cdpUndefined25=%{br},cdpCacheDeviceId=%{bs},cdpUndefined15=%{bt},cdpCacheAddress=%{bu},dhcp-max-message-size=%{bv},dhcp-server-identifier=%{bw},AD-Host-NetBios-Name=%{nb},Device Port=%{network_port},AD-Domain=%{domain}, Device Identifier=%{di},PostureApplicable=%{pa},operating-system=%{os},RadiusPacketType=%{rp},AD-Host-Resolved-DNs=%{hr},AD-Host-Join-Point=%{jp},AD-Host-DNS-Domain=%{dd},PostureExpiry=%{pe},CreateTime=%{ct},LastActivity=%{la},135-tcp=%{fld71},80-tcp=%{qo},1027-tcp=%{qp},5357-tcp=%{fld72},3389-tcp=%{fld73},445-tcp=%{fld74},1026-tcp=%{fld24},8081-tcp=%{fld74},49155-tcp=%{fld75},49154-tcp=%{fld76},49157-tcp=%{fld77},33=%{fld35},22=%{ua},23=%{ub},24=%{uc},44=%{ub},34=%{fld36},35=%{fld37},36=%{fld38},37=%{fld39},38=%{fld40},39=%{fld41},50=%{fld42},51=%{fld43},52=%{fld44},53=%{fld45},54=%{fld46},55=%{fld47},56=%{fld48},Issuer - Organization Unit=%{zu},Subject - Country=%{co},Issuer - Common Name=%{za},Software Version=%{version},Subject - Organization=%{zb},cdpCacheVersion=%{zc},RadiusPacketType=%{zd},Key Usage=%{ze},Subject - Common Name=%{zf},8080-tcp=%{zi},cdpUndefined18=%{zj},cdpUndefined19=%{zk},cdpUndefined26=%{zl},cdpUndefined31=%{zm},cdpUndefined8=%{zn},49156-tcp=%{zo},389-tcp=%{zp},8888-tcp=%{zq},sysContact=%{xa},StepData=%{xb},5=%{xc},6=%{xd},7=%{xe},dhcp-lease-time=%{xf},631-tcp=%{xi},8009-tcp=%{xz},57=%{xp},subnet-mask=%{xq},EndpointSubnet=%{xr},1433-tcp=%{vb},Subject=%{vc},sysLocation=%{vc},7-tcp=%{vd},PhoneID=%{ve},sysDescr=%{vl},sysLocation=%{ve},22-tcp=%{vf},18=%{vg},10000-tcp=%{vh},cdpUndefined34=%{vi},88-tcp=%{vj},21=%{vk},AD-Host-Resolved-Identities=%{xn},dhcp-server-identifier=%{xp},NasRetransmissionTimeout=%{xq},TotalFailedTime=%{ya},TotalFailedAttempts=%{yb},RadiusPacketType=%{yc},Model Name=%{yd},20=%{ye},21=%{yf},22=%{yg},23=%{yh},24=%{yi},25=%{yj},26=%{yk},27=%{yl},631-tcp=%{ym},1720-tcp=%{yn},2000-tcp=%{yo},1433-tcp=%{yp},111-tcp=%{ya}" }
				id => "message-CISE_Profiler"
				add_field => {
					"[event][id]" => "CISE_Profiler"
					"[rsa][message][id1]" => "CISE_Profiler"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_Profiler:01
		# line in RSA: Authorization=<fld1>,OpenSSLErrorStack=<cert_error>,hrDeviceDescr=<ag>,sysObjectID=<ah>,Serial Number=<serial_number>,Subject Alternative Name=<ab>,Days to Expiry=<ac>,EndPointPolicyID=<fld2>,IsEndpointInRejectMode=<ir>,161-udp=<ud>,MisconfiguredClientFixReason=<mc>,FirstCollection=<fld3>,TimeToProfile=<fld4>,LastNmapScanTime=<fld5>,DNT=<fld6>,StaticGroupAssignment=<fld7>,Via=<fld8>,DeviceRegistrationStatus=<result>,From=<fld10>,Range=<fld11>,PolicyVersion=<fld12>,IdentityGroupID=<fld13>,UA-CPU=<fld14>,Total Certainty Factor=<fld15>,MatchedPolicyID=<fld16>,NmapScanCount=<fld17>,NmapSubnetScanID=<fld18>,Content-Type=<fld19>,PortalUser=<username>,EndpointUserAgent=<user_agent>,AAA-Server=<hostname>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<c>,AuthenticationMethod=<authmethod>,AuthorizationPolicyMatchedRule=<rulename>,BYODRegistration=<f>,CacheUpdateTime=<g>,Called-Station-ID=<calling_to>,chaddr=<i>,ciaddr=<j>,client-fqdn=<k>,DestinationIPAddress=<daddr>,Device IP Address=<hostip>,Device Type=<obj_type>,dhcp-class-identifier=<o>,dhcp-client-identifier=<p>,dhcp-message-type=<q>,dhcp-parameter-request-list=<r>,dhcp-requested-address=<s>,dot1xAuthAuthControlledPortControl=<t>,dot1xAuthAuthControlledPortStatus=<u>,EndpointIdentityGroup=<v>,EndPointMACAddress=<dmacaddr>,EndpointSourceEvent=<x>,FeedService=<y>,flags=<z>,Framed-IP-Address=<saddr>,giaddr=<ab>,hlen=<ac>,host-name=<hostname>,htype=<ae>,IdentityAccessRestricted=<af>,ifDescr=<ag>,ifOperStatus=<ah>,Location=<location_desc>,NAS-Port=<stransport>,NAS-Port-Type=<context>,NetworkDeviceGroups=<al>,NetworkDeviceName=<node>,op=<an>,OriginalUserName=<c_username>,PostureAssessmentStatus=<ap>,ProfilerServer=<aq>,pxe-client-arch=<ar>,pxe-client-machine-id=<as>,pxe-client-network-id=<at>,RegistrationTimeStamp=<au>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<ax>,SelectedAuthorizationProfiles=<ay>,Service-Type=<service>,undefined-151=<ba>,UpdateTime=<bb>,UseCase=<bc>,UserName=<username>,User-Name=<username>,UserType=<bf>,yiaddr=<bg>,dot1xAuthSessionUserName=<bh>,cdpCacheCapabilities=<bi>,lldpCacheCapabilities=<bj>,cdpCachePlatform=<bk>,lldpSystemName=<bl>,lldpChassisId=<bm>,lldpCapabilitiesMapSupported=<bn>,lldpTimeToLive=<bo>,lldpPortId=<bp>,Model Name=<mn>,lldpManAddress=<bq>,cdpUndefined25=<br>,cdpCacheDeviceId=<bs>,cdpUndefined15=<bt>,cdpCacheAddress=<bu>,dhcp-max-message-size=<bv>,dhcp-server-identifier=<bw>,AD-Host-NetBios-Name=<nb>,Device Port=<network_port>,AD-Domain=<domain>, Device Identifier=<di>,PostureApplicable=<pa>,operating-system=<os>,RadiusPacketType=<rp>,AD-Host-Resolved-DNs=<hr>,AD-Host-Join-Point=<jp>,AD-Host-DNS-Domain=<dd>,PostureExpiry=<pe>,CreateTime=<ct>,LastActivity=<la>,135-tcp=<fld71>,80-tcp=<qo>,1027-tcp=<qp>,5357-tcp=<fld72>,3389-tcp=<fld73>,445-tcp=<fld74>,1026-tcp=<fld24>,8081-tcp=<fld74>,49155-tcp=<fld75>,49154-tcp=<fld76>,49157-tcp=<fld77>,33=<fld35>,22=<ua>,23=<ub>,24=<uc>,44=<ub>,34=<fld36>,35=<fld37>,36=<fld38>,37=<fld39>,38=<fld40>,39=<fld41>,50=<fld42>,51=<fld43>,52=<fld44>,53=<fld45>,54=<fld46>,55=<fld47>,56=<fld48>,Issuer - Organization Unit=<zu>,Subject - Country=<co>,Issuer - Common Name=<za>,Software Version=<version>,Subject - Organization=<zb>,cdpCacheVersion=<zc>,RadiusPacketType=<zd>,Key Usage=<ze>,Subject - Common Name=<zf>,8080-tcp=<zi>,cdpUndefined18=<zj>,cdpUndefined19=<zk>,cdpUndefined26=<zl>,cdpUndefined31=<zm>,cdpUndefined8=<zn>,49156-tcp=<zo>,389-tcp=<zp>,8888-tcp=<zq>,sysContact=<xa>,StepData=<xb>,5=<xc>,6=<xd>,7=<xe>,dhcp-lease-time=<xf>,631-tcp=<xi>,8009-tcp=<xz>,57=<xp>,subnet-mask=<xq>,EndpointSubnet=<xr>,1433-tcp=<vb>,Subject=<vc>,sysLocation=<vc>,7-tcp=<vd>,PhoneID=<ve>,sysDescr=<vl>,sysLocation=<ve>,22-tcp=<vf>,18=<vg>,10000-tcp=<vh>,cdpUndefined34=<vi>,88-tcp=<vj>,21=<vk>,AD-Host-Resolved-Identities=<xn>,dhcp-server-identifier=<xp>,NasRetransmissionTimeout=<xq>,TotalFailedTime=<ya>,TotalFailedAttempts=<yb>,RadiusPacketType=<yc>,Model Name=<yd>,20=<ye>,21=<yf>,22=<yg>,23=<yh>,24=<yi>,25=<yj>,26=<yk>,27=<yl>,631-tcp=<ym>,1720-tcp=<yn>,2000-tcp=<yo>,1433-tcp=<yp>,111-tcp=<ya>,StaticGroupAssignment=<fld1>,dot1xAuthAuthControlledPortControl=<bg>,cdpCacheVersion=<cf>,LogicalProfile=<ck>,cdpCacheCapabilities=<cl>,ifOperStatus=<bf>,ifDescr=<bi>,sysContact=<ag>,SelectedAuthorizationProfiles=<af>,BYODRegistration=<by>,SelectedAccessService=<service>,dhcp-client-identifier=<dc>,TimeToProfile=<tt>,Extended Key Usage - Name=<ek>,hlen=<hl>,PolicyVersion=<pv>,SelectedAuthorizationProfiles=<sb>,PostureAssessmentStatus=<fld2>,Total Certainty Factor=<fld3>,EndPointPolicyID=<be>,MatchedPolicyID=<fld4>,NmapScanCount=<ar>,FirstCollection=<ag>,Subject Alternative Name - DNS=<cd>,PhoneID=<bd>,SelectedAuthenticationIdentityStores=<ai>,flags=<fl>,Subject=<sb>,Key Usage=<br>,Subject - Common Name=<br>,80-tcp=<fld80>,445-tcp=<fld82>,3389-tcp=<fld83>,49155-tcp=<fld84>,135-tcp=<fld6>,AD-Error-Details=<result>,TotalFailedTime=<cm>,CreateTime=<bf>,Subject Alternative Name=<cb>,LastActivity=<as>,Days to Expiry=<br>,Called-Station-ID=<calling_to>,NAS-Port-Id=<interface>,NetworkDeviceGroups=<ac>,TotalFailedAttempts=<tf>,dhcp-message-type=<dm>,5357-tcp=<fld91>,Extended Key Usage - Name=<br>,Calling-Station-ID=<connectionid>,Issuer=<ce>,AD-Host-Resolved-Identities=<ah>,139-tcp=<fld9>,LastNmapScanTime=<fld10>,StepData=<yi>,Issuer - Domain Component=<br>, UserType=<fld11>, NAS-Port-Type=<context>,RegistrationTimeStamp=<be>,IdentityGroupID=<fld12>,22-tcp=<fld23>,162-udp=<fld24>,1025-tcp=<fld25>,1026-tcp=<fld26>,1027-tcp=<fldqr>,1028-tcp=<fld27>,6000-tcp=<fld28>,8081-tcp=<fld29>,49157-tcp=<qe>,49156-tcp=<fld46>,49154-tcp=<fld14>,AD-Host-NetBios-Name=<hn>,IsEndpointInRejectMode=<is>,Device Identifier=<if>,21-tcp=<ff>,5=<fld15>,6=<fld16>,7=<fld17>,8=<fld19>,11=<fld20>,16=<fld21>,17=<fld22>,18=<fld24>,19=<fld26>,20=<fld27>,21=<fld92>,22=<fld93>,23=<fld94>,24=<qu>,25=<qi>,29=<fld56>,30=<fld57>,32=<iv>,31=<fld58>,33=<fld59>,34=<fld60>,35=<fld61>,36=<fld62>,37=<fld63>,38=<fld64>,45=<fld65>,46=<fld66>,50=<qr>,51=<qs>,52=<qt>,53=<qu>,54=<qv>,55=<oa>,56=<ob>,57=<cb>,72=<oc>,73=<od>,74=<oe>,75=<of>,76=<og>,77=<oi>,78=<oj>,79=<ok>,80=<ol>,61=<fld67>,62=<fld68>,63=<fld69>,65=<fld70>,66=<fld71>,67=<fld72>,68=<fld73>,69=<fld74>,70=<fld75>,71=<fld76>,72=<fld66>,82=<fld77>,83=<fld78>,84=<fld79>,85=<fld80>,86=<fld81>,87=<fld82>,88=<fld83>,89=<fld84>,90=<fld85>,Issuer - Organization=<za>,Subject - Organization Unit=<zb>, dot1xAuthAuthControlledPortStatus=<zc>, 49=<zd>,Issuer - Organization Unit=<ze>,cdpCachePlatform=<zf>,cdpCacheDeviceId=<nf>,cdpCacheAddress=<zg>,lldpSystemDescription=<zh>,lldpPortDescription=<zi>,81=<zj>,92=<zk>,93=<zl>,94=<zm>,95=<zn>,96=<zo>,97=<zp>,98=<zq>,99=<zr>,26=<xa>, DC=<zs>,lldpCacheCapabilities=<zt>,lldpChassisId=<zu>,OU=<zv>,9100-tcp=<ya>,sysName=<yb>,hrDeviceDescr=<yc>, Model Name=<yd>, 22-tcp=<ye>,cdpUndefined25=<yf>,58=<yg>,59=<yh>,60=<yi>,lldpPortId=<yj>,Location=<yk>,Subject - Country=<yj>,NmapSubnetScanID=<yl>,dhcp-server-identifier=<ym>,dhcp-max-message-size=<yn>,dhcp-server-identifier=<yl>,giaddr=<yo>,sysLocation=<zu>,100=<zv>,101=<zv>,102=<zv>,631-tcp=<va>,sysDescr=<vb>,40=<vc>,41=<vd>,23-tcp=<ve>,103=<vf>,104=<vg>,105=<vh>,cdpUndefined8=<vi>,7-tcp=<vj>,5060-tcp=<vk>,5900-tcp=<xm>,5800-tcp=<xn>,91=<xo>,8009-tcp=<xp>,28=<yw>,554-tcp=<ye>,161-udp=<yr>,8443-tcp=<yt>,undefined-151=<yy>,EndpointSourceEvent=<ya>,EndpointIdentityGroup=<ys>,Description=<event_description>,514-tcp=<yd>,2049-tcp=<yf>,8080-tcp=<yg>,FailureReason=<result>,Network Device Profile=<fld82>,Issuer - Country=<location_country>,MDMServerID=<fld34>,OpenSSLErrorMessage=<fld36>,IsThirdPartyDeviceFlow=<fld37>,49152-tcp=<fld38>,EndPointPurgeScheduleType=<fld48>,PurgedCount=<fld50>,EndPointPurgeRule=<fld49>,ScheduledAt=<fld51>,Connect-Info=<fld62>,DetailedInfo=<info>,TLSCipher=<s_cipher>,wired=<fld67>,SSID=<ssid>,IsMachineIdentity=<fld68>,AD-Host-NetBios-Name=<fld86>,Airespace-Wlan-Id=<wlan>,Acct-Output-Packets=<fld100>,AD-User-DNS-Domain=<fld87>, Tunnel-Medium-Type=<fld88>,AcsSessionID=<sessionid>,Tunnel-Type=<fld89>,IsMachineAuthentication=<fld90>,device-type=<obj_type>,Acct-Input-Packets=<fld95>,MessageCode=<fld96>,Acct-Status-Type=<event_state>,CPMSessionID=<sessionid>,IdentitySelectionMatchedRule=<fld98>,EapAuthentication=<fld99>,MacAddress=<macaddr>,EmailAddress=<mail_id>,TLSVersion=<version>,IdentityStoreName=<fld77>,CWA_Username=<c_username>,Device Name=<device>,UniqueSubjectID=<fld78>,PortalName=<fld79>,Subject - State or Province=<location_city>,Ignored-User-Agent=<user_agent>,Certificate Issuer Name=<fld80>,IdentityStoreGUID=<fld81>,SessionId=<sessionid>,StaticAssignment=<fld82>,Extended Key Usage - OID=<fld83>,Framed-IPv6-Prefix=<fld84>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authorization=%{fld1},OpenSSLErrorStack=%{cert_error},hrDeviceDescr=%{ag},sysObjectID=%{ah},Serial Number=%{serial_number},Subject Alternative Name=%{ab},Days to Expiry=%{ac},EndPointPolicyID=%{fld2},IsEndpointInRejectMode=%{ir},161-udp=%{ud},MisconfiguredClientFixReason=%{mc},FirstCollection=%{fld3},TimeToProfile=%{fld4},LastNmapScanTime=%{fld5},DNT=%{fld6},StaticGroupAssignment=%{fld7},Via=%{fld8},DeviceRegistrationStatus=%{result},From=%{fld10},Range=%{fld11},PolicyVersion=%{fld12},IdentityGroupID=%{fld13},UA-CPU=%{fld14},Total Certainty Factor=%{fld15},MatchedPolicyID=%{fld16},NmapScanCount=%{fld17},NmapSubnetScanID=%{fld18},Content-Type=%{fld19},PortalUser=%{username},EndpointUserAgent=%{user_agent},AAA-Server=%{hostname},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{c},AuthenticationMethod=%{authmethod},AuthorizationPolicyMatchedRule=%{rulename},BYODRegistration=%{f},CacheUpdateTime=%{g},Called-Station-ID=%{calling_to},chaddr=%{i},ciaddr=%{j},client-fqdn=%{k},DestinationIPAddress=%{daddr},Device IP Address=%{hostip},Device Type=%{obj_type},dhcp-class-identifier=%{o},dhcp-client-identifier=%{p},dhcp-message-type=%{q},dhcp-parameter-request-list=%{r},dhcp-requested-address=%{s},dot1xAuthAuthControlledPortControl=%{t},dot1xAuthAuthControlledPortStatus=%{u},EndpointIdentityGroup=%{v},EndPointMACAddress=%{dmacaddr},EndpointSourceEvent=%{x},FeedService=%{y},flags=%{z},Framed-IP-Address=%{saddr},giaddr=%{ab},hlen=%{ac},host-name=%{hostname},htype=%{ae},IdentityAccessRestricted=%{af},ifDescr=%{ag},ifOperStatus=%{ah},Location=%{location_desc},NAS-Port=%{stransport},NAS-Port-Type=%{context},NetworkDeviceGroups=%{al},NetworkDeviceName=%{node},op=%{an},OriginalUserName=%{c_username},PostureAssessmentStatus=%{ap},ProfilerServer=%{aq},pxe-client-arch=%{ar},pxe-client-machine-id=%{as},pxe-client-network-id=%{at},RegistrationTimeStamp=%{au},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{ax},SelectedAuthorizationProfiles=%{ay},Service-Type=%{service},undefined-151=%{ba},UpdateTime=%{bb},UseCase=%{bc},UserName=%{username},User-Name=%{username},UserType=%{bf},yiaddr=%{bg},dot1xAuthSessionUserName=%{bh},cdpCacheCapabilities=%{bi},lldpCacheCapabilities=%{bj},cdpCachePlatform=%{bk},lldpSystemName=%{bl},lldpChassisId=%{bm},lldpCapabilitiesMapSupported=%{bn},lldpTimeToLive=%{bo},lldpPortId=%{bp},Model Name=%{mn},lldpManAddress=%{bq},cdpUndefined25=%{br},cdpCacheDeviceId=%{bs},cdpUndefined15=%{bt},cdpCacheAddress=%{bu},dhcp-max-message-size=%{bv},dhcp-server-identifier=%{bw},AD-Host-NetBios-Name=%{nb},Device Port=%{network_port},AD-Domain=%{domain}, Device Identifier=%{di},PostureApplicable=%{pa},operating-system=%{os},RadiusPacketType=%{rp},AD-Host-Resolved-DNs=%{hr},AD-Host-Join-Point=%{jp},AD-Host-DNS-Domain=%{dd},PostureExpiry=%{pe},CreateTime=%{ct},LastActivity=%{la},135-tcp=%{fld71},80-tcp=%{qo},1027-tcp=%{qp},5357-tcp=%{fld72},3389-tcp=%{fld73},445-tcp=%{fld74},1026-tcp=%{fld24},8081-tcp=%{fld74},49155-tcp=%{fld75},49154-tcp=%{fld76},49157-tcp=%{fld77},33=%{fld35},22=%{ua},23=%{ub},24=%{uc},44=%{ub},34=%{fld36},35=%{fld37},36=%{fld38},37=%{fld39},38=%{fld40},39=%{fld41},50=%{fld42},51=%{fld43},52=%{fld44},53=%{fld45},54=%{fld46},55=%{fld47},56=%{fld48},Issuer - Organization Unit=%{zu},Subject - Country=%{co},Issuer - Common Name=%{za},Software Version=%{version},Subject - Organization=%{zb},cdpCacheVersion=%{zc},RadiusPacketType=%{zd},Key Usage=%{ze},Subject - Common Name=%{zf},8080-tcp=%{zi},cdpUndefined18=%{zj},cdpUndefined19=%{zk},cdpUndefined26=%{zl},cdpUndefined31=%{zm},cdpUndefined8=%{zn},49156-tcp=%{zo},389-tcp=%{zp},8888-tcp=%{zq},sysContact=%{xa},StepData=%{xb},5=%{xc},6=%{xd},7=%{xe},dhcp-lease-time=%{xf},631-tcp=%{xi},8009-tcp=%{xz},57=%{xp},subnet-mask=%{xq},EndpointSubnet=%{xr},1433-tcp=%{vb},Subject=%{vc},sysLocation=%{vc},7-tcp=%{vd},PhoneID=%{ve},sysDescr=%{vl},sysLocation=%{ve},22-tcp=%{vf},18=%{vg},10000-tcp=%{vh},cdpUndefined34=%{vi},88-tcp=%{vj},21=%{vk},AD-Host-Resolved-Identities=%{xn},dhcp-server-identifier=%{xp},NasRetransmissionTimeout=%{xq},TotalFailedTime=%{ya},TotalFailedAttempts=%{yb},RadiusPacketType=%{yc},Model Name=%{yd},20=%{ye},21=%{yf},22=%{yg},23=%{yh},24=%{yi},25=%{yj},26=%{yk},27=%{yl},631-tcp=%{ym},1720-tcp=%{yn},2000-tcp=%{yo},1433-tcp=%{yp},111-tcp=%{ya},StaticGroupAssignment=%{fld1},dot1xAuthAuthControlledPortControl=%{bg},cdpCacheVersion=%{cf},LogicalProfile=%{ck},cdpCacheCapabilities=%{cl},ifOperStatus=%{bf},ifDescr=%{bi},sysContact=%{ag},SelectedAuthorizationProfiles=%{af},BYODRegistration=%{by},SelectedAccessService=%{service},dhcp-client-identifier=%{dc},TimeToProfile=%{tt},Extended Key Usage - Name=%{ek},hlen=%{hl},PolicyVersion=%{pv},SelectedAuthorizationProfiles=%{sb},PostureAssessmentStatus=%{fld2},Total Certainty Factor=%{fld3},EndPointPolicyID=%{be},MatchedPolicyID=%{fld4},NmapScanCount=%{ar},FirstCollection=%{ag},Subject Alternative Name - DNS=%{cd},PhoneID=%{bd},SelectedAuthenticationIdentityStores=%{ai},flags=%{fl},Subject=%{sb},Key Usage=%{br},Subject - Common Name=%{br},80-tcp=%{fld80},445-tcp=%{fld82},3389-tcp=%{fld83},49155-tcp=%{fld84},135-tcp=%{fld6},AD-Error-Details=%{result},TotalFailedTime=%{cm},CreateTime=%{bf},Subject Alternative Name=%{cb},LastActivity=%{as},Days to Expiry=%{br},Called-Station-ID=%{calling_to},NAS-Port-Id=%{interface},NetworkDeviceGroups=%{ac},TotalFailedAttempts=%{tf},dhcp-message-type=%{dm},5357-tcp=%{fld91},Extended Key Usage - Name=%{br},Calling-Station-ID=%{connectionid},Issuer=%{ce},AD-Host-Resolved-Identities=%{ah},139-tcp=%{fld9},LastNmapScanTime=%{fld10},StepData=%{yi},Issuer - Domain Component=%{br}, UserType=%{fld11}, NAS-Port-Type=%{context},RegistrationTimeStamp=%{be},IdentityGroupID=%{fld12},22-tcp=%{fld23},162-udp=%{fld24},1025-tcp=%{fld25},1026-tcp=%{fld26},1027-tcp=%{fldqr},1028-tcp=%{fld27},6000-tcp=%{fld28},8081-tcp=%{fld29},49157-tcp=%{qe},49156-tcp=%{fld46},49154-tcp=%{fld14},AD-Host-NetBios-Name=%{hn},IsEndpointInRejectMode=%{is},Device Identifier=%{if},21-tcp=%{ff},5=%{fld15},6=%{fld16},7=%{fld17},8=%{fld19},11=%{fld20},16=%{fld21},17=%{fld22},18=%{fld24},19=%{fld26},20=%{fld27},21=%{fld92},22=%{fld93},23=%{fld94},24=%{qu},25=%{qi},29=%{fld56},30=%{fld57},32=%{iv},31=%{fld58},33=%{fld59},34=%{fld60},35=%{fld61},36=%{fld62},37=%{fld63},38=%{fld64},45=%{fld65},46=%{fld66},50=%{qr},51=%{qs},52=%{qt},53=%{qu},54=%{qv},55=%{oa},56=%{ob},57=%{cb},72=%{oc},73=%{od},74=%{oe},75=%{of},76=%{og},77=%{oi},78=%{oj},79=%{ok},80=%{ol},61=%{fld67},62=%{fld68},63=%{fld69},65=%{fld70},66=%{fld71},67=%{fld72},68=%{fld73},69=%{fld74},70=%{fld75},71=%{fld76},72=%{fld66},82=%{fld77},83=%{fld78},84=%{fld79},85=%{fld80},86=%{fld81},87=%{fld82},88=%{fld83},89=%{fld84},90=%{fld85},Issuer - Organization=%{za},Subject - Organization Unit=%{zb}, dot1xAuthAuthControlledPortStatus=%{zc}, 49=%{zd},Issuer - Organization Unit=%{ze},cdpCachePlatform=%{zf},cdpCacheDeviceId=%{nf},cdpCacheAddress=%{zg},lldpSystemDescription=%{zh},lldpPortDescription=%{zi},81=%{zj},92=%{zk},93=%{zl},94=%{zm},95=%{zn},96=%{zo},97=%{zp},98=%{zq},99=%{zr},26=%{xa}, DC=%{zs},lldpCacheCapabilities=%{zt},lldpChassisId=%{zu},OU=%{zv},9100-tcp=%{ya},sysName=%{yb},hrDeviceDescr=%{yc}, Model Name=%{yd}, 22-tcp=%{ye},cdpUndefined25=%{yf},58=%{yg},59=%{yh},60=%{yi},lldpPortId=%{yj},Location=%{yk},Subject - Country=%{yj},NmapSubnetScanID=%{yl},dhcp-server-identifier=%{ym},dhcp-max-message-size=%{yn},dhcp-server-identifier=%{yl},giaddr=%{yo},sysLocation=%{zu},100=%{zv},101=%{zv},102=%{zv},631-tcp=%{va},sysDescr=%{vb},40=%{vc},41=%{vd},23-tcp=%{ve},103=%{vf},104=%{vg},105=%{vh},cdpUndefined8=%{vi},7-tcp=%{vj},5060-tcp=%{vk},5900-tcp=%{xm},5800-tcp=%{xn},91=%{xo},8009-tcp=%{xp},28=%{yw},554-tcp=%{ye},161-udp=%{yr},8443-tcp=%{yt},undefined-151=%{yy},EndpointSourceEvent=%{ya},EndpointIdentityGroup=%{ys},Description=%{event_description},514-tcp=%{yd},2049-tcp=%{yf},8080-tcp=%{yg},FailureReason=%{result},Network Device Profile=%{fld82},Issuer - Country=%{location_country},MDMServerID=%{fld34},OpenSSLErrorMessage=%{fld36},IsThirdPartyDeviceFlow=%{fld37},49152-tcp=%{fld38},EndPointPurgeScheduleType=%{fld48},PurgedCount=%{fld50},EndPointPurgeRule=%{fld49},ScheduledAt=%{fld51},Connect-Info=%{fld62},DetailedInfo=%{info},TLSCipher=%{s_cipher},wired=%{fld67},SSID=%{ssid},IsMachineIdentity=%{fld68},AD-Host-NetBios-Name=%{fld86},Airespace-Wlan-Id=%{wlan},Acct-Output-Packets=%{fld100},AD-User-DNS-Domain=%{fld87}, Tunnel-Medium-Type=%{fld88},AcsSessionID=%{sessionid},Tunnel-Type=%{fld89},IsMachineAuthentication=%{fld90},device-type=%{obj_type},Acct-Input-Packets=%{fld95},MessageCode=%{fld96},Acct-Status-Type=%{event_state},CPMSessionID=%{sessionid},IdentitySelectionMatchedRule=%{fld98},EapAuthentication=%{fld99},MacAddress=%{macaddr},EmailAddress=%{mail_id},TLSVersion=%{version},IdentityStoreName=%{fld77},CWA_Username=%{c_username},Device Name=%{device},UniqueSubjectID=%{fld78},PortalName=%{fld79},Subject - State or Province=%{location_city},Ignored-User-Agent=%{user_agent},Certificate Issuer Name=%{fld80},IdentityStoreGUID=%{fld81},SessionId=%{sessionid},StaticAssignment=%{fld82},Extended Key Usage - OID=%{fld83},Framed-IPv6-Prefix=%{fld84}" }
				id => "message-CISE_Profiler:01"
				add_field => {
					"[event][id]" => "CISE_Profiler:01"
					"[rsa][message][id1]" => "CISE_Profiler:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Profiler" {
		# MESSAGE Profiler:01
		# line in RSA: ConfigVersionId=<fld10>,PostureAssessmentStatus=<er>,EndpointCertainityMetric=<fld12>,EndpointIPAddress=<daddr>,EndpointIdentityGroup=<fld14>,EndpointMacAddress=<dmacaddr>,EndpointMatchedPolicy=<fld16>,EndpointOUI=<fld17>,EndpointPolicy=<fld18>,EndpointProperty=<fld19>,EndpointNADAddress=<saddr>,EndPointPolicyID=<af>,StaticAssignment=<ca>,pxe-client-machine-id=<as>,DestinationPort=<dport>,giaddr=<ab>,Service-Type=<service>,TimeToProfile=<ah>,dhcp-client-identifier=<pc>,49152-tcp=<tc>,AD-Groups-Names=<ah>,49153-tcp=<tp>,OpenSSLErrorMessage=<result>,AD-Host-Candidate-Identities=<hc>,Subject Alternative Name - DNS=<cj>,PhoneID=<bd>,Key Usage=<br>,ifIndex=<bs>,Subject - Common Name=<br>,445-tcp=<fld60>,135-tcp=<fld61>,OpenSSLErrorStack=<cert_error>,AD-Error-Details=<result>,StaticGroupAssignment=<fld7>,dhcp-requested-address=<s>,AuthenticationMethod=<authmethod>,NetworkDeviceName=<node>,op=<an>,pxe-client-arch=<ar>,443-tcp=<fld44>,Issuer - Country=<za>,21-tcp=<zb>,22-tcp=<zc>,162-udp=<zc>,Total Certainty Factor=<zd>,Total Certainty Factor=<ze>,lldpCacheCapabilities=<zf>, Issuer - Organization=<fld>,161-udp=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld10},PostureAssessmentStatus=%{er},EndpointCertainityMetric=%{fld12},EndpointIPAddress=%{daddr},EndpointIdentityGroup=%{fld14},EndpointMacAddress=%{dmacaddr},EndpointMatchedPolicy=%{fld16},EndpointOUI=%{fld17},EndpointPolicy=%{fld18},EndpointProperty=%{fld19},EndpointNADAddress=%{saddr},EndPointPolicyID=%{af},StaticAssignment=%{ca},pxe-client-machine-id=%{as},DestinationPort=%{dport},giaddr=%{ab},Service-Type=%{service},TimeToProfile=%{ah},dhcp-client-identifier=%{pc},49152-tcp=%{tc},AD-Groups-Names=%{ah},49153-tcp=%{tp},OpenSSLErrorMessage=%{result},AD-Host-Candidate-Identities=%{hc},Subject Alternative Name - DNS=%{cj},PhoneID=%{bd},Key Usage=%{br},ifIndex=%{bs},Subject - Common Name=%{br},445-tcp=%{fld60},135-tcp=%{fld61},OpenSSLErrorStack=%{cert_error},AD-Error-Details=%{result},StaticGroupAssignment=%{fld7},dhcp-requested-address=%{s},AuthenticationMethod=%{authmethod},NetworkDeviceName=%{node},op=%{an},pxe-client-arch=%{ar},443-tcp=%{fld44},Issuer - Country=%{za},21-tcp=%{zb},22-tcp=%{zc},162-udp=%{zc},Total Certainty Factor=%{zd},Total Certainty Factor=%{ze},lldpCacheCapabilities=%{zf}, Issuer - Organization=%{fld},161-udp=%{fld2}" }
				id => "message-Profiler:01"
				add_field => {
					"[event][id]" => "Profiler:01"
					"[rsa][message][id1]" => "Profiler:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Profiler
		# line in RSA: ConfigVersionId=<fld10>,PostureAssessmentStatus=<er>,EndpointCertainityMetric=<fld12>,EndpointIPAddress=<daddr>,EndpointIdentityGroup=<fld14>,EndpointMacAddress=<dmacaddr>,EndpointMatchedPolicy=<fld16>,EndpointOUI=<fld17>,EndpointPolicy=<fld18>,EndpointProperty=<fld19>,EndpointNADAddress=<saddr>,EndPointPolicyID=<af>,StaticAssignment=<ca>,pxe-client-machine-id=<as>,DestinationPort=<dport>,giaddr=<ab>,Service-Type=<service>,TimeToProfile=<ah>,dhcp-client-identifier=<pc>,49152-tcp=<tc>,AD-Groups-Names=<ah>,49153-tcp=<tp>,OpenSSLErrorMessage=<result>,AD-User-Candidate-Identities=<bm>,AD-Host-Candidate-Identities=<hc>,Subject Alternative Name - DNS=<cj>,PhoneID=<bd>,Key Usage=<br>,ifIndex=<bs>,Subject - Common Name=<br>,445-tcp=<fld60>,135-tcp=<fld61>,OpenSSLErrorStack=<cert_error>,AD-Error-Details=<result>,StaticGroupAssignment=<fld7>,dhcp-requested-address=<s>,AuthenticationMethod=<authmethod>,NetworkDeviceName=<node>,op=<an>,pxe-client-arch=<ar>,443-tcp=<fld44>,Issuer - Country=<za>,21-tcp=<zb>,22-tcp=<zc>,162-udp=<zc>,Total Certainty Factor=<zd>,Total Certainty Factor=<ze>,lldpCacheCapabilities=<zf>, Issuer - Organization=<fld>,161-udp=<fld2>,ConfigVersionId=<cv>,DetailedInfo=<info>,Extended Key Usage - Name=<ao>,AD-Groups-Names=<ap>,AD-Host-Candidate-Identities=<aq>,Issuer=<ar>,DC=<as>,ProfilerServer=<fld11>,Cookie=<fld20>,Host=<fld21>,Content-Length=<fld22>,If-Unmodified-Since=<fld23>,Pragma=<fld24>,SNMPOIDValue=<fld21>,ProfilerErrorMessage=<result>,Calling-Station-ID=<connectionid>,PostureApplicable=<ac>,CacheUpdateTime=<ad>,BYODRegistration=<ae>,FirstCollection=<ag>,LastNmapScanTime=<ai>,StaticGroupAssignment=<aj>,DeviceRegistrationStatus=<result>,NAS-Port-Type=<context>,PolicyVersion=<am>,IdentityGroupID=<an>,Total Certainty Factor=<ao>,MatchedPolicyID=<aq>,DestinationIPAddress=<daddr>,NmapScanCount=<ar>,LastActivity=<as>,NmapSubnetScanID=<at>,AAA-Server=<hostname>,PortalUser=<username>,Device Identifier=<ba>,MDMServerID=<bb>,host-name=<bc>,Framed-IP-Address=<saddr>,RegistrationTimeStamp=<be>,CreateTime=<bf>,EndpointUserAgent=<user_agent>,NAS-Port-Id=<interface>,MDMServerName=<hostname>,FailureReason=<result>,ifIndex=<cb>,cdpCachePlatform=<cd>,cdpCacheCapabilities=<ce>,cdpCacheDeviceId=<cf>,cdpCacheAddress=<cg>,operating-system=<os>,device-platform-version=<ch>,device-type=<obj_type>,device-platform=<cj>,AllowedProtocolMatchedRule=<rulename>,AuthenticationIdentityStore=<c>,AuthorizationPolicyMatchedRule=<rulename>,Called-Station-ID=<calling_to>,chaddr=<i>,ciaddr=<j>,client-fqdn=<k>,Device IP Address=<hostip>,Device Type=<obj_type>,dhcp-class-identifier=<o>,dhcp-client-identifier=<p>,dhcp-message-type=<q>,dhcp-parameter-request-list=<r>,dot1xAuthAuthControlledPortControl=<t>,dot1xAuthAuthControlledPortStatus=<u>,EndPointMACAddress=<dmacaddr>,EndpointSourceEvent=<x>,FeedService=<y>,flags=<z>,hlen=<ac>,htype=<ae>,IdentityAccessRestricted=<af>,ifDescr=<ag>,ifOperStatus=<ah>,Location=<location_desc>,NAS-Port=<stransport>,NetworkDeviceGroups=<al>,OriginalUserName=<c_username>,PostureAssessmentStatus=<ap>,pxe-client-network-id=<at>,Response=<info>,SelectedAccessService=<service>,SelectedAuthenticationIdentityStores=<ax>,SelectedAuthorizationProfiles=<ay>,undefined-151=<ba>,UpdateTime=<bb>,UseCase=<bc>,UserName=<username>,User-Name=<username>,UserType=<bf>,yiaddr=<bg>,lldpSystemDescription=<bl>,lldpPortDescription=<bk>,EndpointCoA=<info>,cdpCacheVersion=<bm>,lldpCacheCapabilities=<bn>,StepData=<sd>,hrDeviceStatus=<ai>,sysName=<aj>,sysDescr=<ak>,9100-tcp=<al>,22-tcp=<qt>,162-udp=<fld98>,139-tcp=<fld71>,445-tcp=<ee>,1025-tcp=<ff>,5432-tcp=<fg>,1028-tcp=<gg>,49153-tcp=<fld73>,1027-tcp=<fld94>,49152-tcp=<fld72>,443-tcp=<qy>,49154-tcp=<fld74>,49157-tcp=<qw>,5=<fld75>,6=<fld76>,7=<fld77>,8=<fld78>,11=<fld79>,16=<fld80>,18=<fld80>,Software Version=<version>,Subject Alternative Name - DNS=<zc>,515-tcp=<zd>,19=<ze>,23-tcp=<zf>,LogicalProfile=<zg>,Key Usage=<zh>,Subject - Common Name=<zi>,9999-tcp=<zj>,17=<zk>,Subject Alternative Name=<zl>,Days to Expiry=<zm>,Device Port=<network_port>,135-tcp=<zo>,3389-tcp=<zp>,5357-tcp=<zq>,8081-tcp=<zr>,80-tcp=<zs>,49155-tcp=<zt>,sysLocation=<zu>,sysObjectID=<zv>,PostureExpiry=<xa>,lldpChassisId=<xb>,lldpCapabilitiesMapSupported=<xc>,lldpPortId=<xd>,3306-tcp=<xe>,lldpSystemName=<xf>,cdpUndefined18=<xg>,cdpUndefined19=<xh>,cdpUndefined31=<xi>,49156-tcp=<xj>,10000-tcp=<xk>,sysContact=<xl>,5900-tcp=<xm>,5800-tcp=<xn>,dot1xAuthSessionUserName=<xo>,AD-Host-Resolved-Identities=<xn>,dhcp-server-identifier=<xp>,NasRetransmissionTimeout=<xq>,TotalFailedTime=<ya>,TotalFailedAttempts=<yb>,RadiusPacketType=<yc>,Model Name=<yd>,20=<ye>,21=<yf>,22=<yg>,23=<yh>,24=<yi>,25=<yj>,26=<yk>,27=<yl>,631-tcp=<ym>,1720-tcp=<yn>,2000-tcp=<yo>,1433-tcp=<yp>,Serial Number=<serial_number>,IdentityStoreGUID=<qw>,Aruba-Location-Id=<qe>,NAS-Identifier=<application>,Stage=<qy>,VendorSpecific=<qu>,Aruba-Essid-Name=<qi>,ADDomain=<domain>,EapChainingResult=<ck>,Aruba-User-Role=<user_role>,Airespace-Wlan-Id=<wlan>,IssuedPacInfo=<qp>,NACRadiusUserName=<c_username>,OpenSSLErrorStack=<qs>,Description=<event_description>,IsEndpointInRejectMode=<qd>,MisconfiguredClientFixReason=<qf>,dhcp-max-message-size=<qg>,EndpointNameServer=<qh>,routers=<qj>,OU=<group_object>, Extended Key Usage - OID=<br>,TLSCipher=<s_cipher>,Issuer - Organization Unit=<zh>,IsThirdPartyDeviceFlow=<fld81>,Network Device Profile=<fld82>,AD-Host-DNS-Domain=<ad>,operating-system-result=<os>,allowEasyWiredSession=<fld83>,MessageCode=<fld84>,PostureStatus=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConfigVersionId=%{fld10},PostureAssessmentStatus=%{er},EndpointCertainityMetric=%{fld12},EndpointIPAddress=%{daddr},EndpointIdentityGroup=%{fld14},EndpointMacAddress=%{dmacaddr},EndpointMatchedPolicy=%{fld16},EndpointOUI=%{fld17},EndpointPolicy=%{fld18},EndpointProperty=%{fld19},EndpointNADAddress=%{saddr},EndPointPolicyID=%{af},StaticAssignment=%{ca},pxe-client-machine-id=%{as},DestinationPort=%{dport},giaddr=%{ab},Service-Type=%{service},TimeToProfile=%{ah},dhcp-client-identifier=%{pc},49152-tcp=%{tc},AD-Groups-Names=%{ah},49153-tcp=%{tp},OpenSSLErrorMessage=%{result},AD-User-Candidate-Identities=%{bm},AD-Host-Candidate-Identities=%{hc},Subject Alternative Name - DNS=%{cj},PhoneID=%{bd},Key Usage=%{br},ifIndex=%{bs},Subject - Common Name=%{br},445-tcp=%{fld60},135-tcp=%{fld61},OpenSSLErrorStack=%{cert_error},AD-Error-Details=%{result},StaticGroupAssignment=%{fld7},dhcp-requested-address=%{s},AuthenticationMethod=%{authmethod},NetworkDeviceName=%{node},op=%{an},pxe-client-arch=%{ar},443-tcp=%{fld44},Issuer - Country=%{za},21-tcp=%{zb},22-tcp=%{zc},162-udp=%{zc},Total Certainty Factor=%{zd},Total Certainty Factor=%{ze},lldpCacheCapabilities=%{zf}, Issuer - Organization=%{fld},161-udp=%{fld2},ConfigVersionId=%{cv},DetailedInfo=%{info},Extended Key Usage - Name=%{ao},AD-Groups-Names=%{ap},AD-Host-Candidate-Identities=%{aq},Issuer=%{ar},DC=%{as},ProfilerServer=%{fld11},Cookie=%{fld20},Host=%{fld21},Content-Length=%{fld22},If-Unmodified-Since=%{fld23},Pragma=%{fld24},SNMPOIDValue=%{fld21},ProfilerErrorMessage=%{result},Calling-Station-ID=%{connectionid},PostureApplicable=%{ac},CacheUpdateTime=%{ad},BYODRegistration=%{ae},FirstCollection=%{ag},LastNmapScanTime=%{ai},StaticGroupAssignment=%{aj},DeviceRegistrationStatus=%{result},NAS-Port-Type=%{context},PolicyVersion=%{am},IdentityGroupID=%{an},Total Certainty Factor=%{ao},MatchedPolicyID=%{aq},DestinationIPAddress=%{daddr},NmapScanCount=%{ar},LastActivity=%{as},NmapSubnetScanID=%{at},AAA-Server=%{hostname},PortalUser=%{username},Device Identifier=%{ba},MDMServerID=%{bb},host-name=%{bc},Framed-IP-Address=%{saddr},RegistrationTimeStamp=%{be},CreateTime=%{bf},EndpointUserAgent=%{user_agent},NAS-Port-Id=%{interface},MDMServerName=%{hostname},FailureReason=%{result},ifIndex=%{cb},cdpCachePlatform=%{cd},cdpCacheCapabilities=%{ce},cdpCacheDeviceId=%{cf},cdpCacheAddress=%{cg},operating-system=%{os},device-platform-version=%{ch},device-type=%{obj_type},device-platform=%{cj},AllowedProtocolMatchedRule=%{rulename},AuthenticationIdentityStore=%{c},AuthorizationPolicyMatchedRule=%{rulename},Called-Station-ID=%{calling_to},chaddr=%{i},ciaddr=%{j},client-fqdn=%{k},Device IP Address=%{hostip},Device Type=%{obj_type},dhcp-class-identifier=%{o},dhcp-client-identifier=%{p},dhcp-message-type=%{q},dhcp-parameter-request-list=%{r},dot1xAuthAuthControlledPortControl=%{t},dot1xAuthAuthControlledPortStatus=%{u},EndPointMACAddress=%{dmacaddr},EndpointSourceEvent=%{x},FeedService=%{y},flags=%{z},hlen=%{ac},htype=%{ae},IdentityAccessRestricted=%{af},ifDescr=%{ag},ifOperStatus=%{ah},Location=%{location_desc},NAS-Port=%{stransport},NetworkDeviceGroups=%{al},OriginalUserName=%{c_username},PostureAssessmentStatus=%{ap},pxe-client-network-id=%{at},Response=%{info},SelectedAccessService=%{service},SelectedAuthenticationIdentityStores=%{ax},SelectedAuthorizationProfiles=%{ay},undefined-151=%{ba},UpdateTime=%{bb},UseCase=%{bc},UserName=%{username},User-Name=%{username},UserType=%{bf},yiaddr=%{bg},lldpSystemDescription=%{bl},lldpPortDescription=%{bk},EndpointCoA=%{info},cdpCacheVersion=%{bm},lldpCacheCapabilities=%{bn},StepData=%{sd},hrDeviceStatus=%{ai},sysName=%{aj},sysDescr=%{ak},9100-tcp=%{al},22-tcp=%{qt},162-udp=%{fld98},139-tcp=%{fld71},445-tcp=%{ee},1025-tcp=%{ff},5432-tcp=%{fg},1028-tcp=%{gg},49153-tcp=%{fld73},1027-tcp=%{fld94},49152-tcp=%{fld72},443-tcp=%{qy},49154-tcp=%{fld74},49157-tcp=%{qw},5=%{fld75},6=%{fld76},7=%{fld77},8=%{fld78},11=%{fld79},16=%{fld80},18=%{fld80},Software Version=%{version},Subject Alternative Name - DNS=%{zc},515-tcp=%{zd},19=%{ze},23-tcp=%{zf},LogicalProfile=%{zg},Key Usage=%{zh},Subject - Common Name=%{zi},9999-tcp=%{zj},17=%{zk},Subject Alternative Name=%{zl},Days to Expiry=%{zm},Device Port=%{network_port},135-tcp=%{zo},3389-tcp=%{zp},5357-tcp=%{zq},8081-tcp=%{zr},80-tcp=%{zs},49155-tcp=%{zt},sysLocation=%{zu},sysObjectID=%{zv},PostureExpiry=%{xa},lldpChassisId=%{xb},lldpCapabilitiesMapSupported=%{xc},lldpPortId=%{xd},3306-tcp=%{xe},lldpSystemName=%{xf},cdpUndefined18=%{xg},cdpUndefined19=%{xh},cdpUndefined31=%{xi},49156-tcp=%{xj},10000-tcp=%{xk},sysContact=%{xl},5900-tcp=%{xm},5800-tcp=%{xn},dot1xAuthSessionUserName=%{xo},AD-Host-Resolved-Identities=%{xn},dhcp-server-identifier=%{xp},NasRetransmissionTimeout=%{xq},TotalFailedTime=%{ya},TotalFailedAttempts=%{yb},RadiusPacketType=%{yc},Model Name=%{yd},20=%{ye},21=%{yf},22=%{yg},23=%{yh},24=%{yi},25=%{yj},26=%{yk},27=%{yl},631-tcp=%{ym},1720-tcp=%{yn},2000-tcp=%{yo},1433-tcp=%{yp},Serial Number=%{serial_number},IdentityStoreGUID=%{qw},Aruba-Location-Id=%{qe},NAS-Identifier=%{application},Stage=%{qy},VendorSpecific=%{qu},Aruba-Essid-Name=%{qi},ADDomain=%{domain},EapChainingResult=%{ck},Aruba-User-Role=%{user_role},Airespace-Wlan-Id=%{wlan},IssuedPacInfo=%{qp},NACRadiusUserName=%{c_username},OpenSSLErrorStack=%{qs},Description=%{event_description},IsEndpointInRejectMode=%{qd},MisconfiguredClientFixReason=%{qf},dhcp-max-message-size=%{qg},EndpointNameServer=%{qh},routers=%{qj},OU=%{group_object}, Extended Key Usage - OID=%{br},TLSCipher=%{s_cipher},Issuer - Organization Unit=%{zh},IsThirdPartyDeviceFlow=%{fld81},Network Device Profile=%{fld82},AD-Host-DNS-Domain=%{ad},operating-system-result=%{os},allowEasyWiredSession=%{fld83},MessageCode=%{fld84},PostureStatus=%{disposition}" }
				id => "message-Profiler"
				add_field => {
					"[event][id]" => "Profiler"
					"[rsa][message][id1]" => "Profiler"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA: Framed-IP-Address=<saddr>,NAS-Port=<stransport>,NAS-IP-Address=<stransaddr>,User-Name=<username>,NetworkDeviceName=<node>,Device IP Address=<hostip>,NetworkDeviceGroups=<fld6>,ServiceSelectionMatchedRule=<fld21>,CPMSessionID=<sessionid>,Device Type=<obj_type>,Location=<location_desc>,Model Name=<fld97>,Software Version=<version>,Step=<fld5>,AcsSessionID=<sessionid>,SelectedAccessService=<service>,AllowedProtocolMatchedRule=<rulename>,All Stages=<fld9>,cisco-av-pair=<context>,Airespace-Wlan-Id=<wlan>,Service-Type=<service>,Tunnel-Private-Group-ID=<bs>,Called-Station-ID=<calling_to>,Acct-Session-Time=<duration>,Acct-Input-Packets=<cd>,Acct-Output-Packets=<ce>,Acct-Terminate-Cause=<action>,Tunnel-Type=<bq>,Tunnel-Medium-Type=<br>,Acct-Authentic=<au>,Acct-Session-Id=<sessionid>,undefined-52=<cf>,undefined-53=<cg>,Event-Timestamp=<event_time_string>,NAS-Port-Type=<context>,ConfigVersionId=<fld11>,RequestLatency=<dclass_counter1>,Class=<fld12>,Calling-Station-ID=<connectionid>,NAS-Identifier=<application>,Acct-Status-Type=<event_state>, Acct-Delay-Time=<fld15>, Acct-Input-Octets=<rbytes>, Acct-Output-Octets=<sbytes>,Network Device Profile=<fld82>,Aruba-Essid-Name=<fld16>,Aruba-Location-Id=<fld17>,Framed-IPv6-Prefix=<fld84>,Acct-Multi-Session-Id=<sessionid>,Aruba-AP-Group=<fld86>,Aruba-Device-Type=<fld87>,Aruba-User-Vlan=<fld88>,Aruba-User-Role=<user_role>,NAS-Port-Id=<interface>,undefined-151=<fld88>,Posutre_Enforcement=<fld89>,Wired_Deployment=<fld90>
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "Framed-IP-Address=%{saddr},NAS-Port=%{stransport},NAS-IP-Address=%{stransaddr},User-Name=%{username},NetworkDeviceName=%{node},Device IP Address=%{hostip},NetworkDeviceGroups=%{fld6},ServiceSelectionMatchedRule=%{fld21},CPMSessionID=%{sessionid},Device Type=%{obj_type},Location=%{location_desc},Model Name=%{fld97},Software Version=%{version},Step=%{fld5},AcsSessionID=%{sessionid},SelectedAccessService=%{service},AllowedProtocolMatchedRule=%{rulename},All Stages=%{fld9},cisco-av-pair=%{context},Airespace-Wlan-Id=%{wlan},Service-Type=%{service},Tunnel-Private-Group-ID=%{bs},Called-Station-ID=%{calling_to},Acct-Session-Time=%{duration},Acct-Input-Packets=%{cd},Acct-Output-Packets=%{ce},Acct-Terminate-Cause=%{action},Tunnel-Type=%{bq},Tunnel-Medium-Type=%{br},Acct-Authentic=%{au},Acct-Session-Id=%{sessionid},undefined-52=%{cf},undefined-53=%{cg},Event-Timestamp=%{event_time_string},NAS-Port-Type=%{context},ConfigVersionId=%{fld11},RequestLatency=%{dclass_counter1},Class=%{fld12},Calling-Station-ID=%{connectionid},NAS-Identifier=%{application},Acct-Status-Type=%{event_state}, Acct-Delay-Time=%{fld15}, Acct-Input-Octets=%{rbytes}, Acct-Output-Octets=%{sbytes},Network Device Profile=%{fld82},Aruba-Essid-Name=%{fld16},Aruba-Location-Id=%{fld17},Framed-IPv6-Prefix=%{fld84},Acct-Multi-Session-Id=%{sessionid},Aruba-AP-Group=%{fld86},Aruba-Device-Type=%{fld87},Aruba-User-Vlan=%{fld88},Aruba-User-Role=%{user_role},NAS-Port-Id=%{interface},undefined-151=%{fld88},Posutre_Enforcement=%{fld89},Wired_Deployment=%{fld90}" }
			id => "msgParserId72"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId73
	# line in RSA: ConfigVersionId=<fld1>,AntiSpywareInstalled=<info>,IpAddress=<hostip>,MacAddress=<macaddr>,OperatingSystem=<os>,PRAAction=<fld6>,PRAEnforcementFlag=<fld7>,PRAGraceTime=<fld8>,PRAInterval=<fld9>,PostureAgentVersion=<fld10>,PostureStatus=<disposition>,RequestTime=<fld11>,ResponseTime=<fld12>,SessionId=<fld25>,SystemDomain=<fld13>,SystemName=<fld14>,SystemUser=<fld15>,SystemUserDomain=<fld16>,UserAgreementStatus=<fld17>,UserName=<username>,AntiVirusInstalled=<info>,PostureReport=<fld19>,PosturePolicyMatched=<fld20>,FailureReason=<result>,HostID=<fld21>,OperationType=<action>,OperationStatus=<disposition>,EndpointMACAddress=<dmacaddr>, EndpointIPAddress=<daddr>,NetworkDeviceGroups=<fld21>
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "ConfigVersionId=%{fld1},AntiSpywareInstalled=%{info},IpAddress=%{hostip},MacAddress=%{macaddr},OperatingSystem=%{os},PRAAction=%{fld6},PRAEnforcementFlag=%{fld7},PRAGraceTime=%{fld8},PRAInterval=%{fld9},PostureAgentVersion=%{fld10},PostureStatus=%{disposition},RequestTime=%{fld11},ResponseTime=%{fld12},SessionId=%{fld25},SystemDomain=%{fld13},SystemName=%{fld14},SystemUser=%{fld15},SystemUserDomain=%{fld16},UserAgreementStatus=%{fld17},UserName=%{username},AntiVirusInstalled=%{info},PostureReport=%{fld19},PosturePolicyMatched=%{fld20},FailureReason=%{result},HostID=%{fld21},OperationType=%{action},OperationStatus=%{disposition},EndpointMACAddress=%{dmacaddr}, EndpointIPAddress=%{daddr},NetworkDeviceGroups=%{fld21}" }
			id => "msgParserId73"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId74
	# line in RSA: ConfigVersionId=<fld1>,FailureReason=<result>,MDMServerName=<hostname>
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "ConfigVersionId=%{fld1},FailureReason=%{result},MDMServerName=%{hostname}" }
			id => "msgParserId74"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Alarm" {
		# MESSAGE Alarm:03
		# line in RSA: RADIUS Authentication Request dropped : Server=<dhost>; NAS IP Address=<stransaddr>; NAS Identifier=<fld23>; Failure Reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RADIUS Authentication Request dropped : Server=%{dhost}; NAS IP Address=%{stransaddr}; NAS Identifier=%{fld23}; Failure Reason=%{result}" }
				id => "message-Alarm:03"
				add_field => {
					"[event][id]" => "Alarm:03"
					"[rsa][message][id1]" => "Alarm:03"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Alarm:02
		# line in RSA: Unknown NAD : Server=<dhost> NAS IP Address=<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unknown NAD : Server=%{dhost} NAS IP Address=%{stransaddr}" }
				id => "message-Alarm:02"
				add_field => {
					"[event][id]" => "Alarm:02"
					"[rsa][message][id1]" => "Alarm:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Alarm:01
		# line in RSA: Configuration Changed : Admin=<username>; Object Type=<obj_type>; Object Name=<obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Changed : Admin=%{username}; Object Type=%{obj_type}; Object Name=%{obj_name}" }
				id => "message-Alarm:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "Configuration Changed"
					"[event][id]" => "Alarm:01"
					"[rsa][message][id1]" => "Alarm:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Alarm:04
		# line in RSA: Configuration Added : Admin=<username>; Object Type=<obj_type>; Object Name=<obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Added : Admin=%{username}; Object Type=%{obj_type}; Object Name=%{obj_name}" }
				id => "message-Alarm:04"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "Configuration Added"
					"[event][id]" => "Alarm:04"
					"[rsa][message][id1]" => "Alarm:04"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Alarm:05
		# line in RSA: Configuration Deleted : Admin=<username>; Object Type=<obj_type>; Object Name=<obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Deleted : Admin=%{username}; Object Type=%{obj_type}; Object Name=%{obj_name}" }
				id => "message-Alarm:05"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Configuration Deleted"
					"[event][id]" => "Alarm:05"
					"[rsa][message][id1]" => "Alarm:05"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE Alarm
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Alarm"
				add_field => {
					"[event][id]" => "Alarm"
					"[rsa][message][id1]" => "Alarm"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CISE_System_Statistics" {
		# MESSAGE CISE_System_Statistics:01
		# line in RSA: System-Stats=<fld1>, ConfigVversionId=<fld2>, SysStatsAcsProcessHealth=<fld3>, Database Server=<fld4>, Applicaion Server=<fld5>, Profiler Database=<fld6>, AD Connector=<fld7>, Identity Mapping Service=<fld8>, SysStatsUtilizationCpu=<dclass_ratio1>, SysStatsUtilizationNetwork=<fld9>, SysStatsUtilizationMemory=<dclass_ratio2>, SysStatsUtilizationDiskIO=<dclass_ratio3>, SysStatsUtilizationDiskSpace=<fld11>, AverageRadiusRequestLatency=<dclass_counter2>, AverageTacacsRequestLatency=<dclass_counter3>, DeltaRadiusRequestCount=<fld34>, DeltaTacacsRequestCount=<fld47>, SysStatsUtilizationLoadAvg=<fld48>, SysStatsCpuCount=<fld49>, SysStatsProcessMemoryMB=<fld50>,ActiveSessionCount=<fld51>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System-Stats=%{fld1}, ConfigVversionId=%{fld2}, SysStatsAcsProcessHealth=%{fld3}, Database Server=%{fld4}, Applicaion Server=%{fld5}, Profiler Database=%{fld6}, AD Connector=%{fld7}, Identity Mapping Service=%{fld8}, SysStatsUtilizationCpu=%{dclass_ratio1}, SysStatsUtilizationNetwork=%{fld9}, SysStatsUtilizationMemory=%{dclass_ratio2}, SysStatsUtilizationDiskIO=%{dclass_ratio3}, SysStatsUtilizationDiskSpace=%{fld11}, AverageRadiusRequestLatency=%{dclass_counter2}, AverageTacacsRequestLatency=%{dclass_counter3}, DeltaRadiusRequestCount=%{fld34}, DeltaTacacsRequestCount=%{fld47}, SysStatsUtilizationLoadAvg=%{fld48}, SysStatsCpuCount=%{fld49}, SysStatsProcessMemoryMB=%{fld50},ActiveSessionCount=%{fld51}" }
				id => "message-CISE_System_Statistics:01"
				add_field => {
					"[event][id]" => "CISE_System_Statistics:01"
					"[rsa][message][id1]" => "CISE_System_Statistics:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_System_Statistics
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-CISE_System_Statistics"
				add_field => {
					"[event][id]" => "CISE_System_Statistics"
					"[rsa][message][id1]" => "CISE_System_Statistics"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA: AD-Domain=<domain>, AD-Domain-Controller=<ac>, AD-IP-Address=<hostip>, AD-Log-Id=<li>, AD-Site=<as>,AD-Trusted-Domain=<at>,AD-Forest=<af>,AD-Error-Details=<result>,AD-Account-Name=<username>,AD-Hostname=<hostname>,AD-Srv-Query=<an>,AD-Srv-Record=<am>,AD-IP-Address-Black-Listed=<ao>,AD-Admin=<ap>,AD-Organization-Unit=<aq>
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "AD-Domain=%{domain}, AD-Domain-Controller=%{ac}, AD-IP-Address=%{hostip}, AD-Log-Id=%{li}, AD-Site=%{as},AD-Trusted-Domain=%{at},AD-Forest=%{af},AD-Error-Details=%{result},AD-Account-Name=%{username},AD-Hostname=%{hostname},AD-Srv-Query=%{an},AD-Srv-Record=%{am},AD-IP-Address-Black-Listed=%{ao},AD-Admin=%{ap},AD-Organization-Unit=%{aq}" }
			id => "msgParserId82"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId83
	# line in RSA: AD-Domain=<domain>, AD-Domain-Controller=<ac>, AD-IP-Address=<hostip>, AD-Log-Id=<li>, AD-Site=<as>,AD-Trusted-Domain=<at>,AD-Forest=<af>,AD-Error-Details=<result>,AD-Account-Name=<username>,AD-Hostname=<hostname>,AD-Srv-Query=<an>,AD-Srv-Record=<am>
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "AD-Domain=%{domain}, AD-Domain-Controller=%{ac}, AD-IP-Address=%{hostip}, AD-Log-Id=%{li}, AD-Site=%{as},AD-Trusted-Domain=%{at},AD-Forest=%{af},AD-Error-Details=%{result},AD-Account-Name=%{username},AD-Hostname=%{hostname},AD-Srv-Query=%{an},AD-Srv-Record=%{am}" }
			id => "msgParserId83"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "CISE_RADIUS_Diagnostics" {
		# MESSAGE CISE_RADIUS_Diagnostics
		# line in RSA: Issuer - Common Name=<br>, Issuer - Domain Component=<id>, Key Usage=<ku>, Extended Key Usage - Name=<ek>, Extended Key Usage - OID=<eu>, Template Name=<tm>,Days to Expiry=<de>,Is Expired=<ie>,DC=<dc>,OpenSSLErrorMessage=<result>,OpenSSLErrorStack=<cert_error>,CPMSessionID=<sessionid>,C=<za>,Subject Alternative Name - DNS=<zb>,Issuer=<zc>,OU=<zd>,O=<ze>,C=<zf>,Issuer - Organization=<zg>,Issuer - Organization Unit=<zh>,Issuer - Country=<zi>,EapAuthentication=<zj>,O=<zk>,AcsSessionID=<sessionid>,SelectedAccessService=<service>,cisco-av-pair=<context>,Service-Type=<service>,TotalFailedTime=<ya>,TotalFailedAttempts=<yb>,Subject - Common Name=<yn>,Subject Alternative Name=<ym>,Subject - Organization=<ya>,Subject - Organization Unit=<ys>,Subject - Country=<yd>,Subject=<yf>,Response=<fld51>,Framed-IP-Address=<saddr>,NAS-Port=<stransport>,NAS-IP-Address=<stransaddr>,User-Name=<username>,NetworkDeviceName=<node>,Device IP Address=<hostip>,Device Port=<network_port>, DestinationIPAddress=<daddr>, DestinationPort=<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Issuer - Common Name=%{br}, Issuer - Domain Component=%{id}, Key Usage=%{ku}, Extended Key Usage - Name=%{ek}, Extended Key Usage - OID=%{eu}, Template Name=%{tm},Days to Expiry=%{de},Is Expired=%{ie},DC=%{dc},OpenSSLErrorMessage=%{result},OpenSSLErrorStack=%{cert_error},CPMSessionID=%{sessionid},C=%{za},Subject Alternative Name - DNS=%{zb},Issuer=%{zc},OU=%{zd},O=%{ze},C=%{zf},Issuer - Organization=%{zg},Issuer - Organization Unit=%{zh},Issuer - Country=%{zi},EapAuthentication=%{zj},O=%{zk},AcsSessionID=%{sessionid},SelectedAccessService=%{service},cisco-av-pair=%{context},Service-Type=%{service},TotalFailedTime=%{ya},TotalFailedAttempts=%{yb},Subject - Common Name=%{yn},Subject Alternative Name=%{ym},Subject - Organization=%{ya},Subject - Organization Unit=%{ys},Subject - Country=%{yd},Subject=%{yf},Response=%{fld51},Framed-IP-Address=%{saddr},NAS-Port=%{stransport},NAS-IP-Address=%{stransaddr},User-Name=%{username},NetworkDeviceName=%{node},Device IP Address=%{hostip},Device Port=%{network_port}, DestinationIPAddress=%{daddr}, DestinationPort=%{dport}" }
				id => "message-CISE_RADIUS_Diagnostics"
				add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
					"[event][id]" => "CISE_RADIUS_Diagnostics"
					"[rsa][message][id1]" => "CISE_RADIUS_Diagnostics"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE CISE_RADIUS_Diagnostics:01
		# line in RSA: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-CISE_RADIUS_Diagnostics:01"
				add_field => {
					"[event][id]" => "CISE_RADIUS_Diagnostics:01"
					"[rsa][message][id1]" => "CISE_RADIUS_Diagnostics:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId85
	# line in RSA: MESSAGE=<de>,used_space=<us>
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "MESSAGE=%{de},used_space=%{us}" }
			id => "msgParserId85"
			add_field => {
				"timezone" => "%{hfld8}"
				"hostname" => "%{hnode}"
				"id" => "%{hfld4}"
				"operation_id" => "%{hfld10}"
				"severity" => "%{hseverity}"
				"category" => "%{hfld11}"
				"event_description" => "%{hevent_description}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId86
	# line in RSA: <info>
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId86"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ADEOSShell" {
		# MESSAGE ADEOSShell
		# line in RSA: <process>[<process_id>]: <fld1>, type=SSH_EXIT, name=<fld2>, username=<username>, cause=<event_description>, adminipaddress=<saddr>, interface=<interface>, detail=User <c_username> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}[%{process_id}]: %{fld1}, type=SSH_EXIT, name=%{fld2}, username=%{username}, cause=%{event_description}, adminipaddress=%{saddr}, interface=%{interface}, detail=User %{c_username} logged out" }
				id => "message-ADEOSShell"
				add_field => {
				"event_type" => " SSH_EXIT"
				"a" => " User"
				"b" => " logged out"
				"event_description" => " *STRCAT(a,	,c_username,	,b)"
					"[event][id]" => "ADEOSShell"
					"[rsa][message][id1]" => "ADEOSShell"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE ADEOSShell:01
		# line in RSA: <process>[<process_id>]: <fld1>, type=COPY, name=<fld2>, username=<username>, cause=<event_description>, adminipaddress=<saddr>, interface=<interface>, {detail=Copied localfile <filename> to url <url> <disposition>|detail=Copying localfile <filename> to url <url> <disposition>:<info>|detail=Copying localfile <filename> to url <url> <disposition>|detail=Localfile <filename> transfer to url <url> <disposition>|detail=<info>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^,]*),[\s]+type=COPY,[\s]+name=(?<fld2>[^,]*),[\s]+username=(?<username>[^,]*),[\s]+cause=(?<event_description>[^,]*),[\s]+adminipaddress=(?<saddr>[^,]*),[\s]+interface=(?<interface>[^,]*),[\s]+(detail=Copied[\s]+localfile[\s]+(?<filename>[^\s]*)[\s]+to[\s]+url[\s]+(?<url>[^\s]*)[\s]+(?<disposition>[^\s]*)|detail=Copying[\s]+localfile[\s]+(?<filename>[^\s]*)[\s]+to[\s]+url[\s]+(?<url>[^\s]*)[\s]+(?<disposition>[^:]*):(?<info>[^\s]*)|detail=Copying[\s]+localfile[\s]+(?<filename>[^\s]*)[\s]+to[\s]+url[\s]+(?<url>[^\s]*)[\s]+(?<disposition>[^\s]*)|detail=Localfile[\s]+(?<filename>[^\s]*)[\s]+transfer[\s]+to[\s]+url[\s]+(?<url>[^\s]*)[\s]+(?<disposition>[^\s]*)|detail=(?<info>[^\s]*))[\s]+$" }
				id => "message-ADEOSShell:01"
				add_field => {
				"event_type" => " COPY"
					"[event][id]" => "ADEOSShell:01"
					"[rsa][message][id1]" => "ADEOSShell:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE ADEOSShell:02
		# line in RSA: <process>[<process_id>]: <fld1>, type=LOG SERVER, name=<fld2>, username=<username>, cause=<event_description>, adminipaddress=<saddr>, interface=<interface>,{detail=Log server configuration has been modified, <hostip> with <protocol> transport added|detail=<info>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^,]*),[\s]+type=LOG[\s]+SERVER,[\s]+name=(?<fld2>[^,]*),[\s]+username=(?<username>[^,]*),[\s]+cause=(?<event_description>[^,]*),[\s]+adminipaddress=(?<saddr>[^,]*),[\s]+interface=(?<interface>[^,]*),(detail=Log[\s]+server[\s]+configuration[\s]+has[\s]+been[\s]+modified,[\s]+(?<hostip>[^\s]*)[\s]+with[\s]+(?<protocol>[^\s]*)[\s]+transport[\s]+added|detail=(?<info>[^\s]*))[\s]+$" }
				id => "message-ADEOSShell:02"
				add_field => {
				"event_type" => " LOG SERVER"
					"[event][id]" => "ADEOSShell:02"
					"[rsa][message][id1]" => "ADEOSShell:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE ADEOSShell:03
		# line in RSA: <process>[<process_id>]: <fld1>, type=DELETE, name=<fld2>, username=<username>, cause=<event_description>, adminipaddress=<saddr>, interface=<interface>, {detail=Deleted file <filename> <disposition>|detail=<info>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^,]*),[\s]+type=DELETE,[\s]+name=(?<fld2>[^,]*),[\s]+username=(?<username>[^,]*),[\s]+cause=(?<event_description>[^,]*),[\s]+adminipaddress=(?<saddr>[^,]*),[\s]+interface=(?<interface>[^,]*),[\s]+(detail=Deleted[\s]+file[\s]+(?<filename>[^\s]*)[\s]+(?<disposition>[^\s]*)|detail=(?<info>[^\s]*))[\s]+$" }
				id => "message-ADEOSShell:03"
				add_field => {
				"event_type" => " DELETE"
					"[event][id]" => "ADEOSShell:03"
					"[rsa][message][id1]" => "ADEOSShell:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId91
	# line in RSA: <process>[<process_id>]: [<fld1>]:[<severity>] <fld6>: <fld2>[<fld3>] [<fld4>]: {application component backup <filename> to repository <fld5>: <disposition>|<info>}
	else if [logstash][msgparser][id] == "msgParserId91" {
		grok {
			match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[(?<fld1>[^\]]*)\]:\[(?<severity>[^\]]*)\][\s]+(?<fld6>[^:]*):[\s]+(?<fld2>[^\[]*)\[(?<fld3>[^\]]*)\][\s]+\[(?<fld4>[^\]]*)\]:[\s]+(application[\s]+component[\s]+backup[\s]+(?<filename>[^\s]*)[\s]+to[\s]+repository[\s]+(?<fld5>[^:]*):[\s]+(?<disposition>.*)|(?<info>.*))$" }
			id => "msgParserId91"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA: '<filename>' <action> <disposition>
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "'%{filename}' %{action} %{disposition}" }
			id => "msgParserId92"
			add_field => {
				"event_description" => " DELETE LOG FILE"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ciscosecureacsmsg.json"
#			template_name => "ciscosecureacs_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
