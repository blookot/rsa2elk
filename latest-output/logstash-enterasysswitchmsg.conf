# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "enterasysswitch"
			"[observer][name]" => "Enterasys Switch"
			"[observer][type]" => "Switch"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld14>  <hfld15> <hfld16> <hostname> <messageid>[ <!payload:hfld14>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld14>[^\s]*)[\s]+(?<hfld15>[^\s]*)[\s]+(?<hfld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<messageid>[^\[]*)\[[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-enterasysswitchmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "SNMP" {
		# MESSAGE SNMP
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> SNMP[<fld48>]Port:<interface>; Link Up.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} SNMP[%{fld48}]Port:%{interface}; Link Up." }
				id => "message-SNMP"
				add_field => {
					"[event][id]" => "SNMP"
					"[rsa][message][id1]" => "SNMP"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SNMP:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> SNMP[<fld48>]Port:<interface>; Link Down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} SNMP[%{fld48}]Port:%{interface}; Link Down." }
				id => "message-SNMP:01"
				add_field => {
					"[event][id]" => "SNMP:01"
					"[rsa][message][id1]" => "SNMP:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SNMP:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> SNMP[<fld48>]User:<username>; Source:<saddr>; Action:<action>; Status:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} SNMP[%{fld48}]User:%{username}; Source:%{saddr}; Action:%{action}; Status:%{result}" }
				id => "message-SNMP:02"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "SNMP:02"
					"[rsa][message][id1]" => "SNMP:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SNMP:03
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> SNMP[<fld48>]User:<username>; Source:<saddr>; Auth failure, <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} SNMP[%{fld48}]User:%{username}; Source:%{saddr}; Auth failure, %{result}." }
				id => "message-SNMP:03"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "SNMP:03"
					"[rsa][message][id1]" => "SNMP:03"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CLI" {
		# MESSAGE CLI
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username>; Source:<saddr>(<network_service>); Action:<action>; Status:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username}; Source:%{saddr}(%{network_service}); Action:%{action}; Status:%{result}" }
				id => "message-CLI"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI"
					"[rsa][message][id1]" => "CLI"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> logged in from <saddr>(<network_service>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} logged in from %{saddr}(%{network_service})" }
				id => "message-CLI:01"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:01"
					"[rsa][message][id1]" => "CLI:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> logged out from <saddr>(<network_service>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} logged out from %{saddr}(%{network_service})" }
				id => "message-CLI:02"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:02"
					"[rsa][message][id1]" => "CLI:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:03
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> failed login from <saddr>(<network_service>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} failed login from %{saddr}(%{network_service})" }
				id => "message-CLI:03"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:03"
					"[rsa][message][id1]" => "CLI:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:04
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> denied access, console in use.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} denied access, console in use." }
				id => "message-CLI:04"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:04"
					"[rsa][message][id1]" => "CLI:04"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:06
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> has been disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} has been disabled" }
				id => "message-CLI:06"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:06"
					"[rsa][message][id1]" => "CLI:06"
					"[event][categoryid]" => "1402020400"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:07
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> has been enabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} has been enabled" }
				id => "message-CLI:07"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:07"
					"[rsa][message][id1]" => "CLI:07"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:08
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> created with read-write access
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} created with read-write access" }
				id => "message-CLI:08"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:08"
					"[rsa][message][id1]" => "CLI:08"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:09
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> changed to read-only access
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} changed to read-only access" }
				id => "message-CLI:09"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:09"
					"[rsa][message][id1]" => "CLI:09"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:10
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> password changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} password changed" }
				id => "message-CLI:10"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:10"
					"[rsa][message][id1]" => "CLI:10"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLI:11
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> CLI[<fld48>]User:<username> has been deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} CLI[%{fld48}]User:%{username} has been deleted" }
				id => "message-CLI:11"
				add_field => {
				"c_username" => "%{username}"
					"[event][id]" => "CLI:11"
					"[rsa][message][id1]" => "CLI:11"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE System
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]User initiated reset
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]User initiated reset" }
				id => "message-System"
				add_field => {
					"[event][id]" => "System"
					"[rsa][message][id1]" => "System"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Clearing of persistent data complete
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Clearing of persistent data complete" }
				id => "message-System:01"
				add_field => {
					"[event][id]" => "System:01"
					"[rsa][message][id1]" => "System:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]One or more boards are present in the chassis but are not fully functional.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]One or more boards are present in the chassis but are not fully functional." }
				id => "message-System:02"
				add_field => {
					"[event][id]" => "System:02"
					"[rsa][message][id1]" => "System:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:03
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Unknown XFP 1 detected.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Unknown XFP 1 detected." }
				id => "message-System:03"
				add_field => {
					"[event][id]" => "System:03"
					"[rsa][message][id1]" => "System:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:04
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Switch Fabric soft memory error.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Switch Fabric soft memory error." }
				id => "message-System:04"
				add_field => {
					"[event][id]" => "System:04"
					"[rsa][message][id1]" => "System:04"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:05
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Switch Fabric hard memory error. Please contact Support for a possible repair/replacement.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Switch Fabric hard memory error. Please contact Support for a possible repair/replacement." }
				id => "message-System:05"
				add_field => {
					"[event][id]" => "System:05"
					"[rsa][message][id1]" => "System:05"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:06
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Chassis fabric is not operational.  IO module has ceased operation.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Chassis fabric is not operational.  IO module has ceased operation." }
				id => "message-System:06"
				add_field => {
					"[event][id]" => "System:06"
					"[rsa][message][id1]" => "System:06"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:07
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Chassis fabric is operational.  IO module will resume operation.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Chassis fabric is operational.  IO module will resume operation." }
				id => "message-System:07"
				add_field => {
					"[event][id]" => "System:07"
					"[rsa][message][id1]" => "System:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:08
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Shutting down fabric chips.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Shutting down fabric chips." }
				id => "message-System:08"
				add_field => {
					"[event][id]" => "System:08"
					"[rsa][message][id1]" => "System:08"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:09
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Initiating a new configuration
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Initiating a new configuration" }
				id => "message-System:09"
				add_field => {
					"[event][id]" => "System:09"
					"[rsa][message][id1]" => "System:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:10
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Detected missing or reset module, aborting configure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Detected missing or reset module, aborting configure" }
				id => "message-System:10"
				add_field => {
					"[event][id]" => "System:10"
					"[rsa][message][id1]" => "System:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:11
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Configure Error: This module reset before configure completed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Configure Error: This module reset before configure completed" }
				id => "message-System:11"
				add_field => {
					"[event][id]" => "System:11"
					"[rsa][message][id1]" => "System:11"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:12
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Configure notification timeout. Reverting to old configuration 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Configure notification timeout. Reverting to old configuration" }
				id => "message-System:12"
				add_field => {
					"[event][id]" => "System:12"
					"[rsa][message][id1]" => "System:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:13
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Requesting a copy of our local non-volatile store.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Requesting a copy of our local non-volatile store." }
				id => "message-System:13"
				add_field => {
					"[event][id]" => "System:13"
					"[rsa][message][id1]" => "System:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:14
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]PoE power redundancy present.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]PoE power redundancy present." }
				id => "message-System:14"
				add_field => {
					"[event][id]" => "System:14"
					"[rsa][message][id1]" => "System:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:15
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]PoE power redundancy not present.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]PoE power redundancy not present." }
				id => "message-System:15"
				add_field => {
					"[event][id]" => "System:15"
					"[rsa][message][id1]" => "System:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:16
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Insufficient memory to enable NetFlow.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Insufficient memory to enable NetFlow." }
				id => "message-System:16"
				add_field => {
					"[event][id]" => "System:16"
					"[rsa][message][id1]" => "System:16"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:17
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]A valid redundancy key has been installed.  Enabling redundancy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]A valid redundancy key has been installed.  Enabling redundancy." }
				id => "message-System:17"
				add_field => {
					"[event][id]" => "System:17"
					"[rsa][message][id1]" => "System:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:18
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Environmental temperature is hot.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Environmental temperature is hot." }
				id => "message-System:18"
				add_field => {
					"[event][id]" => "System:18"
					"[rsa][message][id1]" => "System:18"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:19
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Environmental temperature is normal.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Environmental temperature is normal." }
				id => "message-System:19"
				add_field => {
					"[event][id]" => "System:19"
					"[rsa][message][id1]" => "System:19"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:20
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Shutting board down due to hot temperature.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Shutting board down due to hot temperature." }
				id => "message-System:20"
				add_field => {
					"[event][id]" => "System:20"
					"[rsa][message][id1]" => "System:20"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:21
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Reopen attempted for current.log 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Reopen attempted for current.log" }
				id => "message-System:21"
				add_field => {
					"[event][id]" => "System:21"
					"[rsa][message][id1]" => "System:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:22
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> System[<fld48>]Reconnect attempted for <dhost> (<daddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} System[%{fld48}]Reconnect attempted for %{dhost} (%{daddr})" }
				id => "message-System:22"
				add_field => {
					"[event][id]" => "System:22"
					"[rsa][message][id1]" => "System:22"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "FlowLimt" {
		# MESSAGE FlowLimt
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> FlowLimt[<fld48>]Flow Count of <fld23> on <interface> above notification limit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} FlowLimt[%{fld48}]Flow Count of %{fld23} on %{interface} above notification limit" }
				id => "message-FlowLimt"
				add_field => {
					"[event][id]" => "FlowLimt"
					"[rsa][message][id1]" => "FlowLimt"
					"[event][categoryid]" => "1805020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FlowLimt:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> FlowLimt[<fld48>]Flow count over <fld23> on port <interface> - dropping flows
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} FlowLimt[%{fld48}]Flow count over %{fld23} on port %{interface} - dropping flows" }
				id => "message-FlowLimt:01"
				add_field => {
					"[event][id]" => "FlowLimt:01"
					"[rsa][message][id1]" => "FlowLimt:01"
					"[event][categoryid]" => "1805020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FlowLimt:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> FlowLimt[<fld48>]Flow count under <fld23> on port <interface> - no longer dropping flows
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} FlowLimt[%{fld48}]Flow count under %{fld23} on port %{interface} - no longer dropping flows" }
				id => "message-FlowLimt:02"
				add_field => {
					"[event][id]" => "FlowLimt:02"
					"[rsa][message][id1]" => "FlowLimt:02"
					"[event][categoryid]" => "1805020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FlowLimt:03
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> FlowLimt[<fld48>]Flow count over <fld23> on port <interface> - interface disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} FlowLimt[%{fld48}]Flow count over %{fld23} on port %{interface} - interface disabled" }
				id => "message-FlowLimt:03"
				add_field => {
					"[event][id]" => "FlowLimt:03"
					"[rsa][message][id1]" => "FlowLimt:03"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FlowLimt:04
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> FlowLimt[<fld48>]Flow limit enable port <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} FlowLimt[%{fld48}]Flow limit enable port %{interface}" }
				id => "message-FlowLimt:04"
				add_field => {
					"[event][id]" => "FlowLimt:04"
					"[rsa][message][id1]" => "FlowLimt:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "AddrNtfy" {
		# MESSAGE AddrNtfy
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AddrNtfy[<fld48>]MAC: <macaddr> learnt on port <interface>, FID <fld23>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AddrNtfy[%{fld48}]MAC: %{macaddr} learnt on port %{interface}, FID %{fld23}" }
				id => "message-AddrNtfy"
				add_field => {
					"[event][id]" => "AddrNtfy"
					"[rsa][message][id1]" => "AddrNtfy"
					"[event][categoryid]" => "1805020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AddrNtfy:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AddrNtfy[<fld48>]MAC: <macaddr> moved to port <interface>, FID <fld23>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AddrNtfy[%{fld48}]MAC: %{macaddr} moved to port %{interface}, FID %{fld23}" }
				id => "message-AddrNtfy:01"
				add_field => {
					"[event][id]" => "AddrNtfy:01"
					"[rsa][message][id1]" => "AddrNtfy:01"
					"[event][categoryid]" => "1805020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "AAA" {
		# MESSAGE AAA:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AAA[<fld48>]Authorization values for <fld24>(username <username>) on port <interface> Access Level <fld25>, Policy Id <fld26>, Tunnel Type: <fld27>, Tunnel Medium <fld28>, Tunnel Group Id <fld29>, Session Timeout <fld30>, Idle Timeout <fld31>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AAA[%{fld48}]Authorization values for %{fld24}(username %{username}) on port %{interface} Access Level %{fld25}, Policy Id %{fld26}, Tunnel Type: %{fld27}, Tunnel Medium %{fld28}, Tunnel Group Id %{fld29}, Session Timeout %{fld30}, Idle Timeout %{fld31}" }
				id => "message-AAA:01"
				add_field => {
					"[event][id]" => "AAA:01"
					"[rsa][message][id1]" => "AAA:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AAA:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AAA[<fld48>]RADIUS Received an <fld25>(length <fld26>, udp port <fld27>, RADIUS id <fld28>) from <dhost> server #<fld29> for <fld30>(username <username>) on port <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AAA[%{fld48}]RADIUS Received an %{fld25}(length %{fld26}, udp port %{fld27}, RADIUS id %{fld28}) from %{dhost} server #%{fld29} for %{fld30}(username %{username}) on port %{interface}" }
				id => "message-AAA:02"
				add_field => {
					"[event][id]" => "AAA:02"
					"[rsa][message][id1]" => "AAA:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AAA:03
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AAA[<fld48>]RADIUS Timeout for <dhost> server <fld25> for <fld26>(username <username>) on port <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AAA[%{fld48}]RADIUS Timeout for %{dhost} server %{fld25} for %{fld26}(username %{username}) on port %{interface}" }
				id => "message-AAA:03"
				add_field => {
					"[event][id]" => "AAA:03"
					"[rsa][message][id1]" => "AAA:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AAA:04
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AAA[<fld48>]RADIUS <fld25>(length <fld26>, udp port <fld27>, RADIUS id <fld28>) sent to server #<fld29> for <fld30>(username <username>) on port <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AAA[%{fld48}]RADIUS %{fld25}(length %{fld26}, udp port %{fld27}, RADIUS id %{fld28}) sent to server #%{fld29} for %{fld30}(username %{username}) on port %{interface}" }
				id => "message-AAA:04"
				add_field => {
					"[event][id]" => "AAA:04"
					"[rsa][message][id1]" => "AAA:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AAA
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> AAA[<fld48>]<fld23> for <fld24>(username <username>) on port <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} AAA[%{fld48}]%{fld23} for %{fld24}(username %{username}) on port %{interface}" }
				id => "message-AAA"
				add_field => {
					"[event][id]" => "AAA"
					"[rsa][message][id1]" => "AAA"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: <fld14>  <fld15> <fld16> <hostname> LACP[<fld48>]LACP partner information changed on <interface> (<fld25>.<fld26>.<fld27>.<fld28>.<fld29>.<fld30>)
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} LACP[%{fld48}]LACP partner information changed on %{interface} (%{fld25}.%{fld26}.%{fld27}.%{fld28}.%{fld29}.%{fld30})" }
			id => "msgParserId50"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "RtrAcl" {
		# MESSAGE RtrAcl
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrAcl[<fld48>]Outbound rule <<<rule_template>> on router <fld25> ACL <fld26> has occurred on vlan <vlan>, port <interface>, mac <macaddr>, sip <saddr>, dip <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrAcl[%{fld48}]Outbound rule <%{rule_template}> on router %{fld25} ACL %{fld26} has occurred on vlan %{vlan}, port %{interface}, mac %{macaddr}, sip %{saddr}, dip %{daddr}" }
				id => "message-RtrAcl"
				add_field => {
					"[event][id]" => "RtrAcl"
					"[rsa][message][id1]" => "RtrAcl"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RtrAcl:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrAcl[<fld48>]Outbound rule <<<rule_template>> on router <fld25> ACL <fld26> has occurred <fld27> time(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrAcl[%{fld48}]Outbound rule <%{rule_template}> on router %{fld25} ACL %{fld26} has occurred %{fld27} time(s)" }
				id => "message-RtrAcl:01"
				add_field => {
					"[event][id]" => "RtrAcl:01"
					"[rsa][message][id1]" => "RtrAcl:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RtrAcl:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrAcl[<fld48>]Inbound rule <<<rule_template>> on router <fld25> ACL <fld26> has occurred on vlan <vlan>, port <interface>, mac <macaddr>, sip <saddr>, dip <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrAcl[%{fld48}]Inbound rule <%{rule_template}> on router %{fld25} ACL %{fld26} has occurred on vlan %{vlan}, port %{interface}, mac %{macaddr}, sip %{saddr}, dip %{daddr}" }
				id => "message-RtrAcl:02"
				add_field => {
					"[event][id]" => "RtrAcl:02"
					"[rsa][message][id1]" => "RtrAcl:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "RtrFe" {
		# MESSAGE RtrFe
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrFe[<fld48>]DHCP Request from <saddr>, <macaddr> received on wrong vlan <vlan>, Packet Filtered
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrFe[%{fld48}]DHCP Request from %{saddr}, %{macaddr} received on wrong vlan %{vlan}, Packet Filtered" }
				id => "message-RtrFe"
				add_field => {
					"[event][id]" => "RtrFe"
					"[rsa][message][id1]" => "RtrFe"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RtrFe:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrFe[<fld48>] Invalid source IP <saddr> from <macaddr> on vlan <vlan> destined to <daddr>, Packets Filtered
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrFe[%{fld48}] Invalid source IP %{saddr} from %{macaddr} on vlan %{vlan} destined to %{daddr}, Packets Filtered" }
				id => "message-RtrFe:01"
				add_field => {
					"[event][id]" => "RtrFe:01"
					"[rsa][message][id1]" => "RtrFe:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RtrFe:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrFe[<fld48>] Invalid dest IP <daddr> from <macaddr>, <fld25>, Packets Filtered
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrFe[%{fld48}] Invalid dest IP %{daddr} from %{macaddr}, %{fld25}, Packets Filtered" }
				id => "message-RtrFe:02"
				add_field => {
					"[event][id]" => "RtrFe:02"
					"[rsa][message][id1]" => "RtrFe:02"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Router" {
		# MESSAGE Router
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> Router[<fld48>]router interface vlan <vlan>, ip <dhost> is up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} Router[%{fld48}]router interface vlan %{vlan}, ip %{dhost} is up" }
				id => "message-Router"
				add_field => {
					"[event][id]" => "Router"
					"[rsa][message][id1]" => "Router"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Router:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> Router[<fld48>]router interface vlan <vlan>, ip <dhost> is down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} Router[%{fld48}]router interface vlan %{vlan}, ip %{dhost} is down" }
				id => "message-Router:01"
				add_field => {
					"[event][id]" => "Router:01"
					"[rsa][message][id1]" => "Router:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA: <fld14>  <fld15> <fld16> <hostname> RtrArpProc[<fld48>]ip=<shost>, oldMac=<change_old>, newMac=<change_new>, log <fld25>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} RtrArpProc[%{fld48}]ip=%{shost}, oldMac=%{change_old}, newMac=%{change_new}, log %{fld25}" }
			id => "msgParserId59"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "UPN" {
		# MESSAGE UPN:16
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} {{<fld46>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) TTL(<fld33>) UDP_DST(<fld34>) UDP_SRC(<fld35>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+\{(?<fld46>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+VER\((?<fld29>[^\)]*)\)[\s]+HLEN\((?<fld30>[^\)]*)\)[\s]+TOTALLEN\((?<fld31>[^\)]*)\)[\s]+PROTO\((?<protocol>[^\)]*)\)[\s]+TOS\((?<fld32>[^\)]*)\)[\s]+TTL\((?<fld33>[^\)]*)\)[\s]+UDP_DST\((?<fld34>[^\)]*)\)[\s]+UDP_SRC\((?<fld35>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:16"
				add_field => {
					"[event][id]" => "UPN:16"
					"[rsa][message][id1]" => "UPN:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:17
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} {{<fld46>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) TTL(<fld33>) ICMP(<fld34>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+\{(?<fld46>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+VER\((?<fld29>[^\)]*)\)[\s]+HLEN\((?<fld30>[^\)]*)\)[\s]+TOTALLEN\((?<fld31>[^\)]*)\)[\s]+PROTO\((?<protocol>[^\)]*)\)[\s]+TOS\((?<fld32>[^\)]*)\)[\s]+TTL\((?<fld33>[^\)]*)\)[\s]+ICMP\((?<fld34>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:17"
				add_field => {
					"[event][id]" => "UPN:17"
					"[rsa][message][id1]" => "UPN:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:18
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} {{<fld46>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) DPORT(<fld33>) SPORT(<fld34>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+\{(?<fld46>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+VER\((?<fld29>[^\)]*)\)[\s]+HLEN\((?<fld30>[^\)]*)\)[\s]+TOTALLEN\((?<fld31>[^\)]*)\)[\s]+PROTO\((?<protocol>[^\)]*)\)[\s]+TOS\((?<fld32>[^\)]*)\)[\s]+DPORT\((?<fld33>[^\)]*)\)[\s]+SPORT\((?<fld34>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:18"
				add_field => {
					"[event][id]" => "UPN:18"
					"[rsa][message][id1]" => "UPN:18"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:15
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} {{<fld46>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+\{(?<fld46>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:15"
				add_field => {
					"[event][id]" => "UPN:15"
					"[rsa][message][id1]" => "UPN:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:14
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} {{<fld46>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+\{(?<fld46>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:14"
				add_field => {
					"[event][id]" => "UPN:14"
					"[rsa][message][id1]" => "UPN:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:13
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} {{<fld46>} on <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+\{(?<fld46>[^\}]*)\}[\s]+on[\s]+(?<interface>.*)$" }
				id => "message-UPN:13"
				add_field => {
					"[event][id]" => "UPN:13"
					"[rsa][message][id1]" => "UPN:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:10
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) TTL(<fld33>) UDP_DST(<fld34>) UDP_SRC(<fld35>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+VER\((?<fld29>[^\)]*)\)[\s]+HLEN\((?<fld30>[^\)]*)\)[\s]+TOTALLEN\((?<fld31>[^\)]*)\)[\s]+PROTO\((?<protocol>[^\)]*)\)[\s]+TOS\((?<fld32>[^\)]*)\)[\s]+TTL\((?<fld33>[^\)]*)\)[\s]+UDP_DST\((?<fld34>[^\)]*)\)[\s]+UDP_SRC\((?<fld35>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:10"
				add_field => {
					"[event][id]" => "UPN:10"
					"[rsa][message][id1]" => "UPN:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:11
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) TTL(<fld33>) ICMP(<fld34>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+VER\((?<fld29>[^\)]*)\)[\s]+HLEN\((?<fld30>[^\)]*)\)[\s]+TOTALLEN\((?<fld31>[^\)]*)\)[\s]+PROTO\((?<protocol>[^\)]*)\)[\s]+TOS\((?<fld32>[^\)]*)\)[\s]+TTL\((?<fld33>[^\)]*)\)[\s]+ICMP\((?<fld34>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:11"
				add_field => {
					"[event][id]" => "UPN:11"
					"[rsa][message][id1]" => "UPN:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:12
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) DPORT(<fld33>) SPORT(<fld34>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+VER\((?<fld29>[^\)]*)\)[\s]+HLEN\((?<fld30>[^\)]*)\)[\s]+TOTALLEN\((?<fld31>[^\)]*)\)[\s]+PROTO\((?<protocol>[^\)]*)\)[\s]+TOS\((?<fld32>[^\)]*)\)[\s]+DPORT\((?<fld33>[^\)]*)\)[\s]+SPORT\((?<fld34>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:12"
				add_field => {
					"[event][id]" => "UPN:12"
					"[rsa][message][id1]" => "UPN:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:09
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+SIP\((?<shost>[^\)]*)\)[\s]+DIP\((?<dhost>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:09"
				add_field => {
					"[event][id]" => "UPN:09"
					"[rsa][message][id1]" => "UPN:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:08
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+on[\s]+(?<fld25>[^\s]*)[\s]+\[[\s]+InPort\((?<interface>[^\)]*)\)[\s]+LEN\((?<fld27>[^\)]*)\)[\s]+DA\((?<dmacaddr>[^\)]*)\)[\s]+SA\((?<smacaddr>[^\)]*)\)[\s]+ETYPE\((?<fld28>[^\)]*)\)[\s]+\]$" }
				id => "message-UPN:08"
				add_field => {
					"[event][id]" => "UPN:08"
					"[rsa][message][id1]" => "UPN:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:07
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  {{<fld45>} on <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld14>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+UPN\[(?<fld48>[^\]]*)\]Rule[\s]+hit[\s]+\[(?<fld26>[^\]]*)\][\s]+Authorized[\s]+to[\s]+(?<fld47>[^\s]*)[\s]+\{(?<fld45>[^\}]*)\}[\s]+on[\s]+(?<interface>.*)$" }
				id => "message-UPN:07"
				add_field => {
					"[event][id]" => "UPN:07"
					"[rsa][message][id1]" => "UPN:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:04
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) TTL(<fld33>) UDP_DST(<fld34>) UDP_SRC(<fld35>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] Authorized to %{fld47}  on %{fld25}  [ InPort(%{interface}) LEN(%{fld27}) DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) VER(%{fld29}) HLEN(%{fld30}) TOTALLEN(%{fld31}) PROTO(%{protocol}) TOS(%{fld32}) TTL(%{fld33}) UDP_DST(%{fld34}) UDP_SRC(%{fld35}) ]" }
				id => "message-UPN:04"
				add_field => {
					"[event][id]" => "UPN:04"
					"[rsa][message][id1]" => "UPN:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:05
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) TTL(<fld33>) ICMP(<fld34>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] Authorized to %{fld47}  on %{fld25}  [ InPort(%{interface}) LEN(%{fld27}) DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) VER(%{fld29}) HLEN(%{fld30}) TOTALLEN(%{fld31}) PROTO(%{protocol}) TOS(%{fld32}) TTL(%{fld33}) ICMP(%{fld34}) ]" }
				id => "message-UPN:05"
				add_field => {
					"[event][id]" => "UPN:05"
					"[rsa][message][id1]" => "UPN:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:06
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) VER(<fld29>) HLEN(<fld30>) TOTALLEN(<fld31>) PROTO(<protocol>) TOS(<fld32>) DPORT(<fld33>) SPORT(<fld34>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] Authorized to %{fld47}  on %{fld25}  [ InPort(%{interface}) LEN(%{fld27}) DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) VER(%{fld29}) HLEN(%{fld30}) TOTALLEN(%{fld31}) PROTO(%{protocol}) TOS(%{fld32}) DPORT(%{fld33}) SPORT(%{fld34}) ]" }
				id => "message-UPN:06"
				add_field => {
					"[event][id]" => "UPN:06"
					"[rsa][message][id1]" => "UPN:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:03
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] Authorized to %{fld47}  on %{fld25}  [ InPort(%{interface}) LEN(%{fld27}) DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) ]" }
				id => "message-UPN:03"
				add_field => {
					"[event][id]" => "UPN:03"
					"[rsa][message][id1]" => "UPN:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:02
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] Authorized to <fld47>  on <fld25>  [ InPort(<interface>) LEN(<fld27>) DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] Authorized to %{fld47}  on %{fld25}  [ InPort(%{interface}) LEN(%{fld27}) DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) ]" }
				id => "message-UPN:02"
				add_field => {
					"[event][id]" => "UPN:02"
					"[rsa][message][id1]" => "UPN:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [VlanId  |<fld25>|<interface>] Authorized to <fld47>  on <fld28>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [VlanId  |%{fld25}|%{interface}] Authorized to %{fld47}  on %{fld28}" }
				id => "message-UPN"
				add_field => {
					"[event][id]" => "UPN"
					"[rsa][message][id1]" => "UPN"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:01
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [Port    |<interface>] Authorized to <fld47>  on <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [Port    |%{interface}] Authorized to %{fld47}  on %{fld25}" }
				id => "message-UPN:01"
				add_field => {
					"[event][id]" => "UPN:01"
					"[rsa][message][id1]" => "UPN:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:21
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] assigned by [<fld46>] on <interface> [ DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) PROTO(<protocol>) TOS(<fld32>) DPORT(<fld33>) SPORT(<fld34>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] assigned by [%{fld46}] on %{interface} [ DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) PROTO(%{protocol}) TOS(%{fld32}) DPORT(%{fld33}) SPORT(%{fld34}) ]" }
				id => "message-UPN:21"
				add_field => {
					"[event][id]" => "UPN:21"
					"[rsa][message][id1]" => "UPN:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:19
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] assigned by [<fld46>] on <interface> [ DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) PROTO(<protocol>) TOS(<fld32>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] assigned by [%{fld46}] on %{interface} [ DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) PROTO(%{protocol}) TOS(%{fld32}) ]" }
				id => "message-UPN:19"
				add_field => {
					"[event][id]" => "UPN:19"
					"[rsa][message][id1]" => "UPN:19"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE UPN:20
		# line in RSA: <fld14>  <fld15> <fld16> <hostname> UPN[<fld48>]Rule hit [<fld26>] assigned by [<fld46>] on <interface> [ DA(<dmacaddr>) SA(<smacaddr>) ETYPE(<fld28>) SIP(<shost>) DIP(<dhost>) ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld14}  %{fld15} %{fld16} %{hostname} UPN[%{fld48}]Rule hit [%{fld26}] assigned by [%{fld46}] on %{interface} [ DA(%{dmacaddr}) SA(%{smacaddr}) ETYPE(%{fld28}) SIP(%{shost}) DIP(%{dhost}) ]" }
				id => "message-UPN:20"
				add_field => {
					"[event][id]" => "UPN:20"
					"[rsa][message][id1]" => "UPN:20"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-enterasysswitchmsg.json"
#			template_name => "enterasysswitch_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
