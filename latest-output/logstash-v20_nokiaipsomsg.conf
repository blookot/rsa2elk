# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "nokiaipso"
			"[observer][name]" => "Check Point IPSO"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <year>-<month>-<day> <time> [LOG_<messageid>]<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<year>[^\-]*)\-(?<month>[^\-]*)\-(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[LOG_(?<message>(?<messageid>[^\]]*)\](?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <year>-<month>-<day> <time> <hfld1> [LOG_<messageid>]<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{year}-%{month}-%{day} %{time} %{hfld1} [LOG_%{messageid}]%{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <month> <day> <time> [LOG_<messageid>]<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} [LOG_%{messageid}]%{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <month><day><time> <hfld1> [LOG_<messageid>]<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month}%{day}%{time} %{hfld1} [LOG_%{messageid}]%{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <year>-<month>-<day> <time> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<year>[^\-]*)\-(?<month>[^\-]*)\-(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <year>-<month>-<day> <time> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<year>[^\-]*)\-(?<month>[^\-]*)\-(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <month> <day> <time> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <month> <day> <time> <hfld2> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <month> <day> <time> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <month> <day> <time> <hfld2> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <month> <day> <time> <host>: <hfld1> <messageid> <!payload:host>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<host>[^:]*):[\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <month> <day> <time> <host>: <messageid> <!payload:host>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<host>[^:]*):[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <month><day><time> <host> <messageid> message repeated <!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0014
	# line in RSA: <month><day><time> <messageid> message repeated <!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_nokiaipsomsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "ALERT" {
		# MESSAGE 000100
		# line in RSA: <agent>: <process>: check pass; user unknown 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: check pass; user unknown" }
				id => "message-000100"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "login - user unknown"
				"info" => "password check failed"
					"[event][id]" => "000100"
					"[rsa][message][id1]" => "000100"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000100:01
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-000100:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "PAM_httpd - user unknown"
				"info" => "password check failed"
					"[event][id]" => "000100:01"
					"[rsa][message][id1]" => "000100:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000100:02
		# line in RSA: <agent>[<process_id>]: PAM_unix: service(<service>) <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM_unix: service(%{service}) %{event_description}" }
				id => "message-000100:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000100:02"
					"[rsa][message][id1]" => "000100:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000100:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-000100:03"
				add_field => {
					"[event][id]" => "000100:03"
					"[rsa][message][id1]" => "000100:03"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CRIT" {
		# MESSAGE 000200
		# line in RSA: <agent>: FW-1: State synchronization is in risk. Please examine your synchronization network to avoid further problems ! 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: State synchronization is in risk. Please examine your synchronization network to avoid further problems !" }
				id => "message-000200"
				add_field => {
				"event_description" => "synchronization at risk"
					"[event][id]" => "000200"
					"[rsa][message][id1]" => "000200"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:01
		# line in RSA: <agent>: FW-1: <process>: delta sync connection with member <id> was lost and regained. <fld1> updates were lost 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: %{process}: delta sync connection with member %{id} was lost and regained. %{fld1} updates were lost" }
				id => "message-000200:01"
				add_field => {
				"event_description" => "connection lost"
					"[event][id]" => "000200:01"
					"[rsa][message][id1]" => "000200:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:02
		# line in RSA: <agent>: VPN-1: No license for encryption, <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: VPN-1: No license for encryption, %{action}" }
				id => "message-000200:02"
				add_field => {
					"[event][id]" => "000200:02"
					"[rsa][message][id1]" => "000200:02"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:03
		# line in RSA: <agent>: FW-1: <severity>: The <interface> interface is not protected by the anti-spoofing feature 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: %{severity}: The %{interface} interface is not protected by the anti-spoofing feature" }
				id => "message-000200:03"
				add_field => {
				"event_description" => "Warning: Interface not protected by the anti-spoofing feature"
					"[event][id]" => "000200:03"
					"[rsa][message][id1]" => "000200:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:05
		# line in RSA: <agent>: FW-1: Log buffer is full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: Log buffer is full" }
				id => "message-000200:05"
				add_field => {
				"event_description" => "Log buffer is full"
					"[event][id]" => "000200:05"
					"[rsa][message][id1]" => "000200:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:06
		# line in RSA: <agent>: FW-1: lost <dclass_counter1> log/trap messages 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: lost %{dclass_counter1} log/trap messages" }
				id => "message-000200:06"
				add_field => {
				"event_description" => "lost log/trap messages"
					"[event][id]" => "000200:06"
					"[rsa][message][id1]" => "000200:06"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:07
		# line in RSA: <agent>: FW-1: <severity>: The connections table is <dclass_ratio1>% full. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: %{severity}: The connections table is %{dclass_ratio1}% full." }
				id => "message-000200:07"
				add_field => {
				"event_description" => "connections table full"
					"[event][id]" => "000200:07"
					"[rsa][message][id1]" => "000200:07"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:08
		# line in RSA: <agent>:<space>New connections will be dropped once the connection table reaches 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{space}New connections will be dropped once the connection table reaches" }
				id => "message-000200:08"
				add_field => {
				"event_description" => "New connections will be dropped"
					"[event][id]" => "000200:08"
					"[rsa][message][id1]" => "000200:08"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:09
		# line in RSA: <agent>:<space>full capacity.  Please consider increasing the connections table limit.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{space}full capacity.  Please consider increasing the connections table limit." }
				id => "message-000200:09"
				add_field => {
				"event_description" => "full capacity"
					"[event][id]" => "000200:09"
					"[rsa][message][id1]" => "000200:09"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:10
		# line in RSA: <agent>: FW-1: fw_kfree: wrong magic number at tail end of <fld1> caller is 'msn_save_buf' sz=<fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: fw_kfree: wrong magic number at tail end of %{fld1} caller is 'msn_save_buf' sz=%{fld2}" }
				id => "message-000200:10"
				add_field => {
				"event_description" => "wrong magic number "
					"[event][id]" => "000200:10"
					"[rsa][message][id1]" => "000200:10"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:11
		# line in RSA: <agent>:<space>Your network may be at risk. In the future, it is recommended that you 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{space}Your network may be at risk. In the future, it is recommended that you" }
				id => "message-000200:11"
				add_field => {
				"event_description" => "Network may be at risk"
					"[event][id]" => "000200:11"
					"[rsa][message][id1]" => "000200:11"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:12
		# line in RSA: <agent>:<space>define anti-spoofing protection before installing the Security Policy. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{space}define anti-spoofing protection before installing the Security Policy." }
				id => "message-000200:12"
				add_field => {
				"event_description" => "define anti-spoofing protection"
					"[event][id]" => "000200:12"
					"[rsa][message][id1]" => "000200:12"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:13
		# line in RSA: <agent>: FW-1: stopping debug messages for the next <duration> seconds 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: stopping debug messages for the next %{duration} seconds" }
				id => "message-000200:13"
				add_field => {
				"event_description" => "stopping debug messages"
					"[event][id]" => "000200:13"
					"[rsa][message][id1]" => "000200:13"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:14
		# line in RSA: <agent>: FW-1: lost <dclass_counter1> debug messages 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: lost %{dclass_counter1} debug messages" }
				id => "message-000200:14"
				add_field => {
				"event_description" => "lost several debug messages"
					"[event][id]" => "000200:14"
					"[rsa][message][id1]" => "000200:14"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:15
		# line in RSA: <agent>: Process <process_id> killed by vm_pageout -- out of swap 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Process %{process_id} killed by vm_pageout -- out of swap" }
				id => "message-000200:15"
				add_field => {
				"event_description" => "Process killed"
					"[event][id]" => "000200:15"
					"[rsa][message][id1]" => "000200:15"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:16
		# line in RSA: <agent>: FW-1: <process>: fwconn_chain_lookup failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: %{process}: fwconn_chain_lookup failed" }
				id => "message-000200:16"
				add_field => {
				"event_description" => "fwconn_chain_lookup failed"
					"[event][id]" => "000200:16"
					"[rsa][message][id1]" => "000200:16"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:17
		# line in RSA: <agent>: cpas_tcp_pass_data: asked to transfer <bytes> bytes which is more than in q(<fld1>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: cpas_tcp_pass_data: asked to transfer %{bytes} bytes which is more than in q(%{fld1})" }
				id => "message-000200:17"
				add_field => {
				"event_description" => "asked to transfer bytes"
					"[event][id]" => "000200:17"
					"[rsa][message][id1]" => "000200:17"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000200:04
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-000200:04"
				add_field => {
					"[event][id]" => "000200:04"
					"[rsa][message][id1]" => "000200:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DEBUG" {
		# MESSAGE 000300
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } fmipc_open_connection: connect() failed (local) 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+fmipc_open_connection:[\s]+connect\(\)[\s]+failed[\s]+\(local\)[\s]+$" }
				id => "message-000300"
				add_field => {
				"event_description" => "failed connection"
					"[event][id]" => "000300"
					"[rsa][message][id1]" => "000300"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:08
		# line in RSA: <agent>[<process_id>]: fork_nonblocking: Running command: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fork_nonblocking: Running command: %{action}" }
				id => "message-000300:08"
				add_field => {
				"event_description" => "Runing command"
					"[event][id]" => "000300:08"
					"[rsa][message][id1]" => "000300:08"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:09
		# line in RSA: <agent>[<process_id>]: Reconfigure daemon request: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Reconfigure daemon request: %{action}" }
				id => "message-000300:09"
				add_field => {
				"event_description" => "Reconfigure daemon request"
					"[event][id]" => "000300:09"
					"[rsa][message][id1]" => "000300:09"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:10
		# line in RSA: <agent>[<process_id>]: Running command: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Running command: %{action}" }
				id => "message-000300:10"
				add_field => {
				"event_description" => "Running command"
					"[event][id]" => "000300:10"
					"[rsa][message][id1]" => "000300:10"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:11
		# line in RSA: <agent>[<process_id>]: tell_pm: buffer[<fld1>]: <<process:xntpd t> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tell_pm: buffer[%{fld1}]: <process:xntpd t>" }
				id => "message-000300:11"
				add_field => {
					"[event][id]" => "000300:11"
					"[rsa][message][id1]" => "000300:11"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:12
		# line in RSA: <agent>[<process_id>]: tell_pm: buffer[<fld1>]: <<process:{ipsrd|snmpd|xntpd|httpd|syslogd}:signal {hup|usr1}> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+tell_pm:[\s]+buffer\[(?<fld1>[^\]]*)\]:[\s]+<process:(ipsrd|snmpd|xntpd|httpd|syslogd):signal[\s]+(hup|usr1)>[\s]+$" }
				id => "message-000300:12"
				add_field => {
					"[event][id]" => "000300:12"
					"[rsa][message][id1]" => "000300:12"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:13
		# line in RSA: <agent>[<process_id>]: Trap sent 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Trap sent" }
				id => "message-000300:13"
				add_field => {
				"event_description" => "Trap sent"
					"[event][id]" => "000300:13"
					"[rsa][message][id1]" => "000300:13"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000300:02
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-000300:02"
				add_field => {
					"[event][id]" => "000300:02"
					"[rsa][message][id1]" => "000300:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ERR" {
		# MESSAGE 000400
		# line in RSA: <agent>: Routing socket open failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Routing socket open failed" }
				id => "message-000400"
				add_field => {
				"event_description" => "open failure"
					"[event][id]" => "000400"
					"[rsa][message][id1]" => "000400"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:01
		# line in RSA: <agent>: snmpd: send_trap: Failure in sendto (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: snmpd: send_trap: Failure in sendto (%{info})" }
				id => "message-000400:01"
				add_field => {
				"event_description" => "sendto failure"
					"[event][id]" => "000400:01"
					"[rsa][message][id1]" => "000400:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:02
		# line in RSA: <agent>: Put failed, errcode 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Put failed, errcode" }
				id => "message-000400:02"
				add_field => {
				"event_description" => "transfer - put failure"
					"[event][id]" => "000400:02"
					"[rsa][message][id1]" => "000400:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:03
		# line in RSA: <agent>: ftp_PutFile: Login Failure host:= <saddr> User: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ftp_PutFile: Login Failure host:= %{saddr} User: %{username}" }
				id => "message-000400:03"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "host Login Failure"
					"[event][id]" => "000400:03"
					"[rsa][message][id1]" => "000400:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:04
		# line in RSA: xntpd[<process_id>]: sendto(<saddr>): Can't assign requested address
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "xntpd[%{process_id}]: sendto(%{saddr}): Can't assign requested address" }
				id => "message-000400:04"
				add_field => {
				"event_description" => "xntpd - assignment error"
					"[event][id]" => "000400:04"
					"[rsa][message][id1]" => "000400:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:05
		# line in RSA: <agent>[<process_id>]: Recv authentication reply from server <saddr> not successful: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Recv authentication reply from server %{saddr} not successful: %{info}" }
				id => "message-000400:05"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000400:05"
					"[rsa][message][id1]" => "000400:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:06
		# line in RSA: sshd-x[<process_id>]: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "sshd-x[%{process_id}]: %{event_description}: %{info}" }
				id => "message-000400:06"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"agent" => "sshd-x"
					"[event][id]" => "000400:06"
					"[rsa][message][id1]" => "000400:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:08
		# line in RSA: <agent>: The message entry does not exist for Message ID: <id> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: The message entry does not exist for Message ID: %{id}" }
				id => "message-000400:08"
				add_field => {
				"event_description" => "The message entry does not exist"
					"[event][id]" => "000400:08"
					"[rsa][message][id1]" => "000400:08"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:09
		# line in RSA: <agent>: PAM_httpd: bad username [<username>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM_httpd: bad username [%{username}]" }
				id => "message-000400:09"
				add_field => {
				"protocol" => "httpd"
				"event_description" => "bad username"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000400:09"
					"[rsa][message][id1]" => "000400:09"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:10
		# line in RSA: <agent>[<process_id>]: [<severity>] mod_ssl: SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] mod_ssl: SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)" }
				id => "message-000400:10"
				add_field => {
				"event_description" => "SSL handshake interrupted by system"
					"[event][id]" => "000400:10"
					"[rsa][message][id1]" => "000400:10"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:11
		# line in RSA: <agent>[<process_id>]: [<severity>] System: Connection reset by peer (errno: <resultcode>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] System: Connection reset by peer (errno: %{resultcode})" }
				id => "message-000400:11"
				add_field => {
				"event_description" => "Connection reset by peer"
					"[event][id]" => "000400:11"
					"[rsa][message][id1]" => "000400:11"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:12
		# line in RSA: <agent>: handle_var_list:NULL community string is not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: handle_var_list:NULL community string is not allowed" }
				id => "message-000400:12"
				add_field => {
				"event_description" => "NULL community string is not allowed"
					"[event][id]" => "000400:12"
					"[rsa][message][id1]" => "000400:12"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:13
		# line in RSA: <agent>: Received request with invalid community 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received request with invalid community" }
				id => "message-000400:13"
				add_field => {
				"event_description" => "Received request with invalid community"
					"[event][id]" => "000400:13"
					"[rsa][message][id1]" => "000400:13"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000400:07
		# line in RSA: <agent>: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-000400:07"
				add_field => {
					"[event][id]" => "000400:07"
					"[rsa][message][id1]" => "000400:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "INFO" {
		# MESSAGE 000500
		# line in RSA: <agent>[<process_id>]: (*system*) RELOAD (/etc/crontab)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (*system*) RELOAD (/etc/crontab)" }
				id => "message-000500"
				add_field => {
				"event_description" => "cron - RELOAD"
					"[event][id]" => "000500"
					"[rsa][message][id1]" => "000500"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:01
		# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-000500:01"
				add_field => {
				"event_description" => "cron - command"
					"[event][id]" => "000500:01"
					"[rsa][message][id1]" => "000500:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:02
		# line in RSA: <agent>[<process_id>]: { Connection from <dhost> port <dport>| connection from <dhost> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Connection[\s]+from[\s]+(?<dhost>[^\s]*)[\s]+port[\s]+(?<dport>.*)|[\s]*connection[\s]+from[\s]+(?<dhost>[^\s]*)[\s]+)$" }
				id => "message-000500:02"
				add_field => {
					"[event][id]" => "000500:02"
					"[rsa][message][id1]" => "000500:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:03
		# line in RSA: <agent>: HTTP login from <saddr> as <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP login from %{saddr} as %{username}" }
				id => "message-000500:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:03"
					"[rsa][message][id1]" => "000500:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:18
		# line in RSA: <agent>: HTTP logout from <saddr> as <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP logout from %{saddr} as %{username}" }
				id => "message-000500:18"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "000500:18"
					"[rsa][message][id1]" => "000500:18"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:36
		# line in RSA: <agent>: HTTP login denied from <saddr> for <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP login denied from %{saddr} for %{username}" }
				id => "message-000500:36"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000500:36"
					"[rsa][message][id1]" => "000500:36"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:04
		# line in RSA: ipsrd[<process_id>]: EVENT <fld20> <interface> index <fld21> <fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ipsrd[%{process_id}]: EVENT %{fld20} %{interface} index %{fld21} %{fld22}" }
				id => "message-000500:04"
				add_field => {
					"[event][id]" => "000500:04"
					"[rsa][message][id1]" => "000500:04"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:05
		# line in RSA: <agent>: login from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: login from %{saddr} as %{username}" }
				id => "message-000500:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:05"
					"[rsa][message][id1]" => "000500:05"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:06
		# line in RSA: <agent>[<process_id>]: (<service>) session opened for user <username> by root(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{service}) session opened for user %{username} by root(uid=%{uid})" }
				id => "message-000500:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:06"
					"[rsa][message][id1]" => "000500:06"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:07
		# line in RSA: <agent>: Received TERM or STOP signal <fld>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received TERM or STOP signal %{fld}" }
				id => "message-000500:07"
				add_field => {
				"event_description" => "snmpd - STOP signal received"
					"[event][id]" => "000500:07"
					"[rsa][message][id1]" => "000500:07"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:08
		# line in RSA: <agent>[<process_id>]: Accepted password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-000500:08"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:08"
					"[rsa][message][id1]" => "000500:08"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:09
		# line in RSA: <agent>[<process_id>]: Could not reverse map address <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not reverse map address %{saddr}" }
				id => "message-000500:09"
				add_field => {
				"event_description" => "Could not reverse map address"
					"[event][id]" => "000500:09"
					"[rsa][message][id1]" => "000500:09"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:10
		# line in RSA: <agent>[<process_id>]: PAM_unix: (<service>) session opened for user <username> by root(uid=<uid>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM_unix: (%{service}) session opened for user %{username} by root(uid=%{uid})" }
				id => "message-000500:10"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:10"
					"[rsa][message][id1]" => "000500:10"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:11
		# line in RSA: <agent>[<process_id>]: PAM_unix: (<service>) session closed for user <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM_unix: (%{service}) session closed for user %{username}" }
				id => "message-000500:11"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "000500:11"
					"[rsa][message][id1]" => "000500:11"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:13
		# line in RSA: <agent>[<process_id>]: OSPF IO: neighbor <phost>(<interface>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: OSPF IO: neighbor %{phost}(%{interface}) %{info}" }
				id => "message-000500:13"
				add_field => {
				"event_description" => "OSPF rule violation"
					"[event][id]" => "000500:13"
					"[rsa][message][id1]" => "000500:13"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:14
		# line in RSA: <agent>[<process_id>]: Nasty PTR record "<fqdn>" is set up for <saddr>, <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Nasty PTR record \"%{fqdn}\" is set up for %{saddr}, %{info}" }
				id => "message-000500:14"
				add_field => {
				"event_description" => "Nasty PTR record"
					"[event][id]" => "000500:14"
					"[rsa][message][id1]" => "000500:14"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:15
		# line in RSA: <agent>[<process_id>]: Failed password for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-000500:15"
				add_field => {
				"event_description" => "Failed password"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000500:15"
					"[rsa][message][id1]" => "000500:15"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:59
		# line in RSA:  <agent>[<process_id>]: Failed publickey for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-000500:59"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Failed publickey for user"
					"[event][id]" => "000500:59"
					"[rsa][message][id1]" => "000500:59"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:16
		# line in RSA: <agent>[<process_id>]: Failed keyboard-interactive for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed keyboard-interactive for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-000500:16"
				add_field => {
				"event_description" => "Failed keyboard-interactive"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000500:16"
					"[rsa][message][id1]" => "000500:16"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:17
		# line in RSA: <agent>[<process_id>]: send-mail sent mail for <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: send-mail sent mail for %{username}" }
				id => "message-000500:17"
				add_field => {
				"event_description" => "mail sent for user"
					"[event][id]" => "000500:17"
					"[rsa][message][id1]" => "000500:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:19
		# line in RSA: <agent>[<process_id>]: task_reconfigure reinitializing done 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: task_reconfigure reinitializing done" }
				id => "message-000500:19"
				add_field => {
				"event_description" => "task_reconfigure reinitializing done"
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "000500:19"
					"[rsa][message][id1]" => "000500:19"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:20
		# line in RSA: <agent>[<process_id>]: task_reconfigure re-initializing from <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: task_reconfigure re-initializing from %{filename}" }
				id => "message-000500:20"
				add_field => {
				"event_description" => "task_reconfigure re-initializing"
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "000500:20"
					"[rsa][message][id1]" => "000500:20"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:21
		# line in RSA: <agent>: netlog:<interface> .. <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: netlog:%{interface} .. %{event_description}" }
				id => "message-000500:21"
				add_field => {
					"[event][id]" => "000500:21"
					"[rsa][message][id1]" => "000500:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:22
		# line in RSA: <agent>: DIALUP <terminal>, <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: DIALUP %{terminal}, %{username}" }
				id => "message-000500:22"
				add_field => {
				"event_description" => "login successful"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:22"
					"[rsa][message][id1]" => "000500:22"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:23
		# line in RSA: <agent>: login on <terminal> as <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: login on %{terminal} as %{username}" }
				id => "message-000500:23"
				add_field => {
				"event_description" => "login successful"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "000500:23"
					"[rsa][message][id1]" => "000500:23"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:24
		# line in RSA: <agent>: Added interface: <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Added interface: %{interface}" }
				id => "message-000500:24"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"event_description" => "added interface"
					"[event][id]" => "000500:24"
					"[rsa][message][id1]" => "000500:24"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:25
		# line in RSA: <agent>: Reconfiguring daemon 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Reconfiguring daemon" }
				id => "message-000500:25"
				add_field => {
				"event_description" => "Reconfiguring daemon"
					"[event][id]" => "000500:25"
					"[rsa][message][id1]" => "000500:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:26
		# line in RSA: <agent>: SnmpdReconfig:reconfig trap 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SnmpdReconfig:reconfig trap" }
				id => "message-000500:26"
				add_field => {
				"event_description" => "Reconfiguring trap"
					"[event][id]" => "000500:26"
					"[rsa][message][id1]" => "000500:26"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:27
		# line in RSA: <agent>[<process_id>]: Disconnecting: Too many authentication failures for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Too many authentication failures for %{username}" }
				id => "message-000500:27"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Too many authentication failures"
					"[event][id]" => "000500:27"
					"[rsa][message][id1]" => "000500:27"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:28
		# line in RSA: <agent>[<process_id>]: input_userauth_request: illegal user <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: input_userauth_request: illegal user %{username}" }
				id => "message-000500:28"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "illegal user"
					"[event][id]" => "000500:28"
					"[rsa][message][id1]" => "000500:28"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:29
		# line in RSA: <agent>: restart 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: restart" }
				id => "message-000500:29"
				add_field => {
				"event_description" => "restart"
					"[event][id]" => "000500:29"
					"[rsa][message][id1]" => "000500:29"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:30
		# line in RSA: <agent>[<process_id>]: peer <saddr> event <id> status <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: peer %{saddr} event %{id} status %{resultcode}" }
				id => "message-000500:30"
				add_field => {
					"[event][id]" => "000500:30"
					"[rsa][message][id1]" => "000500:30"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:31
		# line in RSA: <agent>[<process_id>]: precision = <fld2> usec 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: precision = %{fld2} usec" }
				id => "message-000500:31"
				add_field => {
					"[event][id]" => "000500:31"
					"[rsa][message][id1]" => "000500:31"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:32
		# line in RSA: <agent>[<process_id>]: system event <id> status <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: system event %{id} status %{resultcode}" }
				id => "message-000500:32"
				add_field => {
					"[event][id]" => "000500:32"
					"[rsa][message][id1]" => "000500:32"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:33
		# line in RSA:  <agent>[<process_id>]: offset <fld4> freq <fld5> poll <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: offset %{fld4} freq %{fld5} poll %{fld6}" }
				id => "message-000500:33"
				add_field => {
					"[event][id]" => "000500:33"
					"[rsa][message][id1]" => "000500:33"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:34
		# line in RSA:  <agent>[<process_id>]: Received disconnect from <saddr>: <fld4>: Authentication cancelled by user.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received disconnect from %{saddr}: %{fld4}: Authentication cancelled by user." }
				id => "message-000500:34"
				add_field => {
					"[event][id]" => "000500:34"
					"[rsa][message][id1]" => "000500:34"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:35
		# line in RSA:  <agent>[<process_id>]: subsystem request for sftp
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: subsystem request for sftp" }
				id => "message-000500:35"
				add_field => {
					"[event][id]" => "000500:35"
					"[rsa][message][id1]" => "000500:35"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:39
		# line in RSA:  <agent>[<process_id>]: { Closing connection to <saddr>| Connection closed by <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Closing[\s]+connection[\s]+to[\s]+(?<saddr>.*)|[\s]*Connection[\s]+closed[\s]+by[\s]+(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-000500:39"
				add_field => {
				"event_description" => "Connection closed"
					"[event][id]" => "000500:39"
					"[rsa][message][id1]" => "000500:39"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:40
		# line in RSA:  <agent>[<process_id>]: Failed none for { illegal user <username> | <username> } from <saddr> port <sport> <network_service>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+none[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<network_service>.*)$" }
				id => "message-000500:40"
				add_field => {
				"event_description" => "Failed none for user"
					"[event][id]" => "000500:40"
					"[rsa][message][id1]" => "000500:40"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:12
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } No role(s) received for user <username> from authentication server
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+No[\s]+role\(s\)[\s]+received[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+authentication[\s]+server$" }
				id => "message-000500:12"
				add_field => {
				"event_description" => "No role(s) received for user from authentication server"
					"[event][id]" => "000500:12"
					"[rsa][message][id1]" => "000500:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:57
		# line in RSA:  <agent>[<process_id>]: Enabling compatibility mode for protocol <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Enabling compatibility mode for protocol %{protocol}" }
				id => "message-000500:57"
				add_field => {
				"action" => "Enabling compatibility mode for protocol"
					"[event][id]" => "000500:57"
					"[rsa][message][id1]" => "000500:57"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:41
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Authenticating user: <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Authenticating[\s]+user:[\s]+(?<username>.*)$" }
				id => "message-000500:41"
				add_field => {
				"event_description" => "Authenticating user"
					"[event][id]" => "000500:41"
					"[rsa][message][id1]" => "000500:41"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:42
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Using entry found in config file for service <service> profile <profile>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Using[\s]+entry[\s]+found[\s]+in[\s]+config[\s]+file[\s]+for[\s]+service[\s]+(?<service>[^\s]*)[\s]+profile[\s]+(?<profile>[^\.]*)\.$" }
				id => "message-000500:42"
				add_field => {
				"event_description" => "Using entry found in config file"
					"[event][id]" => "000500:42"
					"[rsa][message][id1]" => "000500:42"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:43
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Not using entry found in config file for service <service>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Not[\s]+using[\s]+entry[\s]+found[\s]+in[\s]+config[\s]+file[\s]+for[\s]+service[\s]+(?<service>.*)$" }
				id => "message-000500:43"
				add_field => {
				"event_description" => "Not using entry found in config file"
					"[event][id]" => "000500:43"
					"[rsa][message][id1]" => "000500:43"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:44
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} <fld2>: Using wild card source IP address by default
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+(?<fld2>[^:]*):[\s]+Using[\s]+wild[\s]+card[\s]+source[\s]+IP[\s]+address[\s]+by[\s]+default$" }
				id => "message-000500:44"
				add_field => {
				"event_description" => "Using wild card source IP address by default"
					"[event][id]" => "000500:44"
					"[rsa][message][id1]" => "000500:44"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:45
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} <fld2>: Do not do domain name info stripping
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+(?<fld2>[^:]*):[\s]+Do[\s]+not[\s]+do[\s]+domain[\s]+name[\s]+info[\s]+stripping$" }
				id => "message-000500:45"
				add_field => {
				"event_description" => "Do not do domain name info stripping"
					"[event][id]" => "000500:45"
					"[rsa][message][id1]" => "000500:45"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:46
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Recv from server <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Recv[\s]+from[\s]+server[\s]+(?<result>.*)$" }
				id => "message-000500:46"
				add_field => {
				"event_description" => "Recv from server"
					"[event][id]" => "000500:46"
					"[rsa][message][id1]" => "000500:46"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:47
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Send to server <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Send[\s]+to[\s]+server[\s]+(?<result>.*)$" }
				id => "message-000500:47"
				add_field => {
				"event_description" => "Send to server"
					"[event][id]" => "000500:47"
					"[rsa][message][id1]" => "000500:47"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:48
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Send authentication request to server <daddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Send[\s]+authentication[\s]+request[\s]+to[\s]+server[\s]+(?<daddr>.*)$" }
				id => "message-000500:48"
				add_field => {
				"event_description" => "Send authentication request to server"
					"[event][id]" => "000500:48"
					"[rsa][message][id1]" => "000500:48"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:56
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Send authorization request to server <daddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Send[\s]+authorization[\s]+request[\s]+to[\s]+server[\s]+(?<daddr>.*)$" }
				id => "message-000500:56"
				add_field => {
				"event_description" => "Send authorization request to server"
					"[event][id]" => "000500:56"
					"[rsa][message][id1]" => "000500:56"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:49
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} TACACS+ server requested password, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+TACACS\+[\s]+server[\s]+requested[\s]+password,[\s]+(?<info>.*)$" }
				id => "message-000500:49"
				add_field => {
				"event_description" => "TACACS+ server requested password"
					"[event][id]" => "000500:49"
					"[rsa][message][id1]" => "000500:49"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:50
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Authorizing user: <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Authorizing[\s]+user:[\s]+(?<username>.*)$" }
				id => "message-000500:50"
				add_field => {
				"event_description" => "Authorizing user"
					"[event][id]" => "000500:50"
					"[rsa][message][id1]" => "000500:50"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:51
		# line in RSA:  {<agent>[<process_id>]:|<agent>:} Request is accepted
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|(?<agent>[^:]*):)[\s]+Request[\s]+is[\s]+accepted$" }
				id => "message-000500:51"
				add_field => {
				"event_description" => "Request is accepted"
					"[event][id]" => "000500:51"
					"[rsa][message][id1]" => "000500:51"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:52
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } Receiving from server <saddr>:<sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Receiving[\s]+from[\s]+server[\s]+(?<saddr>[^:]*):(?<sport>.*)$" }
				id => "message-000500:52"
				add_field => {
				"event_description" => "Receiving from server"
					"[event][id]" => "000500:52"
					"[rsa][message][id1]" => "000500:52"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:53
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } Sending request to server <daddr>:<dport>, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Sending[\s]+request[\s]+to[\s]+server[\s]+(?<daddr>[^:]*):(?<dport>[^,]*),[\s]+(?<info>.*)$" }
				id => "message-000500:53"
				add_field => {
				"event_description" => "Sending request to server"
					"[event][id]" => "000500:53"
					"[rsa][message][id1]" => "000500:53"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:54
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } Processing user: <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Processing[\s]+user:[\s]+(?<username>.*)$" }
				id => "message-000500:54"
				add_field => {
				"event_description" => "Processing user"
					"[event][id]" => "000500:54"
					"[rsa][message][id1]" => "000500:54"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:55
		# line in RSA:  <agent>[<process_id>]: Received disconnect from <saddr>:<sport>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received disconnect from %{saddr}:%{sport}: %{info}" }
				id => "message-000500:55"
				add_field => {
				"event_description" => "Received disconnect"
					"[event][id]" => "000500:55"
					"[rsa][message][id1]" => "000500:55"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:37
		# line in RSA:  <agent>: <protocol> version <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{protocol} version %{version}" }
				id => "message-000500:37"
				add_field => {
					"[event][id]" => "000500:37"
					"[rsa][message][id1]" => "000500:37"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:38
		# line in RSA: <agent>: <process>: interface:<interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: interface:%{interface}" }
				id => "message-000500:38"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
					"[event][id]" => "000500:38"
					"[rsa][message][id1]" => "000500:38"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:58
		# line in RSA:  <agent>[<process_id>]: (<username>) MAIL (mailed <bytes> bytes of output but got status <resultcode> ) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) MAIL (mailed %{bytes} bytes of output but got status %{resultcode} )" }
				id => "message-000500:58"
				add_field => {
					"[event][id]" => "000500:58"
					"[rsa][message][id1]" => "000500:58"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:60
		# line in RSA:  <agent>[<process_id>]: <process>: discarded packet from <saddr> attempting to take over interface <interface>, VRID <id> while local router is master
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: discarded packet from %{saddr} attempting to take over interface %{interface}, VRID %{id} while local router is master" }
				id => "message-000500:60"
				add_field => {
				"event_description" => "discarded packet while attempting to take over interface while local router is master"
					"[event][id]" => "000500:60"
					"[rsa][message][id1]" => "000500:60"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:61
		# line in RSA:  <agent>[<process_id>]: <process>: discarded unknown VRID <id> packet from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: discarded unknown VRID %{id} packet from %{saddr}" }
				id => "message-000500:61"
				add_field => {
				"event_description" => "discarded unknown packet"
					"[event][id]" => "000500:61"
					"[rsa][message][id1]" => "000500:61"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:62
		# line in RSA:  <agent>[<process_id>]: Read error from remote host: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Read error from remote host: %{result}" }
				id => "message-000500:62"
				add_field => {
				"event_description" => "Read error from remote host"
					"[event][id]" => "000500:62"
					"[rsa][message][id1]" => "000500:62"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000500:63
		# line in RSA:  <agent>[<process_id>]: <process>: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{action}" }
				id => "message-000500:63"
				add_field => {
				"event_description" => "rip_interface_list activity"
					"[event][id]" => "000500:63"
					"[rsa][message][id1]" => "000500:63"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId107
	# line in RSA: last message repeated <dclass_counter1> times
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "last message repeated %{dclass_counter1} times" }
			id => "msgParserId107"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NOTICE" {
		# MESSAGE 000600
		# line in RSA: <agent>[<process_id>]: ANONYMOUS FTP LOGIN REFUSED FROM <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ANONYMOUS FTP LOGIN REFUSED FROM %{shost}" }
				id => "message-000600"
				add_field => {
				"event_description" => "FTPLOGINREFUSED"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600"
					"[rsa][message][id1]" => "000600"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:01
		# line in RSA: <agent>: ROOT LOGIN (<username>) ON <terminal> FROM <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN (%{username}) ON %{terminal} FROM %{saddr}" }
				id => "message-000600:01"
				add_field => {
					"[event][id]" => "000600:01"
					"[rsa][message][id1]" => "000600:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:02
		# line in RSA: <agent>: authentication failure; <username>(uid=<uid>) -> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: authentication failure; %{username}(uid=%{uid}) -> %{info}" }
				id => "message-000600:02"
				add_field => {
				"event_description" => "login authentication failure"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600:02"
					"[rsa][message][id1]" => "000600:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:03
		# line in RSA: <agent>: <dclass_counter1> LOGIN { FAILURES | FAILURE } FROM <saddr>, <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+([\s]*FAILURES[\s]+|[\s]*FAILURE[\s]+)[\s]+FROM[\s]+(?<saddr>[^,]*),[\s]+(?<username>.*)$" }
				id => "message-000600:03"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600:03"
					"[rsa][message][id1]" => "000600:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:05
		# line in RSA: <agent>[<process_id>]: Configuration changed from <hostname> by user <administrator> for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Configuration changed from %{hostname} by user %{administrator} for %{username}" }
				id => "message-000600:05"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "xpand - Configuration changed by user"
					"[event][id]" => "000600:05"
					"[rsa][message][id1]" => "000600:05"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:06
		# line in RSA: <agent>[<process_id>]: User entry created for "<username>" in the password database 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User entry created for \"%{username}\" in the password database" }
				id => "message-000600:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"event_description" => "User entry created"
					"[event][id]" => "000600:06"
					"[rsa][message][id1]" => "000600:06"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:17
		# line in RSA: <agent>: [<event_time_string>] <saddr> <protocol> <s_cipher> "<action> <version>" <bytes> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{event_time_string}] %{saddr} %{protocol} %{s_cipher} \"%{action} %{version}\" %{bytes}" }
				id => "message-000600:17"
				add_field => {
				"event_description" => "SSL connection"
					"[event][id]" => "000600:17"
					"[rsa][message][id1]" => "000600:17"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:09
		# line in RSA: <agent>: <saddr> <fld9> <fld10> "<action> <version>" <resultcode> <bytes> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{saddr} %{fld9} %{fld10} \"%{action} %{version}\" %{resultcode} %{bytes}" }
				id => "message-000600:09"
				add_field => {
				"event_description" => "HTTP connection"
					"[event][id]" => "000600:09"
					"[rsa][message][id1]" => "000600:09"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:10
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>] SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}] SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)" }
				id => "message-000600:10"
				add_field => {
				"event_description" => "SSL handshake interrupted by system"
					"[event][id]" => "000600:10"
					"[rsa][message][id1]" => "000600:10"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:11
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>] System: Connection reset by peer (errno: <resultcode>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}] System: Connection reset by peer (errno: %{resultcode})" }
				id => "message-000600:11"
				add_field => {
				"event_description" => "Connection reset by peer"
					"[event][id]" => "000600:11"
					"[rsa][message][id1]" => "000600:11"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:12
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Connection to child <id> established (server <dhost>:<dport>, client <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Connection to child %{id} established (server %{dhost}:%{dport}, client %{saddr})" }
				id => "message-000600:12"
				add_field => {
				"event_description" => "Connection to child established"
					"[event][id]" => "000600:12"
					"[rsa][message][id1]" => "000600:12"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:38
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Connection to child <id> {closed with standard shutdown | closed with unclean shutdown} (server <dhost>:<dport>, client <saddr>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<fld11>[^\s]*)[\s]+(?<fld12>[^\s]*)[\s]+(?<fld13>[^\]]*)\][\s]+\[(?<severity>[^\]]*)\](?<space>[^C]*)Connection[\s]+to[\s]+child[\s]+(?<id>[^\s]*)[\s]+(closed[\s]+with[\s]+standard[\s]+shutdown[\s]+|[\s]*closed[\s]+with[\s]+unclean[\s]+shutdown)[\s]+\(server[\s]+(?<dhost>[^:]*):(?<dport>[^,]*),[\s]+client[\s]+(?<saddr>[^\)]*)\)$" }
				id => "message-000600:38"
				add_field => {
				"event_description" => "Connection to child closed"
					"[event][id]" => "000600:38"
					"[rsa][message][id1]" => "000600:38"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:13
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Connection: Client IP: <saddr>, Protocol: <protocol>, Cipher: <s_cipher> (<fld3>/<s_ciphersize> bits)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Connection: Client IP: %{saddr}, Protocol: %{protocol}, Cipher: %{s_cipher} (%{fld3}/%{s_ciphersize} bits)" }
				id => "message-000600:13"
				add_field => {
				"event_description" => "SSL Connection"
					"[event][id]" => "000600:13"
					"[rsa][message][id1]" => "000600:13"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:14
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Initial (No.<fld2>) HTTPS request received for child <id> (server <dhost>:<dport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Initial (No.%{fld2}) HTTPS request received for child %{id} (server %{dhost}:%{dport})" }
				id => "message-000600:14"
				add_field => {
				"event_description" => "HTTPS request received for child"
					"[event][id]" => "000600:14"
					"[rsa][message][id1]" => "000600:14"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:15
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Seeding PRNG with <bytes> bytes of entropy
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Seeding PRNG with %{bytes} bytes of entropy" }
				id => "message-000600:15"
				add_field => {
				"event_description" => "Seeding PRNG"
					"[event][id]" => "000600:15"
					"[rsa][message][id1]" => "000600:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:16
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Spurious SSL handshake interrupt[Hint: Usually just one of those OpenSSL confusions!?] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Spurious SSL handshake interrupt[Hint: Usually just one of those OpenSSL confusions!?]" }
				id => "message-000600:16"
				add_field => {
				"event_description" => "Spurious SSL handshake interrupt"
					"[event][id]" => "000600:16"
					"[rsa][message][id1]" => "000600:16"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 000600:19
		# line in RSA: <agent>: <dclass_counter1> LOGIN {FAILURES|FAILURE} FROM <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+(FAILURES|FAILURE)[\s]+FROM[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-000600:19"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600:19"
					"[rsa][message][id1]" => "000600:19"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:21
		# line in RSA: <agent>: <dclass_counter1> LOGIN {FAILURES|FAILURE} ON <terminal>, <username> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+(FAILURES|FAILURE)[\s]+ON[\s]+(?<terminal>[^,]*),[\s]+(?<username>[^\s]*)[\s]+$" }
				id => "message-000600:21"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600:21"
					"[rsa][message][id1]" => "000600:21"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:20
		# line in RSA: <agent>: <dclass_counter1> LOGIN {FAILURES|FAILURE} ON <terminal> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+(FAILURES|FAILURE)[\s]+ON[\s]+(?<terminal>[^\s]*)[\s]+$" }
				id => "message-000600:20"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600:20"
					"[rsa][message][id1]" => "000600:20"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:22
		# line in RSA: <agent>: ROOT LOGIN (<username>) ON <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN (%{username}) ON %{terminal}" }
				id => "message-000600:22"
				add_field => {
					"[event][id]" => "000600:22"
					"[rsa][message][id1]" => "000600:22"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:23
		# line in RSA: <agent>: Updating monitor list on next interval
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Updating monitor list on next interval" }
				id => "message-000600:23"
				add_field => {
				"event_description" => "Updating monitor list"
					"[event][id]" => "000600:23"
					"[rsa][message][id1]" => "000600:23"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:24
		# line in RSA: <agent>[<process_id>]: Reaped:  <service>[<fld2>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Reaped:  %{service}[%{fld2}]" }
				id => "message-000600:24"
				add_field => {
				"event_description" => "Reaped daemon"
					"[event][id]" => "000600:24"
					"[rsa][message][id1]" => "000600:24"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:25
		# line in RSA: <agent>[<process_id>]: Restarted <service>[<fld3>], count=<fld4> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Restarted %{service}[%{fld3}], count=%{fld4}" }
				id => "message-000600:25"
				add_field => {
				"event_description" => "Restart daemon"
					"[event][id]" => "000600:25"
					"[rsa][message][id1]" => "000600:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:26
		# line in RSA: <agent>[<process_id>]: Scheduled <service> for +<duration> secs 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Scheduled %{service} for +%{duration} secs" }
				id => "message-000600:26"
				add_field => {
				"event_description" => "Scheduled Daemon"
					"[event][id]" => "000600:26"
					"[rsa][message][id1]" => "000600:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:27
		# line in RSA: <agent>[<process_id>]: Enabled xntpd 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Enabled xntpd" }
				id => "message-000600:27"
				add_field => {
				"event_description" => "Enabled xntpd"
					"[event][id]" => "000600:27"
					"[rsa][message][id1]" => "000600:27"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:28
		# line in RSA: <agent>[<process_id>]: Started <service>[<fld3>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Started %{service}[%{fld3}]" }
				id => "message-000600:28"
				add_field => {
				"event_description" => "Started Daemon"
					"[event][id]" => "000600:28"
					"[rsa][message][id1]" => "000600:28"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:29
		# line in RSA: <agent>: Updating physical contents table.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Updating physical contents table." }
				id => "message-000600:29"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Updating physical contents table"
					"[event][id]" => "000600:29"
					"[rsa][message][id1]" => "000600:29"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:31
		# line in RSA: <agent>[<process_id>]: <process>: <fld1> more authentication failure; <username>(uid=<uid>) -> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{fld1} more authentication failure; %{username}(uid=%{uid}) -> %{info}" }
				id => "message-000600:31"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "000600:31"
					"[rsa][message][id1]" => "000600:31"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:33
		# line in RSA: <agent>: restarting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: restarting" }
				id => "message-000600:33"
				add_field => {
				"event_description" => "restarting"
					"[event][id]" => "000600:33"
					"[rsa][message][id1]" => "000600:33"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:32
		# line in RSA: <agent>: restart 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: restart" }
				id => "message-000600:32"
				add_field => {
				"event_description" => "restart"
					"[event][id]" => "000600:32"
					"[rsa][message][id1]" => "000600:32"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:34
		# line in RSA: <agent>[<process_id>]: tickadj = <fld5>, tick = <fld6>, tvu_maxslew = <fld7> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tickadj = %{fld5}, tick = %{fld6}, tvu_maxslew = %{fld7}" }
				id => "message-000600:34"
				add_field => {
					"[event][id]" => "000600:34"
					"[rsa][message][id1]" => "000600:34"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:35
		# line in RSA: <agent>[<process_id>]: using xntpd phase-lock loop 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: using xntpd phase-lock loop" }
				id => "message-000600:35"
				add_field => {
					"[event][id]" => "000600:35"
					"[rsa][message][id1]" => "000600:35"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:36
		# line in RSA: <agent>[<process_id>]: xntpd version=<version>; <fld3>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: xntpd version=%{version}; %{fld3}" }
				id => "message-000600:36"
				add_field => {
					"[event][id]" => "000600:36"
					"[rsa][message][id1]" => "000600:36"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:37
		# line in RSA: <agent>[<process_id>]: User entry created for "<username>" in the password  database 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User entry created for \"%{username}\" in the password  database" }
				id => "message-000600:37"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"event_description" => "User entry created"
					"[event][id]" => "000600:37"
					"[rsa][message][id1]" => "000600:37"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:18
		# line in RSA: <agent>: Voyager audit: User <username> pressed button <action> on page <webpage> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Voyager audit: User %{username} pressed button %{action} on page %{webpage}" }
				id => "message-000600:18"
				add_field => {
				"event_description" => "User pressed button"
					"[event][id]" => "000600:18"
					"[rsa][message][id1]" => "000600:18"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:08
		# line in RSA: <agent>[<process_id>]: <username> <shost> p <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} %{shost} p %{action}" }
				id => "message-000600:08"
				add_field => {
					"[event][id]" => "000600:08"
					"[rsa][message][id1]" => "000600:08"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000600:07
		# line in RSA: <agent>: <message> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{message}" }
				id => "message-000600:07"
				add_field => {
					"[event][id]" => "000600:07"
					"[rsa][message][id1]" => "000600:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "WARNING" {
		# MESSAGE 000700
		# line in RSA: <agent>[<process_id>]: igmp_recv: packet from non-local neighbor <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: igmp_recv: packet from non-local neighbor %{saddr}" }
				id => "message-000700"
				add_field => {
				"event_description" => "packet fron non-local neighbor"
					"[event][id]" => "000700"
					"[rsa][message][id1]" => "000700"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000700:01
		# line in RSA: <agent>[<process_id>]: error <resultcode> Error in supplied information (Please make sure FTP site, directory, user and password are correct. Or try using anonymous ftp)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error %{resultcode} Error in supplied information (Please make sure FTP site, directory, user and password are correct. Or try using anonymous ftp)" }
				id => "message-000700:01"
				add_field => {
				"event_description" => "ftp information error"
					"[event][id]" => "000700:01"
					"[rsa][message][id1]" => "000700:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000700:02
		# line in RSA: <agent>: Session had expired for user: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Session had expired for user: %{username}" }
				id => "message-000700:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_description" => "Session had expired for user"
					"[event][id]" => "000700:02"
					"[rsa][message][id1]" => "000700:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000700:04
		# line in RSA: <agent>[<process_id>]: <process>: Couldn't open file <filename>: No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Couldn't open file %{filename}: No such file or directory" }
				id => "message-000700:04"
				add_field => {
				"event_description" => "Couldn't open file"
					"[event][id]" => "000700:04"
					"[rsa][message][id1]" => "000700:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000700:03
		# line in RSA: <agent>: bad username <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: bad username %{username}" }
				id => "message-000700:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "bad username"
					"[event][id]" => "000700:03"
					"[rsa][message][id1]" => "000700:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000700:05
		# line in RSA: <agent>[<process_id>]: bootpgw_recv: bootp runt packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: bootpgw_recv: bootp runt packet" }
				id => "message-000700:05"
				add_field => {
				"event_description" => "bootp runt packet"
					"[event][id]" => "000700:05"
					"[rsa][message][id1]" => "000700:05"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SNMP" {
		# MESSAGE 000800
		# line in RSA: <saddr>: interface <interface> is down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: interface %{interface} is down" }
				id => "message-000800"
				add_field => {
				"event_description" => "interface down"
					"[event][id]" => "000800"
					"[rsa][message][id1]" => "000800"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000800:01
		# line in RSA: <saddr>: Configuration Changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: Configuration Changed" }
				id => "message-000800:01"
				add_field => {
				"event_description" => "configuration changed"
					"[event][id]" => "000800:01"
					"[rsa][message][id1]" => "000800:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000800:02
		# line in RSA: <saddr>: Configuration Changes were saved
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: Configuration Changes were saved" }
				id => "message-000800:02"
				add_field => {
				"event_description" => "saved configuration changed"
					"[event][id]" => "000800:02"
					"[rsa][message][id1]" => "000800:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000800:03
		# line in RSA: <saddr>: "<filesystem>" Filesystem is low on diskspace
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: \"%{filesystem}\" Filesystem is low on diskspace" }
				id => "message-000800:03"
				add_field => {
				"event_description" => "diskspace low"
					"[event][id]" => "000800:03"
					"[rsa][message][id1]" => "000800:03"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000800:04
		# line in RSA: <saddr>: "<filesystem>" Filesystem is full
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: \"%{filesystem}\" Filesystem is full" }
				id => "message-000800:04"
				add_field => {
				"event_description" => "DISKSPACE FULL"
					"[event][id]" => "000800:04"
					"[rsa][message][id1]" => "000800:04"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000800:05
		# line in RSA: <saddr>: <username> changed the Configuration
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: %{username} changed the Configuration" }
				id => "message-000800:05"
				add_field => {
				"event_description" => "User changed configuration"
					"[event][id]" => "000800:05"
					"[rsa][message][id1]" => "000800:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000800:06
		# line in RSA: <saddr>: interface <interface> is <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: interface %{interface} is %{fld15}" }
				id => "message-000800:06"
				add_field => {
				"event_description" => "Interface information"
					"[event][id]" => "000800:06"
					"[rsa][message][id1]" => "000800:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: <agent>: The message entry does not exist for Message ID: <id> 
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{agent}: The message entry does not exist for Message ID: %{id}" }
			id => "msgParserId36"
			add_field => {
				"event_description" => "The message entry does not exist"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId157
	# line in RSA:  <saddr>: <username> changed the Configuration
	else if [logstash][msgparser][id] == "msgParserId157" {
		dissect {
			mapping => { "message" => "%{saddr}: %{username} changed the Configuration" }
			id => "msgParserId157"
			add_field => {
				"event_description" => "User changed configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "clish" {
		# MESSAGE clish
		# line in RSA: <agent>[<process_id>]: User <username> logged in with <fld25> permission
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} logged in with %{fld25} permission" }
				id => "message-clish"
				add_field => {
				"event_description" => "User logged in through CLI shell"
					"[event][id]" => "clish"
					"[rsa][message][id1]" => "clish"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE clish:01
		# line in RSA: <agent>[<process_id>]: User <username> logged out  from CLI shell
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} logged out  from CLI shell" }
				id => "message-clish:01"
				add_field => {
				"event_description" => "User logged out from CLI shell"
					"[event][id]" => "clish:01"
					"[rsa][message][id1]" => "clish:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Configuration" {
		# MESSAGE Configuration
		# line in RSA: <saddr>: Configuration Changed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: Configuration Changed" }
				id => "message-Configuration"
				add_field => {
				"event_description" => "configuration changed"
					"[event][id]" => "Configuration"
					"[rsa][message][id1]" => "Configuration"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Configuration:01
		# line in RSA: <saddr>: Configuration Changes were saved
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: Configuration Changes were saved" }
				id => "message-Configuration:01"
				add_field => {
				"event_description" => "saved configuration changed"
					"[event][id]" => "Configuration:01"
					"[rsa][message][id1]" => "Configuration:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cplogger" {
		# MESSAGE cplogger
		# line in RSA: <agent>: Cannot log to both file and syslog at same time. Will be logging to file only.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Cannot log to both file and syslog at same time. Will be logging to file only." }
				id => "message-cplogger"
				add_field => {
				"event_description" => "cplogger error"
					"[event][id]" => "cplogger"
					"[rsa][message][id1]" => "cplogger"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cplogger:01
		# line in RSA: <agent>: Received exit signal from <process> - <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received exit signal from %{process} - %{action}" }
				id => "message-cplogger:01"
				add_field => {
				"event_description" => "Received exit signal"
					"[event][id]" => "cplogger:01"
					"[rsa][message][id1]" => "cplogger:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Filesystem" {
		# MESSAGE Filesystem
		# line in RSA: <saddr>: "<filesystem>" Filesystem is low on diskspace
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: \"%{filesystem}\" Filesystem is low on diskspace" }
				id => "message-Filesystem"
				add_field => {
				"event_description" => "diskspace low"
					"[event][id]" => "Filesystem"
					"[rsa][message][id1]" => "Filesystem"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Filesystem:01
		# line in RSA: <saddr>: "<filesystem>" Filesystem is full
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: \"%{filesystem}\" Filesystem is full" }
				id => "message-Filesystem:01"
				add_field => {
				"event_description" => "DISKSPACE FULL"
					"[event][id]" => "Filesystem:01"
					"[rsa][message][id1]" => "Filesystem:01"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ftpd" {
		# MESSAGE ftpd
		# line in RSA:  <agent>[<process_id>]: connection from <fqdn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection from %{fqdn}" }
				id => "message-ftpd"
				add_field => {
					"[event][id]" => "ftpd"
					"[rsa][message][id1]" => "ftpd"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ftpd:01
		# line in RSA: <agent>[<process_id>]: ANONYMOUS FTP LOGIN REFUSED FROM <dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ANONYMOUS FTP LOGIN REFUSED FROM %{dhost}" }
				id => "message-ftpd:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "FTP LOGIN REFUSED"
					"[event][id]" => "ftpd:01"
					"[rsa][message][id1]" => "ftpd:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "hourly" {
		# MESSAGE hourly
		# line in RSA: <agent>: <process>: <fld10> database is locked
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: %{fld10} database is locked" }
				id => "message-hourly"
				add_field => {
				"event_description" => "sql_delete error - database is locked."
					"[event][id]" => "hourly"
					"[rsa][message][id1]" => "hourly"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE hourly:01
		# line in RSA: <agent>: <process>: <fld10> no such table: <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: %{fld10} no such table: %{fld20}" }
				id => "message-hourly:01"
				add_field => {
				"event_description" => "sql_query error - no such table."
					"[event][id]" => "hourly:01"
					"[rsa][message][id1]" => "hourly:01"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd" {
		# MESSAGE httpd
		# line in RSA: <agent>: PAM_httpd: bad username [<username>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM_httpd: bad username [%{username}]" }
				id => "message-httpd"
				add_field => {
				"protocol" => "httpd"
				"event_description" => "bad username"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "httpd"
					"[rsa][message][id1]" => "httpd"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:01
		# line in RSA: <agent>[<process_id>]: [<severity>] <process>: SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] %{process}: SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)" }
				id => "message-httpd:01"
				add_field => {
				"event_description" => "SSL handshake interrupted by system"
					"[event][id]" => "httpd:01"
					"[rsa][message][id1]" => "httpd:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:02
		# line in RSA: <agent>[<process_id>]: [<severity>] <process>: Connection reset by peer (errno: <fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] %{process}: Connection reset by peer (errno: %{fld1})" }
				id => "message-httpd:02"
				add_field => {
				"event_description" => "Connection reset by peer"
					"[event][id]" => "httpd:02"
					"[rsa][message][id1]" => "httpd:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:03
		# line in RSA: <agent>: HTTP logout from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP logout from %{saddr} as %{username}" }
				id => "message-httpd:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_description" => "HTTP logout"
					"[event][id]" => "httpd:03"
					"[rsa][message][id1]" => "httpd:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:04
		# line in RSA: <agent>: HTTP login from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP login from %{saddr} as %{username}" }
				id => "message-httpd:04"
				add_field => {
				"event_description" => "HTTP login"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "httpd:04"
					"[rsa][message][id1]" => "httpd:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:05
		# line in RSA: <agent>: bad username <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: bad username %{username}" }
				id => "message-httpd:05"
				add_field => {
				"event_description" => "bad username"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "httpd:05"
					"[rsa][message][id1]" => "httpd:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:06
		# line in RSA: <agent>: Session had expired for user: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Session had expired for user: %{username}" }
				id => "message-httpd:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_description" => "Session had expired for user"
					"[event][id]" => "httpd:06"
					"[rsa][message][id1]" => "httpd:06"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:07
		# line in RSA: <agent>: HTTP login denied from <saddr> for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP login denied from %{saddr} for %{username}" }
				id => "message-httpd:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => " HTTP login denied"
					"[event][id]" => "httpd:07"
					"[rsa][message][id1]" => "httpd:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:08
		# line in RSA: <agent>: Received URL with out session information, Redirecting to login: <webpage>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received URL with out session information, Redirecting to login: %{webpage}" }
				id => "message-httpd:08"
				add_field => {
				"event_description" => "Received URL without session information"
					"[event][id]" => "httpd:08"
					"[rsa][message][id1]" => "httpd:08"
					"[event][categoryid]" => "1204020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA: <agent>: <saddr> <fld9> <fld10> "<action> <version>" <resultcode> <bytes> 
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "%{agent}: %{saddr} %{fld9} %{fld10} \"%{action} %{version}\" %{resultcode} %{bytes}" }
			id => "msgParserId115"
			add_field => {
				"event_description" => "HTTP connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ifm" {
		# MESSAGE ifm
		# line in RSA: <agent>[<process_id>]: Logical interface <interface> state is changed to <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Logical interface %{interface} state is changed to %{fld2}" }
				id => "message-ifm"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Logical interface state changed"
					"[event][id]" => "ifm"
					"[rsa][message][id1]" => "ifm"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ifm:01
		# line in RSA: <agent>[<process_id>]: Physical interface <interface> state is changed to <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Physical interface %{interface} state is changed to %{fld2}" }
				id => "message-ifm:01"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Physical interface state changed"
					"[event][id]" => "ifm:01"
					"[rsa][message][id1]" => "ifm:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "interface" {
		# MESSAGE interface
		# line in RSA: <saddr>: interface <interface> is down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: interface %{interface} is down" }
				id => "message-interface"
				add_field => {
				"event_description" => "interface down"
					"[event][id]" => "interface"
					"[rsa][message][id1]" => "interface"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE interface:01
		# line in RSA: <saddr>: interface <interface> is <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr}: interface %{interface} is %{fld15}" }
				id => "message-interface:01"
				add_field => {
				"event_description" => "interface configuration information"
					"[event][id]" => "interface:01"
					"[rsa][message][id1]" => "interface:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ipsrd" {
		# MESSAGE ipsrd
		# line in RSA: <agent>[<process_id>]: EVENT <fld20> <interface> index <fld21> <fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: EVENT %{fld20} %{interface} index %{fld21} %{fld22}" }
				id => "message-ipsrd"
				add_field => {
					"[event][id]" => "ipsrd"
					"[rsa][message][id1]" => "ipsrd"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:01
		# line in RSA: <agent>[<process_id>]: OSPF IO: Init bit set in Loading/Full for neighbor <daddr>(<interface>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: OSPF IO: Init bit set in Loading/Full for neighbor %{daddr}(%{interface})" }
				id => "message-ipsrd:01"
				add_field => {
				"event_description" => "Init bit set in Loading/Full for neighbor"
					"[event][id]" => "ipsrd:01"
					"[rsa][message][id1]" => "ipsrd:01"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:02
		# line in RSA: <agent>[<process_id>]: OSPF IO: neighbor <daddr>(<interface>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: OSPF IO: neighbor %{daddr}(%{interface}) %{info}" }
				id => "message-ipsrd:02"
				add_field => {
				"event_description" => "OSPF rule violation"
					"[event][id]" => "ipsrd:02"
					"[rsa][message][id1]" => "ipsrd:02"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:03
		# line in RSA: <agent>[<process_id>]: task_reconfigure re-initializing from <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: task_reconfigure re-initializing from %{filename}" }
				id => "message-ipsrd:03"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "task_reconfigure re-initializing from file"
					"[event][id]" => "ipsrd:03"
					"[rsa][message][id1]" => "ipsrd:03"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:04
		# line in RSA: <agent>[<process_id>]: task_reconfigure reinitializing done
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: task_reconfigure reinitializing done" }
				id => "message-ipsrd:04"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "task_reconfigure reinitializing done"
					"[event][id]" => "ipsrd:04"
					"[rsa][message][id1]" => "ipsrd:04"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:05
		# line in RSA: <agent>[<process_id>]: igmp_recv: packet from non-local neighbor <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: igmp_recv: packet from non-local neighbor %{saddr}" }
				id => "message-ipsrd:05"
				add_field => {
				"event_description" => "packet fron non-local neighbor"
					"[event][id]" => "ipsrd:05"
					"[rsa][message][id1]" => "ipsrd:05"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:06
		# line in RSA: <agent>[<process_id>]: <process>: priority override
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: priority override" }
				id => "message-ipsrd:06"
				add_field => {
				"event_description" => "priority override"
					"[event][id]" => "ipsrd:06"
					"[rsa][message][id1]" => "ipsrd:06"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:07
		# line in RSA: <agent>[<process_id>]: <process>: discarded local loopback for VRID <id> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: discarded local loopback for VRID %{id} from %{saddr}" }
				id => "message-ipsrd:07"
				add_field => {
				"event_description" => "discarded packet local loopback."
					"[event][id]" => "ipsrd:07"
					"[rsa][message][id1]" => "ipsrd:07"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:08
		# line in RSA: <agent>[<process_id>]: <process>: discarded packet from <saddr> attempting to take over interface <interface>, VRID <id> while local router is master
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: discarded packet from %{saddr} attempting to take over interface %{interface}, VRID %{id} while local router is master" }
				id => "message-ipsrd:08"
				add_field => {
				"event_description" => "discarded packet while attempting to take over interface"
					"[event][id]" => "ipsrd:08"
					"[rsa][message][id1]" => "ipsrd:08"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:09
		# line in RSA: <agent>[<process_id>]: <process>: non-local
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: non-local" }
				id => "message-ipsrd:09"
				add_field => {
				"event_description" => "vrrp_vr_startup"
					"[event][id]" => "ipsrd:09"
					"[rsa][message][id1]" => "ipsrd:09"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:10
		# line in RSA: <agent>[<process_id>]: <process>: interface <interface>, VRID <id>: firewall state not okay: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: interface %{interface}, VRID %{id}: firewall state not okay: %{info}" }
				id => "message-ipsrd:10"
				add_field => {
				"event_description" => "firewall state not okay"
					"[event][id]" => "ipsrd:10"
					"[rsa][message][id1]" => "ipsrd:10"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:11
		# line in RSA: <agent>[<process_id>]: <process>: interface <interface>, VRID <id>: state=<event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: interface %{interface}, VRID %{id}: state=%{event_state}" }
				id => "message-ipsrd:11"
				add_field => {
				"event_description" => "vrrp_vr process"
					"[event][id]" => "ipsrd:11"
					"[rsa][message][id1]" => "ipsrd:11"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ipsrd:12
		# line in RSA: <agent>[<process_id>]: <process>: Discard packet from <saddr> on <interface>: Bad address list  expecting:<daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Discard packet from %{saddr} on %{interface}: Bad address list  expecting:%{daddr}" }
				id => "message-ipsrd:12"
				add_field => {
				"event_description" => "vrrp_valid_addr_list"
					"[event][id]" => "ipsrd:12"
					"[rsa][message][id1]" => "ipsrd:12"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA: <agent>: Voyager audit: User <username> pressed button <action> on page <webpage> 
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "%{agent}: Voyager audit: User %{username} pressed button %{action} on page %{webpage}" }
			id => "msgParserId141"
			add_field => {
				"event_description" => "User pressed button"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA: <agent>[<process_id>]: Unable to push down TCP tuning configuration: error '<result>' while setting variable <fld15>. 
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Unable to push down TCP tuning configuration: error '%{result}' while setting variable %{fld15}." }
			id => "msgParserId189"
			add_field => {
				"event_description" => "Unable to push down TCP tuning configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "kernel" {
		# MESSAGE kernel
		# line in RSA:  <agent>: <interface>: State synchronization is in risk. Please examine your synchronization network to avoid further problems
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: State synchronization is in risk. Please examine your synchronization network to avoid further problems" }
				id => "message-kernel"
				add_field => {
				"event_description" => "Synchronization at risk"
					"[event][id]" => "kernel"
					"[rsa][message][id1]" => "kernel"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:01
		# line in RSA:  <agent>: FW-1: fwldbcast_recv: delta sync connection with member <username> was lost and regained. <fld1> updates were lost.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: fwldbcast_recv: delta sync connection with member %{username} was lost and regained. %{fld1} updates were lost." }
				id => "message-kernel:01"
				add_field => {
				"event_description" => "Connection lost"
					"[event][id]" => "kernel:01"
					"[rsa][message][id1]" => "kernel:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:02
		# line in RSA:  <agent>: VPN-1: No license for encryption, disabling encryption features
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: VPN-1: No license for encryption, disabling encryption features" }
				id => "message-kernel:02"
				add_field => {
				"event_description" => "No license for encryption"
					"[event][id]" => "kernel:02"
					"[rsa][message][id1]" => "kernel:02"
					"[event][categoryid]" => "1608010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:03
		# line in RSA: <agent>: FW-1: <severity>: The <interface> interface is not protected by the anti-spoofing feature 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: %{severity}: The %{interface} interface is not protected by the anti-spoofing feature" }
				id => "message-kernel:03"
				add_field => {
				"event_description" => "interface is not protected by the anti-spoofing feature"
					"[event][id]" => "kernel:03"
					"[rsa][message][id1]" => "kernel:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:04
		# line in RSA: <agent>: Global param: operation failed: Unknown parameter 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Global param: operation failed: Unknown parameter" }
				id => "message-kernel:04"
				add_field => {
				"event_description" => "operation failed: Unknown parameter"
					"[event][id]" => "kernel:04"
					"[rsa][message][id1]" => "kernel:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:05
		# line in RSA: <agent>: FW-1: Log buffer is full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: Log buffer is full" }
				id => "message-kernel:05"
				add_field => {
				"event_description" => "Log buffer is full"
					"[event][id]" => "kernel:05"
					"[rsa][message][id1]" => "kernel:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:06
		# line in RSA: <agent>: FW-1: lost <dclass_counter1> log/trap messages 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: lost %{dclass_counter1} log/trap messages" }
				id => "message-kernel:06"
				add_field => {
				"event_description" => "lost log/trap messages"
					"[event][id]" => "kernel:06"
					"[rsa][message][id1]" => "kernel:06"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:07
		# line in RSA: <agent>: FW-1: <severity>: The connections table is <dclass_ratio1>% full. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: %{severity}: The connections table is %{dclass_ratio1}% full." }
				id => "message-kernel:07"
				add_field => {
				"event_description" => "connections table full"
					"[event][id]" => "kernel:07"
					"[rsa][message][id1]" => "kernel:07"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:08
		# line in RSA: <agent>: New connections will be dropped once the connection table reaches 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: New connections will be dropped once the connection table reaches" }
				id => "message-kernel:08"
				add_field => {
					"[event][id]" => "kernel:08"
					"[rsa][message][id1]" => "kernel:08"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:09
		# line in RSA: <agent>:<space>full capacity.  Please consider increasing the connections table limit. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{space}full capacity.  Please consider increasing the connections table limit." }
				id => "message-kernel:09"
				add_field => {
					"[event][id]" => "kernel:09"
					"[rsa][message][id1]" => "kernel:09"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:10
		# line in RSA: <agent>: FW-1: fw_kfree: wrong magic number at tail end of <fld1> caller is 'msn_save_buf' sz=<bytes> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: fw_kfree: wrong magic number at tail end of %{fld1} caller is 'msn_save_buf' sz=%{bytes}" }
				id => "message-kernel:10"
				add_field => {
					"[event][id]" => "kernel:10"
					"[rsa][message][id1]" => "kernel:10"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:11
		# line in RSA: <agent>: Your network may be at risk. In the future, it is recommended that you  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Your network may be at risk. In the future, it is recommended that you" }
				id => "message-kernel:11"
				add_field => {
					"[event][id]" => "kernel:11"
					"[rsa][message][id1]" => "kernel:11"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:12
		# line in RSA: <agent>: define anti-spoofing protection before installing the Security Policy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: define anti-spoofing protection before installing the Security Policy." }
				id => "message-kernel:12"
				add_field => {
				"event_description" => "define anti-spoofing protection"
					"[event][id]" => "kernel:12"
					"[rsa][message][id1]" => "kernel:12"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:13
		# line in RSA: <agent>: FW-1: stopping debug messages for the next <duration> seconds
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: stopping debug messages for the next %{duration} seconds" }
				id => "message-kernel:13"
				add_field => {
				"event_description" => "stopping debug messages"
					"[event][id]" => "kernel:13"
					"[rsa][message][id1]" => "kernel:13"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:14
		# line in RSA: <agent>: FW-1: lost <dclass_counter1> debug messages 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: lost %{dclass_counter1} debug messages" }
				id => "message-kernel:14"
				add_field => {
				"event_description" => "lost several debug messages"
					"[event][id]" => "kernel:14"
					"[rsa][message][id1]" => "kernel:14"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:15
		# line in RSA: <agent>: Process <id> killed by <action> -- out of swap  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Process %{id} killed by %{action} -- out of swap" }
				id => "message-kernel:15"
				add_field => {
				"event_description" => "Process killed"
					"[event][id]" => "kernel:15"
					"[rsa][message][id1]" => "kernel:15"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:16
		# line in RSA: <agent>: FW-1: fwconn_chain_conn_exists: fwconn_chain_lookup failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FW-1: fwconn_chain_conn_exists: fwconn_chain_lookup failed" }
				id => "message-kernel:16"
				add_field => {
				"event_description" => "fwconn_chain_lookup failed"
					"[event][id]" => "kernel:16"
					"[rsa][message][id1]" => "kernel:16"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:17
		# line in RSA: <agent>: cpas_tcp_pass_data: asked to transfer <bytes> bytes which is more than in q(<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: cpas_tcp_pass_data: asked to transfer %{bytes} bytes which is more than in q(%{fld1})" }
				id => "message-kernel:17"
				add_field => {
				"event_description" => "asked to transfer bytes"
					"[event][id]" => "kernel:17"
					"[rsa][message][id1]" => "kernel:17"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:18
		# line in RSA: <agent>: netlog:<interface> .. <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: netlog:%{interface} .. %{event_description}" }
				id => "message-kernel:18"
				add_field => {
					"[event][id]" => "kernel:18"
					"[rsa][message][id1]" => "kernel:18"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:19
		# line in RSA: <agent>: [<hostname>];<node>: <dclass_counter1> interfaces installed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];%{node}: %{dclass_counter1} interfaces installed" }
				id => "message-kernel:19"
				add_field => {
					"[event][id]" => "kernel:19"
					"[rsa][message][id1]" => "kernel:19"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:20
		# line in RSA: <agent>: [<hostname>];<node>: <process>: get flags failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];%{node}: %{process}: get flags failed" }
				id => "message-kernel:20"
				add_field => {
					"[event][id]" => "kernel:20"
					"[rsa][message][id1]" => "kernel:20"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:21
		# line in RSA: <agent>: [<hostname>];<process>: couldn't get conn from chain
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];%{process}: couldn't get conn from chain" }
				id => "message-kernel:21"
				add_field => {
					"[event][id]" => "kernel:21"
					"[rsa][message][id1]" => "kernel:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:22
		# line in RSA: <agent>: [<hostname>];<node> <severity>: The <interface> interface is not protected by the anti-spoofing feature.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];%{node} %{severity}: The %{interface} interface is not protected by the anti-spoofing feature." }
				id => "message-kernel:22"
				add_field => {
					"[event][id]" => "kernel:22"
					"[rsa][message][id1]" => "kernel:22"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:23
		# line in RSA: <agent>: [<hostname>];      Your network may be at risk. In the future, it is recommended that you
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];      Your network may be at risk. In the future, it is recommended that you" }
				id => "message-kernel:23"
				add_field => {
					"[event][id]" => "kernel:23"
					"[rsa][message][id1]" => "kernel:23"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:24
		# line in RSA: <agent>: [<hostname>];      define anti-spoofing protection before installing the Security Policy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];      define anti-spoofing protection before installing the Security Policy." }
				id => "message-kernel:24"
				add_field => {
					"[event][id]" => "kernel:24"
					"[rsa][message][id1]" => "kernel:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:25
		# line in RSA: <agent>: { [<hostname>];<node> | <node> }: Nokia IPSO SecureXL device detected.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*\[(?<hostname>[^\]]*)\];(?<node>[^\s]*)[\s]+|[\s]*(?<node>[^\s]*)[\s]+):[\s]+Nokia[\s]+IPSO[\s]+SecureXL[\s]+device[\s]+detected\.$" }
				id => "message-kernel:25"
				add_field => {
					"[event][id]" => "kernel:25"
					"[rsa][message][id1]" => "kernel:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:26
		# line in RSA: <agent>: duplicate IP address <saddr>! sent from mac address: <smacaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: duplicate IP address %{saddr}! sent from mac address: %{smacaddr}" }
				id => "message-kernel:26"
				add_field => {
					"[event][id]" => "kernel:26"
					"[rsa][message][id1]" => "kernel:26"
					"[event][categoryid]" => "1805010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:27
		# line in RSA: <agent>: <node>: Initializing debugging buffer to size <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: Initializing debugging buffer to size %{change_new}" }
				id => "message-kernel:27"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"change_attribute" => "Initial buffer size"
					"[event][id]" => "kernel:27"
					"[rsa][message][id1]" => "kernel:27"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:28
		# line in RSA: <agent>: <node>:          use cpstart to restart synchronization to other member(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}:          use cpstart to restart synchronization to other member(s)" }
				id => "message-kernel:28"
				add_field => {
					"[event][id]" => "kernel:28"
					"[rsa][message][id1]" => "kernel:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:29
		# line in RSA: <agent>: <node>: <severity>: Unloading the local policy also stops synchronization on this member
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: %{severity}: Unloading the local policy also stops synchronization on this member" }
				id => "message-kernel:29"
				add_field => {
					"[event][id]" => "kernel:29"
					"[rsa][message][id1]" => "kernel:29"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:30
		# line in RSA: <agent>: { [<hostname>];<node> | <node> }: <severity>: Interface <interface> is defined but not currently present
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*\[(?<hostname>[^\]]*)\];(?<node>[^\s]*)[\s]+|[\s]*(?<node>[^\s]*)[\s]+):[\s]+(?<severity>[^:]*):[\s]+Interface[\s]+(?<interface>[^\s]*)[\s]+is[\s]+defined[\s]+but[\s]+not[\s]+currently[\s]+present$" }
				id => "message-kernel:30"
				add_field => {
					"[event][id]" => "kernel:30"
					"[rsa][message][id1]" => "kernel:30"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:31
		# line in RSA: <agent>: <node>: No interface configured in SmartCenter server with name <fld15>. Matching by IP address to interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: No interface configured in SmartCenter server with name %{fld15}. Matching by IP address to interface %{interface}" }
				id => "message-kernel:31"
				add_field => {
					"[event][id]" => "kernel:31"
					"[rsa][message][id1]" => "kernel:31"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:32
		# line in RSA: <agent>: <node>: <severity>: No valid license
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: %{severity}: No valid license" }
				id => "message-kernel:32"
				add_field => {
					"[event][id]" => "kernel:32"
					"[rsa][message][id1]" => "kernel:32"
					"[event][categoryid]" => "1608010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:33
		# line in RSA: <agent>: <node>: disconnected from FW-1
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: disconnected from FW-1" }
				id => "message-kernel:33"
				add_field => {
					"[event][id]" => "kernel:33"
					"[rsa][message][id1]" => "kernel:33"
					"[event][categoryid]" => "1608010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:34
		# line in RSA: <agent>: [<hostname>];<process>: failed to get rule
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{hostname}];%{process}: failed to get rule" }
				id => "message-kernel:34"
				add_field => {
					"[event][id]" => "kernel:34"
					"[rsa][message][id1]" => "kernel:34"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE login
		# line in RSA: <agent>: <process>: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: check pass; user unknown" }
				id => "message-login"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login"
					"[rsa][message][id1]" => "login"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:01
		# line in RSA: <agent>: authentication failure; <username>(uid=<uid>) -> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: authentication failure; %{username}(uid=%{uid}) -> %{info}" }
				id => "message-login:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login:01"
					"[rsa][message][id1]" => "login:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:02
		# line in RSA: <agent>: <dclass_counter1> LOGIN { FAILURES | FAILURE } FROM <saddr>, <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+([\s]*FAILURES[\s]+|[\s]*FAILURE[\s]+)[\s]+FROM[\s]+(?<saddr>[^,]*),[\s]+(?<username>.*)$" }
				id => "message-login:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login:02"
					"[rsa][message][id1]" => "login:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:03
		# line in RSA: <agent>: login from <saddr> as <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: login from %{saddr} as %{username}" }
				id => "message-login:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:03"
					"[rsa][message][id1]" => "login:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:04
		# line in RSA: <agent>: login on <terminal> as <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: login on %{terminal} as %{username}" }
				id => "message-login:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:04"
					"[rsa][message][id1]" => "login:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:05
		# line in RSA: <agent>: DIALUP <terminal>, <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: DIALUP %{terminal}, %{username}" }
				id => "message-login:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:05"
					"[rsa][message][id1]" => "login:05"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:06
		# line in RSA: <agent>: ROOT LOGIN (<username>) ON <terminal> FROM <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN (%{username}) ON %{terminal} FROM %{saddr}" }
				id => "message-login:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:06"
					"[rsa][message][id1]" => "login:06"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:07
		# line in RSA: <agent>: <dclass_counter1> LOGIN {FAILURES|FAILURE} FROM <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+(FAILURES|FAILURE)[\s]+FROM[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-login:07"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login:07"
					"[rsa][message][id1]" => "login:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:08
		# line in RSA: <agent>: <dclass_counter1> LOGIN {FAILURES|FAILURE} ON <terminal>, <username> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+(FAILURES|FAILURE)[\s]+ON[\s]+(?<terminal>[^,]*),[\s]+(?<username>[^\s]*)[\s]+$" }
				id => "message-login:08"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login:08"
					"[rsa][message][id1]" => "login:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:09
		# line in RSA: <agent>: <dclass_counter1> LOGIN {FAILURES|FAILURE} ON <terminal> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+LOGIN[\s]+(FAILURES|FAILURE)[\s]+ON[\s]+(?<terminal>[^\s]*)[\s]+$" }
				id => "message-login:09"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login:09"
					"[rsa][message][id1]" => "login:09"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:10
		# line in RSA: <agent>: ROOT LOGIN (<username>) ON <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN (%{username}) ON %{terminal}" }
				id => "message-login:10"
				add_field => {
					"[event][id]" => "login:10"
					"[rsa][message][id1]" => "login:10"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:11
		# line in RSA: <agent>: Console login on <terminal> as <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Console login on %{terminal} as %{username}" }
				id => "message-login:11"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:11"
					"[rsa][message][id1]" => "login:11"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:12
		# line in RSA: <agent>: <process>: (<fld1>) session opened for user <username> by <administrator>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: (%{fld1}) session opened for user %{username} by %{administrator}(uid=%{uid})" }
				id => "message-login:12"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:12"
					"[rsa][message][id1]" => "login:12"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login:13
		# line in RSA: <agent>: <process>: (<fld1>) session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: (%{fld1}) session closed for user %{username}" }
				id => "message-login:13"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "login:13"
					"[rsa][message][id1]" => "login:13"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId234
	# line in RSA: <agent>[<process_id>]: send-mail sent mail for <username>
	else if [logstash][msgparser][id] == "msgParserId234" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: send-mail sent mail for %{username}" }
			id => "msgParserId234"
			add_field => {
				"event_description" => "mail sent for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "monitord" {
		# MESSAGE monitord
		# line in RSA: <agent>: fmipc_open_connection: connect() failed (local) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: fmipc_open_connection: connect() failed (local)" }
				id => "message-monitord"
				add_field => {
				"event_description" => "failed connection"
					"[event][id]" => "monitord"
					"[rsa][message][id1]" => "monitord"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE monitord:01
		# line in RSA: <agent>: Updating monitor list on next interval
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Updating monitor list on next interval" }
				id => "message-monitord:01"
				add_field => {
				"event_description" => "Updating monitor list"
					"[event][id]" => "monitord:01"
					"[rsa][message][id1]" => "monitord:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mount" {
		# MESSAGE mount
		# line in RSA: <agent>: Executing command: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Executing command: %{action}" }
				id => "message-mount"
				add_field => {
					"[event][id]" => "mount"
					"[rsa][message][id1]" => "mount"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mount:01
		# line in RSA: <agent>: <action> command executed successfully 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action} command executed successfully" }
				id => "message-mount:01"
				add_field => {
					"[event][id]" => "mount:01"
					"[rsa][message][id1]" => "mount:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nrpe" {
		# MESSAGE nrpe
		# line in RSA: <agent>[<process_id>]: <severity>: Could not complete SSL handshake. <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Could not complete SSL handshake. %{fld1}" }
				id => "message-nrpe"
				add_field => {
					"[event][id]" => "nrpe"
					"[rsa][message][id1]" => "nrpe"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE nrpe:01
		# line in RSA: <agent>[<process_id>]: Could not read request from client, bailing out... 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not read request from client, bailing out..." }
				id => "message-nrpe:01"
				add_field => {
					"[event][id]" => "nrpe:01"
					"[rsa][message][id1]" => "nrpe:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM_httpd" {
		# MESSAGE PAM_httpd
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-PAM_httpd"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "PAM_httpd - user unknown"
				"info" => "password check failed"
					"[event][id]" => "PAM_httpd"
					"[rsa][message][id1]" => "PAM_httpd"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PAM_httpd:01
		# line in RSA: <agent>{ [<process_id>] | : <process> }: authentication failure; <username>(uid=<uid>) -> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s\s]*)([\s]*\[(?<process_id>[^\]]*)\][\s]+|[\s]*:[\s]+(?<process>[^\s]*)[\s]+):[\s]+authentication[\s]+failure;[\s]+(?<username>[^\(]*)\(uid=(?<uid>[^\)]*)\)[\s]+\->[\s]+(?<info>.*)$" }
				id => "message-PAM_httpd:01"
				add_field => {
				"event_description" => "Authentication failure"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "PAM_httpd:01"
					"[rsa][message][id1]" => "PAM_httpd:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId241
	# line in RSA: <agent>[<process_id>]: (<service>) session opened for user <username> by <administrator>(uid=<uid>)
	else if [logstash][msgparser][id] == "msgParserId241" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{service}) session opened for user %{username} by %{administrator}(uid=%{uid})" }
			id => "msgParserId241"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "perfmond" {
		# MESSAGE perfmond
		# line in RSA: <agent>: SQL error <fld1>: database is locked 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SQL error %{fld1}: database is locked" }
				id => "message-perfmond"
				add_field => {
				"event_description" => "SQL Error - database locked"
					"[event][id]" => "perfmond"
					"[rsa][message][id1]" => "perfmond"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE perfmond:01
		# line in RSA: <agent>: SQL error <fld1>: no such table: <fld11> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SQL error %{fld1}: no such table: %{fld11}" }
				id => "message-perfmond:01"
				add_field => {
				"event_description" => "SQL Error - no such table"
					"[event][id]" => "perfmond:01"
					"[rsa][message][id1]" => "perfmond:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE perfmond:02
		# line in RSA: <agent>: No index found in <fld11> for <fld21>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: No index found in %{fld11} for %{fld21}" }
				id => "message-perfmond:02"
				add_field => {
					"[event][id]" => "perfmond:02"
					"[rsa][message][id1]" => "perfmond:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pm" {
		# MESSAGE pm
		# line in RSA: <agent>[<process_id>]: Reaped:  <service>[<fld2>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Reaped:  %{service}[%{fld2}]" }
				id => "message-pm"
				add_field => {
				"event_description" => "Reaped daemon"
					"[event][id]" => "pm"
					"[rsa][message][id1]" => "pm"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:01
		# line in RSA: <agent>[<process_id>]: Restarted <service>[<fld3>], count=<fld4> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Restarted %{service}[%{fld3}], count=%{fld4}" }
				id => "message-pm:01"
				add_field => {
				"event_description" => "Restart daemon"
					"[event][id]" => "pm:01"
					"[rsa][message][id1]" => "pm:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:02
		# line in RSA: <agent>[<process_id>]: Scheduled <service> for +<duration> secs 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Scheduled %{service} for +%{duration} secs" }
				id => "message-pm:02"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Scheduled Daemon"
					"[event][id]" => "pm:02"
					"[rsa][message][id1]" => "pm:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:03
		# line in RSA: <agent>[<process_id>]: Enabled <service> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Enabled %{service}" }
				id => "message-pm:03"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Enable"
				"ec_theme" => "Configuration"
				"event_description" => "Enabled service/daemon"
					"[event][id]" => "pm:03"
					"[rsa][message][id1]" => "pm:03"
					"[event][categoryid]" => "1701060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:04
		# line in RSA: <agent>[<process_id>]: Disabled <service> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disabled %{service}" }
				id => "message-pm:04"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"event_description" => "Disabled service/daemon"
					"[event][id]" => "pm:04"
					"[rsa][message][id1]" => "pm:04"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:05
		# line in RSA: <agent>[<process_id>]: Started <service>[<fld3>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Started %{service}[%{fld3}]" }
				id => "message-pm:05"
				add_field => {
				"event_description" => "Started Daemon"
					"[event][id]" => "pm:05"
					"[rsa][message][id1]" => "pm:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:06
		# line in RSA: <agent>[<process_id>]: Program <action> is finished. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Program %{action} is finished." }
				id => "message-pm:06"
				add_field => {
				"event_description" => "Program execution finished"
					"[event][id]" => "pm:06"
					"[rsa][message][id1]" => "pm:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pm:07
		# line in RSA: <agent>[<process_id>]: environment variable received and set <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: environment variable received and set %{info}" }
				id => "message-pm:07"
				add_field => {
				"event_description" => "environment variable received and set"
					"[event][id]" => "pm:07"
					"[rsa][message][id1]" => "pm:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "reboot" {
		# MESSAGE reboot
		# line in RSA: <agent>: rebooted by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: rebooted by %{username}" }
				id => "message-reboot"
				add_field => {
				"event_description" => "Reboot by user"
					"[event][id]" => "reboot"
					"[rsa][message][id1]" => "reboot"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE reboot:01
		# line in RSA: <agent>: Boot image will be <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Boot image will be %{version}" }
				id => "message-reboot:01"
				add_field => {
				"event_description" => "Boot image installed."
					"[event][id]" => "reboot:01"
					"[rsa][message][id1]" => "reboot:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE reboot:02
		# line in RSA: <agent>: Attempt to reboot by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Attempt to reboot by %{username}" }
				id => "message-reboot:02"
				add_field => {
				"event_description" => "Attempt to reboot by user."
					"[event][id]" => "reboot:02"
					"[rsa][message][id1]" => "reboot:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE reboot:03
		# line in RSA: <agent>: System reboots in approximately <duration> { seconds | minute | minutes }.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+System[\s]+reboots[\s]+in[\s]+approximately[\s]+(?<duration>[^\s]*)[\s]+([\s]*seconds[\s]+|[\s]*minute[\s]+|[\s]*minutes[\s]+)\.$" }
				id => "message-reboot:03"
				add_field => {
				"event_description" => "System rebooting."
					"[event][id]" => "reboot:03"
					"[rsa][message][id1]" => "reboot:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId3"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId254
	# line in RSA: <agent>: shutdown by <username>:
	else if [logstash][msgparser][id] == "msgParserId254" {
		dissect {
			mapping => { "message" => "%{agent}: shutdown by %{username}:" }
			id => "msgParserId254"
			add_field => {
				"event_description" => "Reboot by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "snmpd" {
		# MESSAGE snmpd:01
		# line in RSA: <agent>: <service>: send_trap: Failure in sendto (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service}: send_trap: Failure in sendto (%{info})" }
				id => "message-snmpd:01"
				add_field => {
				"event_description" => "sendto failure"
					"[event][id]" => "snmpd:01"
					"[rsa][message][id1]" => "snmpd:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:02
		# line in RSA: <agent>: handle_var_list:NULL community string is not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: handle_var_list:NULL community string is not allowed" }
				id => "message-snmpd:02"
				add_field => {
				"event_description" => "NULL community string is not allowed"
					"[event][id]" => "snmpd:02"
					"[rsa][message][id1]" => "snmpd:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:03
		# line in RSA: <agent>: Received request with invalid community 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received request with invalid community" }
				id => "message-snmpd:03"
				add_field => {
				"event_description" => "Received request with invalid community"
					"[event][id]" => "snmpd:03"
					"[rsa][message][id1]" => "snmpd:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:04
		# line in RSA: <agent>: Received TERM or STOP signal... <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received TERM or STOP signal... %{info}" }
				id => "message-snmpd:04"
				add_field => {
				"event_description" => "snmpd - STOP signal received"
					"[event][id]" => "snmpd:04"
					"[rsa][message][id1]" => "snmpd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:05
		# line in RSA: <agent>: Added interface: <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Added interface: %{interface}" }
				id => "message-snmpd:05"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "added interface"
					"[event][id]" => "snmpd:05"
					"[rsa][message][id1]" => "snmpd:05"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:06
		# line in RSA: <agent>: Reconfiguring daemon 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Reconfiguring daemon" }
				id => "message-snmpd:06"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Reconfiguring daemon"
					"[event][id]" => "snmpd:06"
					"[rsa][message][id1]" => "snmpd:06"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:07
		# line in RSA: <agent>: SnmpdReconfig:reconfig trap 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SnmpdReconfig:reconfig trap" }
				id => "message-snmpd:07"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "reconfig trap"
					"[event][id]" => "snmpd:07"
					"[rsa][message][id1]" => "snmpd:07"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:08
		# line in RSA: <agent>: Updating physical contents table.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Updating physical contents table." }
				id => "message-snmpd:08"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Updating physical contents table"
					"[event][id]" => "snmpd:08"
					"[rsa][message][id1]" => "snmpd:08"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd
		# line in RSA: <agent>: Routing socket open failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Routing socket open failed." }
				id => "message-snmpd"
				add_field => {
				"event_description" => "socket open failure"
					"[event][id]" => "snmpd"
					"[rsa][message][id1]" => "snmpd"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:09
		# line in RSA: <agent>: <process>: interface:<interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: interface:%{interface}" }
				id => "message-snmpd:09"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleting interface"
					"[event][id]" => "snmpd:09"
					"[rsa][message][id1]" => "snmpd:09"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:10
		# line in RSA: <agent>: Storing platform type [<version>] once 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Storing platform type [%{version}] once" }
				id => "message-snmpd:10"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Storing platform type"
					"[event][id]" => "snmpd:10"
					"[rsa][message][id1]" => "snmpd:10"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:11
		# line in RSA: <agent>: Trap sent to <protocol>:<daddr>:<dport>: Version - <version> Type - Authentication Failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Trap sent to %{protocol}:%{daddr}:%{dport}: Version - %{version} Type - Authentication Failure" }
				id => "message-snmpd:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "SNMPD Authentication Failure"
					"[event][id]" => "snmpd:11"
					"[rsa][message][id1]" => "snmpd:11"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmpd:12
		# line in RSA: <agent>: Trap sent to <protocol>:<daddr>:<dport>: Version - <version> Type - <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Trap sent to %{protocol}:%{daddr}:%{dport}: Version - %{version} Type - %{result}" }
				id => "message-snmpd:12"
				add_field => {
					"[event][id]" => "snmpd:12"
					"[rsa][message][id1]" => "snmpd:12"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd-x" {
		# MESSAGE sshd-x
		# line in RSA: <agent>[<process_id>]: PAM_unix: service(<service>) ignoring max retries; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM_unix: service(%{service}) ignoring max retries; %{info}" }
				id => "message-sshd-x"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x"
					"[rsa][message][id1]" => "sshd-x"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:01
		# line in RSA: <agent>[<process_id>]: Recv authentication reply from server <saddr> not successful: Network read timed out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Recv authentication reply from server %{saddr} not successful: Network read timed out" }
				id => "message-sshd-x:01"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:01"
					"[rsa][message][id1]" => "sshd-x:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:02
		# line in RSA: <agent>[<process_id>]: <action> failed: Network read timed out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action} failed: Network read timed out" }
				id => "message-sshd-x:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:02"
					"[rsa][message][id1]" => "sshd-x:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:03
		# line in RSA: <agent>[<process_id>]: Accepted password for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-sshd-x:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "sshd-x:03"
					"[rsa][message][id1]" => "sshd-x:03"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:04
		# line in RSA: <agent>[<process_id>]: Could not reverse map address <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not reverse map address %{saddr}" }
				id => "message-sshd-x:04"
				add_field => {
					"[event][id]" => "sshd-x:04"
					"[rsa][message][id1]" => "sshd-x:04"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:05
		# line in RSA: <agent>[<process_id>]: <process>: (<service>) session opened for user <username> by <administrator>(uid=<uid>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: (%{service}) session opened for user %{username} by %{administrator}(uid=%{uid})" }
				id => "message-sshd-x:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "sshd-x:05"
					"[rsa][message][id1]" => "sshd-x:05"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:06
		# line in RSA: <agent>[<process_id>]: <process>: (<service>) session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: (%{service}) session closed for user %{username}" }
				id => "message-sshd-x:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "sshd-x:06"
					"[rsa][message][id1]" => "sshd-x:06"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:07
		# line in RSA: <agent>[<process_id>]: Nasty PTR record "<fqdn>" is set up for <saddr>, ignoring
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Nasty PTR record \"%{fqdn}\" is set up for %{saddr}, ignoring" }
				id => "message-sshd-x:07"
				add_field => {
					"[event][id]" => "sshd-x:07"
					"[rsa][message][id1]" => "sshd-x:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:08
		# line in RSA: <agent>[<process_id>]: Failed password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-sshd-x:08"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:08"
					"[rsa][message][id1]" => "sshd-x:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:09
		# line in RSA: <agent>[<process_id>]: Failed { keyboard-interactive/pam | keyboard-interactive } for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+([\s]*keyboard\-interactive/pam[\s]+|[\s]*keyboard\-interactive[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-sshd-x:09"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:09"
					"[rsa][message][id1]" => "sshd-x:09"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:10
		# line in RSA: <agent>[<process_id>]: Disconnecting: Too many authentication failures for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Too many authentication failures for %{username}" }
				id => "message-sshd-x:10"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:10"
					"[rsa][message][id1]" => "sshd-x:10"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:11
		# line in RSA: <agent>[<process_id>]: input_userauth_request: illegal user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: input_userauth_request: illegal user %{username}" }
				id => "message-sshd-x:11"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:11"
					"[rsa][message][id1]" => "sshd-x:11"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:12
		# line in RSA: <agent>[<process_id>]: authentication failure; <username>(uid=<uid>) -> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; %{username}(uid=%{uid}) -> %{info}" }
				id => "message-sshd-x:12"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:12"
					"[rsa][message][id1]" => "sshd-x:12"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:13
		# line in RSA: <agent>[<process_id>]: <process>: <fld1> more authentication failure; <username>(uid=<uid>) -> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{fld1} more authentication failure; %{username}(uid=%{uid}) -> %{info}" }
				id => "message-sshd-x:13"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "sshd-x:13"
					"[rsa][message][id1]" => "sshd-x:13"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:14
		# line in RSA: <agent>[<process_id>]: Accepted keyboard-interactive/pam for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted keyboard-interactive/pam for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-sshd-x:14"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "sshd-x:14"
					"[rsa][message][id1]" => "sshd-x:14"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd-x:15
		# line in RSA: <agent>[<process_id>]: <severity>: ssh_msg_send: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: ssh_msg_send: %{action}" }
				id => "message-sshd-x:15"
				add_field => {
					"[event][id]" => "sshd-x:15"
					"[rsa][message][id1]" => "sshd-x:15"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SSL" {
		# MESSAGE SSL
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>] SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}] SSL handshake interrupted by system [Hint: Stop button pressed in browser?!] (System error follows)" }
				id => "message-SSL"
				add_field => {
				"event_description" => "SSL handshake interrupted by system"
					"[event][id]" => "SSL"
					"[rsa][message][id1]" => "SSL"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:01
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>] System: Connection reset by peer (errno: <resultcode>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}] System: Connection reset by peer (errno: %{resultcode})" }
				id => "message-SSL:01"
				add_field => {
				"event_description" => "Connection reset by peer"
					"[event][id]" => "SSL:01"
					"[rsa][message][id1]" => "SSL:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:08
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Connection to child <id> established (server <dhost>:<dport>, client <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Connection to child %{id} established (server %{dhost}:%{dport}, client %{saddr})" }
				id => "message-SSL:08"
				add_field => {
				"event_description" => "Connection to child established"
					"[event][id]" => "SSL:08"
					"[rsa][message][id1]" => "SSL:08"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:02
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Connection to child <id> {closed with standard shutdown | closed with unclean shutdown} (server <dhost>:<dport>, client <saddr>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<fld11>[^\s]*)[\s]+(?<fld12>[^\s]*)[\s]+(?<fld13>[^\]]*)\][\s]+\[(?<severity>[^\]]*)\](?<space>[^C]*)Connection[\s]+to[\s]+child[\s]+(?<id>[^\s]*)[\s]+(closed[\s]+with[\s]+standard[\s]+shutdown[\s]+|[\s]*closed[\s]+with[\s]+unclean[\s]+shutdown)[\s]+\(server[\s]+(?<dhost>[^:]*):(?<dport>[^,]*),[\s]+client[\s]+(?<saddr>[^\)]*)\)$" }
				id => "message-SSL:02"
				add_field => {
				"event_description" => "Connection to child closed"
					"[event][id]" => "SSL:02"
					"[rsa][message][id1]" => "SSL:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:03
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Connection: Client IP: <saddr>, Protocol: <protocol>, Cipher: <s_cipher> (<fld3>/<s_ciphersize> bits)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Connection: Client IP: %{saddr}, Protocol: %{protocol}, Cipher: %{s_cipher} (%{fld3}/%{s_ciphersize} bits)" }
				id => "message-SSL:03"
				add_field => {
				"event_description" => "SSL Connection"
					"[event][id]" => "SSL:03"
					"[rsa][message][id1]" => "SSL:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:04
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Initial (No.<fld2>) HTTPS request received for child <id> (server <dhost>:<dport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Initial (No.%{fld2}) HTTPS request received for child %{id} (server %{dhost}:%{dport})" }
				id => "message-SSL:04"
				add_field => {
				"event_description" => "HTTPS request received for child"
					"[event][id]" => "SSL:04"
					"[rsa][message][id1]" => "SSL:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:05
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Seeding PRNG with <bytes> bytes of entropy
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Seeding PRNG with %{bytes} bytes of entropy" }
				id => "message-SSL:05"
				add_field => {
				"event_description" => "Seeding PRNG"
					"[event][id]" => "SSL:05"
					"[rsa][message][id1]" => "SSL:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:06
		# line in RSA: <agent>: [<fld11> <fld12> <fld13>] [<severity>]<space>Spurious SSL handshake interrupt[Hint: Usually just one of those OpenSSL confusions!?] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld11} %{fld12} %{fld13}] [%{severity}]%{space}Spurious SSL handshake interrupt[Hint: Usually just one of those OpenSSL confusions!?]" }
				id => "message-SSL:06"
				add_field => {
				"event_description" => "Spurious SSL handshake interrupt"
					"[event][id]" => "SSL:06"
					"[rsa][message][id1]" => "SSL:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld11} %{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE SSL:07
		# line in RSA: <agent>: [<event_time_string>] <saddr> <protocol> <s_cipher> "<action> <version>" <bytes> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{event_time_string}] %{saddr} %{protocol} %{s_cipher} \"%{action} %{version}\" %{bytes}" }
				id => "message-SSL:07"
				add_field => {
				"event_description" => "SSL connection"
					"[event][id]" => "SSL:07"
					"[rsa][message][id1]" => "SSL:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId280
	# line in RSA: <agent>: <username> : TTY=<terminal> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} : TTY=%{terminal} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
			id => "msgParserId280"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslogd" {
		# MESSAGE syslogd
		# line in RSA: <agent>: out of disk space
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: out of disk space" }
				id => "message-syslogd"
				add_field => {
					"[event][id]" => "syslogd"
					"[rsa][message][id1]" => "syslogd"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslogd:01
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-syslogd:01"
				add_field => {
					"[event][id]" => "syslogd:01"
					"[rsa][message][id1]" => "syslogd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId282
	# line in RSA: <agent>: User <username> logged out from TCSH shell
	else if [logstash][msgparser][id] == "msgParserId282" {
		dissect {
			mapping => { "message" => "%{agent}: User %{username} logged out from TCSH shell" }
			id => "msgParserId282"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "transfer" {
		# MESSAGE transfer
		# line in RSA: <agent>: Put failed, errcode <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Put failed, errcode %{resultcode}" }
				id => "message-transfer"
				add_field => {
				"event_description" => "transfer - put failure"
					"[event][id]" => "transfer"
					"[rsa][message][id1]" => "transfer"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE transfer:01
		# line in RSA: <agent>: ftp_PutFile: Login Failure host:= <daddr> User: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ftp_PutFile: Login Failure host:= %{daddr} User: %{username}" }
				id => "message-transfer:01"
				add_field => {
				"event_description" => "host Login Failure"
					"[event][id]" => "transfer:01"
					"[rsa][message][id1]" => "transfer:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA: <agent>: tz_xlate setting tz to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "%{agent}: tz_xlate setting tz to %{change_new}." }
			id => "msgParserId285"
			add_field => {
				"event_description" => "Time zone changed"
				"change_attribute" => "Time zone"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId286
	# line in RSA: <agent>: unable to open file <filename>: couldn't open "<fld11>": <info>
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "%{agent}: unable to open file %{filename}: couldn't open \"%{fld11}\": %{info}" }
			id => "msgParserId286"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "xntpd" {
		# MESSAGE xntpd
		# line in RSA: <agent>[<process_id>]: sendto(<daddr>): Can't assign requested address
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sendto(%{daddr}): Can't assign requested address" }
				id => "message-xntpd"
				add_field => {
				"event_description" => "xntpd - assignment error"
					"[event][id]" => "xntpd"
					"[rsa][message][id1]" => "xntpd"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:01
		# line in RSA: <agent>[<process_id>]: peer <saddr> event <id> status <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: peer %{saddr} event %{id} status %{resultcode}" }
				id => "message-xntpd:01"
				add_field => {
					"[event][id]" => "xntpd:01"
					"[rsa][message][id1]" => "xntpd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:02
		# line in RSA: <agent>[<process_id>]: precision = <fld2> usec 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: precision = %{fld2} usec" }
				id => "message-xntpd:02"
				add_field => {
					"[event][id]" => "xntpd:02"
					"[rsa][message][id1]" => "xntpd:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:03
		# line in RSA: <agent>[<process_id>]: system event <id> status <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: system event %{id} status %{resultcode}" }
				id => "message-xntpd:03"
				add_field => {
					"[event][id]" => "xntpd:03"
					"[rsa][message][id1]" => "xntpd:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:04
		# line in RSA: <agent>[<process_id>]: offset <fld4> freq <fld5> poll <fld6> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: offset %{fld4} freq %{fld5} poll %{fld6}" }
				id => "message-xntpd:04"
				add_field => {
					"[event][id]" => "xntpd:04"
					"[rsa][message][id1]" => "xntpd:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:05
		# line in RSA: <agent>[<process_id>]: tickadj = <fld5>, tick = <fld6>, tvu_maxslew = <fld7> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tickadj = %{fld5}, tick = %{fld6}, tvu_maxslew = %{fld7}" }
				id => "message-xntpd:05"
				add_field => {
					"[event][id]" => "xntpd:05"
					"[rsa][message][id1]" => "xntpd:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:06
		# line in RSA: <agent>[<process_id>]: using xntpd phase-lock loop 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: using xntpd phase-lock loop" }
				id => "message-xntpd:06"
				add_field => {
					"[event][id]" => "xntpd:06"
					"[rsa][message][id1]" => "xntpd:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xntpd:07
		# line in RSA: <agent>[<process_id>]: xntpd version=<version>; <fld3>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: xntpd version=%{version}; %{fld3}" }
				id => "message-xntpd:07"
				add_field => {
					"[event][id]" => "xntpd:07"
					"[rsa][message][id1]" => "xntpd:07"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "xpand" {
		# MESSAGE xpand
		# line in RSA: <agent>: fmipc_open_connection: connect() failed (local)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: fmipc_open_connection: connect() failed (local)" }
				id => "message-xpand"
				add_field => {
				"event_description" => "Connection failed"
					"[event][id]" => "xpand"
					"[rsa][message][id1]" => "xpand"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:01
		# line in RSA: <agent>[<process_id>]: fork_delayed_nonblocking: Running command: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fork_delayed_nonblocking: Running command: %{action}" }
				id => "message-xpand:01"
				add_field => {
				"event_description" => "Running command"
					"[event][id]" => "xpand:01"
					"[rsa][message][id1]" => "xpand:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:02
		# line in RSA: <agent>[<process_id>]: fork_nonblocking: Running command: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fork_nonblocking: Running command: %{action}" }
				id => "message-xpand:02"
				add_field => {
				"event_description" => "Running command"
					"[event][id]" => "xpand:02"
					"[rsa][message][id1]" => "xpand:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:03
		# line in RSA: <agent>[<process_id>]: Reconfigure daemon request: <service> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Reconfigure daemon request: %{service} %{info}" }
				id => "message-xpand:03"
				add_field => {
				"event_description" => "Reconfigure daemon request"
					"[event][id]" => "xpand:03"
					"[rsa][message][id1]" => "xpand:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:04
		# line in RSA: <agent>[<process_id>]: Running command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Running command: %{action}" }
				id => "message-xpand:04"
				add_field => {
				"event_description" => "Running command"
					"[event][id]" => "xpand:04"
					"[rsa][message][id1]" => "xpand:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:05
		# line in RSA: <agent>[<process_id>]: tell_pm: buffer[<fld1>]: <<process:<service>:signal <info>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tell_pm: buffer[%{fld1}]: <process:%{service}:signal %{info}>" }
				id => "message-xpand:05"
				add_field => {
					"[event][id]" => "xpand:05"
					"[rsa][message][id1]" => "xpand:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:06
		# line in RSA: <agent>[<process_id>]: tell_pm: buffer[<fld1>]: <<process:<service>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tell_pm: buffer[%{fld1}]: <process:%{service}>" }
				id => "message-xpand:06"
				add_field => {
					"[event][id]" => "xpand:06"
					"[rsa][message][id1]" => "xpand:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:07
		# line in RSA: <agent>[<process_id>]: Trap sent 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Trap sent" }
				id => "message-xpand:07"
				add_field => {
				"event_description" => "Trap sent"
					"[event][id]" => "xpand:07"
					"[rsa][message][id1]" => "xpand:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:08
		# line in RSA: <agent>[<process_id>]: <process>: Deleted severity level <change_new> for remote syslog server <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted severity level %{change_new} for remote syslog server %{hostip}" }
				id => "message-xpand:08"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "severity level deleted for remote syslog server"
				"change_attribute" => "Severity level for remote syslog server"
					"[event][id]" => "xpand:08"
					"[rsa][message][id1]" => "xpand:08"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:09
		# line in RSA: <agent>[<process_id>]: <process>: Severity level for remote syslog server <hostip> is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Severity level for remote syslog server %{hostip} is set to %{change_new}" }
				id => "message-xpand:09"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Set the severity level for remote syslog server"
				"change_attribute" => "Severity level for remote syslog server"
					"[event][id]" => "xpand:09"
					"[rsa][message][id1]" => "xpand:09"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:10
		# line in RSA: <agent>[<process_id>]: Configuration changed from <hostname> by user <administrator> for <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Configuration changed from %{hostname} by user %{administrator} for %{username}" }
				id => "message-xpand:10"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "xpand - Configuration changed by user"
					"[event][id]" => "xpand:10"
					"[rsa][message][id1]" => "xpand:10"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:11
		# line in RSA: <agent>[<process_id>]: Configuration changed from <hostname> by user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Configuration changed from %{hostname} by user %{username}" }
				id => "message-xpand:11"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configuration changed by user"
					"[event][id]" => "xpand:11"
					"[rsa][message][id1]" => "xpand:11"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:12
		# line in RSA: <agent>[<process_id>]: User entry created for "<username>" in the password <space> database 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User entry created for \"%{username}\" in the password %{space} database" }
				id => "message-xpand:12"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"event_description" => "User entry created"
					"[event][id]" => "xpand:12"
					"[rsa][message][id1]" => "xpand:12"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:14
		# line in RSA: <agent>[<process_id>]: error <resultcode> Error in supplied information (Please make sure FTP site, directory, user and password are correct. Or try using anonymous ftp)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error %{resultcode} Error in supplied information (Please make sure FTP site, directory, user and password are correct. Or try using anonymous ftp)" }
				id => "message-xpand:14"
				add_field => {
				"event_description" => "ftp information error"
					"[event][id]" => "xpand:14"
					"[rsa][message][id1]" => "xpand:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:15
		# line in RSA: <agent>[<process_id>]: <process>: Couldn't open file <filename>: No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Couldn't open file %{filename}: No such file or directory" }
				id => "message-xpand:15"
				add_field => {
				"event_description" => "Couldn't open file"
					"[event][id]" => "xpand:15"
					"[rsa][message][id1]" => "xpand:15"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:16
		# line in RSA: <agent>[<process_id>]: <process>: Physical interface (<interface>) Link Trap is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Physical interface (%{interface}) Link Trap is set to %{change_new}" }
				id => "message-xpand:16"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Link trap is set for physical interface"
				"change_attribute" => "Physical interface Link Trap state"
					"[event][id]" => "xpand:16"
					"[rsa][message][id1]" => "xpand:16"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:17
		# line in RSA: <agent>[<process_id>]: <process>: Physical interface (<interface>) duplicity is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Physical interface (%{interface}) duplicity is set to %{change_new}" }
				id => "message-xpand:17"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Physical interface duplicity is set."
				"change_attribute" => "Physical interface duplicity"
					"[event][id]" => "xpand:17"
					"[rsa][message][id1]" => "xpand:17"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:18
		# line in RSA: <agent>[<process_id>]: <process>: Queue mode on interface <interface> is <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Queue mode on interface %{interface} is %{disposition}" }
				id => "message-xpand:18"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Queue mode on interface modified"
				"change_attribute" => "Queue mode status"
				"change_new" => "%{disposition}"
					"[event][id]" => "xpand:18"
					"[rsa][message][id1]" => "xpand:18"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:19
		# line in RSA: <agent>[<process_id>]: <process>: Interface <interface> is reset to use <change_new> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Interface %{interface} is reset to use %{change_new}" }
				id => "message-xpand:19"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Interface reset to use default Queue Class"
				"change_attribute" => "Queue class type"
					"[event][id]" => "xpand:19"
					"[rsa][message][id1]" => "xpand:19"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:20
		# line in RSA: <agent>[<process_id>]: <process>: Logical interface (<interface>) Link Trap is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Logical interface (%{interface}) Link Trap is set to %{change_new}" }
				id => "message-xpand:20"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Logical interface Link Trap is set."
				"change_attribute" => "Logical interface Link Trap status"
					"[event][id]" => "xpand:20"
					"[rsa][message][id1]" => "xpand:20"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:21
		# line in RSA: <agent>[<process_id>]: <process>: IPMTU for interface <interface> set to: <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: IPMTU for interface %{interface} set to: %{change_new}" }
				id => "message-xpand:21"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "IPMTU for interface is set."
				"change_attribute" => "IPMTU for interface"
					"[event][id]" => "xpand:21"
					"[rsa][message][id1]" => "xpand:21"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:22
		# line in RSA: <agent>[<process_id>]: <process>: Logical interface (<interface>) is configured with IP address <hostip>/<network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Logical interface (%{interface}) is configured with IP address %{hostip}/%{network_port}" }
				id => "message-xpand:22"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "IP address configured for Logical interface."
					"[event][id]" => "xpand:22"
					"[rsa][message][id1]" => "xpand:22"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:23
		# line in RSA: <agent>[<process_id>]: <process>: Logical interface (<interface>) state is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Logical interface (%{interface}) state is set to %{change_new}" }
				id => "message-xpand:23"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "IP address configured for Logical interface."
				"change_attribute" => "Logical interface state"
					"[event][id]" => "xpand:23"
					"[rsa][message][id1]" => "xpand:23"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:24
		# line in RSA: <agent>[<process_id>]: <process>: Deleted name for interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted name for interface %{interface}" }
				id => "message-xpand:24"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted name for interface"
					"[event][id]" => "xpand:24"
					"[rsa][message][id1]" => "xpand:24"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:25
		# line in RSA: <agent>[<process_id>]: <process>: Deleted comments for interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted comments for interface %{interface}" }
				id => "message-xpand:25"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted comments for interface"
					"[event][id]" => "xpand:25"
					"[rsa][message][id1]" => "xpand:25"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:26
		# line in RSA: <agent>[<process_id>]: <process>: Deleted IP Address <hostip> on logical interface (<interface>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted IP Address %{hostip} on logical interface (%{interface})" }
				id => "message-xpand:26"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted IP Address on logical interface"
					"[event][id]" => "xpand:26"
					"[rsa][message][id1]" => "xpand:26"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:27
		# line in RSA: <agent>[<process_id>]: <process>: Deleted IPMTU for interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted IPMTU for interface %{interface}" }
				id => "message-xpand:27"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted IPMTU for interface"
					"[event][id]" => "xpand:27"
					"[rsa][message][id1]" => "xpand:27"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:28
		# line in RSA: <agent>[<process_id>]: <process>: Deleted logical interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted logical interface %{interface}" }
				id => "message-xpand:28"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted logical interface"
					"[event][id]" => "xpand:28"
					"[rsa][message][id1]" => "xpand:28"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:30
		# line in RSA: <agent>[<process_id>]: <process>: LACP mode for group ID <groupid> is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: LACP mode for group ID %{groupid} is set to %{change_new}" }
				id => "message-xpand:30"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "LACP mode for group is set."
				"change_attribute" => "LACP mode for group"
					"[event][id]" => "xpand:30"
					"[rsa][message][id1]" => "xpand:30"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:31
		# line in RSA: <agent>[<process_id>]: <process>: System priority for group ID <groupid> is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: System priority for group ID %{groupid} is set to %{change_new}" }
				id => "message-xpand:31"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "System priority for group is set."
				"change_attribute" => "System priority for group"
					"[event][id]" => "xpand:31"
					"[rsa][message][id1]" => "xpand:31"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:32
		# line in RSA: <agent>[<process_id>]: <process>: Port priority for group ID <groupid> is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Port priority for group ID %{groupid} is set to %{change_new}" }
				id => "message-xpand:32"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Port priority for group is set."
				"change_attribute" => "Port priority for group"
					"[event][id]" => "xpand:32"
					"[rsa][message][id1]" => "xpand:32"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:33
		# line in RSA: <agent>[<process_id>]: <process>: Disabled <service> daemon
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Disabled %{service} daemon" }
				id => "message-xpand:33"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"event_description" => "Disabled daemon"
					"[event][id]" => "xpand:33"
					"[rsa][message][id1]" => "xpand:33"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:34
		# line in RSA: <agent>[<process_id>]: <process>: Enabled redistribution of default static routes into OSPF external
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Enabled redistribution of default static routes into OSPF external" }
				id => "message-xpand:34"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Enabled redistribution of default static routes"
					"[event][id]" => "xpand:34"
					"[rsa][message][id1]" => "xpand:34"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:35
		# line in RSA: <agent>[<process_id>]: <process>: Type of default filters for OSPF external to redistribute from static routes is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Type of default filters for OSPF external to redistribute from static routes is set to %{change_new}" }
				id => "message-xpand:35"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Type of default filters for OSPF external to redistribute from static routes is set"
				"change_attribute" => "Type of default filters for OSPF external to redistribute from static routes"
					"[event][id]" => "xpand:35"
					"[rsa][message][id1]" => "xpand:35"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:36
		# line in RSA: <agent>[<process_id>]: <process>: Deleted gateway <hostip> for default route
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted gateway %{hostip} for default route" }
				id => "message-xpand:36"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted gateway for default route"
					"[event][id]" => "xpand:36"
					"[rsa][message][id1]" => "xpand:36"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:37
		# line in RSA: <agent>[<process_id>]: <process>: For default route, gateway type is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: For default route, gateway type is set to %{change_new}" }
				id => "message-xpand:37"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "For default route, gateway type is set"
				"change_attribute" => "Gateway type for default route"
					"[event][id]" => "xpand:37"
					"[rsa][message][id1]" => "xpand:37"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:38
		# line in RSA: <agent>[<process_id>]: <process>: For default route, gateway is set to <hostip> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: For default route, gateway is set to %{hostip} (%{info})" }
				id => "message-xpand:38"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Gateway type is set for default route."
					"[event][id]" => "xpand:38"
					"[rsa][message][id1]" => "xpand:38"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:39
		# line in RSA: <agent>[<process_id>]: <process>: Deleted network or host <hostip>/<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Deleted network or host %{hostip}/%{fld12}" }
				id => "message-xpand:39"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"event_description" => "Deleted network or host"
					"[event][id]" => "xpand:39"
					"[rsa][message][id1]" => "xpand:39"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:40
		# line in RSA: <agent>[<process_id>]: <process>: Added network or host <hostip>/<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Added network or host %{hostip}/%{fld12}" }
				id => "message-xpand:40"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"event_description" => "Added network or host"
					"[event][id]" => "xpand:40"
					"[rsa][message][id1]" => "xpand:40"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:41
		# line in RSA: <agent>[<process_id>]: <process>: Password changed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Password changed for user %{username}" }
				id => "message-xpand:41"
				add_field => {
				"event_description" => "Password changed for user"
					"[event][id]" => "xpand:41"
					"[rsa][message][id1]" => "xpand:41"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:42
		# line in RSA: <agent>[<process_id>]: <process>: Configured interface <interface> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Configured interface %{interface} to %{change_new}" }
				id => "message-xpand:42"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configured interface mode."
				"change_attribute" => "Interface mode"
					"[event][id]" => "xpand:42"
					"[rsa][message][id1]" => "xpand:42"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:43
		# line in RSA: <agent>[<process_id>]: <process>: Configured Virtual Router ID <id> on interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Configured Virtual Router ID %{id} on interface %{interface}" }
				id => "message-xpand:43"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configured Virtual Router on interface"
					"[event][id]" => "xpand:43"
					"[rsa][message][id1]" => "xpand:43"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:44
		# line in RSA: <agent>[<process_id>]: <process>: VRRP(<fld10>) priority on the interface <interface> is set to <change_new> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: VRRP(%{fld10}) priority on the interface %{interface} is set to %{change_new}" }
				id => "message-xpand:44"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configured VRRP priority on interface"
				"change_attribute" => "VRRP priority on the interface"
					"[event][id]" => "xpand:44"
					"[rsa][message][id1]" => "xpand:44"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:45
		# line in RSA: <agent>[<process_id>]: <process>: VRRP(<fld10>) advertise interval on the interface <interface> is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: VRRP(%{fld10}) advertise interval on the interface %{interface} is set to %{change_new}" }
				id => "message-xpand:45"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configured VRRP advertise interval on interface"
				"change_attribute" => "VRRP advertise interval on the interface"
					"[event][id]" => "xpand:45"
					"[rsa][message][id1]" => "xpand:45"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:46
		# line in RSA: <agent>[<process_id>]: <process>: VRRP(<fld10>) backup address on the interface <interface> is set to <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: VRRP(%{fld10}) backup address on the interface %{interface} is set to %{hostip}" }
				id => "message-xpand:46"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configured VRRP backup address on interface"
					"[event][id]" => "xpand:46"
					"[rsa][message][id1]" => "xpand:46"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:47
		# line in RSA: <agent>[<process_id>]: <process>: Enabled VRRP(<fld10>) Monitor interface(<interface>) on interface <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Enabled VRRP(%{fld10}) Monitor interface(%{interface}) on interface %{fld15}" }
				id => "message-xpand:47"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Enabled VRRP Monitor interface"
					"[event][id]" => "xpand:47"
					"[rsa][message][id1]" => "xpand:47"
					"[event][categoryid]" => "1701060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:48
		# line in RSA: <agent>[<process_id>]: <process>: VRRP(<fld10>) Priority for Monitor interface(<interface>) on <fld15> is set to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: VRRP(%{fld10}) Priority for Monitor interface(%{interface}) on %{fld15} is set to %{change_new}" }
				id => "message-xpand:48"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_description" => "Configured priority for VRRP Monitor interface"
				"change_attribute" => "VRRP Priority for Monitor interface"
					"[event][id]" => "xpand:48"
					"[rsa][message][id1]" => "xpand:48"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:49
		# line in RSA: <agent>[<process_id>]: <process>: Disabled <info> mode on Interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Disabled %{info} mode on Interface %{interface}" }
				id => "message-xpand:49"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"event_description" => "Diasbled interface mode"
					"[event][id]" => "xpand:49"
					"[rsa][message][id1]" => "xpand:49"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:50
		# line in RSA: <agent>[<process_id>]: <process>: Disabled VRRP(<fld10>) Monitor interface(<interface>) on the interface <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Disabled VRRP(%{fld10}) Monitor interface(%{interface}) on the interface %{fld15}" }
				id => "message-xpand:50"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"event_description" => "Diasbled Monitor interface mode"
					"[event][id]" => "xpand:50"
					"[rsa][message][id1]" => "xpand:50"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE xpand:51
		# line in RSA: <agent>[<process_id>]: <username> <shost> { p | t } <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<username>[^\s]*)[\s]+(?<shost>[^\s]*)[\s]+([\s]*p[\s]+|[\s]*t[\s]+)[\s]+(?<action>.*)$" }
				id => "message-xpand:51"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "xpand:51"
					"[rsa][message][id1]" => "xpand:51"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/sbin/cron" {
		# MESSAGE /usr/sbin/cron
		# line in RSA: <agent>[<process_id>]: (*system*) RELOAD (/etc/crontab)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (*system*) RELOAD (/etc/crontab)" }
				id => "message-/usr/sbin/cron"
				add_field => {
				"event_description" => "cron - RELOAD"
					"[event][id]" => "/usr/sbin/cron"
					"[rsa][message][id1]" => "/usr/sbin/cron"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE /usr/sbin/cron:01
		# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-/usr/sbin/cron:01"
				add_field => {
				"event_description" => "cron - command"
					"[event][id]" => "/usr/sbin/cron:01"
					"[rsa][message][id1]" => "/usr/sbin/cron:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
			id => "msgParserId44"
			add_field => {
				"event_description" => "cron - command"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_nokiaipsomsg.json"
#			template_name => "nokiaipso_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
