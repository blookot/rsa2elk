# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "enterpriseitsfne"
			"[observer][name]" => "Enterprise-IT SF-NoEvasion"
			"[observer][type]" => "Mainframe"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %Enterprise-IT-Security.com_SF-NoEvasion: <hversion>^^<messageid>^^<!payload:hversion>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%Enterprise\-IT\-Security\.com_SF\-NoEvasion:[\s]+(?<message>(?<hversion>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-enterpriseitsfnemsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "RACF" {
		# MESSAGE RACF_Login
		# line in RSA:  <version>^^RACF^^Event_Type="z/OS Security Server Event - Login"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Username="<username>"^^Group=<group>^^Terminal=<fld10>^^Event_Code=<fld5>^^Event_Name=<action>^^Access_Result=<disposition>^^Event_Qual_Code=<fld6>^^Event_Qual_Name=<result>^^Log_Reason=<fld7>^^Application=<application>^^Resource_Ident=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{version}^^RACF^^Event_Type=\"z/OS Security Server Event - Login\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Username=\"%{username}\"^^Group=%{group}^^Terminal=%{fld10}^^Event_Code=%{fld5}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Event_Qual_Code=%{fld6}^^Event_Qual_Name=%{result}^^Log_Reason=%{fld7}^^Application=%{application}^^Resource_Ident=%{info}" }
				id => "message-RACF_Login"
				add_field => {
					"[event][id]" => "RACF_Login"
					"[rsa][message][id1]" => "RACF_Login"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE RACF
		# line in RSA:  <version>^^RACF^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Username="<username>"^^Group=<group>^^Process=<process>^^Event_Code=<fld5>^^Event_Name=<action>^^Access_Level=<privilege>^^Access_Result=<disposition>^^Event_Qual_Code=<fld6>^^Event_Qual_Name=<result>^^Log_Reason=<fld7>^^Resource=<resource>^^Resource_Class=<resource_class>^^Volume=<disk_volume>^^Application=<application>^^Resource_Ident=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{version}^^RACF^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Username=\"%{username}\"^^Group=%{group}^^Process=%{process}^^Event_Code=%{fld5}^^Event_Name=%{action}^^Access_Level=%{privilege}^^Access_Result=%{disposition}^^Event_Qual_Code=%{fld6}^^Event_Qual_Name=%{result}^^Log_Reason=%{fld7}^^Resource=%{resource}^^Resource_Class=%{resource_class}^^Volume=%{disk_volume}^^Application=%{application}^^Resource_Ident=%{info}" }
				id => "message-RACF"
				add_field => {
					"[event][id]" => "RACF"
					"[rsa][message][id1]" => "RACF"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA:  <version>^^DB2^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^Process=<process>^^Event_Name=<action>^^Access_Result=<disposition>^^Event_Qual_Name=<result>^^Log_Reason=<fld5>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{version}^^DB2^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^Process=%{process}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Event_Qual_Name=%{result}^^Log_Reason=%{fld5}^^Resource_Ident=%{info}" }
			id => "msgParserId2"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: <version>^^SYSLOG^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^Application=<application>^^User_Privileged=<fld5>^^Operation_Privileged=<fld6>^^Resource_Critical=<fld7>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{version}^^SYSLOG^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^Application=%{application}^^User_Privileged=%{fld5}^^Operation_Privileged=%{fld6}^^Resource_Critical=%{fld7}^^Resource_Ident=%{info}" }
			id => "msgParserId3"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <version>^^ACCOUNT^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Group=<group>^^Process=<process>^^Event_Name=<action>^^Access_Result=<disposition>^^Event_Qual_Name=<result>^^Resource=<resource>^^Application=<application>^^Submitter=<fld5>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{version}^^ACCOUNT^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Group=%{group}^^Process=%{process}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Event_Qual_Name=%{result}^^Resource=%{resource}^^Application=%{application}^^Submitter=%{fld5}^^Resource_Ident=%{info}" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <version>^^SYSCMD^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^Event_Code=<fld5>^^Event_Name=<action>^^Access_Result=<disposition>^^Resource_Class=<resource_class>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{version}^^SYSCMD^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^Event_Code=%{fld5}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Resource_Class=%{resource_class}^^Resource_Ident=%{info}" }
			id => "msgParserId5"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: <version>^^UNIXFILE^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20>  <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Group=<group>^^Process=<process>^^Event_Code=<fld5>^^Event_Name=<action>^^Access_Result=<disposition>^^Log_Reason=<fld6>^^Resource=<resource>^^Application=<application>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{version}^^UNIXFILE^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20}  %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Group=%{group}^^Process=%{process}^^Event_Code=%{fld5}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Log_Reason=%{fld6}^^Resource=%{resource}^^Application=%{application}^^Resource_Ident=%{info}" }
			id => "msgParserId6"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: <version>^^FILE_PO^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Group=<group>^^Process=<process>^^Access_Level=<privilege>^^Access_Result=<disposition>^^Resource=<resource>^^Resource_Class=<resource_class>^^Profile=<fld5>^^Application=<application>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{version}^^FILE_PO^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Group=%{group}^^Process=%{process}^^Access_Level=%{privilege}^^Access_Result=%{disposition}^^Resource=%{resource}^^Resource_Class=%{resource_class}^^Profile=%{fld5}^^Application=%{application}^^Resource_Ident=%{info}" }
			id => "msgParserId7"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: <version>^^DSDELETE^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^Process=<process>^^Access_Result=<disposition>^^Resource=<resource>^^Resource_Class=<resource_class>^^Volume=<disk_volume>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{version}^^DSDELETE^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^Process=%{process}^^Access_Result=%{disposition}^^Resource=%{resource}^^Resource_Class=%{resource_class}^^Volume=%{disk_volume}^^Resource_Ident=%{info}" }
			id => "msgParserId8"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: <version>^^CATDEL^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Process=<process>^^Event_Name=<action>^^Access_Result=<disposition>^^Resource=<resource>^^Resource_Class=<resource_class>^^Profile=<fld5>^^Volume=<disk_volume>^^Resource_Ident=<info>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{version}^^CATDEL^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Process=%{process}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Resource=%{resource}^^Resource_Class=%{resource_class}^^Profile=%{fld5}^^Volume=%{disk_volume}^^Resource_Ident=%{info}" }
			id => "msgParserId9"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA: <version>^^PRODUSE^^Event_Type="<event_type>"^^Level=<severity>^^Device_Ip=<hostip>^^Category=<category>^^System_Id=<hostname>^^Date="<fld20> <fld21> <fld22>"^^Time=<fld23>^^User_Id=<uid>^^Username=<username>^^Group=<group>^^Event_Name=<action>^^Access_Result=<disposition>^^Resource=<resource>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{version}^^PRODUSE^^Event_Type=\"%{event_type}\"^^Level=%{severity}^^Device_Ip=%{hostip}^^Category=%{category}^^System_Id=%{hostname}^^Date=\"%{fld20} %{fld21} %{fld22}\"^^Time=%{fld23}^^User_Id=%{uid}^^Username=%{username}^^Group=%{group}^^Event_Name=%{action}^^Access_Result=%{disposition}^^Resource=%{resource}" }
			id => "msgParserId10"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-enterpriseitsfnemsg.json"
#			template_name => "enterpriseitsfne_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
