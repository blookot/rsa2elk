# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "voyence"
			"[observer][name]" => "EMC Voyence"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %VOYENCECONTROL <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%VOYENCECONTROL %{messageid} %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_voyencemsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],FailedPolicyIds=[<fld4>],SuccessPolicyIds=[<fld5>]
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],FailedPolicyIds=[%{fld4}],SuccessPolicyIds=[%{fld5}]" }
			id => "msgParserId0"
			add_field => {
				"action" => " Device Compliant"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],LatestConfigStateIdUuid=[<fld4>],LatestConfigStateIdName=[<fld5>],Complete=[<fld6>],UserIdName=[<username>],JobNumber=[<serial_number>],ConfigUnits=[<fld7>],Internal=[<fld8>],CoreConfigChanged=[<fld9>]
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],LatestConfigStateIdUuid=[%{fld4}],LatestConfigStateIdName=[%{fld5}],Complete=[%{fld6}],UserIdName=[%{username}],JobNumber=[%{serial_number}],ConfigUnits=[%{fld7}],Internal=[%{fld8}],CoreConfigChanged=[%{fld9}]" }
			id => "msgParserId1"
			add_field => {
				"action" => " Device Configuration Change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],ConfigUnitIdUuid=[<fld4>],ConfigUnitIdName=[<fld5>],ConfigUnitIdRevisionNum=[<fld6>],JobIdName=[<serial_number>],Internal=[<fld7>]
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],ConfigUnitIdUuid=[%{fld4}],ConfigUnitIdName=[%{fld5}],ConfigUnitIdRevisionNum=[%{fld6}],JobIdName=[%{serial_number}],Internal=[%{fld7}]" }
			id => "msgParserId2"
			add_field => {
				"action" => " Device Configuration Unit Change Event Succeeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],UserIdName=[%{username}]" }
			id => "msgParserId3"
			add_field => {
				"action" => " Device Create"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],UserIdName=[%{username}]" }
			id => "msgParserId4"
			add_field => {
				"action" => " Device Delete"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],LatestConfigStateIdUuid=[<fld4>],LatestConfigStateIdName=[<fld5>],Complete=[<fld6>],UserIdName=[<username>],JobNumber=[<serial_number>],ConfigUnits=[<fld7>]
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],LatestConfigStateIdUuid=[%{fld4}],LatestConfigStateIdName=[%{fld5}],Complete=[%{fld6}],UserIdName=[%{username}],JobNumber=[%{serial_number}],ConfigUnits=[%{fld7}]" }
			id => "msgParserId5"
			add_field => {
				"action" => " Device New Configuration State Event Succeeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],FailedPolicyIds=[<fld4>],SuccessPolicyIds=[<fld5>]
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],FailedPolicyIds=[%{fld4}],SuccessPolicyIds=[%{fld5}]" }
			id => "msgParserId6"
			add_field => {
				"action" => " Device Non Compliant Event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],ConfigUnitIdRevisionNum=[<fld4>],LatestConfigStateIdUuid=[<fld5>],LatestConfigStateIdName=[<fld6>],ConfigUnitIdUuid=[<fld7>],ConfigUnitIdName=[<fld8>],DevicePolicyIdUuid=[<fld9>],DevicePolicyIdName=[<fld10>]
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],ConfigUnitIdRevisionNum=[%{fld4}],LatestConfigStateIdUuid=[%{fld5}],LatestConfigStateIdName=[%{fld6}],ConfigUnitIdUuid=[%{fld7}],ConfigUnitIdName=[%{fld8}],DevicePolicyIdUuid=[%{fld9}],DevicePolicyIdName=[%{fld10}]" }
			id => "msgParserId7"
			add_field => {
				"action" => " Device Policy Check Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],LatestConfigStateIdUuid=[<fld4>],LatestConfigStateIdName=[<fld5>],DevicePolicyIdUuid=[<fld6>],DevicePolicyIdName=[<fld7>]
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],LatestConfigStateIdUuid=[%{fld4}],LatestConfigStateIdName=[%{fld5}],DevicePolicyIdUuid=[%{fld6}],DevicePolicyIdName=[%{fld7}]" }
			id => "msgParserId8"
			add_field => {
				"action" => " Device Policy Check Successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId9"
			add_field => {
				"action" => " Device Revision Change External Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId10"
			add_field => {
				"action" => " Device Revision Change Internal Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>]
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}]" }
			id => "msgParserId11"
			add_field => {
				"action" => " Device Revision Create Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],DeviceIdUuid=[<fld3>],DeviceIdName=[<product>],DeviceStatusPreviousValue=[<fld4>],DeviceStatusCurrentValue=[<fld5>]
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],DeviceIdUuid=[%{fld3}],DeviceIdName=[%{product}],DeviceStatusPreviousValue=[%{fld4}],DeviceStatusCurrentValue=[%{fld5}]" }
			id => "msgParserId12"
			add_field => {
				"action" => " Device Status Change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA:  message="<msg>",FolderIdUuid=[<fld1>],FolderIdName=[<fld2>],FileIdName=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",FolderIdUuid=[%{fld1}],FolderIdName=[%{fld2}],FileIdName=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId13"
			add_field => {
				"action" => " File Create"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA:  message="<msg>",FolderIdUuid=[<fld1>],FolderIdName=[<fld2>],FileIdName=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",FolderIdUuid=[%{fld1}],FolderIdName=[%{fld2}],FileIdName=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId14"
			add_field => {
				"action" => " File Delete"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA:  message="<msg>",FolderIdUuid=[<fld1>],FolderIdName=[<fld2>],FileIdName=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",FolderIdUuid=[%{fld1}],FolderIdName=[%{fld2}],FileIdName=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId15"
			add_field => {
				"action" => " File Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],FolderIdUuid=[<fld3>],FolderIdName=[<fld4>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],FolderIdUuid=[%{fld3}],FolderIdName=[%{fld4}],UserIdName=[%{username}]" }
			id => "msgParserId16"
			add_field => {
				"action" => " Folder Delete"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],FolderIdUuid=[<fld4>],FolderIdName=[<fld5>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],FolderIdUuid=[%{fld4}],FolderIdName=[%{fld5}],UserIdName=[%{username}]" }
			id => "msgParserId17"
			add_field => {
				"action" => " Folder Delete"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],FolderIdUuid=[<fld3>],FolderIdName=[<fld4>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],FolderIdUuid=[%{fld3}],FolderIdName=[%{fld4}],UserIdName=[%{username}]" }
			id => "msgParserId18"
			add_field => {
				"action" => " Folder Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId19"
			add_field => {
				"action" => " Job Approve"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId20"
			add_field => {
				"action" => " Job Completed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>],JobConflictsNumbers=[<fld2>]
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}],JobConflictsNumbers=[%{fld2}]" }
			id => "msgParserId21"
			add_field => {
				"action" => " Job Conflict"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId22"
			add_field => {
				"action" => " Job Failed Completely"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId23"
			add_field => {
				"action" => " Job Failed Partially"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId24"
			add_field => {
				"action" => " Job Removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId25"
			add_field => {
				"action" => " Job Schedule"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],TaskStatusPreviousValue=[<fld2>],TaskStatusCurrentValue=[<fld3>]
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],TaskStatusPreviousValue=[%{fld2}],TaskStatusCurrentValue=[%{fld3}]" }
			id => "msgParserId26"
			add_field => {
				"action" => " Job Status Change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA:  message="<msg>",JobIdUuid=[<fld1>],JobIdName=[<serial_number>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",JobIdUuid=[%{fld1}],JobIdName=[%{serial_number}],UserIdName=[%{username}]" }
			id => "msgParserId27"
			add_field => {
				"action" => " Job Update"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],UserIdName=[%{username}]" }
			id => "msgParserId28"
			add_field => {
				"action" => " Network Create"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>]
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}]" }
			id => "msgParserId29"
			add_field => {
				"action" => " Network Delete"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],UserIdName=[<username>],DeviceNumAdded=[<fld3>],DeviceNumDeleted=[<fld4>]
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],UserIdName=[%{username}],DeviceNumAdded=[%{fld3}],DeviceNumDeleted=[%{fld4}]" }
			id => "msgParserId30"
			add_field => {
				"action" => " Network Devices Update"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA:  message="<msg>",ReportIdUuid=[<fld1>],ReportIdName=[<fld2>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",ReportIdUuid=[%{fld1}],ReportIdName=[%{fld2}],UserIdName=[%{username}]" }
			id => "msgParserId31"
			add_field => {
				"action" => " Report Template Remove"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],SiteIdUuid=[<fld3>],SiteIdName=[<fld4>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],SiteIdUuid=[%{fld3}],SiteIdName=[%{fld4}],UserIdName=[%{username}]" }
			id => "msgParserId32"
			add_field => {
				"action" => " Site Create"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],SiteIdUuid=[<fld3>],SiteIdName=[<fld4>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],SiteIdUuid=[%{fld3}],SiteIdName=[%{fld4}],UserIdName=[%{username}]" }
			id => "msgParserId33"
			add_field => {
				"action" => " Site Delete"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA:  message="<msg>",NetworkIdUuid=[<fld1>],NetworkIdName=[<fld2>],SiteIdUuid=[<fld3>],SiteIdName=[<fld4>],UserIdName=[<username>],DeviceNumAdded=[<fld5>],DeviceNumDeleted=[<fld6>]
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",NetworkIdUuid=[%{fld1}],NetworkIdName=[%{fld2}],SiteIdUuid=[%{fld3}],SiteIdName=[%{fld4}],UserIdName=[%{username}],DeviceNumAdded=[%{fld5}],DeviceNumDeleted=[%{fld6}]" }
			id => "msgParserId34"
			add_field => {
				"action" => " Site Devices Update"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA:  message="<msg>",ProcessStatusDesc=[<fld1>]
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",ProcessStatusDesc=[%{fld1}]" }
			id => "msgParserId35"
			add_field => {
				"action" => " Smc Event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA:  message="<msg>",TaskIdUuid=[<fld1>],TaskIdName=[<fld2>],JobIdUuid=[<fld3>],JobIdName=[<serial_number>]
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",TaskIdUuid=[%{fld1}],TaskIdName=[%{fld2}],JobIdUuid=[%{fld3}],JobIdName=[%{serial_number}]" }
			id => "msgParserId36"
			add_field => {
				"action" => " Task Completed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA:  message="<msg>",TaskIdUuid=[<fld1>],TaskIdName=[<fld2>],JobIdUuid=[<fld3>],JobIdName=[<serial_number>]
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",TaskIdUuid=[%{fld1}],TaskIdName=[%{fld2}],JobIdUuid=[%{fld3}],JobIdName=[%{serial_number}]" }
			id => "msgParserId37"
			add_field => {
				"action" => " Task Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:  message="<msg>",ResourceTypeId=[<fld1>],ResourceTypeName=[<fld2>],ResourceTypeValue=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",ResourceTypeId=[%{fld1}],ResourceTypeName=[%{fld2}],ResourceTypeValue=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId38"
			add_field => {
				"action" => " User Authorization Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA:  message="<msg>",ResourceTypeId=[<fld1>],ResourceTypeName=[<fld2>],ResourceTypeValue=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",ResourceTypeId=[%{fld1}],ResourceTypeName=[%{fld2}],ResourceTypeValue=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId39"
			add_field => {
				"action" => " User Authorization Succeeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA:  message="<msg>",UserIdUuid=[<fld1>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",UserIdUuid=[%{fld1}],UserIdName=[%{username}]" }
			id => "msgParserId40"
			add_field => {
				"action" => " User Login Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA:  message="<msg>",UserIdUuid=[<fld1>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",UserIdUuid=[%{fld1}],UserIdName=[%{username}]" }
			id => "msgParserId41"
			add_field => {
				"action" => " User Login Succeeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA:  message="<msg>",VersionIdUuid=[<fld1>],VersionIdName=[<version>],NetworkIdUuid=[<fld2>],NetworkIdName=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",VersionIdUuid=[%{fld1}],VersionIdName=[%{version}],NetworkIdUuid=[%{fld2}],NetworkIdName=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId42"
			add_field => {
				"action" => " Version Change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA:  message="<msg>",VersionIdUuid=[<fld1>],VersionIdName=[<version>],NetworkIdUuid=[<fld2>],NetworkIdName=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",VersionIdUuid=[%{fld1}],VersionIdName=[%{version}],NetworkIdUuid=[%{fld2}],NetworkIdName=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId43"
			add_field => {
				"action" => " Version Create"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:  message="<msg>",VersionIdUuid=[<fld1>],VersionIdName=[<version>],NetworkIdUuid=[<fld2>],NetworkIdName=[<fld3>],UserIdName=[<username>]
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "message=\"%{msg}\",VersionIdUuid=[%{fld1}],VersionIdName=[%{version}],NetworkIdUuid=[%{fld2}],NetworkIdName=[%{fld3}],UserIdName=[%{username}]" }
			id => "msgParserId44"
			add_field => {
				"action" => " VersionRemove"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_voyencemsg.json"
#			template_name => "voyence_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
