# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "rsavlr"
			"[observer][name]" => "RSA Virtual Log Router"
			"[observer][type]" => "System"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hdate> <htime> <hhost> %WEBUI-AUDIT:<husername>,<messageid> <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+%WEBUI\-AUDIT:(?<message>(?<husername>[^,]*),(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-rsavlrmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Credential" {
		# MESSAGE Credential_added
		# line in RSA: <username>,Credential set <obj_name> added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Credential set %{obj_name} added" }
				id => "message-Credential_added"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"obj_type" => "Credential set"
					"[event][id]" => "Credential_added"
					"[rsa][message][id1]" => "Credential_added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Credential_updated
		# line in RSA: <username>,Credential set <obj_name> updated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Credential set %{obj_name} updated" }
				id => "message-Credential_updated"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"obj_type" => "Credential set"
					"[event][id]" => "Credential_updated"
					"[rsa][message][id1]" => "Credential_updated"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Credential_deleted
		# line in RSA: <username>,Credential set <obj_name> deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Credential set %{obj_name} deleted" }
				id => "message-Credential_deleted"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"obj_type" => "Credential set"
					"[event][id]" => "Credential_deleted"
					"[rsa][message][id1]" => "Credential_deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Database" {
		# MESSAGE Database_added
		# line in RSA: <username>,Database collection record <obj_name> added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Database collection record %{obj_name} added" }
				id => "message-Database_added"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Database collection record"
					"[event][id]" => "Database_added"
					"[rsa][message][id1]" => "Database_added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Database_updated
		# line in RSA: <username>,Database collection record <obj_name> updated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Database collection record %{obj_name} updated" }
				id => "message-Database_updated"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Database collection record"
					"[event][id]" => "Database_updated"
					"[rsa][message][id1]" => "Database_updated"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Database_removed
		# line in RSA: <username>,Database collection record <obj_name> removed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Database collection record %{obj_name} removed" }
				id => "message-Database_removed"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Database collection record"
					"[event][id]" => "Database_removed"
					"[rsa][message][id1]" => "Database_removed"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Event" {
		# MESSAGE Event_log_collection_Added
		# line in RSA: <username>,Event Log collection record <obj_name> added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Event Log collection record %{obj_name} added" }
				id => "message-Event_log_collection_Added"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Event Log collection record"
					"[event][id]" => "Event_log_collection_Added"
					"[rsa][message][id1]" => "Event_log_collection_Added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Event_log_collection_Updated
		# line in RSA: <username>,Event Log collection record <obj_name> updated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Event Log collection record %{obj_name} updated" }
				id => "message-Event_log_collection_Updated"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Event Log collection record"
					"[event][id]" => "Event_log_collection_Updated"
					"[rsa][message][id1]" => "Event_log_collection_Updated"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Event_log_collection_Deleted
		# line in RSA: <username>,Event Log collection record <obj_name> deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Event Log collection record %{obj_name} deleted" }
				id => "message-Event_log_collection_Deleted"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Event Log collection record"
					"[event][id]" => "Event_log_collection_Deleted"
					"[rsa][message][id1]" => "Event_log_collection_Deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Flat" {
		# MESSAGE Flat_file_record_added
		# line in RSA: <username>,Flat file collection record<obj_name> added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Flat file collection record%{obj_name} added" }
				id => "message-Flat_file_record_added"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Flat file collection record"
					"[event][id]" => "Flat_file_record_added"
					"[rsa][message][id1]" => "Flat_file_record_added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Flat_file_record_updated
		# line in RSA: <username>,Flat file collection record <obj_name> updated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Flat file collection record %{obj_name} updated" }
				id => "message-Flat_file_record_updated"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Flat file collection record"
					"[event][id]" => "Flat_file_record_updated"
					"[rsa][message][id1]" => "Flat_file_record_updated"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Flat_file_record_deleted
		# line in RSA: <username>,Flat file collection record <obj_name> deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Flat file collection record %{obj_name} deleted" }
				id => "message-Flat_file_record_deleted"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"obj_type" => "Flat file collection record"
					"[event][id]" => "Flat_file_record_deleted"
					"[rsa][message][id1]" => "Flat_file_record_deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <username>,Logged in
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{username},Logged in" }
			id => "msgParserId12"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: <username>,Queue has been pushed
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{username},Queue has been pushed" }
			id => "msgParserId13"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Rule" {
		# MESSAGE Rule_added
		# line in RSA: <username>,Rule added, matching on "<filter>" {type | Type} "<action>" added
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<username>[^,]*),Rule[\s]+added,[\s]+matching[\s]+on[\s]+\"(?<filter>[^\"]*)\"[\s]+(type[\s]+|[\s]*Type)[\s]+\"(?<action>[^\"]*)\"[\s]+added$" }
				id => "message-Rule_added"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
					"[event][id]" => "Rule_added"
					"[rsa][message][id1]" => "Rule_added"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Rule_updated
		# line in RSA: <username>,Rule added, matching on "<filter>" type "<action>" updated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Rule added, matching on \"%{filter}\" type \"%{action}\" updated" }
				id => "message-Rule_updated"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
					"[event][id]" => "Rule_updated"
					"[rsa][message][id1]" => "Rule_updated"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Rule_deleted
		# line in RSA: <username>,Rule added, matching on "<filter>" type "<action>" deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username},Rule added, matching on \"%{filter}\" type \"%{action}\" deleted" }
				id => "message-Rule_deleted"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
					"[event][id]" => "Rule_deleted"
					"[rsa][message][id1]" => "Rule_deleted"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-rsavlrmsg.json"
#			template_name => "rsavlr_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
