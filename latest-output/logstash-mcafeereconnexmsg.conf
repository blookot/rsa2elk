# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "mcafeereconnex"
			"[observer][name]" => "McAfee Reconnex"
			"[observer][type]" => "DLP"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %reconnex: <hdatetime>^^<id>^^<host>^^<haddress>^^<fld4>^^<fld5>^^<messageid>: <!payload:host>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%reconnex:[\s]+(?<hdatetime>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<message>(?<host>[^\^]*)\^\^(?<haddress>[^\^]*)\^\^(?<fld4>[^\^]*)\^\^(?<fld5>[^\^]*)\^\^(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %reconnex: <hdatetime>^^<id>^^<host>^^<haddress>^^<fld4>^^<fld5>^^<messageid>( <!payload:host>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%reconnex:[\s]+(?<hdatetime>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<message>(?<host>[^\^]*)\^\^(?<haddress>[^\^]*)\^\^(?<fld4>[^\^]*)\^\^(?<fld5>[^\^]*)\^\^(?<messageid>[^\(]*)\([\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %reconnex: <hdatetime>^^<id>^^<host>^^<haddress>^^<fld4>^^<fld5>^^<messageid> <!payload:host>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%reconnex:[\s]+(?<hdatetime>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<message>(?<host>[^\^]*)\^\^(?<haddress>[^\^]*)\^\^(?<fld4>[^\^]*)\^\^(?<fld5>[^\^]*)\^\^(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %reconnex: <hdatetime>^^<id>^^<host>^^<haddress>^^<fld4>^^<fld5>^^<messageid>^^<!payload:host>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%reconnex:[\s]+(?<hdatetime>[^\^]*)\^\^(?<id>[^\^]*)\^\^(?<message>(?<host>[^\^]*)\^\^(?<haddress>[^\^]*)\^\^(?<fld4>[^\^]*)\^\^(?<fld5>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: RTS: CEF:0|McAfee|<fld6>|<fld7>|<fld8>|<fld9>|<messageid>| <!payload:fld6>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^RTS:[\s]+CEF:0\|McAfee\|(?<message>(?<fld6>[^\|]*)\|(?<fld7>[^\|]*)\|(?<fld8>[^\|]*)\|(?<fld9>[^\|]*)\|(?<messageid>[^\|]*)\|[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: RTS: CEF:0|McAfee|<hfld6>|<hfld7>|<hfld8>|<hfld9>|<hfld10>| <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "RTS: CEF:0|McAfee|%{hfld6}|%{hfld7}|%{hfld8}|%{hfld9}|%{hfld10}| %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "mcafeereconnex_events"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hfld1> <hfld2> <hfld3> <hostname> RTS: CEF:0|McAfee|<hfld6>|<hfld7>|<hfld8>|<hfld9>|<hfld10>| <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3} %{hostname} RTS: CEF:0|McAfee|%{hfld6}|%{hfld7}|%{hfld8}|%{hfld9}|%{hfld10}| %{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "mcafeereconnex_events"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-mcafeereconnexmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Medium" {
		# MESSAGE Medium
		# line in RSA: <product>|<version>|<rule>|<fld9>|<fld10>|cs1=<fld11> cs1Label=policies cn1=<fld12> cn1Label=<policyname> src=<saddr> dst=<daddr> spt=<sport> dpt=<dport> app=<application> cs3Label=<fld13> cs4Label=<fld14> cn4Label=<fld15> cs5Label=<fld16> <fld21> cs3= cs4= cn4= cs5= fileSize= end= suser=<username> duser=<c_username> cs2="<info>" cs2Label=Subject filename="<filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{product}|%{version}|%{rule}|%{fld9}|%{fld10}|cs1=%{fld11} cs1Label=policies cn1=%{fld12} cn1Label=%{policyname} src=%{saddr} dst=%{daddr} spt=%{sport} dpt=%{dport} app=%{application} cs3Label=%{fld13} cs4Label=%{fld14} cn4Label=%{fld15} cs5Label=%{fld16} %{fld21} cs3= cs4= cn4= cs5= fileSize= end= suser=%{username} duser=%{c_username} cs2=\"%{info}\" cs2Label=Subject filename=\"%{filename}\"" }
				id => "message-Medium"
				add_field => {
					"[event][id]" => "Medium"
					"[rsa][message][id1]" => "Medium"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Medium:02
		# line in RSA:  <product>|<version>|<fld1>|<rule>|<fld2>|cs1=<policyname> cs1Label=policies cn1=<dclass_counter1> cn1Label=MatchCount src=<saddr> dst=<daddr> spt=<sport> dpt=<dport> app=<application> cs3=<obj_name> cs3Label=Content cs4=<fld4> cs4Label=partition_name cn2=<fld5> cn2Label=partition_offset cs5=<fld6> cs5Label=instance fsize=<filename_size> end=<fld8> <fld9> <fld10> <fld11> suser=<username> duser=<c_username> cs2="<info>" cs2Label=Subject fname=<url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{product}|%{version}|%{fld1}|%{rule}|%{fld2}|cs1=%{policyname} cs1Label=policies cn1=%{dclass_counter1} cn1Label=MatchCount src=%{saddr} dst=%{daddr} spt=%{sport} dpt=%{dport} app=%{application} cs3=%{obj_name} cs3Label=Content cs4=%{fld4} cs4Label=partition_name cn2=%{fld5} cn2Label=partition_offset cs5=%{fld6} cs5Label=instance fsize=%{filename_size} end=%{fld8} %{fld9} %{fld10} %{fld11} suser=%{username} duser=%{c_username} cs2=\"%{info}\" cs2Label=Subject fname=%{url}" }
				id => "message-Medium:02"
				add_field => {
					"[event][id]" => "Medium:02"
					"[rsa][message][id1]" => "Medium:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA:  <product>|<version>|<fld1>|<rule>|<fld2>|cs1=<policyname> cs1Label=policies cn1=<dclass_counter1> cn1Label=MatchCount src=<saddr> dst=<daddr> spt=<sport> dpt=<dport> app=<application> cs3=<obj_name> cs3Label=Content cs4=<fld4> cs4Label=partition_name cn2=<fld5> cn2Label=partition_offset cs5=<fld6> cs5Label=instance fsize=<filename_size> end=<fld8> <fld9> <fld10> <fld11> suser=<username> duser=<c_username> cs2="<info>" cs2Label=Subject fname=<url>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{product}|%{version}|%{fld1}|%{rule}|%{fld2}|cs1=%{policyname} cs1Label=policies cn1=%{dclass_counter1} cn1Label=MatchCount src=%{saddr} dst=%{daddr} spt=%{sport} dpt=%{dport} app=%{application} cs3=%{obj_name} cs3Label=Content cs4=%{fld4} cs4Label=partition_name cn2=%{fld5} cn2Label=partition_offset cs5=%{fld6} cs5Label=instance fsize=%{filename_size} end=%{fld8} %{fld9} %{fld10} %{fld11} suser=%{username} duser=%{c_username} cs2=\"%{info}\" cs2Label=Subject fname=%{url}" }
			id => "msgParserId1"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: <product>|<version>|<rule>|<fld9>|<fld10>|cs1=<fld11> cs1Label=policies cn1=<fld12> cn1Label=<policyname> src=<saddr> dst=<daddr> spt=<sport> dpt=<dport> app=<application> cs3Label=<fld13> cs4Label=<fld14> cn4Label=<fld15> cs5Label=<fld16> <fld21> cs3= cs4= cn4= cs5= fileSize= end= suser=<username> duser=<c_username> cs2="<info>" cs2Label=Subject filename=<filename>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{product}|%{version}|%{rule}|%{fld9}|%{fld10}|cs1=%{fld11} cs1Label=policies cn1=%{fld12} cn1Label=%{policyname} src=%{saddr} dst=%{daddr} spt=%{sport} dpt=%{dport} app=%{application} cs3Label=%{fld13} cs4Label=%{fld14} cn4Label=%{fld15} cs5Label=%{fld16} %{fld21} cs3= cs4= cn4= cs5= fileSize= end= suser=%{username} duser=%{c_username} cs2=\"%{info}\" cs2Label=Subject filename=%{filename}" }
			id => "msgParserId2"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^<event_description>^^<username>^^<saddr>^^<info>^^<fld3>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^%{event_description}^^%{username}^^%{saddr}^^%{info}^^%{fld3}" }
			id => "msgParserId3"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "Login" {
		# MESSAGE Login
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Login:<event_description>^^<username>^^<saddr>^^<info>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Login:%{event_description}^^%{username}^^%{saddr}^^%{info}^^%{fld3}" }
				id => "message-Login"
				add_field => {
					"[event][id]" => "Login"
					"[rsa][message][id1]" => "Login"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE Login:01
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Login failed:<event_description>^^<username>^^<saddr>^^<info>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Login failed:%{event_description}^^%{username}^^%{saddr}^^%{info}^^%{fld3}" }
				id => "message-Login:01"
				add_field => {
					"[event][id]" => "Login:01"
					"[rsa][message][id1]" => "Login:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Rule" {
		# MESSAGE Rule
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Rule creation^^<username>^^<saddr>^^<info>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Rule creation^^%{username}^^%{saddr}^^%{info}^^%{fld3}" }
				id => "message-Rule"
				add_field => {
					"[event][id]" => "Rule"
					"[rsa][message][id1]" => "Rule"
					"[event][categoryid]" => "1502030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE Rule:01
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Rule(s) deletion^^<username>^^<saddr>^^<info>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Rule(s) deletion^^%{username}^^%{saddr}^^%{info}^^%{fld3}" }
				id => "message-Rule:01"
				add_field => {
					"[event][id]" => "Rule:01"
					"[rsa][message][id1]" => "Rule:01"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Policy" {
		# MESSAGE Policy
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Policy modification^^<username>^^<saddr>^^Policy Modification successful for policy -<policyname>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Policy modification^^%{username}^^%{saddr}^^Policy Modification successful for policy -%{policyname}^^%{fld3}" }
				id => "message-Policy"
				add_field => {
				"info" => "policy modification Successful"
					"[event][id]" => "Policy"
					"[rsa][message][id1]" => "Policy"
					"[event][categoryid]" => "1502050000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE Policy:01
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Policy deletion(s)^^<username>^^<saddr>^^<info>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Policy deletion(s)^^%{username}^^%{saddr}^^%{info}^^%{fld3}" }
				id => "message-Policy:01"
				add_field => {
					"[event][id]" => "Policy:01"
					"[rsa][message][id1]" => "Policy:01"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE Policy:02
		# line in RSA: <shost>^^<hostip>^^<macaddr>^^<fld2>^^Policy creation^^<username>^^<saddr>^^Policy creation successful for policy <policyname>^^<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{shost}^^%{hostip}^^%{macaddr}^^%{fld2}^^Policy creation^^%{username}^^%{saddr}^^Policy creation successful for policy %{policyname}^^%{fld3}" }
				id => "message-Policy:02"
				add_field => {
				"info" => "policy creation Successful"
					"[event][id]" => "Policy:02"
					"[rsa][message][id1]" => "Policy:02"
					"[event][categoryid]" => "1502030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA:  cs1=<policyname> cs1Label=<fld1> cn1=<dclass_counter1> cn1Label=<fld2> src=<saddr> dst=<daddr> spt=<sport> dpt=<dport> app=<application> cs3=<obj_name> cs3Label=<fld3> cs4=<fld4> cs4Label=<fld6> cn2=<fld5> cn2Label=<fld7> cs5=<fld8> cs5Label=<fld9> fsize=<filename_size> end=<fld11> suser=<username> duser=<c_username> cs2=<info> cs2Label=<fld10> fname=<url> GMT&realtime_subscriber_id=<fld11>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "cs1=%{policyname} cs1Label=%{fld1} cn1=%{dclass_counter1} cn1Label=%{fld2} src=%{saddr} dst=%{daddr} spt=%{sport} dpt=%{dport} app=%{application} cs3=%{obj_name} cs3Label=%{fld3} cs4=%{fld4} cs4Label=%{fld6} cn2=%{fld5} cn2Label=%{fld7} cs5=%{fld8} cs5Label=%{fld9} fsize=%{filename_size} end=%{fld11} suser=%{username} duser=%{c_username} cs2=%{info} cs2Label=%{fld10} fname=%{url} GMT&realtime_subscriber_id=%{fld11}" }
			id => "msgParserId11"
			add_field => {
				"version" => "%{hfld7}"
				"product" => "%{hfld6}"
				"rule" => "%{hfld9}"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-mcafeereconnexmsg.json"
#			template_name => "mcafeereconnex_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
