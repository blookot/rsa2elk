# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "git"
			"[observer][name]" => "GIT-SCM Server"
			"[observer][type]" => "Content Management System"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %GIT-4: <hdate>.<htime>||<husername>||<hsaddr>||<messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%GIT\-4:[\s]+(?<message>(?<hdate>[^\.]*)\.(?<htime>[^\|]*)\|\|(?<husername>[^\|]*)\|\|(?<hsaddr>[^\|]*)\|\|(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %GIT-4: <hdate>.<htime> <hfld1> <messageid>||<!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%GIT\-4:[\s]+(?<message>(?<hdate>[^\.]*)\.(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\|]*)\|\|(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %GIT_LITE-4: <hdate>.<htime> <hfld1> <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%GIT_LITE\-4:[\s]+(?<message>(?<hdate>[^\.]*)\.(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %GIT_LITE-4: <hdate>.<htime> <hfld1> <messageid>,<!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%GIT_LITE\-4:[\s]+(?<message>(?<hdate>[^\.]*)\.(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^,]*),(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %GIT_LITE-4: <hdate>.<htime> <hfld1> <messageid>(<!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%GIT_LITE\-4:[\s]+(?<message>(?<hdate>[^\.]*)\.(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\(]*)\((?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9991
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <p_msgid>: <fld4> enterprise=<fld5> <!payload:fld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<p_msgid>[^:]*):[\s]+(?<message>(?<fld4>[^\s]*)[\s]+enterprise=(?<fld5>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9991"
			add_field => {
				"[rsa][header][id]" => "9991"
				"[rsa][message][id2]" => "GITHUB_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9992
	# line in RSA: <hfld1> <hfld2> <hfld3> <hostname> <p_msgid>: <p_month> <p_date> <p_time> <p_year> <hfld10> tid=<hfld11> <!payload:hfld10>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<p_msgid>[^:]*):[\s]+(?<p_month>[^\s]*)[\s]+(?<p_date>[^\s]*)[\s]+(?<p_time>[^\s]*)[\s]+(?<p_year>[^\s]*)[\s]+(?<message>(?<hfld10>[^\s]*)[\s]+tid=(?<hfld11>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9992"
			add_field => {
				"[rsa][header][id]" => "9992"
				"[rsa][message][id2]" => "GITHUB_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9993
	# line in RSA: <hfld1> <hfld2> <hfld3> <hostname> <p_msgid>[<process_id>]: <hfld4> method=<web_method> <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<p_msgid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+method=(?<web_method>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9993"
			add_field => {
				"[rsa][header][id]" => "9993"
				"[rsa][message][id2]" => "GITHUB_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9994
	# line in RSA: <hfld1> <hfld2> <hfld3> <hostname> <p_msgid>: <hfld4>" <hfld5> method="<hfld6>" <!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<p_msgid>[^:]*):[\s]+(?<hfld4>[^\"]*)\"[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+method=\"(?<hfld6>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-9994"
			add_field => {
				"[rsa][header][id]" => "9994"
				"[rsa][message][id2]" => "GITHUB_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hdate> <htime> <hostname> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hdate> <htime> <hostname> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-gitmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "git-receive-pack" {
		# MESSAGE git-receive-pack:01
		# line in RSA: <fld6>.<fld7>||<username>||<saddr>||<action> <directory>||<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld6}.%{fld7}||%{username}||%{saddr}||%{action} %{directory}||%{fld12}" }
				id => "message-git-receive-pack:01"
				add_field => {
					"[event][id]" => "git-receive-pack:01"
					"[rsa][message][id1]" => "git-receive-pack:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld6} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE git-receive-pack
		# line in RSA: <fld6>.<fld7>||<username>||<saddr>||<action> <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld6}.%{fld7}||%{username}||%{saddr}||%{action} %{directory}" }
				id => "message-git-receive-pack"
				add_field => {
					"[event][id]" => "git-receive-pack"
					"[rsa][message][id1]" => "git-receive-pack"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld6} %{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: <fld6>.<fld7>||<username>||<saddr>||<action> <directory>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{fld6}.%{fld7}||%{username}||%{saddr}||%{action} %{directory}" }
			id => "msgParserId1"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld6} %{fld7}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ssh" {
		# MESSAGE ssh
		# line in RSA: <fld1> <fld2> ssh ARGV=<username>||SOC=<action> '<fld4>'||FROM=<saddr>||access(<directory>,<fld5>,<fld6>,<fld7>),<fld8>||trigger,<fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} ssh ARGV=%{username}||SOC=%{action} '%{fld4}'||FROM=%{saddr}||access(%{directory},%{fld5},%{fld6},%{fld7}),%{fld8}||trigger,%{fld9}" }
				id => "message-ssh"
				add_field => {
					"[event][id]" => "ssh"
					"[rsa][message][id1]" => "ssh"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ssh:01
		# line in RSA: <fld1> <fld2> ssh ARGV=<username>||SOC=<action> '<fld4>'||FROM=<saddr>||access(<directory>,<fld5>,<fld6>,<fld7>),<fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} ssh ARGV=%{username}||SOC=%{action} '%{fld4}'||FROM=%{saddr}||access(%{directory},%{fld5},%{fld6},%{fld7}),%{fld8}" }
				id => "message-ssh:01"
				add_field => {
					"[event][id]" => "ssh:01"
					"[rsa][message][id1]" => "ssh:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ssh:02
		# line in RSA: <fld1> <fld2> ssh ARGV=<username>||SOC=<action> '<fld4>'||FROM=<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} ssh ARGV=%{username}||SOC=%{action} '%{fld4}'||FROM=%{saddr}" }
				id => "message-ssh:02"
				add_field => {
					"[event][id]" => "ssh:02"
					"[rsa][message][id1]" => "ssh:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "pre_git" {
		# MESSAGE pre_git
		# line in RSA: <fld1> <fld2> <action> <fld3>||<fld4>||<fld5>||<fld6>||<fld7>||system,<fld8>||update,<fld9>,<username>,<info>||<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld3}||%{fld4}||%{fld5}||%{fld6}||%{fld7}||system,%{fld8}||update,%{fld9},%{username},%{info}||%{fld12}" }
				id => "message-pre_git"
				add_field => {
					"[event][id]" => "pre_git"
					"[rsa][message][id1]" => "pre_git"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE pre_git:01
		# line in RSA: <fld1> <fld2> <action> <fld3>||<fld4>||<fld5>||<fld6>||<fld7>||system,<fld8>||update,<fld9>,<username>,<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld3}||%{fld4}||%{fld5}||%{fld6}||%{fld7}||system,%{fld8}||update,%{fld9},%{username},%{info}" }
				id => "message-pre_git:01"
				add_field => {
					"[event][id]" => "pre_git:01"
					"[rsa][message][id1]" => "pre_git:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE pre_git:02
		# line in RSA: <fld1> <fld2> <action> <fld3>||<fld4>||<fld5>||<fld6>||<fld7>||system,<fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld3}||%{fld4}||%{fld5}||%{fld6}||%{fld7}||system,%{fld8}" }
				id => "message-pre_git:02"
				add_field => {
					"[event][id]" => "pre_git:02"
					"[rsa][message][id1]" => "pre_git:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: <fld1> <fld2> <action> <fld3>||<fld4>||<fld5>||access(<directory>,<username>,<info>),<fld8>||trigger,<fld9>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld3}||%{fld4}||%{fld5}||access(%{directory},%{username},%{info}),%{fld8}||trigger,%{fld9}" }
			id => "msgParserId8"
			add_field => {
				"ec_activity" => "Create"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "die" {
		# MESSAGE die
		# line in RSA: <fld1> <fld2> <action> <fld16> <info> <directory> <username> DENIED by fallthru||update,<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld16} %{info} %{directory} %{username} DENIED by fallthru||update,%{fld13}" }
				id => "message-die"
				add_field => {
				"ec_outcome" => "Failure"
				"result" => "DENIED by fallthru"
					"[event][id]" => "die"
					"[rsa][message][id1]" => "die"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE die:01
		# line in RSA: <fld1> <fld2> <action> <fld16> <info> <directory> <username> DENIED by fallthru
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld16} %{info} %{directory} %{username} DENIED by fallthru" }
				id => "message-die:01"
				add_field => {
				"ec_outcome" => "Failure"
				"result" => "DENIED by fallthru"
					"[event][id]" => "die:01"
					"[rsa][message][id1]" => "die:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE die:02
		# line in RSA: <fld1> <fld2> die <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} die %{fld3}" }
				id => "message-die:02"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "die:02"
					"[rsa][message][id1]" => "die:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "update" {
		# MESSAGE update
		# line in RSA: <fld1> <fld2> <action> <fld3>||<username>||<fld16>||<fld6>||<fld7>||<fld8>||update,<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld3}||%{username}||%{fld16}||%{fld6}||%{fld7}||%{fld8}||update,%{info}" }
				id => "message-update"
				add_field => {
				"ec_activity" => "Modify"
					"[event][id]" => "update"
					"[rsa][message][id1]" => "update"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE update:01
		# line in RSA: <fld1> <fld2> <action> <fld3>||<username>||<fld16>||<fld6>||<fld7>||<fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{action} %{fld3}||%{username}||%{fld16}||%{fld6}||%{fld7}||%{fld8}" }
				id => "message-update:01"
				add_field => {
				"ec_activity" => "Modify"
					"[event][id]" => "update:01"
					"[rsa][message][id1]" => "update:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: <fld1> <fld2> access(<directory>,<username>,<fld16>,<fld7>),<fld8>||trigger,<fld4>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} access(%{directory},%{username},%{fld16},%{fld7}),%{fld8}||trigger,%{fld4}" }
			id => "msgParserId14"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: <fld1> <fld2> trigger,<fld3>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} trigger,%{fld3}" }
			id => "msgParserId15"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "github_production" {
		# MESSAGE github_production:01
		# line in RSA: <process>: <fld1> [<fld4>]: {{:queue=>"<action>", :class=>"<fld2>"} <duration>ms
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+\[(?<fld4>[^\]]*)\]:[\s]+\{:queue=>\"(?<action>[^\"]*)\",[\s]+:class=>\"(?<fld2>[^\"]*)\"\}[\s]+(?<duration>[^m]*)ms$" }
				id => "message-github_production:01"
				add_field => {
					"[event][id]" => "github_production:01"
					"[rsa][message][id1]" => "github_production:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:02
		# line in RSA: <process>: <web_method> "<url>" for <daddr> at <fld1> <fld2> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{web_method} \"%{url}\" for %{daddr} at %{fld1} %{fld2} %{fld3}" }
				id => "message-github_production:02"
				add_field => {
					"[event][id]" => "github_production:02"
					"[rsa][message][id1]" => "github_production:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE github_production:03
		# line in RSA: <process>: {{"user_id"=>"<username>", "repository"=>"<directory>", "id"=>"<id>", "tab"=>"<fld1>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+\{\"user_id\"=>\"(?<username>[^\"]*)\",[\s]+\"repository\"=>\"(?<directory>[^\"]*)\",[\s]+\"id\"=>\"(?<id>[^\"]*)\",[\s]+\"tab\"=>\"(?<fld1>[^\"]*)\"\}[\s]+$" }
				id => "message-github_production:03"
				add_field => {
					"[event][id]" => "github_production:03"
					"[rsa][message][id1]" => "github_production:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:04
		# line in RSA: <process>: {{"user_id"=>"<username>", "repository"=>"<fld29>", "id"=>"<id>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+\{\"user_id\"=>\"(?<username>[^\"]*)\",[\s]+\"repository\"=>\"(?<fld29>[^\"]*)\",[\s]+\"id\"=>\"(?<id>[^\"]*)\"\}[\s]+$" }
				id => "message-github_production:04"
				add_field => {
					"[event][id]" => "github_production:04"
					"[rsa][message][id1]" => "github_production:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:05
		# line in RSA: <process>: {{"user_id"=>"<username>", "repository"=>"<fld29>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+\{\"user_id\"=>\"(?<username>[^\"]*)\",[\s]+\"repository\"=>\"(?<fld29>[^\"]*)\"\}[\s]+$" }
				id => "message-github_production:05"
				add_field => {
					"[event][id]" => "github_production:05"
					"[rsa][message][id1]" => "github_production:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:06
		# line in RSA: <process>: {{"<fld2>", "user_id"=>"<username>", "repository"=>"<fld29>", "id"=>"<id>", "tab"=>"<fld1>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+\{\"(?<fld2>[^\"]*)\",[\s]+\"user_id\"=>\"(?<username>[^\"]*)\",[\s]+\"repository\"=>\"(?<fld29>[^\"]*)\",[\s]+\"id\"=>\"(?<id>[^\"]*)\",[\s]+\"tab\"=>\"(?<fld1>[^\"]*)\"\}[\s]+$" }
				id => "message-github_production:06"
				add_field => {
					"[event][id]" => "github_production:06"
					"[rsa][message][id1]" => "github_production:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:07
		# line in RSA: <process>: {{"<fld2>", "user_id"=>"<fld3>", "repository"=>"<fld29>", "id"=>"<id>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+\{\"(?<fld2>[^\"]*)\",[\s]+\"user_id\"=>\"(?<fld3>[^\"]*)\",[\s]+\"repository\"=>\"(?<fld29>[^\"]*)\",[\s]+\"id\"=>\"(?<id>[^\"]*)\"\}[\s]+$" }
				id => "message-github_production:07"
				add_field => {
					"[event][id]" => "github_production:07"
					"[rsa][message][id1]" => "github_production:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:08
		# line in RSA: <process>: {{"<fld2>", "user_id"=>"<fld3>", "repository"=>"<fld29>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+\{\"(?<fld2>[^\"]*)\",[\s]+\"user_id\"=>\"(?<fld3>[^\"]*)\",[\s]+\"repository\"=>\"(?<fld29>[^\"]*)\"\}[\s]+$" }
				id => "message-github_production:08"
				add_field => {
					"[event][id]" => "github_production:08"
					"[rsa][message][id1]" => "github_production:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_production:9
		# line in RSA: <process>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-github_production:9"
				add_field => {
					"[event][id]" => "github_production:9"
					"[rsa][message][id1]" => "github_production:9"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "slumlord_unicorn" {
		# MESSAGE slumlord_unicorn:01
		# line in RSA: <process>: - - [<fld1> +<fld2>] - "<web_method> <url>" <resultcode> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: - - [%{fld1} +%{fld2}] - \"%{web_method} %{url}\" %{resultcode} %{fld3}" }
				id => "message-slumlord_unicorn:01"
				add_field => {
					"[event][id]" => "slumlord_unicorn:01"
					"[rsa][message][id1]" => "slumlord_unicorn:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE slumlord_unicorn:02
		# line in RSA: <process>: [<fld1>]  <severity> <fld2> : <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: [%{fld1}]  %{severity} %{fld2} : %{fld3}" }
				id => "message-slumlord_unicorn:02"
				add_field => {
					"[event][id]" => "slumlord_unicorn:02"
					"[rsa][message][id1]" => "slumlord_unicorn:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: <process>: <fld1>
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{process}: %{fld1}" }
			id => "msgParserId24"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA: <process>: - - [<fld7> +<fld1>] "<web_method> <url>" <resultcode> <fld2> "<fld3>" "<fld4>" "<fld5>" <duration> <fld6>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{process}: - - [%{fld7} +%{fld1}] \"%{web_method} %{url}\" %{resultcode} %{fld2} \"%{fld3}\" \"%{fld4}\" \"%{fld5}\" %{duration} %{fld6}" }
			id => "msgParserId27"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld7}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "github_resque" {
		# MESSAGE github_resque:01
		# line in RSA: <process>[<fld1>]: <fld2>] <severity> Resqued::<fld2> -- { (<info>) I exited: pid <process_id> exit <fld4>| <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+(?<fld2>[^\]]*)\][\s]+(?<severity>[^\s]*)[\s]+Resqued::(?<fld2>[^\s]*)[\s]+\-\-[\s]+([\s]*\((?<info>[^\)]*)\)[\s]+I[\s]+exited:[\s]+pid[\s]+(?<process_id>[^\s]*)[\s]+exit[\s]+(?<fld4>.*)|[\s]*(?<info>.*))$" }
				id => "message-github_resque:01"
				add_field => {
					"[event][id]" => "github_resque:01"
					"[rsa][message][id1]" => "github_resque:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_resque:02
		# line in RSA: <process>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-github_resque:02"
				add_field => {
					"[event][id]" => "github_resque:02"
					"[rsa][message][id1]" => "github_resque:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: <process>: "<obj_type>","sha":"<fld2>","host":"<hostname>","class":"<fld3>","message":"<event_description>","backtrace":"<info>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{process}: \"%{obj_type}\",\"sha\":\"%{fld2}\",\"host\":\"%{hostname}\",\"class\":\"%{fld3}\",\"message\":\"%{event_description}\",\"backtrace\":\"%{info}" }
			id => "msgParserId29"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "haproxy" {
		# MESSAGE haproxy:01
		# line in RSA: <process>[<process_id>]: <shost>:<sport> [<fld22>.<fld1>] https_protocol~ <fld2>/<fld3> <fld4> <resultcode> <fld5> - - ---- <fld6> <fld7> {{<hostname>:<network_port>||<user_agent>} "<web_method> <url>" 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<shost>[^:]*):(?<sport>[^\s]*)[\s]+\[(?<fld22>[^\.]*)\.(?<fld1>[^\]]*)\][\s]+https_protocol~[\s]+(?<fld2>[^/]*)/(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+\-[\s]+\-[\s]+\-\-\-\-[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+\{(?<hostname>[^:]*):(?<network_port>[^\|]*)\|\|(?<user_agent>[^\}]*)\}[\s]+\"(?<web_method>[^\s]*)[\s]+(?<url>[^\"]*)\"[\s]+$" }
				id => "message-haproxy:01"
				add_field => {
					"[event][id]" => "haproxy:01"
					"[rsa][message][id1]" => "haproxy:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE haproxy:02
		# line in RSA: <process>[<process_id>]: <shost>:<sport> [<fld22>.<fld1>] https_protocol~ <fld2>/<fld3> <fld4> <resultcode> <fld5> - - ---- <fld6> <fld7> {{<hostname>||<user_agent>} "<web_method> <url>" 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<shost>[^:]*):(?<sport>[^\s]*)[\s]+\[(?<fld22>[^\.]*)\.(?<fld1>[^\]]*)\][\s]+https_protocol~[\s]+(?<fld2>[^/]*)/(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+\-[\s]+\-[\s]+\-\-\-\-[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+\{(?<hostname>[^\|]*)\|\|(?<user_agent>[^\}]*)\}[\s]+\"(?<web_method>[^\s]*)[\s]+(?<url>[^\"]*)\"[\s]+$" }
				id => "message-haproxy:02"
				add_field => {
					"[event][id]" => "haproxy:02"
					"[rsa][message][id1]" => "haproxy:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: <process>: <fld1> <fld2> [<fld5> +<fld3>] "<web_method> <url>" <resultcode> <bytes> "<web_referer>" "<user_agent>" "<saddr>" <duration> <fld4>  
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{process}: %{fld1} %{fld2} [%{fld5} +%{fld3}] \"%{web_method} %{url}\" %{resultcode} %{bytes} \"%{web_referer}\" \"%{user_agent}\" \"%{saddr}\" %{duration} %{fld4}" }
			id => "msgParserId32"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "enterprise_manage_unicorn" {
		# MESSAGE enterprise_manage_unicorn:01
		# line in RSA: <process>: [<fld4>.<fld1> #<fld2>]  <severity> -- : <fld3> - - [<fld22>] "<web_method> <url>" <resultcode> <fld5> <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: [%{fld4}.%{fld1} #%{fld2}]  %{severity} -- : %{fld3} - - [%{fld22}] \"%{web_method} %{url}\" %{resultcode} %{fld5} %{fld6}" }
				id => "message-enterprise_manage_unicorn:01"
				add_field => {
					"[event][id]" => "enterprise_manage_unicorn:01"
					"[rsa][message][id1]" => "enterprise_manage_unicorn:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy H:m:s" ] }
			}
		}
		# MESSAGE enterprise_manage_unicorn:02
		# line in RSA: <process>: <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-enterprise_manage_unicorn:02"
				add_field => {
					"[event][id]" => "enterprise_manage_unicorn:02"
					"[rsa][message][id1]" => "enterprise_manage_unicorn:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "hookshot_resque" {
		# MESSAGE hookshot_resque:01
		# line in RSA: <process>: :<fld1> {{"url"=>"<url>", "content_type"=>"<content_type>"} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+:(?<fld1>[^\s]*)[\s]+\{\"url\"=>\"(?<url>[^\"]*)\",[\s]+\"content_type\"=>\"(?<content_type>[^\"]*)\"\}[\s]+$" }
				id => "message-hookshot_resque:01"
				add_field => {
					"[event][id]" => "hookshot_resque:01"
					"[rsa][message][id1]" => "hookshot_resque:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE hookshot_resque:02
		# line in RSA: <process>: <fld1> processed in <duration>ms, <event_state> for <fld2>ms: <url> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1} processed in %{duration}ms, %{event_state} for %{fld2}ms: %{url}" }
				id => "message-hookshot_resque:02"
				add_field => {
					"[event][id]" => "hookshot_resque:02"
					"[rsa][message][id1]" => "hookshot_resque:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE hookshot_resque:03
		# line in RSA: <process>: <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-hookshot_resque:03"
				add_field => {
					"[event][id]" => "hookshot_resque:03"
					"[rsa][message][id1]" => "hookshot_resque:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ghe-systemd-wrapper" {
		# MESSAGE ghe-systemd-wrapper:01
		# line in RSA: <process>[<process_id>]: {<fld1>: <event_state> <filename>| <event_state> <fld1> <fld2> /<filename>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+((?<fld1>[^:]*):[\s]+(?<event_state>[^\s]*)[\s]+(?<filename>[^\s]*)|[\s]*(?<event_state>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+/(?<filename>[^\s]*))[\s]+$" }
				id => "message-ghe-systemd-wrapper:01"
				add_field => {
					"[event][id]" => "ghe-systemd-wrapper:01"
					"[rsa][message][id1]" => "ghe-systemd-wrapper:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ghe-systemd-wrapper:02
		# line in RSA: {<event_state> <fld2> from <filename> | <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<event_state>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+from[\s]+(?<filename>[^\s]*)[\s]+|[\s]*(?<info>.*))$" }
				id => "message-ghe-systemd-wrapper:02"
				add_field => {
					"[event][id]" => "ghe-systemd-wrapper:02"
					"[rsa][message][id1]" => "ghe-systemd-wrapper:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "hookshot_unicorn" {
		# MESSAGE hookshot_unicorn:01
		# line in RSA: <process>: - - [<fld22> +<fld1>] "<web_method> <url>" <resultcode> <fld2> <duration>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: - - [%{fld22} +%{fld1}] \"%{web_method} %{url}\" %{resultcode} %{fld2} %{duration}" }
				id => "message-hookshot_unicorn:01"
				add_field => {
					"[event][id]" => "hookshot_unicorn:01"
					"[rsa][message][id1]" => "hookshot_unicorn:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE hookshot_unicorn:02
		# line in RSA: <process>: <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-hookshot_unicorn:02"
				add_field => {
					"[event][id]" => "hookshot_unicorn:02"
					"[rsa][message][id1]" => "hookshot_unicorn:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: <process> <fld1>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{process} %{fld1}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: <process>[<fld2>] [<severity>] <fld1>
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "%{process}[%{fld2}] [%{severity}] %{fld1}" }
			id => "msgParserId41"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gitmon" {
		# MESSAGE gitmon:01
		# line in RSA: <process>: <fld2>-{{<severity>}-<fld3>: repo=<directory> program=<fld5> weights={{"pack-objects"=><fld6>, "upload-pack"=><fld7>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+(?<fld2>[^\-]*)\-\{(?<severity>[^\}]*)\}\-(?<fld3>[^:]*):[\s]+repo=(?<directory>[^\s]*)[\s]+program=(?<fld5>[^\s]*)[\s]+weights=\{\"pack\-objects\"=>(?<fld6>[^,]*),[\s]+\"upload\-pack\"=>(?<fld7>[^\}]*)\}$" }
				id => "message-gitmon:01"
				add_field => {
					"[event][id]" => "gitmon:01"
					"[rsa][message][id1]" => "gitmon:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE gitmon:02
		# line in RSA: <process>: <fld2>-{{<severity>}-<event_state> <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^:]*):[\s]+(?<fld2>[^\-]*)\-\{(?<severity>[^\}]*)\}\-(?<event_state>[^\s]*)[\s]+(?<filename>.*)$" }
				id => "message-gitmon:02"
				add_field => {
					"[event][id]" => "gitmon:02"
					"[rsa][message][id1]" => "gitmon:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "github_mysql" {
		# MESSAGE github_mysql:01
		# line in RSA: <process>: <fld1> <fld2> [<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1} %{fld2} [%{severity}] %{info}" }
				id => "message-github_mysql:01"
				add_field => {
					"[event][id]" => "github_mysql:01"
					"[rsa][message][id1]" => "github_mysql:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE github_mysql:02
		# line in RSA: <process>: <fld1> <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1} %{fld1}" }
				id => "message-github_mysql:02"
				add_field => {
					"[event][id]" => "github_mysql:02"
					"[rsa][message][id1]" => "github_mysql:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: {<process>[<process_id>]|<process>}: <fld1>
	else if [logstash][msgparser][id] == "msgParserId46" {
		grok {
			match => { "message" => "^((?<process>[^\[]*)\[(?<process_id>[^\]]*)\]|(?<process>[^:]*)):[\s]+(?<fld1>.*)$" }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: <process>[<process_id>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "%{process}[%{process_id}]: %{fld1}" }
			id => "msgParserId47"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: <process>[<process_id>]: <event_description>; version=<version>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{process}[%{process_id}]: %{event_description}; version=%{version}" }
			id => "msgParserId48"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: <process>: <fld2> : TTY=<interface> ; PWD=<directory> ; USER=<username> ; COMMAND=<cmd> 
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{process}: %{fld2} : TTY=%{interface} ; PWD=%{directory} ; USER=%{username} ; COMMAND=%{cmd}" }
			id => "msgParserId49"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: <fld1>: <process>[<process_id>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "%{fld1}: %{process}[%{process_id}]: %{fld1}" }
			id => "msgParserId50"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "render_unicorn_error" {
		# MESSAGE render_unicorn_error:01
		# line in RSA: <process>: [<fld1>]  <severity> <fld2> : <event_state> socket=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: [%{fld1}]  %{severity} %{fld2} : %{event_state} socket=%{fld3}" }
				id => "message-render_unicorn_error:01"
				add_field => {
					"[event][id]" => "render_unicorn_error:01"
					"[rsa][message][id1]" => "render_unicorn_error:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE render_unicorn_error:02
		# line in RSA: <process>: [<fld1>]  <severity> <fld2> : <event_state> addr=<fld4> fd=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: [%{fld1}]  %{severity} %{fld2} : %{event_state} addr=%{fld4} fd=%{fld3}" }
				id => "message-render_unicorn_error:02"
				add_field => {
					"[event][id]" => "render_unicorn_error:02"
					"[rsa][message][id1]" => "render_unicorn_error:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE render_unicorn_error:03
		# line in RSA: <process>: <fld1>: <severity> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}: %{severity} %{info}" }
				id => "message-render_unicorn_error:03"
				add_field => {
					"[event][id]" => "render_unicorn_error:03"
					"[rsa][message][id1]" => "render_unicorn_error:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "render_resque" {
		# MESSAGE render_resque:01
		# line in RSA: <process> [<fld1>]  <severity> Resqued::{Listener|Worker} -- {<info> pid <process_id> exit <fld2>| (<fld3>) <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<severity>[^\s]*)[\s]+Resqued::(Listener|Worker)[\s]+\-\-[\s]+((?<info>[^\s]*)[\s]+pid[\s]+(?<process_id>[^\s]*)[\s]+exit[\s]+(?<fld2>.*)|[\s]*\((?<fld3>[^\)]*)\)[\s]+(?<info>.*))$" }
				id => "message-render_resque:01"
				add_field => {
					"[event][id]" => "render_resque:01"
					"[rsa][message][id1]" => "render_resque:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE render_resque:02
		# line in RSA: <process>: <fld2>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld2}: %{fld1}" }
				id => "message-render_resque:02"
				add_field => {
					"[event][id]" => "render_resque:02"
					"[rsa][message][id1]" => "render_resque:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pages_access" {
		# MESSAGE pages_access:01
		# line in RSA: <process>: - - [<fld1> +<fld2>] "<web_method> <web_referer>" <resultcode> <fld3> "<url>" "<user_agent>" "<saddr>" <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: - - [%{fld1} +%{fld2}] \"%{web_method} %{web_referer}\" %{resultcode} %{fld3} \"%{url}\" \"%{user_agent}\" \"%{saddr}\" %{fld4}" }
				id => "message-pages_access:01"
				add_field => {
					"[event][id]" => "pages_access:01"
					"[rsa][message][id1]" => "pages_access:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pages_access:02
		# line in RSA: <process>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-pages_access:02"
				add_field => {
					"[event][id]" => "pages_access:02"
					"[rsa][message][id1]" => "pages_access:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "enterprise_manage_error" {
		# MESSAGE enterprise_manage_error:01
		# line in RSA: <process>: <fld1> [<severity>] <fld2>: <fld3> to <fld4> <result> while connecting to upstream, client: <saddr>, server: <daddr>, request: "<web_method> <web_referer>", upstream: "<url>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1} [%{severity}] %{fld2}: %{fld3} to %{fld4} %{result} while connecting to upstream, client: %{saddr}, server: %{daddr}, request: \"%{web_method} %{web_referer}\", upstream: \"%{url}\"" }
				id => "message-enterprise_manage_error:01"
				add_field => {
					"[event][id]" => "enterprise_manage_error:01"
					"[rsa][message][id1]" => "enterprise_manage_error:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE enterprise_manage_error:02
		# line in RSA: <process>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: %{fld1}" }
				id => "message-enterprise_manage_error:02"
				add_field => {
					"[event][id]" => "enterprise_manage_error:02"
					"[rsa][message][id1]" => "enterprise_manage_error:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "GITHUB_GENERIC" {
		# MESSAGE GITHUB_GENERIC
		# line in RSA: accept=<fld1> act_id=<fld2> action=<action> app=<application> archives_freed=<fld3> archives_total=<fld4> at=<event_state> auth_fingerprint=<fld5> auth_tries=<fld6> auth=<fld7> banner=<fld8> base_name=<fld9> bytes_freed=<fld10> bytes_total=<bytes> cache_hits=<fld11> cache_miss_time=<fld12> cache_misses=<fld13> cache_set_time=<fld14> cactive=<fld15> cb=<fld16> charset=<fld17> cid=<fld18> cipher=<fld19> client_recv=<fld20> client_sent=<fld21> cmd=<cmd> code=<resultcode> conn_progress=<fld22> content_length=<fld23> content_type=<content_type> controller=<fld24> ct=<fld25> current_on_behalf_of=<fld26> current_tenant_id=<fld27> current_user=<fld28> dn=<dn> dstp=<dport> duration_ms=<duration> elapsed=<fld29> entries_freed=<fld30> entries_total=<fld31> enterprise=<fld32> env=<fld33> event=<fld34> expired_via_get=<fld35> expired_via_get=<fld36> expired_via_stream_failover=<fld37> failure_reason=<result> failure_type=<fld38> fn=<fld39> fp=<fld40> from=<application> fs_host=<shost> fs_recv=<rbytes> fs_sent=<sbytes> git_ref=<fld41> guid=<fld42> hashed_token=<fld43> hits_200=<fld44> hits_400=<fld45> hits_404=<fld46> hits_ok=<fld47> hits_unknown=<fld48> hmac=<fld49> host=<hostname> hooks_count=<dclass_counter1> http_url=<url> imode=<fld50> installation_id=<fld51> integration_id=<fld52> ip=<hostip> ipher=<fld53> kex=<fld54> key=<fld55> keytype=<fld56> language=<fld57> login=<username> log_level=<severity> member=<fld58> method=<fld59> msg=<event_description> message=<event_type> network=<network_service> now=<fld60> nru=<fld61> ns=<fld62> oauth_access_id=<fld63> oauth_application_id=<fld64> oauth_scopes=<fld65> offset=<fld66> org=<user_org> oauth_party=<fld68> owner=<fld69> parent=<fld70> path_info=<directory> path=<directory> pid=<process_id> probe_fail=<fld71> probe_ok=<fld73> proto=<protocol> protocol=<protocol> push_tries_remaining=<fld74> query_string=<fld75> raw_login=<fld76> refs=<fld78> referer=<web_referer> relative_path=<fld77> remote_address=<saddr> remote_addr=<saddr> repo_public=<fld80> repo=<directory> repo_route=<fld81> repository=<directory> repo_visibility=<fld82> request_category=<fld83> request_id=<fld84> request_method=<web_method> request_host=<dhost> route=<fld86> sb_rs=<fld87> server_id=<fld88> short_user_agent=<fld89> slices=<fld90> Slices=<fld91> srcp=<sport> ssh_cmd=<fld92> ssh_user=<fld93> status=<resultcode> svn_prefix=<fld94> svn_resource=<fld95> time_zone=<fld96> tid=<fld97> two_factor_type=<fld98> transaction_id=<fld99> uri=<fld100> url=<url> user_agent=<user_agent> user_id=<id> user=<username> user_session_id=<sessionid> version=<version> via=<fld101> worker_request_count=<fld102> x_requested_with=<fld103> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "accept=%{fld1} act_id=%{fld2} action=%{action} app=%{application} archives_freed=%{fld3} archives_total=%{fld4} at=%{event_state} auth_fingerprint=%{fld5} auth_tries=%{fld6} auth=%{fld7} banner=%{fld8} base_name=%{fld9} bytes_freed=%{fld10} bytes_total=%{bytes} cache_hits=%{fld11} cache_miss_time=%{fld12} cache_misses=%{fld13} cache_set_time=%{fld14} cactive=%{fld15} cb=%{fld16} charset=%{fld17} cid=%{fld18} cipher=%{fld19} client_recv=%{fld20} client_sent=%{fld21} cmd=%{cmd} code=%{resultcode} conn_progress=%{fld22} content_length=%{fld23} content_type=%{content_type} controller=%{fld24} ct=%{fld25} current_on_behalf_of=%{fld26} current_tenant_id=%{fld27} current_user=%{fld28} dn=%{dn} dstp=%{dport} duration_ms=%{duration} elapsed=%{fld29} entries_freed=%{fld30} entries_total=%{fld31} enterprise=%{fld32} env=%{fld33} event=%{fld34} expired_via_get=%{fld35} expired_via_get=%{fld36} expired_via_stream_failover=%{fld37} failure_reason=%{result} failure_type=%{fld38} fn=%{fld39} fp=%{fld40} from=%{application} fs_host=%{shost} fs_recv=%{rbytes} fs_sent=%{sbytes} git_ref=%{fld41} guid=%{fld42} hashed_token=%{fld43} hits_200=%{fld44} hits_400=%{fld45} hits_404=%{fld46} hits_ok=%{fld47} hits_unknown=%{fld48} hmac=%{fld49} host=%{hostname} hooks_count=%{dclass_counter1} http_url=%{url} imode=%{fld50} installation_id=%{fld51} integration_id=%{fld52} ip=%{hostip} ipher=%{fld53} kex=%{fld54} key=%{fld55} keytype=%{fld56} language=%{fld57} login=%{username} log_level=%{severity} member=%{fld58} method=%{fld59} msg=%{event_description} message=%{event_type} network=%{network_service} now=%{fld60} nru=%{fld61} ns=%{fld62} oauth_access_id=%{fld63} oauth_application_id=%{fld64} oauth_scopes=%{fld65} offset=%{fld66} org=%{user_org} oauth_party=%{fld68} owner=%{fld69} parent=%{fld70} path_info=%{directory} path=%{directory} pid=%{process_id} probe_fail=%{fld71} probe_ok=%{fld73} proto=%{protocol} protocol=%{protocol} push_tries_remaining=%{fld74} query_string=%{fld75} raw_login=%{fld76} refs=%{fld78} referer=%{web_referer} relative_path=%{fld77} remote_address=%{saddr} remote_addr=%{saddr} repo_public=%{fld80} repo=%{directory} repo_route=%{fld81} repository=%{directory} repo_visibility=%{fld82} request_category=%{fld83} request_id=%{fld84} request_method=%{web_method} request_host=%{dhost} route=%{fld86} sb_rs=%{fld87} server_id=%{fld88} short_user_agent=%{fld89} slices=%{fld90} Slices=%{fld91} srcp=%{sport} ssh_cmd=%{fld92} ssh_user=%{fld93} status=%{resultcode} svn_prefix=%{fld94} svn_resource=%{fld95} time_zone=%{fld96} tid=%{fld97} two_factor_type=%{fld98} transaction_id=%{fld99} uri=%{fld100} url=%{url} user_agent=%{user_agent} user_id=%{id} user=%{username} user_session_id=%{sessionid} version=%{version} via=%{fld101} worker_request_count=%{fld102} x_requested_with=%{fld103}" }
				id => "message-GITHUB_GENERIC"
				add_field => {
				"vid" => "%{p_msgid}"
					"[event][id]" => "%{p_msgid}"
					"[rsa][message][id1]" => "GITHUB_GENERIC"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{p_month} %{p_date} %{p_time} %{p_year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE GITHUB_GENERIC:01
		# line in RSA: <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-GITHUB_GENERIC:01"
				add_field => {
				"vid" => "%{p_msgid}"
					"[event][id]" => "%{p_msgid}"
					"[rsa][message][id1]" => "GITHUB_GENERIC:01"
					"[event][categoryid]" => "1901000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-gitmsg.json"
#			template_name => "git_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
