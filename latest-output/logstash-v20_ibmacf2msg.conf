# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ibmacf2"
			"[observer][name]" => "CA ACF2"
			"[observer][type]" => "Mainframe"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %ACF2TVM-4: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%ACF2TVM-4: %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "ACF2_TVM"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %ACF2-4-ACF2-<messageid>: ACF2-<data>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%ACF2-4-ACF2-%{messageid}: ACF2-%{data}|%{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %ACF2-4-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%ACF2-4-%{messageid}: %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: ACF2-<messageid>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "ACF2-%{messageid}|%{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ibmacf2msg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <action> | <result> | <fld1> | <uid> | <username> | <hostname> | <fld35> | <fld36> | <fld37> | <fld38> | <fld39> | <fld40> | <fld41> | <fld42> | <resource> | <fld2> | <fld43> | <fld3>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{action} | %{result} | %{fld1} | %{uid} | %{username} | %{hostname} | %{fld35} | %{fld36} | %{fld37} | %{fld38} | %{fld39} | %{fld40} | %{fld41} | %{fld42} | %{resource} | %{fld2} | %{fld43} | %{fld3}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: <action> | <result> | <fld1> | <uid> | <username> | <hostname> | <fld35> | <fld36> | <fld37> | <fld38> | <fld39> | <fld40> | <fld41> | <fld42> | <resource> | <fld2> | <fld43> | <fld3>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{action} | %{result} | %{fld1} | %{uid} | %{username} | %{hostname} | %{fld35} | %{fld36} | %{fld37} | %{fld38} | %{fld39} | %{fld40} | %{fld41} | %{fld42} | %{resource} | %{fld2} | %{fld43} | %{fld3}" }
			id => "msgParserId1"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld9>|<fld10>|<fld27>|<fld1>|<fld4>|<fld5>|<fld12>|<resource>|<fld48>|<fld3>|<fld49>|<action>|<fld13>|<fld19>|<fld51>|<fld46>|<fld28>|<fld6>|<fld29>|<fld30>|<fld11>|<fld45>|<info>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld9}|%{fld10}|%{fld27}|%{fld1}|%{fld4}|%{fld5}|%{fld12}|%{resource}|%{fld48}|%{fld3}|%{fld49}|%{action}|%{fld13}|%{fld19}|%{fld51}|%{fld46}|%{fld28}|%{fld6}|%{fld29}|%{fld30}|%{fld11}|%{fld45}|%{info}" }
			id => "msgParserId2"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<username>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld1>|<fld45>|<result>|<fld46>|<info>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{username}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld1}|%{fld45}|%{result}|%{fld46}|%{info}" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld1>|<info>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld1}|%{info}" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|" }
			id => "msgParserId5"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld53>|<fld52>|<fld4>|<fld54>|<fld27>|<fld28>|<fld29>|<fld30>|<fld55>|<fld31>|<fld32>|<fld33>|<fld34>|<fld56>|<username>|<info>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld53}|%{fld52}|%{fld4}|%{fld54}|%{fld27}|%{fld28}|%{fld29}|%{fld30}|%{fld55}|%{fld31}|%{fld32}|%{fld33}|%{fld34}|%{fld56}|%{username}|%{info}" }
			id => "msgParserId6"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld45>|<fld51>|<info>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld45}|%{fld51}|%{info}" }
			id => "msgParserId7"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld52>|<info>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld52}|%{info}" }
			id => "msgParserId8"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: F|<fld15>|<fld20>|<fld21>|<fld16>|<fld38>|<fld39>|<fld0>|<fld22>|<process>|<uid>|<group>|<category>|<fld2>|<hostname>|<fld>|<fld23>|<fld24>|<fld44>|<fld7>|<fld8>|<fld14>|<fld25>|<fld17>|<fld18>|<fld26>|<fld3>|<fld4>|<fld5>|<fld6>|<fld57>|<fld52>|<fld19>|<fld9>|<fld10>|<fld11>|<fld12>|<resource>|<username>|<fld13>|<info>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "F|%{fld15}|%{fld20}|%{fld21}|%{fld16}|%{fld38}|%{fld39}|%{fld0}|%{fld22}|%{process}|%{uid}|%{group}|%{category}|%{fld2}|%{hostname}|%{fld}|%{fld23}|%{fld24}|%{fld44}|%{fld7}|%{fld8}|%{fld14}|%{fld25}|%{fld17}|%{fld18}|%{fld26}|%{fld3}|%{fld4}|%{fld5}|%{fld6}|%{fld57}|%{fld52}|%{fld19}|%{fld9}|%{fld10}|%{fld11}|%{fld12}|%{resource}|%{username}|%{fld13}|%{info}" }
			id => "msgParserId9"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA: ENTRY_TYPE=<event_type>|RECORD_TYPE=<event_id>|ACFLTFLT=<fld15>|ACFLTTYP=<fld20>|ACFLTSEQ=<fld21>|ACFLTSYS=<fld16>|ACFLTTIM=<fld38>|ACFLTDAT=<fld39>|ACFLTFNC=<fld0>|ACFLTUIF=<fld22>|ACFLTMOD=<process>|ACFLTLID=<uid>|ACFLTUID=<group>|ACFLTSRC=<category>|ACFLTCPU=<fld2>|ACFLTSID=<hostname>|ACFLTIDE=<fld>|ACFLTIDL=<fld23>|ACFLTIDU=<fld24>|ACFLTJOB=<fld44>|ACFLTRTM=<fld7>|ACFLTRDT=<fld8>|ACFLTSUB=<action>|ACFLTTOD=<fld25>|ACFLTVER=<fld17>|ACFLTRSV=<fld18>|ACFLTUSR=<fld26>|ACDFJES=<fld9>|ACDFNAME=<fld10>|ACDFUPFX=<fld27>|ACDFFLG1=<fld1>|ACDFHNDX=<fld4>|ACDFADSN=<fld5>|ACDFAMEM=<fld12>|ACDFADS=<resource>|ACDFAVOL=<fld48>|ACDFADDN=<fld3>|ACDFMAJR=<fld49>|ACDFMINR=<action>|ACDFRMRC=<fld13>|ACDFPATH=<fld19>|ACDFRTYP=<fld51>|ACDFSTYP=<fld46>|ACDFTAPE=<fld28>|ACDFINST=<fld6>|ACDFRKEY=<fld29>|ACDFSTEP=<fld30>|ACDFLVOL=<fld11>|ACDFLPGM=<fld45>|ACDFLLIB=<fld76>|ACDFUCBN=<fld77>|ACDFPUCB=<fld78>|ACDFEXEC=<fld79>|ACDFOWNR=<fld80>|ACDFUCOM=<fld81>|ACDFODSN=<fld82>|ACDFOVOL=<fld83>|ACDFOCDE=<fld84>|ACDFSCTP=<fld85>|ACDFPID1=<fld86>|ACDFPAC1=<fld87>|ACDFMISC=<fld151>|ACDFLAPL=<fld88>|ACDFLPLB=<fld89>|ACDFLPTH=<fld90>|ACDFPPCD=<fld91>|ACDFLCD4=<fld92>|ACDFTFLG=<fld93>|ACDFMFLG=<fld94>|ACDFLCN1=<fld95>|ACDFLCN2=<fld96>|ACDFLCD2=<fld97>|ACDFLCD1=<fld98>|ACDFL0PL=<fld99>|ACDFMSC2=<fld100>|ACDFCNTL=<fld101>|ACDFLCD3=<fld102>|ACDFLRS1=<fld103>|ACDFNKTC=<fld104>|ACDFNKTB=<fld105>|ACEFLKEY=<fld52>|ACEFLFNC=<command>|ACEFLMDL=<fld106>|ACEFLANM=<change_new>|ACEFOAUM=<fld108>|ACEFOLEN=<fld109>|ACEFOFL1=<info>|ACEFOFL2=<info>|ACEFLOLV=<fld112>|ACEFNAUM=<fld113>|ACEFNLEN=<fld114>|ACEFNFL1=<info>|ACEFNFL2=<info>|ACEFLNEV=<fld117>|ACEFLRS1=<fld118>|ACLFLKEY=<fld53>|ACLFLFNC=<fld52>|ACLFLMDL=<fld4>|ACLFLANM=<fld54>|ACLFOAUM=<fld27>|ACLFOLEN=<fld28>|ACLFOFL1=<fld29>|ACLFOFL2=<fld30>|ACLFLOLV=<fld55>|ACLFNAUM=<fld31>|ACLFNLEN=<fld32>|ACLFNFL1=<fld33>|ACLFNFL2=<fld34>|ACLFLNEV=<fld56>|ACLFLRS1=<username>|ACJFLPGM=<application>|ACJFLPTH=<fld51>|ACJFLSID=<fld119>|ACJFLSTC=<fld120>|ACJFLAPF=<fld121>|ACJFLCTL=<fld122>|ACJFLFLG=<fld123>|ACPFLAPF=<fld1>|ACPFLPRG=<fld45>|ACPFLWHY=<result>|ACPFLLOG=<fld46>|ACPFLRSX=<fld124>|ACPFLAUT=<fld125>|ACPFLFLG=<fld126>|ACPFLSID=<fld127>|ACPFLCTL=<fld128>|ACPFSUBP=<fld129>|ACPFLRS1=<fld130>|ACRFLKEY=<fld1>|ACRFLRS1=<fld131>|ACVFRCRM=<fld3>|ACVFRCPR=<fld4>|ACVFRCIN=<fld5>|ACVFRCPO=<fld6>|ACVFRCFI=<fld57>|ACVFSERV=<fld52>|ACVFDISP=<fld19>|ACVFDSPM=<fld9>|ACVFKMOD=<fld10>|ACVFLTF=<fld11>|ACVFMODC=<fld12>|ACVFMODE=<resource>|ACVFLKEY=<username>|ACVFLRSC=<fld13>|ACVFLNAM=<fld132>|ACVFLLRT=<fld133>|ACVFRCID=<fld134>|ACVFEXNM=<fld135>|ACVFLTRT=<fld136>|ACVFLTRS=<fld137>|ACVFLSFN=<fld138>|ACVFLFLG=<fld139>|ACVFLMF=<fld140>|ACVFLRS1=<fld141>|ACVFDB2C=<fld142>|ACVFDB2N=<fld143>|ACVFNXTC=<fld144>|ACVFRSRC=<fld145>|ACVFNXTB=<fld146>|ACVFDB2P=<fld147>|ACVFDB2O=<fld148>|ACVFDB2S=<fld149>|reserve1=<fld150>|
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "ENTRY_TYPE=%{event_type}|RECORD_TYPE=%{event_id}|ACFLTFLT=%{fld15}|ACFLTTYP=%{fld20}|ACFLTSEQ=%{fld21}|ACFLTSYS=%{fld16}|ACFLTTIM=%{fld38}|ACFLTDAT=%{fld39}|ACFLTFNC=%{fld0}|ACFLTUIF=%{fld22}|ACFLTMOD=%{process}|ACFLTLID=%{uid}|ACFLTUID=%{group}|ACFLTSRC=%{category}|ACFLTCPU=%{fld2}|ACFLTSID=%{hostname}|ACFLTIDE=%{fld}|ACFLTIDL=%{fld23}|ACFLTIDU=%{fld24}|ACFLTJOB=%{fld44}|ACFLTRTM=%{fld7}|ACFLTRDT=%{fld8}|ACFLTSUB=%{action}|ACFLTTOD=%{fld25}|ACFLTVER=%{fld17}|ACFLTRSV=%{fld18}|ACFLTUSR=%{fld26}|ACDFJES=%{fld9}|ACDFNAME=%{fld10}|ACDFUPFX=%{fld27}|ACDFFLG1=%{fld1}|ACDFHNDX=%{fld4}|ACDFADSN=%{fld5}|ACDFAMEM=%{fld12}|ACDFADS=%{resource}|ACDFAVOL=%{fld48}|ACDFADDN=%{fld3}|ACDFMAJR=%{fld49}|ACDFMINR=%{action}|ACDFRMRC=%{fld13}|ACDFPATH=%{fld19}|ACDFRTYP=%{fld51}|ACDFSTYP=%{fld46}|ACDFTAPE=%{fld28}|ACDFINST=%{fld6}|ACDFRKEY=%{fld29}|ACDFSTEP=%{fld30}|ACDFLVOL=%{fld11}|ACDFLPGM=%{fld45}|ACDFLLIB=%{fld76}|ACDFUCBN=%{fld77}|ACDFPUCB=%{fld78}|ACDFEXEC=%{fld79}|ACDFOWNR=%{fld80}|ACDFUCOM=%{fld81}|ACDFODSN=%{fld82}|ACDFOVOL=%{fld83}|ACDFOCDE=%{fld84}|ACDFSCTP=%{fld85}|ACDFPID1=%{fld86}|ACDFPAC1=%{fld87}|ACDFMISC=%{fld151}|ACDFLAPL=%{fld88}|ACDFLPLB=%{fld89}|ACDFLPTH=%{fld90}|ACDFPPCD=%{fld91}|ACDFLCD4=%{fld92}|ACDFTFLG=%{fld93}|ACDFMFLG=%{fld94}|ACDFLCN1=%{fld95}|ACDFLCN2=%{fld96}|ACDFLCD2=%{fld97}|ACDFLCD1=%{fld98}|ACDFL0PL=%{fld99}|ACDFMSC2=%{fld100}|ACDFCNTL=%{fld101}|ACDFLCD3=%{fld102}|ACDFLRS1=%{fld103}|ACDFNKTC=%{fld104}|ACDFNKTB=%{fld105}|ACEFLKEY=%{fld52}|ACEFLFNC=%{command}|ACEFLMDL=%{fld106}|ACEFLANM=%{change_new}|ACEFOAUM=%{fld108}|ACEFOLEN=%{fld109}|ACEFOFL1=%{info}|ACEFOFL2=%{info}|ACEFLOLV=%{fld112}|ACEFNAUM=%{fld113}|ACEFNLEN=%{fld114}|ACEFNFL1=%{info}|ACEFNFL2=%{info}|ACEFLNEV=%{fld117}|ACEFLRS1=%{fld118}|ACLFLKEY=%{fld53}|ACLFLFNC=%{fld52}|ACLFLMDL=%{fld4}|ACLFLANM=%{fld54}|ACLFOAUM=%{fld27}|ACLFOLEN=%{fld28}|ACLFOFL1=%{fld29}|ACLFOFL2=%{fld30}|ACLFLOLV=%{fld55}|ACLFNAUM=%{fld31}|ACLFNLEN=%{fld32}|ACLFNFL1=%{fld33}|ACLFNFL2=%{fld34}|ACLFLNEV=%{fld56}|ACLFLRS1=%{username}|ACJFLPGM=%{application}|ACJFLPTH=%{fld51}|ACJFLSID=%{fld119}|ACJFLSTC=%{fld120}|ACJFLAPF=%{fld121}|ACJFLCTL=%{fld122}|ACJFLFLG=%{fld123}|ACPFLAPF=%{fld1}|ACPFLPRG=%{fld45}|ACPFLWHY=%{result}|ACPFLLOG=%{fld46}|ACPFLRSX=%{fld124}|ACPFLAUT=%{fld125}|ACPFLFLG=%{fld126}|ACPFLSID=%{fld127}|ACPFLCTL=%{fld128}|ACPFSUBP=%{fld129}|ACPFLRS1=%{fld130}|ACRFLKEY=%{fld1}|ACRFLRS1=%{fld131}|ACVFRCRM=%{fld3}|ACVFRCPR=%{fld4}|ACVFRCIN=%{fld5}|ACVFRCPO=%{fld6}|ACVFRCFI=%{fld57}|ACVFSERV=%{fld52}|ACVFDISP=%{fld19}|ACVFDSPM=%{fld9}|ACVFKMOD=%{fld10}|ACVFLTF=%{fld11}|ACVFMODC=%{fld12}|ACVFMODE=%{resource}|ACVFLKEY=%{username}|ACVFLRSC=%{fld13}|ACVFLNAM=%{fld132}|ACVFLLRT=%{fld133}|ACVFRCID=%{fld134}|ACVFEXNM=%{fld135}|ACVFLTRT=%{fld136}|ACVFLTRS=%{fld137}|ACVFLSFN=%{fld138}|ACVFLFLG=%{fld139}|ACVFLMF=%{fld140}|ACVFLRS1=%{fld141}|ACVFDB2C=%{fld142}|ACVFDB2N=%{fld143}|ACVFNXTC=%{fld144}|ACVFRSRC=%{fld145}|ACVFNXTB=%{fld146}|ACVFDB2P=%{fld147}|ACVFDB2O=%{fld148}|ACVFDB2S=%{fld149}|reserve1=%{fld150}|" }
			id => "msgParserId10"
			add_field => {
				"vid" => "%{event_type}"
				"[logstash][fullDateTimeString]" => "%{fld39} %{fld38}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMddyy HHmm" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_type]"
		destination => "[event_cat]"
		dictionary => {
			"ALOGACCESS" => "1206000000"
			"ALOGALLOW" => "1206000000"
			"RLOGACCESS" => "1206000000"
			"RLOGNORULE" => "1206000000"
			"Dataset" => "1206000000"
			"AccessRule" => "1206000000"
			"LogonID" => "1206000000"
			"RLogonID" => "1206000000"
			"InfoStorage" => "1206000000"
			"General" => "1206000000"
			"Commands" => "1206000000"
			"OpenEdition" => "1206000000"
			"AVIONO-MODE" => "1301000000"
			"RVIONORULE" => "1301000000"
			"RVIORULE" => "1301000000"
			"SVIO76" => "1401030000"
			"SVIOLID" => "1401030000"
			"SVIOPASSWORD" => "1401030000"
			"Password" => "1401030000"
			"SLOGID" => "1401060000"
			"SWRNID" => "1401060000"
		}
		fallback => "1901000000"
		override => true
	}
}
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1206000000" => "Content.Object"
			"1301000000" => "Auth.Failures"
			"1401030000" => "User.Activity.Failed Logins"
			"1401060000" => "User.Activity.Successful Logins"
		}
		fallback => "Other.Default"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ibmacf2msg.json"
#			template_name => "ibmacf2_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
