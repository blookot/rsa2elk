# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "arubanetworks"
			"[observer][name]" => "Aruba Networks Mobility Controller"
			"[observer][type]" => "Wireless Devices"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hdatetime> [<haddr>] <hfld1>[<hfld2>]: <<<messageid>> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdatetime>[^\s]*)[\s]+\[(?<haddr>[^\]]*)\][\s]+(?<message>(?<hfld1>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+<(?<messageid>[^>]*)>[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hdatetime> [<haddr>] <hfld1> (<hfld2>) <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdatetime} [%{haddr}] %{hfld1} (%{hfld2}) %{messageid}: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hdatetime> [<haddr>] <messageid>[<hfld1>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdatetime} [%{haddr}] %{messageid}[%{hfld1}]: %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1113
	# line in RSA: <hdatetime> [<haddr>] <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdatetime} [%{haddr}] %{messageid}: %{message}" }
			id => "header-1113"
			add_field => {
				"[rsa][header][id]" => "1113"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hdatetime> [<haddr>] <messageid> <hfld1> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdatetime>[^\s]*)[\s]+\[(?<haddr>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5>[<hfld6>]: <<<messageid>> <!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld5>[^\[]*)\[(?<hfld6>[^\]]*)\]:[\s]+<(?<messageid>[^>]*)>[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld8> <<<hfld5> <hfld6>> <messageid>[<hfld7>]: <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+<(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^>]*)>[\s]+(?<messageid>[^\[]*)\[(?<hfld7>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <<<hfld5> <hfld6>> <messageid>[<hfld7>]: <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+<(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^>]*)>[\s]+(?<messageid>[^\[]*)\[(?<hfld7>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld8> <<<hfld5> <hfld6>> {<messageid>(<hfld6>):|<messageid>:} <!payload:hfld8>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld8>[^\s]*)[\s]+<(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^>]*)>[\s]+((?<messageid>[^\(]*)\((?<hfld6>[^\)]*)\):|(?<messageid>[^:]*):)[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <<<hfld5> <hfld6>> {<messageid>(<hfld6>):|<messageid>:} <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+<(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^>]*)>[\s]+((?<messageid>[^\(]*)\((?<hfld6>[^\)]*)\):|(?<messageid>[^:]*):)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <<<hfld5> <hfld6>> <messageid> <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+<(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^>]*)>[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hfld1> <hfld2> <hfld3> <haddr> KERNEL(<messageid>@<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<haddr>[^\s]*)[\s]+KERNEL\((?<messageid>[^@]*)@(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1115
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld8> {<messageid>(<hfld6>):|<messageid>:} <!payload:hfld8>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld8>[^\s]*)[\s]+((?<messageid>[^\(]*)\((?<hfld6>[^\)]*)\):|(?<messageid>[^:]*):)[\s]+(?<payload>.*))$" }
			id => "header-1115"
			add_field => {
				"[rsa][header][id]" => "1115"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_arubanetworksmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKE Phase 1 failed to negotiate transform from <saddr>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKE Phase 1 failed to negotiate transform from %{saddr}" }
			id => "msgParserId0"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKE Main Mode Phase 1 succeeded for peer <saddr>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKE Main Mode Phase 1 succeeded for peer %{saddr}" }
			id => "msgParserId1"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "103022" {
		# MESSAGE 103022:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKE Quick Mode succeeded for peer <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKE Quick Mode succeeded for peer %{saddr}" }
				id => "message-103022:01"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "103022:01"
					"[rsa][message][id1]" => "103022:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 103022:02
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> IKE Quick Mode succeeded for peer <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+IKE[\s]+Quick[\s]+Mode[\s]+succeeded[\s]+for[\s]+peer[\s]+(?<saddr>.*)$" }
				id => "message-103022:02"
				add_field => {
				"ec_outcome" => "Success"
				"event_description" => "IKE Quick Mode succeeded for peer"
					"[event][id]" => "103022:02"
					"[rsa][message][id1]" => "103022:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKE Quick Mode succeeded internal <fld13>, external <fld14>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKE Quick Mode succeeded internal %{fld13}, external %{fld14}" }
			id => "msgParserId4"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "103034" {
		# MESSAGE 103034:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKE Quick Mode succeeded from client  external <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKE Quick Mode succeeded from client  external %{saddr}" }
				id => "message-103034:01"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "103034:01"
					"[rsa][message][id1]" => "103034:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 103034:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <space> IKE Quick Mode succeeded from site to site VPN external <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{space} IKE Quick Mode succeeded from site to site VPN external %{fld8}" }
				id => "message-103034:03"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "103034:03"
					"[rsa][message][id1]" => "103034:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 103034:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  IKE Quick Mode succeeded from site to site VPN external <fld8>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+IKE[\s]+Quick[\s]+Mode[\s]+succeeded[\s]+from[\s]+site[\s]+to[\s]+site[\s]+VPN[\s]+external[\s]+(?<fld8>.*)$" }
				id => "message-103034:02"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "103034:02"
					"[rsa][message][id1]" => "103034:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Dropping IKE message from <saddr> possibly <info>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Dropping IKE message from %{saddr} possibly %{info}" }
			id => "msgParserId8"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "103062" {
		# MESSAGE 103062:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> <fld3>: <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> %{fld3}: %{fld4}" }
				id => "message-103062:01"
				add_field => {
					"[event][id]" => "103062:01"
					"[rsa][message][id1]" => "103062:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 103062:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  IKE Aggressive Mode Phase <fld11> succeeded for peer <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+IKE[\s]+Aggressive[\s]+Mode[\s]+Phase[\s]+(?<fld11>[^\s]*)[\s]+succeeded[\s]+for[\s]+peer[\s]+(?<saddr>.*)$" }
				id => "message-103062:02"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "103062:02"
					"[rsa][message][id1]" => "103062:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Sending Cluster role change code <fld3> at time <fld4>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Sending Cluster role change code %{fld3} at time %{fld4}" }
			id => "msgParserId11"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKE received AP DOWN for <saddr> (External <fld13>)
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKE received AP DOWN for %{saddr} (External %{fld13})" }
			id => "msgParserId12"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Sending Cluster role change code <fld3> at time <fld4> to subscriber <fld5>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Sending Cluster role change code %{fld3} at time %{fld4} to subscriber %{fld5}" }
			id => "msgParserId13"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKEv2 IPSEC Tunnel created for peer <saddr>:<sport>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKEv2 IPSEC Tunnel created for peer %{saddr}:%{sport}" }
			id => "msgParserId14"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKEv2 IKE_SA succeeded for peer <saddr>:<sport>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKEv2 IKE_SA succeeded for peer %{saddr}:%{sport}" }
			id => "msgParserId15"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKEv2 CHILD_SA successful for peer <saddr>:<sport>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKEv2 CHILD_SA successful for peer %{saddr}:%{sport}" }
			id => "msgParserId16"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IKEv2 Client-Authentication succeeded for <saddr> (External <fld13>) for <user_role>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IKEv2 Client-Authentication succeeded for %{saddr} (External %{fld13}) for %{user_role}" }
			id => "msgParserId17"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| FLAGGING AP with BSSID <fld3> SSID <ssid> as an Unsecure AP
	else if [logstash][msgparser][id] == "msgParserId18" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+FLAGGING[\s]+AP[\s]+with[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+as[\s]+an[\s]+Unsecure[\s]+AP$" }
			id => "msgParserId18"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Adhoc Network Using Valid SSID: An AP detected an adhoc node <fld3> (BSSID <fld7> and SSID <ssid> on CHANNEL <fld4>) using a valid/protected SSID. SNR is <fld14>. Associated WVE ID(s): <fld15>.
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Adhoc Network Using Valid SSID: An AP detected an adhoc node %{fld3} (BSSID %{fld7} and SSID %{ssid} on CHANNEL %{fld4}) using a valid/protected SSID. SNR is %{fld14}. Associated WVE ID(s): %{fld15}." }
			id => "msgParserId19"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Invalid MAC OUI: An AP detected an invalid MAC OUI <fld3> being used as the BSSID in a frame with SSID <ssid>. The Address Type in which the invalid MAC is used is BSSID, and SNR value is <fld5>. Additional Info: <info>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Invalid MAC OUI: An AP detected an invalid MAC OUI %{fld3} being used as the BSSID in a frame with SSID %{ssid}. The Address Type in which the invalid MAC is used is BSSID, and SNR value is %{fld5}. Additional Info: %{info}" }
			id => "msgParserId20"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Invalid MAC OUI: An AP detected an invalid MAC OUI <fld3> being used in a frame. The Address Type in which the invalid MAC is used is { SRC | DST }, and SNR value is <fld5>. Additional Info: <info>
	else if [logstash][msgparser][id] == "msgParserId21" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<fld2>[^\|]*)\|[\s]+AP\((?<macaddr>[^@]*)@(?<access_point>[^\)]*)\):[\s]+Invalid[\s]+MAC[\s]+OUI:[\s]+An[\s]+AP[\s]+detected[\s]+an[\s]+invalid[\s]+MAC[\s]+OUI[\s]+(?<fld3>[^\s]*)[\s]+being[\s]+used[\s]+in[\s]+a[\s]+frame\.[\s]+The[\s]+Address[\s]+Type[\s]+in[\s]+which[\s]+the[\s]+invalid[\s]+MAC[\s]+is[\s]+used[\s]+is[\s]+([\s]*SRC[\s]+|[\s]*DST[\s]+),[\s]+and[\s]+SNR[\s]+value[\s]+is[\s]+(?<fld5>[^\.]*)\.[\s]+Additional[\s]+Info:[\s]+(?<info>.*)$" }
			id => "msgParserId21"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Wireless Bridge: An AP detected a wireless bridge between transmitter <smacaddr> and receiver <fld33> . SNR value is <fld3>. Additional Info: <info>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Wireless Bridge: An AP detected a wireless bridge between transmitter %{smacaddr} and receiver %{fld33} . SNR value is %{fld3}. Additional Info: %{info}" }
			id => "msgParserId22"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Adhoc Network: An AP detected an Adhoc network on CHANNEL <fld4> where station <fld40> is connected to the Ad hoc AP (BSSID <fld41> and SSID <fld43> ). SNR value is <fld42>.
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Adhoc Network: An AP detected an Adhoc network on CHANNEL %{fld4} where station %{fld40} is connected to the Ad hoc AP (BSSID %{fld41} and SSID %{fld43} ). SNR value is %{fld42}." }
			id => "msgParserId23"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Overflow IE: An AP detected that the device with MAC address <fld11> (BSSID  <fld12> on CHANNEL  <fld13> with SNR  <fld14>) has sent a malformed information element with a declared length that is too large. This could disrupt or crash the device with address  <fld15>. Associated WVE ID(s):  <fld16>.
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Overflow IE: An AP detected that the device with MAC address %{fld11} (BSSID  %{fld12} on CHANNEL  %{fld13} with SNR  %{fld14}) has sent a malformed information element with a declared length that is too large. This could disrupt or crash the device with address  %{fld15}. Associated WVE ID(s):  %{fld16}." }
			id => "msgParserId24"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Invalid Address Combination: An AP detected a frame with an invalid source address <smacaddr>. This could be an attempt to get the receiver <fld46> to reply with a multicast or broadcast frame. Frame received on CHANNEL <fld36> with a SNR of <fld26> Associated WVE ID(s):  <fld16>.
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Invalid Address Combination: An AP detected a frame with an invalid source address %{smacaddr}. This could be an attempt to get the receiver %{fld46} to reply with a multicast or broadcast frame. Frame received on CHANNEL %{fld36} with a SNR of %{fld26} Associated WVE ID(s):  %{fld16}." }
			id => "msgParserId25"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Client Flood Attack: An AP detected that the number of potential fake clients observed across all bands has exceeded the configured IDS threshold. Additional Info: <info>. Associated WVE ID(s):  <fld16>.
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Client Flood Attack: An AP detected that the number of potential fake clients observed across all bands has exceeded the configured IDS threshold. Additional Info: %{info}. Associated WVE ID(s):  %{fld16}." }
			id => "msgParserId26"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): TKIP Replay Attack: An AP detected a TKIP replay against station <fld18> (BSSID <fld19> on CHANNEL <fld20> with SNR <fld21>). This may disrupt communication with <fld26>. Associated WVE ID(s):  <fld16>.
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): TKIP Replay Attack: An AP detected a TKIP replay against station %{fld18} (BSSID %{fld19} on CHANNEL %{fld20} with SNR %{fld21}). This may disrupt communication with %{fld26}. Associated WVE ID(s):  %{fld16}." }
			id => "msgParserId27"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): 802.11n 40MHZ Intolerance: An AP detected an access point (BSSID <fld11> and SSID <ssid> on CHANNEL <fld12>) with HT 40MHz Intolerance Setting. Associated WVE ID(s):  <fld16>.
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): 802.11n 40MHZ Intolerance: An AP detected an access point (BSSID %{fld11} and SSID %{ssid} on CHANNEL %{fld12}) with HT 40MHz Intolerance Setting. Associated WVE ID(s):  %{fld16}." }
			id => "msgParserId28"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Malformed Frame - HT IE: An AP detected that the device with MAC address <fld11> (BSSID <fld12> on CHANNEL <fld13> with SNR <fld14>) has sent a management frame containing one or more malformed HT Information Elements. This may disrupt communication with <fld15>.
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Malformed Frame - HT IE: An AP detected that the device with MAC address %{fld11} (BSSID %{fld12} on CHANNEL %{fld13} with SNR %{fld14}) has sent a management frame containing one or more malformed HT Information Elements. This may disrupt communication with %{fld15}." }
			id => "msgParserId29"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "126087" {
		# MESSAGE 126087
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Block ACK DoS Attack: An AP detected a data frame which indicates a possible Block ACK DoS Attack.  The frame from <fld32> to <fld33> (BSSID <fld12> on CHANNEL <fld13> with SNR <fld14>) is outside the current sequence number window, and thus may be dropped. Associated WVE ID(s): <fld16>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Block ACK DoS Attack: An AP detected a data frame which indicates a possible Block ACK DoS Attack.  The frame from %{fld32} to %{fld33} (BSSID %{fld12} on CHANNEL %{fld13} with SNR %{fld14}) is outside the current sequence number window, and thus may be dropped. Associated WVE ID(s): %{fld16}." }
				id => "message-126087"
				add_field => {
					"[event][id]" => "126087"
					"[rsa][message][id1]" => "126087"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 126087:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): Block ACK DoS Attack: <event_description>. <fld21> (BSSID <smacaddr> <fld9> CHANNEL <fld8>) <fld11>, <fld12>. <fld13>: Victim: <fld14> <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): Block ACK DoS Attack: %{event_description}. %{fld21} (BSSID %{smacaddr} %{fld9} CHANNEL %{fld8}) %{fld11}, %{fld12}. %{fld13}: Victim: %{fld14} %{fld15}" }
				id => "message-126087:01"
				add_field => {
					"[event][id]" => "126087:01"
					"[rsa][message][id1]" => "126087:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Node Rate Anomaly: An AP detected frames of type <fld19> transmitted or received by an access point (BSSID <fld18> and SSID <ssid>), which exceed the configured IDS rate threshold for this frame type. SNR for AP is <fld17>. Additional Info: <info>. Associated WVE ID(s): <fld16>.
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Node Rate Anomaly: An AP detected frames of type %{fld19} transmitted or received by an access point (BSSID %{fld18} and SSID %{ssid}), which exceed the configured IDS rate threshold for this frame type. SNR for AP is %{fld17}. Additional Info: %{info}. Associated WVE ID(s): %{fld16}." }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Signature Match: Disassoc Broadcast: An AP detected a factory default signature match (<fld21>) in a frame with BSSID <fld22> on channel <fld23> from transmitter <fld24> to receiver <fld25>, with SNR  <fld17>. Additional Info: <info>. Associated WVE ID(s): <fld16>.
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Signature Match: Disassoc Broadcast: An AP detected a factory default signature match (%{fld21}) in a frame with BSSID %{fld22} on channel %{fld23} from transmitter %{fld24} to receiver %{fld25}, with SNR  %{fld17}. Additional Info: %{info}. Associated WVE ID(s): %{fld16}." }
			id => "msgParserId32"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  wifi_deauth_sta: bad data, dropping. mac: <macaddr> bssid: <fld12>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  wifi_deauth_sta: bad data, dropping. mac: %{macaddr} bssid: %{fld12}" }
			id => "msgParserId33"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Malformed Frame - Assoc Request: An AP detected that the device with MAC address <fld11> (BSSID <fld12> on CHANNEL <fld13> with SNR <fld14>) has sent an association request containing an empty SSID. If <fld15> uses a vulnerable wireless driver this could cause it to crash. Associated WVE ID(s):  <fld16>.
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): Malformed Frame - Assoc Request: An AP detected that the device with MAC address %{fld11} (BSSID %{fld12} on CHANNEL %{fld13} with SNR %{fld14}) has sent an association request containing an empty SSID. If %{fld15} uses a vulnerable wireless driver this could cause it to crash. Associated WVE ID(s):  %{fld16}." }
			id => "msgParserId34"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): WPA Violation: An AP detected an access point (BSSID <fld41> and SSID <ssid> on CHANNEL <fld42>) has bad { WEP | WPA } configuration.
	else if [logstash][msgparser][id] == "msgParserId35" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<fld2>[^\|]*)\|[\s]+AP\((?<macaddr>[^@]*)@(?<access_point>[^\)]*)\):[\s]+WPA[\s]+Violation:[\s]+An[\s]+AP[\s]+detected[\s]+an[\s]+access[\s]+point[\s]+\(BSSID[\s]+(?<fld41>[^\s]*)[\s]+and[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+on[\s]+CHANNEL[\s]+(?<fld42>[^\)]*)\)[\s]+has[\s]+bad[\s]+([\s]*WEP[\s]+|[\s]*WPA[\s]+)[\s]+configuration\.$" }
			id => "msgParserId35"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): Privacy Violation: An AP detected an access point (BSSID <fld41> and SSID <ssid> on CHANNEL <fld42>) has bad { WEP | WPA } configuration.
	else if [logstash][msgparser][id] == "msgParserId36" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<fld2>[^\|]*)\|[\s]+AP\((?<macaddr>[^@]*)@(?<access_point>[^\)]*)\):[\s]+Privacy[\s]+Violation:[\s]+An[\s]+AP[\s]+detected[\s]+an[\s]+access[\s]+point[\s]+\(BSSID[\s]+(?<fld41>[^\s]*)[\s]+and[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+on[\s]+CHANNEL[\s]+(?<fld42>[^\)]*)\)[\s]+has[\s]+bad[\s]+([\s]*WEP[\s]+|[\s]*WPA[\s]+)[\s]+configuration\.$" }
			id => "msgParserId36"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld2>| AP(<macaddr>@<access_point>): AP Spoofing: An AP detected a frame from <fld3> addressed to one of its BSSIDs <fld4> on the wrong CHANNEL <fld5>. Destination address is <fld35>, SNR is <fld6>, and FrameType is Data. Additional Info: <info>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld2}| AP(%{macaddr}@%{access_point}): AP Spoofing: An AP detected a frame from %{fld3} addressed to one of its BSSIDs %{fld4} on the wrong CHANNEL %{fld5}. Destination address is %{fld35}, SNR is %{fld6}, and FrameType is Data. Additional Info: %{info}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> FLAGGING AP with BSSID <bssid> SSID <ssid> as an Unsecure AP Wired MAC <dmacaddr> IP <daddr>
	else if [logstash][msgparser][id] == "msgParserId38" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+FLAGGING[\s]+AP[\s]+with[\s]+BSSID[\s]+(?<bssid>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+as[\s]+an[\s]+Unsecure[\s]+AP[\s]+Wired[\s]+MAC[\s]+(?<dmacaddr>[^\s]*)[\s]+IP[\s]+(?<daddr>.*)$" }
			id => "msgParserId38"
			add_field => {
				"event_description" => "FLAGGING AP as an Unsecure AP Wired MAC"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| FLAGGING AP with BSSID <fld3> SSID <ssid> as a Suspect Unsecure AP Wired MAC <fld4> Confidence Level <fld6>
	else if [logstash][msgparser][id] == "msgParserId39" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+FLAGGING[\s]+AP[\s]+with[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+as[\s]+a[\s]+Suspect[\s]+Unsecure[\s]+AP[\s]+Wired[\s]+MAC[\s]+(?<fld4>[^\s]*)[\s]+Confidence[\s]+Level[\s]+(?<fld6>.*)$" }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "106000" {
		# MESSAGE 106000:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Potentially rogue AP detected BSSID <fld4> SSID <ssid> MATCH MAC <fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Potentially[\s]+rogue[\s]+AP[\s]+detected[\s]+BSSID[\s]+(?<fld4>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+MATCH[\s]+MAC[\s]+(?<fld6>.*)$" }
				id => "message-106000:01"
				add_field => {
					"[event][id]" => "106000:01"
					"[rsa][message][id1]" => "106000:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 106000:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Potentially Unsecure AP detected BSSID <fld7> SSID <ssid> MAC <fld4>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Potentially[\s]+Unsecure[\s]+AP[\s]+detected[\s]+BSSID[\s]+(?<fld7>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+MAC[\s]+(?<fld4>.*)$" }
				id => "message-106000:02"
				add_field => {
					"[event][id]" => "106000:02"
					"[rsa][message][id1]" => "106000:02"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50> Rogue AP detected with SSID <ssid>, BSSID <fld7>, Wired MAC <fld4>, and IP <fld5>
	else if [logstash][msgparser][id] == "msgParserId42" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+Rogue[\s]+AP[\s]+detected[\s]+with[\s]+SSID[\s]+(?<ssid>[^,]*),[\s]+BSSID[\s]+(?<fld7>[^,]*),[\s]+Wired[\s]+MAC[\s]+(?<fld4>[^,]*),[\s]+and[\s]+IP[\s]+(?<fld5>.*)$" }
			id => "msgParserId42"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Resolved Unsecure AP with SSID <ssid> and BSSID <fld3>
	else if [logstash][msgparser][id] == "msgParserId43" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Resolved[\s]+Unsecure[\s]+AP[\s]+with[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+and[\s]+BSSID[\s]+(?<fld3>.*)$" }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50> Rogue AP detected with SSID <ssid>, BSSID <fld7>, Wired MAC <fld4>, and IP <fld8>
	else if [logstash][msgparser][id] == "msgParserId44" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+Rogue[\s]+AP[\s]+detected[\s]+with[\s]+SSID[\s]+(?<ssid>[^,]*),[\s]+BSSID[\s]+(?<fld7>[^,]*),[\s]+Wired[\s]+MAC[\s]+(?<fld4>[^,]*),[\s]+and[\s]+IP[\s]+(?<fld8>.*)$" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Rogue AP detected with SSID <ssid>, BSSID <fld7>, Wired MAC <fld4>, and IP <fld8>
	else if [logstash][msgparser][id] == "msgParserId45" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Rogue[\s]+AP[\s]+detected[\s]+with[\s]+SSID[\s]+(?<ssid>[^,]*),[\s]+BSSID[\s]+(?<fld7>[^,]*),[\s]+Wired[\s]+MAC[\s]+(?<fld4>[^,]*),[\s]+and[\s]+IP[\s]+(?<fld8>.*)$" }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Containment enabled on Suspect Rogue AP: BSSID <fld7>, SSID <ssid>, Conf-Level <fld6>
	else if [logstash][msgparser][id] == "msgParserId46" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Containment[\s]+enabled[\s]+on[\s]+Suspect[\s]+Rogue[\s]+AP:[\s]+BSSID[\s]+(?<fld7>[^,]*),[\s]+SSID[\s]+(?<ssid>[^,]*),[\s]+Conf\-Level[\s]+(?<fld6>.*)$" }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  <info>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  %{info}" }
			id => "msgParserId47"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |aaa| RADIUS server <dhost>-<fld13>-<daddr>-<dport> timeout for client=<smacaddr> auth method <authmethod>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |aaa| RADIUS server %{dhost}-%{fld13}-%{daddr}-%{dport} timeout for client=%{smacaddr} auth method %{authmethod}" }
			id => "msgParserId48"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> |firewall| <fld3> datapath service <fld4>, id=<fld5> proto=<fld6>, port=<fld7>-<fld8>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> |firewall| %{fld3} datapath service %{fld4}, id=%{fld5} proto=%{fld6}, port=%{fld7}-%{fld8}" }
			id => "msgParserId49"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Authentication result=<fld3>, method=<fld4>, server=<fld5>, user=<fld6>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Authentication result=%{fld3}, method=%{fld4}, server=%{fld5}, user=%{fld6}" }
			id => "msgParserId50"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<DBUG> |<process>| <info>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <DBUG> |%{process}| %{info}" }
			id => "msgParserId51"
			add_field => {
				"event_description" => "DEBUG INFO"
				"severity" => "DBUG"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "124006" {
		# MESSAGE 124006
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> {{<connectionid>} { proto=<protocol> | <protocol> } srcip=<saddr> dstip=<daddr>, action=deny, role=<user_role>, policy=<policyname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<space>[^\s]*)[\s]+\{(?<connectionid>[^\}]*)\}[\s]+([\s]*proto=(?<protocol>[^\s]*)[\s]+|[\s]*(?<protocol>[^\s]*)[\s]+)[\s]+srcip=(?<saddr>[^\s]*)[\s]+dstip=(?<daddr>[^,]*),[\s]+action=deny,[\s]+role=(?<user_role>[^,]*),[\s]+policy=(?<policyname>.*)$" }
				id => "message-124006"
				add_field => {
				"event_description" => "connection denied"
					"[event][id]" => "124006"
					"[rsa][message][id1]" => "124006"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 124006:04
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> {{<connectionid>} { proto=<protocol> | <protocol> } srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport>, action=permit, role=<user_role>, policy=<policyname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<space>[^\s]*)[\s]+\{(?<connectionid>[^\}]*)\}[\s]+([\s]*proto=(?<protocol>[^\s]*)[\s]+|[\s]*(?<protocol>[^\s]*)[\s]+)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^,]*),[\s]+action=permit,[\s]+role=(?<user_role>[^,]*),[\s]+policy=(?<policyname>.*)$" }
				id => "message-124006:04"
				add_field => {
				"event_description" => "connection permitted"
				"action" => "permit"
					"[event][id]" => "124006:04"
					"[rsa][message][id1]" => "124006:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 124006:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  {{<fld12>} proto=<protocol> srcip=<saddr> dstip=<daddr>, action=<action>, role=<group>, policy=<policyname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\{(?<fld12>[^\}]*)\}[\s]+proto=(?<protocol>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+dstip=(?<daddr>[^,]*),[\s]+action=(?<action>[^,]*),[\s]+role=(?<group>[^,]*),[\s]+policy=(?<policyname>.*)$" }
				id => "message-124006:03"
				add_field => {
					"[event][id]" => "124006:03"
					"[rsa][message][id1]" => "124006:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 124006:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2> <fld3>>  {{<fld4>} <protocol> srcip=<fld5> dstip=<fld6>, type=<obj_type>, code=<resultcode>, sequence=<dclass_counter1>, id=<connectionid>, action=<action>, role=<group>, policy=<policyname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld2>[^\s]*)[\s]+(?<fld3>[^>]*)>[\s]+\{(?<fld4>[^\}]*)\}[\s]+(?<protocol>[^\s]*)[\s]+srcip=(?<fld5>[^\s]*)[\s]+dstip=(?<fld6>[^,]*),[\s]+type=(?<obj_type>[^,]*),[\s]+code=(?<resultcode>[^,]*),[\s]+sequence=(?<dclass_counter1>[^,]*),[\s]+id=(?<connectionid>[^,]*),[\s]+action=(?<action>[^,]*),[\s]+role=(?<group>[^,]*),[\s]+policy=(?<policyname>.*)$" }
				id => "message-124006:02"
				add_field => {
				"ec_outcome" => "Success"
				"ec_theme" => "Authentication"
					"[event][id]" => "124006:02"
					"[rsa][message][id1]" => "124006:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 124006:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  {{<fld12>} <protocol> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport>, action=<action>, role=<group>, policy=<policyname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\{(?<fld12>[^\}]*)\}[\s]+(?<protocol>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^,]*),[\s]+action=(?<action>[^,]*),[\s]+role=(?<group>[^,]*),[\s]+policy=(?<policyname>.*)$" }
				id => "message-124006:01"
				add_field => {
					"[event][id]" => "124006:01"
					"[rsa][message][id1]" => "124006:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 124006:05
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <fld12> <protocol> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport>, action=<action>, policy=<policyname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{fld12} %{protocol} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport}, action=%{action}, policy=%{policyname}" }
				id => "message-124006:05"
				add_field => {
					"[event][id]" => "124006:05"
					"[rsa][message][id1]" => "124006:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId57
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Detected AP <fld13> with ip <fld5> slotport <fld4> status <resultcode> txkey <fld6>
	else if [logstash][msgparser][id] == "msgParserId57" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Detected[\s]+AP[\s]+(?<fld13>[^\s]*)[\s]+with[\s]+ip[\s]+(?<fld5>[^\s]*)[\s]+slotport[\s]+(?<fld4>[^\s]*)[\s]+status[\s]+(?<resultcode>[^\s]*)[\s]+txkey[\s]+(?<fld6>.*)$" }
			id => "msgParserId57"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Configured radius server <dhost>:<fld13>:<daddr>
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Configured radius server %{dhost}:%{fld13}:%{daddr}" }
			id => "msgParserId58"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Taking Server <dhost>out of service for <fld13>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Taking Server %{dhost}out of service for %{fld13}" }
			id => "msgParserId59"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Bringing Server <dhost>back in service after the dead-timeout interval.
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Bringing Server %{dhost}back in service after the dead-timeout interval." }
			id => "msgParserId60"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  NAT pool '<fld3>' created; SNAT=<fld4>-<fld5>, DNAT=<fld6>
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  NAT pool '%{fld3}' created; SNAT=%{fld4}-%{fld5}, DNAT=%{fld6}" }
			id => "msgParserId61"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "124038" {
		# MESSAGE 124038:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Selected server <fld3> for method=<fld4>; user=<username>,  essid=<fld5>, domain=<domain>, server-group=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Selected server %{fld3} for method=%{fld4}; user=%{username},  essid=%{fld5}, domain=%{domain}, server-group=%{fld7}" }
				id => "message-124038:01"
				add_field => {
					"[event][id]" => "124038:01"
					"[rsa][message][id1]" => "124038:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 124038:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Reused server <fld3> for method=<fld4>; user=<username>,  essid=<fld5>, domain=<domain>, server-group=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Reused server %{fld3} for method=%{fld4}; user=%{username},  essid=%{fld5}, domain=%{domain}, server-group=%{fld7}" }
				id => "message-124038:02"
				add_field => {
					"[event][id]" => "124038:02"
					"[rsa][message][id1]" => "124038:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Time-range <fld13> <action>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Time-range %{fld13} %{action}" }
			id => "msgParserId64"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Sending accounting stop for authenticated users 
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Sending accounting stop for authenticated users" }
			id => "msgParserId65"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Server <fld13> is up.
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Server %{fld13} is up." }
			id => "msgParserId66"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> Deleting a user IP=<saddr> from the datapath that does not exist in <group>
	else if [logstash][msgparser][id] == "msgParserId67" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+Deleting[\s]+a[\s]+user[\s]+IP=(?<saddr>[^\s]*)[\s]+from[\s]+the[\s]+datapath[\s]+that[\s]+does[\s]+not[\s]+exist[\s]+in[\s]+(?<group>.*)$" }
			id => "msgParserId67"
			add_field => {
				"event_description" => "Deleting a user datapath that does not exist in group"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Server Authentication Failed, Checking mgmt-user config-db. State=<event_state>
	else if [logstash][msgparser][id] == "msgParserId68" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Server[\s]+Authentication[\s]+Failed,[\s]+Checking[\s]+mgmt\-user[\s]+config\-db\.[\s]+State=(?<event_state>.*)$" }
			id => "msgParserId68"
			add_field => {
				"ec_outcome" => "Failure"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Authentication failed for User <username>, connection type <logon_type>
	else if [logstash][msgparser][id] == "msgParserId69" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Authentication[\s]+failed[\s]+for[\s]+User[\s]+(?<username>[^,]*),[\s]+connection[\s]+type[\s]+(?<logon_type>.*)$" }
			id => "msgParserId69"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "125022" {
		# MESSAGE 125022:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Authentication failed for User <username>, Logged in from <saddr> port <sport>, Connecting to <daddr> port <dport> connection type <logon_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Authentication[\s]+failed[\s]+for[\s]+User[\s]+(?<username>[^,]*),[\s]+Logged[\s]+in[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^,]*),[\s]+Connecting[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+port[\s]+(?<dport>[^\s]*)[\s]+connection[\s]+type[\s]+(?<logon_type>.*)$" }
				id => "message-125022:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "125022:01"
					"[rsa][message][id1]" => "125022:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 125022:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Authentication failed for User <username>, Logged in from <saddr> port <sport>, Connecting to <daddr> port <dport> connection type <logon_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Authentication failed for User %{username}, Logged in from %{saddr} port %{sport}, Connecting to %{daddr} port %{dport} connection type %{logon_type}" }
				id => "message-125022:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "125022:02"
					"[rsa][message][id1]" => "125022:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Authentication Succeeded for User <username>, connection type <logon_type>
	else if [logstash][msgparser][id] == "msgParserId72" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Authentication[\s]+Succeeded[\s]+for[\s]+User[\s]+(?<username>[^,]*),[\s]+connection[\s]+type[\s]+(?<logon_type>.*)$" }
			id => "msgParserId72"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "125024" {
		# MESSAGE 125024:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Authentication Succeeded for User <username>, Logged in from <saddr> port <sport>, Connecting to <daddr> port <dport> connection type <logon_type> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Authentication Succeeded for User %{username}, Logged in from %{saddr} port %{sport}, Connecting to %{daddr} port %{dport} connection type %{logon_type}" }
				id => "message-125024:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "125024:01"
					"[rsa][message][id1]" => "125024:01"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 125024:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Authentication Succeeded for User <username> :  Logged in from <saddr> port <sport> Connecting to <daddr> port <dport> connection type <logon_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Authentication[\s]+Succeeded[\s]+for[\s]+User[\s]+(?<username>[^\s]*)[\s]+:[\s]+Logged[\s]+in[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+Connecting[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+port[\s]+(?<dport>[^\s]*)[\s]+connection[\s]+type[\s]+(?<logon_type>.*)$" }
				id => "message-125024:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "125024:02"
					"[rsa][message][id1]" => "125024:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "125025" {
		# MESSAGE 125025:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Radius Authentication is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Radius Authentication is disabled" }
				id => "message-125025:01"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "125025:01"
					"[rsa][message][id1]" => "125025:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 125025:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Radius Authentication is disabled
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Radius[\s]+Authentication[\s]+is[\s]+disabled$" }
				id => "message-125025:02"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "125025:02"
					"[rsa][message][id1]" => "125025:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <result>
	else if [logstash][msgparser][id] == "msgParserId77" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<result>.*)$" }
			id => "msgParserId77"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  User <username> <action>, with management role <user_role>
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  User %{username} %{action}, with management role %{user_role}" }
			id => "msgParserId78"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Rogue AP: The system classified an access point(BSSID <fld3> and SSID <ssid> on CHANNEL <fld4>) as rogue. Additional Info: <info>.
	else if [logstash][msgparser][id] == "msgParserId79" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Rogue[\s]+AP:[\s]+The[\s]+system[\s]+classified[\s]+an[\s]+access[\s]+point\(BSSID[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+on[\s]+CHANNEL[\s]+(?<fld4>[^\)]*)\)[\s]+as[\s]+rogue\.[\s]+Additional[\s]+Info:[\s]+(?<info>[^\.]*)\.$" }
			id => "msgParserId79"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Interfering AP: The system classified an access point (BSSID <fld3> and SSID <ssid> on CHANNEL <fld46>) as interfering. Additional Info: <info>
	else if [logstash][msgparser][id] == "msgParserId80" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Interfering[\s]+AP:[\s]+The[\s]+system[\s]+classified[\s]+an[\s]+access[\s]+point[\s]+\(BSSID[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+on[\s]+CHANNEL[\s]+(?<fld46>[^\)]*)\)[\s]+as[\s]+interfering\.[\s]+Additional[\s]+Info:[\s]+(?<info>.*)$" }
			id => "msgParserId80"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |<fld2>| AP(<macaddr>@<access_point>): Station Associated to Rogue AP: An AP detected a client <smacaddr> associated to a rogue access point (BSSID <fld3> and SSID <ssid> on CHANNEL <fld4>).
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |%{fld2}| AP(%{macaddr}@%{access_point}): Station Associated to Rogue AP: An AP detected a client %{smacaddr} associated to a rogue access point (BSSID %{fld3} and SSID %{ssid} on CHANNEL %{fld4})." }
			id => "msgParserId81"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Suspect Rogue AP: The system detected a suspected rogue access point (BSSID <fld3>, SSID <ssid> on CHANNEL <fld5>). <info>
	else if [logstash][msgparser][id] == "msgParserId82" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Suspect[\s]+Rogue[\s]+AP:[\s]+The[\s]+system[\s]+detected[\s]+a[\s]+suspected[\s]+rogue[\s]+access[\s]+point[\s]+\(BSSID[\s]+(?<fld3>[^,]*),[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+on[\s]+CHANNEL[\s]+(?<fld5>[^\)]*)\)\.[\s]+(?<info>.*)$" }
			id => "msgParserId82"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Cleared Suspect Rogue AP: A previously classified suspected rogue access point (BSSID <fld3>, SSID <ssid> on CHANNEL <fld4>) is no longer considered suspected rogue or it was removed from the network. Additional Info: <info>.
	else if [logstash][msgparser][id] == "msgParserId83" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Cleared[\s]+Suspect[\s]+Rogue[\s]+AP:[\s]+A[\s]+previously[\s]+classified[\s]+suspected[\s]+rogue[\s]+access[\s]+point[\s]+\(BSSID[\s]+(?<fld3>[^,]*),[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+on[\s]+CHANNEL[\s]+(?<fld4>[^\)]*)\)[\s]+is[\s]+no[\s]+longer[\s]+considered[\s]+suspected[\s]+rogue[\s]+or[\s]+it[\s]+was[\s]+removed[\s]+from[\s]+the[\s]+network\.[\s]+Additional[\s]+Info:[\s]+(?<info>[^\.]*)\.$" }
			id => "msgParserId83"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Suspect Rogue AP: A suspected rogue access point (BSSID <fld3>, SSID <ssid>) was detected by (AP: <access_point>). The AP is suspected to be rogue with a confidence level of (<fld6>) because it matched the wired MAC (<fld7>) with IP (<fld8>). <info>
	else if [logstash][msgparser][id] == "msgParserId84" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Suspect[\s]+Rogue[\s]+AP:[\s]+A[\s]+suspected[\s]+rogue[\s]+access[\s]+point[\s]+\(BSSID[\s]+(?<fld3>[^,]*),[\s]+SSID[\s]+(?<ssid>[^\)]*)\)[\s]+was[\s]+detected[\s]+by[\s]+\(AP:[\s]+(?<access_point>[^\)]*)\)\.[\s]+The[\s]+AP[\s]+is[\s]+suspected[\s]+to[\s]+be[\s]+rogue[\s]+with[\s]+a[\s]+confidence[\s]+level[\s]+of[\s]+\((?<fld6>[^\)]*)\)[\s]+because[\s]+it[\s]+matched[\s]+the[\s]+wired[\s]+MAC[\s]+\((?<fld7>[^\)]*)\)[\s]+with[\s]+IP[\s]+\((?<fld8>[^\)]*)\)\.[\s]+(?<info>.*)$" }
			id => "msgParserId84"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId85
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |ids-ap| AP(<macaddr>): Rogue AP: An AP classified an access point(BSSID <fld4> and SSID <ssid> on CHANNEL <fld7>) as rogue because it matched the MAC (<fld8>) with IP (<fld9>).
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |ids-ap| AP(%{macaddr}): Rogue AP: An AP classified an access point(BSSID %{fld4} and SSID %{ssid} on CHANNEL %{fld7}) as rogue because it matched the MAC (%{fld8}) with IP (%{fld9})." }
			id => "msgParserId85"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "127004" {
		# MESSAGE 127004:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |ids-ap| AP(<macaddr>): Interfering AP: An AP detected an interfering access point (BSSID <fld3> and SSID <ssid> on CHANNEL <fld46>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |ids-ap| AP(%{macaddr}): Interfering AP: An AP detected an interfering access point (BSSID %{fld3} and SSID %{ssid} on CHANNEL %{fld46})." }
				id => "message-127004:01"
				add_field => {
					"[event][id]" => "127004:01"
					"[rsa][message][id1]" => "127004:01"
					"[event][categoryid]" => "1805010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 127004:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP(<macaddr>): Interfering AP: An AP detected an interfering access point (BSSID <fld3> and SSID <ssid> on CHANNEL <fld46>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP(%{macaddr}): Interfering AP: An AP detected an interfering access point (BSSID %{fld3} and SSID %{ssid} on CHANNEL %{fld46})." }
				id => "message-127004:02"
				add_field => {
					"[event][id]" => "127004:02"
					"[rsa][message][id1]" => "127004:02"
					"[event][categoryid]" => "1805010100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "132023" {
		# MESSAGE 132023:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> 802.1x authentication is disabled in profile <space> Station <fld40> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} 802.1x authentication is disabled in profile %{space} Station %{fld40} %{fld3}" }
				id => "message-132023:01"
				add_field => {
				"event_description" => "802.1x authentication is disabled in profile"
					"[event][id]" => "132023:01"
					"[rsa][message][id1]" => "132023:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 132023
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>>  802.1x authentication is disabled in profile <space> Station <fld40> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}>  802.1x authentication is disabled in profile %{space} Station %{fld40} %{fld3}" }
				id => "message-132023"
				add_field => {
				"event_description" => "802.1x authentication is disabled in profile"
					"[event][id]" => "132023"
					"[rsa][message][id1]" => "132023"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "132030" {
		# MESSAGE 132030:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> Dropping EAPOL packet sent by Station <fld40> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} Dropping EAPOL packet sent by Station %{fld40} %{fld3}" }
				id => "message-132030:01"
				add_field => {
				"event_description" => "Dropping EAPOL packet sent by Station"
					"[event][id]" => "132030:01"
					"[rsa][message][id1]" => "132030:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 132030
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>>  Dropping EAPOL packet sent by Station <fld40> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}>  Dropping EAPOL packet sent by Station %{fld40} %{fld3}" }
				id => "message-132030"
				add_field => {
					"[event][id]" => "132030"
					"[rsa][message][id1]" => "132030"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId92
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> <info> 
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> %{info}" }
			id => "msgParserId92"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Dropping the radius packet for Station <fld40> <fld13> doing <network_service>
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Dropping the radius packet for Station %{fld40} %{fld13} doing %{network_service}" }
			id => "msgParserId93"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "132086" {
		# MESSAGE 132086
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  WPA <fld13> Key exchange failed to complete, de-authenticating the station <fld40> associated with AP <macaddr> <access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  WPA %{fld13} Key exchange failed to complete, de-authenticating the station %{fld40} associated with AP %{macaddr} %{access_point}" }
				id => "message-132086"
				add_field => {
					"[event][id]" => "132086"
					"[rsa][message][id1]" => "132086"
					"[event][categoryid]" => "1613040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 132086:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld10>| <space> WPA <fld13> Key exchange failed to complete, de-authenticating the station <fld40> associated with AP <macaddr> <access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld10}| %{space} WPA %{fld13} Key exchange failed to complete, de-authenticating the station %{fld40} associated with AP %{macaddr} %{access_point}" }
				id => "message-132086:01"
				add_field => {
					"[event][id]" => "132086:01"
					"[rsa][message][id1]" => "132086:01"
					"[event][categoryid]" => "1613040200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "132093" {
		# MESSAGE 132093:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> WPA2 Key message 4 from Station <fld40> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} WPA2 Key message 4 from Station %{fld40} %{fld3}" }
				id => "message-132093:01"
				add_field => {
				"event_description" => "WPA2 Key message 4 from Station"
					"[event][id]" => "132093:01"
					"[rsa][message][id1]" => "132093:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 132093
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  WPA2 Key message <fld3> from Station <fld40> <fld5> <fld6> did not match the replay counter <fld7> vs <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  WPA2 Key message %{fld3} from Station %{fld40} %{fld5} %{fld6} did not match the replay counter %{fld7} vs %{fld8}" }
				id => "message-132093"
				add_field => {
					"[event][id]" => "132093"
					"[rsa][message][id1]" => "132093"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId98
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MIC failed in WPA2 Key Message <fld3> from Station <fld40> <fld5> <fld6> 
	else if [logstash][msgparser][id] == "msgParserId98" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MIC failed in WPA2 Key Message %{fld3} from Station %{fld40} %{fld5} %{fld6}" }
			id => "msgParserId98"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "132197" {
		# MESSAGE 132197:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> Maximum number of retries was attempted for station <fld40> <fld3>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} Maximum number of retries was attempted for station %{fld40} %{fld3}, %{result}" }
				id => "message-132197:01"
				add_field => {
				"event_description" => "Maximum number of retries was attempted for station"
					"[event][id]" => "132197:01"
					"[rsa][message][id1]" => "132197:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 132197
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>>  Maximum number of retries was attempted for station <fld40> <smacaddr> <fld13>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}>  Maximum number of retries was attempted for station %{fld40} %{smacaddr} %{fld13}, %{result}" }
				id => "message-132197"
				add_field => {
				"event_description" => "Maximum number of retries was attempted for station"
					"[event][id]" => "132197"
					"[rsa][message][id1]" => "132197"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 132197:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Maximum number of retries was attempted for station <smacaddr> <macaddr>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Maximum number of retries was attempted for station %{smacaddr} %{macaddr}, %{result}" }
				id => "message-132197:02"
				add_field => {
					"[event][id]" => "132197:02"
					"[rsa][message][id1]" => "132197:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Successfully downloaded the certs  <fld3> for EAP termination 
	else if [logstash][msgparser][id] == "msgParserId101" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Successfully downloaded the certs  %{fld3} for EAP termination" }
			id => "msgParserId101"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  RADIUS reject for station <fld40> <smacaddr> from server <fld13>
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  RADIUS reject for station %{fld40} %{smacaddr} from server %{fld13}" }
			id => "msgParserId102"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "133004" {
		# MESSAGE 133004:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Received Authentication Request for User <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Received Authentication Request for User %{username}" }
				id => "message-133004:01"
				add_field => {
				"ec_subject" => "User"
					"[event][id]" => "133004:01"
					"[rsa][message][id1]" => "133004:01"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 133004:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Received Authentication Request for User <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Received[\s]+Authentication[\s]+Request[\s]+for[\s]+User[\s]+(?<username>.*)$" }
				id => "message-133004:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
					"[event][id]" => "133004:02"
					"[rsa][message][id1]" => "133004:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "133005" {
		# MESSAGE 133005:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| User <username> <user_role> Succesfully Authenticated
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+User[\s]+(?<username>[^\s]*)[\s]+(?<user_role>[^\s]*)[\s]+Succesfully[\s]+Authenticated$" }
				id => "message-133005:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "133005:01"
					"[rsa][message][id1]" => "133005:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 133005:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  User <username> Successfully Authenticated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  User %{username} Successfully Authenticated" }
				id => "message-133005:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "133005:02"
					"[rsa][message][id1]" => "133005:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "133006" {
		# MESSAGE 133006:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>> <space> User <username> Failed Authentication
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}> %{space} User %{username} Failed Authentication" }
				id => "message-133006:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure"
					"[event][id]" => "133006:01"
					"[rsa][message][id1]" => "133006:01"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 133006:02
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <process>}| <space> User <username> Failed Authentication
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+User[\s]+(?<username>[^\s]*)[\s]+Failed[\s]+Authentication$" }
				id => "message-133006:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failure"
					"[event][id]" => "133006:02"
					"[rsa][message][id1]" => "133006:02"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  User <username> <user_role> Failed <authmethod> Authentication
	else if [logstash][msgparser][id] == "msgParserId109" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+User[\s]+(?<username>[^\s]*)[\s]+(?<user_role>[^\s]*)[\s]+Failed[\s]+(?<authmethod>[^\s]*)[\s]+Authentication$" }
			id => "msgParserId109"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId110
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Starting Internal User Database Server
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Starting Internal User Database Server" }
			id => "msgParserId110"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "133019" {
		# MESSAGE 133019:02
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> | {AP <macaddr>@<hostip> <fld2> | <process> }| <space> User <username> was not found in the database
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|[\s]+(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<process>[^\s]*)[\s]+)\|[\s]+(?<space>[^\s]*)[\s]+User[\s]+(?<username>[^\s]*)[\s]+was[\s]+not[\s]+found[\s]+in[\s]+the[\s]+database$" }
				id => "message-133019:02"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "User not found in database"
					"[event][id]" => "133019:02"
					"[rsa][message][id1]" => "133019:02"
					"[event][categoryid]" => "1703010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 133019:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>><space> User <username> was not found in the database
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}>%{space} User %{username} was not found in the database" }
				id => "message-133019:01"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "User not found in database"
					"[event][id]" => "133019:01"
					"[rsa][message][id1]" => "133019:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Done Retrieving Config from Config Manager...
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Done Retrieving Config from Config Manager..." }
			id => "msgParserId113"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Done Syncing with Config Manager...
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Done Syncing with Config Manager..." }
			id => "msgParserId114"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Client process called auth_db_add_entry_async() <fld13>
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Client process called auth_db_add_entry_async() %{fld13}" }
			id => "msgParserId115"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId116
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Client process called auth_db_update_entry_async() <fld13>
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Client process called auth_db_update_entry_async() %{fld13}" }
			id => "msgParserId116"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId117
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Client process called auth_db_query_db_async() <fld13>
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Client process called auth_db_query_db_async() %{fld13}" }
			id => "msgParserId117"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId118
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13> Sending PAPI message to <fld15> <fld14> <dmacaddr>
	else if [logstash][msgparser][id] == "msgParserId118" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13} Sending PAPI message to %{fld15} %{fld14} %{dmacaddr}" }
			id => "msgParserId118"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId119
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Querying switch IP
	else if [logstash][msgparser][id] == "msgParserId119" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Querying switch IP" }
			id => "msgParserId119"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  <fld3> Received switchip response <fld4>
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  %{fld3} Received switchip response %{fld4}" }
			id => "msgParserId120"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId121
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Querying master IP
	else if [logstash][msgparser][id] == "msgParserId121" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Querying master IP" }
			id => "msgParserId121"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId122
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Received master IP respons <fld3>, switch role <fld4>. Old IP <fld5>, old switch role <fld6>
	else if [logstash][msgparser][id] == "msgParserId122" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Received master IP respons %{fld3}, switch role %{fld4}. Old IP %{fld5}, old switch role %{fld6}" }
			id => "msgParserId122"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId123
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> CPSec database sync started 
	else if [logstash][msgparser][id] == "msgParserId123" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> CPSec database sync started" }
			id => "msgParserId123"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Querying local switch list
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Querying local switch list" }
			id => "msgParserId124"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Initializing db_sync internal parameters.
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Initializing db_sync internal parameters." }
			id => "msgParserId125"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId126
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Cluster role changing from <fld3> to <fld4> time <fld5>
	else if [logstash][msgparser][id] == "msgParserId126" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Cluster role changing from %{fld3} to %{fld4} time %{fld5}" }
			id => "msgParserId126"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId127
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Received cluster role change magic <fld3> role <fld4> time <fld5>
	else if [logstash][msgparser][id] == "msgParserId127" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Received cluster role change magic %{fld3} role %{fld4} time %{fld5}" }
			id => "msgParserId127"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "199802" {
		# MESSAGE 199802:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <fld3>, <fld4>:<fld5>: <result> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<fld3>[^,]*),[\s]+(?<fld4>[^:]*):(?<fld5>[^:]*):[\s]+(?<result>[^\s]*)[\s]+$" }
				id => "message-199802:01"
				add_field => {
					"[event][id]" => "199802:01"
					"[rsa][message][id1]" => "199802:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 199802:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <fld3>, <fld4>:<fld5>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> %{fld3}, %{fld4}:%{fld5}: %{result}" }
				id => "message-199802:02"
				add_field => {
					"[event][id]" => "199802:02"
					"[rsa][message][id1]" => "199802:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId130
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  Failed to receive frame on socket <fld3>, errno <result>, addr <fld5>
	else if [logstash][msgparser][id] == "msgParserId130" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Failed[\s]+to[\s]+receive[\s]+frame[\s]+on[\s]+socket[\s]+(?<fld3>[^,]*),[\s]+errno[\s]+(?<result>[^,]*),[\s]+addr[\s]+(?<fld5>.*)$" }
			id => "msgParserId130"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId131
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Interface change detected
	else if [logstash][msgparser][id] == "msgParserId131" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Interface[\s]+change[\s]+detected$" }
			id => "msgParserId131"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "202007" {
		# MESSAGE 202007:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Backing up lease file to flash.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Backing up lease file to flash." }
				id => "message-202007:01"
				add_field => {
					"[event][id]" => "202007:01"
					"[rsa][message][id1]" => "202007:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 202007:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Backing up lease file to flash.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Backing[\s]+up[\s]+lease[\s]+file[\s]+to[\s]+flash\.$" }
				id => "message-202007:02"
				add_field => {
					"[event][id]" => "202007:02"
					"[rsa][message][id1]" => "202007:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId134
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Using lease file from flash.
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Using lease file from flash." }
			id => "msgParserId134"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| set domain to <domain>
	else if [logstash][msgparser][id] == "msgParserId135" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+set[\s]+domain[\s]+to[\s]+(?<domain>.*)$" }
			id => "msgParserId135"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| set dns to <fld12> ...
	else if [logstash][msgparser][id] == "msgParserId136" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+set[\s]+dns[\s]+to[\s]+(?<fld12>[^\s]*)[\s]+\.\.\.$" }
			id => "msgParserId136"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId137
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| set netbios to <fld8> ...
	else if [logstash][msgparser][id] == "msgParserId137" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+set[\s]+netbios[\s]+to[\s]+(?<fld8>[^\s]*)[\s]+\.\.\.$" }
			id => "msgParserId137"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "202038" {
		# MESSAGE 202038:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  set router to <fld3>...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  set router to %{fld3}..." }
				id => "message-202038:01"
				add_field => {
					"[event][id]" => "202038:01"
					"[rsa][message][id1]" => "202038:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 202038:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| set router to <fld8> ...
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+set[\s]+router[\s]+to[\s]+(?<fld8>[^\s]*)[\s]+\.\.\.$" }
				id => "message-202038:02"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "202038:02"
					"[rsa][message][id1]" => "202038:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "202042" {
		# MESSAGE 202042:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  set lease to <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  set lease to %{fld13}" }
				id => "message-202042:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "202042:01"
					"[rsa][message][id1]" => "202042:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 202042:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| set lease to <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+set[\s]+lease[\s]+to[\s]+(?<fld13>.*)$" }
				id => "message-202042:02"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "202042:02"
					"[rsa][message][id1]" => "202042:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "202044" {
		# MESSAGE 202044:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  ip=<fld3>, mask=<mask>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  ip=%{fld3}, mask=%{mask}" }
				id => "message-202044:01"
				add_field => {
					"[event][id]" => "202044:01"
					"[rsa][message][id1]" => "202044:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 202044:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| ip=<fld8>, mask=<mask>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+ip=(?<fld8>[^,]*),[\s]+mask=(?<mask>.*)$" }
				id => "message-202044:02"
				add_field => {
					"[event][id]" => "202044:02"
					"[rsa][message][id1]" => "202044:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> Initialized DHCPD PAPI Messaging.
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> Initialized DHCPD PAPI Messaging." }
			id => "msgParserId144"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId145
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <fld12>: ker_mac <fld13> pkt_mac <fld14> cip <saddr>
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{fld12}: ker_mac %{fld13} pkt_mac %{fld14} cip %{saddr}" }
			id => "msgParserId145"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId146
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| { Could Not Find Interface And/Or Vlan For Ip= | Could not find interface and/or vlan for ip= } <saddr>, <result>.
	else if [logstash][msgparser][id] == "msgParserId146" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+([\s]*Could[\s]+Not[\s]+Find[\s]+Interface[\s]+And/Or[\s]+Vlan[\s]+For[\s]+Ip=[\s]+|[\s]*Could[\s]+not[\s]+find[\s]+interface[\s]+and/or[\s]+vlan[\s]+for[\s]+ip=[\s]+)[\s]+(?<saddr>[^,]*),[\s]+(?<result>[^\.]*)\.$" }
			id => "msgParserId146"
			add_field => {
				"event_description" => "Could Not Find Interface Or Vlan For Ip"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId147
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| { Dhcprelay: Dev= | dhcprelay: dev= } <interface>, { Length= | length= }<dclass_counter1>, {From_Port= | from_port= } <network_port>, { Op= | op= } <fld3>, { Giaddr= | giaddr= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId147" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+([\s]*Dhcprelay:[\s]+Dev=[\s]+|[\s]*dhcprelay:[\s]+dev=[\s]+)[\s]+(?<interface>[^,]*),[\s]+([\s]*Length=[\s]+|[\s]*length=[\s]+)(?<dclass_counter1>[^,]*),[\s]+(From_Port=[\s]+|[\s]*from_port=[\s]+)[\s]+(?<network_port>[^,]*),[\s]+([\s]*Op=[\s]+|[\s]*op=[\s]+)[\s]+(?<fld3>[^,]*),[\s]+([\s]*Giaddr=[\s]+|[\s]*giaddr=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId147"
			add_field => {
				"event_description" => "Dhcprelay"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| { Dropping Packet Without Our Giaddr= | dropping packet without our giaddr= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId148" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+([\s]*Dropping[\s]+Packet[\s]+Without[\s]+Our[\s]+Giaddr=[\s]+|[\s]*dropping[\s]+packet[\s]+without[\s]+our[\s]+giaddr=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId148"
			add_field => {
				"event_description" => "Dropping Packet Without Our Giaddr"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId149
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| { Got <dclass_counter1> Relay Servers | got <dclass_counter1> relay servers }
	else if [logstash][msgparser][id] == "msgParserId149" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+([\s]*Got[\s]+(?<dclass_counter1>[^\s]*)[\s]+Relay[\s]+Servers[\s]+|[\s]*got[\s]+(?<dclass_counter1>[^\s]*)[\s]+relay[\s]+servers[\s]+)$" }
			id => "msgParserId149"
			add_field => {
				"event_description" => "Got Relay Servers"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId150
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Relayed: { DISCOVER server=<daddr> giaddr=<saddr> MAC= | Discover Server=<daddr> Giaddr=<saddr> Mac= } <macaddr>
	else if [logstash][msgparser][id] == "msgParserId150" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Relayed:[\s]+([\s]*DISCOVER[\s]+server=(?<daddr>[^\s]*)[\s]+giaddr=(?<saddr>[^\s]*)[\s]+MAC=[\s]+|[\s]*Discover[\s]+Server=(?<daddr>[^\s]*)[\s]+Giaddr=(?<saddr>[^\s]*)[\s]+Mac=[\s]+)[\s]+(?<macaddr>.*)$" }
			id => "msgParserId150"
			add_field => {
				"event_description" => "Relayed - Discover Server"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId151
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { DISCOVER | Discover } <macaddr>
	else if [logstash][msgparser][id] == "msgParserId151" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*DISCOVER[\s]+|[\s]*Discover[\s]+)[\s]+(?<macaddr>.*)$" }
			id => "msgParserId151"
			add_field => {
				"event_description" => "VLAN Discovery"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId152
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { REQUEST <smacaddr> reqIP= | Request <smacaddr> Reqip= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId152" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*REQUEST[\s]+(?<smacaddr>[^\s]*)[\s]+reqIP=[\s]+|[\s]*Request[\s]+(?<smacaddr>[^\s]*)[\s]+Reqip=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId152"
			add_field => {
				"event_description" => "VLAN Request"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId153
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { RELEASE <smacaddr> clientIP= | Release <smacaddr> Clientip= }<saddr>
	else if [logstash][msgparser][id] == "msgParserId153" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*RELEASE[\s]+(?<smacaddr>[^\s]*)[\s]+clientIP=[\s]+|[\s]*Release[\s]+(?<smacaddr>[^\s]*)[\s]+Clientip=[\s]+)(?<saddr>.*)$" }
			id => "msgParserId153"
			add_field => {
				"event_description" => "VLAN Release"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId154
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| { Received Dhcp Packet From Datpath, | Received DHCP packet from Datpath, } <info> { Src Mac | src mac } <smacaddr>
	else if [logstash][msgparser][id] == "msgParserId154" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+([\s]*Received[\s]+Dhcp[\s]+Packet[\s]+From[\s]+Datpath,[\s]+|[\s]*Received[\s]+DHCP[\s]+packet[\s]+from[\s]+Datpath,[\s]+)[\s]+(?<info>[^\s]*)[\s]+([\s]*Src[\s]+Mac[\s]+|[\s]*src[\s]+mac[\s]+)[\s]+(?<smacaddr>.*)$" }
			id => "msgParserId154"
			add_field => {
				"event_description" => "Received Dhcp Packet From Datpath"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId155
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { INFORM <smacaddr> clientIP= | Inform <smacaddr> Clientip= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId155" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*INFORM[\s]+(?<smacaddr>[^\s]*)[\s]+clientIP=[\s]+|[\s]*Inform[\s]+(?<smacaddr>[^\s]*)[\s]+Clientip=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId155"
			add_field => {
				"event_description" => "VLAN Inform"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { ACK <smacaddr> clientIP= | Ack <smacaddr> Clientip= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId156" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*ACK[\s]+(?<smacaddr>[^\s]*)[\s]+clientIP=[\s]+|[\s]*Ack[\s]+(?<smacaddr>[^\s]*)[\s]+Clientip=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId156"
			add_field => {
				"event_description" => "VLAN Ack"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId157
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { OFFER <smacaddr> clientIP= | Offer <smacaddr> Clientip= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId157" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*OFFER[\s]+(?<smacaddr>[^\s]*)[\s]+clientIP=[\s]+|[\s]*Offer[\s]+(?<smacaddr>[^\s]*)[\s]+Clientip=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId157"
			add_field => {
				"event_description" => "VLAN Offer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId158
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |<process>| <fld2>|<protocol>| Datapath <vlan>: { NAK <smacaddr> clientIP= | Nak <smacaddr> Clientip= } <saddr>
	else if [logstash][msgparser][id] == "msgParserId158" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(?<process>[^\|]*)\|[\s]+(?<fld2>[^\|]*)\|(?<protocol>[^\|]*)\|[\s]+Datapath[\s]+(?<vlan>[^:]*):[\s]+([\s]*NAK[\s]+(?<smacaddr>[^\s]*)[\s]+clientIP=[\s]+|[\s]*Nak[\s]+(?<smacaddr>[^\s]*)[\s]+Clientip=[\s]+)[\s]+(?<saddr>.*)$" }
			id => "msgParserId158"
			add_field => {
				"event_description" => "VLAN Nak"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId159
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Added IP multicast group (<fld3>, <fld4>)
	else if [logstash][msgparser][id] == "msgParserId159" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Added IP multicast group (%{fld3}, %{fld4})" }
			id => "msgParserId159"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId160
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Deleted IP multicast group (<fld3>, <fld4>)
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Deleted IP multicast group (%{fld3}, %{fld4})" }
			id => "msgParserId160"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId161
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Added IP multicast <fld3> member <fld4> to group (<fld5>, <fld6>)
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Added IP multicast %{fld3} member %{fld4} to group (%{fld5}, %{fld6})" }
			id => "msgParserId161"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId162
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Removed IP multicast member <fld3> from group (<fld4>, <fld5>)
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Removed IP multicast member %{fld3} from group (%{fld4}, %{fld5})" }
			id => "msgParserId162"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId163
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Added IP multicast interface with VLAN <vlan> and address <fld4>
	else if [logstash][msgparser][id] == "msgParserId163" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Added IP multicast interface with VLAN %{vlan} and address %{fld4}" }
			id => "msgParserId163"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Removed IP multicast interface with VLAN <vlan> and address <fld13>
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Removed IP multicast interface with VLAN %{vlan} and address %{fld13}" }
			id => "msgParserId164"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId165
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Changing the vlan <vlan> state to <event_state> from <fld13>
	else if [logstash][msgparser][id] == "msgParserId165" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Changing the vlan %{vlan} state to %{event_state} from %{fld13}" }
			id => "msgParserId165"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId166
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Vlan interface <fld13> state is <event_state>
	else if [logstash][msgparser][id] == "msgParserId166" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Vlan interface %{fld13} state is %{event_state}" }
			id => "msgParserId166"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "208008" {
		# MESSAGE 208008:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  No change in the Vlan Interface <vlan> state <event_state> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  No change in the Vlan Interface %{vlan} state %{event_state} %{result}" }
				id => "message-208008:01"
				add_field => {
					"[event][id]" => "208008:01"
					"[rsa][message][id1]" => "208008:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 208008:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| No change in the Vlan Interface <vlan> state <event_state> <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+No[\s]+change[\s]+in[\s]+the[\s]+Vlan[\s]+Interface[\s]+(?<vlan>[^\s]*)[\s]+state[\s]+(?<event_state>[^\s]*)[\s]+(?<result>.*)$" }
				id => "message-208008:02"
				add_field => {
					"[event][id]" => "208008:02"
					"[rsa][message][id1]" => "208008:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "209800" {
		# MESSAGE 209800:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Physical link up: port <network_port>, <fld5> duplex, speed <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Physical link up: port %{network_port}, %{fld5} duplex, speed %{fld6}" }
				id => "message-209800:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "209800:01"
					"[rsa][message][id1]" => "209800:01"
					"[event][categoryid]" => "1701060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 209800:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Physical link up: port "<network_port>," <fld11> speed <fld12>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Physical[\s]+link[\s]+up:[\s]+port[\s]+\"(?<network_port>[^,]*),\"[\s]+(?<fld11>[^\s]*)[\s]+speed[\s]+(?<fld12>.*)$" }
				id => "message-209800:02"
				add_field => {
					"[event][id]" => "209800:02"
					"[rsa][message][id1]" => "209800:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "209801" {
		# MESSAGE 209801:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Physical link down: port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Physical link down: port %{network_port}" }
				id => "message-209801:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "209801:01"
					"[rsa][message][id1]" => "209801:01"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 209801:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Physical link down: port <network_port>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Physical[\s]+link[\s]+down:[\s]+port[\s]+(?<network_port>.*)$" }
				id => "message-209801:02"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "209801:02"
					"[rsa][message][id1]" => "209801:02"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "300002" {
		# MESSAGE 300002:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Mobile IP service is disabled at line <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Mobile IP service is disabled at line %{fld3}" }
				id => "message-300002:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "300002:01"
					"[rsa][message][id1]" => "300002:01"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 300002:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Mobile IP service is disabled at line <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Mobile[\s]+IP[\s]+service[\s]+is[\s]+disabled[\s]+at[\s]+line[\s]+(?<fld13>.*)$" }
				id => "message-300002:02"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "300002:02"
					"[rsa][message][id1]" => "300002:02"
					"[event][categoryid]" => "1701070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "300003" {
		# MESSAGE 300003:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Mobile IP service initialization complete!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Mobile IP service initialization complete!" }
				id => "message-300003:01"
				add_field => {
					"[event][id]" => "300003:01"
					"[rsa][message][id1]" => "300003:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 300003:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Mobile IP service initialization complete!
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Mobile[\s]+IP[\s]+service[\s]+initialization[\s]+complete!$" }
				id => "message-300003:02"
				add_field => {
					"[event][id]" => "300003:02"
					"[rsa][message][id1]" => "300003:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId177
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> Unexpected mobileip runtime error at mip_proxy_auth_dnat_msg, <result>
	else if [logstash][msgparser][id] == "msgParserId177" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} Unexpected mobileip runtime error at mip_proxy_auth_dnat_msg, %{result}" }
			id => "msgParserId177"
			add_field => {
				"event_description" => "Unexpected mobileip runtime error at mip_proxy_auth_dnat_msg"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId178
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Mobileip at <fld3>, <fld4>: <info>
	else if [logstash][msgparser][id] == "msgParserId178" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Mobileip at %{fld3}, %{fld4}: %{info}" }
			id => "msgParserId178"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId179
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Licenses will expire in <fld15> days
	else if [logstash][msgparser][id] == "msgParserId179" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Licenses[\s]+will[\s]+expire[\s]+in[\s]+(?<fld15>[^\s]*)[\s]+days$" }
			id => "msgParserId179"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId180
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  License limit constrained to maximum (<fld3>) for <fld4>
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  License limit constrained to maximum (%{fld3}) for %{fld4}" }
			id => "msgParserId180"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId181
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld3>: Model number does not match: key <fld4>; system <fld5>
	else if [logstash][msgparser][id] == "msgParserId181" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld3}: Model number does not match: key %{fld4}; system %{fld5}" }
			id => "msgParserId181"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId182
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld3>: Key already present, dropping the cmd
	else if [logstash][msgparser][id] == "msgParserId182" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld3}: Key already present, dropping the cmd" }
			id => "msgParserId182"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "301134" {
		# MESSAGE 301134
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  <fld23> SNMP V3 Message parse Error: Not in life time window failure:<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<fld23>[^\s]*)[\s]+SNMP[\s]+V3[\s]+Message[\s]+parse[\s]+Error:[\s]+Not[\s]+in[\s]+life[\s]+time[\s]+window[\s]+failure:(?<result>.*)$" }
				id => "message-301134"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "301134"
					"[rsa][message][id1]" => "301134"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 301134:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>>  SNMP <version> <fld3>: <event_description>: <fld21>. <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}>  SNMP %{version} %{fld3}: %{event_description}: %{fld21}. %{fld9}" }
				id => "message-301134:01"
				add_field => {
					"[event][id]" => "301134:01"
					"[rsa][message][id1]" => "301134:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId184
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  Illegal <fld23> in the request <fld3>
	else if [logstash][msgparser][id] == "msgParserId184" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Illegal[\s]+(?<fld23>[^\s]*)[\s]+in[\s]+the[\s]+request[\s]+(?<fld3>.*)$" }
			id => "msgParserId184"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId185
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Unable to transition to new MMS server <fld8>: Mobility server not configured.
	else if [logstash][msgparser][id] == "msgParserId185" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Unable[\s]+to[\s]+transition[\s]+to[\s]+new[\s]+MMS[\s]+server[\s]+(?<fld8>[^:]*):[\s]+Mobility[\s]+server[\s]+not[\s]+configured\.$" }
			id => "msgParserId185"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "303022" {
		# MESSAGE 303022:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> | {AP <macaddr>@<hostip> <process> | <process>}| <space> Reboot Reason: { AP rebooted <event_time_string>: DHCP timed out | AP rebooted <event_time_string> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|[\s]+(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+Reboot[\s]+Reason:[\s]+([\s]*AP[\s]+rebooted[\s]+(?<event_time_string>[^:]*):[\s]+DHCP[\s]+timed[\s]+out[\s]+|[\s]*AP[\s]+rebooted[\s]+(?<event_time_string>[^\s]*)[\s]+)$" }
				id => "message-303022:01"
				add_field => {
				"event_description" => "AP Rebooted"
				"result" => "DHCP timed out"
					"[event][id]" => "303022:01"
					"[rsa][message][id1]" => "303022:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 303022:02
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>> <space> Reboot Reason: AP rebooted <event_time_string>: DHCP timed out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}> %{space} Reboot Reason: AP rebooted %{event_time_string}: DHCP timed out" }
				id => "message-303022:02"
				add_field => {
				"event_description" => "AP Rebooted"
				"result" => "DHCP timed out"
					"[event][id]" => "303022:02"
					"[rsa][message][id1]" => "303022:02"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 303022:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>|  Reboot Reason: <result>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}|  Reboot Reason: %{result}." }
				id => "message-303022:03"
				add_field => {
					"[event][id]" => "303022:03"
					"[rsa][message][id1]" => "303022:03"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| No core file found for process <fld11>
	else if [logstash][msgparser][id] == "msgParserId189" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+No[\s]+core[\s]+file[\s]+found[\s]+for[\s]+process[\s]+(?<fld11>.*)$" }
			id => "msgParserId189"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId190
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Process <fld11>: crash data saved in dir <directory>
	else if [logstash][msgparser][id] == "msgParserId190" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Process[\s]+(?<fld11>[^:]*):[\s]+crash[\s]+data[\s]+saved[\s]+in[\s]+dir[\s]+(?<directory>.*)$" }
			id => "msgParserId190"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId191
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Low free space on RAM disk: <fld11> lower than <fld12> will clean up crash data
	else if [logstash][msgparser][id] == "msgParserId191" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Low[\s]+free[\s]+space[\s]+on[\s]+RAM[\s]+disk:[\s]+(?<fld11>[^\s]*)[\s]+lower[\s]+than[\s]+(?<fld12>[^\s]*)[\s]+will[\s]+clean[\s]+up[\s]+crash[\s]+data$" }
			id => "msgParserId191"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId192
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| After cleaning cores free disk space is <fld12>
	else if [logstash][msgparser][id] == "msgParserId192" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+After[\s]+cleaning[\s]+cores[\s]+free[\s]+disk[\s]+space[\s]+is[\s]+(?<fld12>.*)$" }
			id => "msgParserId192"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId193
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Process <fld11> died: exited with <resultcode>
	else if [logstash][msgparser][id] == "msgParserId193" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Process[\s]+(?<fld11>[^\s]*)[\s]+died:[\s]+exited[\s]+with[\s]+(?<resultcode>.*)$" }
			id => "msgParserId193"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId194
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Restarted process <fld11>, new pid <fld12>
	else if [logstash][msgparser][id] == "msgParserId194" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Restarted[\s]+process[\s]+(?<fld11>[^,]*),[\s]+new[\s]+pid[\s]+(?<fld12>.*)$" }
			id => "msgParserId194"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId195
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Please tar and email the file <filename> to <to>
	else if [logstash][msgparser][id] == "msgParserId195" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Please[\s]+tar[\s]+and[\s]+email[\s]+the[\s]+file[\s]+(?<filename>[^\s]*)[\s]+to[\s]+(?<to>.*)$" }
			id => "msgParserId195"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId196
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| To tar type the following commands at the Command Line Interface: (1) tar crash (2) copy flash: crash.tar tftp: [<daddr>] [<filename>]
	else if [logstash][msgparser][id] == "msgParserId196" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+To[\s]+tar[\s]+type[\s]+the[\s]+following[\s]+commands[\s]+at[\s]+the[\s]+Command[\s]+Line[\s]+Interface:[\s]+\(1\)[\s]+tar[\s]+crash[\s]+\(2\)[\s]+copy[\s]+flash:[\s]+crash\.tar[\s]+tftp:[\s]+\[(?<daddr>[^\]]*)\][\s]+\[(?<filename>[^\]]*)\]$" }
			id => "msgParserId196"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "303085" {
		# MESSAGE 303085:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Process Manager (nanny) shutting down - Machine will reboot!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Process Manager (nanny) shutting down - Machine will reboot!" }
				id => "message-303085:01"
				add_field => {
					"[event][id]" => "303085:01"
					"[rsa][message][id1]" => "303085:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 303085:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Process Manager (nanny) shutting down - Machine will reboot!
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Process[\s]+Manager[\s]+\(nanny\)[\s]+shutting[\s]+down[\s]+\-[\s]+Machine[\s]+will[\s]+reboot!$" }
				id => "message-303085:02"
				add_field => {
					"[event][id]" => "303085:02"
					"[rsa][message][id1]" => "303085:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId198
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  enet_move_tunnel: Tunnel <fld5> not found
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  enet_move_tunnel: Tunnel %{fld5} not found" }
			id => "msgParserId198"
			add_field => {
				"event_description" => "Tunnel not found"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "303086" {
		# MESSAGE 303086:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Process Manager (nanny) shutting down - AP will reboot!
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Process[\s]+Manager[\s]+\(nanny\)[\s]+shutting[\s]+down[\s]+\-[\s]+AP[\s]+will[\s]+reboot!$" }
				id => "message-303086:01"
				add_field => {
					"[event][id]" => "303086:01"
					"[rsa][message][id1]" => "303086:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 303086:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Process Manager (nanny) shutting down - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Process Manager (nanny) shutting down - %{info}" }
				id => "message-303086:02"
				add_field => {
					"[event][id]" => "303086:02"
					"[rsa][message][id1]" => "303086:02"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId202
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Unexpected stm (Station management) runtime error at <fld3>, <fld4>, <fld5>: <info>
	else if [logstash][msgparser][id] == "msgParserId202" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Unexpected stm (Station management) runtime error at %{fld3}, %{fld4}, %{fld5}: %{info}" }
			id => "msgParserId202"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId203
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  IGMP Join Tx - <fld3>
	else if [logstash][msgparser][id] == "msgParserId203" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  IGMP Join Tx - %{fld3}" }
			id => "msgParserId203"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId204
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> stop_signal - <info>
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> stop_signal - %{info}" }
			id => "msgParserId204"
			add_field => {
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId205
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  PAPI_Send failed: <fld3> from <fld4> to <fld5>:<fld6> len <fld7> type <fld8>
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  PAPI_Send failed: %{fld3} from %{fld4} to %{fld5}:%{fld6} len %{fld7} type %{fld8}" }
			id => "msgParserId205"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId206
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <access_point> is <event_state>
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{access_point} is %{event_state}" }
			id => "msgParserId206"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "305006" {
		# MESSAGE 305006:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AP <access_point> rebooted
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+rebooted$" }
				id => "message-305006:01"
				add_field => {
					"[event][id]" => "305006:01"
					"[rsa][message][id1]" => "305006:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 305006:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <access_point> rebooted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{access_point} rebooted" }
				id => "message-305006:02"
				add_field => {
					"[event][id]" => "305006:02"
					"[rsa][message][id1]" => "305006:02"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId209
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <access_point> image version mismatch.
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{access_point} image version mismatch." }
			id => "msgParserId209"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId210
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <access_point> upgrading flash image.
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{access_point} upgrading flash image." }
			id => "msgParserId210"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "305011" {
		# MESSAGE 305011:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AP <access_point> rebooting.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+rebooting\.$" }
				id => "message-305011:01"
				add_field => {
					"[event][id]" => "305011:01"
					"[rsa][message][id1]" => "305011:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 305011:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <access_point> rebooting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{access_point} rebooting." }
				id => "message-305011:02"
				add_field => {
					"[event][id]" => "305011:02"
					"[rsa][message][id1]" => "305011:02"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId213
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Dropping unsecure AP message code <fld13> from AP at <hostip> (MAC address <macaddr>)
	else if [logstash][msgparser][id] == "msgParserId213" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Dropping unsecure AP message code %{fld13} from AP at %{hostip} (MAC address %{macaddr})" }
			id => "msgParserId213"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId214
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Unsecure AP "<fld13>" (MAC <macaddr>, IP <hostip>) has been denied access because Control Plane Security is enabled and the AP is not approved.
	else if [logstash][msgparser][id] == "msgParserId214" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Unsecure AP \"%{fld13}\" (MAC %{macaddr}, IP %{hostip}) has been denied access because Control Plane Security is enabled and the AP is not approved." }
			id => "msgParserId214"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId215
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  VPN license <action> VIA license <fld4> IPSEC AP license <fld5>
	else if [logstash][msgparser][id] == "msgParserId215" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  VPN license %{action} VIA license %{fld4} IPSEC AP license %{fld5}" }
			id => "msgParserId215"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId216
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> IKE Daemon synced with fpapps...
	else if [logstash][msgparser][id] == "msgParserId216" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> IKE Daemon synced with fpapps..." }
			id => "msgParserId216"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId217
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Publish service '<service>', object len <fld13>
	else if [logstash][msgparser][id] == "msgParserId217" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Publish service '%{service}', object len %{fld13}" }
			id => "msgParserId217"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId218
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Publish service "<fld11>," object len <fld12> to module <fld13>
	else if [logstash][msgparser][id] == "msgParserId218" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Publish[\s]+service[\s]+\"(?<fld11>[^,]*),\"[\s]+object[\s]+len[\s]+(?<fld12>[^\s]*)[\s]+to[\s]+module[\s]+(?<fld13>.*)$" }
			id => "msgParserId218"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId219
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| received subscription message from <fld11> for service '<service>'
	else if [logstash][msgparser][id] == "msgParserId219" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+received[\s]+subscription[\s]+message[\s]+from[\s]+(?<fld11>[^\s]*)[\s]+for[\s]+service[\s]+'(?<service>[^']*)'$" }
			id => "msgParserId219"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId220
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Forward subscribe request from <fld11> to <fld12> (service '<service>')
	else if [logstash][msgparser][id] == "msgParserId220" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Forward[\s]+subscribe[\s]+request[\s]+from[\s]+(?<fld11>[^\s]*)[\s]+to[\s]+(?<fld12>[^\s]*)[\s]+\(service[\s]+'(?<service>[^']*)'\)$" }
			id => "msgParserId220"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId221
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Dropping message from <fld3> for service '<fld4> (service not found)'
	else if [logstash][msgparser][id] == "msgParserId221" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Dropping message from %{fld3} for service '%{fld4} (service not found)'" }
			id => "msgParserId221"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "306512" {
		# MESSAGE 306512:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Publish message from <fld13> to <fld14> (service '<service>')
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Publish message from %{fld13} to %{fld14} (service '%{service}')" }
				id => "message-306512:01"
				add_field => {
					"[event][id]" => "306512:01"
					"[rsa][message][id1]" => "306512:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 306512:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Publish message from <fld13> to <fld23> (service '<service>')
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Publish[\s]+message[\s]+from[\s]+(?<fld13>[^\s]*)[\s]+to[\s]+(?<fld23>[^\s]*)[\s]+\(service[\s]+'(?<service>[^']*)'\)$" }
				id => "message-306512:02"
				add_field => {
					"[event][id]" => "306512:02"
					"[rsa][message][id1]" => "306512:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId224
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Pubsub send message code <fld13> source port <sport> to destination port <dport> failed, errno <result>
	else if [logstash][msgparser][id] == "msgParserId224" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Pubsub send message code %{fld13} source port %{sport} to destination port %{dport} failed, errno %{result}" }
			id => "msgParserId224"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "306602" {
		# MESSAGE 306602
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Changing the logging level for <fld13> facilities
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Changing the logging level for %{fld13} facilities" }
				id => "message-306602"
				add_field => {
					"[event][id]" => "306602"
					"[rsa][message][id1]" => "306602"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 306602:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>|  Changing the logging level for <fld13> facilities
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}|  Changing the logging level for %{fld13} facilities" }
				id => "message-306602:01"
				add_field => {
					"[event][id]" => "306602:01"
					"[rsa][message][id1]" => "306602:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId227
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| Cannot heartbeat with the master 
	else if [logstash][msgparser][id] == "msgParserId227" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+Cannot[\s]+heartbeat[\s]+with[\s]+the[\s]+master[\s]+$" }
			id => "msgParserId227"
			add_field => {
				"event_description" => "Cannot heartbeat with the master"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId228
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  dbsync: Received message from WMS in unexpected state (<fld3>); <info>
	else if [logstash][msgparser][id] == "msgParserId228" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+dbsync:[\s]+Received[\s]+message[\s]+from[\s]+WMS[\s]+in[\s]+unexpected[\s]+state[\s]+\((?<fld3>[^\)]*)\);[\s]+(?<info>.*)$" }
			id => "msgParserId228"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId229
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  dbsync: <result> (state= <fld3>)\n 
	else if [logstash][msgparser][id] == "msgParserId229" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+dbsync:[\s]+(?<result>[^\s]*)[\s]+\(state=[\s]+(?<fld3>[^\)]*)\)\\n[\s]+$" }
			id => "msgParserId229"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "311002" {
		# MESSAGE 311002:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Rebooting: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Rebooting:[\s]+(?<result>.*)$" }
				id => "message-311002:01"
				add_field => {
					"[event][id]" => "311002:01"
					"[rsa][message][id1]" => "311002:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 311002:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Rebooting: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Rebooting:[\s]+(?<result>.*)$" }
				id => "message-311002:02"
				add_field => {
					"[event][id]" => "311002:02"
					"[rsa][message][id1]" => "311002:02"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 311002:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Rebooting: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Rebooting: %{result}" }
				id => "message-311002:03"
				add_field => {
					"[event][id]" => "311002:03"
					"[rsa][message][id1]" => "311002:03"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 311002:04
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  <fld50>: SAPD: <event_description> cert_cap=1. <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  %{fld50}: SAPD: %{event_description} cert_cap=1. %{result}" }
				id => "message-311002:04"
				add_field => {
					"[event][id]" => "311002:04"
					"[rsa][message][id1]" => "311002:04"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId233
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AP could not boot from flash -- bad checksum
	else if [logstash][msgparser][id] == "msgParserId233" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AP[\s]+could[\s]+not[\s]+boot[\s]+from[\s]+flash[\s]+\-\-[\s]+bad[\s]+checksum$" }
			id => "msgParserId233"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "311020" {
		# MESSAGE 311020:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2>|<fld2>}| An internal system error has occurred at file <filename> function <fld4> line <fld5> error <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\|]*)|(?<fld2>[^\|]*))\|[\s]+An[\s]+internal[\s]+system[\s]+error[\s]+has[\s]+occurred[\s]+at[\s]+file[\s]+(?<filename>[^\s]*)[\s]+function[\s]+(?<fld4>[^\s]*)[\s]+line[\s]+(?<fld5>[^\s]*)[\s]+error[\s]+(?<result>.*)$" }
				id => "message-311020:01"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "311020:01"
					"[rsa][message][id1]" => "311020:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 311020:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  An internal system error has occurred at file <filename> function <fld4> line <fld5> error <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  An internal system error has occurred at file %{filename} function %{fld4} line %{fld5} error %{result}" }
				id => "message-311020:02"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "311020:02"
					"[rsa][message][id1]" => "311020:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 311020:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  An internal system error has occurred at file <filename> function <fld4> line <fld5> error <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  An internal system error has occurred at file %{filename} function %{fld4} line %{fld5} error %{result}" }
				id => "message-311020:03"
				add_field => {
					"[event][id]" => "311020:03"
					"[rsa][message][id1]" => "311020:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId236
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Received STOP signal, exiting 
	else if [logstash][msgparser][id] == "msgParserId236" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Received STOP signal, exiting" }
			id => "msgParserId236"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "312100" {
		# MESSAGE 312100:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Received STOP signal, exiting 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Received STOP signal, exiting" }
				id => "message-312100:01"
				add_field => {
					"[event][id]" => "312100:01"
					"[rsa][message][id1]" => "312100:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 312100:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Stopping WMS modules
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Stopping[\s]+WMS[\s]+modules$" }
				id => "message-312100:02"
				add_field => {
					"[event][id]" => "312100:02"
					"[rsa][message][id1]" => "312100:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "312101" {
		# MESSAGE 312101:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> ESI is ready
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> ESI is ready" }
				id => "message-312101:01"
				add_field => {
					"[event][id]" => "312101:01"
					"[rsa][message][id1]" => "312101:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 312101:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| ESI is ready
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+ESI[\s]+is[\s]+ready$" }
				id => "message-312101:02"
				add_field => {
					"[event][id]" => "312101:02"
					"[rsa][message][id1]" => "312101:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId240
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Request to create Vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId240" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Request to create Vlan %{vlan}" }
			id => "msgParserId240"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId241
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Adding Tunnel <fld13> to Vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId241" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Adding Tunnel %{fld13} to Vlan %{vlan}" }
			id => "msgParserId241"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId242
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Tunnel <fld13> already present in the vlan interface <vlan>
	else if [logstash][msgparser][id] == "msgParserId242" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Tunnel %{fld13} already present in the vlan interface %{vlan}" }
			id => "msgParserId242"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "313029" {
		# MESSAGE 313029:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Removing Tunnel <fld12> from Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Removing Tunnel %{fld12} from Vlan %{vlan}" }
				id => "message-313029:01"
				add_field => {
					"[event][id]" => "313029:01"
					"[rsa][message][id1]" => "313029:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 313029:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Removing Tunnel <fld11> from Vlan <vlan>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Removing[\s]+Tunnel[\s]+(?<fld11>[^\s]*)[\s]+from[\s]+Vlan[\s]+(?<vlan>.*)$" }
				id => "message-313029:02"
				add_field => {
					"[event][id]" => "313029:02"
					"[rsa][message][id1]" => "313029:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "313037" {
		# MESSAGE 313037:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Retrieving Tunnel info for Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Retrieving Tunnel info for Vlan %{vlan}" }
				id => "message-313037:01"
				add_field => {
					"[event][id]" => "313037:01"
					"[rsa][message][id1]" => "313037:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 313037:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Retrieving Tunnel info for Vlan <vlan>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Retrieving[\s]+Tunnel[\s]+info[\s]+for[\s]+Vlan[\s]+(?<vlan>.*)$" }
				id => "message-313037:02"
				add_field => {
					"[event][id]" => "313037:02"
					"[rsa][message][id1]" => "313037:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId247
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Enabling IGMP for vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId247" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Enabling IGMP for vlan %{vlan}" }
			id => "msgParserId247"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId248
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Route Entry Successfully Inserted in Internal Route Table
	else if [logstash][msgparser][id] == "msgParserId248" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Route Entry Successfully Inserted in Internal Route Table" }
			id => "msgParserId248"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId249
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Interface is <event_state>, <info>
	else if [logstash][msgparser][id] == "msgParserId249" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Interface is %{event_state}, %{info}" }
			id => "msgParserId249"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId250
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Deleting a Route Entry 
	else if [logstash][msgparser][id] == "msgParserId250" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Deleting a Route Entry" }
			id => "msgParserId250"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId251
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Uplink status: <result>
	else if [logstash][msgparser][id] == "msgParserId251" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Uplink status: %{result}" }
			id => "msgParserId251"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId252
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Unable to initialize module: <fld13>
	else if [logstash][msgparser][id] == "msgParserId252" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Unable[\s]+to[\s]+initialize[\s]+module:[\s]+(?<fld13>.*)$" }
			id => "msgParserId252"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "316003" {
		# MESSAGE 316003:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Stopping WMS modules 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Stopping WMS modules" }
				id => "message-316003:01"
				add_field => {
					"[event][id]" => "316003:01"
					"[rsa][message][id1]" => "316003:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316003:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Destroying STA table
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Destroying[\s]+STA[\s]+table$" }
				id => "message-316003:02"
				add_field => {
					"[event][id]" => "316003:02"
					"[rsa][message][id1]" => "316003:02"
					"[event][categoryid]" => "1612000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316004" {
		# MESSAGE 316004:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Ready
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Ready" }
				id => "message-316004:01"
				add_field => {
					"[event][id]" => "316004:01"
					"[rsa][message][id1]" => "316004:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316004:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Ready
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Ready$" }
				id => "message-316004:02"
				add_field => {
					"[event][id]" => "316004:02"
					"[rsa][message][id1]" => "316004:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316018" {
		# MESSAGE 316018:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Handle Config Message: is_master <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Handle Config Message: is_master %{fld13}" }
				id => "message-316018:01"
				add_field => {
					"[event][id]" => "316018:01"
					"[rsa][message][id1]" => "316018:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316018:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Handle Config Message: is_master <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Handle[\s]+Config[\s]+Message:[\s]+is_master[\s]+(?<fld13>.*)$" }
				id => "message-316018:02"
				add_field => {
					"[event][id]" => "316018:02"
					"[rsa][message][id1]" => "316018:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId259
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <fld11>
	else if [logstash][msgparser][id] == "msgParserId259" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<fld11>.*)$" }
			id => "msgParserId259"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "316020" {
		# MESSAGE 316020:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  License Key <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  License Key %{fld13}" }
				id => "message-316020:01"
				add_field => {
					"[event][id]" => "316020:01"
					"[rsa][message][id1]" => "316020:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316020:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| License Key - <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+License[\s]+Key[\s]+\-[\s]+(?<fld13>.*)$" }
				id => "message-316020:02"
				add_field => {
					"[event][id]" => "316020:02"
					"[rsa][message][id1]" => "316020:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316021" {
		# MESSAGE 316021:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  License Key - <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  License Key - %{fld13}" }
				id => "message-316021:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "316021:01"
					"[rsa][message][id1]" => "316021:01"
					"[event][categoryid]" => "1701060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316021:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| License Key - <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+License[\s]+Key[\s]+\-[\s]+(?<fld13>.*)$" }
				id => "message-316021:02"
				add_field => {
					"[event][id]" => "316021:02"
					"[rsa][message][id1]" => "316021:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316024" {
		# MESSAGE 316024:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Set Switch IP to <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Set Switch IP to %{fld13}" }
				id => "message-316024:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "316024:01"
					"[rsa][message][id1]" => "316024:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316024:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Set Switch IP to <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Set[\s]+Switch[\s]+IP[\s]+to[\s]+(?<fld13>.*)$" }
				id => "message-316024:02"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "316024:02"
					"[rsa][message][id1]" => "316024:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316026" {
		# MESSAGE 316026:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Received mobility-manager update: IP <fld13> <fld14> Optype <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Received mobility-manager update: IP %{fld13} %{fld14} Optype %{fld15}" }
				id => "message-316026:01"
				add_field => {
					"[event][id]" => "316026:01"
					"[rsa][message][id1]" => "316026:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316026:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Received mobility-manager update: IP <fld15> Optype <fld16>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Received[\s]+mobility\-manager[\s]+update:[\s]+IP[\s]+(?<fld15>[^\s]*)[\s]+Optype[\s]+(?<fld16>.*)$" }
				id => "message-316026:02"
				add_field => {
					"[event][id]" => "316026:02"
					"[rsa][message][id1]" => "316026:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316046" {
		# MESSAGE 316046:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Received PROBE REGISTER from: IP <saddr> Type <fld4>  AP-name <access_point> Status <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Received PROBE REGISTER from: IP %{saddr} Type %{fld4}  AP-name %{access_point} Status %{event_state}" }
				id => "message-316046:01"
				add_field => {
					"[event][id]" => "316046:01"
					"[rsa][message][id1]" => "316046:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316046:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Received PROBE REGISTER from: <saddr> Type <fld13> AP-name <access_point> Status <event_state>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Received[\s]+PROBE[\s]+REGISTER[\s]+from:[\s]+(?<saddr>[^\s]*)[\s]+Type[\s]+(?<fld13>[^\s]*)[\s]+AP\-name[\s]+(?<access_point>[^\s]*)[\s]+Status[\s]+(?<event_state>.*)$" }
				id => "message-316046:02"
				add_field => {
					"[event][id]" => "316046:02"
					"[rsa][message][id1]" => "316046:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316061" {
		# MESSAGE 316061:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Destroying AP Tree 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Destroying AP Tree" }
				id => "message-316061:01"
				add_field => {
					"[event][id]" => "316061:01"
					"[rsa][message][id1]" => "316061:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316061:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Destroying STA tree
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Destroying[\s]+STA[\s]+tree$" }
				id => "message-316061:02"
				add_field => {
					"[event][id]" => "316061:02"
					"[rsa][message][id1]" => "316061:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316064" {
		# MESSAGE 316064:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Destroying AP table 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Destroying AP table" }
				id => "message-316064:01"
				add_field => {
					"[event][id]" => "316064:01"
					"[rsa][message][id1]" => "316064:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316064:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| STA Probe: Destroying AP table
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+STA[\s]+Probe:[\s]+Destroying[\s]+AP[\s]+table$" }
				id => "message-316064:02"
				add_field => {
					"[event][id]" => "316064:02"
					"[rsa][message][id1]" => "316064:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316069" {
		# MESSAGE 316069:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Ageing AP <access_point> SSID:<ssid>  phy-type:<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Ageing AP %{access_point} SSID:%{ssid}  phy-type:%{fld15}" }
				id => "message-316069:01"
				add_field => {
					"[event][id]" => "316069:01"
					"[rsa][message][id1]" => "316069:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316069:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Ageing AP <access_point> SSID:<ssid> phy-type:<fld14>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Ageing[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+SSID:(?<ssid>[^\s]*)[\s]+phy\-type:(?<fld14>.*)$" }
				id => "message-316069:02"
				add_field => {
					"[event][id]" => "316069:02"
					"[rsa][message][id1]" => "316069:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316070" {
		# MESSAGE 316070:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Ageing AP tree node BSSID <fld3> Monitor <fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Ageing[\s]+AP[\s]+tree[\s]+node[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+Monitor[\s]+(?<fld15>.*)$" }
				id => "message-316070:01"
				add_field => {
					"[event][id]" => "316070:01"
					"[rsa][message][id1]" => "316070:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316070:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Ageing AP tree node BSSID <fld3> Monitor <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Ageing AP tree node BSSID %{fld3} Monitor %{fld13}" }
				id => "message-316070:02"
				add_field => {
					"[event][id]" => "316070:02"
					"[rsa][message][id1]" => "316070:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316090" {
		# MESSAGE 316090:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Destroying STA tree 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Destroying STA tree" }
				id => "message-316090:01"
				add_field => {
					"[event][id]" => "316090:01"
					"[rsa][message][id1]" => "316090:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316090:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Destroying STA tree
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Destroying[\s]+STA[\s]+tree$" }
				id => "message-316090:02"
				add_field => {
					"[event][id]" => "316090:02"
					"[rsa][message][id1]" => "316090:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316091" {
		# MESSAGE 316091:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> STA Probe: Deleting Table 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> STA Probe: Deleting Table" }
				id => "message-316091:01"
				add_field => {
					"[event][id]" => "316091:01"
					"[rsa][message][id1]" => "316091:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316091:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| STA Probe: Deleting Table
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+STA[\s]+Probe:[\s]+Deleting[\s]+Table$" }
				id => "message-316091:02"
				add_field => {
					"[event][id]" => "316091:02"
					"[rsa][message][id1]" => "316091:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316093" {
		# MESSAGE 316093:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> Destroying STA table 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> Destroying STA table" }
				id => "message-316093:01"
				add_field => {
					"[event][id]" => "316093:01"
					"[rsa][message][id1]" => "316093:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316093:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Destroying STA table
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Destroying[\s]+STA[\s]+table$" }
				id => "message-316093:02"
				add_field => {
					"[event][id]" => "316093:02"
					"[rsa][message][id1]" => "316093:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316095" {
		# MESSAGE 316095:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Ageing STA <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Ageing STA %{fld40}" }
				id => "message-316095:01"
				add_field => {
					"[event][id]" => "316095:01"
					"[rsa][message][id1]" => "316095:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316095:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Ageing STA <fld40>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Ageing[\s]+STA[\s]+(?<fld40>.*)$" }
				id => "message-316095:02"
				add_field => {
					"[event][id]" => "316095:02"
					"[rsa][message][id1]" => "316095:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316095:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld11>| <space> Ageing STA <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld11}| %{space} Ageing STA %{fld40}" }
				id => "message-316095:03"
				add_field => {
					"[event][id]" => "316095:03"
					"[rsa][message][id1]" => "316095:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316096" {
		# MESSAGE 316096:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Ageing STA tree node  MAC <fld3> Monitor <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Ageing STA tree node  MAC %{fld3} Monitor %{fld4}" }
				id => "message-316096:01"
				add_field => {
					"[event][id]" => "316096:01"
					"[rsa][message][id1]" => "316096:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316096:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld11>| <space> Ageing STA tree node  MAC <fld3> Monitor <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld11}| %{space} Ageing STA tree node  MAC %{fld3} Monitor %{fld4}" }
				id => "message-316096:03"
				add_field => {
					"[event][id]" => "316096:03"
					"[rsa][message][id1]" => "316096:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316096:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Ageing STA tree node MAC <fld4> Monitor <fld12>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Ageing[\s]+STA[\s]+tree[\s]+node[\s]+MAC[\s]+(?<fld4>[^\s]*)[\s]+Monitor[\s]+(?<fld12>.*)$" }
				id => "message-316096:02"
				add_field => {
					"[event][id]" => "316096:02"
					"[rsa][message][id1]" => "316096:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "316220" {
		# MESSAGE 316220:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Classification Server IP set to : <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Classification Server IP set to : %{fld13}" }
				id => "message-316220:01"
				add_field => {
					"[event][id]" => "316220:01"
					"[rsa][message][id1]" => "316220:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 316220:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Classification Server IP set to : <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Classification[\s]+Server[\s]+IP[\s]+set[\s]+to[\s]+:[\s]+(?<fld13>.*)$" }
				id => "message-316220:02"
				add_field => {
					"[event][id]" => "316220:02"
					"[rsa][message][id1]" => "316220:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId289
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> <fld3>
	else if [logstash][msgparser][id] == "msgParserId289" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> %{fld3}" }
			id => "msgParserId289"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId290
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Network destination <action> name='<fld4>'
	else if [logstash][msgparser][id] == "msgParserId290" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Network destination %{action} name='%{fld4}'" }
			id => "msgParserId290"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId291
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Network service <action> name='<fld4>'
	else if [logstash][msgparser][id] == "msgParserId291" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Network service %{action} name='%{fld4}'" }
			id => "msgParserId291"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId292
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Access-list <action> name='<fld4>', type='<fld5>'
	else if [logstash][msgparser][id] == "msgParserId292" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Access-list %{action} name='%{fld4}', type='%{fld5}'" }
			id => "msgParserId292"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  User Role <action> name='<user_role>'
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  User Role %{action} name='%{user_role}'" }
			id => "msgParserId293"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Add ACL to role; acl='<fld3>', type='<fld4>', loc='<fld5>', role='<fld6>'
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Add ACL to role; acl='%{fld3}', type='%{fld4}', loc='%{fld5}', role='%{fld6}'" }
			id => "msgParserId294"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Add VLAN <vlan> IP='<fld4>' mask='<fld5>' 
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Add VLAN %{vlan} IP='%{fld4}' mask='%{fld5}'" }
			id => "msgParserId295"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  License key '<fld3>' <action>
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  License key '%{fld3}' %{action}" }
			id => "msgParserId296"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  License key '<fld3>' limit=<fld4>
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  License key '%{fld3}' limit=%{fld4}" }
			id => "msgParserId297"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Auth Manager synchronized with '<fld3>' module 
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Auth Manager synchronized with '%{fld3}' module" }
			id => "msgParserId298"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Set admin authentication server-group to '<fld3>' 
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Set admin authentication server-group to '%{fld3}'" }
			id => "msgParserId299"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Set admin authentication default-role to '<fld3>' 
	else if [logstash][msgparser][id] == "msgParserId300" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Set admin authentication default-role to '%{fld3}'" }
			id => "msgParserId300"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Bogus VLAN ID:<vlan> received.
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Bogus VLAN ID:%{vlan} received." }
			id => "msgParserId301"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId302
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  IPv6 Extended Header alias <fld3> name='<fld4>' 
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  IPv6 Extended Header alias %{fld3} name='%{fld4}'" }
			id => "msgParserId302"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "326009" {
		# MESSAGE 326009:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Wifi Interface Reinit called for <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Wifi[\s]+Interface[\s]+Reinit[\s]+called[\s]+for[\s]+(?<fld13>.*)$" }
				id => "message-326009:01"
				add_field => {
					"[event][id]" => "326009:01"
					"[rsa][message][id1]" => "326009:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326009:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Wi-Fi Interface Reinit called for <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Wi\-Fi[\s]+Interface[\s]+Reinit[\s]+called[\s]+for[\s]+(?<fld3>.*)$" }
				id => "message-326009:02"
				add_field => {
					"[event][id]" => "326009:02"
					"[rsa][message][id1]" => "326009:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326009:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Wi-Fi Interface Reinit called for <macaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Wi-Fi Interface Reinit called for %{macaddr}" }
				id => "message-326009:03"
				add_field => {
					"[event][id]" => "326009:03"
					"[rsa][message][id1]" => "326009:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId306
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: calling remove_ap <fld3>
	else if [logstash][msgparser][id] == "msgParserId306" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+calling[\s]+remove_ap[\s]+(?<fld3>.*)$" }
			id => "msgParserId306"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId307
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: calling remove_pot_sta <fld3>
	else if [logstash][msgparser][id] == "msgParserId307" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+calling[\s]+remove_pot_sta[\s]+(?<fld3>.*)$" }
			id => "msgParserId307"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId308
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: calling remove_pot_ap <fld3>
	else if [logstash][msgparser][id] == "msgParserId308" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+calling[\s]+remove_pot_ap[\s]+(?<fld3>.*)$" }
			id => "msgParserId308"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId309
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM: Sending Probe Poll Response V2: NumAPs=<fld4> NumSTAs=<fld5> Len=<fld6>
	else if [logstash][msgparser][id] == "msgParserId309" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Sending[\s]+Probe[\s]+Poll[\s]+Response[\s]+V2:[\s]+NumAPs=(?<fld4>[^\s]*)[\s]+NumSTAs=(?<fld5>[^\s]*)[\s]+Len=(?<fld6>.*)$" }
			id => "msgParserId309"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Setting the communication path of state and stats info to: <fld11>
	else if [logstash][msgparser][id] == "msgParserId310" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Setting[\s]+the[\s]+communication[\s]+path[\s]+of[\s]+state[\s]+and[\s]+stats[\s]+info[\s]+to:[\s]+(?<fld11>.*)$" }
			id => "msgParserId310"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId311
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM: Setting collection of statistics to : <result>
	else if [logstash][msgparser][id] == "msgParserId311" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Setting[\s]+collection[\s]+of[\s]+statistics[\s]+to[\s]+:[\s]+(?<result>.*)$" }
			id => "msgParserId311"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "326088" {
		# MESSAGE 326088:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Marking Switch <fld13> as Down
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Marking[\s]+Switch[\s]+(?<fld13>[^\s]*)[\s]+as[\s]+Down$" }
				id => "message-326088:01"
				add_field => {
					"[event][id]" => "326088:01"
					"[rsa][message][id1]" => "326088:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326088:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Marking Switch <fld13> as Down
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Marking[\s]+Switch[\s]+(?<fld13>[^\s]*)[\s]+as[\s]+Down$" }
				id => "message-326088:02"
				add_field => {
					"[event][id]" => "326088:02"
					"[rsa][message][id1]" => "326088:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326091" {
		# MESSAGE 326091:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Radio Stats: APs=<fld9> STAs=<fld41> Mon-APs=<fld42> Mon-STAs=<fld43>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Radio[\s]+Stats:[\s]+APs=(?<fld9>[^\s]*)[\s]+STAs=(?<fld41>[^\s]*)[\s]+Mon\-APs=(?<fld42>[^\s]*)[\s]+Mon\-STAs=(?<fld43>.*)$" }
				id => "message-326091:01"
				add_field => {
					"[event][id]" => "326091:01"
					"[rsa][message][id1]" => "326091:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326091:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: Radio Stats: APs=<fld9> STAs=<fld41> Mon-APs=<fld42> Mon-STAs=<fld43>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: Radio Stats: APs=%{fld9} STAs=%{fld41} Mon-APs=%{fld42} Mon-STAs=%{fld43}" }
				id => "message-326091:02"
				add_field => {
					"[event][id]" => "326091:02"
					"[rsa][message][id1]" => "326091:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326091:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: Radio Stats: APs=<fld15> STAs=<fld16> Mon-APs=<fld17> Mon-STAs=<fld18>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+Radio[\s]+Stats:[\s]+APs=(?<fld15>[^\s]*)[\s]+STAs=(?<fld16>[^\s]*)[\s]+Mon\-APs=(?<fld17>[^\s]*)[\s]+Mon\-STAs=(?<fld18>.*)$" }
				id => "message-326091:03"
				add_field => {
					"[event][id]" => "326091:03"
					"[rsa][message][id1]" => "326091:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId317
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM <fld50>: Sending <fld5> for STAs of length <fld4>
	else if [logstash][msgparser][id] == "msgParserId317" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Sending[\s]+(?<fld5>[^\s]*)[\s]+for[\s]+STAs[\s]+of[\s]+length[\s]+(?<fld4>.*)$" }
			id => "msgParserId317"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId318
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM: PAPI_Send failed. from <saddr> to <daddr> port <dport> PAPI msgtype <fld11> PAPI msglength <fld5> AM msgtype <fld16> AM msglength <fld14> err <resultcode> arg <fld7>
	else if [logstash][msgparser][id] == "msgParserId318" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+PAPI_Send[\s]+failed\.[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+port[\s]+(?<dport>[^\s]*)[\s]+PAPI[\s]+msgtype[\s]+(?<fld11>[^\s]*)[\s]+PAPI[\s]+msglength[\s]+(?<fld5>[^\s]*)[\s]+AM[\s]+msgtype[\s]+(?<fld16>[^\s]*)[\s]+AM[\s]+msglength[\s]+(?<fld14>[^\s]*)[\s]+err[\s]+(?<resultcode>[^\s]*)[\s]+arg[\s]+(?<fld7>.*)$" }
			id => "msgParserId318"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |ap| AM: unable to find AP <fld3> 
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |ap| AM: unable to find AP %{fld3}" }
			id => "msgParserId319"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "326107" {
		# MESSAGE 326107
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: RSTA Type set to <fld18> for STA <fld40>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+RSTA[\s]+Type[\s]+set[\s]+to[\s]+(?<fld18>[^\s]*)[\s]+for[\s]+STA[\s]+(?<fld40>.*)$" }
				id => "message-326107"
				add_field => {
					"[event][id]" => "326107"
					"[rsa][message][id1]" => "326107"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326107:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: RSTA Type set to <fld18> for STA <fld40>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+RSTA[\s]+Type[\s]+set[\s]+to[\s]+(?<fld18>[^\s]*)[\s]+for[\s]+STA[\s]+(?<fld40>.*)$" }
				id => "message-326107:01"
				add_field => {
					"[event][id]" => "326107:01"
					"[rsa][message][id1]" => "326107:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326130" {
		# MESSAGE 326130:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Applying RF Optimization profile config
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Applying[\s]+RF[\s]+Optimization[\s]+profile[\s]+config$" }
				id => "message-326130:01"
				add_field => {
					"[event][id]" => "326130:01"
					"[rsa][message][id1]" => "326130:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326130:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld3> <fld4>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Applying <fld13> profile config
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld3>[^\s]*)[\s]+(?<fld4>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Applying[\s]+(?<fld13>[^\s]*)[\s]+profile[\s]+config$" }
				id => "message-326130:02"
				add_field => {
					"[event][id]" => "326130:02"
					"[rsa][message][id1]" => "326130:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326130:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Applying <fld13> profile config 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Applying %{fld13} profile config" }
				id => "message-326130:03"
				add_field => {
					"[event][id]" => "326130:03"
					"[rsa][message][id1]" => "326130:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326141" {
		# MESSAGE 326141:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Applying IDS Rate Thresholds profile config for frametype: <fld10>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Applying[\s]+IDS[\s]+Rate[\s]+Thresholds[\s]+profile[\s]+config[\s]+for[\s]+frametype:[\s]+(?<fld10>.*)$" }
				id => "message-326141:01"
				add_field => {
					"[event][id]" => "326141:01"
					"[rsa][message][id1]" => "326141:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326141:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Applying  IDS Rate Thresholds profile config for frametype: <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Applying[\s]+IDS[\s]+Rate[\s]+Thresholds[\s]+profile[\s]+config[\s]+for[\s]+frametype:[\s]+(?<fld13>.*)$" }
				id => "message-326141:02"
				add_field => {
					"[event][id]" => "326141:02"
					"[rsa][message][id1]" => "326141:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326141:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Applying  IDS Rate Thresholds profile config for frametype: <fld13> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Applying  IDS Rate Thresholds profile config for frametype: %{fld13}" }
				id => "message-326141:03"
				add_field => {
					"[event][id]" => "326141:03"
					"[rsa][message][id1]" => "326141:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326145" {
		# MESSAGE 326145
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Applying  IDS Signature profile config. Group: <fld13> Number of Instances: <fld14> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Applying[\s]+IDS[\s]+Signature[\s]+profile[\s]+config\.[\s]+Group:[\s]+(?<fld13>[^\s]*)[\s]+Number[\s]+of[\s]+Instances:[\s]+(?<fld14>[^\s]*)[\s]+$" }
				id => "message-326145"
				add_field => {
					"[event][id]" => "326145"
					"[rsa][message][id1]" => "326145"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326145:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Applying  IDS Signature profile config. Group: <fld13> Number of Instances: <fld14> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Applying  IDS Signature profile config. Group: %{fld13} Number of Instances: %{fld14}" }
				id => "message-326145:01"
				add_field => {
					"[event][id]" => "326145:01"
					"[rsa][message][id1]" => "326145:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326148" {
		# MESSAGE 326148:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: set_mode called for <fld50> type <fld49> active <fld48>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+set_mode[\s]+called[\s]+for[\s]+(?<fld50>[^\s]*)[\s]+type[\s]+(?<fld49>[^\s]*)[\s]+active[\s]+(?<fld48>.*)$" }
				id => "message-326148:01"
				add_field => {
					"[event][id]" => "326148:01"
					"[rsa][message][id1]" => "326148:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326148:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: set_mode called for <fld50> type <fld49> active <fld48>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: set_mode called for %{fld50} type %{fld49} active %{fld48}" }
				id => "message-326148:02"
				add_field => {
					"[event][id]" => "326148:02"
					"[rsa][message][id1]" => "326148:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326148:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: set_mode called for <fld21> type <fld10> active <fld20>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+set_mode[\s]+called[\s]+for[\s]+(?<fld21>[^\s]*)[\s]+type[\s]+(?<fld10>[^\s]*)[\s]+active[\s]+(?<fld20>.*)$" }
				id => "message-326148:03"
				add_field => {
					"[event][id]" => "326148:03"
					"[rsa][message][id1]" => "326148:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId333
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Adding new Gateway MAC: <fld13>
	else if [logstash][msgparser][id] == "msgParserId333" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Adding[\s]+new[\s]+Gateway[\s]+MAC:[\s]+(?<fld13>.*)$" }
			id => "msgParserId333"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId334
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Adding new Router MAC: <fld13>
	else if [logstash][msgparser][id] == "msgParserId334" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Adding[\s]+new[\s]+Router[\s]+MAC:[\s]+(?<fld13>.*)$" }
			id => "msgParserId334"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId335
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Setting Gateway MAC to: <fld13>
	else if [logstash][msgparser][id] == "msgParserId335" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Setting[\s]+Gateway[\s]+MAC[\s]+to:[\s]+(?<fld13>.*)$" }
			id => "msgParserId335"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId336
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Signature Match detected. SignatureName="<fld14>" Src=<smacaddr> Dst=<dmacaddr> Bssid=<fld3> Channel=<fld13> RSSI=<fld12>
	else if [logstash][msgparser][id] == "msgParserId336" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Signature[\s]+Match[\s]+detected\.[\s]+SignatureName=\"(?<fld14>[^\"]*)\"[\s]+Src=(?<smacaddr>[^\s]*)[\s]+Dst=(?<dmacaddr>[^\s]*)[\s]+Bssid=(?<fld3>[^\s]*)[\s]+Channel=(?<fld13>[^\s]*)[\s]+RSSI=(?<fld12>.*)$" }
			id => "msgParserId336"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "326271" {
		# MESSAGE 326271:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: New Node Detected Node = <fld50> SSID = <ssid> BSSID <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+New[\s]+Node[\s]+Detected[\s]+Node[\s]+=[\s]+(?<fld50>[^\s]*)[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+(?<fld3>.*)$" }
				id => "message-326271:01"
				add_field => {
					"[event][id]" => "326271:01"
					"[rsa][message][id1]" => "326271:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326271:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: New Node Detected Node = <fld50> SSID = <ssid> BSSID <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: New Node Detected Node = %{fld50} SSID = %{ssid} BSSID %{fld3}" }
				id => "message-326271:02"
				add_field => {
					"[event][id]" => "326271:02"
					"[rsa][message][id1]" => "326271:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326271:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: New Node Detected Node = <fld50> SSID = <ssid> BSSID <bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: New Node Detected Node = %{fld50} SSID = %{ssid} BSSID %{bssid}" }
				id => "message-326271:03"
				add_field => {
					"[event][id]" => "326271:03"
					"[rsa][message][id1]" => "326271:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326272" {
		# MESSAGE 326272:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: New AP Detected Channel = <fld12> SSID = <ssid> BSSID = <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+New[\s]+AP[\s]+Detected[\s]+Channel[\s]+=[\s]+(?<fld12>[^\s]*)[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<fld3>.*)$" }
				id => "message-326272:01"
				add_field => {
					"[event][id]" => "326272:01"
					"[rsa][message][id1]" => "326272:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326272:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: New AP Detected Channel = <fld33> SSID = <ssid> BSSID = <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: New AP Detected Channel = %{fld33} SSID = %{ssid} BSSID = %{fld3}" }
				id => "message-326272:02"
				add_field => {
					"[event][id]" => "326272:02"
					"[rsa][message][id1]" => "326272:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326272:03
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: New AP Detected Channel = <fld12> SSID = <ssid> BSSID = <bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: New AP Detected Channel = %{fld12} SSID = %{ssid} BSSID = %{bssid}" }
				id => "message-326272:03"
				add_field => {
					"[event][id]" => "326272:03"
					"[rsa][message][id1]" => "326272:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId343
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: SSID Change #2: BSS <fld3> Old SSID <change_old> New SSID <change_new> Channel <fld46>
	else if [logstash][msgparser][id] == "msgParserId343" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+SSID[\s]+Change[\s]+#2:[\s]+BSS[\s]+(?<fld3>[^\s]*)[\s]+Old[\s]+SSID[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+SSID[\s]+(?<change_new>[^\s]*)[\s]+Channel[\s]+(?<fld46>.*)$" }
			id => "msgParserId343"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "326274" {
		# MESSAGE 326274:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Inactive Node Detected  = <fld13> SSID = <ssid> BSSID <fld3> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Inactive[\s]+Node[\s]+Detected[\s]+=[\s]+(?<fld13>[^\s]*)[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+$" }
				id => "message-326274:01"
				add_field => {
					"[event][id]" => "326274:01"
					"[rsa][message][id1]" => "326274:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326274:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: Inactive Node Detected  = <fld13> SSID = <ssid> BSSID <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: Inactive Node Detected  = %{fld13} SSID = %{ssid} BSSID %{fld3}" }
				id => "message-326274:02"
				add_field => {
					"[event][id]" => "326274:02"
					"[rsa][message][id1]" => "326274:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326274:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Inactive Node Detected  = <fld13> SSID = <ssid> BSSID <bssid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Inactive Node Detected  = %{fld13} SSID = %{ssid} BSSID %{bssid}" }
				id => "message-326274:03"
				add_field => {
					"[event][id]" => "326274:03"
					"[rsa][message][id1]" => "326274:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId347
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Inactive IBSS Detected SSID = <ssid> BSSID = <fld3>
	else if [logstash][msgparser][id] == "msgParserId347" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Inactive[\s]+IBSS[\s]+Detected[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<fld3>.*)$" }
			id => "msgParserId347"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "326276" {
		# MESSAGE 326276:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Inactive AP Detected SSID = <ssid>  BSSID = <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Inactive[\s]+AP[\s]+Detected[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<fld3>.*)$" }
				id => "message-326276:01"
				add_field => {
					"[event][id]" => "326276:01"
					"[rsa][message][id1]" => "326276:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326276:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: Inactive AP Detected SSID = <ssid>  BSSID = <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: Inactive AP Detected SSID = %{ssid}  BSSID = %{fld3}" }
				id => "message-326276:02"
				add_field => {
					"[event][id]" => "326276:02"
					"[rsa][message][id1]" => "326276:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326276:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Inactive AP Detected SSID = <ssid> BSSID = <bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Inactive AP Detected SSID = %{ssid} BSSID = %{bssid}" }
				id => "message-326276:03"
				add_field => {
					"[event][id]" => "326276:03"
					"[rsa][message][id1]" => "326276:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326277" {
		# MESSAGE 326277:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Setting RAP Type for AP <fld13> to: <fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Setting[\s]+RAP[\s]+Type[\s]+for[\s]+AP[\s]+(?<fld13>[^\s]*)[\s]+to:[\s]+(?<fld15>.*)$" }
				id => "message-326277:01"
				add_field => {
					"[event][id]" => "326277:01"
					"[rsa][message][id1]" => "326277:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326277:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM: Setting RAP Type for AP <fld13> to: <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM: Setting RAP Type for AP %{fld13} to: %{fld15}" }
				id => "message-326277:02"
				add_field => {
					"[event][id]" => "326277:02"
					"[rsa][message][id1]" => "326277:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326277:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: Setting RAP Type for AP <fld13> to: <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: Setting RAP Type for AP %{fld13} to: %{fld15}" }
				id => "message-326277:03"
				add_field => {
					"[event][id]" => "326277:03"
					"[rsa][message][id1]" => "326277:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "326278" {
		# MESSAGE 326278
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: STA <fld40> Authenticated with AP <access_point>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+STA[\s]+(?<fld40>[^\s]*)[\s]+Authenticated[\s]+with[\s]+AP[\s]+(?<access_point>.*)$" }
				id => "message-326278"
				add_field => {
					"[event][id]" => "326278"
					"[rsa][message][id1]" => "326278"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 326278:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> <fld22>| |<fld2>| AM: STA <fld40> Authenticated with AP <access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} %{fld22}| |%{fld2}| AM: STA %{fld40} Authenticated with AP %{access_point}" }
				id => "message-326278:01"
				add_field => {
					"[event][id]" => "326278:01"
					"[rsa][message][id1]" => "326278:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "330101" {
		# MESSAGE 330101:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  set SAPI state for level <fld3> to <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  set SAPI state for level %{fld3} to %{fld4}" }
				id => "message-330101:01"
				add_field => {
					"[event][id]" => "330101:01"
					"[rsa][message][id1]" => "330101:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 330101:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| set SAPI state for level <fld10> to <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+set[\s]+SAPI[\s]+state[\s]+for[\s]+level[\s]+(?<fld10>[^\s]*)[\s]+to[\s]+(?<fld13>.*)$" }
				id => "message-330101:02"
				add_field => {
					"[event][id]" => "330101:02"
					"[rsa][message][id1]" => "330101:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId358
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  SAPI sync with service <fld13> at level <fld14>
	else if [logstash][msgparser][id] == "msgParserId358" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  SAPI sync with service %{fld13} at level %{fld14}" }
			id => "msgParserId358"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId359
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  SAPI sync (blocking) with service <fld3> at level <fld4>
	else if [logstash][msgparser][id] == "msgParserId359" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  SAPI sync (blocking) with service %{fld3} at level %{fld4}" }
			id => "msgParserId359"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId360
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  SAPI sync done with service <fld3> at level <fld4>
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  SAPI sync done with service %{fld3} at level %{fld4}" }
			id => "msgParserId360"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId361
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> PhoneHome service initializing completed 
	else if [logstash][msgparser][id] == "msgParserId361" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> PhoneHome service initializing completed" }
			id => "msgParserId361"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId362
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> stop_signal - <info>
	else if [logstash][msgparser][id] == "msgParserId362" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> stop_signal - %{info}" }
			id => "msgParserId362"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId363
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld12>, <fld13>
	else if [logstash][msgparser][id] == "msgParserId363" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld12}, %{fld13}" }
			id => "msgParserId363"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId364
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> |webserver| Wrapper got signal <fld3>
	else if [logstash][msgparser][id] == "msgParserId364" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> |webserver| Wrapper got signal %{fld3}" }
			id => "msgParserId364"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId365
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>> |webserver| from pid <fld3>, status <fld4> <fld5>, <fld6>, <fld7>
	else if [logstash][msgparser][id] == "msgParserId365" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}> |webserver| from pid %{fld3}, status %{fld4} %{fld5}, %{fld6}, %{fld7}" }
			id => "msgParserId365"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "399803" {
		# MESSAGE 399803:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  An internal system error has occurred at file <fld3> function <fld4> line <fld5> error <fld6>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  An internal system error has occurred at file %{fld3} function %{fld4} line %{fld5} error %{fld6}." }
				id => "message-399803:01"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "399803:01"
					"[rsa][message][id1]" => "399803:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 399803:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| An internal system error has occurred at file <filename> function <fld11> line <fld10> error <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+An[\s]+internal[\s]+system[\s]+error[\s]+has[\s]+occurred[\s]+at[\s]+file[\s]+(?<filename>[^\s]*)[\s]+function[\s]+(?<fld11>[^\s]*)[\s]+line[\s]+(?<fld10>[^\s]*)[\s]+error[\s]+(?<result>.*)$" }
				id => "message-399803:02"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "399803:02"
					"[rsa][message][id1]" => "399803:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "399815" {
		# MESSAGE 399815:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{result}" }
				id => "message-399815:01"
				add_field => {
					"[event][id]" => "399815:01"
					"[rsa][message][id1]" => "399815:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 399815:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <fld10>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<fld10>.*)$" }
				id => "message-399815:02"
				add_field => {
					"[event][id]" => "399815:02"
					"[rsa][message][id1]" => "399815:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId370
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  Received the <fld3> Message 
	else if [logstash][msgparser][id] == "msgParserId370" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  Received the %{fld3} Message" }
			id => "msgParserId370"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "399818" {
		# MESSAGE 399818:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  License check failed for the command, when processing the line#<fld3>::<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  License check failed for the command, when processing the line#%{fld3}::%{fld4}" }
				id => "message-399818:01"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "399818:01"
					"[rsa][message][id1]" => "399818:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 399818:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| License check failed for the {command,|"comman d,"} when processing the line#<fld10>::<fld21>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+License[\s]+check[\s]+failed[\s]+for[\s]+the[\s]+(command,|\"comman[\s]+d,\")[\s]+when[\s]+processing[\s]+the[\s]+line#(?<fld10>[^:]*)::(?<fld21>.*)$" }
				id => "message-399818:02"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "399818:02"
					"[rsa][message][id1]" => "399818:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId373
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <fld3>
	else if [logstash][msgparser][id] == "msgParserId373" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{fld3}" }
			id => "msgParserId373"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId374
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  |webserver| <result> 
	else if [logstash][msgparser][id] == "msgParserId374" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  |webserver| %{result}" }
			id => "msgParserId374"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId375
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld30> <fld31>>  <fld3>, <fld4>:<fld5>: <info>
	else if [logstash][msgparser][id] == "msgParserId375" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld30} %{fld31}>  %{fld3}, %{fld4}:%{fld5}: %{info}" }
			id => "msgParserId375"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId376
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AP <access_point>: Delete AP state for bssid <fld3>; Deauth <fld22> Clear <fld23>
	else if [logstash][msgparser][id] == "msgParserId376" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AP[\s]+(?<access_point>[^:]*):[\s]+Delete[\s]+AP[\s]+state[\s]+for[\s]+bssid[\s]+(?<fld3>[^;]*);[\s]+Deauth[\s]+(?<fld22>[^\s]*)[\s]+Clear[\s]+(?<fld23>.*)$" }
			id => "msgParserId376"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "400161" {
		# MESSAGE 400161:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <access_point>: Registering AP: IP <fld13>, BSS <fld14>, <fld15> band, AP mode, max clients <fld16>, <fld17> virtual APs
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{access_point}: Registering AP: IP %{fld13}, BSS %{fld14}, %{fld15} band, AP mode, max clients %{fld16}, %{fld17} virtual APs" }
				id => "message-400161:01"
				add_field => {
					"[event][id]" => "400161:01"
					"[rsa][message][id1]" => "400161:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 400161:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AP <access_point>: Registering AP: IP {"<fld15>,"|<fld13>} BSS {"<fld3>,"|<fld3>} <fld10>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AP[\s]+(?<access_point>[^:]*):[\s]+Registering[\s]+AP:[\s]+IP[\s]+(\"(?<fld15>[^,]*),\"|(?<fld13>[^\s]*))[\s]+BSS[\s]+(\"(?<fld3>[^,]*),\"|(?<fld3>[^\s]*))[\s]+(?<fld10>.*)$" }
				id => "message-400161:02"
				add_field => {
					"[event][id]" => "400161:02"
					"[rsa][message][id1]" => "400161:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId379
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> AP <access_point>: Registering { "AP," | AP,} new virtual ap for ESSID { "<ssid>," | <ssid>, } deny broadcast <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId379" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AP[\s]+(?<access_point>[^:]*):[\s]+Registering[\s]+([\s]*\"AP,\"[\s]+|[\s]*AP,)[\s]+new[\s]+virtual[\s]+ap[\s]+for[\s]+ESSID[\s]+([\s]*\"(?<ssid>[^,]*),\"[\s]+|[\s]*(?<ssid>[^,]*),[\s]+)[\s]+deny[\s]+broadcast[\s]+(?<dclass_counter1>.*)$" }
			id => "msgParserId379"
			add_field => {
				"event_description" => "Registering AP, new virtual ap for ESSID deny broadcast"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "400168" {
		# MESSAGE 400168:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| Added AP <access_point>-<fld12>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Added[\s]+AP[\s]+(?<access_point>[^\-]*)\-(?<fld12>.*)$" }
				id => "message-400168:01"
				add_field => {
					"[event][id]" => "400168:01"
					"[rsa][message][id1]" => "400168:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 400168:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>>  Added AP <access_point>-<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}>  Added AP %{access_point}-%{fld12}" }
				id => "message-400168:02"
				add_field => {
					"[event][id]" => "400168:02"
					"[rsa][message][id1]" => "400168:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId382
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  wifi_sap_down:unknown SAP IP <fld13> BSS <fld3> 
	else if [logstash][msgparser][id] == "msgParserId382" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  wifi_sap_down:unknown SAP IP %{fld13} BSS %{fld3}" }
			id => "msgParserId382"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "400175" {
		# MESSAGE 400175:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP Radio Attributes Changed - BSSID <fld3> Name <fld48> IP <fld49> Channel <fld46> Tx Power <fld47>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP Radio Attributes Changed - BSSID %{fld3} Name %{fld48} IP %{fld49} Channel %{fld46} Tx Power %{fld47}" }
				id => "message-400175:01"
				add_field => {
					"[event][id]" => "400175:01"
					"[rsa][message][id1]" => "400175:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 400175:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AP Radio Attributes Changed - BSSID <fld3> Name <fld6> IP <fld5>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AP[\s]+Radio[\s]+Attributes[\s]+Changed[\s]+\-[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+Name[\s]+(?<fld6>[^\s]*)[\s]+IP[\s]+(?<fld5>.*)$" }
				id => "message-400175:02"
				add_field => {
					"[event][id]" => "400175:02"
					"[rsa][message][id1]" => "400175:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "403000" {
		# MESSAGE 403000:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  SSID change detected by Probe:<fld13> for AP:<fld9> New-SSID:<ssid> Old-SSID:<fld14> Poll-resp:<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  SSID change detected by Probe:%{fld13} for AP:%{fld9} New-SSID:%{ssid} Old-SSID:%{fld14} Poll-resp:%{fld15}" }
				id => "message-403000:01"
				add_field => {
					"[event][id]" => "403000:01"
					"[rsa][message][id1]" => "403000:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 403000:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |<fld11>| <space> SSID change detected by Probe:<fld13> for AP:<fld9> New-SSID:<ssid> Old-SSID:<fld14> Poll-resp:<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |%{fld11}| %{space} SSID change detected by Probe:%{fld13} for AP:%{fld9} New-SSID:%{ssid} Old-SSID:%{fld14} Poll-resp:%{fld15}" }
				id => "message-403000:03"
				add_field => {
					"[event][id]" => "403000:03"
					"[rsa][message][id1]" => "403000:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId387
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: STA <fld40> Authenticated with AP <access_point>
	else if [logstash][msgparser][id] == "msgParserId387" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+STA[\s]+(?<fld40>[^\s]*)[\s]+Authenticated[\s]+with[\s]+AP[\s]+(?<access_point>.*)$" }
			id => "msgParserId387"
			add_field => {
				"ec_subject" => "Agent"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId388
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM <fld50>: Interfering AP detected with SSID<ssid>and BSSID <fld3>
	else if [logstash][msgparser][id] == "msgParserId388" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Interfering[\s]+AP[\s]+detected[\s]+with[\s]+SSID(?<ssid>[^a]*)and[\s]+BSSID[\s]+(?<fld3>.*)$" }
			id => "msgParserId388"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId389
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: Setting RAP Type for AP <access_point> to: <fld28>
	else if [logstash][msgparser][id] == "msgParserId389" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+Setting[\s]+RAP[\s]+Type[\s]+for[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+to:[\s]+(?<fld28>.*)$" }
			id => "msgParserId389"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId390
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}|  <space> AM: <info>
	else if [logstash][msgparser][id] == "msgParserId390" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+(?<info>.*)$" }
			id => "msgParserId390"
			add_field => {
				"event_description" => "DEBUG INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId391
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM: SSID Change <fld20>: BSS <fld19> Old SSID <change_old> New SSID <change_new> Channel <fld26>
	else if [logstash][msgparser][id] == "msgParserId391" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+SSID[\s]+Change[\s]+(?<fld20>[^:]*):[\s]+BSS[\s]+(?<fld19>[^\s]*)[\s]+Old[\s]+SSID[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+SSID[\s]+(?<change_new>[^\s]*)[\s]+Channel[\s]+(?<fld26>.*)$" }
			id => "msgParserId391"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId392
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Interference Detected for Channel <fld26>
	else if [logstash][msgparser][id] == "msgParserId392" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Interference[\s]+Detected[\s]+for[\s]+Channel[\s]+(?<fld26>.*)$" }
			id => "msgParserId392"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId393
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Interference Cleared for Channel <fld26>
	else if [logstash][msgparser][id] == "msgParserId393" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Interference[\s]+Cleared[\s]+for[\s]+Channel[\s]+(?<fld26>.*)$" }
			id => "msgParserId393"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId394
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Interference Detected for AP BSSID <fld3> SSID <ssid>
	else if [logstash][msgparser][id] == "msgParserId394" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Interference[\s]+Detected[\s]+for[\s]+AP[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+SSID[\s]+(?<ssid>.*)$" }
			id => "msgParserId394"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId395
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Interference Cleared for AP BSSID <fld3> SSID <ssid>
	else if [logstash][msgparser][id] == "msgParserId395" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Interference[\s]+Cleared[\s]+for[\s]+AP[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+SSID[\s]+(?<ssid>.*)$" }
			id => "msgParserId395"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId396
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> AM <smacaddr>: AP Impersonation Detected For <dmacaddr> <result>
	else if [logstash][msgparser][id] == "msgParserId396" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<smacaddr>[^:]*):[\s]+AP[\s]+Impersonation[\s]+Detected[\s]+For[\s]+(?<dmacaddr>[^\s]*)[\s]+(?<result>.*)$" }
			id => "msgParserId396"
			add_field => {
				"event_description" => "AP Impersonation Detected for MAC"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId397
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: Inactive Node Detected <space> = <fld13> SSID = <ssid> BSSID<fld3>
	else if [logstash][msgparser][id] == "msgParserId397" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+Inactive[\s]+Node[\s]+Detected[\s]+(?<space>[^\s]*)[\s]+=[\s]+(?<fld13>[^\s]*)[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID(?<fld3>.*)$" }
			id => "msgParserId397"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId398
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM: Inactive IBSS Detected SSID = <ssid> BSSID = <fld3>
	else if [logstash][msgparser][id] == "msgParserId398" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Inactive[\s]+IBSS[\s]+Detected[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<fld3>.*)$" }
			id => "msgParserId398"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId399
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM: Inactive AP Detected SSID = <ssid> BSSID = <fld3>
	else if [logstash][msgparser][id] == "msgParserId399" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM:[\s]+Inactive[\s]+AP[\s]+Detected[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<fld3>.*)$" }
			id => "msgParserId399"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404050" {
		# MESSAGE 404050:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM C <fld46> PER <fld47> MER <fld48> FRR <fld49>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM C %{fld46} PER %{fld47} MER %{fld48} FRR %{fld49}" }
				id => "message-404050:01"
				add_field => {
					"[event][id]" => "404050:01"
					"[rsa][message][id1]" => "404050:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404050:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: ARM C <fld26> PER <fld29> MER <fld30> FRR <fld31>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+ARM[\s]+C[\s]+(?<fld26>[^\s]*)[\s]+PER[\s]+(?<fld29>[^\s]*)[\s]+MER[\s]+(?<fld30>[^\s]*)[\s]+FRR[\s]+(?<fld31>.*)$" }
				id => "message-404050:02"
				add_field => {
					"[event][id]" => "404050:02"
					"[rsa][message][id1]" => "404050:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404050:04
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM Channel <fld5> Physical_Error_Rate <fld6> MAC_Error_Rate <fld7> Frame_Retry_Rate <fld8> arm_error_rate_threshold <fld9> arm_error_rate_wait_time <fld10> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM Channel %{fld5} Physical_Error_Rate %{fld6} MAC_Error_Rate %{fld7} Frame_Retry_Rate %{fld8} arm_error_rate_threshold %{fld9} arm_error_rate_wait_time %{fld10}" }
				id => "message-404050:04"
				add_field => {
					"[event][id]" => "404050:04"
					"[rsa][message][id1]" => "404050:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <fld13>
	else if [logstash][msgparser][id] == "msgParserId402" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<fld13>.*)$" }
			id => "msgParserId402"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId403
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> | {AP <macaddr>@<hostip> <process> | <process>}| <space> AM <fld50>: STA <smacaddr> has trouble finding AP : <result>
	else if [logstash][msgparser][id] == "msgParserId403" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|[\s]+(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+STA[\s]+(?<smacaddr>[^\s]*)[\s]+has[\s]+trouble[\s]+finding[\s]+AP[\s]+:[\s]+(?<result>.*)$" }
			id => "msgParserId403"
			add_field => {
				"event_description" => "Station having trouble finding AP"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId404
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Sequence Number Anomaly MAC=<fld12> RSSI=<fld13> Seq1=<fld14> Seq2=<fld15> MismatchCnt=<fld16>
	else if [logstash][msgparser][id] == "msgParserId404" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Sequence[\s]+Number[\s]+Anomaly[\s]+MAC=(?<fld12>[^\s]*)[\s]+RSSI=(?<fld13>[^\s]*)[\s]+Seq1=(?<fld14>[^\s]*)[\s]+Seq2=(?<fld15>[^\s]*)[\s]+MismatchCnt=(?<fld16>.*)$" }
			id => "msgParserId404"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404054" {
		# MESSAGE 404054:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld3>@<fld4> sapd|  AM <fld5>: Disconnect-Station Attack: Deauth frame from <smacaddr> is invalid, RSSI=<fld7> DeauthSeq=<fld8> NormalSeq=<fld9> Mismatched=<fld10> Similar=<fld11> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld3}@%{fld4} sapd|  AM %{fld5}: Disconnect-Station Attack: Deauth frame from %{smacaddr} is invalid, RSSI=%{fld7} DeauthSeq=%{fld8} NormalSeq=%{fld9} Mismatched=%{fld10} Similar=%{fld11}" }
				id => "message-404054:01"
				add_field => {
					"[event][id]" => "404054:01"
					"[rsa][message][id1]" => "404054:01"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404054:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Disconnect-Station Attack: <result> frame from <smacaddr> is invalid, RSSI=<fld12> DisassocSeq=<fld13> NormalSeq=<fld14> Mismatched=<fld15> Similar=<fld16>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Disconnect\-Station[\s]+Attack:[\s]+(?<result>[^\s]*)[\s]+frame[\s]+from[\s]+(?<smacaddr>[^\s]*)[\s]+is[\s]+invalid,[\s]+RSSI=(?<fld12>[^\s]*)[\s]+DisassocSeq=(?<fld13>[^\s]*)[\s]+NormalSeq=(?<fld14>[^\s]*)[\s]+Mismatched=(?<fld15>[^\s]*)[\s]+Similar=(?<fld16>.*)$" }
				id => "message-404054:02"
				add_field => {
					"[event][id]" => "404054:02"
					"[rsa][message][id1]" => "404054:02"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId407
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Channel Rate Anomaly detected for <fld34> Frame: Channel = <fld26>, Packet Count = <fld35>
	else if [logstash][msgparser][id] == "msgParserId407" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Channel[\s]+Rate[\s]+Anomaly[\s]+detected[\s]+for[\s]+(?<fld34>[^\s]*)[\s]+Frame:[\s]+Channel[\s]+=[\s]+(?<fld26>[^,]*),[\s]+Packet[\s]+Count[\s]+=[\s]+(?<fld35>.*)$" }
			id => "msgParserId407"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId408
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Rate Anomaly <fld36> Frame: Channel = <fld26>, PktCnt = <fld35>
	else if [logstash][msgparser][id] == "msgParserId408" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Rate[\s]+Anomaly[\s]+(?<fld36>[^\s]*)[\s]+Frame:[\s]+Channel[\s]+=[\s]+(?<fld26>[^,]*),[\s]+PktCnt[\s]+=[\s]+(?<fld35>.*)$" }
			id => "msgParserId408"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId409
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Rate Anomaly for <fld34> Frame: <fld36> = <fld26>, PktCnt = <fld35>, RSSI = <fld37>
	else if [logstash][msgparser][id] == "msgParserId409" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Rate[\s]+Anomaly[\s]+for[\s]+(?<fld34>[^\s]*)[\s]+Frame:[\s]+(?<fld36>[^\s]*)[\s]+=[\s]+(?<fld26>[^,]*),[\s]+PktCnt[\s]+=[\s]+(?<fld35>[^,]*),[\s]+RSSI[\s]+=[\s]+(?<fld37>.*)$" }
			id => "msgParserId409"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId410
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: New Node Detected Node = <fld13> SSID = <ssid> BSSID <fld3>
	else if [logstash][msgparser][id] == "msgParserId410" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+New[\s]+Node[\s]+Detected[\s]+Node[\s]+=[\s]+(?<fld13>[^\s]*)[\s]+SSID[\s]+=[\s]+(?<ssid>[^\s]*)[\s]+BSSID[\s]+(?<fld3>.*)$" }
			id => "msgParserId410"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId411
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| <space> AM: New AP Detected Channel = <fld26> SSID =<ssid> BSSID = <fld3>
	else if [logstash][msgparser][id] == "msgParserId411" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM:[\s]+New[\s]+AP[\s]+Detected[\s]+Channel[\s]+=[\s]+(?<fld26>[^\s]*)[\s]+SSID[\s]+=(?<ssid>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<fld3>.*)$" }
			id => "msgParserId411"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404065" {
		# MESSAGE 404065:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM Error Threshold Trigger Current Channel <fld46> new_rra <fld47>/<fld48>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM Error Threshold Trigger Current Channel %{fld46} new_rra %{fld47}/%{fld48}" }
				id => "message-404065:01"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "404065:01"
					"[rsa][message][id1]" => "404065:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404065:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: ARM Error Threshold Trigger Current Channel <fld26> new_rra <fld38>/<fld39>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+ARM[\s]+Error[\s]+Threshold[\s]+Trigger[\s]+Current[\s]+Channel[\s]+(?<fld26>[^\s]*)[\s]+new_rra[\s]+(?<fld38>[^/]*)/(?<fld39>.*)$" }
				id => "message-404065:02"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "404065:02"
					"[rsa][message][id1]" => "404065:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404065:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  AM <fld50>: ARM Error Threshold Trigger Current Channel <fld46> new_rra <fld47>/<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  AM %{fld50}: ARM Error Threshold Trigger Current Channel %{fld46} new_rra %{fld47}/%{fld48}" }
				id => "message-404065:03"
				add_field => {
					"[event][id]" => "404065:03"
					"[rsa][message][id1]" => "404065:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId414
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> AM <fld50> ARM Noise Threshold Trigger Current Channel <dclass_counter1> <info>
	else if [logstash][msgparser][id] == "msgParserId414" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} AM %{fld50} ARM Noise Threshold Trigger Current Channel %{dclass_counter1} %{info}" }
			id => "msgParserId414"
			add_field => {
				"event_description" => "ARM Noise Threshold Trigger Current Channel"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404069" {
		# MESSAGE 404069:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM Channel Interference Trigger new <change_new> old<change_old> new_rra <fld31>/<fld32> TCI <fld33>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM Channel Interference Trigger new %{change_new} old%{change_old} new_rra %{fld31}/%{fld32} TCI %{fld33}" }
				id => "message-404069:01"
				add_field => {
					"[event][id]" => "404069:01"
					"[rsa][message][id1]" => "404069:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404069:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: <fld13>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+(?<fld13>.*)$" }
				id => "message-404069:02"
				add_field => {
					"[event][id]" => "404069:02"
					"[rsa][message][id1]" => "404069:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404069:03
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  AM <fld50>: ARM Channel Interference Trigger new  <fld46> old <fld49> new_rra <fld47>/<fld48> TCI <fld33> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  AM %{fld50}: ARM Channel Interference Trigger new  %{fld46} old %{fld49} new_rra %{fld47}/%{fld48} TCI %{fld33}" }
				id => "message-404069:03"
				add_field => {
					"[event][id]" => "404069:03"
					"[rsa][message][id1]" => "404069:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId417
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM Empty Channel Trigger new <change_new> old <change_old> new_rra <fld13>
	else if [logstash][msgparser][id] == "msgParserId417" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM Empty Channel Trigger new %{change_new} old %{change_old} new_rra %{fld13}" }
			id => "msgParserId417"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId418
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM <fld50> ARM { Channel Interference | Empty Co Channel | Empty Channel } Trigger new <change_new> old <change_old> { new_rra <fld6> TCI <fld7> | new_rra <fld6> }
	else if [logstash][msgparser][id] == "msgParserId418" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+ARM[\s]+([\s]*Channel[\s]+Interference[\s]+|[\s]*Empty[\s]+Co[\s]+Channel[\s]+|[\s]*Empty[\s]+Channel[\s]+)[\s]+Trigger[\s]+new[\s]+(?<change_new>[^\s]*)[\s]+old[\s]+(?<change_old>[^\s]*)[\s]+([\s]*new_rra[\s]+(?<fld6>[^\s]*)[\s]+TCI[\s]+(?<fld7>[^\s]*)[\s]+|[\s]*new_rra[\s]+(?<fld6>[^\s]*)[\s]+)$" }
			id => "msgParserId418"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404074" {
		# MESSAGE 404074:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM - increasing power cov-index <fld13> tx-power <fld14> new_rra <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM - increasing power cov-index %{fld13} tx-power %{fld14} new_rra %{fld15}" }
				id => "message-404074:01"
				add_field => {
					"[event][id]" => "404074:01"
					"[rsa][message][id1]" => "404074:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404074:02
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}|  AM <fld50>: ARM - increasing power <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+ARM[\s]+\-[\s]+increasing[\s]+power[\s]+(?<info>.*)$" }
				id => "message-404074:02"
				add_field => {
				"event_description" => "ARM - increasing power"
					"[event][id]" => "404074:02"
					"[rsa][message][id1]" => "404074:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "404075" {
		# MESSAGE 404075:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM - decreasing power <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM - decreasing power %{info}" }
				id => "message-404075:01"
				add_field => {
				"event_description" => "ARM - decreasing power"
					"[event][id]" => "404075:01"
					"[rsa][message][id1]" => "404075:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404075:02
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}|  AM <fld50>: ARM - decreasing power <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+ARM[\s]+\-[\s]+decreasing[\s]+power[\s]+(?<info>.*)$" }
				id => "message-404075:02"
				add_field => {
				"event_description" => "ARM - decreasing power"
					"[event][id]" => "404075:02"
					"[rsa][message][id1]" => "404075:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "404077" {
		# MESSAGE 404077:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> AM <fld50> Packet with SRC = <smacaddr> DST = <dmacaddr> BSSID = <bssid> RSSI = <dclass_counter1> has invalid BSSID MAC
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+Packet[\s]+with[\s]+SRC[\s]+=[\s]+(?<smacaddr>[^\s]*)[\s]+DST[\s]+=[\s]+(?<dmacaddr>[^\s]*)[\s]+BSSID[\s]+=[\s]+(?<bssid>[^\s]*)[\s]+RSSI[\s]+=[\s]+(?<dclass_counter1>[^\s]*)[\s]+has[\s]+invalid[\s]+BSSID[\s]+MAC$" }
				id => "message-404077:01"
				add_field => {
				"event_description" => "Packet has invalid BSSID MAC"
					"[event][id]" => "404077:01"
					"[rsa][message][id1]" => "404077:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404077
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50> Rogue AP detected with SSID <ssid>, BSSID <fld3>, Wired MAC <fld4>, and IP <fld8>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+Rogue[\s]+AP[\s]+detected[\s]+with[\s]+SSID[\s]+(?<ssid>[^,]*),[\s]+BSSID[\s]+(?<fld3>[^,]*),[\s]+Wired[\s]+MAC[\s]+(?<fld4>[^,]*),[\s]+and[\s]+IP[\s]+(?<fld8>.*)$" }
				id => "message-404077"
				add_field => {
					"[event][id]" => "404077"
					"[rsa][message][id1]" => "404077"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404077:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <macaddr>@<hostip> <fld2>|  AM <fld9> <fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{macaddr}@%{hostip} %{fld2}|  AM %{fld9} %{fld10}" }
				id => "message-404077:02"
				add_field => {
					"[event][id]" => "404077:02"
					"[rsa][message][id1]" => "404077:02"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId425
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{ AP <macaddr>@<hostip> <process> | <process>}| <space> AM <fld50>: Packet with SRC = <smacaddr> DST = <dmacaddr>BSSID =<bssid>RSSI = <dclass_counter1> has invalid SRC MAC
	else if [logstash][msgparser][id] == "msgParserId425" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|([\s]*AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Packet[\s]+with[\s]+SRC[\s]+=[\s]+(?<smacaddr>[^\s]*)[\s]+DST[\s]+=[\s]+(?<dmacaddr>[^B]*)BSSID[\s]+=(?<bssid>[^R]*)RSSI[\s]+=[\s]+(?<dclass_counter1>[^\s]*)[\s]+has[\s]+invalid[\s]+SRC[\s]+MAC$" }
			id => "msgParserId425"
			add_field => {
				"event_description" => "Packet has invalid SRC MAC"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId426
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{ AP <macaddr>@<hostip> <process> | <process>}| <space> AM <fld50>: Packet with SRC = <smacaddr> DST = <dmacaddr> BSSID =<bssid> RSSI = <dclass_counter1> has invalid DST MAC
	else if [logstash][msgparser][id] == "msgParserId426" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|([\s]*AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Packet[\s]+with[\s]+SRC[\s]+=[\s]+(?<smacaddr>[^\s]*)[\s]+DST[\s]+=[\s]+(?<dmacaddr>[^\s]*)[\s]+BSSID[\s]+=(?<bssid>[^\s]*)[\s]+RSSI[\s]+=[\s]+(?<dclass_counter1>[^\s]*)[\s]+has[\s]+invalid[\s]+DST[\s]+MAC$" }
			id => "msgParserId426"
			add_field => {
				"event_description" => "Packet has invalid DST MAC"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404080" {
		# MESSAGE 404080:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld3>@<fld4> sapd|  AM <fld5>: <fld6> <fld7> detected with Src <smacaddr>, Dst <dmacaddr>, BSSID <fld10>, and RSSI <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld3}@%{fld4} sapd|  AM %{fld5}: %{fld6} %{fld7} detected with Src %{smacaddr}, Dst %{dmacaddr}, BSSID %{fld10}, and RSSI %{fld11}" }
				id => "message-404080:01"
				add_field => {
					"[event][id]" => "404080:01"
					"[rsa][message][id1]" => "404080:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404080:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM <fld50>: ADHOC network detected with Src <smacaddr>, BSSID <fld3>, ESSID <fld4> Channel <fld5> and RSSI <fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+ADHOC[\s]+network[\s]+detected[\s]+with[\s]+Src[\s]+(?<smacaddr>[^,]*),[\s]+BSSID[\s]+(?<fld3>[^,]*),[\s]+ESSID[\s]+(?<fld4>[^\s]*)[\s]+Channel[\s]+(?<fld5>[^\s]*)[\s]+and[\s]+RSSI[\s]+(?<fld6>.*)$" }
				id => "message-404080:02"
				add_field => {
					"[event][id]" => "404080:02"
					"[rsa][message][id1]" => "404080:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "404081" {
		# MESSAGE 404081:01
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Wireless bridge detected with Transmitter <smacaddr>, Receiver <dmacaddr>, Channel <fld26> and RSSI=<fld37>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Wireless[\s]+bridge[\s]+detected[\s]+with[\s]+Transmitter[\s]+(?<smacaddr>[^,]*),[\s]+Receiver[\s]+(?<dmacaddr>[^,]*),[\s]+Channel[\s]+(?<fld26>[^\s]*)[\s]+and[\s]+RSSI=(?<fld37>.*)$" }
				id => "message-404081:01"
				add_field => {
					"[event][id]" => "404081:01"
					"[rsa][message][id1]" => "404081:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404081:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  AM <fld5>: <fld6> <fld7> detected with Transmitter <fld8>, Receiver <fld9>, and RSSI=<fld10>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld5>[^:]*):[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+detected[\s]+with[\s]+Transmitter[\s]+(?<fld8>[^,]*),[\s]+Receiver[\s]+(?<fld9>[^,]*),[\s]+and[\s]+RSSI=(?<fld10>.*)$" }
				id => "message-404081:02"
				add_field => {
					"[event][id]" => "404081:02"
					"[rsa][message][id1]" => "404081:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId431
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Fake AP flood detected for potentially <dclass_counter1> APs. <info>
	else if [logstash][msgparser][id] == "msgParserId431" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Fake[\s]+AP[\s]+flood[\s]+detected[\s]+for[\s]+potentially[\s]+(?<dclass_counter1>[^\s]*)[\s]+APs\.[\s]+(?<info>.*)$" }
			id => "msgParserId431"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404085" {
		# MESSAGE 404085
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld3>: ARM HT Channel Interference Trigger new <change_new> old <change_old> new_rra <fld4> TCI <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld3}: ARM HT Channel Interference Trigger new %{change_new} old %{change_old} new_rra %{fld4} TCI %{fld5}" }
				id => "message-404085"
				add_field => {
					"[event][id]" => "404085"
					"[rsa][message][id1]" => "404085"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404085:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM HT Channel Interference Trigger new  <fld5>/ <fld6> old <fld7>/ <fld8> new_rra <fld9>/ <fld10> TCI <fld11> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM HT Channel Interference Trigger new  %{fld5}/ %{fld6} old %{fld7}/ %{fld8} new_rra %{fld9}/ %{fld10} TCI %{fld11}" }
				id => "message-404085:01"
				add_field => {
					"[event][id]" => "404085:01"
					"[rsa][message][id1]" => "404085:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId433
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM HT Noise Threshold Trigger Current Channel <fld4> new_rra <fld6>
	else if [logstash][msgparser][id] == "msgParserId433" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM HT Noise Threshold Trigger Current Channel %{fld4} new_rra %{fld6}" }
			id => "msgParserId433"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId434
	# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: HT Greenfield capability supported for AP BSSID <fld3> SSID <ssid> Channel <fld26>
	else if [logstash][msgparser][id] == "msgParserId434" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+HT[\s]+Greenfield[\s]+capability[\s]+supported[\s]+for[\s]+AP[\s]+BSSID[\s]+(?<fld3>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+Channel[\s]+(?<fld26>.*)$" }
			id => "msgParserId434"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId435
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{ AP <macaddr>@<hostip> <process> | <process>}| <space> AM <fld50> HT 40MHZ Intolerance setting detected for AP BSSID <bssid> SSID <ssid> Channel <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId435" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|([\s]*AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+HT[\s]+40MHZ[\s]+Intolerance[\s]+setting[\s]+detected[\s]+for[\s]+AP[\s]+BSSID[\s]+(?<bssid>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+Channel[\s]+(?<dclass_counter1>.*)$" }
			id => "msgParserId435"
			add_field => {
				"event_description" => "HT 40MHZ Intolerance setting detected for AP"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404097" {
		# MESSAGE 404097:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2> <fld3>>  AM <fld4>: ARM - HT increasing power cov-index <fld5> tx-power <fld6> new_rra <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2} %{fld3}>  AM %{fld4}: ARM - HT increasing power cov-index %{fld5} tx-power %{fld6} new_rra %{fld7}" }
				id => "message-404097:01"
				add_field => {
					"[event][id]" => "404097:01"
					"[rsa][message][id1]" => "404097:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404097:02
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| AM <fld50>: Rogue AP detected with SSID <ssid>, BSSID <fld3>, Wired MAC <fld4>, and IP <fld5>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+AM[\s]+(?<fld50>[^:]*):[\s]+Rogue[\s]+AP[\s]+detected[\s]+with[\s]+SSID[\s]+(?<ssid>[^,]*),[\s]+BSSID[\s]+(?<fld3>[^,]*),[\s]+Wired[\s]+MAC[\s]+(?<fld4>[^,]*),[\s]+and[\s]+IP[\s]+(?<fld5>.*)$" }
				id => "message-404097:02"
				add_field => {
					"[event][id]" => "404097:02"
					"[rsa][message][id1]" => "404097:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404097
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM - HT increasing power cov-index <fld5>/<fld6> tx-power <fld7> new_rra <fld8>+/<fld9> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM - HT increasing power cov-index %{fld5}/%{fld6} tx-power %{fld7} new_rra %{fld8}+/%{fld9}" }
				id => "message-404097"
				add_field => {
					"[event][id]" => "404097"
					"[rsa][message][id1]" => "404097"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId438
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AM <fld50>: ARM - HT decreasing power cov-index <fld4> tx-power <fld6> new_rra <fld7>
	else if [logstash][msgparser][id] == "msgParserId438" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AM %{fld50}: ARM - HT decreasing power cov-index %{fld4} tx-power %{fld6} new_rra %{fld7}" }
			id => "msgParserId438"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId439
	# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |{AP <macaddr>@<hostip> <process> | <process>}| <space> AM <fld50> Signature Match detected. SignatureName="<rulename>" Src=<smacaddr> Dst=<dmacaddr> Bssid=<bssid> Channel=<dclass_counter1> RSSI=<dclass_counter2>
	else if [logstash][msgparser][id] == "msgParserId439" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<id>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+|[\s]*(?<process>[^\|]*))\|[\s]+(?<space>[^\s]*)[\s]+AM[\s]+(?<fld50>[^\s]*)[\s]+Signature[\s]+Match[\s]+detected\.[\s]+SignatureName=\"(?<rulename>[^\"]*)\"[\s]+Src=(?<smacaddr>[^\s]*)[\s]+Dst=(?<dmacaddr>[^\s]*)[\s]+Bssid=(?<bssid>[^\s]*)[\s]+Channel=(?<dclass_counter1>[^\s]*)[\s]+RSSI=(?<dclass_counter2>.*)$" }
			id => "msgParserId439"
			add_field => {
				"event_description" => "Signature Match detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId440
	# line in RSA:  <fld1> <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld2>>  AM:SM: Spectrum: new Wi-Fi device found = <device> SSID = <ssid> BSSID <bssid> DEVICE ID <fld3> 
	else if [logstash][msgparser][id] == "msgParserId440" {
		dissect {
			mapping => { "message" => "%{fld1} %{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld2}>  AM:SM: Spectrum: new Wi-Fi device found = %{device} SSID = %{ssid} BSSID %{bssid} DEVICE ID %{fld3}" }
			id => "msgParserId440"
			add_field => {
				"event_description" => "new Wi-Fi device found"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId441
	# line in RSA:  <fld1> <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld2>>  AM:SM: Spectrum: deleting Wi-Fi device = <device> SSID = <ssid> BSSID <bssid> DEVICE ID <fld3> 
	else if [logstash][msgparser][id] == "msgParserId441" {
		dissect {
			mapping => { "message" => "%{fld1} %{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld2}>  AM:SM: Spectrum: deleting Wi-Fi device = %{device} SSID = %{ssid} BSSID %{bssid} DEVICE ID %{fld3}" }
			id => "msgParserId441"
			add_field => {
				"event_description" => "deleting Wi-Fi device"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId442
	# line in RSA:  <fld1> <agent>[<process_id>]: <<<id>> <<<severity>> <<<fld2>>  AM:SM: Spectrum: new non-Wi-Fi device found = <device> DEVICE ID <fld10> Type <fld9> Signal <fld6> Freq <fld7> Bandwidth <fld8> 
	else if [logstash][msgparser][id] == "msgParserId442" {
		dissect {
			mapping => { "message" => "%{fld1} %{agent}[%{process_id}]: <%{id}> <%{severity}> <%{fld2}>  AM:SM: Spectrum: new non-Wi-Fi device found = %{device} DEVICE ID %{fld10} Type %{fld9} Signal %{fld6} Freq %{fld7} Bandwidth %{fld8}" }
			id => "msgParserId442"
			add_field => {
				"event_description" => "new non-Wi-Fi device found"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "500010" {
		# MESSAGE 500010:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Station <fld40>, <fld41>: Mobility trail, on switch <fld42>, VLAN <vlan>, AP <access_point>, <fld45>/<fld3>/<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Station %{fld40}, %{fld41}: Mobility trail, on switch %{fld42}, VLAN %{vlan}, AP %{access_point}, %{fld45}/%{fld3}/%{fld13}" }
				id => "message-500010:01"
				add_field => {
					"[event][id]" => "500010:01"
					"[rsa][message][id1]" => "500010:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 500010:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  Station <fld40>,<fld21>: Mobility trail, on switch <fld22>, VLAN <vlan>, AP <access_point>, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Station[\s]+(?<fld40>[^,]*),(?<fld21>[^:]*):[\s]+Mobility[\s]+trail,[\s]+on[\s]+switch[\s]+(?<fld22>[^,]*),[\s]+VLAN[\s]+(?<vlan>[^,]*),[\s]+AP[\s]+(?<access_point>[^,]*),[\s]+(?<result>.*)$" }
				id => "message-500010:02"
				add_field => {
					"[event][id]" => "500010:02"
					"[rsa][message][id1]" => "500010:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "500511" {
		# MESSAGE 500511:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  Station <fld40>, <fld12>: Received association on ESSID: <result>, AP: Name <access_point> Group <group> BSSID <fld3>, { <fld22> VLAN <vlan> | <fld33> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Station[\s]+(?<fld40>[^,]*),[\s]+(?<fld12>[^:]*):[\s]+Received[\s]+association[\s]+on[\s]+ESSID:[\s]+(?<result>[^,]*),[\s]+AP:[\s]+Name[\s]+(?<access_point>[^\s]*)[\s]+Group[\s]+(?<group>[^\s]*)[\s]+BSSID[\s]+(?<fld3>[^,]*),[\s]+([\s]*(?<fld22>[^\s]*)[\s]+VLAN[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*(?<fld33>[^\s]*)[\s]+)$" }
				id => "message-500511:01"
				add_field => {
					"[event][id]" => "500511:01"
					"[rsa][message][id1]" => "500511:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 500511:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  Station <fld40>,<fld12>: Received disassociation on ESSID: <result>, AP: <access_point> Group <group> BSSID <fld3>, { <fld22> VLAN <vlan> | <fld33> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+Station[\s]+(?<fld40>[^,]*),(?<fld12>[^:]*):[\s]+Received[\s]+disassociation[\s]+on[\s]+ESSID:[\s]+(?<result>[^,]*),[\s]+AP:[\s]+(?<access_point>[^\s]*)[\s]+Group[\s]+(?<group>[^\s]*)[\s]+BSSID[\s]+(?<fld3>[^,]*),[\s]+([\s]*(?<fld22>[^\s]*)[\s]+VLAN[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*(?<fld33>[^\s]*)[\s]+)$" }
				id => "message-500511:02"
				add_field => {
					"[event][id]" => "500511:02"
					"[rsa][message][id1]" => "500511:02"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId447
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Station <fld40>: No authentication found trying to de-authenticate to BSSID <fld3> on AP <access_point>
	else if [logstash][msgparser][id] == "msgParserId447" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Station %{fld40}: No authentication found trying to de-authenticate to BSSID %{fld3} on AP %{access_point}" }
			id => "msgParserId447"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "501080" {
		# MESSAGE 501080
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Deauth to sta: <fld40>: Ageout AP <hostip>-<macaddr>-<access_point> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Deauth to sta: %{fld40}: Ageout AP %{hostip}-%{macaddr}-%{access_point} %{result}" }
				id => "message-501080"
				add_field => {
					"[event][id]" => "501080"
					"[rsa][message][id1]" => "501080"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501080:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Deauth to sta: <fld40>: Ageout AP <hostip>-<macaddr>-<fld48> <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Deauth to sta: %{fld40}: Ageout AP %{hostip}-%{macaddr}-%{fld48} %{result}" }
				id => "message-501080:01"
				add_field => {
					"[event][id]" => "501080:01"
					"[rsa][message][id1]" => "501080:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "501093" {
		# MESSAGE 501093
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Auth success: <smacaddr>: AP <hostip>-<macaddr>-<fld48>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Auth success: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48}" }
				id => "message-501093"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "501093"
					"[rsa][message][id1]" => "501093"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501093:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Auth success: <smacaddr>: AP <hostip>-<macaddr>-<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Auth success: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48}" }
				id => "message-501093:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "501093:01"
					"[rsa][message][id1]" => "501093:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "501095" {
		# MESSAGE 501095
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Assoc request @ <fld12> <smacaddr> (SN <fld14>): AP <hostip>-<macaddr>-<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Assoc request @ %{fld12} %{smacaddr} (SN %{fld14}): AP %{hostip}-%{macaddr}-%{fld48}" }
				id => "message-501095"
				add_field => {
					"[event][id]" => "501095"
					"[rsa][message][id1]" => "501095"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501095:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Assoc request @ <fld12> <smacaddr> (SN <fld14>): AP <hostip>-<macaddr>-<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Assoc request @ %{fld12} %{smacaddr} (SN %{fld14}): AP %{hostip}-%{macaddr}-%{fld48}" }
				id => "message-501095:01"
				add_field => {
					"[event][id]" => "501095:01"
					"[rsa][message][id1]" => "501095:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "501100" {
		# MESSAGE 501100
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Assoc success @ <fld12> <smacaddr>: AP <hostip>-<macaddr>-<fld48>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Assoc success @ %{fld12} %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48}" }
				id => "message-501100"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "501100"
					"[rsa][message][id1]" => "501100"
					"[event][categoryid]" => "1602010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501100:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Assoc success @ <fld12> <smacaddr>: AP <hostip>-<macaddr>-<fld48>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Assoc success @ %{fld12} %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48}" }
				id => "message-501100:01"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "501100:01"
					"[rsa][message][id1]" => "501100:01"
					"[event][categoryid]" => "1602010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId456
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Assoc failure: <smacaddr>: AP <hostip>-<macaddr>-<fld48> Reason <result>
	else if [logstash][msgparser][id] == "msgParserId456" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Assoc failure: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48} Reason %{result}" }
			id => "msgParserId456"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId457
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Disassoc from sta: <fld40> AP <hostip>-<macaddr>-<fld6> Reason <result>
	else if [logstash][msgparser][id] == "msgParserId457" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Disassoc from sta: %{fld40} AP %{hostip}-%{macaddr}-%{fld6} Reason %{result}" }
			id => "msgParserId457"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "501105" {
		# MESSAGE 501105
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Deauth from sta: <fld40>: AP <hostip>-<macaddr>-<access_point> Reason <result>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Deauth from sta: %{fld40}: AP %{hostip}-%{macaddr}-%{access_point} Reason %{result}" }
				id => "message-501105"
				add_field => {
					"[event][id]" => "501105"
					"[rsa][message][id1]" => "501105"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501105:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Deauth from sta: <smacaddr>: AP <hostip>-<macaddr>-<fld48> Reason <result>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Deauth from sta: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48} Reason %{result}" }
				id => "message-501105:01"
				add_field => {
					"[event][id]" => "501105:01"
					"[rsa][message][id1]" => "501105:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "501106" {
		# MESSAGE 501106
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Deauth to sta: <fld40>: Ageout AP <hostip>-<macaddr>-<fld48> <fld49>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Deauth to sta: %{fld40}: Ageout AP %{hostip}-%{macaddr}-%{fld48} %{fld49}" }
				id => "message-501106"
				add_field => {
					"[event][id]" => "501106"
					"[rsa][message][id1]" => "501106"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501106:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Deauth to sta: <smacaddr>: Ageout AP <hostip>-<macaddr>-<fld48> <fld49>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Deauth to sta: %{smacaddr}: Ageout AP %{hostip}-%{macaddr}-%{fld48} %{fld49}" }
				id => "message-501106:01"
				add_field => {
					"[event][id]" => "501106:01"
					"[rsa][message][id1]" => "501106:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "501109" {
		# MESSAGE 501109
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Auth request: <smacaddr>: AP <hostip>-<macaddr>-<fld48> auth_alg <fld14>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Auth request: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48} auth_alg %{fld14}" }
				id => "message-501109"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "501109"
					"[rsa][message][id1]" => "501109"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501109:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Auth request: <smacaddr>: AP <hostip>-<macaddr>-<fld3> auth_alg <fld14> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Auth request: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld3} auth_alg %{fld14}" }
				id => "message-501109:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "501109:01"
					"[rsa][message][id1]" => "501109:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId464
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Deauth from sta: <fld40>: AP <hostip>-<macaddr>-<fld48> Reason <resultcode>
	else if [logstash][msgparser][id] == "msgParserId464" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Deauth from sta: %{fld40}: AP %{hostip}-%{macaddr}-%{fld48} Reason %{resultcode}" }
			id => "msgParserId464"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId465
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |voice| VM: Client <saddr> is registered
	else if [logstash][msgparser][id] == "msgParserId465" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |voice| VM: Client %{saddr} is registered" }
			id => "msgParserId465"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId466
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| VM: VoIP call terminated for client <saddr>
	else if [logstash][msgparser][id] == "msgParserId466" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+VM:[\s]+VoIP[\s]+call[\s]+terminated[\s]+for[\s]+client[\s]+(?<saddr>.*)$" }
			id => "msgParserId466"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId467
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| VM: VoIP call started for client <saddr>
	else if [logstash][msgparser][id] == "msgParserId467" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+VM:[\s]+VoIP[\s]+call[\s]+started[\s]+for[\s]+client[\s]+(?<saddr>.*)$" }
			id => "msgParserId467"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId468
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| VM: CDR started for client <saddr>, protocol <network_service>
	else if [logstash][msgparser][id] == "msgParserId468" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+VM:[\s]+CDR[\s]+started[\s]+for[\s]+client[\s]+(?<saddr>[^,]*),[\s]+protocol[\s]+(?<network_service>.*)$" }
			id => "msgParserId468"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId469
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| VM: CDR generated for client IP:<saddr> Name:<fld4> ALG:<fld5> Dir:<fld6> Peer Party:<fld7> Status:<event_state> Dur:<fld9> Orig time:<fld13> R-value:<fld12> Reason:<result> Codec:<fld14> Band:<fld15> Setup Time:<fld16> Re-Assoc:<fld17> Initial-BSSID:<fld18> Initial-ESSID:<fld19> Initial-AP Name:<fld20>
	else if [logstash][msgparser][id] == "msgParserId469" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+VM:[\s]+CDR[\s]+generated[\s]+for[\s]+client[\s]+IP:(?<saddr>[^\s]*)[\s]+Name:(?<fld4>[^\s]*)[\s]+ALG:(?<fld5>[^\s]*)[\s]+Dir:(?<fld6>[^\s]*)[\s]+Peer[\s]+Party:(?<fld7>[^\s]*)[\s]+Status:(?<event_state>[^\s]*)[\s]+Dur:(?<fld9>[^\s]*)[\s]+Orig[\s]+time:(?<fld13>[^\s]*)[\s]+R\-value:(?<fld12>[^\s]*)[\s]+Reason:(?<result>[^\s]*)[\s]+Codec:(?<fld14>[^\s]*)[\s]+Band:(?<fld15>[^\s]*)[\s]+Setup[\s]+Time:(?<fld16>[^\s]*)[\s]+Re\-Assoc:(?<fld17>[^\s]*)[\s]+Initial\-BSSID:(?<fld18>[^\s]*)[\s]+Initial\-ESSID:(?<fld19>[^\s]*)[\s]+Initial\-AP[\s]+Name:(?<fld20>.*)$" }
			id => "msgParserId469"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId470
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}| DIGITMAP: <fld3> profile  not found
	else if [logstash][msgparser][id] == "msgParserId470" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld10>[^\s]*)[\s]+(?<fld11>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+DIGITMAP:[\s]+(?<fld3>[^\s]*)[\s]+profile[\s]+not[\s]+found$" }
			id => "msgParserId470"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "522005" {
		# MESSAGE 522005:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> MAC=<smacaddr> IP=<saddr> User entry deleted: reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} MAC=%{smacaddr} IP=%{saddr} User entry deleted: reason=%{result}" }
				id => "message-522005:01"
				add_field => {
				"event_description" => "User entry deleted"
					"[event][id]" => "522005:01"
					"[rsa][message][id1]" => "522005:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522005
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> User entry deleted: reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} User entry deleted: reason=%{result}" }
				id => "message-522005"
				add_field => {
					"[event][id]" => "522005"
					"[rsa][message][id1]" => "522005"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522006" {
		# MESSAGE 522006:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> MAC=<smacaddr> IP=<saddr> User entry added: reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} MAC=%{smacaddr} IP=%{saddr} User entry added: reason=%{result}" }
				id => "message-522006:01"
				add_field => {
				"event_description" => "User entry added"
					"[event][id]" => "522006:01"
					"[rsa][message][id1]" => "522006:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522006
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> User entry added: reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} User entry added: reason=%{result}" }
				id => "message-522006"
				add_field => {
					"[event][id]" => "522006"
					"[rsa][message][id1]" => "522006"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522008" {
		# MESSAGE 522008:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  User Authentication Successful: username=<username> MAC=<smacaddr> IP=<saddr> role=<user_role> VLAN=<vlan> AP=<access_point> SSID=<ssid> AAA profile=<fld18> auth method=<authmethod> auth server=<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  User Authentication Successful: username=%{username} MAC=%{smacaddr} IP=%{saddr} role=%{user_role} VLAN=%{vlan} AP=%{access_point} SSID=%{ssid} AAA profile=%{fld18} auth method=%{authmethod} auth server=%{fld12}" }
				id => "message-522008:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "522008:01"
					"[rsa][message][id1]" => "522008:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522008:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  User authenticated: Name=<username> MAC=<smacaddr> IP=<saddr> method=<network_service> server=<dhost> role=<user_role>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+User[\s]+authenticated:[\s]+Name=(?<username>[^\s]*)[\s]+MAC=(?<smacaddr>[^\s]*)[\s]+IP=(?<saddr>[^\s]*)[\s]+method=(?<network_service>[^\s]*)[\s]+server=(?<dhost>[^\s]*)[\s]+role=(?<user_role>.*)$" }
				id => "message-522008:02"
				add_field => {
				"ec_subject" => "User"
					"[event][id]" => "522008:02"
					"[rsa][message][id1]" => "522008:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522010" {
		# MESSAGE 522010:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  MAC=<smacaddr> IP=<saddr> User de-authenticated: name=<username>, cause=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+MAC=(?<smacaddr>[^\s]*)[\s]+IP=(?<saddr>[^\s]*)[\s]+User[\s]+de\-authenticated:[\s]+name=(?<username>[^,]*),[\s]+cause=(?<result>.*)$" }
				id => "message-522010:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "522010:01"
					"[rsa][message][id1]" => "522010:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522010:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> User de-authenticated: name=<username>, cause=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} User de-authenticated: name=%{username}, cause=%{result}" }
				id => "message-522010:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "522010:02"
					"[rsa][message][id1]" => "522010:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId479
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> User idle timeout ignored: reason=<result>
	else if [logstash][msgparser][id] == "msgParserId479" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} User idle timeout ignored: reason=%{result}" }
			id => "msgParserId479"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId480
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> IP UP: outerIP=<fld21> tunnels=<fld22>
	else if [logstash][msgparser][id] == "msgParserId480" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} IP UP: outerIP=%{fld21} tunnels=%{fld22}" }
			id => "msgParserId480"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId481
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> IP DN: outerIP=<fld21> tunnels=<fld22>
	else if [logstash][msgparser][id] == "msgParserId481" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} IP DN: outerIP=%{fld21} tunnels=%{fld22}" }
			id => "msgParserId481"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "522026" {
		# MESSAGE 522026:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> MAC=<smacaddr> IP=<saddr> User miss: ingress=<fld12>, VLAN=<vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} MAC=%{smacaddr} IP=%{saddr} User miss: ingress=%{fld12}, VLAN=%{vlan}" }
				id => "message-522026:01"
				add_field => {
				"event_description" => "User miss"
					"[event][id]" => "522026:01"
					"[rsa][message][id1]" => "522026:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522026
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> User miss: ingress=<fld12>, VLAN=<vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} User miss: ingress=%{fld12}, VLAN=%{vlan}" }
				id => "message-522026"
				add_field => {
					"[event][id]" => "522026"
					"[rsa][message][id1]" => "522026"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522027" {
		# MESSAGE 522027
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  MAC=<smacaddr> IP=<saddr> IP Spoof from MAC=<fld12> role=<user_role>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+MAC=(?<smacaddr>[^\s]*)[\s]+IP=(?<saddr>[^\s]*)[\s]+IP[\s]+Spoof[\s]+from[\s]+MAC=(?<fld12>[^\s]*)[\s]+role=(?<user_role>.*)$" }
				id => "message-522027"
				add_field => {
					"[event][id]" => "522027"
					"[rsa][message][id1]" => "522027"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522027:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <space>  MAC=<smacaddr> IP=<saddr> IP Spoof from MAC=<fld12> role=<user_role>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{space}  MAC=%{smacaddr} IP=%{saddr} IP Spoof from MAC=%{fld12} role=%{user_role}" }
				id => "message-522027:01"
				add_field => {
					"[event][id]" => "522027:01"
					"[rsa][message][id1]" => "522027:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId486
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <space> Dropping IKE message drop from <saddr> <sport> due to notification type:<fld12> 
	else if [logstash][msgparser][id] == "msgParserId486" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{space} Dropping IKE message drop from %{saddr} %{sport} due to notification type:%{fld12}" }
			id => "msgParserId486"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId487
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |{AP <macaddr>@<hostip> <fld2> | <fld2>}|  MAC=<smacaddr> Assigned VLAN <fld12> is not configured, using default VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId487" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|(AP[\s]+(?<macaddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*(?<fld2>[^\|]*))\|[\s]+MAC=(?<smacaddr>[^\s]*)[\s]+Assigned[\s]+VLAN[\s]+(?<fld12>[^\s]*)[\s]+is[\s]+not[\s]+configured,[\s]+using[\s]+default[\s]+VLAN[\s]+(?<vlan>.*)$" }
			id => "msgParserId487"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId488
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC= <smacaddr> Station authenticate: method=<authmethod> role=<user_role>, VLAN=<vlan>, Derivation=<fld12>, Value Pair=<fld13>
	else if [logstash][msgparser][id] == "msgParserId488" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC= %{smacaddr} Station authenticate: method=%{authmethod} role=%{user_role}, VLAN=%{vlan}, Derivation=%{fld12}, Value Pair=%{fld13}" }
			id => "msgParserId488"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId489
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<fld40> Station deauthenticated: BSSID=<fld3>, ESSID=<fld45>
	else if [logstash][msgparser][id] == "msgParserId489" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{fld40} Station deauthenticated: BSSID=%{fld3}, ESSID=%{fld45}" }
			id => "msgParserId489"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "522035" {
		# MESSAGE 522035:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> MAC=<smacaddr> Station UP: BSSID=<bssid> ESSID=<ssid> VLAN=<vlan> AP-name=<access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} MAC=%{smacaddr} Station UP: BSSID=%{bssid} ESSID=%{ssid} VLAN=%{vlan} AP-name=%{access_point}" }
				id => "message-522035:01"
				add_field => {
				"event_description" => "Station UP"
					"[event][id]" => "522035:01"
					"[rsa][message][id1]" => "522035:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522035
		# line in RSA:  <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> Station UP: BSSID=<bssid> ESSID=<ssid> VLAN=<vlan> AP-name=<access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} Station UP: BSSID=%{bssid} ESSID=%{ssid} VLAN=%{vlan} AP-name=%{access_point}" }
				id => "message-522035"
				add_field => {
				"event_description" => "Station UP"
					"[event][id]" => "522035"
					"[rsa][message][id1]" => "522035"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522036" {
		# MESSAGE 522036:01
		# line in RSA:  <agent>[<process_id>]: <<<id>> <<<severity>> |<process>| <space> MAC=<smacaddr> Station DN: BSSID=<bssid> ESSID=<ssid> VLAN=<vlan> AP-name=<access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{id}> <%{severity}> |%{process}| %{space} MAC=%{smacaddr} Station DN: BSSID=%{bssid} ESSID=%{ssid} VLAN=%{vlan} AP-name=%{access_point}" }
				id => "message-522036:01"
				add_field => {
				"event_description" => "Station DOWN"
					"[event][id]" => "522036:01"
					"[rsa][message][id1]" => "522036:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522036
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> Station DN: BSSID=<fld3> ESSID=<fld45> VLAN=<vlan> AP-name=<access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} Station DN: BSSID=%{fld3} ESSID=%{fld45} VLAN=%{vlan} AP-name=%{access_point}" }
				id => "message-522036"
				add_field => {
					"[event][id]" => "522036"
					"[rsa][message][id1]" => "522036"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522038" {
		# MESSAGE 522038:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr> IP=<saddr> Authentication result=<result> method=<authmethod> server=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr} IP=%{saddr} Authentication result=%{result} method=%{authmethod} server=%{fld7}" }
				id => "message-522038:01"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "522038:01"
					"[rsa][message][id1]" => "522038:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522038:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  username=<username> MAC=<smacaddr> IP=<saddr> Authentication result=<result> method=<authmethod> server=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  username=%{username} MAC=%{smacaddr} IP=%{saddr} Authentication result=%{result} method=%{authmethod} server=%{fld7}" }
				id => "message-522038:02"
				add_field => {
				"ec_theme" => "Authentication"
					"[event][id]" => "522038:02"
					"[rsa][message][id1]" => "522038:02"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522042" {
		# MESSAGE 522042:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  User Authentication Failed: username=<username> MAC=<smacaddr> IP=<saddr> auth method=<authmethod> auth server=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  User Authentication Failed: username=%{username} MAC=%{smacaddr} IP=%{saddr} auth method=%{authmethod} auth server=%{fld6}" }
				id => "message-522042:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "522042:01"
					"[rsa][message][id1]" => "522042:01"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522042:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  User Authentication Failed: MAC=<smacaddr> IP=<saddr> auth method=<authmethod> auth server=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  User Authentication Failed: MAC=%{smacaddr} IP=%{saddr} auth method=%{authmethod} auth server=%{fld6}" }
				id => "message-522042:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "522042:02"
					"[rsa][message][id1]" => "522042:02"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId498
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<dmacaddr> Station authenticate(start): method=<authmethod> role=<user_role>, VLAN=<vlan>, Derivation=<fld12>, Value Pair=<fld13>
	else if [logstash][msgparser][id] == "msgParserId498" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{dmacaddr} Station authenticate(start): method=%{authmethod} role=%{user_role}, VLAN=%{vlan}, Derivation=%{fld12}, Value Pair=%{fld13}" }
			id => "msgParserId498"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "KERNEL" {
		# MESSAGE KERNEL:01
		# line in RSA: <fld1> : calibrate start, npkts <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} : calibrate start, npkts %{fld13}" }
				id => "message-KERNEL:01"
				add_field => {
					"[event][id]" => "KERNEL:01"
					"[rsa][message][id1]" => "KERNEL:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE KERNEL:02
		# line in RSA: Calibration tx done
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Calibration tx done" }
				id => "message-KERNEL:02"
				add_field => {
					"[event][id]" => "KERNEL:02"
					"[rsa][message][id1]" => "KERNEL:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE KERNEL:03
		# line in RSA:  irq fixup: slot <fld1>, pin <fld2>, irq <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "irq fixup: slot %{fld1}, pin %{fld2}, irq %{fld3}" }
				id => "message-KERNEL:03"
				add_field => {
					"[event][id]" => "KERNEL:03"
					"[rsa][message][id1]" => "KERNEL:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE KERNEL:04
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>(<fld13>): <fld14>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}(%{fld13}): %{fld14}" }
				id => "message-KERNEL:04"
				add_field => {
					"[event][id]" => "KERNEL:04"
					"[rsa][message][id1]" => "KERNEL:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE KERNEL:05
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent> <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent} %{fld13}" }
				id => "message-KERNEL:05"
				add_field => {
					"[event][id]" => "KERNEL:05"
					"[rsa][message][id1]" => "KERNEL:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE KERNEL:06
		# line in RSA:  <fld3>(<shost>@<saddr>): <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3}(%{shost}@%{saddr}): %{event_description}" }
				id => "message-KERNEL:06"
				add_field => {
					"[event][id]" => "KERNEL:06"
					"[rsa][message][id1]" => "KERNEL:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "RRA" {
		# MESSAGE RRA:01
		# line in RSA:  AP <access_point>  is on channel <fld2> at power level <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AP %{access_point}  is on channel %{fld2} at power level %{fld3}" }
				id => "message-RRA:01"
				add_field => {
					"[event][id]" => "RRA:01"
					"[rsa][message][id1]" => "RRA:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RRA:02
		# line in RSA:  Number of calibration records = <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of calibration records = %{fld1}" }
				id => "message-RRA:02"
				add_field => {
					"[event][id]" => "RRA:02"
					"[rsa][message][id1]" => "RRA:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RRA:03
		# line in RSA:  Number of AMs = <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Number of AMs = %{fld1}" }
				id => "message-RRA:03"
				add_field => {
					"[event][id]" => "RRA:03"
					"[rsa][message][id1]" => "RRA:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RRA:04
		# line in RSA:  <fld1> APs are ON
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} APs are ON" }
				id => "message-RRA:04"
				add_field => {
					"[event][id]" => "RRA:04"
					"[rsa][message][id1]" => "RRA:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE System:01
		# line in RSA: System log daemon exiting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System log daemon exiting." }
				id => "message-System:01"
				add_field => {
					"[event][id]" => "System:01"
					"[rsa][message][id1]" => "System:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:02
		# line in RSA: <fld1> <<<fld2> <fld3>> System log daemon exiting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> System log daemon exiting." }
				id => "message-System:02"
				add_field => {
					"[event][id]" => "System:02"
					"[rsa][message][id1]" => "System:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId510
	# line in RSA: on_exit: exiting with code <resultcode>
	else if [logstash][msgparser][id] == "msgParserId510" {
		dissect {
			mapping => { "message" => "on_exit: exiting with code %{resultcode}" }
			id => "msgParserId510"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "aaa" {
		# MESSAGE aaa:01
		# line in RSA: <<<severity>> PUBSUB: received subscription message from <fld1> for service <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> PUBSUB: received subscription message from %{fld1} for service %{fld2}" }
				id => "message-aaa:01"
				add_field => {
					"[event][id]" => "aaa:01"
					"[rsa][message][id1]" => "aaa:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE aaa:02
		# line in RSA: <<<severity>> Publish service <fld1>, data len <fld2> to module <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Publish service %{fld1}, data len %{fld2} to module %{fld3}" }
				id => "message-aaa:02"
				add_field => {
					"[event][id]" => "aaa:02"
					"[rsa][message][id1]" => "aaa:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE aaa:03
		# line in RSA: <<<severity>> [callback] Notify auth: mgmt-role '<username>' added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> [callback] Notify auth: mgmt-role '%{username}' added" }
				id => "message-aaa:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "aaa:03"
					"[rsa][message][id1]" => "aaa:03"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ads" {
		# MESSAGE ads:01
		# line in RSA: <<<severity>> { initializeCommandObjects | Ready }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^<(?<severity>[^>]*)>[\s]+([\s]*initializeCommandObjects[\s]+|[\s]*Ready[\s]+)$" }
				id => "message-ads:01"
				add_field => {
					"[event][id]" => "ads:01"
					"[rsa][message][id1]" => "ads:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ads:02
		# line in RSA: PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-ads:02"
				add_field => {
					"[event][id]" => "ads:02"
					"[rsa][message][id1]" => "ads:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Am" {
		# MESSAGE Am:01
		# line in RSA:  Am <src_zone> Wireless Bridge Detected With Transmitter <smacaddr>, Receiver <dmacaddr>, And Rssi=<ssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Am %{src_zone} Wireless Bridge Detected With Transmitter %{smacaddr}, Receiver %{dmacaddr}, And Rssi=%{ssid}" }
				id => "message-Am:01"
				add_field => {
				"event_description" => "Wireless bridge detected"
					"[event][id]" => "Am:01"
					"[rsa][message][id1]" => "Am:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Am:02
		# line in RSA:  Am <src_zone> Disconnect-Station Attack: Auth Frame From <smacaddr> Is Invalid, Rssi=<ssid> Authseq=<dclass_counter1> Normalseq=<dclass_counter2> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Am %{src_zone} Disconnect-Station Attack: Auth Frame From %{smacaddr} Is Invalid, Rssi=%{ssid} Authseq=%{dclass_counter1} Normalseq=%{dclass_counter2} %{info}" }
				id => "message-Am:02"
				add_field => {
				"event_description" => "Disconnect-Station Attack:"
				"result" => "Auth frame is invalid"
					"[event][id]" => "Am:02"
					"[rsa][message][id1]" => "Am:02"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Am:03
		# line in RSA:   Am <src_zone> Fake Ap Flood Detected For Potentially <dclass_counter1> Aps
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Am %{src_zone} Fake Ap Flood Detected For Potentially %{dclass_counter1} Aps" }
				id => "message-Am:03"
				add_field => {
				"event_description" => "Fake Ap Flood Detected For a number of APs"
					"[event][id]" => "Am:03"
					"[rsa][message][id1]" => "Am:03"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "am" {
		# MESSAGE am:25
		# line in RSA:   AM <src_zone> Fake AP flood detected for potentially <dclass_counter1> APs
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone} Fake AP flood detected for potentially %{dclass_counter1} APs" }
				id => "message-am:25"
				add_field => {
				"event_description" => "Fake AP flood detected for a number of APs"
					"[event][id]" => "am:25"
					"[rsa][message][id1]" => "am:25"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:23
		# line in RSA:  AM <src_zone> Disconnect-Station Attack: Auth frame from <smacaddr> is invalid, RSSI=<ssid> AuthSeq=<dclass_counter1> NormalSeq=<dclass_counter2> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone} Disconnect-Station Attack: Auth frame from %{smacaddr} is invalid, RSSI=%{ssid} AuthSeq=%{dclass_counter1} NormalSeq=%{dclass_counter2} %{info}" }
				id => "message-am:23"
				add_field => {
				"event_description" => "Disconnect-Station Attack"
				"result" => "Auth frame is invalid"
					"[event][id]" => "am:23"
					"[rsa][message][id1]" => "am:23"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:22
		# line in RSA:  AM <src_zone> Wireless bridge detected with Transmitter <smacaddr>, Receiver <dmacaddr>, and RSSI=<ssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone} Wireless bridge detected with Transmitter %{smacaddr}, Receiver %{dmacaddr}, and RSSI=%{ssid}" }
				id => "message-am:22"
				add_field => {
				"event_description" => "Wireless bridge detected"
					"[event][id]" => "am:22"
					"[rsa][message][id1]" => "am:22"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:21
		# line in RSA:  AM <src_zone> Interfering AP detected with SSID <ssid> and BSSID <bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone} Interfering AP detected with SSID %{ssid} and BSSID %{bssid}" }
				id => "message-am:21"
				add_field => {
				"event_description" => "Interfering AP detected"
					"[event][id]" => "am:21"
					"[rsa][message][id1]" => "am:21"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:20
		# line in RSA:  AM <src_zone> Sequence Number Anomaly MAC=<smacaddr> RSSI=<ssid> Seq1=<dclass_counter1> Seq2=<dclass_counter2> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone} Sequence Number Anomaly MAC=%{smacaddr} RSSI=%{ssid} Seq1=%{dclass_counter1} Seq2=%{dclass_counter2} %{info}" }
				id => "message-am:20"
				add_field => {
				"event_description" => "Sequence Number Anomaly"
					"[event][id]" => "am:20"
					"[rsa][message][id1]" => "am:20"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:19
		# line in RSA:  AM <src_zone> Disconnect-Station Attack: Disassoc frame from <smacaddr> is invalid, RSSI=<ssid> DisassocSeq=<dclass_counter1> NormalSeq=<dclass_counter2> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone} Disconnect-Station Attack: Disassoc frame from %{smacaddr} is invalid, RSSI=%{ssid} DisassocSeq=%{dclass_counter1} NormalSeq=%{dclass_counter2} %{info}" }
				id => "message-am:19"
				add_field => {
				"event_description" => "Disconnect-Station Attack:"
				"result" => "Disassoc frame is invalid"
					"[event][id]" => "am:19"
					"[rsa][message][id1]" => "am:19"
					"[event][categoryid]" => "1002020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:15
		# line in RSA:  AM <src_zone>: Frame Low Speed Rate at <dclass_counter1> for STA <macaddr> AP <access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone}: Frame Low Speed Rate at %{dclass_counter1} for STA %{macaddr} AP %{access_point}" }
				id => "message-am:15"
				add_field => {
				"event_description" => "Frame Low Speed Rate at"
					"[event][id]" => "am:15"
					"[rsa][message][id1]" => "am:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:16
		# line in RSA:  AM <src_zone>: Privacy policy violated by AP with SSID  and BSSID <bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone}: Privacy policy violated by AP with SSID  and BSSID %{bssid}" }
				id => "message-am:16"
				add_field => {
				"event_description" => "Privacy policy violated by AP"
					"[event][id]" => "am:16"
					"[rsa][message][id1]" => "am:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:17
		# line in RSA:  AM <src_zone>: Interference Detected for AP BSSID <bssid> SSID <ssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{src_zone}: Interference Detected for AP BSSID %{bssid} SSID %{ssid}" }
				id => "message-am:17"
				add_field => {
				"event_description" => "Interference Detected for AP"
					"[event][id]" => "am:17"
					"[rsa][message][id1]" => "am:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:18
		# line in RSA:  AM <src_zone>: Interference Cleared for { AP BSSID <bssid> SSID <ssid> | STA <smacaddr> AP <access_point> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*AM[\s]+(?<src_zone>[^:]*):[\s]+Interference[\s]+Cleared[\s]+for[\s]+([\s]*AP[\s]+BSSID[\s]+(?<bssid>[^\s]*)[\s]+SSID[\s]+(?<ssid>[^\s]*)[\s]+|[\s]*STA[\s]+(?<smacaddr>[^\s]*)[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+)$" }
				id => "message-am:18"
				add_field => {
				"event_description" => "Interference Cleared for AP or Station"
					"[event][id]" => "am:18"
					"[rsa][message][id1]" => "am:18"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:01
		# line in RSA: AM <fld50>: Unsecure AP detected BSSID <fld3> SSID <ssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: Unsecure AP detected BSSID %{fld3} SSID %{ssid}" }
				id => "message-am:01"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "am:01"
					"[rsa][message][id1]" => "am:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:02
		# line in RSA: AM <fld50>: Removing AP: Resolved Unsecure AP with SSID <ssid> and BSSID <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: Removing AP: Resolved Unsecure AP with SSID %{ssid} and BSSID %{fld3}" }
				id => "message-am:02"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
					"[event][id]" => "am:02"
					"[rsa][message][id1]" => "am:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:03
		# line in RSA: AM <fld50>: ARM Empty { Co Channel | Channel } Trigger new <change_new> old <change_old> new_rra <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^AM[\s]+(?<fld50>[^:]*):[\s]+ARM[\s]+Empty[\s]+([\s]*Co[\s]+Channel[\s]+|[\s]*Channel[\s]+)[\s]+Trigger[\s]+new[\s]+(?<change_new>[^\s]*)[\s]+old[\s]+(?<change_old>[^\s]*)[\s]+new_rra[\s]+(?<fld1>.*)$" }
				id => "message-am:03"
				add_field => {
					"[event][id]" => "am:03"
					"[rsa][message][id1]" => "am:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:04
		# line in RSA: AM <fld50>: ARM Channel Interference Trigger new <change_new> old <change_old> new_rra <fld1> TCI <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: ARM Channel Interference Trigger new %{change_new} old %{change_old} new_rra %{fld1} TCI %{fld2}" }
				id => "message-am:04"
				add_field => {
					"[event][id]" => "am:04"
					"[rsa][message][id1]" => "am:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:05
		# line in RSA: AM <fld50>: ARM - { increasing | decreasing } power cov-index <fld1> tx-power <fld2> new_rra <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^AM[\s]+(?<fld50>[^:]*):[\s]+ARM[\s]+\-[\s]+([\s]*increasing[\s]+|[\s]*decreasing[\s]+)[\s]+power[\s]+cov\-index[\s]+(?<fld1>[^\s]*)[\s]+tx\-power[\s]+(?<fld2>[^\s]*)[\s]+new_rra[\s]+(?<fld3>.*)$" }
				id => "message-am:05"
				add_field => {
					"[event][id]" => "am:05"
					"[rsa][message][id1]" => "am:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:06
		# line in RSA: AM <fld50>: Frame Retry Rate at <fld1> for { STA <fld40> AP <access_point> | Channel <fld2> | AP <access_point> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^AM[\s]+(?<fld50>[^:]*):[\s]+Frame[\s]+Retry[\s]+Rate[\s]+at[\s]+(?<fld1>[^\s]*)[\s]+for[\s]+([\s]*STA[\s]+(?<fld40>[^\s]*)[\s]+AP[\s]+(?<access_point>[^\s]*)[\s]+|[\s]*Channel[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*AP[\s]+(?<access_point>[^\s]*)[\s]+)$" }
				id => "message-am:06"
				add_field => {
					"[event][id]" => "am:06"
					"[rsa][message][id1]" => "am:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:07
		# line in RSA: AM <fld50>: ADHOC network detected with Src <smacaddr>, Dst <dmacaddr>, BSSID <fld3>, and RSSI <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: ADHOC network detected with Src %{smacaddr}, Dst %{dmacaddr}, BSSID %{fld3}, and RSSI %{fld1}" }
				id => "message-am:07"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "am:07"
					"[rsa][message][id1]" => "am:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:08
		# line in RSA: AM <fld50>: PAPI_Send failed from <saddr> to <daddr> port <dport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: PAPI_Send failed from %{saddr} to %{daddr} port %{dport}" }
				id => "message-am:08"
				add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "am:08"
					"[rsa][message][id1]" => "am:08"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:09
		# line in RSA: AM <fld50>: STA with MAC <fld40> is associating to a Rogue AP with SSID <ssid> and BSSID <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: STA with MAC %{fld40} is associating to a Rogue AP with SSID %{ssid} and BSSID %{fld3}" }
				id => "message-am:09"
				add_field => {
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
					"[event][id]" => "am:09"
					"[rsa][message][id1]" => "am:09"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:10
		# line in RSA: AM <fld50>: WEP Repeat IV Violation by AP BSSID <fld3> SSID <ssid> <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: WEP Repeat IV Violation by AP BSSID %{fld3} SSID %{ssid} %{fld1}" }
				id => "message-am:10"
				add_field => {
					"[event][id]" => "am:10"
					"[rsa][message][id1]" => "am:10"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:11
		# line in RSA:  arm_neighbor_assigned: Invalid BSSID - <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "arm_neighbor_assigned: Invalid BSSID - %{fld3}" }
				id => "message-am:11"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
					"[event][id]" => "am:11"
					"[rsa][message][id1]" => "am:11"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:12
		# line in RSA: handle_probe_poll_request: response too long <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "handle_probe_poll_request: response too long %{fld1}" }
				id => "message-am:12"
				add_field => {
					"[event][id]" => "am:12"
					"[rsa][message][id1]" => "am:12"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:13
		# line in RSA:  AM <fld50>: Packet with SRC = <smacaddr> DST = <dmacaddr> BSSID = <fld3> RSSI = <fld1> has <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: Packet with SRC = %{smacaddr} DST = %{dmacaddr} BSSID = %{fld3} RSSI = %{fld1} has %{result}" }
				id => "message-am:13"
				add_field => {
					"[event][id]" => "am:13"
					"[rsa][message][id1]" => "am:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE am:14
		# line in RSA: AM <fld50>: Adhoc network protection started against SSID <ssid> and BSSID <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AM %{fld50}: Adhoc network protection started against SSID %{ssid} and BSSID %{fld3}" }
				id => "message-am:14"
				add_field => {
				"ec_activity" => "Start"
					"[event][id]" => "am:14"
					"[rsa][message][id1]" => "am:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId543
	# line in RSA: <fld1>Interface <fld2> Queue <fld3> was stuck for <fld4> seconds, reseting queue
	else if [logstash][msgparser][id] == "msgParserId543" {
		dissect {
			mapping => { "message" => "%{fld1}Interface %{fld2} Queue %{fld3} was stuck for %{fld4} seconds, reseting queue" }
			id => "msgParserId543"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId544
	# line in RSA:  (<fld1>) dp_socket - <fld2>
	else if [logstash][msgparser][id] == "msgParserId544" {
		dissect {
			mapping => { "message" => "(%{fld1}) dp_socket - %{fld2}" }
			id => "msgParserId544"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "authmgr" {
		# MESSAGE authmgr:32
		# line in RSA:  <<<severity>> Key exchange failed to complete, deauthing the station <macaddr> associated with AP <access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Key exchange failed to complete, deauthing the station %{macaddr} associated with AP %{access_point}" }
				id => "message-authmgr:32"
				add_field => {
				"event_description" => "Key exchange failed to complete"
				"result" => "deauthing the station associated with AP"
					"[event][id]" => "authmgr:32"
					"[rsa][message][id1]" => "authmgr:32"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:31
		# line in RSA:  <<<severity>> Mic failed in the EAPOL Key Mesg2 <macaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Mic failed in the EAPOL Key Mesg2 %{macaddr}" }
				id => "message-authmgr:31"
				add_field => {
				"event_description" => "Mic failed in the EAPOL Key Mesg2"
					"[event][id]" => "authmgr:31"
					"[rsa][message][id1]" => "authmgr:31"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:30
		# line in RSA:  <<<severity>> user idle <<<macaddr> <saddr>> role=<user_role>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> user idle <%{macaddr} %{saddr}> role=%{user_role}" }
				id => "message-authmgr:30"
				add_field => {
				"event_description" => "user idle"
					"[event][id]" => "authmgr:30"
					"[rsa][message][id1]" => "authmgr:30"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:29
		# line in RSA:  <<<severity>> logout <<<smacaddr> <saddr>> cause: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> logout <%{smacaddr} %{saddr}> cause: %{result}" }
				id => "message-authmgr:29"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "logout"
					"[event][id]" => "authmgr:29"
					"[rsa][message][id1]" => "authmgr:29"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:13
		# line in RSA:  <<<severity>> login { <<<smacaddr> <saddr> <username>> method= | <<<smacaddr> <saddr>> method= } <network_service>, server=<shost>, role=<user_role> Update(<result>), <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*<(?<severity>[^>]*)>[\s]+login[\s]+([\s]*<(?<smacaddr>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<username>[^>]*)>[\s]+method=[\s]+|[\s]*<(?<smacaddr>[^\s]*)[\s]+(?<saddr>[^>]*)>[\s]+method=[\s]+)[\s]+(?<network_service>[^,]*),[\s]+server=(?<shost>[^,]*),[\s]+role=(?<user_role>[^\s]*)[\s]+Update\((?<result>[^\)]*)\),[\s]+(?<info>.*)$" }
				id => "message-authmgr:13"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "login"
					"[event][id]" => "authmgr:13"
					"[rsa][message][id1]" => "authmgr:13"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:28
		# line in RSA:  <<<severity>> station de-auth <<<smacaddr> <dmacaddr>> bssid=<bssid>, essid=<ssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> station de-auth <%{smacaddr} %{dmacaddr}> bssid=%{bssid}, essid=%{ssid}" }
				id => "message-authmgr:28"
				add_field => {
				"event_description" => "station de-auth"
					"[event][id]" => "authmgr:28"
					"[rsa][message][id1]" => "authmgr:28"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:27
		# line in RSA:  <<<severity>> selected server Internal for method=<network_service>; user=<username>, essid=<ssid>, domain=<<<domain>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> selected server Internal for method=%{network_service}; user=%{username}, essid=%{ssid}, domain=<%{domain}>" }
				id => "message-authmgr:27"
				add_field => {
				"event_description" => "selected server Internal for method"
					"[event][id]" => "authmgr:27"
					"[rsa][message][id1]" => "authmgr:27"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:26
		# line in RSA:  <<<severity>> derive role <<<macaddr>> [<group>] <user_role> from user rules
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> derive role <%{macaddr}> [%{group}] %{user_role} from user rules" }
				id => "message-authmgr:26"
				add_field => {
				"event_description" => "derive role from user rules"
					"[event][id]" => "authmgr:26"
					"[rsa][message][id1]" => "authmgr:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:25
		# line in RSA:  <<<severity>> Using cached value
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Using cached value" }
				id => "message-authmgr:25"
				add_field => {
				"event_description" => "Using cached value"
					"[event][id]" => "authmgr:25"
					"[rsa][message][id1]" => "authmgr:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:24
		# line in RSA:  <<<severity>> Deleting all SAPs with mac:<macaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Deleting all SAPs with mac:%{macaddr}" }
				id => "message-authmgr:24"
				add_field => {
				"event_description" => "Deleting all SAPs with specific mac"
					"[event][id]" => "authmgr:24"
					"[rsa][message][id1]" => "authmgr:24"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:23
		# line in RSA:  <<<severity>> Delete AP entry for IP <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Delete AP entry for IP %{saddr}" }
				id => "message-authmgr:23"
				add_field => {
				"event_description" => "Delete AP entry for IP"
					"[event][id]" => "authmgr:23"
					"[rsa][message][id1]" => "authmgr:23"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:22
		# line in RSA:  <<<severity>> Detected AP (<access_point>) with ip <saddr> slotport <network_port> status <result> txkey <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Detected AP (%{access_point}) with ip %{saddr} slotport %{network_port} status %{result} txkey %{resultcode}" }
				id => "message-authmgr:22"
				add_field => {
				"event_description" => "Detected AP"
					"[event][id]" => "authmgr:22"
					"[rsa][message][id1]" => "authmgr:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:21
		# line in RSA:  <<<severity>> [<connectionid>] <protocol> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport>, action=deny, role=<user_role>, policy=<policyname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> [%{connectionid}] %{protocol} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport}, action=deny, role=%{user_role}, policy=%{policyname}" }
				id => "message-authmgr:21"
				add_field => {
				"ec_outcome" => "Failure"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"action" => "deny"
					"[event][id]" => "authmgr:21"
					"[rsa][message][id1]" => "authmgr:21"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:33
		# line in RSA:  <<<severity>> [<connectionid>] <protocol> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport>, action=permit, role=<user_role>, policy=<policyname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> [%{connectionid}] %{protocol} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport}, action=permit, role=%{user_role}, policy=%{policyname}" }
				id => "message-authmgr:33"
				add_field => {
				"ec_outcome" => "Success"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"action" => "permit"
					"[event][id]" => "authmgr:33"
					"[rsa][message][id1]" => "authmgr:33"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:01
		# line in RSA: <<<severity>> Ignoring authentication request for admin user '<administrator>'; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Ignoring authentication request for admin user '%{administrator}'; %{result}" }
				id => "message-authmgr:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "authmgr:01"
					"[rsa][message][id1]" => "authmgr:01"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:02
		# line in RSA: <<<severity>> user del <<<smacaddr> <saddr>> user entry deleted; reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> user del <%{smacaddr} %{saddr}> user entry deleted; reason=%{result}" }
				id => "message-authmgr:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
					"[event][id]" => "authmgr:02"
					"[rsa][message][id1]" => "authmgr:02"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:03
		# line in RSA: <<<severity>> user add <<<smacaddr> <saddr>> Sibyte
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> user add <%{smacaddr} %{saddr}> Sibyte" }
				id => "message-authmgr:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "authmgr:03"
					"[rsa][message][id1]" => "authmgr:03"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:04
		# line in RSA: <<<severity>> inherit <<<smacaddr> <saddr>> bssid:<fld3> essid: <fld1> auth:<fld13> type:<fld4> role:<user_role> loc:<fld6> name:<fld7> port:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> inherit <%{smacaddr} %{saddr}> bssid:%{fld3} essid: %{fld1} auth:%{fld13} type:%{fld4} role:%{user_role} loc:%{fld6} name:%{fld7} port:%{sport}" }
				id => "message-authmgr:04"
				add_field => {
					"[event][id]" => "authmgr:04"
					"[rsa][message][id1]" => "authmgr:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:05
		# line in RSA: <<<severity>> station up <<<fld40>> update station bssid to <fld3> (#users <fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> station up <%{fld40}> update station bssid to %{fld3} (#users %{fld1})" }
				id => "message-authmgr:05"
				add_field => {
					"[event][id]" => "authmgr:05"
					"[rsa][message][id1]" => "authmgr:05"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:06
		# line in RSA: <<<severity>> VLAN <vlan> Added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> VLAN %{vlan} Added" }
				id => "message-authmgr:06"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "authmgr:06"
					"[rsa][message][id1]" => "authmgr:06"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:07
		# line in RSA: <<<severity>> user miss <<<smacaddr> <saddr>> ingress=<fld2> (tunnel <fld3>), vlan=<vlan>, flags=<fld5>, etype=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> user miss <%{smacaddr} %{saddr}> ingress=%{fld2} (tunnel %{fld3}), vlan=%{vlan}, flags=%{fld5}, etype=%{fld6}" }
				id => "message-authmgr:07"
				add_field => {
					"[event][id]" => "authmgr:07"
					"[rsa][message][id1]" => "authmgr:07"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:08
		# line in RSA: <<<severity>> station down <<<fld40>> bssid <fld3>, essid <fld1>, vlan <vlan>, ingress <fld4> (tunnel <fld5>), u_encr <fld6>, m_encr <fld7>, loc <fld8> slotport <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> station down <%{fld40}> bssid %{fld3}, essid %{fld1}, vlan %{vlan}, ingress %{fld4} (tunnel %{fld5}), u_encr %{fld6}, m_encr %{fld7}, loc %{fld8} slotport %{fld9}" }
				id => "message-authmgr:08"
				add_field => {
					"[event][id]" => "authmgr:08"
					"[rsa][message][id1]" => "authmgr:08"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:09
		# line in RSA: <<<severity>> station up <<<fld40>> bssid <fld3>, essid <fld1>, vlan <vlan>, ingress <fld4> (tunnel <fld5>), u_encr <fld6>, m_encr <fld7>, loc <fld8> slotport <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> station up <%{fld40}> bssid %{fld3}, essid %{fld1}, vlan %{vlan}, ingress %{fld4} (tunnel %{fld5}), u_encr %{fld6}, m_encr %{fld7}, loc %{fld8} slotport %{fld9}" }
				id => "message-authmgr:09"
				add_field => {
					"[event][id]" => "authmgr:09"
					"[rsa][message][id1]" => "authmgr:09"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:10
		# line in RSA: <<<severity>> station auth <<<smacaddr> <username>> auth=<authmethod>, role=<user_role>, vlan def=<vlan>, cur=<fld2> assigned=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> station auth <%{smacaddr} %{username}> auth=%{authmethod}, role=%{user_role}, vlan def=%{vlan}, cur=%{fld2} assigned=%{fld3}" }
				id => "message-authmgr:10"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "authmgr:10"
					"[rsa][message][id1]" => "authmgr:10"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:11
		# line in RSA: <<<severity>> setting the encryption key type <<<fld13>> Set the <username> type to Dynamic <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> setting the encryption key type <%{fld13}> Set the %{username} type to Dynamic %{result}" }
				id => "message-authmgr:11"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "authmgr:11"
					"[rsa][message][id1]" => "authmgr:11"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:20
		# line in RSA:  <<<severity>> setting the encryption key type <<<macaddr>> Set the UKey type to  <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> setting the encryption key type <%{macaddr}> Set the UKey type to  %{obj_type}" }
				id => "message-authmgr:20"
				add_field => {
				"event_description" => "setting the encryption key type"
					"[event][id]" => "authmgr:20"
					"[rsa][message][id1]" => "authmgr:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:12
		# line in RSA: <<<severity>> selected server ACS for method=<network_service>; user=<username>, essid=<fld1>, domain=<domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> selected server ACS for method=%{network_service}; user=%{username}, essid=%{fld1}, domain=%{domain}" }
				id => "message-authmgr:12"
				add_field => {
				"ec_subject" => "User"
					"[event][id]" => "authmgr:12"
					"[rsa][message][id1]" => "authmgr:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:14
		# line in RSA:  <<<severity>> aaa <<<smacaddr> <username>> method=<network_service>, result=<result>, server=<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> aaa <%{smacaddr} %{username}> method=%{network_service}, result=%{result}, server=%{fld13}" }
				id => "message-authmgr:14"
				add_field => {
					"[event][id]" => "authmgr:14"
					"[rsa][message][id1]" => "authmgr:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:15
		# line in RSA:  <<<severity>> Received EAP TLV-Success Finished EAP Phase<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Received EAP TLV-Success Finished EAP Phase%{fld1}" }
				id => "message-authmgr:15"
				add_field => {
				"ec_outcome" => "Success"
				"action" => "Received EAP TLV-Success"
					"[event][id]" => "authmgr:15"
					"[rsa][message][id1]" => "authmgr:15"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:18
		# line in RSA:  <process>: INVALID MAGIC NUMBER <serial_number>. <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: INVALID MAGIC NUMBER %{serial_number}. %{result}" }
				id => "message-authmgr:18"
				add_field => {
				"event_description" => "INVALID MAGIC NUMBER"
					"[event][id]" => "authmgr:18"
					"[rsa][message][id1]" => "authmgr:18"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:19
		# line in RSA:  <process>: This buffer <result> may already be freed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: This buffer %{result} may already be freed" }
				id => "message-authmgr:19"
				add_field => {
				"event_description" => "Buffer already freed"
					"[event][id]" => "authmgr:19"
					"[rsa][message][id1]" => "authmgr:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:16
		# line in RSA: PAPI_Send: Invalid dest port num <dport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: Invalid dest port num %{dport}" }
				id => "message-authmgr:16"
				add_field => {
					"[event][id]" => "authmgr:16"
					"[rsa][message][id1]" => "authmgr:16"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE authmgr:17
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: Error sending the trap to SNMP agent 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: Error sending the trap to SNMP agent" }
				id => "message-authmgr:17"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "authmgr:17"
					"[rsa][message][id1]" => "authmgr:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cfgm" {
		# MESSAGE cfgm:06
		# line in RSA:  <<<severity>> Connecting the Local CFGM socket, state <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Connecting the Local CFGM socket, state %{event_state}" }
				id => "message-cfgm:06"
				add_field => {
				"event_description" => "Connecting the Local CFGM socket"
					"[event][id]" => "cfgm:06"
					"[rsa][message][id1]" => "cfgm:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cfgm:01
		# line in RSA: <<<severity>> Current Version is <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Current Version is %{version}" }
				id => "message-cfgm:01"
				add_field => {
					"[event][id]" => "cfgm:01"
					"[rsa][message][id1]" => "cfgm:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cfgm:02
		# line in RSA: <<<severity>> Sending the Timestamp <fld11> in the Heartbeat message
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending the Timestamp %{fld11} in the Heartbeat message" }
				id => "message-cfgm:02"
				add_field => {
					"[event][id]" => "cfgm:02"
					"[rsa][message][id1]" => "cfgm:02"
					"[event][categoryid]" => "1604000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cfgm:03
		# line in RSA: <<<severity>> Received a Heart Beat Response Msg :Comparing <fld1> and <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Received a Heart Beat Response Msg :Comparing %{fld1} and %{fld2}" }
				id => "message-cfgm:03"
				add_field => {
					"[event][id]" => "cfgm:03"
					"[rsa][message][id1]" => "cfgm:03"
					"[event][categoryid]" => "1604000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cfgm:04
		# line in RSA: <<<severity>> Cannot heartbeat with the master.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Cannot heartbeat with the master." }
				id => "message-cfgm:04"
				add_field => {
					"[event][id]" => "cfgm:04"
					"[rsa][message][id1]" => "cfgm:04"
					"[event][categoryid]" => "1604010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cfgm:05
		# line in RSA: <<<severity>> Current Timestamp is <fld11>, Global Data Timestamp is <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Current Timestamp is %{fld11}, Global Data Timestamp is %{fld12}" }
				id => "message-cfgm:05"
				add_field => {
					"[event][id]" => "cfgm:05"
					"[rsa][message][id1]" => "cfgm:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cli" {
		# MESSAGE cli:01
		# line in RSA: USER: <username> has logged in using <logon_type>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "USER: %{username} has logged in using %{logon_type}." }
				id => "message-cli:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
					"[event][id]" => "cli:01"
					"[rsa][message][id1]" => "cli:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: PAPI_Send: To: <fld6>:<fld7> Type:<fld8> Timed out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: PAPI_Send: To: %{fld6}:%{fld7} Type:%{fld8} Timed out." }
				id => "message-cli:02"
				add_field => {
					"[event][id]" => "cli:02"
					"[rsa][message][id1]" => "cli:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:06
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: SYSTEM: timezone clock changed from <change_old> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: SYSTEM: timezone clock changed from %{change_old} to %{change_new}" }
				id => "message-cli:06"
				add_field => {
					"[event][id]" => "cli:06"
					"[rsa][message][id1]" => "cli:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:03
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER: <username> has logged in from <saddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER: %{username} has logged in from %{saddr}." }
				id => "message-cli:03"
				add_field => {
				"ec_activity" => "Logon"
					"[event][id]" => "cli:03"
					"[rsa][message][id1]" => "cli:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:08
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER: <username> connected from <saddr> has logged out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER: %{username} connected from %{saddr} has logged out." }
				id => "message-cli:08"
				add_field => {
				"ec_activity" => "Logoff"
					"[event][id]" => "cli:08"
					"[rsa][message][id1]" => "cli:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:04
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER:<username> COMMAND:<<<action>> -- command executed successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER:%{username} COMMAND:<%{action}> -- command executed successfully" }
				id => "message-cli:04"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "cli:04"
					"[rsa][message][id1]" => "cli:04"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:05
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER:<username> COMMAND:<<<action>> -- command execution failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER:%{username} COMMAND:<%{action}> -- command execution failed" }
				id => "message-cli:05"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "cli:05"
					"[rsa][message][id1]" => "cli:05"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:07
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER:<username> COMMAND:<<<action>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER:%{username} COMMAND:<%{action}>" }
				id => "message-cli:07"
				add_field => {
				"ec_subject" => "User"
					"[event][id]" => "cli:07"
					"[rsa][message][id1]" => "cli:07"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:09
		# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <id>[<process_id>]: <agent>: tracing to <directory> started 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{id}[%{process_id}]: %{agent}: tracing to %{directory} started" }
				id => "message-cli:09"
				add_field => {
					"[event][id]" => "cli:09"
					"[rsa][message][id1]" => "cli:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cli:10
		# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <id>[<process_id>]: <agent>: rotating <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{id}[%{process_id}]: %{agent}: rotating %{directory}" }
				id => "message-cli:10"
				add_field => {
					"[event][id]" => "cli:10"
					"[rsa][message][id1]" => "cli:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId594
	# line in RSA: <fld1>: recvfrom failed: <result>
	else if [logstash][msgparser][id] == "msgParserId594" {
		dissect {
			mapping => { "message" => "%{fld1}: recvfrom failed: %{result}" }
			id => "msgParserId594"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dhcpd" {
		# MESSAGE dhcpd:01
		# line in RSA: <<<severity>> Interface change detected
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Interface change detected" }
				id => "message-dhcpd:01"
				add_field => {
					"[event][id]" => "dhcpd:01"
					"[rsa][message][id1]" => "dhcpd:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:02
		# line in RSA: <<<severity>> Error receiving pack from datapath, packet len error <bytes> bytes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Error receiving pack from datapath, packet len error %{bytes} bytes" }
				id => "message-dhcpd:02"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "dhcpd:02"
					"[rsa][message][id1]" => "dhcpd:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:03
		# line in RSA: <<<severity>> Changing the Logging level to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
				id => "message-dhcpd:03"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "dhcpd:03"
					"[rsa][message][id1]" => "dhcpd:03"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:04
		# line in RSA: <<<severity>> Enabled DNS Server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Enabled DNS Server" }
				id => "message-dhcpd:04"
				add_field => {
					"[event][id]" => "dhcpd:04"
					"[rsa][message][id1]" => "dhcpd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:05
		# line in RSA: <<<severity>> Initialized <network_service> PAPI Messaging
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Initialized %{network_service} PAPI Messaging" }
				id => "message-dhcpd:05"
				add_field => {
					"[event][id]" => "dhcpd:05"
					"[rsa][message][id1]" => "dhcpd:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:06
		# line in RSA: <<<severity>> Using lease file from flash
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Using lease file from flash" }
				id => "message-dhcpd:06"
				add_field => {
					"[event][id]" => "dhcpd:06"
					"[rsa][message][id1]" => "dhcpd:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dhcpdwrap" {
		# MESSAGE dhcpdwrap:01
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: PAPI_Free: INVALID MAGIC NUMBER <fld11>. Should be <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: PAPI_Free: INVALID MAGIC NUMBER %{fld11}. Should be %{fld12}" }
				id => "message-dhcpdwrap:01"
				add_field => {
					"[event][id]" => "dhcpdwrap:01"
					"[rsa][message][id1]" => "dhcpdwrap:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpdwrap:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: PAPI_Free: This buffer <fld13> may already be freed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: PAPI_Free: This buffer %{fld13} may already be freed." }
				id => "message-dhcpdwrap:02"
				add_field => {
					"[event][id]" => "dhcpdwrap:02"
					"[rsa][message][id1]" => "dhcpdwrap:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dnsmasq" {
		# MESSAGE dnsmasq
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: exiting on receipt of <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: exiting on receipt of %{fld6}" }
				id => "message-dnsmasq"
				add_field => {
					"[event][id]" => "dnsmasq"
					"[rsa][message][id1]" => "dnsmasq"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dnsmasq:01
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: using <fld13> <saddr>#<sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: using %{fld13} %{saddr}#%{sport}" }
				id => "message-dnsmasq:01"
				add_field => {
					"[event][id]" => "dnsmasq:01"
					"[rsa][message][id1]" => "dnsmasq:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dnsmasq:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: %{event_description}" }
				id => "message-dnsmasq:02"
				add_field => {
					"[event][id]" => "dnsmasq:02"
					"[rsa][message][id1]" => "dnsmasq:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "esi" {
		# MESSAGE esi:01
		# line in RSA: <<<severity>> Changing the Logging level to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
				id => "message-esi:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "esi:01"
					"[rsa][message][id1]" => "esi:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE esi:02
		# line in RSA:  <<<severity>> Port <network_port> State <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Port %{network_port} State %{event_state}" }
				id => "message-esi:02"
				add_field => {
					"[event][id]" => "esi:02"
					"[rsa][message][id1]" => "esi:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE esi:03
		# line in RSA: <<<severity>> Send Port Status Request Message
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Send Port Status Request Message" }
				id => "message-esi:03"
				add_field => {
					"[event][id]" => "esi:03"
					"[rsa][message][id1]" => "esi:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId608
	# line in RSA: <fld1> <<<fld2> <fld3>> exiting on signal
	else if [logstash][msgparser][id] == "msgParserId608" {
		dissect {
			mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> exiting on signal" }
			id => "msgParserId608"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "fpapps" {
		# MESSAGE fpapps:01
		# line in RSA:  <<<severity>> switch info is ip <fld5>, isloop <fld11>, isVlan <fld12>, vlanId <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> switch info is ip %{fld5}, isloop %{fld11}, isVlan %{fld12}, vlanId %{fld13}" }
				id => "message-fpapps:01"
				add_field => {
					"[event][id]" => "fpapps:01"
					"[rsa][message][id1]" => "fpapps:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:02
		# line in RSA:  <<<severity>> TunnelId <fld11> is not Present in the Vlan Interface
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> TunnelId %{fld11} is not Present in the Vlan Interface" }
				id => "message-fpapps:02"
				add_field => {
					"[event][id]" => "fpapps:02"
					"[rsa][message][id1]" => "fpapps:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:03
		# line in RSA: <<<severity>> Received a Del Tunnel Membership message for tunnel <fld11> vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Received a Del Tunnel Membership message for tunnel %{fld11} vlan %{vlan}" }
				id => "message-fpapps:03"
				add_field => {
					"[event][id]" => "fpapps:03"
					"[rsa][message][id1]" => "fpapps:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:04
		# line in RSA: <<<severity>> Retrieving Tunnel info for Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Retrieving Tunnel info for Vlan %{vlan}" }
				id => "message-fpapps:04"
				add_field => {
					"[event][id]" => "fpapps:04"
					"[rsa][message][id1]" => "fpapps:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:05
		# line in RSA: <<<severity>> Adding Tunnel <fld11> to Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Adding Tunnel %{fld11} to Vlan %{vlan}" }
				id => "message-fpapps:05"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "fpapps:05"
					"[rsa][message][id1]" => "fpapps:05"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:06
		# line in RSA: <<<severity>> Removing Tunnel <fld11> from Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Removing Tunnel %{fld11} from Vlan %{vlan}" }
				id => "message-fpapps:06"
				add_field => {
				"ec_activity" => "Delete"
					"[event][id]" => "fpapps:06"
					"[rsa][message][id1]" => "fpapps:06"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:07
		# line in RSA: <<<severity>> Publish service <fld12>, data len <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Publish service %{fld12}, data len %{fld11}" }
				id => "message-fpapps:07"
				add_field => {
					"[event][id]" => "fpapps:07"
					"[rsa][message][id1]" => "fpapps:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:08
		# line in RSA: <<<severity>> Request to create Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Request to create Vlan %{vlan}" }
				id => "message-fpapps:08"
				add_field => {
					"[event][id]" => "fpapps:08"
					"[rsa][message][id1]" => "fpapps:08"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:09
		# line in RSA: <<<severity>> Interface is not created
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Interface is not created" }
				id => "message-fpapps:09"
				add_field => {
					"[event][id]" => "fpapps:09"
					"[rsa][message][id1]" => "fpapps:09"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:10
		# line in RSA: <<<severity>> Received a Add Tunnel Membership message for tunnel <fld11> vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Received a Add Tunnel Membership message for tunnel %{fld11} vlan %{vlan}" }
				id => "message-fpapps:10"
				add_field => {
					"[event][id]" => "fpapps:10"
					"[rsa][message][id1]" => "fpapps:10"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:11
		# line in RSA: <<<severity>> Interface state is down Vlan <vlan>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Interface state is down Vlan %{vlan}" }
				id => "message-fpapps:11"
				add_field => {
					"[event][id]" => "fpapps:11"
					"[rsa][message][id1]" => "fpapps:11"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:12
		# line in RSA: <<<severity>> Bringing the interface <interface> state to <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Bringing the interface %{interface} state to %{event_state}" }
				id => "message-fpapps:12"
				add_field => {
					"[event][id]" => "fpapps:12"
					"[rsa][message][id1]" => "fpapps:12"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:13
		# line in RSA: <<<severity>> Vlan Interface <interface> has <fld11> tunnels, not changing the state 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Vlan Interface %{interface} has %{fld11} tunnels, not changing the state" }
				id => "message-fpapps:13"
				add_field => {
					"[event][id]" => "fpapps:13"
					"[rsa][message][id1]" => "fpapps:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:14
		# line in RSA: <<<severity>> Sending RTO_ADD_ROUTE request <fld11>, <fld12>, <fld13>, metric <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending RTO_ADD_ROUTE request %{fld11}, %{fld12}, %{fld13}, metric %{fld4}" }
				id => "message-fpapps:14"
				add_field => {
					"[event][id]" => "fpapps:14"
					"[rsa][message][id1]" => "fpapps:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:15
		# line in RSA: <<<severity>> Adding tunnel: Tunnel <fld11> Already Present in the Vlan Interface
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Adding tunnel: Tunnel %{fld11} Already Present in the Vlan Interface" }
				id => "message-fpapps:15"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "fpapps:15"
					"[rsa][message][id1]" => "fpapps:15"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:16
		# line in RSA: <<<severity>> Spanning Tree Topology Change. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Spanning Tree Topology Change. %{info}" }
				id => "message-fpapps:16"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "fpapps:16"
					"[rsa][message][id1]" => "fpapps:16"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:17
		# line in RSA: <<<severity>> Route Add Notification for Net <fld11>,  Gate <fld12> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Route Add Notification for Net %{fld11},  Gate %{fld12}" }
				id => "message-fpapps:17"
				add_field => {
					"[event][id]" => "fpapps:17"
					"[rsa][message][id1]" => "fpapps:17"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:18
		# line in RSA: <<<severity>> Adding the Route  network <fld11>, gateway <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Adding the Route  network %{fld11}, gateway %{fld12}" }
				id => "message-fpapps:18"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "fpapps:18"
					"[rsa][message][id1]" => "fpapps:18"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:19
		# line in RSA:  <<<severity>> Physical link up: port <network_port> half duplex, <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Physical link up: port %{network_port} half duplex, %{fld2}" }
				id => "message-fpapps:19"
				add_field => {
				"event_description" => "Physical link up"
					"[event][id]" => "fpapps:19"
					"[rsa][message][id1]" => "fpapps:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:20
		# line in RSA:  PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-fpapps:20"
				add_field => {
					"[event][id]" => "fpapps:20"
					"[rsa][message][id1]" => "fpapps:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:21
		# line in RSA: <<<severity>> Request for { VRRP Master IP address | dynamic IP data }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^<(?<severity>[^>]*)>[\s]+Request[\s]+for[\s]+([\s]*VRRP[\s]+Master[\s]+IP[\s]+address[\s]+|[\s]*dynamic[\s]+IP[\s]+data[\s]+)$" }
				id => "message-fpapps:21"
				add_field => {
					"[event][id]" => "fpapps:21"
					"[rsa][message][id1]" => "fpapps:21"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:22
		# line in RSA: <<<severity>> <fld1>: Received ACL Add message for aclname <fld2>, aclnum <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> %{fld1}: Received ACL Add message for aclname %{fld2}, aclnum %{fld3}" }
				id => "message-fpapps:22"
				add_field => {
					"[event][id]" => "fpapps:22"
					"[rsa][message][id1]" => "fpapps:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:23
		# line in RSA:  <process>: Timer already removed - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: Timer already removed - %{result}" }
				id => "message-fpapps:23"
				add_field => {
				"ec_outcome" => "Failure"
				"event_description" => "Timer already removed"
					"[event][id]" => "fpapps:23"
					"[rsa][message][id1]" => "fpapps:23"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpapps:24
		# line in RSA:  <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: <process>: sendto DHCP Server failed: <result> Message Code <resultcode> Sequence Num is <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: %{process}: sendto DHCP Server failed: %{result} Message Code %{resultcode} Sequence Num is %{dclass_counter1}" }
				id => "message-fpapps:24"
				add_field => {
				"ec_outcome" => "Failure"
				"event_description" => "send to DHCP Server failed"
					"[event][id]" => "fpapps:24"
					"[rsa][message][id1]" => "fpapps:24"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "fpcli" {
		# MESSAGE fpcli:01
		# line in RSA: USER: <username> has logged in from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "USER: %{username} has logged in from %{saddr}" }
				id => "message-fpcli:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
					"[event][id]" => "fpcli:01"
					"[rsa][message][id1]" => "fpcli:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpcli:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>: USER: <username> has logged in from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}: USER: %{username} has logged in from %{saddr}" }
				id => "message-fpcli:02"
				add_field => {
				"ec_subject" => "User"
				"ec_outcome" => "Success"
					"[event][id]" => "fpcli:02"
					"[rsa][message][id1]" => "fpcli:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpcli:03
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>: USER:<username> COMMAND:<<<action>> -- command executed successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}: USER:%{username} COMMAND:<%{action}> -- command executed successfully" }
				id => "message-fpcli:03"
				add_field => {
				"ec_subject" => "User"
					"[event][id]" => "fpcli:03"
					"[rsa][message][id1]" => "fpcli:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpcli:04
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>: USER:<username> COMMAND:<<<action>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}: USER:%{username} COMMAND:<%{action}>" }
				id => "message-fpcli:04"
				add_field => {
				"ec_subject" => "User"
					"[event][id]" => "fpcli:04"
					"[rsa][message][id1]" => "fpcli:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fpcli:05
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>: USER: <username> connected from <saddr> has logged out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}: USER: %{username} connected from %{saddr} has logged out." }
				id => "message-fpcli:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
					"[event][id]" => "fpcli:05"
					"[rsa][message][id1]" => "fpcli:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd" {
		# MESSAGE httpd:01
		# line in RSA:  [<severity>] Loading certificate & private key of SSL-aware server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{severity}] Loading certificate & private key of SSL-aware server" }
				id => "message-httpd:01"
				add_field => {
					"[event][id]" => "httpd:01"
					"[rsa][message][id1]" => "httpd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: PAPI_Send: To: <fld6>:<fld7> Type:<fld8> Timed out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: PAPI_Send: To: %{fld6}:%{fld7} Type:%{fld8} Timed out." }
				id => "message-httpd:02"
				add_field => {
					"[event][id]" => "httpd:02"
					"[rsa][message][id1]" => "httpd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:03
		# line in RSA:  <hostname> <<<fld1> <hostip>> <agent>: [<fld3>:<fld2>] [pid <process_id>:tid <fld4>] [client <saddr>:<sport>] { <fld5>: <event_description>:@<fld8> <network_service>|<fld5>: <event_description>: <filename> | <event_description>: <fld6> }, <fld7>: 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+<(?<fld1>[^\s]*)[\s]+(?<hostip>[^>]*)>[\s]+(?<agent>[^:]*):[\s]+\[(?<fld3>[^:]*):(?<fld2>[^\]]*)\][\s]+\[pid[\s]+(?<process_id>[^:]*):tid[\s]+(?<fld4>[^\]]*)\][\s]+\[client[\s]+(?<saddr>[^:]*):(?<sport>[^\]]*)\][\s]+([\s]*(?<fld5>[^:]*):[\s]+(?<event_description>[^:]*):@(?<fld8>[^\s]*)[\s]+(?<network_service>[^,]*)|(?<fld5>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+(?<filename>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<fld6>[^\s]*)[\s]+),[\s]+(?<fld7>[^:]*):[\s]+$" }
				id => "message-httpd:03"
				add_field => {
					"[event][id]" => "httpd:03"
					"[rsa][message][id1]" => "httpd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:04
		# line in RSA:  <hostname> <<<fld1> <hostip>> <agent>: [<fld3>:<fld2>] [pid <process_id>:tid <fld4>] (<instance>) <fld8>: [client <saddr>:<sport>] <fld5>: <event_description>: <fld6> <fld7>: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} <%{fld1} %{hostip}> %{agent}: [%{fld3}:%{fld2}] [pid %{process_id}:tid %{fld4}] (%{instance}) %{fld8}: [client %{saddr}:%{sport}] %{fld5}: %{event_description}: %{fld6} %{fld7}:" }
				id => "message-httpd:04"
				add_field => {
					"[event][id]" => "httpd:04"
					"[rsa][message][id1]" => "httpd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:05
		# line in RSA:  <hostname> <agent>: [<fld3>:<fld2>] [pid <process_id>:tid <fld4>] [client <saddr>:<sport>] <fld5>: <event_description> <<<fld1> <hostip>> <fld7>, <fld8> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %{agent}: [%{fld3}:%{fld2}] [pid %{process_id}:tid %{fld4}] [client %{saddr}:%{sport}] %{fld5}: %{event_description} <%{fld1} %{hostip}> %{fld7}, %{fld8}" }
				id => "message-httpd:05"
				add_field => {
					"[event][id]" => "httpd:05"
					"[rsa][message][id1]" => "httpd:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE httpd:06
		# line in RSA:  <hostname> <<<fld1> <hostip>> <agent>: [<fld3>:<fld2>] [pid <process_id>:tid <fld4>] [client <saddr>:<sport>] <fld5>, referer:<fld8> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} <%{fld1} %{hostip}> %{agent}: [%{fld3}:%{fld2}] [pid %{process_id}:tid %{fld4}] [client %{saddr}:%{sport}] %{fld5}, referer:%{fld8}" }
				id => "message-httpd:06"
				add_field => {
					"[event][id]" => "httpd:06"
					"[rsa][message][id1]" => "httpd:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE httpd:07
		# line in RSA:  <hostname> <<<fld1> <hostip>> <agent>: [<fld3>:<fld2>] [pid <process_id>:tid <fld4>] <fld5>: <event_description>, referer:<fld8> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} <%{fld1} %{hostip}> %{agent}: [%{fld3}:%{fld2}] [pid %{process_id}:tid %{fld4}] %{fld5}: %{event_description}, referer:%{fld8}" }
				id => "message-httpd:07"
				add_field => {
					"[event][id]" => "httpd:07"
					"[rsa][message][id1]" => "httpd:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE httpd:08
		# line in RSA:  <fld2> <hostname> <<<fld1> <hostip>> <agent>[<process_id>]: Invalid argument: Restricted characters encountered.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2} %{hostname} <%{fld1} %{hostip}> %{agent}[%{process_id}]: Invalid argument: Restricted characters encountered." }
				id => "message-httpd:08"
				add_field => {
				"event_description" => "Invalid argument: Restricted characters encountered."
					"[event][id]" => "httpd:08"
					"[rsa][message][id1]" => "httpd:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId639
	# line in RSA: Kernel log daemon exiting.
	else if [logstash][msgparser][id] == "msgParserId639" {
		dissect {
			mapping => { "message" => "Kernel log daemon exiting." }
			id => "msgParserId639"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "init" {
		# MESSAGE init:01
		# line in RSA: ^MThe system is going down NOW !!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "^MThe system is going down NOW !!" }
				id => "message-init:01"
				add_field => {
					"[event][id]" => "init:01"
					"[rsa][message][id1]" => "init:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE init:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>: ^MSending SIGTERM to all processes.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}: ^MSending SIGTERM to all processes." }
				id => "message-init:02"
				add_field => {
					"[event][id]" => "init:02"
					"[rsa][message][id1]" => "init:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE init:03
		# line in RSA: <fld1> <<<fld2> <fld3>> init: ^MThe system is going down NOW !!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> init: ^MThe system is going down NOW !!" }
				id => "message-init:03"
				add_field => {
					"[event][id]" => "init:03"
					"[rsa][message][id1]" => "init:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "l2tp" {
		# MESSAGE l2tp:01
		# line in RSA: <<<severity>> Changing the Logging level to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
				id => "message-l2tp:01"
				add_field => {
					"[event][id]" => "l2tp:01"
					"[rsa][message][id1]" => "l2tp:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE l2tp:02
		# line in RSA:  PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-l2tp:02"
				add_field => {
					"[event][id]" => "l2tp:02"
					"[rsa][message][id1]" => "l2tp:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId597
	# line in RSA: <<<severity>> Changing the Logging level to <fld11>
	else if [logstash][msgparser][id] == "msgParserId597" {
		dissect {
			mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
			id => "msgParserId597"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "localdb" {
		# MESSAGE localdb:02
		# line in RSA:  <<<severity>> rejecting request for user <macaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> rejecting request for user %{macaddr}" }
				id => "message-localdb:02"
				add_field => {
				"event_description" => "rejecting request for user"
					"[event][id]" => "localdb:02"
					"[rsa][message][id1]" => "localdb:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE localdb:01
		# line in RSA:  <<<severity>> No user entry found for user <macaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> No user entry found for user %{macaddr}" }
				id => "message-localdb:01"
				add_field => {
				"event_description" => "No user entry found for user"
					"[event][id]" => "localdb:01"
					"[rsa][message][id1]" => "localdb:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE localdb
		# line in RSA:  <<<severity>> Received the <event_type> for user <macaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Received the %{event_type} for user %{macaddr}" }
				id => "message-localdb"
				add_field => {
				"event_description" => "Received MSG_USER_REQUEST for user"
					"[event][id]" => "localdb"
					"[rsa][message][id1]" => "localdb"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "master" {
		# MESSAGE master:01
		# line in RSA:  <<<severity>> TRAIL: <fld1> <fld2> MS:<saddr> V:<fld3> L:<fld4> T:<fld5> B:<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> TRAIL: %{fld1} %{fld2} MS:%{saddr} V:%{fld3} L:%{fld4} T:%{fld5} B:%{fld6}" }
				id => "message-master:01"
				add_field => {
					"[event][id]" => "master:01"
					"[rsa][message][id1]" => "master:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE master:02
		# line in RSA:  <<<severity>> Optimizing database
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Optimizing database" }
				id => "message-master:02"
				add_field => {
					"[event][id]" => "master:02"
					"[rsa][message][id1]" => "master:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mmgr" {
		# MESSAGE mmgr:01
		# line in RSA: <<<severity>> Failed to send message <fld11> to Master
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Failed to send message %{fld11} to Master" }
				id => "message-mmgr:01"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "mmgr:01"
					"[rsa][message][id1]" => "mmgr:01"
					"[event][categoryid]" => "1207010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mmgr:02
		# line in RSA: Mmgr Initialized and Started.....
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Mmgr Initialized and Started....." }
				id => "message-mmgr:02"
				add_field => {
					"[event][id]" => "mmgr:02"
					"[rsa][message][id1]" => "mmgr:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mmgr:03
		# line in RSA: <<<severity>> Master IP changed from <change_old> to <change_new>, role <user_role>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Master IP changed from %{change_old} to %{change_new}, role %{user_role}" }
				id => "message-mmgr:03"
				add_field => {
					"[event][id]" => "mmgr:03"
					"[rsa][message][id1]" => "mmgr:03"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mmgr:04
		# line in RSA: <<<severity>> Switch IP = <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Switch IP = %{fld11}" }
				id => "message-mmgr:04"
				add_field => {
					"[event][id]" => "mmgr:04"
					"[rsa][message][id1]" => "mmgr:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mobagent" {
		# MESSAGE mobagent:01
		# line in RSA: <<<severity>> Received packet <fld13> from port <sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Received packet %{fld13} from port %{sport}" }
				id => "message-mobagent:01"
				add_field => {
					"[event][id]" => "mobagent:01"
					"[rsa][message][id1]" => "mobagent:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mobagent:02
		# line in RSA: <<<severity>> Setting station masquerade to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Setting station masquerade to %{fld11}" }
				id => "message-mobagent:02"
				add_field => {
					"[event][id]" => "mobagent:02"
					"[rsa][message][id1]" => "mobagent:02"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpd" {
		# MESSAGE ntpd:01
		# line in RSA: Connection re-established to <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Connection re-established to %{daddr}" }
				id => "message-ntpd:01"
				add_field => {
					"[event][id]" => "ntpd:01"
					"[rsa][message][id1]" => "ntpd:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:02
		# line in RSA: synchronisation lost
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "synchronisation lost" }
				id => "message-ntpd:02"
				add_field => {
					"[event][id]" => "ntpd:02"
					"[rsa][message][id1]" => "ntpd:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:03
		# line in RSA: time { reset | set } <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^time[\s]+([\s]*reset[\s]+|[\s]*set[\s]+)[\s]+(?<fld1>.*)$" }
				id => "message-ntpd:03"
				add_field => {
					"[event][id]" => "ntpd:03"
					"[rsa][message][id1]" => "ntpd:03"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:04
		# line in RSA:  kernel time discipline status <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel time discipline status %{resultcode}" }
				id => "message-ntpd:04"
				add_field => {
					"[event][id]" => "ntpd:04"
					"[rsa][message][id1]" => "ntpd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:05
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: %{fld13}" }
				id => "message-ntpd:05"
				add_field => {
					"[event][id]" => "ntpd:05"
					"[rsa][message][id1]" => "ntpd:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId503
	# line in RSA: <fld1> <<<fld2> <fld3>> <agent> <fld13>
	else if [logstash][msgparser][id] == "msgParserId503" {
		dissect {
			mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent} %{fld13}" }
			id => "msgParserId503"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId660
	# line in RSA:  <<<severity>> Firewall: Monitor IP sessions attack <disposition>
	else if [logstash][msgparser][id] == "msgParserId660" {
		dissect {
			mapping => { "message" => "<%{severity}> Firewall: Monitor IP sessions attack %{disposition}" }
			id => "msgParserId660"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pptpd" {
		# MESSAGE pptpd:01
		# line in RSA: PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-pptpd:01"
				add_field => {
					"[event][id]" => "pptpd:01"
					"[rsa][message][id1]" => "pptpd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pptpd:02
		# line in RSA: <<<severity>> Changing the Logging level to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
				id => "message-pptpd:02"
				add_field => {
					"[event][id]" => "pptpd:02"
					"[rsa][message][id1]" => "pptpd:02"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "publisher" {
		# MESSAGE publisher:01
		# line in RSA: <<<severity>> Publish message from <fld1> to <fld2> (service <fld12>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Publish message from %{fld1} to %{fld2} (service %{fld12})" }
				id => "message-publisher:01"
				add_field => {
					"[event][id]" => "publisher:01"
					"[rsa][message][id1]" => "publisher:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE publisher:02
		# line in RSA: <<<severity>> Forward subscribe request from <fld1> to <fld2> (service <fld12>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Forward subscribe request from %{fld1} to %{fld2} (service %{fld12})" }
				id => "message-publisher:02"
				add_field => {
					"[event][id]" => "publisher:02"
					"[rsa][message][id1]" => "publisher:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE publisher:03
		# line in RSA: <<<severity>> Module [<fld1>] will subscribe to service <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Module [%{fld1}] will subscribe to service %{fld12}" }
				id => "message-publisher:03"
				add_field => {
					"[event][id]" => "publisher:03"
					"[rsa][message][id1]" => "publisher:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE publisher:04
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: PAPI_Send: sendto DHCP Server failed: Connection refused Message Code <fld6> Sequence Num is <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: PAPI_Send: sendto DHCP Server failed: Connection refused Message Code %{fld6} Sequence Num is %{fld7}" }
				id => "message-publisher:04"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "publisher:04"
					"[rsa][message][id1]" => "publisher:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sapd" {
		# MESSAGE sapd:01
		# line in RSA: <daddr>(<fld1>): Received ARM chan/pwr assignment for bssid <fld3>: channel <fld13> power <fld14> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{daddr}(%{fld1}): Received ARM chan/pwr assignment for bssid %{fld3}: channel %{fld13} power %{fld14}" }
				id => "message-sapd:01"
				add_field => {
					"[event][id]" => "sapd:01"
					"[rsa][message][id1]" => "sapd:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapd:02
		# line in RSA: <fld1>(<fld11>): Missed <fld2> heartbeats on <fld3>. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}(%{fld11}): Missed %{fld2} heartbeats on %{fld3}. %{result}" }
				id => "message-sapd:02"
				add_field => {
					"[event][id]" => "sapd:02"
					"[rsa][message][id1]" => "sapd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapd:03
		# line in RSA:  <fld1>(<fld11>): Can't Get .a config in <fld2> retries. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}(%{fld11}): Can't Get .a config in %{fld2} retries. %{result}" }
				id => "message-sapd:03"
				add_field => {
					"[event][id]" => "sapd:03"
					"[rsa][message][id1]" => "sapd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sapm" {
		# MESSAGE sapm:01
		# line in RSA:  <<<severity>> Expected <fld1> LMSs Got <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Expected %{fld1} LMSs Got %{fld2}" }
				id => "message-sapm:01"
				add_field => {
					"[event][id]" => "sapm:01"
					"[rsa][message][id1]" => "sapm:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapm:02
		# line in RSA:  <<<severity>> Purging LMS <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Purging LMS %{fld1}" }
				id => "message-sapm:02"
				add_field => {
					"[event][id]" => "sapm:02"
					"[rsa][message][id1]" => "sapm:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapm:03
		# line in RSA:  <<<severity>> { Sending the AP UP Trap | Got LMSIP REQUEST from } AP <access_point>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*<(?<severity>[^>]*)>[\s]+([\s]*Sending[\s]+the[\s]+AP[\s]+UP[\s]+Trap[\s]+|[\s]*Got[\s]+LMSIP[\s]+REQUEST[\s]+from[\s]+)[\s]+AP[\s]+(?<access_point>.*)$" }
				id => "message-sapm:03"
				add_field => {
					"[event][id]" => "sapm:03"
					"[rsa][message][id1]" => "sapm:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapm:04
		# line in RSA:  <<<severity>> Missed <fld1> consecutive IMALIVEs from SAP <saddr>(<fld2>).<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Missed %{fld1} consecutive IMALIVEs from SAP %{saddr}(%{fld2}).%{result}" }
				id => "message-sapm:04"
				add_field => {
					"[event][id]" => "sapm:04"
					"[rsa][message][id1]" => "sapm:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapm:05
		# line in RSA: <<<severity>> license_key - <fld1> - <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> license_key - %{fld1} - %{disposition}" }
				id => "message-sapm:05"
				add_field => {
					"[event][id]" => "sapm:05"
					"[rsa][message][id1]" => "sapm:05"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapm:06
		# line in RSA: <<<severity>> AP at <hostip> Bootstrapping
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> AP at %{hostip} Bootstrapping" }
				id => "message-sapm:06"
				add_field => {
					"[event][id]" => "sapm:06"
					"[rsa][message][id1]" => "sapm:06"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sapm:07
		# line in RSA: <<<severity>> Deleting AP from SNMP list <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Deleting AP from SNMP list %{fld9}" }
				id => "message-sapm:07"
				add_field => {
					"[event][id]" => "sapm:07"
					"[rsa][message][id1]" => "sapm:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "snmp" {
		# MESSAGE snmp:01
		# line in RSA: <<<severity>> Changing the Logging level to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
				id => "message-snmp:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "snmp:01"
					"[rsa][message][id1]" => "snmp:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:02
		# line in RSA: { Done Here | Here } <fld11> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*Done[\s]+Here[\s]+|[\s]*Here[\s]+)[\s]+(?<fld11>[^\s]*)[\s]+$" }
				id => "message-snmp:02"
				add_field => {
					"[event][id]" => "snmp:02"
					"[rsa][message][id1]" => "snmp:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:03
		# line in RSA: <fld2>(<fld1>):Completed AMP Initialization
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2}(%{fld1}):Completed AMP Initialization" }
				id => "message-snmp:03"
				add_field => {
					"[event][id]" => "snmp:03"
					"[rsa][message][id1]" => "snmp:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:04
		# line in RSA: <fld2>(<fld1>):Initialized SNMP Agent
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2}(%{fld1}):Initialized SNMP Agent" }
				id => "message-snmp:04"
				add_field => {
					"[event][id]" => "snmp:04"
					"[rsa][message][id1]" => "snmp:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:05
		# line in RSA: <<<severity>> SNMP Authentication Failed for Management station <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> SNMP Authentication Failed for Management station %{saddr}" }
				id => "message-snmp:05"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "snmp:05"
					"[rsa][message][id1]" => "snmp:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:06
		# line in RSA: <<<severity>> PAPI Send returned with an Error for  reqType <fld1>, objectId <fld2> opType <fld3> appId <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> PAPI Send returned with an Error for  reqType %{fld1}, objectId %{fld2} opType %{fld3} appId %{fld4}" }
				id => "message-snmp:06"
				add_field => {
					"[event][id]" => "snmp:06"
					"[rsa][message][id1]" => "snmp:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:07
		# line in RSA:  PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-snmp:07"
				add_field => {
					"[event][id]" => "snmp:07"
					"[rsa][message][id1]" => "snmp:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:08
		# line in RSA:  trapSrcIp <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "trapSrcIp %{fld1}" }
				id => "message-snmp:08"
				add_field => {
					"[event][id]" => "snmp:08"
					"[rsa][message][id1]" => "snmp:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd" {
		# MESSAGE sshd:02
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: Received signal <fld6>; terminating.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: Received signal %{fld6}; terminating." }
				id => "message-sshd:02"
				add_field => {
					"[event][id]" => "sshd:02"
					"[rsa][message][id1]" => "sshd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:03
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: Received <fld6>; restarting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: Received %{fld6}; restarting." }
				id => "message-sshd:03"
				add_field => {
					"[event][id]" => "sshd:03"
					"[rsa][message][id1]" => "sshd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:01
		# line in RSA:  <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: <process>: exiting with code <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: %{process}: exiting with code %{resultcode}" }
				id => "message-sshd:01"
				add_field => {
				"event_description" => "sshd exiting"
					"[event][id]" => "sshd:01"
					"[rsa][message][id1]" => "sshd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:04
		# line in RSA:  <process>: exiting with code <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}: exiting with code %{resultcode}" }
				id => "message-sshd:04"
				add_field => {
				"event_description" => "sshd exiting"
					"[event][id]" => "sshd:04"
					"[rsa][message][id1]" => "sshd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:05
		# line in RSA:  <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: Connection closed by <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: Connection closed by %{hostip}" }
				id => "message-sshd:05"
				add_field => {
				"event_description" => "Connection closed"
					"[event][id]" => "sshd:05"
					"[rsa][message][id1]" => "sshd:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:06
		# line in RSA:  <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: Received disconnect from <saddr>: <fld5>: Closed due to user request.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: Received disconnect from %{saddr}: %{fld5}: Closed due to user request." }
				id => "message-sshd:06"
				add_field => {
				"event_description" => "Connection closed due to user request"
					"[event][id]" => "sshd:06"
					"[rsa][message][id1]" => "sshd:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:07
		# line in RSA:  <fld5> <hostname> <<<fld2> <hostip>> <agent>[<process_id>]: <fld4>: Read from socket failed: Connection reset by peer
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5} %{hostname} <%{fld2} %{hostip}> %{agent}[%{process_id}]: %{fld4}: Read from socket failed: Connection reset by peer" }
				id => "message-sshd:07"
				add_field => {
				"event_description" => "Read from socket failed: Connection reset by peer"
					"[event][id]" => "sshd:07"
					"[rsa][message][id1]" => "sshd:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE sshd:08
		# line in RSA:  <fld5> <hostname> <<<fld2> <hostip>> <agent>[<process_id>]: <fld4>: Write failed: Connection reset by peer
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld5} %{hostname} <%{fld2} %{hostip}> %{agent}[%{process_id}]: %{fld4}: Write failed: Connection reset by peer" }
				id => "message-sshd:08"
				add_field => {
				"event_description" => "Write failed: Connection reset by peer"
					"[event][id]" => "sshd:08"
					"[rsa][message][id1]" => "sshd:08"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "stm" {
		# MESSAGE stm:01
		# line in RSA: <<<severity>> Delete SAP called for <fld1> Deauth <fld2> Clear <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Delete SAP called for %{fld1} Deauth %{fld2} Clear %{fld3}" }
				id => "message-stm:01"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
					"[event][id]" => "stm:01"
					"[rsa][message][id1]" => "stm:01"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:02
		# line in RSA: <<<severity>> handle_sapm_conf_response processing started for <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> handle_sapm_conf_response processing started for %{fld11}" }
				id => "message-stm:02"
				add_field => {
					"[event][id]" => "stm:02"
					"[rsa][message][id1]" => "stm:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:03
		# line in RSA: <<<severity>> Sending AP <access_point> message to Auth FOL <fld2>:Status <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending AP %{access_point} message to Auth FOL %{fld2}:Status %{event_state}" }
				id => "message-stm:03"
				add_field => {
					"[event][id]" => "stm:03"
					"[rsa][message][id1]" => "stm:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:04
		# line in RSA: <<<severity>> Sending AP <access_point> message to SAPM
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending AP %{access_point} message to SAPM" }
				id => "message-stm:04"
				add_field => {
					"[event][id]" => "stm:04"
					"[rsa][message][id1]" => "stm:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:05
		# line in RSA: <<<severity>> Sending Config Response Message to SAP <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending Config Response Message to SAP %{daddr}" }
				id => "message-stm:05"
				add_field => {
					"[event][id]" => "stm:05"
					"[rsa][message][id1]" => "stm:05"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:06
		# line in RSA: <<<severity>> Sending Remote AP Config Message to STM <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending Remote AP Config Message to STM %{daddr}" }
				id => "message-stm:06"
				add_field => {
					"[event][id]" => "stm:06"
					"[rsa][message][id1]" => "stm:06"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:07
		# line in RSA: <<<severity>> Sending STA <fld40> message to Auth and Mobility Unicast Encr { Dynamic WPA | Open | Static WEP } Multicast Encr { Dynamic WPA | Open | Static WEP } VLAN <vlan>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^<(?<severity>[^>]*)>[\s]+Sending[\s]+STA[\s]+(?<fld40>[^\s]*)[\s]+message[\s]+to[\s]+Auth[\s]+and[\s]+Mobility[\s]+Unicast[\s]+Encr[\s]+([\s]*Dynamic[\s]+WPA[\s]+|[\s]*Open[\s]+|[\s]*Static[\s]+WEP[\s]+)[\s]+Multicast[\s]+Encr[\s]+([\s]*Dynamic[\s]+WPA[\s]+|[\s]*Open[\s]+|[\s]*Static[\s]+WEP[\s]+)[\s]+VLAN[\s]+(?<vlan>.*)$" }
				id => "message-stm:07"
				add_field => {
					"[event][id]" => "stm:07"
					"[rsa][message][id1]" => "stm:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:08
		# line in RSA:  <<<severity>> setup_sibyte_mcast_group: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> setup_sibyte_mcast_group: %{fld1}" }
				id => "message-stm:08"
				add_field => {
					"[event][id]" => "stm:08"
					"[rsa][message][id1]" => "stm:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:09
		# line in RSA:  <<<severity>> setup_sibyte_tunnel: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> setup_sibyte_tunnel: %{fld1}" }
				id => "message-stm:09"
				add_field => {
					"[event][id]" => "stm:09"
					"[rsa][message][id1]" => "stm:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:10
		# line in RSA:  <<<severity>> Tunnel for AP <access_point> TIP <fld1> slot <fld2> port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Tunnel for AP %{access_point} TIP %{fld1} slot %{fld2} port %{network_port}" }
				id => "message-stm:10"
				add_field => {
				"action" => "Tunnel created"
					"[event][id]" => "stm:10"
					"[rsa][message][id1]" => "stm:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:11
		# line in RSA:  <<<severity>> Tunnel Membership  message to fpapps - T <fld1>, V <fld2> A <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Tunnel Membership  message to fpapps - T %{fld1}, V %{fld2} A %{fld3}" }
				id => "message-stm:11"
				add_field => {
					"[event][id]" => "stm:11"
					"[rsa][message][id1]" => "stm:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:12
		# line in RSA:  <<<severity>> virtual_ap: ESS <fld3> DB <fld1> BB <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> virtual_ap: ESS %{fld3} DB %{fld1} BB %{fld2}" }
				id => "message-stm:12"
				add_field => {
					"[event][id]" => "stm:12"
					"[rsa][message][id1]" => "stm:12"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:13
		# line in RSA: <<<severity>> wifi_handle_vlan_message: VLAN <vlan> ADD <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> wifi_handle_vlan_message: VLAN %{vlan} ADD %{fld2}" }
				id => "message-stm:13"
				add_field => {
					"[event][id]" => "stm:13"
					"[rsa][message][id1]" => "stm:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:14
		# line in RSA: <<<severity>> assoc req <<<fld1>> AP <hostip>-<macaddr>-<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> assoc req <%{fld1}> AP %{hostip}-%{macaddr}-%{fld3}" }
				id => "message-stm:14"
				add_field => {
					"[event][id]" => "stm:14"
					"[rsa][message][id1]" => "stm:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:15
		# line in RSA: <<<severity>> wifi_configure_sap processing complete for <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> wifi_configure_sap processing complete for %{saddr}" }
				id => "message-stm:15"
				add_field => {
					"[event][id]" => "stm:15"
					"[rsa][message][id1]" => "stm:15"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:16
		# line in RSA: <<<severity>> wifi_sap_up: LOC <fld1> IP <fld5> BSS <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> wifi_sap_up: LOC %{fld1} IP %{fld5} BSS %{fld2}" }
				id => "message-stm:16"
				add_field => {
					"[event][id]" => "stm:16"
					"[rsa][message][id1]" => "stm:16"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:17
		# line in RSA: <<<severity>> wifi_sap_down:IP <fld5> BSS <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> wifi_sap_down:IP %{fld5} BSS %{fld1}" }
				id => "message-stm:17"
				add_field => {
					"[event][id]" => "stm:17"
					"[rsa][message][id1]" => "stm:17"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:18
		# line in RSA: <<<severity>> Added AP <macaddr>-<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Added AP %{macaddr}-%{fld2}" }
				id => "message-stm:18"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "stm:18"
					"[rsa][message][id1]" => "stm:18"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:19
		# line in RSA: <<<severity>> assoc success <<<fld1>> AP <hostip>-<macaddr>-<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> assoc success <%{fld1}> AP %{hostip}-%{macaddr}-%{fld3}" }
				id => "message-stm:19"
				add_field => {
					"[event][id]" => "stm:19"
					"[rsa][message][id1]" => "stm:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:20
		# line in RSA: <<<severity>> disassoc from sta <<<fld40>> AP <hostip>-<macaddr>-<fld3> Reason <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> disassoc from sta <%{fld40}> AP %{hostip}-%{macaddr}-%{fld3} Reason %{resultcode}" }
				id => "message-stm:20"
				add_field => {
					"[event][id]" => "stm:20"
					"[rsa][message][id1]" => "stm:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:21
		# line in RSA: <<<severity>> AP Radio Attributes Changed - BSSID <fld3> Location <fld2> IP <fld5> Channel <fld13> Tx Power <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> AP Radio Attributes Changed - BSSID %{fld3} Location %{fld2} IP %{fld5} Channel %{fld13} Tx Power %{fld4}" }
				id => "message-stm:21"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "stm:21"
					"[rsa][message][id1]" => "stm:21"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:22
		# line in RSA:  <<<severity>> MTU set to <fld1> for <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> MTU set to %{fld1} for %{fld2}" }
				id => "message-stm:22"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "stm:22"
					"[rsa][message][id1]" => "stm:22"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:23
		# line in RSA:  <<<severity>> new_ap:IP <hostip> BSS <fld1> PH <fld2> T <fld3> BR <fld4> TR <fld5> MC <fld6> SP <fld7> CV <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> new_ap:IP %{hostip} BSS %{fld1} PH %{fld2} T %{fld3} BR %{fld4} TR %{fld5} MC %{fld6} SP %{fld7} CV %{fld8}" }
				id => "message-stm:23"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "stm:23"
					"[rsa][message][id1]" => "stm:23"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:24
		# line in RSA: <<<severity>> wifi_configure_sap processing started for <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> wifi_configure_sap processing started for %{saddr}" }
				id => "message-stm:24"
				add_field => {
					"[event][id]" => "stm:24"
					"[rsa][message][id1]" => "stm:24"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:25
		# line in RSA: <<<severity>> deauth to sta <<<fld40>> Moved out from AP <hostip>-<macaddr>-<fld3> to new AP
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> deauth to sta <%{fld40}> Moved out from AP %{hostip}-%{macaddr}-%{fld3} to new AP" }
				id => "message-stm:25"
				add_field => {
					"[event][id]" => "stm:25"
					"[rsa][message][id1]" => "stm:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:26
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: PAPI_Init: timeout of <fld6> specified set to default <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: PAPI_Init: timeout of %{fld6} specified set to default %{fld7}" }
				id => "message-stm:26"
				add_field => {
					"[event][id]" => "stm:26"
					"[rsa][message][id1]" => "stm:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE stm:27
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: <fld13> dhcp ageout alert >>>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: %{fld13} dhcp ageout alert >>>>" }
				id => "message-stm:27"
				add_field => {
					"[event][id]" => "stm:27"
					"[rsa][message][id1]" => "stm:27"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog" {
		# MESSAGE syslog
		# line in RSA: insmod <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "insmod %{fld1}" }
				id => "message-syslog"
				add_field => {
					"[event][id]" => "syslog"
					"[rsa][message][id1]" => "syslog"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog:01
		# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <id>: <agent>: rotating <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{id}: %{agent}: rotating %{directory}" }
				id => "message-syslog:01"
				add_field => {
					"[event][id]" => "syslog:01"
					"[rsa][message][id1]" => "syslog:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog:02
		# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <id>: <agent>: tracing to <directory> started 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{id}: %{agent}: tracing to %{directory} started" }
				id => "message-syslog:02"
				add_field => {
					"[event][id]" => "syslog:02"
					"[rsa][message][id1]" => "syslog:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId719
	# line in RSA: <fld1> <<<fld2> <fld3>> syslogd <fld13>: restart <fld14>
	else if [logstash][msgparser][id] == "msgParserId719" {
		dissect {
			mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> syslogd %{fld13}: restart %{fld14}" }
			id => "msgParserId719"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "webui" {
		# MESSAGE webui:01
		# line in RSA:  USER:<username>@<saddr> COMMAND:<<<action>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "USER:%{username}@%{saddr} COMMAND:<%{action}>" }
				id => "message-webui:01"
				add_field => {
					"[event][id]" => "webui:01"
					"[rsa][message][id1]" => "webui:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:02
		# line in RSA:  USER: Error Executing the Command
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "USER: Error Executing the Command" }
				id => "message-webui:02"
				add_field => {
				"ec_outcome" => "Error"
					"[event][id]" => "webui:02"
					"[rsa][message][id1]" => "webui:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:03
		# line in RSA:  PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-webui:03"
				add_field => {
					"[event][id]" => "webui:03"
					"[rsa][message][id1]" => "webui:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:04
		# line in RSA:  sendLogConfigMessage: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "sendLogConfigMessage: %{result}" }
				id => "message-webui:04"
				add_field => {
					"[event][id]" => "webui:04"
					"[rsa][message][id1]" => "webui:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:05
		# line in RSA: {Unlocking | Locking} the Configuration file
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(Unlocking[\s]+|[\s]*Locking)[\s]+the[\s]+Configuration[\s]+file$" }
				id => "message-webui:05"
				add_field => {
					"[event][id]" => "webui:05"
					"[rsa][message][id1]" => "webui:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:06
		# line in RSA: Saving configuration
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Saving configuration" }
				id => "message-webui:06"
				add_field => {
					"[event][id]" => "webui:06"
					"[rsa][message][id1]" => "webui:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:07
		# line in RSA:  Did not get a reply from the application...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Did not get a reply from the application..." }
				id => "message-webui:07"
				add_field => {
					"[event][id]" => "webui:07"
					"[rsa][message][id1]" => "webui:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:08
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER: <username> has logged in from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER: %{username} has logged in from %{saddr}" }
				id => "message-webui:08"
				add_field => {
				"ec_activity" => "Logon"
					"[event][id]" => "webui:08"
					"[rsa][message][id1]" => "webui:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:09
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER: <username> connected from <saddr> has logged out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER: %{username} connected from %{saddr} has logged out." }
				id => "message-webui:09"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
					"[event][id]" => "webui:09"
					"[rsa][message][id1]" => "webui:09"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:10
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER:<username> COMMAND:<<<action>> -- command executed successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER:%{username} COMMAND:<%{action}> -- command executed successfully" }
				id => "message-webui:10"
				add_field => {
					"[event][id]" => "webui:10"
					"[rsa][message][id1]" => "webui:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE webui:11
		# line in RSA: <fld1> <<<fld2> <fld3>> <agent>[<process_id>]: USER:<username> COMMAND:<<<action>> -- command execution failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} <%{fld2} %{fld3}> %{agent}[%{process_id}]: USER:%{username} COMMAND:<%{action}> -- command execution failed" }
				id => "message-webui:11"
				add_field => {
					"[event][id]" => "webui:11"
					"[rsa][message][id1]" => "webui:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "wms" {
		# MESSAGE wms:01
		# line in RSA: <<<severity>> pmgr_register: Receive register <fld11> type <fld1> loc <fld2> status <event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> pmgr_register: Receive register %{fld11} type %{fld1} loc %{fld2} status %{event_state}" }
				id => "message-wms:01"
				add_field => {
					"[event][id]" => "wms:01"
					"[rsa][message][id1]" => "wms:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:02
		# line in RSA:  <<<severity>> Sending message type <fld1> to LMS <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Sending message type %{fld1} to LMS %{daddr}" }
				id => "message-wms:02"
				add_field => {
				"action" => "Sending message"
					"[event][id]" => "wms:02"
					"[rsa][message][id1]" => "wms:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:03
		# line in RSA:  <<<severity>> SSID <ssid> <fld2>-new <change_new> old <change_old> poll_resp <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> SSID %{ssid} %{fld2}-new %{change_new} old %{change_old} poll_resp %{fld4}" }
				id => "message-wms:03"
				add_field => {
					"[event][id]" => "wms:03"
					"[rsa][message][id1]" => "wms:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:04
		# line in RSA: <<<severity>> stamgr_rbtree_update: Deleting AP from STA treeBSSID: <fld3> Monitor MAC: <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> stamgr_rbtree_update: Deleting AP from STA treeBSSID: %{fld3} Monitor MAC: %{fld4}" }
				id => "message-wms:04"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
					"[event][id]" => "wms:04"
					"[rsa][message][id1]" => "wms:04"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:05
		# line in RSA: <<<severity>> apmgr_handle_ageout: Ageing { STA | AP } tree { nodeMAC: | node BSSID }: <fld3> Monitor MAC: <fld5>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^<(?<severity>[^>]*)>[\s]+apmgr_handle_ageout:[\s]+Ageing[\s]+([\s]*STA[\s]+|[\s]*AP[\s]+)[\s]+tree[\s]+([\s]*nodeMAC:[\s]+|[\s]*node[\s]+BSSID[\s]+):[\s]+(?<fld3>[^\s]*)[\s]+Monitor[\s]+MAC:[\s]+(?<fld5>.*)$" }
				id => "message-wms:05"
				add_field => {
					"[event][id]" => "wms:05"
					"[rsa][message][id1]" => "wms:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:06
		# line in RSA: <<<severity>> apmgr_handle_ageout: Ageing AP <access_point> <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> apmgr_handle_ageout: Ageing AP %{access_point} %{fld2}" }
				id => "message-wms:06"
				add_field => {
					"[event][id]" => "wms:06"
					"[rsa][message][id1]" => "wms:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:07
		# line in RSA: <<<severity>> Changing the Logging level to <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> Changing the Logging level to %{fld11}" }
				id => "message-wms:07"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "wms:07"
					"[rsa][message][id1]" => "wms:07"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:08
		# line in RSA: <<<severity>> start_rra: <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> start_rra: %{fld11}" }
				id => "message-wms:08"
				add_field => {
					"[event][id]" => "wms:08"
					"[rsa][message][id1]" => "wms:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:09
		# line in RSA: <<<severity>> stamgr_handle_ageout: Ageing STA tree nodeMAC: <fld11> Monitor MAC: <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> stamgr_handle_ageout: Ageing STA tree nodeMAC: %{fld11} Monitor MAC: %{fld12}" }
				id => "message-wms:09"
				add_field => {
					"[event][id]" => "wms:09"
					"[rsa][message][id1]" => "wms:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:10
		# line in RSA: <<<severity>> PAPI_Send failed to probe { IP <daddr> | <daddr> } from WMS
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^<(?<severity>[^>]*)>[\s]+PAPI_Send[\s]+failed[\s]+to[\s]+probe[\s]+([\s]*IP[\s]+(?<daddr>[^\s]*)[\s]+|[\s]*(?<daddr>[^\s]*)[\s]+)[\s]+from[\s]+WMS$" }
				id => "message-wms:10"
				add_field => {
				"ec_outcome" => "Failure"
					"[event][id]" => "wms:10"
					"[rsa][message][id1]" => "wms:10"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:11
		# line in RSA: PAPI_Send: To: <fld1> Type:<fld2> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PAPI_Send: To: %{fld1} Type:%{fld2} %{result}" }
				id => "message-wms:11"
				add_field => {
					"[event][id]" => "wms:11"
					"[rsa][message][id1]" => "wms:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:12
		# line in RSA: <<<severity>> rap_message: Unknown RAP response from probe <saddr> on AP <access_point>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> rap_message: Unknown RAP response from probe %{saddr} on AP %{access_point}" }
				id => "message-wms:12"
				add_field => {
					"[event][id]" => "wms:12"
					"[rsa][message][id1]" => "wms:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE wms:13
		# line in RSA: <<<severity>> stamgr_handle_ageout: Ageing STA <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{severity}> stamgr_handle_ageout: Ageing STA %{fld40}" }
				id => "message-wms:13"
				add_field => {
					"[event][id]" => "wms:13"
					"[rsa][message][id1]" => "wms:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId741
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Administrative User Authentication Failed: username=<username> IP=<saddr> auth server=<dhost> 
	else if [logstash][msgparser][id] == "msgParserId741" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Administrative User Authentication Failed: username=%{username} IP=%{saddr} auth server=%{dhost}" }
			id => "msgParserId741"
			add_field => {
				"ec_outcome" => "Failure"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId742
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Administrative User Authentication Successful: username=<username> IP=<saddr> auth server=<dhost> 
	else if [logstash][msgparser][id] == "msgParserId742" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Administrative User Authentication Successful: username=%{username} IP=%{saddr} auth server=%{dhost}" }
			id => "msgParserId742"
			add_field => {
				"ec_outcome" => "Success"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId743
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr>,IP=<saddr> User role updated, existing Role=<fld5> new Role=<user_role>, reason=<result> 
	else if [logstash][msgparser][id] == "msgParserId743" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr},IP=%{saddr} User role updated, existing Role=%{fld5} new Role=%{user_role}, reason=%{result}" }
			id => "msgParserId743"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId744
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC=<smacaddr>,IP=<saddr> User data downloaded to datapath, new Role=<user_role>, bw Contract=<fld3>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId744" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC=%{smacaddr},IP=%{saddr} User data downloaded to datapath, new Role=%{user_role}, bw Contract=%{fld3},reason=%{result}" }
			id => "msgParserId744"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId745
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Interface for vlan <vlan> is <result> 
	else if [logstash][msgparser][id] == "msgParserId745" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Interface for vlan %{vlan} is %{result}" }
			id => "msgParserId745"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId746
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Addts req: <smacaddr>: AP <hostip>-<macaddr>-<fld48>
	else if [logstash][msgparser][id] == "msgParserId746" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Addts req: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48}" }
			id => "msgParserId746"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId747
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Addts resp: <smacaddr>: AP <hostip>-<macaddr>-<fld48> accept  flow - tsid <info> ver-<version> SIP-<saddr> DIP-<daddr> SP-<sport> DP-<dport> PROTO-6:<protocol>
	else if [logstash][msgparser][id] == "msgParserId747" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Addts resp: %{smacaddr}: AP %{hostip}-%{macaddr}-%{fld48} accept  flow - tsid %{info} ver-%{version} SIP-%{saddr} DIP-%{daddr} SP-%{sport} DP-%{dport} PROTO-6:%{protocol}" }
			id => "msgParserId747"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId748
	# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <agent>[<process_id>]: <protocol>, IP range <fld46> -- <fld47>, lease time <fld48>
	else if [logstash][msgparser][id] == "msgParserId748" {
		dissect {
			mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{agent}[%{process_id}]: %{protocol}, IP range %{fld46} -- %{fld47}, lease time %{fld48}" }
			id => "msgParserId748"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dropbear" {
		# MESSAGE dropbear
		# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <agent>[<process_id>]: Child connection from <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{agent}[%{process_id}]: Child connection from %{saddr}:%{sport}" }
				id => "message-dropbear"
				add_field => {
					"[event][id]" => "dropbear"
					"[rsa][message][id1]" => "dropbear"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dropbear:01
		# line in RSA: <fld1> <daddr> <<<fld2> <fld3>> <agent>[<process_id>]: User: <username> login by <fld13> <disposition>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{daddr} <%{fld2} %{fld3}> %{agent}[%{process_id}]: User: %{username} login by %{fld13} %{disposition}." }
				id => "message-dropbear:01"
				add_field => {
					"[event][id]" => "dropbear:01"
					"[rsa][message][id1]" => "dropbear:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "341003" {
		# MESSAGE 341003
		# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  try to get <fld13> uplink.current uplink <fld14>, last tried uplink is <fld48>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  try to get %{fld13} uplink.current uplink %{fld14}, last tried uplink is %{fld48}." }
				id => "message-341003"
				add_field => {
					"[event][id]" => "341003"
					"[rsa][message][id1]" => "341003"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 341003:01
		# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  last tried uplink is <fld48>, current used uplink is the <fld13> uplink, choose <fld14>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  last tried uplink is %{fld48}, current used uplink is the %{fld13} uplink, choose %{fld14}." }
				id => "message-341003:01"
				add_field => {
					"[event][id]" => "341003:01"
					"[rsa][message][id1]" => "341003:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId753
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld50> to <fld13> 
	else if [logstash][msgparser][id] == "msgParserId753" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld50} to %{fld13}" }
			id => "msgParserId753"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId754
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  AP <hostip>: Client <smacaddr> <action> fail because <result> 
	else if [logstash][msgparser][id] == "msgParserId754" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  AP %{hostip}: Client %{smacaddr} %{action} fail because %{result}" }
			id => "msgParserId754"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId755
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13>: user-<username> <fld5> <fld14> use <fld15>. 
	else if [logstash][msgparser][id] == "msgParserId755" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13}: user-%{username} %{fld5} %{fld14} use %{fld15}." }
			id => "msgParserId755"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId756
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13> for AP-<saddr>, <fld14> <fld15> vs <fld48> <fld50>. 
	else if [logstash][msgparser][id] == "msgParserId756" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13} for AP-%{saddr}, %{fld14} %{fld15} vs %{fld48} %{fld50}." }
			id => "msgParserId756"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId757
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13>: foreign client info <smacaddr> first <fld14> <fld15> <fld16> <fld5> <fld48>. 
	else if [logstash][msgparser][id] == "msgParserId757" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13}: foreign client info %{smacaddr} first %{fld14} %{fld15} %{fld16} %{fld5} %{fld48}." }
			id => "msgParserId757"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId758
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Send <fld13> to <fld14> <fld16>, length <fld15>. 
	else if [logstash][msgparser][id] == "msgParserId758" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Send %{fld13} to %{fld14} %{fld16}, length %{fld15}." }
			id => "msgParserId758"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId759
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  recv_heartbeat_local: <fld13> register/heartbeat from <smacaddr>, <saddr>. 
	else if [logstash][msgparser][id] == "msgParserId759" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  recv_heartbeat_local: %{fld13} register/heartbeat from %{smacaddr}, %{saddr}." }
			id => "msgParserId759"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId760
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: client subnet info <smacaddr> <fld13>. 
	else if [logstash][msgparser][id] == "msgParserId760" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: client subnet info %{smacaddr} %{fld13}." }
			id => "msgParserId760"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId761
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: awc <fld13> to <saddr> <disposition>. 
	else if [logstash][msgparser][id] == "msgParserId761" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: awc %{fld13} to %{saddr} %{disposition}." }
			id => "msgParserId761"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId762
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13> AP config, reason <result>. 
	else if [logstash][msgparser][id] == "msgParserId762" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13} AP config, reason %{result}." }
			id => "msgParserId762"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId763
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Config file length is <fld14>, allowed length is <fld48>. 
	else if [logstash][msgparser][id] == "msgParserId763" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Config file length is %{fld14}, allowed length is %{fld48}." }
			id => "msgParserId763"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId764
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Client <smacaddr> is <disposition> to authenticate, failure count is <fld14>. 
	else if [logstash][msgparser][id] == "msgParserId764" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Client %{smacaddr} is %{disposition} to authenticate, failure count is %{fld14}." }
			id => "msgParserId764"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId765
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13>: receive station msg, mac-<smacaddr> bssid-<bssid> ssid-<ssid>.
	else if [logstash][msgparser][id] == "msgParserId765" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13}: receive station msg, mac-%{smacaddr} bssid-%{bssid} ssid-%{ssid}." }
			id => "msgParserId765"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId766
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld13>,<fld14>: add client <smacaddr>, client count <fld48>.
	else if [logstash][msgparser][id] == "msgParserId766" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld13},%{fld14}: add client %{smacaddr}, client count %{fld48}." }
			id => "msgParserId766"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId767
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>,<fld13>: del client <smacaddr>, client count <fld48>.
	else if [logstash][msgparser][id] == "msgParserId767" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5},%{fld13}: del client %{smacaddr}, client count %{fld48}." }
			id => "msgParserId767"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId768
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  Learning client username: mac-<smacaddr> usr-<username> acct-<fld48>
	else if [logstash][msgparser][id] == "msgParserId768" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  Learning client username: mac-%{smacaddr} usr-%{username} acct-%{fld48}" }
			id => "msgParserId768"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId769
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: allocate accounting session id, user-<fld6> id-<fld48>.
	else if [logstash][msgparser][id] == "msgParserId769" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: allocate accounting session id, user-%{fld6} id-%{fld48}." }
			id => "msgParserId769"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId770
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: set user idle timeout, user-<fld6> timeout-<fld48>.
	else if [logstash][msgparser][id] == "msgParserId770" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: set user idle timeout, user-%{fld6} timeout-%{fld48}." }
			id => "msgParserId770"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId771
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: receive os msg, mac-<smacaddr>, detail-<fld48> 
	else if [logstash][msgparser][id] == "msgParserId771" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: receive os msg, mac-%{smacaddr}, detail-%{fld48}" }
			id => "msgParserId771"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId772
	# line in RSA: <daddr> <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: send idle timeout, sta <smacaddr> , idle time-<fld48>.
	else if [logstash][msgparser][id] == "msgParserId772" {
		dissect {
			mapping => { "message" => "%{daddr} %{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: send idle timeout, sta %{smacaddr} , idle time-%{fld48}." }
			id => "msgParserId772"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId773
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  <fld5>: Tunnel <saddr> <smacaddr> <fld13> <fld14>
	else if [logstash][msgparser][id] == "msgParserId773" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  %{fld5}: Tunnel %{saddr} %{smacaddr} %{fld13} %{fld14}" }
			id => "msgParserId773"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId774
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |<fld2>| AP(<fld13>@<fld14>): Disconnect Station Attack: An AP detected a disconnect attack of client <smacaddr> and access point (BSSID <bssid> and SSID <ssid> on CHANNEL <fld4>). SNR of client is <fld16>. Additional Info: <info> 
	else if [logstash][msgparser][id] == "msgParserId774" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |%{fld2}| AP(%{fld13}@%{fld14}): Disconnect Station Attack: An AP detected a disconnect attack of client %{smacaddr} and access point (BSSID %{bssid} and SSID %{ssid} on CHANNEL %{fld4}). SNR of client is %{fld16}. Additional Info: %{info}" }
			id => "msgParserId774"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId775
	# line in RSA: <fld21> <daddr> <agent>(<fld1>@<fld11>): vap <fld4> vlan is <vlan>.<fld3> discovering tunnel vlan
	else if [logstash][msgparser][id] == "msgParserId775" {
		dissect {
			mapping => { "message" => "%{fld21} %{daddr} %{agent}(%{fld1}@%{fld11}): vap %{fld4} vlan is %{vlan}.%{fld3} discovering tunnel vlan" }
			id => "msgParserId775"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "501116" {
		# MESSAGE 501116
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Blacklist del: <smacaddr> <result>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}@%{fld11} stm|  Blacklist del: %{smacaddr} %{result}" }
				id => "message-501116"
				add_field => {
					"[event][id]" => "501116"
					"[rsa][message][id1]" => "501116"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501116:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>>  Blacklist del: <smacaddr> <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}>  Blacklist del: %{smacaddr} %{result}" }
				id => "message-501116:01"
				add_field => {
					"[event][id]" => "501116:01"
					"[rsa][message][id1]" => "501116:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "501103" {
		# MESSAGE 501103
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>@<fld11> stm|  Blacklist add: {<smacaddr>: Reason:<result>|<smacaddr> <result>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|AP[\s]+(?<fld10>[^@]*)@(?<fld11>[^\s]*)[\s]+stm\|[\s]+Blacklist[\s]+add:[\s]+((?<smacaddr>[^:]*):[\s]+Reason:(?<result>[^\s]*)|(?<smacaddr>[^\s]*)[\s]+(?<result>[^\s]*))[\s]+$" }
				id => "message-501103"
				add_field => {
					"[event][id]" => "501103"
					"[rsa][message][id1]" => "501103"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501103:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>>  Blacklist add: {<smacaddr>: Reason:<result>|<smacaddr> <result>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld2>[^>]*)>[\s]+Blacklist[\s]+add:[\s]+((?<smacaddr>[^:]*):[\s]+Reason:(?<result>[^\s]*)|(?<smacaddr>[^\s]*)[\s]+(?<result>[^\s]*))[\s]+$" }
				id => "message-501103:01"
				add_field => {
					"[event][id]" => "501103:01"
					"[rsa][message][id1]" => "501103:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "522275" {
		# MESSAGE 522275:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  User Authentication failed. username=<username> userip=<saddr> usermac=<dmacaddr> authmethod=<authmethod> servername=<fld13> serverip=<daddr> apname=<fld14> bssid=<bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  User Authentication failed. username=%{username} userip=%{saddr} usermac=%{dmacaddr} authmethod=%{authmethod} servername=%{fld13} serverip=%{daddr} apname=%{fld14} bssid=%{bssid}" }
				id => "message-522275:01"
				add_field => {
				"event_description" => "User Authentication failed."
					"[event][id]" => "522275:01"
					"[rsa][message][id1]" => "522275:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 522275
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <fld12> username=<smacaddr> userip=<saddr> usermac=<dmacaddr> servername=<fld13> serverip=<daddr> apname=<fld14> bssid=<bssid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{fld12} username=%{smacaddr} userip=%{saddr} usermac=%{dmacaddr} servername=%{fld13} serverip=%{daddr} apname=%{fld14} bssid=%{bssid}" }
				id => "message-522275"
				add_field => {
					"[event][id]" => "522275"
					"[rsa][message][id1]" => "522275"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId789
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <fld12> username=<username> userip=<saddr> usermac=<dmacaddr> servername=<fld13> serverip=<daddr> bssid=<bssid> apname=<fld14>
	else if [logstash][msgparser][id] == "msgParserId789" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{fld12} username=%{username} userip=%{saddr} usermac=%{dmacaddr} servername=%{fld13} serverip=%{daddr} bssid=%{bssid} apname=%{fld14}" }
			id => "msgParserId789"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId790
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <fld12> username=<username> userip=<saddr> servername=<fld13> serverip=<daddr> 
	else if [logstash][msgparser][id] == "msgParserId790" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{fld12} username=%{username} userip=%{saddr} servername=%{fld13} serverip=%{daddr}" }
			id => "msgParserId790"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId791
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> |aaa| Error reading TACACS PAP authentication packet header. <fld12>
	else if [logstash][msgparser][id] == "msgParserId791" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> |aaa| Error reading TACACS PAP authentication packet header. %{fld12}" }
			id => "msgParserId791"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId792
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC Authentication was not done for station <macaddr> <fld12>
	else if [logstash][msgparser][id] == "msgParserId792" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC Authentication was not done for station %{macaddr} %{fld12}" }
			id => "msgParserId792"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId793
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  MAC Authentication was not successful and l2-fail-through is not enabled for station <macaddr> <fld12>
	else if [logstash][msgparser][id] == "msgParserId793" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  MAC Authentication was not successful and l2-fail-through is not enabled for station %{macaddr} %{fld12}" }
			id => "msgParserId793"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId795
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>>  LDAP Server <dhost> : <result> , <fld12>
	else if [logstash][msgparser][id] == "msgParserId795" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}>  LDAP Server %{dhost} : %{result} , %{fld12}" }
			id => "msgParserId795"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId796
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld10> <fld11>> <result> username=<username> userip=<saddr> usermac=<dmacaddr> servername=<fld13> serverip=<daddr> bssid=<bssid> apname=<fld14> 
	else if [logstash][msgparser][id] == "msgParserId796" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld10} %{fld11}> %{result} username=%{username} userip=%{saddr} usermac=%{dmacaddr} servername=%{fld13} serverip=%{daddr} bssid=%{bssid} apname=%{fld14}" }
			id => "msgParserId796"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "129002" {
		# MESSAGE 129002:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  <fld50>: <fld12>: <fld13>: <fld14>>>ERROR>>TPM_EvictKey <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  %{fld50}: %{fld12}: %{fld13}: %{fld14}>>ERROR>>TPM_EvictKey %{result}" }
				id => "message-129002:01"
				add_field => {
					"[event][id]" => "129002:01"
					"[rsa][message][id1]" => "129002:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 129002
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  <fld50>: <fld12>: <fld13>: <fld14>>>ERROR>>TPM <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  %{fld50}: %{fld12}: %{fld13}: %{fld14}>>ERROR>>TPM %{result}" }
				id => "message-129002"
				add_field => {
					"[event][id]" => "129002"
					"[rsa][message][id1]" => "129002"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 129002:02
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  <fld50>: <fld12>: <fld13>: <fld14>>>ERROR>>Failed to evict key <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  %{fld50}: %{fld12}: %{fld13}: %{fld14}>>ERROR>>Failed to evict key %{result}" }
				id => "message-129002:02"
				add_field => {
					"[event][id]" => "129002:02"
					"[rsa][message][id1]" => "129002:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId806
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  AM <fld50>: <event_description>, channel <fld46>, typeid <fld47> 
	else if [logstash][msgparser][id] == "msgParserId806" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  AM %{fld50}: %{event_description}, channel %{fld46}, typeid %{fld47}" }
			id => "msgParserId806"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "404096" {
		# MESSAGE 404096
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  AM <fld12>: ARM - HT too little power increasing... cov-index <fld13>/<fld14> tx-power <fld15> new_rra <fld16>+/<fld17> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  AM %{fld12}: ARM - HT too little power increasing... cov-index %{fld13}/%{fld14} tx-power %{fld15} new_rra %{fld16}+/%{fld17}" }
				id => "message-404096"
				add_field => {
					"[event][id]" => "404096"
					"[rsa][message][id1]" => "404096"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404096:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld54>: ARM - HT too little power increasing... cov-index <fld5>/<fld6> tx-power <fld7> new_rra <fld8>/ <fld9> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld54}: ARM - HT too little power increasing... cov-index %{fld5}/%{fld6} tx-power %{fld7} new_rra %{fld8}/ %{fld9}" }
				id => "message-404096:01"
				add_field => {
					"[event][id]" => "404096:01"
					"[rsa][message][id1]" => "404096:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "404088" {
		# MESSAGE 404088
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM HT Radar Detected Trigger Current Channel old <fld5>+ <fld6> +/<fld7> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM HT Radar Detected Trigger Current Channel old %{fld5}+ %{fld6} +/%{fld7}" }
				id => "message-404088"
				add_field => {
					"[event][id]" => "404088"
					"[rsa][message][id1]" => "404088"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 404088:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM HT Radar Detected Trigger Current Channel old  <fld5> new <fld6>/ <fld7> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM HT Radar Detected Trigger Current Channel old  %{fld5} new %{fld6}/ %{fld7}" }
				id => "message-404088:01"
				add_field => {
					"[event][id]" => "404088:01"
					"[rsa][message][id1]" => "404088:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId810
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM - HT too much power decreasing... cov-index <fld5>/<fld6> tx-power <fld7> new_rra <fld8>+/<fld9> 
	else if [logstash][msgparser][id] == "msgParserId810" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM - HT too much power decreasing... cov-index %{fld5}/%{fld6} tx-power %{fld7} new_rra %{fld8}+/%{fld9}" }
			id => "msgParserId810"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId811
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld2> @ <fld3> sapd|  AM <fld4>: ARM HT Error Threshold Trigger Current Channel old  <fld5>- <fld6> new <fld7>+/<fld8> 
	else if [logstash][msgparser][id] == "msgParserId811" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld2} @ %{fld3} sapd|  AM %{fld4}: ARM HT Error Threshold Trigger Current Channel old  %{fld5}- %{fld6} new %{fld7}+/%{fld8}" }
			id => "msgParserId811"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId815
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10> @ <fld11> sapd|  AM <fld12>: ARM HT Empty Channel Trigger new  <fld13>+/ <fld14>/ <fld15> old <fld16>+/ <fld17>/ <fld18> new_rra <fld19>+/ <fld20> 
	else if [logstash][msgparser][id] == "msgParserId815" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10} @ %{fld11} sapd|  AM %{fld12}: ARM HT Empty Channel Trigger new  %{fld13}+/ %{fld14}/ %{fld15} old %{fld16}+/ %{fld17}/ %{fld18} new_rra %{fld19}+/ %{fld20}" }
			id => "msgParserId815"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "501097" {
		# MESSAGE 501097
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>>  Assoc request: <smacaddr>: Dropped AP <fld10>- <fld11>- <fld12>- <fld13>- <fld14>- <fld15> <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}>  Assoc request: %{smacaddr}: Dropped AP %{fld10}- %{fld11}- %{fld12}- %{fld13}- %{fld14}- %{fld15} %{result}" }
				id => "message-501097"
				add_field => {
					"[event][id]" => "501097"
					"[rsa][message][id1]" => "501097"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 501097:01
		# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>- <fld11>- <fld12>- <fld13> @ <fld20> stm|  Assoc request: <smacaddr>: Dropped AP <fld14>- <fld15>- <fld16>- <fld17>- <fld18>- <fld19> <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}- %{fld11}- %{fld12}- %{fld13} @ %{fld20} stm|  Assoc request: %{smacaddr}: Dropped AP %{fld14}- %{fld15}- %{fld16}- %{fld17}- %{fld18}- %{fld19} %{result}" }
				id => "message-501097:01"
				add_field => {
					"[event][id]" => "501097:01"
					"[rsa][message][id1]" => "501097:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId818
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld10>- <fld11>- <fld12>- <fld13> @ <fld14> stm|  <event_description>- AP <macaddr> 
	else if [logstash][msgparser][id] == "msgParserId818" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld10}- %{fld11}- %{fld12}- %{fld13} @ %{fld14} stm|  %{event_description}- AP %{macaddr}" }
			id => "msgParserId818"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId819
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> |AP <fld11>- <fld12>- <fld13> @ <fld14> stm| |ap| Unexpected stm ( <fld15>) <fld16> handle_assoc_req, <fld17>, handle_assoc_req: sa-mac: <macaddr>, sta <fld18>: <fld19> (<fld20>) mismatched- <fld21>! 
	else if [logstash][msgparser][id] == "msgParserId819" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> |AP %{fld11}- %{fld12}- %{fld13} @ %{fld14} stm| |ap| Unexpected stm ( %{fld15}) %{fld16} handle_assoc_req, %{fld17}, handle_assoc_req: sa-mac: %{macaddr}, sta %{fld18}: %{fld19} (%{fld20}) mismatched- %{fld21}!" }
			id => "msgParserId819"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId820
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): Hotspotter Attack: <event_description> (BSSID <smacaddr> on CHANNEL <fld8> with SNR <fld9>) <fld10>. <fld11>. Associated WVE ID(s): <fld15>.
	else if [logstash][msgparser][id] == "msgParserId820" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): Hotspotter Attack: %{event_description} (BSSID %{smacaddr} on CHANNEL %{fld8} with SNR %{fld9}) %{fld10}. %{fld11}. Associated WVE ID(s): %{fld15}." }
			id => "msgParserId820"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId821
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): Valid OUI Violation: <event_description> (BSSID <smacaddr> <fld9> SSID <fld10> CHANNEL <fld8>) <fld15>
	else if [logstash][msgparser][id] == "msgParserId821" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): Valid OUI Violation: %{event_description} (BSSID %{smacaddr} %{fld9} SSID %{fld10} CHANNEL %{fld8}) %{fld15}" }
			id => "msgParserId821"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId824
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): Power Save DoS Attack: <event_description> (BSSID <smacaddr> <fld9> SSID <ssid> <fld10> CHANNEL <fld8>). <fld11>. <fld12>: <fld13>: <fld15> <category>: <fld17>.
	else if [logstash][msgparser][id] == "msgParserId824" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): Power Save DoS Attack: %{event_description} (BSSID %{smacaddr} %{fld9} SSID %{ssid} %{fld10} CHANNEL %{fld8}). %{fld11}. %{fld12}: %{fld13}: %{fld15} %{category}: %{fld17}." }
			id => "msgParserId824"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId825
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): <fld5>: <event_description> (<fld6>) <fld7> (BSSID <fld8>), with source <fld9> and receiver <fld10>. <fld11>.
	else if [logstash][msgparser][id] == "msgParserId825" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): %{fld5}: %{event_description} (%{fld6}) %{fld7} (BSSID %{fld8}), with source %{fld9} and receiver %{fld10}. %{fld11}." }
			id => "msgParserId825"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId827
	# line in RSA:  <fld1> <agent>[<process_id>]: <<<fld2>> <<<severity>> <<<fld3>> |<fld5>| <fld4>: <result>
	else if [logstash][msgparser][id] == "msgParserId827" {
		dissect {
			mapping => { "message" => "%{fld1} %{agent}[%{process_id}]: <%{fld2}> <%{severity}> <%{fld3}> |%{fld5}| %{fld4}: %{result}" }
			id => "msgParserId827"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId828
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): <fld5>: <fld6>: <event_description> (<fld13>) <fld57>, <fld14>. <fld12>.
	else if [logstash][msgparser][id] == "msgParserId828" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): %{fld5}: %{fld6}: %{event_description} (%{fld13}) %{fld57}, %{fld14}. %{fld12}." }
			id => "msgParserId828"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId829
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): <fld5>: <event_description> (<fld13>) <fld57>.
	else if [logstash][msgparser][id] == "msgParserId829" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): %{fld5}: %{event_description} (%{fld13}) %{fld57}." }
			id => "msgParserId829"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId830
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): <fld5>: <event_description>, <fld13>, <fld57>.
	else if [logstash][msgparser][id] == "msgParserId830" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): %{fld5}: %{event_description}, %{fld13}, %{fld57}." }
			id => "msgParserId830"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId831
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> <result>.
	else if [logstash][msgparser][id] == "msgParserId831" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> %{result}." }
			id => "msgParserId831"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId832
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> |<fld3>| AP(<macaddr>@<fld4>): <fld5>: <event_description> (<fld13>). <fld14>. Additional Info: <fld57>.
	else if [logstash][msgparser][id] == "msgParserId832" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> |%{fld3}| AP(%{macaddr}@%{fld4}): %{fld5}: %{event_description} (%{fld13}). %{fld14}. Additional Info: %{fld57}." }
			id => "msgParserId832"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId833
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> <fld3> SNMP Authentication Failed for Management station <saddr>
	else if [logstash][msgparser][id] == "msgParserId833" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> %{fld3} SNMP Authentication Failed for Management station %{saddr}" }
			id => "msgParserId833"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId834
	# line in RSA: <agent>[<process_id>]: <<<fld1>> <<<severity>> <<<fld2>> Authentication failure, bad community string
	else if [logstash][msgparser][id] == "msgParserId834" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: <%{fld1}> <%{severity}> <%{fld2}> Authentication failure, bad community string" }
			id => "msgParserId834"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId835
	# line in RSA: <fld1> <hostname> <<<fld2> <hostip>> <agent>[<process_id>]: <filename>: No such file or directory
	else if [logstash][msgparser][id] == "msgParserId835" {
		dissect {
			mapping => { "message" => "%{fld1} %{hostname} <%{fld2} %{hostip}> %{agent}[%{process_id}]: %{filename}: No such file or directory" }
			id => "msgParserId835"
			add_field => {
				"event_description" => " No such file or directory"
				"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId836
	# line in RSA:  <hostname> <agent>[<process_id>]: <<<fld1>> <<<fld20>> <<<severity>> <<<fld2> <hostip>>  Resource <fld3> {has exceeded|dropped below}  <fld4>  threshold (actual:<fld5>).
	else if [logstash][msgparser][id] == "msgParserId836" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<fld1>[^>]*)>[\s]+<(?<fld20>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+<(?<fld2>[^\s]*)[\s]+(?<hostip>[^>]*)>[\s]+Resource[\s]+(?<fld3>[^\s]*)[\s]+(has[\s]+exceeded|dropped[\s]+below)[\s]+(?<fld4>[^\s]*)[\s]+threshold[\s]+\(actual:(?<fld5>[^\)]*)\)\.$" }
			id => "msgParserId836"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_arubanetworksmsg.json"
#			template_name => "arubanetworks_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
