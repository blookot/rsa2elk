# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "trendmicroimss"
			"[observer][name]" => "Trend Micro IMSS"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %TMIMSS-4: <hdatetime>^^<hfld1>^^<hfld2>^^<messageid>^^<!payload:hdatetime>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%TMIMSS\-4:[\s]+(?<message>(?<hdatetime>[^\^]*)\^\^(?<hfld1>[^\^]*)\^\^(?<hfld2>[^\^]*)\^\^(?<messageid>[^\^]*)\^\^(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %TMIMSS-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%TMIMSS-%{messageid}: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %TMIMSS MessageID:<messageid>^^<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%TMIMSS MessageID:%{messageid}^^%{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <month> <day> <time> <shost> <hfld1>/<messageid>[<hfld2>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<shost>[^\s]*)[\s]+(?<hfld1>[^/]*)/(?<message>(?<messageid>[^\[]*)\[(?<hfld2>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <month> <day> <time> <shost> <event_type>.<messageid>[<hfld2>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<shost>[^\s]*)[\s]+(?<event_type>[^\.]*)\.(?<message>(?<messageid>[^\[]*)\[(?<hfld2>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <month> <day> <time> <shost> <messageid>[<hfld1>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<shost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-trendmicroimssmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Active_Update_status" {
		# MESSAGE Active_Update_status:01
		# line in RSA: Server: <hostname>^^Time: <fld4> <fld5>^^Component: ScanEngine^^Version attempted to download: <component_version>^^Outcome: <disposition>^^Errors: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server: %{hostname}^^Time: %{fld4} %{fld5}^^Component: ScanEngine^^Version attempted to download: %{component_version}^^Outcome: %{disposition}^^Errors: %{result}" }
				id => "message-Active_Update_status:01"
				add_field => {
				"agent" => "ScanEngine"
					"[event][id]" => "Active_Update_status:01"
					"[rsa][message][id1]" => "Active_Update_status:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Active_Update_status:02
		# line in RSA: Server: <hostname>^^Time: <fld4> <fld5>^^Component: VirusPattern^^Version attempted to download: <content_version>^^Outcome: <disposition>^^Errors: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server: %{hostname}^^Time: %{fld4} %{fld5}^^Component: VirusPattern^^Version attempted to download: %{content_version}^^Outcome: %{disposition}^^Errors: %{result}" }
				id => "message-Active_Update_status:02"
				add_field => {
				"agent" => "VirusPattern"
					"[event][id]" => "Active_Update_status:02"
					"[rsa][message][id1]" => "Active_Update_status:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId2"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^0^^<from>^^<to>^^Message<<<fld12>> accepted from [<saddr>] to [<<<fld13>>;].^^<fld14>^^ 
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^0^^%{from}^^%{to}^^Message<%{fld12}> accepted from [%{saddr}] to [<%{fld13}>;].^^%{fld14}^^" }
			id => "msgParserId3"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^256^^<from>^^<to>^^Message<<<fld12>> relayed through host[<daddr>] to [<fld13>] successfully.^^<fld14>^^ 
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^256^^%{from}^^%{to}^^Message<%{fld12}> relayed through host[%{daddr}] to [%{fld13}] successfully.^^%{fld14}^^" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^257^^<from>^^<to>^^<message_body>^^<fld10>^^<fld11> 
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^257^^%{from}^^%{to}^^%{message_body}^^%{fld10}^^%{fld11}" }
			id => "msgParserId5"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^259^^<fld9>^^<to>^^<message_body>^^<fld10>^^ 
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^259^^%{fld9}^^%{to}^^%{message_body}^^%{fld10}^^" }
			id => "msgParserId6"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^513^^<from>^^<to>^^<message_body>^^<fld10>^^<fld11> 
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^513^^%{from}^^%{to}^^%{message_body}^^%{fld10}^^%{fld11}" }
			id => "msgParserId7"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^515^^<from>^^<to>^^<message_body>^^<fld10>^^ 
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^515^^%{from}^^%{to}^^%{message_body}^^%{fld10}^^" }
			id => "msgParserId8"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<fld8>^^768^^<from>^^<to>^^Message<<<fld12>> relayed to MTA queue successfully.^^<fld13>^^ 
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{fld8}^^768^^%{from}^^%{to}^^Message<%{fld12}> relayed to MTA queue successfully.^^%{fld13}^^" }
			id => "msgParserId9"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "4" {
		# MESSAGE 4:Mail_Event
		# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<from>^^<to>^^<subject>^^<fld14>^^^^<fld15>^^^^<fld16>^^<fld17>^^<fld18>^^<fld19>^^0^^^^^^^^^^0^^0^^0^^0^^<<<fld12>>^^0^^0^^^^^^  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{from}^^%{to}^^%{subject}^^%{fld14}^^^^%{fld15}^^^^%{fld16}^^%{fld17}^^%{fld18}^^%{fld19}^^0^^^^^^^^^^0^^0^^0^^0^^<%{fld12}>^^0^^0^^^^^^" }
				id => "message-4:Mail_Event"
				add_field => {
					"[event][id]" => "4:Mail_Event"
					"[rsa][message][id1]" => "4:Mail_Event"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE 4:Mail_Event_Violation
		# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<from>^^<to>^^<subject>^^<fld14>^^<rulename>^^<fld15>^^^^<fld16>^^<fld17>^^<fld18>^^0^^0^^<filename>^^^^<virusname>^^<fld19>^^<fld20>^^<fld21>^^0^^0^^<<<fld12>>^^0^^0^^^^^^ 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{from}^^%{to}^^%{subject}^^%{fld14}^^%{rulename}^^%{fld15}^^^^%{fld16}^^%{fld17}^^%{fld18}^^0^^0^^%{filename}^^^^%{virusname}^^%{fld19}^^%{fld20}^^%{fld21}^^0^^0^^<%{fld12}>^^0^^0^^^^^^" }
				id => "message-4:Mail_Event_Violation"
				add_field => {
				"severity" => "High"
					"[event][id]" => "4:Mail_Event_Violation"
					"[rsa][message][id1]" => "4:Mail_Event_Violation"
					"[event][categoryid]" => "1207040100"
					"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE 4:Spam
		# line in RSA: <fld4> <fld5> <timezone>^^<fld7>^^<from>^^<to>^^<subject>^^<fld14>^^<rulename>^^<fld15>^^^^<fld16>^^<fld17>^^<fld18>^^<fld22>^^<fld23>^^<filename>^^^^<virusname>^^<fld19>^^<fld20>^^<fld21>^^0^^0^^<<<fld12>>^^0^^0^^^^^^ 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{timezone}^^%{fld7}^^%{from}^^%{to}^^%{subject}^^%{fld14}^^%{rulename}^^%{fld15}^^^^%{fld16}^^%{fld17}^^%{fld18}^^%{fld22}^^%{fld23}^^%{filename}^^^^%{virusname}^^%{fld19}^^%{fld20}^^%{fld21}^^0^^0^^<%{fld12}>^^0^^0^^^^^^" }
				id => "message-4:Spam"
				add_field => {
				"severity" => "High"
					"[event][id]" => "4:Spam"
					"[rsa][message][id1]" => "4:Spam"
					"[event][categoryid]" => "1207040100"
					"[logstash][fullDateTimeString]" => "%{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "smtpd" {
		# MESSAGE smtpd:01
		# line in RSA: <agent>[<process_id>]: NOQUEUE: <action>: RCPT from unknown[<saddr>]: <fld1> <fld2> <<<fld3>>: <event_description>; from=<<<from>> to=<<<to>> proto=<protocol> helo=<<<fld4>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: NOQUEUE: %{action}: RCPT from unknown[%{saddr}]: %{fld1} %{fld2} <%{fld3}>: %{event_description}; from=<%{from}> to=<%{to}> proto=%{protocol} helo=<%{fld4}>" }
				id => "message-smtpd:01"
				add_field => {
					"[event][id]" => "smtpd:01"
					"[rsa][message][id1]" => "smtpd:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:02
		# line in RSA: <agent>[<process_id>]: <action> from unknown[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action} from unknown[%{saddr}]" }
				id => "message-smtpd:02"
				add_field => {
					"[event][id]" => "smtpd:02"
					"[rsa][message][id1]" => "smtpd:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:03
		# line in RSA: <agent>[<process_id>]: { NOQUEUE | <sessionid> }: client=unknown[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*NOQUEUE[\s]+|[\s]*(?<sessionid>[^\s]*)[\s]+):[\s]+client=unknown\[(?<saddr>[^\]]*)\]$" }
				id => "message-smtpd:03"
				add_field => {
				"event_description" => "client=unknown"
					"[event][id]" => "smtpd:03"
					"[rsa][message][id1]" => "smtpd:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:04
		# line in RSA: <agent>[<process_id>]: <event_description>: END-OF-MESSAGE: <fld1>: queued as <sessionid> from=<<<from>> to=<<<to>> proto=<protocol> helo=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: END-OF-MESSAGE: %{fld1}: queued as %{sessionid} from=<%{from}> to=<%{to}> proto=%{protocol} helo=%{fld2}" }
				id => "message-smtpd:04"
				add_field => {
					"[event][id]" => "smtpd:04"
					"[rsa][message][id1]" => "smtpd:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:05
		# line in RSA: <agent>[<process_id>]: <severity>: proxy inet:<daddr>:<dport> <action> "RCPT { To | TO }{: <<<to>> | :<<<to>> }{NOTIFY=FAILURE": | ": } "<fld1> Service { temporarily unavailable | unavailable}; Client Host [<saddr>] blocked using Trend Micro RBL+. Please see <url> "
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+proxy[\s]+inet:(?<daddr>[^:]*):(?<dport>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+\"RCPT[\s]+([\s]*To[\s]+|[\s]*TO[\s]+)(:[\s]+<(?<to>[^>]*)>[\s]+|[\s]*:<(?<to>[^>]*)>[\s]+)(NOTIFY=FAILURE\":[\s]+|[\s]*\":[\s]+)[\s]+\"(?<fld1>[^\s]*)[\s]+Service[\s]+([\s]*temporarily[\s]+unavailable[\s]+|[\s]*unavailable);[\s]+Client[\s]+Host[\s]+\[(?<saddr>[^\]]*)\][\s]+blocked[\s]+using[\s]+Trend[\s]+Micro[\s]+RBL\+\.[\s]+Please[\s]+see[\s]+(?<url>[^\s]*)[\s]+\"$" }
				id => "message-smtpd:05"
				add_field => {
				"event_description" => "blocked using Trend Micro RBL+"
					"[event][id]" => "smtpd:05"
					"[rsa][message][id1]" => "smtpd:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:06
		# line in RSA: <agent>[<process_id>]: <severity>: proxy inet:<daddr>:<dport> <action> "RCPT { To | TO }{: <<<to>> | :<<<to>> } ORCPT=<fld2>": "<fld1> Service { temporarily unavailable | unavailable}; Client Host [<saddr>] blocked using Trend Micro RBL+. Please see <url> "
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+proxy[\s]+inet:(?<daddr>[^:]*):(?<dport>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+\"RCPT[\s]+([\s]*To[\s]+|[\s]*TO[\s]+)(:[\s]+<(?<to>[^>]*)>[\s]+|[\s]*:<(?<to>[^>]*)>[\s]+)[\s]+ORCPT=(?<fld2>[^\"]*)\":[\s]+\"(?<fld1>[^\s]*)[\s]+Service[\s]+([\s]*temporarily[\s]+unavailable[\s]+|[\s]*unavailable);[\s]+Client[\s]+Host[\s]+\[(?<saddr>[^\]]*)\][\s]+blocked[\s]+using[\s]+Trend[\s]+Micro[\s]+RBL\+\.[\s]+Please[\s]+see[\s]+(?<url>[^\s]*)[\s]+\"$" }
				id => "message-smtpd:06"
				add_field => {
				"event_description" => "blocked using Trend Micro RBL+"
					"[event][id]" => "smtpd:06"
					"[rsa][message][id1]" => "smtpd:06"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:07
		# line in RSA: <agent>[<process_id>]: <severity>: proxy inet:<daddr>:<dport> <action> "RCPT { To | TO }{: <<<to>> | :<<<to>> } ORCPT=<fld1>": "<fld2> Service { temporarily unavailable | unavailable}; Client Host [<saddr>] blocked using Trend Micro Email Reputation Service. Please see <url> "
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+proxy[\s]+inet:(?<daddr>[^:]*):(?<dport>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+\"RCPT[\s]+([\s]*To[\s]+|[\s]*TO[\s]+)(:[\s]+<(?<to>[^>]*)>[\s]+|[\s]*:<(?<to>[^>]*)>[\s]+)[\s]+ORCPT=(?<fld1>[^\"]*)\":[\s]+\"(?<fld2>[^\s]*)[\s]+Service[\s]+([\s]*temporarily[\s]+unavailable[\s]+|[\s]*unavailable);[\s]+Client[\s]+Host[\s]+\[(?<saddr>[^\]]*)\][\s]+blocked[\s]+using[\s]+Trend[\s]+Micro[\s]+Email[\s]+Reputation[\s]+Service\.[\s]+Please[\s]+see[\s]+(?<url>[^\s]*)[\s]+\"$" }
				id => "message-smtpd:07"
				add_field => {
				"event_description" => "blocked using Trend Micro Email Reputation Service"
					"[event][id]" => "smtpd:07"
					"[rsa][message][id1]" => "smtpd:07"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:08
		# line in RSA: <agent>[<process_id>]: <severity>: proxy inet:<daddr>:<dport> <action> "RCPT { To | TO }{: <<<to>> | :<<<to>> }{NOTIFY=FAILURE": | ": } "<fld1> Service { temporarily unavailable | unavailable}; Client Host [<saddr>] blocked using Trend Micro Email Reputation Service. Please see <url> "
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+proxy[\s]+inet:(?<daddr>[^:]*):(?<dport>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+\"RCPT[\s]+([\s]*To[\s]+|[\s]*TO[\s]+)(:[\s]+<(?<to>[^>]*)>[\s]+|[\s]*:<(?<to>[^>]*)>[\s]+)(NOTIFY=FAILURE\":[\s]+|[\s]*\":[\s]+)[\s]+\"(?<fld1>[^\s]*)[\s]+Service[\s]+([\s]*temporarily[\s]+unavailable[\s]+|[\s]*unavailable);[\s]+Client[\s]+Host[\s]+\[(?<saddr>[^\]]*)\][\s]+blocked[\s]+using[\s]+Trend[\s]+Micro[\s]+Email[\s]+Reputation[\s]+Service\.[\s]+Please[\s]+see[\s]+(?<url>[^\s]*)[\s]+\"$" }
				id => "message-smtpd:08"
				add_field => {
				"event_description" => "blocked using Trend Micro Email Reputation Service"
					"[event][id]" => "smtpd:08"
					"[rsa][message][id1]" => "smtpd:08"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:09
		# line in RSA: <agent>[<process_id>]: <severity>: proxy inet:<daddr>:<dport> <action> "RCPT { To | TO }{: <<<to>> | :<<<to>> } ORCPT=<fld2>": "<fld1> Transaction failed"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+proxy[\s]+inet:(?<daddr>[^:]*):(?<dport>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+\"RCPT[\s]+([\s]*To[\s]+|[\s]*TO[\s]+)(:[\s]+<(?<to>[^>]*)>[\s]+|[\s]*:<(?<to>[^>]*)>[\s]+)[\s]+ORCPT=(?<fld2>[^\"]*)\":[\s]+\"(?<fld1>[^\s]*)[\s]+Transaction[\s]+failed\"$" }
				id => "message-smtpd:09"
				add_field => {
				"event_description" => "Transaction failed"
					"[event][id]" => "smtpd:09"
					"[rsa][message][id1]" => "smtpd:09"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:10
		# line in RSA: <agent>[<process_id>]: certificate verification failed for <domain>[<saddr>]: untrusted issuer <fld1>/CN=<cert_issuer>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: certificate verification failed for %{domain}[%{saddr}]: untrusted issuer %{fld1}/CN=%{cert_issuer}" }
				id => "message-smtpd:10"
				add_field => {
				"event_description" => "certificate verification failed"
					"[event][id]" => "smtpd:10"
					"[rsa][message][id1]" => "smtpd:10"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:11
		# line in RSA: <agent>[<process_id>]: certificate verification failed for <domain>[<saddr>]: self-signed certificate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: certificate verification failed for %{domain}[%{saddr}]: self-signed certificate" }
				id => "message-smtpd:11"
				add_field => {
				"event_description" => "certificate verification failed"
					"[event][id]" => "smtpd:11"
					"[rsa][message][id1]" => "smtpd:11"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtpd:12
		# line in RSA: <agent>[<process_id>]: { client certificate | certificate } verification failed for <domain>[<saddr>]: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*client[\s]+certificate[\s]+|[\s]*certificate[\s]+)[\s]+verification[\s]+failed[\s]+for[\s]+(?<domain>[^\[]*)\[(?<saddr>[^\]]*)\]:[\s]+(?<info>.*)$" }
				id => "message-smtpd:12"
				add_field => {
				"event_description" => "certificate verification failed"
					"[event][id]" => "smtpd:12"
					"[rsa][message][id1]" => "smtpd:12"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "smtp" {
		# MESSAGE smtp:01
		# line in RSA: <agent>[<process_id>]: <sessionid>: to=<<<to>>, relay=<fld1>, delay=<fld2>, delays=<fld3>, dsn=<fld4>, status=<disposition> <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: to=<%{to}>, relay=%{fld1}, delay=%{fld2}, delays=%{fld3}, dsn=%{fld4}, status=%{disposition} %{fld5}" }
				id => "message-smtp:01"
				add_field => {
					"[event][id]" => "smtp:01"
					"[rsa][message][id1]" => "smtp:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:02
		# line in RSA: <agent>[<process_id>]: <sessionid>: Used <protocol> for <domain>[<daddr>]:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: Used %{protocol} for %{domain}[%{daddr}]:%{dport}" }
				id => "message-smtp:02"
				add_field => {
					"[event][id]" => "smtp:02"
					"[rsa][message][id1]" => "smtp:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:03
		# line in RSA: <agent>[<process_id>]: { CA certificate | server certificate | certificate } verification failed for <domain>[<saddr>]:<sport>: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*CA[\s]+certificate[\s]+|[\s]*server[\s]+certificate[\s]+|[\s]*certificate[\s]+)[\s]+verification[\s]+failed[\s]+for[\s]+(?<domain>[^\[]*)\[(?<saddr>[^\]]*)\]:(?<sport>[^:]*):[\s]+(?<info>.*)$" }
				id => "message-smtp:03"
				add_field => {
				"event_description" => "certificate verification failed"
					"[event][id]" => "smtp:03"
					"[rsa][message][id1]" => "smtp:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:04
		# line in RSA: <agent>[<process_id>]: <sessionid>: enabling PIX workarounds: <action> for <domain>[<daddr>]:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: enabling PIX workarounds: %{action} for %{domain}[%{daddr}]:%{dport}" }
				id => "message-smtp:04"
				add_field => {
				"event_description" => "enabling PIX workarounds"
					"[event][id]" => "smtp:04"
					"[rsa][message][id1]" => "smtp:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:05
		# line in RSA: <agent>[<process_id>]: connect to <domain>[<daddr>]:<dport>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect to %{domain}[%{daddr}]:%{dport}: %{event_description}" }
				id => "message-smtp:05"
				add_field => {
					"[event][id]" => "smtp:05"
					"[rsa][message][id1]" => "smtp:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:06
		# line in RSA: <agent>[<process_id>]: <sessionid> host <domain>[<saddr>] said: <resultcode> <info>. <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid} host %{domain}[%{saddr}] said: %{resultcode} %{info}. %{fld2}" }
				id => "message-smtp:06"
				add_field => {
					"[event][id]" => "smtp:06"
					"[rsa][message][id1]" => "smtp:06"
					"[event][categoryid]" => "1207040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:07
		# line in RSA: <agent>[<process_id>]: <sessionid>: lost connection with <domain>[<daddr>] <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: lost connection with %{domain}[%{daddr}] %{fld1}" }
				id => "message-smtp:07"
				add_field => {
				"event_description" => "lost connection"
					"[event][id]" => "smtp:07"
					"[rsa][message][id1]" => "smtp:07"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:08
		# line in RSA: <agent>[<process_id>]: SSL_connect error to <domain>[<daddr>]:<dport>: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSL_connect error to %{domain}[%{daddr}]:%{dport}: %{resultcode}" }
				id => "message-smtp:08"
				add_field => {
				"event_description" => "SSL_connect error"
					"[event][id]" => "smtp:08"
					"[rsa][message][id1]" => "smtp:08"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:09
		# line in RSA: <agent>[<process_id>]: <sessionid>: conversation with <domain>[<daddr>] timed out while receiving the initial server greeting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: conversation with %{domain}[%{daddr}] timed out while receiving the initial server greeting" }
				id => "message-smtp:09"
				add_field => {
					"[event][id]" => "smtp:09"
					"[rsa][message][id1]" => "smtp:09"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp:10
		# line in RSA: <agent>[<process_id>]: <sessionid>: Unused TLS for <domain>[<daddr>]:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: Unused TLS for %{domain}[%{daddr}]:%{dport}" }
				id => "message-smtp:10"
				add_field => {
				"event_description" => "Unused TLS"
					"[event][id]" => "smtp:10"
					"[rsa][message][id1]" => "smtp:10"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE smtp
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-smtp"
				add_field => {
					"[event][id]" => "smtp"
					"[rsa][message][id1]" => "smtp"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "qmgr" {
		# MESSAGE qmgr:01
		# line in RSA: <agent>[<process_id>]: <sessionid>: from=<<<from>>, size=<filename_size>, <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: from=<%{from}>, size=%{filename_size}, %{fld1}" }
				id => "message-qmgr:01"
				add_field => {
					"[event][id]" => "qmgr:01"
					"[rsa][message][id1]" => "qmgr:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE qmgr
		# line in RSA: <agent>[<process_id>]: <sessionid>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: %{fld1}" }
				id => "message-qmgr"
				add_field => {
					"[event][id]" => "qmgr"
					"[rsa][message][id1]" => "qmgr"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cleanup" {
		# MESSAGE cleanup:01
		# line in RSA: <agent>[<process_id>]: <sessionid>: <severity>: header <fld1>: { Used | Unused } from <domain>[<saddr>]; from=<<<from>> to=<<<to>> proto=<protocol> helo=<fld2>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<sessionid>[^:]*):[\s]+(?<severity>[^:]*):[\s]+header[\s]+(?<fld1>[^:]*):[\s]+([\s]*Used[\s]+|[\s]*Unused[\s]+)[\s]+from[\s]+(?<domain>[^\[]*)\[(?<saddr>[^\]]*)\];[\s]+from=<(?<from>[^>]*)>[\s]+to=<(?<to>[^>]*)>[\s]+proto=(?<protocol>[^\s]*)[\s]+helo=(?<fld2>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-cleanup:01"
				add_field => {
					"[event][id]" => "cleanup:01"
					"[rsa][message][id1]" => "cleanup:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cleanup:02
		# line in RSA: <agent>[<process_id>]: <sessionid>: <severity>: header <fld1>: <daddr>:<dport> from <domain>[<saddr>]; from=<<<from>> to=<<<to>> proto=<protocol> helo=<fld2>: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: %{severity}: header %{fld1}: %{daddr}:%{dport} from %{domain}[%{saddr}]; from=<%{from}> to=<%{to}> proto=%{protocol} helo=%{fld2}: %{fld3}" }
				id => "message-cleanup:02"
				add_field => {
					"[event][id]" => "cleanup:02"
					"[rsa][message][id1]" => "cleanup:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cleanup
		# line in RSA: <agent>[<process_id>]: <sessionid>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: %{fld1}" }
				id => "message-cleanup"
				add_field => {
					"[event][id]" => "cleanup"
					"[rsa][message][id1]" => "cleanup"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "imss" {
		# MESSAGE imss:20
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> Delivery Status <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} Delivery Status %{saddr} #null# %{fld1}" }
				id => "message-imss:20"
				add_field => {
					"[event][id]" => "imss:20"
					"[rsa][message][id1]" => "imss:20"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:19
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> {Returned mail|DELIVERY FAILURE}: <info> #null# <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+QuarantineTransac[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+#null#[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+(?<from>[^\s]*)[\s]+(Returned[\s]+mail|DELIVERY[\s]+FAILURE):[\s]+(?<info>[^\s]*)[\s]+#null#[\s]+(?<fld1>.*)$" }
				id => "message-imss:19"
				add_field => {
					"[event][id]" => "imss:19"
					"[rsa][message][id1]" => "imss:19"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:18
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> Undeliverable:<fld11> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} Undeliverable:%{fld11} #null# %{fld1}" }
				id => "message-imss:18"
				add_field => {
				"subject" => "Undeliverable"
					"[event][id]" => "imss:18"
					"[rsa][message][id1]" => "imss:18"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:17
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> Delivery Notification: Delivery has failed <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} Delivery Notification: Delivery has failed %{saddr} #null# %{fld1}" }
				id => "message-imss:17"
				add_field => {
				"subject" => "Delivery Notification: Delivery has failed"
					"[event][id]" => "imss:17"
					"[rsa][message][id1]" => "imss:17"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:16
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> Undelivered Mail Returned to Sender <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} Undelivered Mail Returned to Sender %{saddr} #null# %{fld1}" }
				id => "message-imss:16"
				add_field => {
				"subject" => "Undelivered Mail Returned to Sender"
					"[event][id]" => "imss:16"
					"[rsa][message][id1]" => "imss:16"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:15
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> {Mail Delivery|Delivery} Failure <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+QuarantineTransac[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+#null#[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+(?<from>[^\s]*)[\s]+(Mail[\s]+Delivery|Delivery)[\s]+Failure[\s]+(?<saddr>[^\s]*)[\s]+#null#[\s]+(?<fld1>.*)$" }
				id => "message-imss:15"
				add_field => {
					"[event][id]" => "imss:15"
					"[rsa][message][id1]" => "imss:15"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:14
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> Mail delivery failed: returning message to sender <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} Mail delivery failed: returning message to sender %{saddr} #null# %{fld1}" }
				id => "message-imss:14"
				add_field => {
				"subject" => "Mail delivery failed: returning message to sender"
					"[event][id]" => "imss:14"
					"[rsa][message][id1]" => "imss:14"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:13
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> <to> FW: [<subject>] <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} %{to} FW: [%{subject}] %{saddr} #null# %{fld1}" }
				id => "message-imss:13"
				add_field => {
					"[event][id]" => "imss:13"
					"[rsa][message][id1]" => "imss:13"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:12
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld11> <from> <to> <fld9> {Re:|RE:}<info> #null# <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+QuarantineTransac[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+#null#[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+(?<from>[^\s]*)[\s]+(?<to>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+(Re:|RE:)(?<info>[^\s]*)[\s]+#null#[\s]+(?<fld1>.*)$" }
				id => "message-imss:12"
				add_field => {
					"[event][id]" => "imss:12"
					"[rsa][message][id1]" => "imss:12"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:11
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> Undeliverable Message <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} Undeliverable Message %{saddr} #null# %{fld1}" }
				id => "message-imss:11"
				add_field => {
				"subject" => "Undeliverable Message"
					"[event][id]" => "imss:11"
					"[rsa][message][id1]" => "imss:11"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:10
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> {failure notice|Failure Notice} <saddr> #null# <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+QuarantineTransac[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+#null#[\s]+(?<fld6>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+(?<from>[^\s]*)[\s]+(failure[\s]+notice|Failure[\s]+Notice)[\s]+(?<saddr>[^\s]*)[\s]+#null#[\s]+(?<fld1>.*)$" }
				id => "message-imss:10"
				add_field => {
				"subject" => "failure notice"
					"[event][id]" => "imss:10"
					"[rsa][message][id1]" => "imss:10"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:02
		# line in RSA: <agent>[<process_id>]: QuarantineTransac <fld2> <fld3> <fld4> <fld5> <fld10> #null# <fld6> <fld7> <fld8> <fld9> <from> <to> <info> #null# <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: QuarantineTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld10} #null# %{fld6} %{fld7} %{fld8} %{fld9} %{from} %{to} %{info} #null# %{fld1}" }
				id => "message-imss:02"
				add_field => {
					"[event][id]" => "imss:02"
					"[rsa][message][id1]" => "imss:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:09
		# line in RSA: <agent>[<process_id>]: Transac_Redelivery #null# #null# <fld2> <fld3> <fld4> <fld5> <fld6> #null# #null# <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Transac_Redelivery #null# #null# %{fld2} %{fld3} %{fld4} %{fld5} %{fld6} #null# #null# %{fld7}" }
				id => "message-imss:09"
				add_field => {
					"[event][id]" => "imss:09"
					"[rsa][message][id1]" => "imss:09"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:08
		# line in RSA: <agent>[<process_id>]: DeleteTransac <fld2> <fld3> <fld4> <fld5> <fld6> <fld7> <fld8> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: DeleteTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld6} %{fld7} %{fld8} %{fld9}" }
				id => "message-imss:08"
				add_field => {
					"[event][id]" => "imss:08"
					"[rsa][message][id1]" => "imss:08"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:07
		# line in RSA: <agent>[<process_id>]: BouncedBackTransac <fld2> <fld3> <fld4> <fld5> <fld6> <fld7> <fld8> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: BouncedBackTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld6} %{fld7} %{fld8} %{fld9}" }
				id => "message-imss:07"
				add_field => {
					"[event][id]" => "imss:07"
					"[rsa][message][id1]" => "imss:07"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:06
		# line in RSA: <agent>[<process_id>]: HandoffTransac <fld2> <fld3> <fld4> <fld5> <fld6> <fld7> <fld8> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: HandoffTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld6} %{fld7} %{fld8} %{fld9}" }
				id => "message-imss:06"
				add_field => {
					"[event][id]" => "imss:06"
					"[rsa][message][id1]" => "imss:06"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:05
		# line in RSA: <agent>[<process_id>]: NormalTransac <fld2> <fld3> <fld4> <fld5> <fld6> <fld7> <fld8> <fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: NormalTransac %{fld2} %{fld3} %{fld4} %{fld5} %{fld6} %{fld7} %{fld8} %{fld10}" }
				id => "message-imss:05"
				add_field => {
					"[event][id]" => "imss:05"
					"[rsa][message][id1]" => "imss:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE imss:04
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] Daemon Service: SMTP client connection closed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] Daemon Service: SMTP client connection closed." }
				id => "message-imss:04"
				add_field => {
				"event_description" => "Daemon Service: SMTP client connection closed."
					"[event][id]" => "imss:04"
					"[rsa][message][id1]" => "imss:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE imss:03
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] <severity>: Quarantine to this folder: <directory> for msg: <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] %{severity}: Quarantine to this folder: %{directory} for msg: %{fld5}" }
				id => "message-imss:03"
				add_field => {
					"[event][id]" => "imss:03"
					"[rsa][message][id1]" => "imss:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE imss:01
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3><fld5>[<fld4>] <severity>: Accept connection from client [<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3}%{fld5}[%{fld4}] %{severity}: Accept connection from client [%{saddr}]." }
				id => "message-imss:01"
				add_field => {
				"event_description" => "Accept connection from client"
					"[event][id]" => "imss:01"
					"[rsa][message][id1]" => "imss:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE imss
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-imss"
				add_field => {
					"[event][id]" => "imss"
					"[rsa][message][id1]" => "imss"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: <agent>[<process_id>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
			id => "msgParserId35"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: <agent>[<process_id>]: <sessionid>: to=<<<to>>, <fld1>, status=<disposition> (delivery temporarily suspended: lost connection with <domain>[<daddr>] while receiving the initial server greeting) 
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid}: to=<%{to}>, %{fld1}, status=%{disposition} (delivery temporarily suspended: lost connection with %{domain}[%{daddr}] while receiving the initial server greeting)" }
			id => "msgParserId60"
			add_field => {
				"event_description" => "delivery temporarily suspended"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: <agent>[<process_id>]: <fld1> 
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
			id => "msgParserId61"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tlsagent" {
		# MESSAGE tlsagent:01
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]Connected from [<saddr>], sender is [<from>], matched policy name is [<policyname>], <disposition> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]Connected from [%{saddr}], sender is [%{from}], matched policy name is [%{policyname}], %{disposition}" }
				id => "message-tlsagent:01"
				add_field => {
					"[event][id]" => "tlsagent:01"
					"[rsa][message][id1]" => "tlsagent:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE tlsagent:02
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]get data success from socket:\nrequest=<info>\nprotocol_state=<fld6>\nprotocol_name=<protocol>\nclient_address=<daddr>\nclient_name=<dhost>\nreverse_client_name=<fld8>\nhelo_name=<fld13>\nsender=<from>\nrecipient=<to>\nrecipient_count=<dclass_counter1>\nqueue_id=<fld17>\ninstance=<instance>\nsize=<fld12>\netrn_domain=<fld18>\nstress=<fld9>\nsasl_method=<authmethod>\nsasl_username=<username>\nsasl_sender=<fld16>\nccert_subject=<cert_subject>\nccert_issuer=<fld20>\nccert_fingerprint=<fld10>\nencryption_protocol=<fld19>\nencryption_cipher=<s_cipher>\nencryption_keysize=<s_ciphersize>\n\n
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]get data success from socket:\nrequest=%{info}\nprotocol_state=%{fld6}\nprotocol_name=%{protocol}\nclient_address=%{daddr}\nclient_name=%{dhost}\nreverse_client_name=%{fld8}\nhelo_name=%{fld13}\nsender=%{from}\nrecipient=%{to}\nrecipient_count=%{dclass_counter1}\nqueue_id=%{fld17}\ninstance=%{instance}\nsize=%{fld12}\netrn_domain=%{fld18}\nstress=%{fld9}\nsasl_method=%{authmethod}\nsasl_username=%{username}\nsasl_sender=%{fld16}\nccert_subject=%{cert_subject}\nccert_issuer=%{fld20}\nccert_fingerprint=%{fld10}\nencryption_protocol=%{fld19}\nencryption_cipher=%{s_cipher}\nencryption_keysize=%{s_ciphersize}\n\n" }
				id => "message-tlsagent:02"
				add_field => {
					"[event][id]" => "tlsagent:02"
					"[rsa][message][id1]" => "tlsagent:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:03
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]Policy for connection from [<saddr>] is level[<fld5>], cipher[<fld6>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]Policy for connection from [%{saddr}] is level[%{fld5}], cipher[%{fld6}]" }
				id => "message-tlsagent:03"
				add_field => {
					"[event][id]" => "tlsagent:03"
					"[rsa][message][id1]" => "tlsagent:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:04
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]received traffic log of SMTP Traffic Throttling:[<fld5>,<saddr>,<fld8>,<fld6>,<fld7>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]received traffic log of SMTP Traffic Throttling:[%{fld5},%{saddr},%{fld8},%{fld6},%{fld7}]" }
				id => "message-tlsagent:04"
				add_field => {
				"event_description" => "received traffic log of SMTP Traffic Throttling"
					"[event][id]" => "tlsagent:04"
					"[rsa][message][id1]" => "tlsagent:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:05
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>][<fld5>] <event_description>:<fld6>: <fld9>;<fld10>;<fld7>;<fld8>;<saddr>;<from>\n 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}][%{fld5}] %{event_description}:%{fld6}: %{fld9};%{fld10};%{fld7};%{fld8};%{saddr};%{from}\n" }
				id => "message-tlsagent:05"
				add_field => {
					"[event][id]" => "tlsagent:05"
					"[rsa][message][id1]" => "tlsagent:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:06
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]try to match <fld5> sender for SMTP Traffic Throttling:<from>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]try to match %{fld5} sender for SMTP Traffic Throttling:%{from}" }
				id => "message-tlsagent:06"
				add_field => {
					"[event][id]" => "tlsagent:06"
					"[rsa][message][id1]" => "tlsagent:06"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:07
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]try to match <fld5> IP for SMTP Traffic Throttling:{<saddr>/<sport>|<saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+\[(?<fld4>[^\]]*)\][\s]+\[(?<severity>[^\]]*)\]try[\s]+to[\s]+match[\s]+(?<fld5>[^\s]*)[\s]+IP[\s]+for[\s]+SMTP[\s]+Traffic[\s]+Throttling:((?<saddr>[^/]*)/(?<sport>.*)|(?<saddr>.*))$" }
				id => "message-tlsagent:07"
				add_field => {
					"[event][id]" => "tlsagent:07"
					"[rsa][message][id1]" => "tlsagent:07"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:08
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]<info> by {IP [<hostip>]|"<hostip>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+\[(?<fld4>[^\]]*)\][\s]+\[(?<severity>[^\]]*)\](?<info>[^\s]*)[\s]+by[\s]+(IP[\s]+\[(?<hostip>[^\]]*)\]|\"(?<hostip>[^\"]*)\")$" }
				id => "message-tlsagent:08"
				add_field => {
					"[event][id]" => "tlsagent:08"
					"[rsa][message][id1]" => "tlsagent:08"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:09
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]after parse sender is [<from>], sender_domain is [<sdomain>], address is [<saddr>], domain is [<domain>], ccert_subject is [<cert_subject>], encryption_cipher is [<s_cipher>], encryption_keysize is [<s_ciphersize>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]after parse sender is [%{from}], sender_domain is [%{sdomain}], address is [%{saddr}], domain is [%{domain}], ccert_subject is [%{cert_subject}], encryption_cipher is [%{s_cipher}], encryption_keysize is [%{s_ciphersize}]" }
				id => "message-tlsagent:09"
				add_field => {
					"[event][id]" => "tlsagent:09"
					"[rsa][message][id1]" => "tlsagent:09"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:10
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]sender [<from>] from [<saddr>]<fld6>,<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]sender [%{from}] from [%{saddr}]%{fld6},%{action}" }
				id => "message-tlsagent:10"
				add_field => {
					"[event][id]" => "tlsagent:10"
					"[rsa][message][id1]" => "tlsagent:10"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:11
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]{current ip|ip}[<saddr>] <fld6>,<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+\[(?<fld4>[^\]]*)\][\s]+\[(?<severity>[^\]]*)\](current[\s]+ip|ip)\[(?<saddr>[^\]]*)\][\s]+(?<fld6>[^,]*),(?<action>.*)$" }
				id => "message-tlsagent:11"
				add_field => {
					"[event][id]" => "tlsagent:11"
					"[rsa][message][id1]" => "tlsagent:11"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:12
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]accept client successfully in process <process_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]accept client successfully in process %{process_id}" }
				id => "message-tlsagent:12"
				add_field => {
				"event_description" => "accept client successfully"
					"[event][id]" => "tlsagent:12"
					"[rsa][message][id1]" => "tlsagent:12"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:13
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]smtp connection protocol state is:<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]smtp connection protocol state is:%{fld5}" }
				id => "message-tlsagent:13"
				add_field => {
				"a" => "smtp connection protocol state is:"
				"event_description" => "%{a}%{fld5}"
					"[event][id]" => "tlsagent:13"
					"[rsa][message][id1]" => "tlsagent:13"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE tlsagent:14
		# line in RSA: <agent>[<process_id>]: <fld1> <fld2> <fld3> [<fld4>] [<severity>]<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} %{fld2} %{fld3} [%{fld4}] [%{severity}]%{info}" }
				id => "message-tlsagent:14"
				add_field => {
					"[event][id]" => "tlsagent:14"
					"[rsa][message][id1]" => "tlsagent:14"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-trendmicroimssmsg.json"
#			template_name => "trendmicroimss_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
