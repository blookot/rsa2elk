# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "citrixag"
			"[observer][name]" => "Citrix Access Gateway"
			"[observer][type]" => "VPN"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> <hdata> VPN GW: <hfld1>:<hfld2>:<hfld3>:<hfld4>:<messageid>:<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hdata>[^\s]*)[\s]+VPN[\s]+GW:[\s]+(?<message>(?<hfld1>[^:]*):(?<hfld2>[^:]*):(?<hfld3>[^:]*):(?<hfld4>[^:]*):(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> <hdata> VPN GW: <messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hdata} VPN GW: %{messageid}:%{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> <hdata> VPN GW: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hdata>[^\s]*)[\s]+VPN[\s]+GW:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %CITRIXAG-<hlevel>: <hclient_ip> <hfld1> <husername> [<hdatetime>] "<messageid> <!payload:hclient_ip>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CITRIXAG\-(?<hlevel>[^:]*):[\s]+(?<message>(?<hclient_ip>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<husername>[^\s]*)[\s]+\[(?<hdatetime>[^\]]*)\][\s]+\"(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %CITRIXAG-<hlevel>: <hclient_ip> <hfld1> <husername>[<hdatetime>]"<hfld6>" <hfld2> <hfld3> "<hfld4>" "<hfld5>" "<messageid>" <!payload:hclient_ip>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CITRIXAG\-(?<hlevel>[^:]*):[\s]+(?<message>(?<hclient_ip>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<husername>[^\[]*)\[(?<hdatetime>[^\]]*)\]\"(?<hfld6>[^\"]*)\"[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+\"(?<hfld4>[^\"]*)\"[\s]+\"(?<hfld5>[^\"]*)\"[\s]+\"(?<messageid>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %CITRIXAG-<hlevel>: <hclient_ip> <hfld1> <husername>[<hdatetime>] "<hfld6>" <hfld2> <hfld3> "<hfld4>" "<hfld5>" <messageid> <!payload:hclient_ip>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CITRIXAG\-(?<hlevel>[^:]*):[\s]+(?<message>(?<hclient_ip>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<husername>[^\[]*)\[(?<hdatetime>[^\]]*)\][\s]+\"(?<hfld6>[^\"]*)\"[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+\"(?<hfld4>[^\"]*)\"[\s]+\"(?<hfld5>[^\"]*)\"[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_citrixagmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "vpn_sessiond" {
		# MESSAGE vpn_sessiond:start
		# line in RSA: connecting guest [<c_username>] at MAC [<dmacaddr>] with a remote desktop session with host [<username>] at MAC [<smacaddr>] with session id <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "connecting guest [%{c_username}] at MAC [%{dmacaddr}] with a remote desktop session with host [%{username}] at MAC [%{smacaddr}] with session id %{sessionid}" }
				id => "message-vpn_sessiond:start"
				add_field => {
				"event_description" => "Remote desktop session started"
				"event_source" => "vpn_sessiond"
					"[event][id]" => "vpn_sessiond:start"
					"[rsa][message][id1]" => "vpn_sessiond:start"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE vpn_sessiond:end
		# line in RSA: remote desktop session ended for host [<username>] and guest [<c_username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "remote desktop session ended for host [%{username}] and guest [%{c_username}]" }
				id => "message-vpn_sessiond:end"
				add_field => {
				"event_description" => "Remote desktop session ended"
				"event_source" => "vpn_sessiond"
					"[event][id]" => "vpn_sessiond:end"
					"[rsa][message][id1]" => "vpn_sessiond:end"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "controller" {
		# MESSAGE controller:licensing
		# line in RSA: licensing: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "licensing: %{event_description}" }
				id => "message-controller:licensing"
				add_field => {
				"event_source" => "licensing"
					"[event][id]" => "controller:licensing"
					"[rsa][message][id1]" => "controller:licensing"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:licensing:01
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::status check starting:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::status check starting:" }
				id => "message-controller:licensing:01"
				add_field => {
				"event_description" => "Status check starting"
					"[event][id]" => "controller:licensing:01"
					"[rsa][message][id1]" => "controller:licensing:01"
					"[event][categoryid]" => "1614000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:licensing:02
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::status check done: <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::status check done: %{fld11}" }
				id => "message-controller:licensing:02"
				add_field => {
				"event_description" => "Status check done"
					"[event][id]" => "controller:licensing:02"
					"[rsa][message][id1]" => "controller:licensing:02"
					"[event][categoryid]" => "1614000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:groups:01
		# line in RSA: service:<event_source>:: created user=<c_username>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "service:%{event_source}:: created user=%{c_username}." }
				id => "message-controller:groups:01"
				add_field => {
				"event_description" => "User created"
					"[event][id]" => "controller:groups:01"
					"[rsa][message][id1]" => "controller:groups:01"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:groups:02
		# line in RSA: service:<event_source>:: authentication failure for user[<username>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "service:%{event_source}:: authentication failure for user[%{username}]." }
				id => "message-controller:groups:02"
				add_field => {
				"event_description" => "Authentication failure"
					"[event][id]" => "controller:groups:02"
					"[rsa][message][id1]" => "controller:groups:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:groups:03
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<fld6>:<event_source>:<fld7>:<fld8>:<fld9>:<fld10>::failed to get portal page for group=<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{fld6}:%{event_source}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::failed to get portal page for group=%{group}" }
				id => "message-controller:groups:03"
				add_field => {
				"event_description" => "failed to get portal page"
					"[event][id]" => "controller:groups:03"
					"[rsa][message][id1]" => "controller:groups:03"
					"[event][categoryid]" => "1402010300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:policies
		# line in RSA: service:<event_source>:: failed to get all app policies.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "service:%{event_source}:: failed to get all app policies." }
				id => "message-controller:policies"
				add_field => {
				"event_description" => "Failed to get policies"
					"[event][id]" => "controller:policies"
					"[rsa][message][id1]" => "controller:policies"
					"[event][categoryid]" => "1501050000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:policies:01
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<fld6>:<event_source>:<fld7>:<fld8>:<fld9>:<fld10>::failed to get all app policies.:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{fld6}:%{event_source}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::failed to get all app policies.:" }
				id => "message-controller:policies:01"
				add_field => {
				"event_description" => "Failed to get all app policies"
					"[event][id]" => "controller:policies:01"
					"[rsa][message][id1]" => "controller:policies:01"
					"[event][categoryid]" => "1501050000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:policies:02
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<fld6>:<event_source>:<fld7>:<fld8>:<fld9>:<fld10>::failed to get all end point policies.:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{fld6}:%{event_source}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::failed to get all end point policies.:" }
				id => "message-controller:policies:02"
				add_field => {
				"event_description" => "Failed to get all end point policies."
					"[event][id]" => "controller:policies:02"
					"[rsa][message][id1]" => "controller:policies:02"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:ica_access
		# line in RSA: service:<event_source>:: failed to get all ica hosts.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "service:%{event_source}:: failed to get all ica hosts." }
				id => "message-controller:ica_access"
				add_field => {
				"event_description" => "Failed to get hosts"
					"[event][id]" => "controller:ica_access"
					"[rsa][message][id1]" => "controller:ica_access"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:ica_access:01
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<fld6>:<event_source>:<fld7>:<fld8>:<fld9>:<fld10>::failed to get all ica hosts.:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{fld6}:%{event_source}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::failed to get all ica hosts.:" }
				id => "message-controller:ica_access:01"
				add_field => {
				"event_description" => "failed to get all ica hosts."
					"[event][id]" => "controller:ica_access:01"
					"[rsa][message][id1]" => "controller:ica_access:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:shares:01
		# line in RSA: service:<event_source>:: failed to create share=<obj_name>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "service:%{event_source}:: failed to create share=%{obj_name}." }
				id => "message-controller:shares:01"
				add_field => {
				"event_description" => "Share creation failed"
				"obj_type" => "share"
					"[event][id]" => "controller:shares:01"
					"[rsa][message][id1]" => "controller:shares:01"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:shares:02
		# line in RSA: service:<event_source>:: removed share=<obj_name>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "service:%{event_source}:: removed share=%{obj_name}." }
				id => "message-controller:shares:02"
				add_field => {
				"event_description" => "Share removed"
				"obj_type" => "share"
					"[event][id]" => "controller:shares:02"
					"[rsa][message][id1]" => "controller:shares:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:general
		# line in RSA: general:: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "general:: %{event_description}" }
				id => "message-controller:general"
				add_field => {
				"event_source" => "general"
					"[event][id]" => "controller:general"
					"[rsa][message][id1]" => "controller:general"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:general:01
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::failed to get all cr acls.:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::failed to get all cr acls.:" }
				id => "message-controller:general:01"
				add_field => {
				"event_description" => "Failed to get all cr acls"
					"[event][id]" => "controller:general:01"
					"[rsa][message][id1]" => "controller:general:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:registry
		# line in RSA: <event_source>: : cannot load registry <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}: : cannot load registry %{obj_name}" }
				id => "message-controller:registry"
				add_field => {
				"event_description" => "Cannot load resgistry"
				"obj_type" => "registry"
					"[event][id]" => "controller:registry"
					"[rsa][message][id1]" => "controller:registry"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:vpnd:01
		# line in RSA: <event_source>:: Client requested port <network_port> on the loopback
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: Client requested port %{network_port} on the loopback" }
				id => "message-controller:vpnd:01"
				add_field => {
				"event_description" => "Port request on loopback"
					"[event][id]" => "controller:vpnd:01"
					"[rsa][message][id1]" => "controller:vpnd:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:vpnd:02
		# line in RSA: <event_source>:: Client was allowed access to port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: Client was allowed access to port %{network_port}" }
				id => "message-controller:vpnd:02"
				add_field => {
				"event_description" => "Client was allowed access to port"
					"[event][id]" => "controller:vpnd:02"
					"[rsa][message][id1]" => "controller:vpnd:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:vpnd:03
		# line in RSA: <event_source>:admin[<administrator>]: logged in
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:admin[%{administrator}]: logged in" }
				id => "message-controller:vpnd:03"
				add_field => {
				"event_description" => "Admin Login"
					"[event][id]" => "controller:vpnd:03"
					"[rsa][message][id1]" => "controller:vpnd:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:new_listener
		# line in RSA: <event_source>:: new listener [<hostip>:<network_port>:<fld1>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: new listener [%{hostip}:%{network_port}:%{fld1}]" }
				id => "message-controller:new_listener"
				add_field => {
				"event_description" => "New listener"
					"[event][id]" => "controller:new_listener"
					"[rsa][message][id1]" => "controller:new_listener"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:http_socket
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:controller:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::[http_socket]empty header recved:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:controller:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::[http_socket]empty header recved:" }
				id => "message-controller:http_socket"
				add_field => {
				"event_description" => "Empty header received"
					"[event][id]" => "controller:http_socket"
					"[rsa][message][id1]" => "controller:http_socket"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE controller:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-controller:01"
				add_field => {
					"[event][id]" => "controller:01"
					"[rsa][message][id1]" => "controller:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "server" {
		# MESSAGE server:vpnd:01
		# line in RSA: <event_source>:: <fld1> Login failure for user [<username>] from MAC[<smacaddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: %{fld1} Login failure for user [%{username}] from MAC[%{smacaddr}]" }
				id => "message-server:vpnd:01"
				add_field => {
				"event_description" => "login failure"
					"[event][id]" => "server:vpnd:01"
					"[rsa][message][id1]" => "server:vpnd:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:02
		# line in RSA: <event_source>:: disconnecting user session for [<username>:<smacaddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: disconnecting user session for [%{username}:%{smacaddr}]" }
				id => "message-server:vpnd:02"
				add_field => {
				"event_description" => "User disconnected"
					"[event][id]" => "server:vpnd:02"
					"[rsa][message][id1]" => "server:vpnd:02"
					"[event][categoryid]" => "1801030100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:03
		# line in RSA: <event_source>:: releasing IP <stransaddr> by user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: releasing IP %{stransaddr} by user %{username}" }
				id => "message-server:vpnd:03"
				add_field => {
				"event_description" => "IP released"
					"[event][id]" => "server:vpnd:03"
					"[rsa][message][id1]" => "server:vpnd:03"
					"[event][categoryid]" => "1801030100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:04
		# line in RSA: <event_source>:user[<username>]: logged off
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:user[%{username}]: logged off" }
				id => "message-server:vpnd:04"
				add_field => {
				"event_description" => "User logoff"
					"[event][id]" => "server:vpnd:04"
					"[rsa][message][id1]" => "server:vpnd:04"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:05
		# line in RSA: <event_source>:user[<username>]: is in the following local groups: <group>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:user[%{username}]: is in the following local groups: %{group}." }
				id => "message-server:vpnd:05"
				add_field => {
				"event_description" => "Group membership"
					"[event][id]" => "server:vpnd:05"
					"[rsa][message][id1]" => "server:vpnd:05"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:06
		# line in RSA: <event_source>:user[<username>]: has a MAC of [<smacaddr>] and has been assigned  a local IP of [<stransaddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:user[%{username}]: has a MAC of [%{smacaddr}] and has been assigned  a local IP of [%{stransaddr}]" }
				id => "message-server:vpnd:06"
				add_field => {
				"event_description" => "Local IP assignment"
					"[event][id]" => "server:vpnd:06"
					"[rsa][message][id1]" => "server:vpnd:06"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:07
		# line in RSA: <event_source>:user[<username>]: has logged in
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:user[%{username}]: has logged in" }
				id => "message-server:vpnd:07"
				add_field => {
				"event_description" => "User Login"
					"[event][id]" => "server:vpnd:07"
					"[rsa][message][id1]" => "server:vpnd:07"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:08
		# line in RSA: <event_source>:: [<username>] has invited [<c_username>] for a remote access session.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: [%{username}] has invited [%{c_username}] for a remote access session." }
				id => "message-server:vpnd:08"
				add_field => {
				"event_description" => "Remote access session invitation"
					"[event][id]" => "server:vpnd:08"
					"[rsa][message][id1]" => "server:vpnd:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:09
		# line in RSA: <event_source>:user[<username>]: !!! WARNING, <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:user[%{username}]: !!! WARNING, %{event_description}." }
				id => "message-server:vpnd:09"
				add_field => {
					"[event][id]" => "server:vpnd:09"
					"[rsa][message][id1]" => "server:vpnd:09"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:10
		# line in RSA: <event_source>:: New PIN required for user [<username>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:: New PIN required for user [%{username}]." }
				id => "message-server:vpnd:10"
				add_field => {
				"event_description" => "New PIN required for user"
					"[event][id]" => "server:vpnd:10"
					"[rsa][message][id1]" => "server:vpnd:10"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:11
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::Token synchronization required for portal page user [<username>] (secondary authentication source): 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::Token synchronization required for portal page user [%{username}] (secondary authentication source):" }
				id => "message-server:vpnd:11"
				add_field => {
				"event_description" => "Token synchronization required for portal page user"
					"[event][id]" => "server:vpnd:11"
					"[rsa][message][id1]" => "server:vpnd:11"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:12
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::Login failure for user [<username>]: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::Login failure for user [%{username}]:" }
				id => "message-server:vpnd:12"
				add_field => {
				"event_description" => "Login failure for user"
					"[event][id]" => "server:vpnd:12"
					"[rsa][message][id1]" => "server:vpnd:12"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:13
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::web session <sessionid> for user [<username>] has expired:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::web session %{sessionid} for user [%{username}] has expired:" }
				id => "message-server:vpnd:13"
				add_field => {
				"event_description" => "Web session has expired"
					"[event][id]" => "server:vpnd:13"
					"[rsa][message][id1]" => "server:vpnd:13"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:14
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>:User[<username>]:has logged in: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}:User[%{username}]:has logged in:" }
				id => "message-server:vpnd:14"
				add_field => {
				"event_description" => "User logged in"
					"[event][id]" => "server:vpnd:14"
					"[rsa][message][id1]" => "server:vpnd:14"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:15
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:<fld5>:<event_source>:<fld6>:<fld7>:<fld10>:<fld8>:<fld9>::purging unused web cookies for user: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:%{fld5}:%{event_source}:%{fld6}:%{fld7}:%{fld10}:%{fld8}:%{fld9}::purging unused web cookies for user: %{username}" }
				id => "message-server:vpnd:15"
				add_field => {
				"event_description" => "purging unused web cookies"
					"[event][id]" => "server:vpnd:15"
					"[rsa][message][id1]" => "server:vpnd:15"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:vpnd:16
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::Added user session [<username>] for URL [<url>]: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::Added user session [%{username}] for URL [%{url}]:" }
				id => "message-server:vpnd:16"
				add_field => {
				"event_description" => "Added user session for URL"
					"[event][id]" => "server:vpnd:16"
					"[rsa][message][id1]" => "server:vpnd:16"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:registry
		# line in RSA: <event_source>: : cannot load registry <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}: : cannot load registry %{obj_name}" }
				id => "message-server:registry"
				add_field => {
				"event_description" => "Cannot load regisrty"
				"obj_type" => "registry"
					"[event][id]" => "server:registry"
					"[rsa][message][id1]" => "server:registry"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:new_listener
		# line in RSA: <event_source>: new listener [<hostip>:<network_port>:<fld1>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}: new listener [%{hostip}:%{network_port}:%{fld1}]" }
				id => "message-server:new_listener"
				add_field => {
				"event_description" => "New listener"
					"[event][id]" => "server:new_listener"
					"[rsa][message][id1]" => "server:new_listener"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:ldap
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>:RetCode=<resultcode>,SystemErrNo=<fld11>:bind to LDAP server <daddr> unsuccessful, Error <fld12> (Invalid credentials):
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}:RetCode=%{resultcode},SystemErrNo=%{fld11}:bind to LDAP server %{daddr} unsuccessful, Error %{fld12} (Invalid credentials):" }
				id => "message-server:ldap"
				add_field => {
				"event_description" => "Bind to LDAP server unsuccessful"
				"result" => "unsuccessful"
					"[event][id]" => "server:ldap"
					"[rsa][message][id1]" => "server:ldap"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:ldap:01
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>:InternalError:authentication: user bind to LDAP server <daddr> unsuccessful, binddn=<dst_dn>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}:InternalError:authentication: user bind to LDAP server %{daddr} unsuccessful, binddn=%{dst_dn}" }
				id => "message-server:ldap:01"
				add_field => {
				"event_description" => "User bind to LDAP server unsuccessful"
				"result" => "unsuccessful"
					"[event][id]" => "server:ldap:01"
					"[rsa][message][id1]" => "server:ldap:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:ldap:02
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>:RetCode=<resultcode>,SystemErrNo=<fld11>:authorization: could not get group info, result code <fld12>, No such object: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}:RetCode=%{resultcode},SystemErrNo=%{fld11}:authorization: could not get group info, result code %{fld12}, No such object:" }
				id => "message-server:ldap:02"
				add_field => {
				"event_description" => "authorization:could not get group info,No such object"
					"[event][id]" => "server:ldap:02"
					"[rsa][message][id1]" => "server:ldap:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:sta_msg_proto
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld7>:<fld8>:<fld9>:<fld10>::Service received error invalid-ticket.:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::Service received error invalid-ticket.:" }
				id => "message-server:sta_msg_proto"
				add_field => {
				"event_description" => "Service received error invalid-ticket."
					"[event][id]" => "server:sta_msg_proto"
					"[rsa][message][id1]" => "server:sta_msg_proto"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:loggingd
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::!!! WARNING, unrecognized request: /DISABLEDCONNECTIONS:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::!!! WARNING, unrecognized request: /DISABLEDCONNECTIONS:" }
				id => "message-server:loggingd"
				add_field => {
				"event_description" => "Unrecognized request"
					"[event][id]" => "server:loggingd"
					"[rsa][message][id1]" => "server:loggingd"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:authd
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::!!! WARNING, RSA authentication failure for [<username>]: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::!!! WARNING, RSA authentication failure for [%{username}]:" }
				id => "message-server:authd"
				add_field => {
				"event_description" => "RSA authentication failure"
					"[event][id]" => "server:authd"
					"[rsa][message][id1]" => "server:authd"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:cgp_proto
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::Closing (failed) CGP connection [cgfd=<fld11>] :
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::Closing (failed) CGP connection [cgfd=%{fld11}] :" }
				id => "message-server:cgp_proto"
				add_field => {
				"disposition" => "failed"
				"event_description" => "Failed to close CGP connection"
					"[event][id]" => "server:cgp_proto"
					"[rsa][message][id1]" => "server:cgp_proto"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:cgp_proto:01
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::Closing CGP launched application [user:<username>, appl:<application>]: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::Closing CGP launched application [user:%{username}, appl:%{application}]:" }
				id => "message-server:cgp_proto:01"
				add_field => {
				"event_description" => "Closing CGP launched application"
					"[event][id]" => "server:cgp_proto:01"
					"[rsa][message][id1]" => "server:cgp_proto:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:cgp_proto:02
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::[User=<username>] CGP MPS tunnel succeeded, CGP Application launched [<application>]: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::[User=%{username}] CGP MPS tunnel succeeded, CGP Application launched [%{application}]:" }
				id => "message-server:cgp_proto:02"
				add_field => {
				"event_description" => "CGP MPS tunnel succeeded"
					"[event][id]" => "server:cgp_proto:02"
					"[rsa][message][id1]" => "server:cgp_proto:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:cgp_proto:03
		# line in RSA: <fld1>:<severity>:<fld3>:<fld4>:server:<event_source>:<fld6>:<fld7>:<fld8>:<fld9>:<fld10>::failed STA ticket check [Ticket=;<fld12>]: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:%{severity}:%{fld3}:%{fld4}:server:%{event_source}:%{fld6}:%{fld7}:%{fld8}:%{fld9}:%{fld10}::failed STA ticket check [Ticket=;%{fld12}]:" }
				id => "message-server:cgp_proto:03"
				add_field => {
				"event_description" => "failed STA ticket check"
					"[event][id]" => "server:cgp_proto:03"
					"[rsa][message][id1]" => "server:cgp_proto:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE server:service
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-server:service"
				add_field => {
					"[event][id]" => "server:service"
					"[rsa][message][id1]" => "server:service"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Admin" {
		# MESSAGE Admin_Logins
		# line in RSA: Admin Logins: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Admin Logins: %{dclass_counter1}" }
				id => "message-Admin_Logins"
				add_field => {
				"event_description" => "Admin Logins"
					"[event][id]" => "Admin_Logins"
					"[rsa][message][id1]" => "Admin_Logins"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Admin_Failed_Logins
		# line in RSA: Admin Failed Logins: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Admin Failed Logins: %{dclass_counter1}" }
				id => "message-Admin_Failed_Logins"
				add_field => {
				"event_description" => "Admin Failed Logins"
					"[event][id]" => "Admin_Failed_Logins"
					"[rsa][message][id1]" => "Admin_Failed_Logins"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA: <info>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId54"
			add_field => {
				"event_description" => "System uptime"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA: System Load Average: <info>
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "System Load Average: %{info}" }
			id => "msgParserId55"
			add_field => {
				"event_description" => "System Load Average"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Total" {
		# MESSAGE System_Total_Memory
		# line in RSA: Total Memory { (Gb) | (kB) | (MB) }: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Total[\s]+Memory[\s]+([\s]*\(Gb\)[\s]+|[\s]*\(kB\)[\s]+|[\s]*\(MB\)[\s]+):[\s]+(?<info>.*)$" }
				id => "message-System_Total_Memory"
				add_field => {
				"event_description" => "System total memory in Gb"
					"[event][id]" => "System_Total_Memory"
					"[rsa][message][id1]" => "System_Total_Memory"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Total_Logins
		# line in RSA: Total Logins: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Total Logins: %{dclass_counter1}" }
				id => "message-Total_Logins"
				add_field => {
				"event_description" => "Total Logins"
					"[event][id]" => "Total_Logins"
					"[rsa][message][id1]" => "Total_Logins"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Used" {
		# MESSAGE System_Used_Memory
		# line in RSA: Used  Memory { (Kb) | (kB) | (MB) }: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Used[\s]+Memory[\s]+([\s]*\(Kb\)[\s]+|[\s]*\(kB\)[\s]+|[\s]*\(MB\)[\s]+):[\s]+(?<info>.*)$" }
				id => "message-System_Used_Memory"
				add_field => {
				"event_description" => "System used memory in Kb"
					"[event][id]" => "System_Used_Memory"
					"[rsa][message][id1]" => "System_Used_Memory"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System_Used_Connections
		# line in RSA: Used Connections: <dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Used Connections: %{dclass_counter1}" }
				id => "message-System_Used_Connections"
				add_field => {
				"event_description" => "System used connections"
					"[event][id]" => "System_Used_Connections"
					"[rsa][message][id1]" => "System_Used_Connections"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: Free  Memory { (Kb) | (kB) | (MB) }: <info>
	else if [logstash][msgparser][id] == "msgParserId60" {
		grok {
			match => { "message" => "^Free[\s]+Memory[\s]+([\s]*\(Kb\)[\s]+|[\s]*\(kB\)[\s]+|[\s]*\(MB\)[\s]+):[\s]+(?<info>.*)$" }
			id => "msgParserId60"
			add_field => {
				"event_description" => "System free memory in Kb"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: Disabled Connections: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "Disabled Connections: %{dclass_counter1}" }
			id => "msgParserId61"
			add_field => {
				"event_description" => "System disabled connections"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId62
	# line in RSA: Full Logins: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "Full Logins: %{dclass_counter1}" }
			id => "msgParserId62"
			add_field => {
				"event_description" => "Full Logins"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId63
	# line in RSA: Kiosk Logins: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "Kiosk Logins: %{dclass_counter1}" }
			id => "msgParserId63"
			add_field => {
				"event_description" => "Kiosk Logins"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA: Failed Logins: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "Failed Logins: %{dclass_counter1}" }
			id => "msgParserId64"
			add_field => {
				"event_description" => "Failed Logins"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA:  <saddr> <fld1> <fld13> [<fld12> <timezone>] "<web_method> <url> <version> [name:<fld16>][id:<fld17>]" <resultcode> <rbytes> "<fld14>" "<fld15>"
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{saddr} %{fld1} %{fld13} [%{fld12} %{timezone}] \"%{web_method} %{url} %{version} [name:%{fld16}][id:%{fld17}]\" %{resultcode} %{rbytes} \"%{fld14}\" \"%{fld15}\"" }
			id => "msgParserId65"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld12}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Login" {
		# MESSAGE Login:01
		# line in RSA:  <saddr> <fld1> <fld2>:<username>\<fld3>[<fld12> <timezone>] "<fld4>" <fld5> <fld6> "<fld7>" "<fld8>" <action> "Login failed"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld1} %{fld2}:%{username}\%{fld3}[%{fld12} %{timezone}] \"%{fld4}\" %{fld5} %{fld6} \"%{fld7}\" \"%{fld8}\" %{action} \"Login failed\"" }
				id => "message-Login:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Login failed"
					"[event][id]" => "Login:01"
					"[rsa][message][id1]" => "Login:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE Login
		# line in RSA:  <saddr> <fld1> <fld2>:<username>\<fld3>[<fld12> <timezone>] "<fld4>" <fld5> <fld6> "<fld7>" "<fld8>" <action> "<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld1} %{fld2}:%{username}\%{fld3}[%{fld12} %{timezone}] \"%{fld4}\" %{fld5} %{fld6} \"%{fld7}\" \"%{fld8}\" %{action} \"%{info}\"" }
				id => "message-Login"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Login"
					"[rsa][message][id1]" => "Login"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld12}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA:  <saddr> <fld1> <fld2>:<username>\<fld3>[<fld12> <timezone>] "<fld4>" <fld5> <fld6> "<fld7>" "<fld8>" <action> "<info>"
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "%{saddr} %{fld1} %{fld2}:%{username}\%{fld3}[%{fld12} %{timezone}] \"%{fld4}\" %{fld5} %{fld6} \"%{fld7}\" \"%{fld8}\" %{action} \"%{info}\"" }
			id => "msgParserId68"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld12}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	# PARSER msgParserId69
	# line in RSA:  <fld3> <fld1> <fld2>[<fld12> <timezone>]"<fld4>" <fld5> <fld6> "<fld7>" "<fld8>" "STA-Validation" "<fld9>" "<fld10>" "<info>"
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld1} %{fld2}[%{fld12} %{timezone}]\"%{fld4}\" %{fld5} %{fld6} \"%{fld7}\" \"%{fld8}\" \"STA-Validation\" \"%{fld9}\" \"%{fld10}\" \"%{info}\"" }
			id => "msgParserId69"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld12}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	# PARSER msgParserId70
	# line in RSA:  <saddr> <fld1> <fld2>[<fld12> <timezone>]"<fld4>" <fld5> <fld6> "<fld7>" "<fld8>" "SG-Traffic" "<fld9>" "<daddr>:<dport>" "<fld10>" "<info>"
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{saddr} %{fld1} %{fld2}[%{fld12} %{timezone}]\"%{fld4}\" %{fld5} %{fld6} \"%{fld7}\" \"%{fld8}\" \"SG-Traffic\" \"%{fld9}\" \"%{daddr}:%{dport}\" \"%{fld10}\" \"%{info}\"" }
			id => "msgParserId70"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld12}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_citrixagmsg.json"
#			template_name => "citrixag_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
