# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "fortinet"
			"[observer][name]" => "Fortinet FortiGate"
			"[observer][type]" => "Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 00016
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> devid=<hserialnum> logid=<log_id> type=<hlog_type> subtype=<hsub_type> eventtype=<vendor_event_cat> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} devid=%{hserialnum} logid=%{log_id} type=%{hlog_type} subtype=%{hsub_type} eventtype=%{vendor_event_cat} pri=%{hseverity} %{message}" }
			id => "header-00016"
			add_field => {
				"[rsa][header][id]" => "00016"
				"[rsa][message][id2]" => "%{log_id}5"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: date=<hdate>,time=<htime>,devname=<hdevice>,{device_id|devid}=<hserialnum>,{log_id|logid}=<messageid>,type=<hlog_type>,subtype=<hsub_type>,{level|pri}=<hseverity>,<!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^date=(?<hdate>[^,]*),time=(?<htime>[^,]*),devname=(?<hdevice>[^,]*),(device_id|devid)=(?<hserialnum>[^,]*),(log_id|logid)=(?<messageid>[^,]*),type=(?<hlog_type>[^,]*),subtype=(?<hsub_type>[^,]*),(level|pri)=(?<hseverity>[^,]*),(?<message>.*)$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: date=<hdate>,time=<htime>,devname=<hdevice>,{device_id|devid}=<hserialnum>,{log_id|logid}=<messageid>,type=<hlog_type>,subtype=<hsub_type>,eventtype=<vendor_event_cat>,{level|pri}=<hseverity>,<!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^date=(?<hdate>[^,]*),time=(?<htime>[^,]*),devname=(?<hdevice>[^,]*),(device_id|devid)=(?<hserialnum>[^,]*),(log_id|logid)=(?<messageid>[^,]*),type=(?<hlog_type>[^,]*),subtype=(?<hsub_type>[^,]*),eventtype=(?<vendor_event_cat>[^,]*),(level|pri)=(?<hseverity>[^,]*),(?<message>.*)$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> device_id=<hserialnum> log_id=<messageid> type=<hlog_type> subtype=<hsub_type> pri=<hseverity> vd=<hfld2> fwver=<hfld> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} device_id=%{hserialnum} log_id=%{messageid} type=%{hlog_type} subtype=%{hsub_type} pri=%{hseverity} vd=%{hfld2} fwver=%{hfld} %{message}" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> device_id=<hserialnum> log_id=<messageid> type=<hlog_type> subtype=<hsub_type> pri=<hseverity> fwver=<hfld><!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} device_id=%{hserialnum} log_id=%{messageid} type=%{hlog_type} subtype=%{hsub_type} pri=%{hseverity} fwver=%{hfld}%{message}" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00010
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> device_id=<hserialnum> log_id=<messageid> type=<hlog_type> subtype=<hsub_type> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} device_id=%{hserialnum} log_id=%{messageid} type=%{hlog_type} subtype=%{hsub_type} pri=%{hseverity} %{message}" }
			id => "header-00010"
			add_field => {
				"[rsa][header][id]" => "00010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00011
	# line in RSA: date=<hdate> time=<htime> device_id=<hserialnum> log_id=<messageid> type=<hlog_type> subtype=<hsub_type> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hserialnum} log_id=%{messageid} type=%{hlog_type} subtype=%{hsub_type} pri=%{hseverity} %{message}" }
			id => "header-00011"
			add_field => {
				"[rsa][header][id]" => "00011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00012
	# line in RSA: date=<hdate> time=<htime> device_id=<hserialnum> log_id=<log_id> type=<hlog_type> subtype=<hsub_type> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hserialnum} log_id=%{log_id} type=%{hlog_type} subtype=%{hsub_type} pri=%{hseverity} %{message}" }
			id => "header-00012"
			add_field => {
				"[rsa][header][id]" => "00012"
				"[rsa][message][id2]" => "%{log_id}5"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00013
	# line in RSA: <hmonth> <hday> <hfld> date=<hdate> time=<htime> devname=<hdevice> {devid|device_id}=<hserialnum> {logid|log_id}=<messageid> type=<hlog_type> subtype=<hsub_type> {pri|level}=<hseverity> <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hfld>[^\s]*)[\s]+date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+devname=(?<hdevice>[^\s]*)[\s]+(devid|device_id)=(?<hserialnum>[^\s]*)[\s]+(logid|log_id)=(?<messageid>[^\s]*)[\s]+type=(?<hlog_type>[^\s]*)[\s]+subtype=(?<hsub_type>[^\s]*)[\s]+(pri|level)=(?<hseverity>[^\s]*)[\s]+(?<message>.*)$" }
			id => "header-00013"
			add_field => {
				"[rsa][header][id]" => "00013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00014
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> device_id=<hserialnum> log_id=<messageid> type=<hlog_type> {subtype=<hsub_type> eventtype=<vendor_event_cat>|subtype=<hsub_type>} pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+devname=(?<hdevice>[^\s]*)[\s]+device_id=(?<hserialnum>[^\s]*)[\s]+log_id=(?<messageid>[^\s]*)[\s]+type=(?<hlog_type>[^\s]*)[\s]+(subtype=(?<hsub_type>[^\s]*)[\s]+eventtype=(?<vendor_event_cat>[^\s]*)|subtype=(?<hsub_type>[^\s]*))[\s]+pri=(?<hseverity>[^\s]*)[\s]+(?<message>.*)$" }
			id => "header-00014"
			add_field => {
				"[rsa][header][id]" => "00014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00015
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> devid=<hserialnum> logid={"<messageid>"|<messageid>} type=<hlog_type> {subtype=<hsub_type> eventtype=<vendor_event_cat>|subtype=<hsub_type>} level=<hseverity> <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+devname=(?<hdevice>[^\s]*)[\s]+devid=(?<hserialnum>[^\s]*)[\s]+logid=(\"(?<messageid>[^\"]*)\"|(?<messageid>[^\s]*))[\s]+type=(?<hlog_type>[^\s]*)[\s]+(subtype=(?<hsub_type>[^\s]*)[\s]+eventtype=(?<vendor_event_cat>[^\s]*)|subtype=(?<hsub_type>[^\s]*))[\s]+level=(?<hseverity>[^\s]*)[\s]+(?<message>.*)$" }
			id => "header-00015"
			add_field => {
				"[rsa][header][id]" => "00015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: date=<hdate> time=<htime> itime=<hfld10> devid=<hfld1> devname=<hdevice> logid=<id> type=<msgIdPart1> subtype=<msgIdPart2> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} itime=%{hfld10} devid=%{hfld1} devname=%{hdevice} logid=%{id} type=%{msgIdPart1} subtype=%{msgIdPart2} %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: date=<hdate> time=<htime> devid=<hfld1> devname=<hdevice> logid=<id> type=<msgIdPart1> subtype=<msgIdPart2> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devid=%{hfld1} devname=%{hdevice} logid=%{id} type=%{msgIdPart1} subtype=%{msgIdPart2} %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> device_id=<hfld1> log_id=<id> type=<msgIdPart1> subtype=<msgIdPart2> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} device_id=%{hfld1} log_id=%{id} type=%{msgIdPart1} subtype=%{msgIdPart2} %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> devid=<hfld1> logid=<id> type=<msgIdPart1> subtype=<msgIdPart2> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} devid=%{hfld1} logid=%{id} type=%{msgIdPart1} subtype=%{msgIdPart2} %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: date=<hdate>,time=<htime>,devname=<hdevice>,devid=<hfld1>,logid=<id>,type=<msgIdPart1>,subtype=<msgIdPart2>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate},time=%{htime},devname=%{hdevice},devid=%{hfld1},logid=%{id},type=%{msgIdPart1},subtype=%{msgIdPart2},%{message}" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: date=<hdate> time=<htime> device_id=<hfld1> log_id=<id> type=<msgIdPart1> subtype=<msgIdPart2> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} device_id=%{hfld1} log_id=%{id} type=%{msgIdPart1} subtype=%{msgIdPart2} %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <hfld2> <hfld3> date=<hdate> time=<htime> devname=<hdevice> devid=<hfld1> logid=<id> type=<msgIdPart1> subtype=<msgIdPart2> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{hfld2} %{hfld3} date=%{hdate} time=%{htime} devname=%{hdevice} devid=%{hfld1} logid=%{id} type=%{msgIdPart1} subtype=%{msgIdPart2} %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00017
	# line in RSA: date=<hdate> time=<htime> logid=<messageid> type=<hlog_type> subtype=<hsub_type> eventtype=<vendor_event_cat> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} logid=%{messageid} type=%{hlog_type} subtype=%{hsub_type} eventtype=%{vendor_event_cat} %{message}" }
			id => "header-00017"
			add_field => {
				"[rsa][header][id]" => "00017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00018
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> device_id=<hserialnum> log_id=<messageid> subtype=<hsub_type> type=<hlog_type> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} device_id=%{hserialnum} log_id=%{messageid} subtype=%{hsub_type} type=%{hlog_type} pri=%{hseverity} %{message}" }
			id => "header-00018"
			add_field => {
				"[rsa][header][id]" => "00018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00019
	# line in RSA: date=<hdate> time=<htime> devname=<hdevice> devid=<hserialnum> log_id=<messageid> type=<hlog_type> subtype=<hsub_type> pri=<hseverity> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "date=%{hdate} time=%{htime} devname=%{hdevice} devid=%{hserialnum} log_id=%{messageid} type=%{hlog_type} subtype=%{hsub_type} pri=%{hseverity} %{message}" }
			id => "header-00019"
			add_field => {
				"[rsa][header][id]" => "00019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9996
	# line in RSA: date=<hdate> time=<htime> <hfld1> type=<hlog_type> subtype=<hsub_type> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+type=(?<hlog_type>[^\s]*)[\s]+subtype=(?<hsub_type>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9996"
			add_field => {
				"[rsa][header][id]" => "9996"
				"[rsa][message][id2]" => "FORTINET_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9997
	# line in RSA: <hmonth> <hday> <hfld2> <hfld3> date=<hdate> time=<htime> <hfld1> type=<hlog_type> subtype=<hsub_type> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+type=(?<hlog_type>[^\s]*)[\s]+subtype=(?<hsub_type>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9997"
			add_field => {
				"[rsa][header][id]" => "9997"
				"[rsa][message][id2]" => "FORTINET_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9998
	# line in RSA: date=<hdate> time=<htime> <hfld1> subtype=<hsub_type> type=<hlog_type> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+subtype=(?<hsub_type>[^\s]*)[\s]+type=(?<hlog_type>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9998"
			add_field => {
				"[rsa][header][id]" => "9998"
				"[rsa][message][id2]" => "FORTINET_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <hmonth> <hday> <hfld2> <hfld3> date=<hdate> time=<htime> <hfld1> subtype=<hsub_type> type=<hlog_type> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+date=(?<hdate>[^\s]*)[\s]+time=(?<htime>[^\s]*)[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+subtype=(?<hsub_type>[^\s]*)[\s]+type=(?<hlog_type>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "FORTINET_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_fortinetmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: {vd=<vsys> proto=|proto=}<protocol> kind=<fld9> action=<action> laddr=<saddr> raddr=<daddr> local=<shost> remote=<dhost>
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+proto=|proto=)(?<protocol>[^\s]*)[\s]+kind=(?<fld9>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+laddr=(?<saddr>[^\s]*)[\s]+raddr=(?<daddr>[^\s]*)[\s]+local=(?<shost>[^\s]*)[\s]+remote=(?<dhost>.*)$" }
			id => "msgParserId0"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: vd=<vsys> policyid=<policy_id> SN=<serial_number> user={"<username>"|<username>} group={"<group>"|<group>} proto=<protocol> kind=<fld9> action=<action> laddr=<saddr> local=<shost>
	else if [logstash][msgparser][id] == "msgParserId1" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+SN=(?<serial_number>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+proto=(?<protocol>[^\s]*)[\s]+kind=(?<fld9>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+laddr=(?<saddr>[^\s]*)[\s]+local=(?<shost>.*)$" }
			id => "msgParserId1"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> policyid=<policy_id> proto=<fld70> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
	else if [logstash][msgparser][id] == "msgParserId2" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
			id => "msgParserId2"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: vd="<vsys>" src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_port=<dport> wanopt_app_type=<fld23> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld25> src_int="<sinterface>" dst_int="<dinterface>" user="<username>" group="<group>"
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} srcname=%{shost} src_port=%{sport} dst=%{daddr} dstname=%{dhost} dst_port=%{dport} wanopt_app_type=%{fld23} duration=%{duration} rule=%{rule} policyid=%{policy_id} identidx=%{fld25} src_int=\"%{sinterface}\" dst_int=\"%{dinterface}\" user=\"%{username}\" group=\"%{group}\"" }
			id => "msgParserId3"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0021000002" {
		# MESSAGE 0021000002
		# line in RSA: status=<event_state> vd={"<vsys>"|<vsys>} dir_disp={ org | replay | reply } tran_disp={ noop | snat | dnat } src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> {dst_country=<location_dst> src_country=<location_src> dst_port=<dport>|dst_port=<dport>} tran_ip=<stransaddr> {tran_port=<stransport> tran_sip=<fld14> tran_sport=<fld15>|tran_port=<stransport>} service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> {policyid=<policy_id> identidx=<fld13>|policyid=<policy_id>} sent=<sbytes> {rcvd=<rbytes> shaper_drop_sent=<fld20> shaper_drop_rcvd=<fld2> perip_drop=<fld3> shaper_sent_name=<fld19> shaper_rcvd_name=<fld5> perip_name=<fld6>|rcvd=<rbytes>} sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> {vpn=<fld31> vpn_tunnel=<fld32>|vpn="<fld31>"} src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} {SN=<serial_number> app=<obj_name> app_cat=<fld25>|SN=<serial_number>} user={"<username>"|<username>} group={"<group>"|<group>} {carrier_ep=<fld2> profilegroup=<rule_group> subappcat=<fld34>|carrier_ep=<fld2>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+|[\s]*reply[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+(dst_country=(?<location_dst>[^\s]*)[\s]+src_country=(?<location_src>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)|dst_port=(?<dport>[^\s]*))[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+(tran_port=(?<stransport>[^\s]*)[\s]+tran_sip=(?<fld14>[^\s]*)[\s]+tran_sport=(?<fld15>[^\s]*)|tran_port=(?<stransport>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld13>[^\s]*)|policyid=(?<policy_id>[^\s]*))[\s]+sent=(?<sbytes>[^\s]*)[\s]+(rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld20>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld2>[^\s]*)[\s]+perip_drop=(?<fld3>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld5>[^\s]*)[\s]+perip_name=(?<fld6>[^\s]*)|rcvd=(?<rbytes>[^\s]*))[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+(vpn=(?<fld31>[^\s]*)[\s]+vpn_tunnel=(?<fld32>[^\s]*)|vpn=\"(?<fld31>[^\"]*)\")[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+(SN=(?<serial_number>[^\s]*)[\s]+app=(?<obj_name>[^\s]*)[\s]+app_cat=(?<fld25>[^\s]*)|SN=(?<serial_number>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(carrier_ep=(?<fld2>[^\s]*)[\s]+profilegroup=(?<rule_group>[^\s]*)[\s]+subappcat=(?<fld34>.*)|carrier_ep=(?<fld2>.*))$" }
				id => "message-0021000002"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0021000002"
					"[rsa][message][id1]" => "0021000002"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0021000002:01
		# line in RSA: status=<event_state> vd="<vsys>" dir_disp={ org | replay | reply } tran_disp={ noop | snat | dnat } src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_port=<dport> tran_i{{=<stransaddr> tran_port=<stransport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> vpn="<fld31>" src_int="<sinterface>" dst_int="<dinterface>" SN=<serial_number> user="<username>" group="<group>" carrier_ep=<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=\"(?<vsys>[^\"]*)\"[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+|[\s]*reply[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+tran_i\{=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+vpn=\"(?<fld31>[^\"]*)\"[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+carrier_ep=(?<fld2>.*)$" }
				id => "message-0021000002:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0021000002:01"
					"[rsa][message][id1]" => "0021000002:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0021000002:03
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int="<sinterface>" dst=<daddr> dst_port=<dport> dst_int="<dinterface>" SN=<serial_number> status=<event_state> policyid=<policy_id> { dst_country="<location_dst>" src_country="<location_src>" dir_disp=<fld13> | dst_country="<location_dst>" dir_disp=<fld13> | dir_disp=<fld13> } tran_disp=<fld14> { tran_sip=<fld10> tran_sport=<fld11> service=<fld12> proto=<fld70> | service=<fld12> proto=<fld70> | proto=<fld70> } duration=<duration> sent=<sbytes> rcvd=<rbytes> sent_pkt=<fld31> rcvd_pkt=<fld32>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+src_country=\"(?<location_src>[^\"]*)\"[\s]+dir_disp=(?<fld13>[^\s]*)[\s]+|[\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+dir_disp=(?<fld13>[^\s]*)[\s]+|[\s]*dir_disp=(?<fld13>[^\s]*)[\s]+)[\s]+tran_disp=(?<fld14>[^\s]*)[\s]+([\s]*tran_sip=(?<fld10>[^\s]*)[\s]+tran_sport=(?<fld11>[^\s]*)[\s]+service=(?<fld12>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+|[\s]*service=(?<fld12>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+|[\s]*proto=(?<fld70>[^\s]*)[\s]+)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<fld31>[^\s]*)[\s]+rcvd_pkt=(?<fld32>.*)$" }
				id => "message-0021000002:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0021000002:03"
					"[rsa][message][id1]" => "0021000002:03"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0022000003" {
		# MESSAGE 0022000003
		# line in RSA: status=<event_state> vd="<vsys>" src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_port=<dport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> {identidx=<fld> sent=<sbytes> | sent=<sbytes>} rcvd=<rbytes> { shaper_drop_sent=<fld20> shaper_drop_rcvd=<fld2> perip_drop=<fld3> shaper_sent_name="<fld4>" shaper_rcvd_name="<fld5>" perip_name="<fld6>" vpn="<fld31>" | vpn="<fld31>" } src_int="<sinterface>" dst_int="<dinterface>" SN=<serial_number> { app="<fld8>" app_cat="<fld9>" user="<username>" | user="<username>" } group="<group>" carrier_ep=<fld26>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(identidx=(?<fld>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+|[\s]*sent=(?<sbytes>[^\s]*))[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+([\s]*shaper_drop_sent=(?<fld20>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld2>[^\s]*)[\s]+perip_drop=(?<fld3>[^\s]*)[\s]+shaper_sent_name=\"(?<fld4>[^\"]*)\"[\s]+shaper_rcvd_name=\"(?<fld5>[^\"]*)\"[\s]+perip_name=\"(?<fld6>[^\"]*)\"[\s]+vpn=\"(?<fld31>[^\"]*)\"[\s]+|[\s]*vpn=\"(?<fld31>[^\"]*)\"[\s]+)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+([\s]*app=\"(?<fld8>[^\"]*)\"[\s]+app_cat=\"(?<fld9>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+|[\s]*user=\"(?<username>[^\"]*)\"[\s]+)[\s]+group=\"(?<group>[^\"]*)\"[\s]+carrier_ep=(?<fld26>.*)$" }
				id => "message-0022000003"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0022000003"
					"[rsa][message][id1]" => "0022000003"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0022000003:01
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int="<sinterface>" dst=<daddr> dst_port=<dport> dst_int="<dinterface>" SN=<serial_number> status=<event_state> policyid=<policy_id> { dst_country="<location_dst>" src_country="<location_src>" service=<fld3> proto=<protocol> | dst_country="<location_dst>" service=<fld3> proto=<protocol> | proto=<fld70> } duration=<duration> sent=<sbytes> {rcvd=<rbytes> identidx=<fld31>|rcvd=<rbytes>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+src_country=\"(?<location_src>[^\"]*)\"[\s]+service=(?<fld3>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+|[\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+service=(?<fld3>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+|[\s]*proto=(?<fld70>[^\s]*)[\s]+)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+(rcvd=(?<rbytes>[^\s]*)[\s]+identidx=(?<fld31>.*)|rcvd=(?<rbytes>.*))$" }
				id => "message-0022000003:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0022000003:01"
					"[rsa][message][id1]" => "0022000003:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0022000003:02
		# line in RSA: status=<event_state> vd=<vsys> src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_country=<location_dst> src_country=<location_src> dst_port=<dport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> {identidx=<fld1> sent=<sbytes> | sent=<sbytes>} rcvd=<rbytes> { shaper_drop_sent=<fld20> shaper_drop_rcvd=<fld2> perip_drop=<fld3> shaper_sent_name=<fld4> shaper_rcvd_name=<fld5> perip_name=<fld6> vpn=<fld31> vpn_tunnel=<fld32> | vpn=<fld31> vpn_tunnel=<fld32> } src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> { app=<fld8> app_cat=<fld9> user=<username> | user=<username> } group=<group> carrier_ep=<fld26>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_country=(?<location_dst>[^\s]*)[\s]+src_country=(?<location_src>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(identidx=(?<fld1>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+|[\s]*sent=(?<sbytes>[^\s]*))[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+([\s]*shaper_drop_sent=(?<fld20>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld2>[^\s]*)[\s]+perip_drop=(?<fld3>[^\s]*)[\s]+shaper_sent_name=(?<fld4>[^\s]*)[\s]+shaper_rcvd_name=(?<fld5>[^\s]*)[\s]+perip_name=(?<fld6>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+vpn_tunnel=(?<fld32>[^\s]*)[\s]+|[\s]*vpn=(?<fld31>[^\s]*)[\s]+vpn_tunnel=(?<fld32>[^\s]*)[\s]+)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+SN=(?<serial_number>[^\s]*)[\s]+([\s]*app=(?<fld8>[^\s]*)[\s]+app_cat=(?<fld9>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+|[\s]*user=(?<username>[^\s]*)[\s]+)[\s]+group=(?<group>[^\s]*)[\s]+carrier_ep=(?<fld26>.*)$" }
				id => "message-0022000003:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0022000003:02"
					"[rsa][message][id1]" => "0022000003:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: {vd=<vsys> user=|user=}{ "<username>" | <username> } group="<group>" proto=<protocol> action=<action> laddr=<saddr> raddr=<daddr> repeat=<fld8>
	else if [logstash][msgparser][id] == "msgParserId10" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=\"(?<group>[^\"]*)\"[\s]+proto=(?<protocol>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+laddr=(?<saddr>[^\s]*)[\s]+raddr=(?<daddr>[^\s]*)[\s]+repeat=(?<fld8>.*)$" }
			id => "msgParserId10"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: {vd=<vsys> proto=|proto=}<protocol> kind=<fld9> action=<action> reason=<result> req=<fld7> src=<saddr> dst=<daddr> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId11" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+proto=|proto=)(?<protocol>[^\s]*)[\s]+kind=(?<fld9>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+req=(?<fld7>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+to=(?<to>.*)$" }
			id => "msgParserId11"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA: vd=<vsys> process="<process>" reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "vd=%{vsys} process=\"%{process}\" reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId12"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: vd=<vsys> service=<network_service> conserve=<fld13> free=<fld14> red=<fld15> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "vd=%{vsys} service=%{network_service} conserve=%{fld13} free=%{fld14} red=%{fld15} msg=\"%{event_description}\"" }
			id => "msgParserId13"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0100022101" {
		# MESSAGE 0100022101
		# line in RSA: vd=<vsys> file=<filename> size=<fld13> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} file=%{filename} size=%{fld13} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0100022101"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100022101"
					"[rsa][message][id1]" => "0100022101"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100022101:01
		# line in RSA: vd=<vsys> count=<fld13> action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} count=%{fld13} action=%{action} status=%{event_state} reason=%{result} msg=\"%{event_description}\"" }
				id => "message-0100022101:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100022101:01"
					"[rsa][message][id1]" => "0100022101:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: vd=<vsys> service=<network_service> conserve=<fld13> free=<fld14> green=<fld15> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "vd=%{vsys} service=%{network_service} conserve=%{fld13} free=%{fld14} green=%{fld15} msg=\"%{event_description}\"" }
			id => "msgParserId15"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0102010001" {
		# MESSAGE 0102010001
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0102010001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102010001"
					"[rsa][message][id1]" => "0102010001"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102010001:01
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> policyid=<policy_id> proto=<protocol> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0102010001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102010001:01"
					"[rsa][message][id1]" => "0102010001:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102010001:02
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0102010001:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102010001:02"
					"[rsa][message][id1]" => "0102010001:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102010001:03
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> policyid=<policy_id> proto=<protocol> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0102010001:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102010001:03"
					"[rsa][message][id1]" => "0102010001:03"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0021010001" {
		# MESSAGE 0021010001:02
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> carrier_ep=<fld52> user={"<username>"|<username>} group={"<group>"|<group>} rule=<rule> policyid=<policy_id> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay | reply } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+carrier_ep=(?<fld52>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+|[\s]*reply[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0021010001:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"vsys" => "%{hfld2}"
					"[event][id]" => "0021010001:02"
					"[rsa][message][id1]" => "0021010001:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0021010001
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user={"<username>"|<username>} group={"<group>"|<group>} rule=<rule> policyid=<policy_id> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay | reply } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+|[\s]*reply[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0021010001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0021010001"
					"[rsa][message][id1]" => "0021010001"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0021010001:01
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user={"<username>"|<username>} group={"<group>"|<group>} policyid=<policy_id> proto=<protocol> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>.*)$" }
				id => "message-0021010001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0021010001:01"
					"[rsa][message][id1]" => "0021010001:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0102013001" {
		# MESSAGE 0102013001
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0102013001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102013001"
					"[rsa][message][id1]" => "0102013001"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102013001:01
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
				id => "message-0102013001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102013001:01"
					"[rsa][message][id1]" => "0102013001:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0023013001" {
		# MESSAGE 0023013001
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
				id => "message-0023013001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0023013001"
					"[rsa][message][id1]" => "0023013001"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0023013001:01
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> policyid=<policy_id> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
				id => "message-0023013001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0023013001:01"
					"[rsa][message][id1]" => "0023013001:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0023013001:02
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
				id => "message-0023013001:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0023013001:02"
					"[rsa][message][id1]" => "0023013001:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0023013001:03
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> policyid=<policy_id> proto=<fld70> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
				id => "message-0023013001:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0023013001:03"
					"[rsa][message][id1]" => "0023013001:03"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0022013001" {
		# MESSAGE 0022013001
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user=<username> group=<group> policyid=<policy_id> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
				id => "message-0022013001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0022013001"
					"[rsa][message][id1]" => "0022013001"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0022013001:01
		# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user=<username> group=<group> policyid=<policy_id> proto=<fld70> service=<network_service> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
				id => "message-0022013001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0022013001:01"
					"[rsa][message][id1]" => "0022013001:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user=<username> group=<group> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport>
	else if [logstash][msgparser][id] == "msgParserId29" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>.*)$" }
			id => "msgParserId29"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0038000004" {
		# MESSAGE 0038000004
		# line in RSA: status=<event_state> vd={"<vsys>"|<vsys>} src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> {dst_country=<location_dst> src_country=<location_src>|dst_country=<location_dst>} dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> tran_sip=<fld14> tran_sport=<fld15> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> {vpn_type=<fld23> vpn_tunnel=<fld24>|vpn_tunnel=<fld24>} src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} SN=<serial_number> app={"<obj_name>"|<obj_name>} app_cat=<fld25> user={"<username>"|<username>} group={"<group>"|<group>} carrier_ep=<fld26> {profilegroup=<rule_group> subapp=<fld17> subappcat=<fld18>|profilegroup="<rule_group>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+(dst_country=(?<location_dst>[^\s]*)[\s]+src_country=(?<location_src>[^\s]*)|dst_country=(?<location_dst>[^\s]*))[\s]+dst_port=(?<dport>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+tran_sip=(?<fld14>[^\s]*)[\s]+tran_sport=(?<fld15>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld16>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld17>[^\s]*)[\s]+perip_drop=(?<fld18>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld20>[^\s]*)[\s]+perip_name=(?<fld21>[^\s]*)[\s]+vpn=(?<fld22>[^\s]*)[\s]+(vpn_type=(?<fld23>[^\s]*)[\s]+vpn_tunnel=(?<fld24>[^\s]*)|vpn_tunnel=(?<fld24>[^\s]*))[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+SN=(?<serial_number>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+app_cat=(?<fld25>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+carrier_ep=(?<fld26>[^\s]*)[\s]+(profilegroup=(?<rule_group>[^\s]*)[\s]+subapp=(?<fld17>[^\s]*)[\s]+subappcat=(?<fld18>.*)|profilegroup=\"(?<rule_group>[^\"]*)\")$" }
				id => "message-0038000004"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000004"
					"[rsa][message][id1]" => "0038000004"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0038000004:01
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int="<sinterface>" dst=<daddr> dst_port=<dport> dst_int="<dinterface>" SN=<serial_number> status=<event_state> policyid=<policy_id> { dst_country="<location_dst>" src_country="<location_src>" | dst_country="<location_dst>" } tran_sip=<fld14> tran_sport=<fld15> service=<network_service> proto=<fld70> duration=<duration> sent=<sbytes> rcvd=<rbytes>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+src_country=\"(?<location_src>[^\"]*)\"[\s]+|[\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+)[\s]+tran_sip=(?<fld14>[^\s]*)[\s]+tran_sport=(?<fld15>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>.*)$" }
				id => "message-0038000004:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000004:01"
					"[rsa][message][id1]" => "0038000004:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0038000004:02
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int="<sinterface>" dst=<daddr> dst_port=<dport> dst_int="<dinterface>" SN=<serial_number> status=<event_state> policyid=<policy_id> { dst_country="<location_dst>" src_country="<location_src>" | dst_country="<location_dst>" } { tran_ip=<stransaddr> tran_port=<stransport> service=<network_service> | service=<network_service> } proto=<fld70> duration=<duration> sent=<sbytes> { rcvd=<rbytes> vpn="<fld31>" vpn_type=<fld23> | rcvd=<rbytes> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+src_country=\"(?<location_src>[^\"]*)\"[\s]+|[\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+)[\s]+([\s]*tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+|[\s]*service=(?<network_service>[^\s]*)[\s]+)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+([\s]*rcvd=(?<rbytes>[^\s]*)[\s]+vpn=\"(?<fld31>[^\"]*)\"[\s]+vpn_type=(?<fld23>[^\s]*)[\s]+|[\s]*rcvd=(?<rbytes>[^\s]*)[\s]+)$" }
				id => "message-0038000004:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000004:02"
					"[rsa][message][id1]" => "0038000004:02"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0315012552" {
		# MESSAGE 0315012552
		# line in RSA: vd="<vsys>" hostname="<hostname>" error=<resultcode> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" hostname=\"%{hostname}\" error=%{resultcode} msg=\"%{event_description}\"" }
				id => "message-0315012552"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012552"
					"[rsa][message][id1]" => "0315012552"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012552:01
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> identidx=<id> {serial|sessionid}=<fld1> srcip=<saddr> {srcport|sport}=<sport> {srcintf|src_int}=<sinterface> {dstip|dst}=<daddr> {dstport|dport}=<dport> {dstintf|dst_int}=<dinterface> service={"<network_service>|<network_service>} {profiletype=<rule_template> profile=<rulename>|profile=<rulename>} status=<event_state> {reqtype|req_type}=<fld8> msg="<event_description>" sentbyte=<sbytes> rcvdbyte=<rbytes>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+(srcport|sport)=(?<sport>[^\s]*)[\s]+(srcintf|src_int)=(?<sinterface>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dstport|dport)=(?<dport>[^\s]*)[\s]+(dstintf|dst_int)=(?<dinterface>[^\s]*)[\s]+service=(\"(?<network_service>[^\s]*)|(?<network_service>[^\s]*))[\s]+(profiletype=(?<rule_template>[^\s]*)[\s]+profile=(?<rulename>[^\s]*)|profile=(?<rulename>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+(reqtype|req_type)=(?<fld8>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>.*)$" }
				id => "message-0315012552:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012552:01"
					"[rsa][message][id1]" => "0315012552:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012552:02
		# line in RSA: vd=<vsys> policyid=<policy_id> sessionid=<sessionid> user=<username> srcip=<saddr> srcport=<sport>srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> hostname=<hostname> action=<action> reqtype=<fld18> msg=<event_description> sentbyte=<sbytes> rcvdbyte=<rbytes> url=<url> group=<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} sessionid=%{sessionid} user=%{username} srcip=%{saddr} srcport=%{sport}srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} hostname=%{hostname} action=%{action} reqtype=%{fld18} msg=%{event_description} sentbyte=%{sbytes} rcvdbyte=%{rbytes} url=%{url} group=%{group}" }
				id => "message-0315012552:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012552:02"
					"[rsa][message][id1]" => "0315012552:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0038000005" {
		# MESSAGE 0038000005:01
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} SN=<serial_number> status=<event_state> policyid=<policy_id> dst_country="<location_dst>" { src_country="<location_src>" dir_disp=<fld10> | dir_disp=<fld10> } tran_disp=<fld11> service=<network_service> proto=<fld70> duration=<duration> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+dst_country=\"(?<location_dst>[^\"]*)\"[\s]+([\s]*src_country=\"(?<location_src>[^\"]*)\"[\s]+dir_disp=(?<fld10>[^\s]*)[\s]+|[\s]*dir_disp=(?<fld10>[^\s]*)[\s]+)[\s]+tran_disp=(?<fld11>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>.*)$" }
				id => "message-0038000005:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000005:01"
					"[rsa][message][id1]" => "0038000005:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0038000005
		# line in RSA: status=<event_state> vd={"<vsys>"|<vsys>} dir_disp=<fld51> tran_disp=<fld52> src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> {dst_country=<location_dst> src_country=<location_src>|dst_country=<location_dst>} dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> tran_sip=<fld14> tran_sport=<fld15> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld13> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> sent_pkt=<fld53> rcvd_pkt=<fld54> vpn=<fld22> {vpn_type=<fld23> vpn_tunnel=<fld24>|vpn_tunnel=<fld24>} src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} SN=<serial_number> app={"<obj_name>"|<obj_name>} app_cat=<fld25> user={"<username>"|<username>} group={"<group>"|<group>} carrier_ep=<fld26> {profilegroup=<rule_group> subapp=<fld34> subappcat=<fld35>|profilegroup=<rule_group>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+dir_disp=(?<fld51>[^\s]*)[\s]+tran_disp=(?<fld52>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+(dst_country=(?<location_dst>[^\s]*)[\s]+src_country=(?<location_src>[^\s]*)|dst_country=(?<location_dst>[^\s]*))[\s]+dst_port=(?<dport>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+tran_sip=(?<fld14>[^\s]*)[\s]+tran_sport=(?<fld15>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld13>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld16>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld17>[^\s]*)[\s]+perip_drop=(?<fld18>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld20>[^\s]*)[\s]+perip_name=(?<fld21>[^\s]*)[\s]+sent_pkt=(?<fld53>[^\s]*)[\s]+rcvd_pkt=(?<fld54>[^\s]*)[\s]+vpn=(?<fld22>[^\s]*)[\s]+(vpn_type=(?<fld23>[^\s]*)[\s]+vpn_tunnel=(?<fld24>[^\s]*)|vpn_tunnel=(?<fld24>[^\s]*))[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+SN=(?<serial_number>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+app_cat=(?<fld25>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+carrier_ep=(?<fld26>[^\s]*)[\s]+(profilegroup=(?<rule_group>[^\s]*)[\s]+subapp=(?<fld34>[^\s]*)[\s]+subappcat=(?<fld35>.*)|profilegroup=(?<rule_group>.*))$" }
				id => "message-0038000005"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000005"
					"[rsa][message][id1]" => "0038000005"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0038000006" {
		# MESSAGE 0038000006:01
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int=<sinterface> dst=<daddr> dst_port=<dport> dst_int=<dinterface> SN=<serial_number> status=<event_state> policyid=<policy_id> { dst_country="<location_dst>" src_country="<location_src>" | dst_country="<location_dst>" } service=<network_service> proto=<fld70> duration=<duration> sent=<sbytes> rcvd=<rbytes> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+src_country=\"(?<location_src>[^\"]*)\"[\s]+|[\s]*dst_country=\"(?<location_dst>[^\"]*)\"[\s]+)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0038000006:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000006:01"
					"[rsa][message][id1]" => "0038000006:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0038000006
		# line in RSA: status=<event_state> vd="<vsys>" src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_country=<location_dst> dst_port=<dport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld13> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> vpn_type=<fld23> vpn_tunnel=<fld24> src_int="<sinterface>" dst_int="<dinterface>" SN=<serial_number> app={"<obj_name>"|<obj_name>} app_cat=<fld25> user="<username>" group="<group>" msg="<event_description>" carrier_ep=<fld26> profilegroup="<rule_group>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_country=(?<location_dst>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld13>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld16>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld17>[^\s]*)[\s]+perip_drop=(?<fld18>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld20>[^\s]*)[\s]+perip_name=(?<fld21>[^\s]*)[\s]+vpn=(?<fld22>[^\s]*)[\s]+vpn_type=(?<fld23>[^\s]*)[\s]+vpn_tunnel=(?<fld24>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+SN=(?<serial_number>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+app_cat=(?<fld25>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+carrier_ep=(?<fld26>[^\s]*)[\s]+profilegroup=\"(?<rule_group>[^\"]*)\"$" }
				id => "message-0038000006"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000006"
					"[rsa][message][id1]" => "0038000006"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:m:s" ] }
			}
		}
		# MESSAGE 0038000006:02
		# line in RSA: status=<event_state> vd=<vsys> src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_country=<location_dst> src_country={"<location_src>"|<location_src>} dst_port=<dport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld13> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> vpn_tunnel=<fld24> src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> app={"<obj_name>"|<obj_name>} app_cat=<fld25> user=<username> group=<group> msg="<event_description>" carrier_ep=<fld26> profilegroup=<rule_group> subapp=<fld27> subappcat=<fld28>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_country=(?<location_dst>[^\s]*)[\s]+src_country=(\"(?<location_src>[^\"]*)\"|(?<location_src>[^\s]*))[\s]+dst_port=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld13>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld16>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld17>[^\s]*)[\s]+perip_drop=(?<fld18>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld20>[^\s]*)[\s]+perip_name=(?<fld21>[^\s]*)[\s]+vpn=(?<fld22>[^\s]*)[\s]+vpn_tunnel=(?<fld24>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+SN=(?<serial_number>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+app_cat=(?<fld25>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+carrier_ep=(?<fld26>[^\s]*)[\s]+profilegroup=(?<rule_group>[^\s]*)[\s]+subapp=(?<fld27>[^\s]*)[\s]+subappcat=(?<fld28>.*)$" }
				id => "message-0038000006:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000006:02"
					"[rsa][message][id1]" => "0038000006:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0038000007" {
		# MESSAGE 0038000007
		# line in RSA: status=<event_state> vd={"<vsys>"|<vsys>} src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_country=<location_dst> dst_port=<dport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld45> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> {vpn_type=<fld23> vpn_tunnel=<fld24>|vpn_tunnel=<fld24>} src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} SN=<serial_number> app={"<obj_name>"|<obj_name>} app_cat=<fld25> user={"<username>"|<username>} group={"<group>"|<group>} msg="<event_description>" carrier_ep=<fld26> {profilegroup=<rule_group> subapp=<fld27> subappcat=<fld28>|profilegroup="<rule_group>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_country=(?<location_dst>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld45>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld16>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld17>[^\s]*)[\s]+perip_drop=(?<fld18>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld20>[^\s]*)[\s]+perip_name=(?<fld21>[^\s]*)[\s]+vpn=(?<fld22>[^\s]*)[\s]+(vpn_type=(?<fld23>[^\s]*)[\s]+vpn_tunnel=(?<fld24>[^\s]*)|vpn_tunnel=(?<fld24>[^\s]*))[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+SN=(?<serial_number>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+app_cat=(?<fld25>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+carrier_ep=(?<fld26>[^\s]*)[\s]+(profilegroup=(?<rule_group>[^\s]*)[\s]+subapp=(?<fld27>[^\s]*)[\s]+subappcat=(?<fld28>.*)|profilegroup=\"(?<rule_group>[^\"]*)\")$" }
				id => "message-0038000007"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000007"
					"[rsa][message][id1]" => "0038000007"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0038000007:01
		# line in RSA: vd=<vsys> src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} SN=<serial_number> status=<event_state> policyid=<policy_id> { dst_country=<location_dst> src_country=<location_src> | dst_country=<location_dst> } service=<network_service> proto=<fld70> duration=<duration> sent=<sbytes> rcvd=<rbytes> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+SN=(?<serial_number>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*dst_country=(?<location_dst>[^\s]*)[\s]+src_country=(?<location_src>[^\s]*)[\s]+|[\s]*dst_country=(?<location_dst>[^\s]*)[\s]+)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0038000007:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000007:01"
					"[rsa][message][id1]" => "0038000007:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0038000007:02
		# line in RSA: status=<event_state> vd={"<vsys>"|<vsys>} src=<saddr> srcname=<shost> src_port=<sport> dst=<daddr> dstname=<dhost> dst_country=<location_dst> dst_port=<dport> service=<network_service> proto=<fld70> app_type=<obj_type> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld45> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> {vpn_type=<fld23> vpn_tunnel=<fld24>|vpn_tunnel=<fld24>} src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} SN=<serial_number> app={"<obj_name>"|<obj_name>} app_cat=<fld25> user={"<username>"|<username>} group={"<group>"|<group>} msg=<event_description> carrier_ep=<fld26> {profilegroup=<rule_group> subapp=<fld27> subappcat=<fld28>|profilegroup="<rule_group>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^status=(?<event_state>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+dst_country=(?<location_dst>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld45>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+shaper_drop_sent=(?<fld16>[^\s]*)[\s]+shaper_drop_rcvd=(?<fld17>[^\s]*)[\s]+perip_drop=(?<fld18>[^\s]*)[\s]+shaper_sent_name=(?<fld19>[^\s]*)[\s]+shaper_rcvd_name=(?<fld20>[^\s]*)[\s]+perip_name=(?<fld21>[^\s]*)[\s]+vpn=(?<fld22>[^\s]*)[\s]+(vpn_type=(?<fld23>[^\s]*)[\s]+vpn_tunnel=(?<fld24>[^\s]*)|vpn_tunnel=(?<fld24>[^\s]*))[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+SN=(?<serial_number>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+app_cat=(?<fld25>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+msg=(?<event_description>[^\s]*)[\s]+carrier_ep=(?<fld26>[^\s]*)[\s]+(profilegroup=(?<rule_group>[^\s]*)[\s]+subapp=(?<fld27>[^\s]*)[\s]+subappcat=(?<fld28>.*)|profilegroup=\"(?<rule_group>[^\"]*)\")$" }
				id => "message-0038000007:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0038000007:02"
					"[rsa][message][id1]" => "0038000007:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user=<username> group=<group> policyid=<policy_id> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<dclass_counter1> rcvd_pkt=<dclass_counter2> src_port=<sport> dst_port=<dport> vpn=<fld31> tran_ip=<stransaddr> tran_port=<stransport> dir_disp={ org | replay } tran_disp={ noop | snat | dnat }
	else if [logstash][msgparser][id] == "msgParserId44" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+sent_pkt=(?<dclass_counter1>[^\s]*)[\s]+rcvd_pkt=(?<dclass_counter2>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+vpn=(?<fld31>[^\s]*)[\s]+tran_ip=(?<stransaddr>[^\s]*)[\s]+tran_port=(?<stransport>[^\s]*)[\s]+dir_disp=([\s]*org[\s]+|[\s]*replay[\s]+)[\s]+tran_disp=([\s]*noop[\s]+|[\s]*snat[\s]+|[\s]*dnat[\s]+)$" }
			id => "msgParserId44"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId45
	# line in RSA: {vd=<vsys> SN=|SN=}<serial_number> duration=<duration> user=<username> group=<group> policyid=<policy_id> proto=<fld70> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes>
	else if [logstash][msgparser][id] == "msgParserId45" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+SN=|SN=)(?<serial_number>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+app_type=(?<obj_type>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>.*)$" }
			id => "msgParserId45"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0102020001" {
		# MESSAGE 0102020001
		# line in RSA: {vd=<vsys> gateway=|gateway=}<fld27> interface=<interface> status=<event_state>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+gateway=|gateway=)(?<fld27>[^\s]*)[\s]+interface=(?<interface>[^\s]*)[\s]+status=(?<event_state>.*)$" }
				id => "message-0102020001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102020001"
					"[rsa][message][id1]" => "0102020001"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102020001:01
		# line in RSA: {vd=<vsys> modem|modem}: unable to open modem device - check hardware
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+modem|modem):[\s]+unable[\s]+to[\s]+open[\s]+modem[\s]+device[\s]+\-[\s]+check[\s]+hardware$" }
				id => "message-0102020001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102020001:01"
					"[rsa][message][id1]" => "0102020001:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102020001:02
		# line in RSA: {vd=<vsys> modem|modem}: Redial limit exceeded... giving up
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+modem|modem):[\s]+Redial[\s]+limit[\s]+exceeded\.\.\.[\s]+giving[\s]+up$" }
				id => "message-0102020001:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102020001:02"
					"[rsa][message][id1]" => "0102020001:02"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: {vd=<vsys> msg=|msg=}"<event_description>"
	else if [logstash][msgparser][id] == "msgParserId49" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+msg=|msg=)\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId49"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId50
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> }action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId50" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId50"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId51
	# line in RSA: {vd=<vsys> Out|Out} of memory in <fld3>
	else if [logstash][msgparser][id] == "msgParserId51" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Out|Out)[\s]+of[\s]+memory[\s]+in[\s]+(?<fld3>.*)$" }
			id => "msgParserId51"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA: {vd=<vsys> Interface|Interface} <interface> not found in <fld3>
	else if [logstash][msgparser][id] == "msgParserId52" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Interface|Interface)[\s]+(?<interface>[^\s]*)[\s]+not[\s]+found[\s]+in[\s]+(?<fld3>.*)$" }
			id => "msgParserId52"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId53
	# line in RSA: {vd=<vsys> using|using} Mobile IPv6 extensions
	else if [logstash][msgparser][id] == "msgParserId53" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+using|using)[\s]+Mobile[\s]+IPv6[\s]+extensions$" }
			id => "msgParserId53"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA: {vd=<vsys> MinRtrAdvInterval|MinRtrAdvInterval} for <interface> must be between <fld3> and <fld4>
	else if [logstash][msgparser][id] == "msgParserId54" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MinRtrAdvInterval|MinRtrAdvInterval)[\s]+for[\s]+(?<interface>[^\s]*)[\s]+must[\s]+be[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>.*)$" }
			id => "msgParserId54"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: {vd=<vsys> MinRtrAdvInterval|MinRtrAdvInterval} must be between <fld3> and <fld4> for <interface>
	else if [logstash][msgparser][id] == "msgParserId55" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MinRtrAdvInterval|MinRtrAdvInterval)[\s]+must[\s]+be[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId55"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId56
	# line in RSA: {vd=<vsys> MaxRtrAdvInterval|MaxRtrAdvInterval} for <interface> must be between <fld3> and <fld4>
	else if [logstash][msgparser][id] == "msgParserId56" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MaxRtrAdvInterval|MaxRtrAdvInterval)[\s]+for[\s]+(?<interface>[^\s]*)[\s]+must[\s]+be[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>.*)$" }
			id => "msgParserId56"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId57
	# line in RSA: {vd=<vsys> MaxRtrAdvInterval|MaxRtrAdvInterval} must be between <fld3> and <fld4> for <interface>
	else if [logstash][msgparser][id] == "msgParserId57" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MaxRtrAdvInterval|MaxRtrAdvInterval)[\s]+must[\s]+be[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId57"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId58
	# line in RSA: {vd=<vsys> AdvLinkMTU|AdvLinkMTU} must be zero or between <fld3> and <fld4> for <interface>
	else if [logstash][msgparser][id] == "msgParserId58" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvLinkMTU|AdvLinkMTU)[\s]+must[\s]+be[\s]+zero[\s]+or[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId58"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId59
	# line in RSA: {vd=<vsys> AdvLinkMTU|AdvLinkMTU} must be zero or greater than <fld3> for <interface>
	else if [logstash][msgparser][id] == "msgParserId59" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvLinkMTU|AdvLinkMTU)[\s]+must[\s]+be[\s]+zero[\s]+or[\s]+greater[\s]+than[\s]+(?<fld3>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId59"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId60
	# line in RSA: {vd=<vsys> AdvReachableTime|AdvReachableTime} must be less than <fld3> for <interface>
	else if [logstash][msgparser][id] == "msgParserId60" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvReachableTime|AdvReachableTime)[\s]+must[\s]+be[\s]+less[\s]+than[\s]+(?<fld3>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId60"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId61
	# line in RSA: {vd=<vsys> AdvCurHopLimit|AdvCurHopLimit} must not be greater than <fld3> for <interface>
	else if [logstash][msgparser][id] == "msgParserId61" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvCurHopLimit|AdvCurHopLimit)[\s]+must[\s]+not[\s]+be[\s]+greater[\s]+than[\s]+(?<fld3>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId61"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId62
	# line in RSA: {vd=<vsys> AdvDefaultLifetime|AdvDefaultLifetime} for <interface> must be zero or between <fld3> and <fld4>
	else if [logstash][msgparser][id] == "msgParserId62" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvDefaultLifetime|AdvDefaultLifetime)[\s]+for[\s]+(?<interface>[^\s]*)[\s]+must[\s]+be[\s]+zero[\s]+or[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>.*)$" }
			id => "msgParserId62"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId63
	# line in RSA: {vd=<vsys> HomeAgentLifetime|HomeAgentLifetime} must be between <fld3> and <fld4> for <interface>
	else if [logstash][msgparser][id] == "msgParserId63" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+HomeAgentLifetime|HomeAgentLifetime)[\s]+must[\s]+be[\s]+between[\s]+(?<fld3>[^\s]*)[\s]+and[\s]+(?<fld4>[^\s]*)[\s]+for[\s]+(?<interface>.*)$" }
			id => "msgParserId63"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId64
	# line in RSA: {vd=<vsys> AdvHomeAgentFlag|AdvHomeAgentFlag} must be set with HomeAgentInfo
	else if [logstash][msgparser][id] == "msgParserId64" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvHomeAgentFlag|AdvHomeAgentFlag)[\s]+must[\s]+be[\s]+set[\s]+with[\s]+HomeAgentInfo$" }
			id => "msgParserId64"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId65
	# line in RSA: {vd=<vsys> invalid|invalid} prefix length for <fld3>
	else if [logstash][msgparser][id] == "msgParserId65" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+invalid|invalid)[\s]+prefix[\s]+length[\s]+for[\s]+(?<fld3>.*)$" }
			id => "msgParserId65"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId66
	# line in RSA: {vd=<vsys> AdvValidLifetime|AdvValidLifetime} must be greater than AdvPreferredLifetime for <fld3>
	else if [logstash][msgparser][id] == "msgParserId66" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+AdvValidLifetime|AdvValidLifetime)[\s]+must[\s]+be[\s]+greater[\s]+than[\s]+AdvPreferredLifetime[\s]+for[\s]+(?<fld3>.*)$" }
			id => "msgParserId66"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId67
	# line in RSA: {vd=<vsys> can|can}'t create socket(AF_INET6): <fld3>
	else if [logstash][msgparser][id] == "msgParserId67" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+can|can)'t[\s]+create[\s]+socket\(AF_INET6\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId67"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId68
	# line in RSA: {vd=<vsys> setsockopt|setsockopt}(IPV6_PKTINFO): <fld3>
	else if [logstash][msgparser][id] == "msgParserId68" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+setsockopt|setsockopt)\(IPV6_PKTINFO\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId68"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId69
	# line in RSA: {vd=<vsys> setsockopt|setsockopt}(IPV6_CHECKSUM): <fld3>
	else if [logstash][msgparser][id] == "msgParserId69" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+setsockopt|setsockopt)\(IPV6_CHECKSUM\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId69"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId70
	# line in RSA: {vd=<vsys> setsockopt|setsockopt}(IPV6_UNICAST_HOPS): <fld3>
	else if [logstash][msgparser][id] == "msgParserId70" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+setsockopt|setsockopt)\(IPV6_UNICAST_HOPS\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId70"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId71
	# line in RSA: {vd=<vsys> setsockopt|setsockopt}(IPV6_MULTICAST_HOPS): <fld3>
	else if [logstash][msgparser][id] == "msgParserId71" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+setsockopt|setsockopt)\(IPV6_MULTICAST_HOPS\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId71"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId72
	# line in RSA: {vd=<vsys> setsockopt|setsockopt}(IPV6_HOPLIMIT): <fld3>
	else if [logstash][msgparser][id] == "msgParserId72" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+setsockopt|setsockopt)\(IPV6_HOPLIMIT\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId72"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId73
	# line in RSA: {vd=<vsys> setsockopt|setsockopt}(ICMPV6_FILTER): <fld3>
	else if [logstash][msgparser][id] == "msgParserId73" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+setsockopt|setsockopt)\(ICMPV6_FILTER\):[\s]+(?<fld3>.*)$" }
			id => "msgParserId73"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId74
	# line in RSA: {vd=<vsys> radvd|radvd} receive signal=<fld3>\n
	else if [logstash][msgparser][id] == "msgParserId74" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+radvd|radvd)[\s]+receive[\s]+signal=(?<fld3>[^\\]*)\\n$" }
			id => "msgParserId74"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId75
	# line in RSA: {vd=<vsys> Can|Can} not create query to interface at <fld3>:<fld4>!
	else if [logstash][msgparser][id] == "msgParserId75" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Can|Can)[\s]+not[\s]+create[\s]+query[\s]+to[\s]+interface[\s]+at[\s]+(?<fld3>[^:]*):(?<fld4>[^!]*)!$" }
			id => "msgParserId75"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId76
	# line in RSA: {vd=<vsys> Internal|Internal} error in cmf_query_for_each()!
	else if [logstash][msgparser][id] == "msgParserId76" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Internal|Internal)[\s]+error[\s]+in[\s]+cmf_query_for_each\(\)!$" }
			id => "msgParserId76"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId77
	# line in RSA: {vd=<vsys> Interface|Interface} <interface> not found in the list!
	else if [logstash][msgparser][id] == "msgParserId77" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Interface|Interface)[\s]+(?<interface>[^\s]*)[\s]+not[\s]+found[\s]+in[\s]+the[\s]+list!$" }
			id => "msgParserId77"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId78
	# line in RSA: {vd=<vsys> Interface|Interface} <interface> reloaded!
	else if [logstash][msgparser][id] == "msgParserId78" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Interface|Interface)[\s]+(?<interface>[^\s]*)[\s]+reloaded!$" }
			id => "msgParserId78"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId79
	# line in RSA: {vd=<vsys> received|received} packet with no pkt_info!
	else if [logstash][msgparser][id] == "msgParserId79" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+packet[\s]+with[\s]+no[\s]+pkt_info!$" }
			id => "msgParserId79"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId80
	# line in RSA: {vd=<vsys> received|received} icmpv6 packet with invalid length: <fld3>
	else if [logstash][msgparser][id] == "msgParserId80" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+icmpv6[\s]+packet[\s]+with[\s]+invalid[\s]+length:[\s]+(?<fld3>.*)$" }
			id => "msgParserId80"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId81
	# line in RSA: {vd=<vsys> icmpv6|icmpv6} filter failed
	else if [logstash][msgparser][id] == "msgParserId81" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+icmpv6|icmpv6)[\s]+filter[\s]+failed$" }
			id => "msgParserId81"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId82
	# line in RSA: {vd=<vsys> received|received} icmpv6 RA packet with invalid length: <fld3>
	else if [logstash][msgparser][id] == "msgParserId82" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+icmpv6[\s]+RA[\s]+packet[\s]+with[\s]+invalid[\s]+length:[\s]+(?<fld3>.*)$" }
			id => "msgParserId82"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId83
	# line in RSA: {vd=<vsys> received|received} icmpv6 RA packet with non-linklocal source address
	else if [logstash][msgparser][id] == "msgParserId83" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+icmpv6[\s]+RA[\s]+packet[\s]+with[\s]+non\-linklocal[\s]+source[\s]+address$" }
			id => "msgParserId83"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId84
	# line in RSA: {vd=<vsys> received|received} icmpv6 RS packet with invalid length: <fld3>
	else if [logstash][msgparser][id] == "msgParserId84" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+icmpv6[\s]+RS[\s]+packet[\s]+with[\s]+invalid[\s]+length:[\s]+(?<fld3>.*)$" }
			id => "msgParserId84"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId85
	# line in RSA: {vd=<vsys> received|received} icmpv6 RS/RA packet with invalid code: <fld3>
	else if [logstash][msgparser][id] == "msgParserId85" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+icmpv6[\s]+RS/RA[\s]+packet[\s]+with[\s]+invalid[\s]+code:[\s]+(?<fld3>.*)$" }
			id => "msgParserId85"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId86
	# line in RSA: {vd=<vsys> received|received} RS or RA with invalid hoplimit <fld3> from <interface>
	else if [logstash][msgparser][id] == "msgParserId86" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+RS[\s]+or[\s]+RA[\s]+with[\s]+invalid[\s]+hoplimit[\s]+(?<fld3>[^\s]*)[\s]+from[\s]+(?<interface>.*)$" }
			id => "msgParserId86"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId87
	# line in RSA: {vd=<vsys> our|our} AdvCurHopLimit on <interface> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId87" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvCurHopLimit[\s]+on[\s]+(?<interface>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId87"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId88
	# line in RSA: {vd=<vsys> our|our} AdvManagedFlag on <interface> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId88" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvManagedFlag[\s]+on[\s]+(?<interface>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId88"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId89
	# line in RSA: {vd=<vsys> our|our} AdvOtherConfigFlag on <interface> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId89" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvOtherConfigFlag[\s]+on[\s]+(?<interface>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId89"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId90
	# line in RSA: {vd=<vsys> our|our} AdvReachableTime on <interface> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId90" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvReachableTime[\s]+on[\s]+(?<interface>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId90"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId91
	# line in RSA: {vd=<vsys> our|our} AdvRetransTimer on <interface> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId91" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvRetransTimer[\s]+on[\s]+(?<interface>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId91"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA: {vd=<vsys> trailing|trailing} garbage in RA on <interface> from <fld3>
	else if [logstash][msgparser][id] == "msgParserId92" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+trailing|trailing)[\s]+garbage[\s]+in[\s]+RA[\s]+on[\s]+(?<interface>[^\s]*)[\s]+from[\s]+(?<fld3>.*)$" }
			id => "msgParserId92"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId93
	# line in RSA: {vd=<vsys> zero|zero} length option in RA on <interface> from <fld3>
	else if [logstash][msgparser][id] == "msgParserId93" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+zero|zero)[\s]+length[\s]+option[\s]+in[\s]+RA[\s]+on[\s]+(?<interface>[^\s]*)[\s]+from[\s]+(?<fld3>.*)$" }
			id => "msgParserId93"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId94
	# line in RSA: {vd=<vsys> option|option} length greater than total length in RA on <interface> from <fld3>
	else if [logstash][msgparser][id] == "msgParserId94" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+option|option)[\s]+length[\s]+greater[\s]+than[\s]+total[\s]+length[\s]+in[\s]+RA[\s]+on[\s]+(?<interface>[^\s]*)[\s]+from[\s]+(?<fld3>.*)$" }
			id => "msgParserId94"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId95
	# line in RSA: {vd=<vsys> our|our} AdvLinkMTU on <interface> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId95" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvLinkMTU[\s]+on[\s]+(?<interface>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId95"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId96
	# line in RSA: {vd=<vsys> our|our} AdvValidLifetime on <interface> for <fld1> doesn't agree with <fld3>
	else if [logstash][msgparser][id] == "msgParserId96" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvValidLifetime[\s]+on[\s]+(?<interface>[^\s]*)[\s]+for[\s]+(?<fld1>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld3>.*)$" }
			id => "msgParserId96"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId97
	# line in RSA: {vd=<vsys> our|our} AdvPreferredLifetime on <interface> for <fld3> doesn't agree with <fld4>
	else if [logstash][msgparser][id] == "msgParserId97" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+our|our)[\s]+AdvPreferredLifetime[\s]+on[\s]+(?<interface>[^\s]*)[\s]+for[\s]+(?<fld3>[^\s]*)[\s]+doesn't[\s]+agree[\s]+with[\s]+(?<fld4>.*)$" }
			id => "msgParserId97"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId98
	# line in RSA: {vd=<vsys> invalid|invalid} option <fld3> in RA on <interface> from <fld4>
	else if [logstash][msgparser][id] == "msgParserId98" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+invalid|invalid)[\s]+option[\s]+(?<fld3>[^\s]*)[\s]+in[\s]+RA[\s]+on[\s]+(?<interface>[^\s]*)[\s]+from[\s]+(?<fld4>.*)$" }
			id => "msgParserId98"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId99
	# line in RSA: {vd=<vsys> radvd|radvd} started\n.
	else if [logstash][msgparser][id] == "msgParserId99" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+radvd|radvd)[\s]+started\\n\.$" }
			id => "msgParserId99"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId100
	# line in RSA: {vd=<vsys> recvmsg|recvmsg}: <fld3>
	else if [logstash][msgparser][id] == "msgParserId100" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+recvmsg|recvmsg):[\s]+(?<fld3>.*)$" }
			id => "msgParserId100"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId101
	# line in RSA: {vd=<vsys> received|received} a bogus IPV6_HOPLIMIT from the kernel! len=<fld3>, data=<fld4>
	else if [logstash][msgparser][id] == "msgParserId101" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+a[\s]+bogus[\s]+IPV6_HOPLIMIT[\s]+from[\s]+the[\s]+kernel![\s]+len=(?<fld3>[^,]*),[\s]+data=(?<fld4>.*)$" }
			id => "msgParserId101"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId102
	# line in RSA: {vd=<vsys> received|received} a bogus IPV6_PKTINFO from the kernel! len=<fld3>, index=<fld4>
	else if [logstash][msgparser][id] == "msgParserId102" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+received|received)[\s]+a[\s]+bogus[\s]+IPV6_PKTINFO[\s]+from[\s]+the[\s]+kernel![\s]+len=(?<fld3>[^,]*),[\s]+index=(?<fld4>.*)$" }
			id => "msgParserId102"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId103
	# line in RSA: {vd=<vsys> problem|problem} checking all-routers membership on <interface>
	else if [logstash][msgparser][id] == "msgParserId103" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+problem|problem)[\s]+checking[\s]+all\-routers[\s]+membership[\s]+on[\s]+(?<interface>.*)$" }
			id => "msgParserId103"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId104
	# line in RSA: {vd=<vsys> sendmsg|sendmsg}: <fld3>
	else if [logstash][msgparser][id] == "msgParserId104" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+sendmsg|sendmsg):[\s]+(?<fld3>.*)$" }
			id => "msgParserId104"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId105
	# line in RSA: vd=<vsys> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
			id => "msgParserId105"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId106
	# line in RSA: {vd=<vsys> FortiGuard|FortiGuard} category is updated
	else if [logstash][msgparser][id] == "msgParserId106" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+FortiGuard|FortiGuard)[\s]+category[\s]+is[\s]+updated$" }
			id => "msgParserId106"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0102020101" {
		# MESSAGE 0102020101
		# line in RSA: {vd=<vsys> act=upload|act=upload} status=<event_state> file=<filename> user=<username> server=<daddr> port=<dport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+act=upload|act=upload)[\s]+status=(?<event_state>[^\s]*)[\s]+file=(?<filename>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+server=(?<daddr>[^\s]*)[\s]+port=(?<dport>.*)$" }
				id => "message-0102020101"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102020101"
					"[rsa][message][id1]" => "0102020101"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102020101:01
		# line in RSA: {vd=<vsys> act=|act=}<action> error=<resultcode> file=<filename> user=<username> server=<daddr> port=<dport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+act=|act=)(?<action>[^\s]*)[\s]+error=(?<resultcode>[^\s]*)[\s]+file=(?<filename>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+server=(?<daddr>[^\s]*)[\s]+port=(?<dport>.*)$" }
				id => "message-0102020101:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102020101:01"
					"[rsa][message][id1]" => "0102020101:01"
					"[event][categoryid]" => "1601000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102020101:02
		# line in RSA: vd=<vsys> Fortiguard license is expired
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} Fortiguard license is expired" }
				id => "message-0102020101:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102020101:02"
					"[rsa][message][id1]" => "0102020101:02"
					"[event][categoryid]" => "1608010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId110
	# line in RSA: {vd=<vsys> version|version}-<fld3> is not supported
	else if [logstash][msgparser][id] == "msgParserId110" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+version|version)\-(?<fld3>[^\s]*)[\s]+is[\s]+not[\s]+supported$" }
			id => "msgParserId110"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId111
	# line in RSA: {vd=<vsys> Other|Other} request - <fld3> than http is not supported
	else if [logstash][msgparser][id] == "msgParserId111" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Other|Other)[\s]+request[\s]+\-[\s]+(?<fld3>[^\s]*)[\s]+than[\s]+http[\s]+is[\s]+not[\s]+supported$" }
			id => "msgParserId111"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId112
	# line in RSA: {vd=<vsys> Socket|Socket}() failed: <fld3>
	else if [logstash][msgparser][id] == "msgParserId112" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Socket|Socket)\(\)[\s]+failed:[\s]+(?<fld3>.*)$" }
			id => "msgParserId112"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId113
	# line in RSA: {vd=<vsys> failed|failed} to create a <fld3> URL request
	else if [logstash][msgparser][id] == "msgParserId113" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+failed|failed)[\s]+to[\s]+create[\s]+a[\s]+(?<fld3>[^\s]*)[\s]+URL[\s]+request$" }
			id => "msgParserId113"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId114
	# line in RSA: {vd=<vsys> id=|id=}<fld3> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId114" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+id=|id=)(?<fld3>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId114"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId115
	# line in RSA: <fld3> failed to send rating result
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "%{fld3} failed to send rating result" }
			id => "msgParserId115"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId116
	# line in RSA: {vd=<vsys> service=|service=}<network_service> conserve=on total=<fld3> free=<fld4> entermargin=<fld5> exitmargin=<fld6>
	else if [logstash][msgparser][id] == "msgParserId116" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+service=|service=)(?<network_service>[^\s]*)[\s]+conserve=on[\s]+total=(?<fld3>[^\s]*)[\s]+free=(?<fld4>[^\s]*)[\s]+entermargin=(?<fld5>[^\s]*)[\s]+exitmargin=(?<fld6>.*)$" }
			id => "msgParserId116"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId117
	# line in RSA: {vd=<vsys> service=|service=}<network_service> conserve=exit total=<fld3> free=<fld4> entermargin=<fld5> exitmargin=<fld6>
	else if [logstash][msgparser][id] == "msgParserId117" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+service=|service=)(?<network_service>[^\s]*)[\s]+conserve=exit[\s]+total=(?<fld3>[^\s]*)[\s]+free=(?<fld4>[^\s]*)[\s]+entermargin=(?<fld5>[^\s]*)[\s]+exitmargin=(?<fld6>.*)$" }
			id => "msgParserId117"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId118
	# line in RSA: {vd=<vsys> Fortigate|Fortigate} report: replay packet is detected, <fld3>
	else if [logstash][msgparser][id] == "msgParserId118" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Fortigate|Fortigate)[\s]+report:[\s]+replay[\s]+packet[\s]+is[\s]+detected,[\s]+(?<fld3>.*)$" }
			id => "msgParserId118"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId119
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId119" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId119"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0101023003" {
		# MESSAGE 0101023003
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> user="<username>" group="<group>" status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023003"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023003"
					"[rsa][message][id1]" => "0101023003"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023003:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023003:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023003:01"
					"[rsa][message][id1]" => "0101023003:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId121
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId121" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId121"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId122
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId122" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId122"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0101037132" {
		# MESSAGE 0101037132
		# line in RSA: vd=<vsys> msg="<event_description>" action=<action> rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf=<sinterface> cookies=<fld10> user={"<username>"|<username>} group={"<group>"|<group>} xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel=<fld16> status=<event_state> error_num=<fld36> spi=<fld37> seq=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=(?<fld16>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<fld36>[^\s]*)[\s]+spi=(?<fld37>[^\s]*)[\s]+seq=(?<fld38>.*)$" }
				id => "message-0101037132"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037132"
					"[rsa][message][id1]" => "0101037132"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037132:01
		# line in RSA: vd=<vsys> msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf=<sinterface> cookies=<fld10> user={"<username>"|<username>} group={"<group>"|<group>} xauthuser={"<c_username>"|<c_username>} xauthgroup=<group> assignip=<stransaddr> vpntunnel={"<node>"|<node>} status=<event_state> error_num=<fld36> spi=<fld37> seq=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+remport=(?<dport>[^\s]*)[\s]+locport=(?<sport>[^\s]*)[\s]+outintf=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+xauthuser=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauthgroup=(?<group>[^\s]*)[\s]+assignip=(?<stransaddr>[^\s]*)[\s]+vpntunnel=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<fld36>[^\s]*)[\s]+spi=(?<fld37>[^\s]*)[\s]+seq=(?<fld38>.*)$" }
				id => "message-0101037132:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037132:01"
					"[rsa][message][id1]" => "0101037132:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101023004" {
		# MESSAGE 0101023004
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> init=<fld11> mode={ aggressive | main | quick | xauth } user={"<username>"|<username>} group={"<group>"|<group>} stage=<fld12> dir=<direction> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+init=(?<fld11>[^\s]*)[\s]+mode=([\s]*aggressive[\s]+|[\s]*main[\s]+|[\s]*quick[\s]+|[\s]*xauth[\s]+)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+stage=(?<fld12>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023004"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023004"
					"[rsa][message][id1]" => "0101023004"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023004:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> init=<fld11> mode={ aggressive | main | quick } stage=<fld12> dir=<direction> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+init=(?<fld11>[^\s]*)[\s]+mode=([\s]*aggressive[\s]+|[\s]*main[\s]+|[\s]*quick[\s]+)[\s]+stage=(?<fld12>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023004:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023004:01"
					"[rsa][message][id1]" => "0101023004:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023004:02
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> init=<fld11> mode={ aggressive | main | quick } stage=<fld12> dir=<direction> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+init=(?<fld11>[^\s]*)[\s]+mode=([\s]*aggressive[\s]+|[\s]*main[\s]+|[\s]*quick[\s]+)[\s]+stage=(?<fld12>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023004:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023004:02"
					"[rsa][message][id1]" => "0101023004:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> status=<event_state> spi=<src_spi> seqno=<fld14> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId128" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+seqno=(?<fld14>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId128"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0101023006" {
		# MESSAGE 0101023006
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023006"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023006"
					"[rsa][message][id1]" => "0101023006"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023006:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> in_spi=<dst_spi> out_spi=<src_spi> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+in_spi=(?<dst_spi>[^\s]*)[\s]+out_spi=(?<src_spi>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023006:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023006:01"
					"[rsa][message][id1]" => "0101023006:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101023007" {
		# MESSAGE 0101023007
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> spi=<src_spi> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023007"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023007"
					"[rsa][message][id1]" => "0101023007"
					"[event][categoryid]" => "1603020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023007:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023007:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023007:01"
					"[rsa][message][id1]" => "0101023007:01"
					"[event][categoryid]" => "1603020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023007:02
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023007:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023007:02"
					"[rsa][message][id1]" => "0101023007:02"
					"[event][categoryid]" => "1603020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId133
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> {, spi= | spi= } <fld13> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId133" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+(,[\s]+spi=[\s]+|[\s]*spi=[\s]+)[\s]+(?<fld13>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId133"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId134
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> enc_spi=<fld14> dec_spi=<fld15> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId134" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+enc_spi=(?<fld14>[^\s]*)[\s]+dec_spi=(?<fld15>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId134"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId135
	# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> spi=<src_spi> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId135" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId135"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0101037131" {
		# MESSAGE 0101037131
		# line in RSA: vd=<vsys> msg="<event_description>" action=<action> rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf=<sinterface> cookies=<fld10> user={"<username>"|<username>} group={"<group>"|<group>} xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel=<fld16> status=<event_state> error_num=<fld36> spi=<fld37> seq=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=(?<fld16>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<fld36>[^\s]*)[\s]+spi=(?<fld37>[^\s]*)[\s]+seq=(?<fld38>.*)$" }
				id => "message-0101037131"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037131"
					"[rsa][message][id1]" => "0101037131"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037131:01
		# line in RSA: vd=<vsys> msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf=<sinterface> cookies=<fld10> user={"<username>"|<username>} group={"<group>"|<group>} xauthuser={"<c_username>"|<c_username>} xauthgroup={"<group>"|<group>} assignip=<stransaddr> vpntunnel={"<node>"|<node>} status=<event_state> error_num=<fld36> spi=<fld37> seq=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+remport=(?<dport>[^\s]*)[\s]+locport=(?<sport>[^\s]*)[\s]+outintf=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+xauthuser=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauthgroup=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+assignip=(?<stransaddr>[^\s]*)[\s]+vpntunnel=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<fld36>[^\s]*)[\s]+spi=(?<fld37>[^\s]*)[\s]+seq=(?<fld38>.*)$" }
				id => "message-0101037131:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037131:01"
					"[rsa][message][id1]" => "0101037131:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101023009" {
		# MESSAGE 0101023009:03
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> cookies=<fld10> action=<action> user={"<username>"|<username>} group={"<group>"|<group>} status=<event_state> error_num=<resultcode> spi=<src_spi> seq=<fld31> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<resultcode>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+seq=(?<fld31>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023009:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023009:03"
					"[rsa][message][id1]" => "0101023009:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023009
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> status=<event_state> error_num=<resultcode> spi=<src_spi> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<resultcode>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023009"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023009"
					"[rsa][message][id1]" => "0101023009"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023009:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> status=<event_state> error_num=<resultcode> spi=<src_spi> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<resultcode>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023009:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023009:01"
					"[rsa][message][id1]" => "0101023009:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023009:02
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> status=<event_state> error_num=<resultcode> spi=<src_spi> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+error_num=(?<resultcode>[^\s]*)[\s]+spi=(?<src_spi>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023009:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023009:02"
					"[rsa][message][id1]" => "0101023009:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101023010" {
		# MESSAGE 0101023010
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> cookies=<fld10> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023010"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023010"
					"[rsa][message][id1]" => "0101023010"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023010:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023010:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023010:01"
					"[rsa][message][id1]" => "0101023010:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101023011" {
		# MESSAGE 0101023011
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023011"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023011"
					"[rsa][message][id1]" => "0101023011"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023011:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld31> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=(?<sinterface>[^\s]*)[\s]+vpn_tunnel=(?<fld31>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023011:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023011:01"
					"[rsa][message][id1]" => "0101023011:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101023012" {
		# MESSAGE 0101023012:01
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if={ "<sinterface>" | <sinterface> } vpn_tunnel={ "<fld31>" | <fld31> } cookies=<fld10> action=<action> user="<username>" group="<group>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=([\s]*\"(?<sinterface>[^\"]*)\"[\s]+|[\s]*(?<sinterface>[^\s]*)[\s]+)[\s]+vpn_tunnel=([\s]*\"(?<fld31>[^\"]*)\"[\s]+|[\s]*(?<fld31>[^\s]*)[\s]+)[\s]+cookies=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023012:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023012:01"
					"[rsa][message][id1]" => "0101023012:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101023012
		# line in RSA: {vd=<vsys> loc_ip=|loc_ip=}<saddr> rem_ip=<daddr> rem_port=<dport> out_if={ "<sinterface>" | <sinterface> } vpn_tunnel={ "<fld31>" | <fld31> } action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+loc_ip=|loc_ip=)(?<saddr>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+out_if=([\s]*\"(?<sinterface>[^\"]*)\"[\s]+|[\s]*(?<sinterface>[^\s]*)[\s]+)[\s]+vpn_tunnel=([\s]*\"(?<fld31>[^\"]*)\"[\s]+|[\s]*(?<fld31>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101023012"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101023012"
					"[rsa][message][id1]" => "0101023012"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA: {vd=<vsys> dhcp_msg=|dhcp_msg=}<context> dir=<direction> mac=<smacaddr> ip=<hostip> lease=<duration_string> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId144" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+dhcp_msg=|dhcp_msg=)(?<context>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+mac=(?<smacaddr>[^\s]*)[\s]+ip=(?<hostip>[^\s]*)[\s]+lease=(?<duration_string>[^\s]*)[\s]+msg=(?<event_description>.*)$" }
			id => "msgParserId144"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0102026002" {
		# MESSAGE 0102026002
		# line in RSA: {vd=<vsys> No|No} shared network for network <fld3> (<fld4>).
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+No|No)[\s]+shared[\s]+network[\s]+for[\s]+network[\s]+(?<fld3>[^\s]*)[\s]+\((?<fld4>[^\)]*)\)\.$" }
				id => "message-0102026002"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102026002"
					"[rsa][message][id1]" => "0102026002"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102026002:01
		# line in RSA: {vd=<vsys> Address|Address} range <fld3> to <fld4>, netmask <fld5> spans <fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Address|Address)[\s]+range[\s]+(?<fld3>[^\s]*)[\s]+to[\s]+(?<fld4>[^,]*),[\s]+netmask[\s]+(?<fld5>[^\s]*)[\s]+spans[\s]+(?<fld6>.*)$" }
				id => "message-0102026002:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102026002:01"
					"[rsa][message][id1]" => "0102026002:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102026002:02
		# line in RSA: {vd=<vsys> Address|Address} range <fld3> to <fld4> not on net <fld5>/<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Address|Address)[\s]+range[\s]+(?<fld3>[^\s]*)[\s]+to[\s]+(?<fld4>[^\s]*)[\s]+not[\s]+on[\s]+net[\s]+(?<fld5>[^/]*)/(?<fld6>.*)$" }
				id => "message-0102026002:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102026002:02"
					"[rsa][message][id1]" => "0102026002:02"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA: {vd=<vsys> user=|user=}<username> local=<saddr> remote=<daddr> assigned=<hostip> stat="<fld16>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId148" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+local=(?<saddr>[^\s]*)[\s]+remote=(?<daddr>[^\s]*)[\s]+assigned=(?<hostip>[^\s]*)[\s]+stat=\"(?<fld16>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId148"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId149
	# line in RSA: {vd=<vsys> user=|user=}<username> local=<saddr> remote=<daddr> assigned=<hostip> action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId149" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+local=(?<saddr>[^\s]*)[\s]+remote=(?<daddr>[^\s]*)[\s]+assigned=(?<hostip>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId149"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId150
	# line in RSA: vd=<vsys> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId150" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=\"%{event_description}\"" }
			id => "msgParserId150"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId151
	# line in RSA: {vd=<vsys> MGR|MGR}: Couldn't create host socket
	else if [logstash][msgparser][id] == "msgParserId151" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MGR|MGR):[\s]+Couldn't[\s]+create[\s]+host[\s]+socket$" }
			id => "msgParserId151"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId152
	# line in RSA: {vd=<vsys> MGR|MGR}: the limit of pptp number has been reached - no more clients can connect!
	else if [logstash][msgparser][id] == "msgParserId152" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MGR|MGR):[\s]+the[\s]+limit[\s]+of[\s]+pptp[\s]+number[\s]+has[\s]+been[\s]+reached[\s]+\-[\s]+no[\s]+more[\s]+clients[\s]+can[\s]+connect!$" }
			id => "msgParserId152"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId153
	# line in RSA: {vd=<vsys> MGR|MGR}: Error with manager select()!
	else if [logstash][msgparser][id] == "msgParserId153" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MGR|MGR):[\s]+Error[\s]+with[\s]+manager[\s]+select\(\)!$" }
			id => "msgParserId153"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId154
	# line in RSA: {vd=<vsys> MGR|MGR}: accept() failed
	else if [logstash][msgparser][id] == "msgParserId154" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+MGR|MGR):[\s]+accept\(\)[\s]+failed$" }
			id => "msgParserId154"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId155
	# line in RSA: {vd=<vsys> gateway_ip=|gateway_ip=}<fld27> assigned_ip=<hostip> mtu=<fld28>
	else if [logstash][msgparser][id] == "msgParserId155" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+gateway_ip=|gateway_ip=)(?<fld27>[^\s]*)[\s]+assigned_ip=(?<hostip>[^\s]*)[\s]+mtu=(?<fld28>.*)$" }
			id => "msgParserId155"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId156
	# line in RSA: {vd=<vsys> Can|Can}'t execute <fld3>: <fld4>.
	else if [logstash][msgparser][id] == "msgParserId156" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+Can|Can)'t[\s]+execute[\s]+(?<fld3>[^:]*):[\s]+(?<fld4>[^\.]*)\.$" }
			id => "msgParserId156"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId157
	# line in RSA: {vd=<vsys> vfid|vfid}-<fld3> is bigger than the table-<fld4>\n
	else if [logstash][msgparser][id] == "msgParserId157" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+vfid|vfid)\-(?<fld3>[^\s]*)[\s]+is[\s]+bigger[\s]+than[\s]+the[\s]+table\-(?<fld4>[^\\]*)\\n$" }
			id => "msgParserId157"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId158
	# line in RSA: {vd=<vsys> pptp|pptp} of domain-<fld3> is not configured
	else if [logstash][msgparser][id] == "msgParserId158" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+pptp|pptp)[\s]+of[\s]+domain\-(?<fld3>[^\s]*)[\s]+is[\s]+not[\s]+configured$" }
			id => "msgParserId158"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId159
	# line in RSA: {vd=<vsys> All|All} IP address of pptp in domain-<fld3> are assigned
	else if [logstash][msgparser][id] == "msgParserId159" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+All|All)[\s]+IP[\s]+address[\s]+of[\s]+pptp[\s]+in[\s]+domain\-(?<fld3>[^\s]*)[\s]+are[\s]+assigned$" }
			id => "msgParserId159"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId160
	# line in RSA: {vd=<vsys> failed|failed} to expand pptp config list
	else if [logstash][msgparser][id] == "msgParserId160" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+failed|failed)[\s]+to[\s]+expand[\s]+pptp[\s]+config[\s]+list$" }
			id => "msgParserId160"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId161
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId161" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId161"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId162
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result>
	else if [logstash][msgparser][id] == "msgParserId162" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>.*)$" }
			id => "msgParserId162"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId163
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId163" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId163"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId164
	# line in RSA: {vd=<vsys> user=|user=}<username> ui=<network_service> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId164" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId164"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId165
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId165" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId165"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId166
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } module=<fld3> submodule=<fld4> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId166" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+module=(?<fld3>[^\s]*)[\s]+submodule=(?<fld4>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId166"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId167
	# line in RSA: <fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId167" {
		dissect {
			mapping => { "message" => "%{fld3} msg=\"%{event_description}\"" }
			id => "msgParserId167"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId168
	# line in RSA: {vd=<vsys> status=|status=}<event_state> <fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId168" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+status=|status=)(?<event_state>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId168"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId169
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } intf=<interface> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId169" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+intf=(?<interface>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId169"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032120" {
		# MESSAGE 0104032120
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> phase1name=<fld18> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+phase1name=(?<fld18>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032120"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032120"
					"[rsa][message][id1]" => "0104032120"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032120:02
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } cmdb_obj=<fld10> action=<action> name=<fld17> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+cmdb_obj=(?<fld10>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+name=(?<fld17>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032120:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032120:02"
					"[rsa][message][id1]" => "0104032120:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032120:01
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032120:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032120:01"
					"[rsa][message][id1]" => "0104032120:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032120:03
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } old_status=<change_old> new_status=<change_new> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+old_status=(?<change_old>[^\s]*)[\s]+new_status=(?<change_new>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032120:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032120:03"
					"[rsa][message][id1]" => "0104032120:03"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0104032121" {
		# MESSAGE 0104032121:02
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } cmdb_obj=<fld39> action=<action> name=<fld32> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+cmdb_obj=(?<fld39>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+name=(?<fld32>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032121:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032121:02"
					"[rsa][message][id1]" => "0104032121:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032121
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } intf=<interface> field=<fld19> old=<fld20> new=<fld21> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+intf=(?<interface>[^\s]*)[\s]+field=(?<fld19>[^\s]*)[\s]+old=(?<fld20>[^\s]*)[\s]+new=(?<fld21>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032121"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032121"
					"[rsa][message][id1]" => "0104032121"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032121:01
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } name=<fld32> action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld32>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032121:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032121:01"
					"[rsa][message][id1]" => "0104032121:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032121:03
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } name=<fld23> remote-gw=<daddr> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld23>[^\s]*)[\s]+remote\-gw=(?<daddr>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032121:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032121:03"
					"[rsa][message][id1]" => "0104032121:03"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032121:04
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } name=<fld32> <fld33> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld32>[^\s]*)[\s]+(?<fld33>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032121:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032121:04"
					"[rsa][message][id1]" => "0104032121:04"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId179
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> device=<fld3> distance=<fld4> priority=<fld5> dst=<daddr> status=<event_state> flags=<fld7> msg="<event_description>
	else if [logstash][msgparser][id] == "msgParserId179" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+device=(?<fld3>[^\s]*)[\s]+distance=(?<fld4>[^\s]*)[\s]+priority=(?<fld5>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+flags=(?<fld7>[^\s]*)[\s]+msg=\"(?<event_description>.*)$" }
			id => "msgParserId179"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032122" {
		# MESSAGE 0104032122:03
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } cmdb_obj=<fld41> action=<action> name=<fld17> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+cmdb_obj=(?<fld41>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+name=(?<fld17>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032122:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032122:03"
					"[rsa][message][id1]" => "0104032122:03"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032122:01
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> phase1name=<fld18> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+phase1name=(?<fld18>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032122:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032122:01"
					"[rsa][message][id1]" => "0104032122:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032122:02
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032122:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032122:02"
					"[rsa][message][id1]" => "0104032122:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId181
	# line in RSA: {vd=<vsys> user=|user=}<username> ui=<network_service> seq=<fld14> device=<fld3> distance=<fld4> dst=<daddr> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId181" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=(?<network_service>[^\s]*)[\s]+seq=(?<fld14>[^\s]*)[\s]+device=(?<fld3>[^\s]*)[\s]+distance=(?<fld4>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId181"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId182
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> old_device=<fld3> old_distance=<fld4> old_dst=<fld5> old_status=<fld6> new_device=<fld7> new_distance=<fld8> new_dst=<daddr> new_status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId182" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+old_device=(?<fld3>[^\s]*)[\s]+old_distance=(?<fld4>[^\s]*)[\s]+old_dst=(?<fld5>[^\s]*)[\s]+old_status=(?<fld6>[^\s]*)[\s]+new_device=(?<fld7>[^\s]*)[\s]+new_distance=(?<fld8>[^\s]*)[\s]+new_dst=(?<daddr>[^\s]*)[\s]+new_status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId182"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId183
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> device=<fld3> distance=<fld4> dst=<daddr> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId183" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+device=(?<fld3>[^\s]*)[\s]+distance=(?<fld4>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId183"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId184
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId184" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId184"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId185
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> old_device=<fld3> old_distance=<fld4> old_priority=<fld34> old_dst=<fld5> old_status=<fld6> old_flags=<fld36> new_device=<fld7> new_distance=<fld8> new_priority=<fld38> new_dst=<daddr> new_status=<event_state> new_flags=<fld39> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId185" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+old_device=(?<fld3>[^\s]*)[\s]+old_distance=(?<fld4>[^\s]*)[\s]+old_priority=(?<fld34>[^\s]*)[\s]+old_dst=(?<fld5>[^\s]*)[\s]+old_status=(?<fld6>[^\s]*)[\s]+old_flags=(?<fld36>[^\s]*)[\s]+new_device=(?<fld7>[^\s]*)[\s]+new_distance=(?<fld8>[^\s]*)[\s]+new_priority=(?<fld38>[^\s]*)[\s]+new_dst=(?<daddr>[^\s]*)[\s]+new_status=(?<event_state>[^\s]*)[\s]+new_flags=(?<fld39>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId185"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId186
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> device=<fld3> distance=<fld4> priority=<fld34> dst=<daddr> status=<event_state> flags=<fld36>  msg="<event_description>
	else if [logstash][msgparser][id] == "msgParserId186" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+device=(?<fld3>[^\s]*)[\s]+distance=(?<fld4>[^\s]*)[\s]+priority=(?<fld34>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+flags=(?<fld36>[^\s]*)[\s]+msg=\"(?<event_description>.*)$" }
			id => "msgParserId186"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032127" {
		# MESSAGE 0104032127
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> sintf="<sinterface>" dintf="<dinterface>" saddr="<fld4>" daddr="<fld5>" <fld3> msg="<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=\"(?<sinterface>[^\"]*)\"[\s]+dintf=\"(?<dinterface>[^\"]*)\"[\s]+saddr=\"(?<fld4>[^\"]*)\"[\s]+daddr=\"(?<fld5>[^\"]*)\"[\s]+(?<fld3>[^\s]*)[\s]+msg=\"(?<event_description>.*)$" }
				id => "message-0104032127"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032127"
					"[rsa][message][id1]" => "0104032127"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032127:01
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> sintf="<sinterface>" dintf="<dinterface>" saddr=" daddr="<fld5>" <fld3> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=\"(?<sinterface>[^\"]*)\"[\s]+dintf=\"(?<dinterface>[^\"]*)\"[\s]+saddr=\"[\s]+daddr=\"(?<fld5>[^\"]*)\"[\s]+(?<fld3>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032127:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032127:01"
					"[rsa][message][id1]" => "0104032127:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032127:02
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } <fld3> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+(?<fld3>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032127:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032127:02"
					"[rsa][message][id1]" => "0104032127:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId190
	# line in RSA: {vd=<vsys> user=|user=}<username> ui=<interface> seq=<fld14> sintf=<sinterface> dintf=<dinterface> saddr=<saddr> daddr=<daddr> <fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId190" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=(?<interface>[^\s]*)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=(?<sinterface>[^\s]*)[\s]+dintf=(?<dinterface>[^\s]*)[\s]+saddr=(?<saddr>[^\s]*)[\s]+daddr=(?<daddr>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId190"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId191
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId191" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId191"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId192
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> old_status=<fld3> new_status=<event_state> passwd=<fld4> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId192" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+old_status=(?<fld3>[^\s]*)[\s]+new_status=(?<event_state>[^\s]*)[\s]+passwd=(?<fld4>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId192"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId193
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> server=<daddr> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId193" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+server=(?<daddr>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId193"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId194
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> old_server=<fld3> new_server=<daddr> secret=<fld21> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId194" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+old_server=(?<fld3>[^\s]*)[\s]+new_server=(?<daddr>[^\s]*)[\s]+secret=(?<fld21>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId194"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId195
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } name=<fld17> old_server=<fld3> old_port=<fld4> old_cn=<fld5> old_dn="<fld6> new_server=<daddr> new_port=<dport> <fld9> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId195" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+old_server=(?<fld3>[^\s]*)[\s]+old_port=(?<fld4>[^\s]*)[\s]+old_cn=(?<fld5>[^\s]*)[\s]+old_dn=\"(?<fld6>[^\s]*)[\s]+new_server=(?<daddr>[^\s]*)[\s]+new_port=(?<dport>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId195"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId196
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId196" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId196"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId197
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } field=<fld19> old_value=<fld3> new_value=<fld4> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId197" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+field=(?<fld19>[^\s]*)[\s]+old_value=(?<fld3>[^\s]*)[\s]+new_value=(?<fld4>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId197"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId198
	# line in RSA: {vd=<vsys> id=|id=}<fld3> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId198" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+id=|id=)(?<fld3>[^\s]*)[\s]+msg=(?<event_description>.*)$" }
			id => "msgParserId198"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032150" {
		# MESSAGE 0104032150
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032150"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032150"
					"[rsa][message][id1]" => "0104032150"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032150:01
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032150:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032150:01"
					"[rsa][message][id1]" => "0104032150:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0104032157" {
		# MESSAGE 0104032157
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>)|<network_service>} email-pattern="<fld3>" status=<event_state>  msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+email\-pattern=\"(?<fld3>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032157"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032157"
					"[rsa][message][id1]" => "0104032157"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032157:03
		# line in RSA: {vd=<vsys> user=|user=}"<username>" ui=<network_service>(<saddr>) url="<url>" status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)\"(?<username>[^\"]*)\"[\s]+ui=(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+url=\"(?<url>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032157:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032157:03"
					"[rsa][message][id1]" => "0104032157:03"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032157:04
		# line in RSA: {vd=<vsys> user=|user=}"<username>" ui=<network_service> url="<url>" status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)\"(?<username>[^\"]*)\"[\s]+ui=(?<network_service>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032157:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032157:04"
					"[rsa][message][id1]" => "0104032157:04"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032157:01
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>)|<network_service>} pattern="<fld3>" status=<event_state>  msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+pattern=\"(?<fld3>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032157:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032157:01"
					"[rsa][message][id1]" => "0104032157:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032157:02
		# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>)|<network_service>} ip="<fld41>" status=<event_state>  msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+ip=\"(?<fld41>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032157:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032157:02"
					"[rsa][message][id1]" => "0104032157:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId204
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } pattern="<fld3>" status=<event_state>  msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId204" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+pattern=\"(?<fld3>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId204"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId205
	# line in RSA: {vd=<vsys> user=|user=}<username> ui={<network_service>(<saddr>) |<network_service> } upload=<fld3> num=<fld4> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId205" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+upload=(?<fld3>[^\s]*)[\s]+num=(?<fld4>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId205"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId206
	# line in RSA: {vd=<vsys> ip=|ip=}<saddr> ha-prio=<fld3> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId206" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+ip=|ip=)(?<saddr>[^\s]*)[\s]+ha\-prio=(?<fld3>[^\s]*)[\s]+msg=(?<event_description>.*)$" }
			id => "msgParserId206"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId207
	# line in RSA: vd=<vsys> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId207" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description}" }
			id => "msgParserId207"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId208
	# line in RSA: vd=<vsys> msg=<event_description> vcluster=<fld23> ha_group=<fld24>
	else if [logstash][msgparser][id] == "msgParserId208" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} vcluster=%{fld23} ha_group=%{fld24}" }
			id => "msgParserId208"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId209
	# line in RSA: vd=<vsys> msg=<event_description> vcluster=<fld23> devintfname=<fld25>
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} vcluster=%{fld23} devintfname=%{fld25}" }
			id => "msgParserId209"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId210
	# line in RSA: vd=<vsys> msg=<event_description> vcluster=<fld23> devintfname=<fld24>
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} vcluster=%{fld23} devintfname=%{fld24}" }
			id => "msgParserId210"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId211
	# line in RSA: vd=<vsys> msg=<event_description> ha_role=<fld23> devintfname=<fld24>
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} ha_role=%{fld23} devintfname=%{fld24}" }
			id => "msgParserId211"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId212
	# line in RSA: vd=<vsys> msg=<event_description> ha_role=<fld23> hbdn_reason=<fld24> devintfname=<fld25>
	else if [logstash][msgparser][id] == "msgParserId212" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} ha_role=%{fld23} hbdn_reason=%{fld24} devintfname=%{fld25}" }
			id => "msgParserId212"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId213
	# line in RSA: vd=<vsys> msg=<event_description> ha_role=<fld23> devintfname=<fld25>
	else if [logstash][msgparser][id] == "msgParserId213" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} ha_role=%{fld23} devintfname=%{fld25}" }
			id => "msgParserId213"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId214
	# line in RSA: vd=<vsys> msg=<event_description> vcluster=<fld23> vcluster_state=<fld24> vcluster_member=<fld25> hostname=<hostname> sn=<serial_number>
	else if [logstash][msgparser][id] == "msgParserId214" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} vcluster=%{fld23} vcluster_state=%{fld24} vcluster_member=%{fld25} hostname=%{hostname} sn=%{serial_number}" }
			id => "msgParserId214"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId215
	# line in RSA: vd=<vsys> msg=<event_description> devintfname=<fld24>
	else if [logstash][msgparser][id] == "msgParserId215" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} devintfname=%{fld24}" }
			id => "msgParserId215"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId216
	# line in RSA: {vd=<vsys> dhcp_msg=|dhcp_msg=}<context> dir=<direction> mac=<smacaddr> ip=<hostip> lease=<duration_string> hostname=<shost> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId216" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+dhcp_msg=|dhcp_msg=)(?<context>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+mac=(?<smacaddr>[^\s]*)[\s]+ip=(?<hostip>[^\s]*)[\s]+lease=(?<duration_string>[^\s]*)[\s]+hostname=(?<shost>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId216"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId217
	# line in RSA: {vd=<vsys> user=|user=}<username> service=<network_service> action=<action> status=<event_state> reason=timeout src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost>
	else if [logstash][msgparser][id] == "msgParserId217" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=timeout[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>.*)$" }
			id => "msgParserId217"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0106038001" {
		# MESSAGE 0106038001:01
		# line in RSA: vd=<vsys> user="<username>" group="<group>" ui=<fld4> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} user=\"%{username}\" group=\"%{group}\" ui=%{fld4} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0106038001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106038001:01"
					"[rsa][message][id1]" => "0106038001:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0106038001
		# line in RSA: {vd=<vsys> proto=|proto=}<fld70> src=<saddr>:<sport> dst=<daddr>:<dport> adgroup=<fld3> user=<username> ui=<fld4> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+proto=|proto=)(?<fld70>[^\s]*)[\s]+src=(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^:]*):(?<dport>[^\s]*)[\s]+adgroup=(?<fld3>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+ui=(?<fld4>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0106038001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106038001"
					"[rsa][message][id1]" => "0106038001"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId220
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user="<username>" group="<group>" ui=<fld4> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId220" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} policyid=%{policy_id} user=\"%{username}\" group=\"%{group}\" ui=%{fld4} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId220"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId221
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> proto=<fld70> policyid=<policy_id> user="<username>" adgroup=<fld13> ui=<fld4> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId221" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} proto=%{fld70} policyid=%{policy_id} user=\"%{username}\" adgroup=%{fld13} ui=%{fld4} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId221"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId222
	# line in RSA: vd="<vsys>" src=<saddr> user="<username>" server=<fld13> action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId222" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} user=\"%{username}\" server=%{fld13} action=%{action} msg=\"%{event_description}\"" }
			id => "msgParserId222"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId223
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user="<username>" adgroup=<fld13> group="<group>" ui=<fld4> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId223" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} policyid=%{policy_id} user=\"%{username}\" adgroup=%{fld13} group=\"%{group}\" ui=%{fld4} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId223"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId224
	# line in RSA: vd="<vsys>" dst=<daddr> ui=<fld4> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId224" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" dst=%{daddr} ui=%{fld4} msg=\"%{event_description}\"" }
			id => "msgParserId224"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId225
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> initiator=<fld4> status=<event_state> reason="<result>" <fld23> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId225" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} initiator=%{fld4} status=%{event_state} reason=\"%{result}\" %{fld23} msg=\"%{event_description}\"" }
			id => "msgParserId225"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId226
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user="<username>" group="<group>" ui=<fld24> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId226" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} policyid=%{policy_id} user=\"%{username}\" group=\"%{group}\" ui=%{fld24} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId226"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId227
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> initiator=<fld4> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId227" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} initiator=%{fld4} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId227"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0106038002" {
		# MESSAGE 0106038002:01
		# line in RSA: vd=<vsys> user="<username>" ui=<fld4> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} user=\"%{username}\" ui=%{fld4} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0106038002:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106038002:01"
					"[rsa][message][id1]" => "0106038002:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0106038002
		# line in RSA: {vd=<vsys> user=|user=}<username> service=<network_service> action=<action> status=<event_state> reason=<result> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>.*)$" }
				id => "message-0106038002"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106038002"
					"[rsa][message][id1]" => "0106038002"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId229
	# line in RSA: {vd=<vsys> user=|user=}<username> service=<network_service> action=<action> status=<event_state> reason=<result> src=<saddr> srcname=<shost> dst=<daddr> dstname=<dhost>
	else if [logstash][msgparser][id] == "msgParserId229" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstname=(?<dhost>.*)$" }
			id => "msgParserId229"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0106043013" {
		# MESSAGE 0106043013:04
		# line in RSA: vd=<vsys> src=<saddr> dst=<daddr> proto=<fld70> policyid=<policy_id> user="<username>" adgroup="<fld3>" ui=<fld4> action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} src=%{saddr} dst=%{daddr} proto=%{fld70} policyid=%{policy_id} user=\"%{username}\" adgroup=\"%{fld3}\" ui=%{fld4} action=%{action} status=%{event_state} reason=%{result} msg=\"%{event_description}\"" }
				id => "message-0106043013:04"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106043013:04"
					"[rsa][message][id1]" => "0106043013:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0106043013
		# line in RSA: vd=<vsys> policyid=<policy_id> user={"<username>"|<username>} group={"<group>"|<group>} ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0106043013"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106043013"
					"[rsa][message][id1]" => "0106043013"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0106043013:01
		# line in RSA: vd=<vsys> user={"<username>"|<username>} src=<saddr> server=<daddr> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+server=(?<daddr>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0106043013:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106043013:01"
					"[rsa][message][id1]" => "0106043013:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0106043013:02
		# line in RSA: vd=<vsys> src=<saddr> dst=<daddr> policyid=<policy_id> adgroup="<fld3>" user="<username>" ui=<fld4> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} src=%{saddr} dst=%{daddr} policyid=%{policy_id} adgroup=\"%{fld3}\" user=\"%{username}\" ui=%{fld4} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0106043013:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106043013:02"
					"[rsa][message][id1]" => "0106043013:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0106043013:03
		# line in RSA: vd=<vsys> src=<saddr> user="<username>" group="<group>" policyid=<policy_id> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} src=%{saddr} user=\"%{username}\" group=\"%{group}\" policyid=%{policy_id} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0106043013:03"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0106043013:03"
					"[rsa][message][id1]" => "0106043013:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId235
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId235" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=\"(?<result>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId235"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId236
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> {status=<event_state> msg="<event_description>"|msg="<event_description>"}
	else if [logstash][msgparser][id] == "msgParserId236" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+(status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|msg=\"(?<event_description>[^\"]*)\")$" }
			id => "msgParserId236"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId237
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId237" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId237"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId238
	# line in RSA: {vd=<vsys> user=|user=}"<username>" ui=<fld4> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId238" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)\"(?<username>[^\"]*)\"[\s]+ui=(?<fld4>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId238"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"vsys" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId239
	# line in RSA: vd=<vsys> user=<username> ui=<fld4> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId239" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{fld4} msg=\"%{event_description}\"" }
			id => "msgParserId239"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032102" {
		# MESSAGE 0104032102
		# line in RSA: vd=<vsys> user=<username> ui=<fld4> profile="<rulename>" field=<fld31> old=<fld20> new=<fld21> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{fld4} profile=\"%{rulename}\" field=%{fld31} old=%{fld20} new=%{fld21} msg=\"%{event_description}\"" }
				id => "message-0104032102"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032102"
					"[rsa][message][id1]" => "0104032102"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032102:01
		# line in RSA: vd=<vsys> user=<username> ui=<fld4> module=<fld31> submodule=<fld20> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{fld4} module=%{fld31} submodule=%{fld20} msg=\"%{event_description}\"" }
				id => "message-0104032102:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032102:01"
					"[rsa][message][id1]" => "0104032102:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0104041989" {
		# MESSAGE 0104041989
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> sintf=<sinterface> dintf=<dinterface> saddr=<fld3> daddr=<fld4> act=<action> <fld5> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=(?<sinterface>[^\s]*)[\s]+dintf=(?<dinterface>[^\s]*)[\s]+saddr=(?<fld3>[^\s]*)[\s]+daddr=(?<fld4>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104041989"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104041989"
					"[rsa][message][id1]" => "0104041989"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104041989:01
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } field=<fld5> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+field=(?<fld5>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104041989:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104041989:01"
					"[rsa][message][id1]" => "0104041989:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0104041990" {
		# MESSAGE 0104041990
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> profile="<rulename>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104041990"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104041990"
					"[rsa][message][id1]" => "0104041990"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104041990:01
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104041990:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104041990:01"
					"[rsa][message][id1]" => "0104041990:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104041990:02
		# line in RSA: vd=<vsys> id=<fld3> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} id=%{fld3} msg=\"%{event_description}\"" }
				id => "message-0104041990:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104041990:02"
					"[rsa][message][id1]" => "0104041990:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId247
	# line in RSA: {vd=<vsys> status=|status=}<event_state> virdb=<fld3> idsdb=<fld4> libav=<fld5> aven=<fld6> imap=<fld7> smtp=<fld8> pop3=<fld9> http=<fld10> ftp=<fld11> fcni=<fld12> fdni=<fld13> idsmn=<fld14> idssn=<fld15> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId247" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+status=|status=)(?<event_state>[^\s]*)[\s]+virdb=(?<fld3>[^\s]*)[\s]+idsdb=(?<fld4>[^\s]*)[\s]+libav=(?<fld5>[^\s]*)[\s]+aven=(?<fld6>[^\s]*)[\s]+imap=(?<fld7>[^\s]*)[\s]+smtp=(?<fld8>[^\s]*)[\s]+pop3=(?<fld9>[^\s]*)[\s]+http=(?<fld10>[^\s]*)[\s]+ftp=(?<fld11>[^\s]*)[\s]+fcni=(?<fld12>[^\s]*)[\s]+fdni=(?<fld13>[^\s]*)[\s]+idsmn=(?<fld14>[^\s]*)[\s]+idssn=(?<fld15>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId247"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId248
	# line in RSA: {vd=<vsys> File|File} <filename> is infected.
	else if [logstash][msgparser][id] == "msgParserId248" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+File|File)[\s]+(?<filename>[^\s]*)[\s]+is[\s]+infected\.$" }
			id => "msgParserId248"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId249
	# line in RSA: vd=<vsys> src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> action=<action> user="<username>" group=<group> policyid=<policy_id> <fld23>
	else if [logstash][msgparser][id] == "msgParserId249" {
		dissect {
			mapping => { "message" => "vd=%{vsys} src=%{saddr} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} action=%{action} user=\"%{username}\" group=%{group} policyid=%{policy_id} %{fld23}" }
			id => "msgParserId249"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId250
	# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> { interface=<interface> src_int=<sinterface> | src_int=<stransaddr> } dst_int=<dinterface> status=<event_state> proto=<protocol> service=<network_service> msg="<event_description> [Reference: <info> ]"
	else if [logstash][msgparser][id] == "msgParserId250" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<stransaddr>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+msg=\"(?<event_description>[^\s]*)[\s]+\[Reference:[\s]+(?<info>[^\s]*)[\s]+\]\"$" }
			id => "msgParserId250"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId251
	# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> interface=<interface> src_int=<sinterface> dst_int=<dinterface> status=<event_state> proto=<protocol> service=<network_service> msg="<event_description> [Reference: <info> ]"
	else if [logstash][msgparser][id] == "msgParserId251" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+msg=\"(?<event_description>[^\s]*)[\s]+\[Reference:[\s]+(?<info>[^\s]*)[\s]+\]\"$" }
			id => "msgParserId251"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId252
	# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId252" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId252"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId253
	# line in RSA: {vd=<vsys> user=|user=}<username> src=<saddr> srcport=<sport> dst=<daddr> dstport=<dport> service=<network_service> hostname=<shost> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId253" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=(?<shost>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId253"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId254
	# line in RSA: {vd=<vsys> hostname=|hostname=}<shost> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId254" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+hostname=|hostname=)(?<shost>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId254"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId255
	# line in RSA: vd=<vsys> <event_description>
	else if [logstash][msgparser][id] == "msgParserId255" {
		dissect {
			mapping => { "message" => "vd=%{vsys} %{event_description}" }
			id => "msgParserId255"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId256
	# line in RSA: {vd=<vsys> hostname|hostname}: <event_description>
	else if [logstash][msgparser][id] == "msgParserId256" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+hostname|hostname):[\s]+(?<event_description>.*)$" }
			id => "msgParserId256"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId257
	# line in RSA: {vd=<vsys> hostname=|hostname=}<shost> ip=<saddr> port=<sport>, result=<result>, code=<fld3>, msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId257" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+hostname=|hostname=)(?<shost>[^\s]*)[\s]+ip=(?<saddr>[^\s]*)[\s]+port=(?<sport>[^,]*),[\s]+result=(?<result>[^,]*),[\s]+code=(?<fld3>[^,]*),[\s]+msg=(?<event_description>.*)$" }
			id => "msgParserId257"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId258
	# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> profile=<rulename> cat=<fcatnum> cat_desc="<filter>" url=<url> msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId258" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+profile=(?<rulename>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId258"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId259
	# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> profile=<rulename> cat=<fcatnum> cat_desc="<filter>" url=<url> msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId259" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+profile=(?<rulename>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId259"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId260
	# line in RSA: {vd=<vsys> user=|user=}<username> rip=<fld3> action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId260" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+rip=(?<fld3>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId260"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId261
	# line in RSA: {vd=<vsys> action=|action=}<action> ui=<saddr> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId261" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+action=|action=)(?<action>[^\s]*)[\s]+ui=(?<saddr>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId261"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId262
	# line in RSA: {vd=<vsys> action=|action=}<action> ui=<saddr> status=<event_state> user="<username>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId262" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+action=|action=)(?<action>[^\s]*)[\s]+ui=(?<saddr>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId262"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId263
	# line in RSA: {vd=<vsys> action=|action=}<action> ui=<saddr> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId263" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+action=|action=)(?<action>[^\s]*)[\s]+ui=(?<saddr>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId263"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId264
	# line in RSA: vd=<vsys> vip=<fld3> server=<daddr> port=<dport> server-admin-status=<event_state> action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId264" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vip=%{fld3} server=%{daddr} port=%{dport} server-admin-status=%{event_state} action=%{action} msg=\"%{event_description}\"" }
			id => "msgParserId264"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032001" {
		# MESSAGE 0104032001
		# line in RSA: {vd=<vsys> user=|user=}"<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> profile="<rulename>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"vsys" => "%{hfld2}"
					"[event][id]" => "0104032001"
					"[rsa][message][id1]" => "0104032001"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032001:01
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032001:01"
					"[rsa][message][id1]" => "0104032001:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId266
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId266" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId266"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032003" {
		# MESSAGE 0104032003:01
		# line in RSA: user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032003:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032003:01"
					"[rsa][message][id1]" => "0104032003:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032003
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032003"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032003"
					"[rsa][message][id1]" => "0104032003"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0104032126" {
		# MESSAGE 0104032126
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> sintf="<sinterface>" dintf="<dinterface>" saddr=<fld7> daddr=<fld8> act=<action> nat=<fld3> iptype=<fld4> schd=<fld5> svr="<fld6>" msg="<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=\"(?<sinterface>[^\"]*)\"[\s]+dintf=\"(?<dinterface>[^\"]*)\"[\s]+saddr=(?<fld7>[^\s]*)[\s]+daddr=(?<fld8>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+nat=(?<fld3>[^\s]*)[\s]+iptype=(?<fld4>[^\s]*)[\s]+schd=(?<fld5>[^\s]*)[\s]+svr=\"(?<fld6>[^\"]*)\"[\s]+msg=\"(?<event_description>.*)$" }
				id => "message-0104032126"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032126"
					"[rsa][message][id1]" => "0104032126"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032126:01
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> sintf="<sinterface>" dintf="<dinterface>" saddr=<fld7> daddr=<fld8> schd=<fld5> svr=<fld6> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=\"(?<sinterface>[^\"]*)\"[\s]+dintf=\"(?<dinterface>[^\"]*)\"[\s]+saddr=(?<fld7>[^\s]*)[\s]+daddr=(?<fld8>[^\s]*)[\s]+schd=(?<fld5>[^\s]*)[\s]+svr=(?<fld6>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032126:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032126:01"
					"[rsa][message][id1]" => "0104032126:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0104032128" {
		# MESSAGE 0104032128:01
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } seq=<fld14> sintf="<sinterface>" dintf="<dinterface>" saddr=<fld7> daddr=<fld8> act=<fld5> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+seq=(?<fld14>[^\s]*)[\s]+sintf=\"(?<sinterface>[^\"]*)\"[\s]+dintf=\"(?<dinterface>[^\"]*)\"[\s]+saddr=(?<fld7>[^\s]*)[\s]+daddr=(?<fld8>[^\s]*)[\s]+act=(?<fld5>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032128:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032128:01"
					"[rsa][message][id1]" => "0104032128:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032128
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032128"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032128"
					"[rsa][message][id1]" => "0104032128"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId272
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } name=<fld14> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId272" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld14>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId272"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId273
	# line in RSA: {vd=<vsys> user=|user=}"<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId273" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId273"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"vsys" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032140" {
		# MESSAGE 0104032140
		# line in RSA: vd=<vsys> user="<username>" ui={ <network_service>(<saddr>) | <network_service> } action=<action> field=<content_type> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=([\s]*(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+field=(?<content_type>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032140"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032140"
					"[rsa][message][id1]" => "0104032140"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032140:01
		# line in RSA: vd=<vsys> user="<username>" ui={ NONE | <network_service>(<saddr>) | <network_service> } field=<content_type> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=([\s]*NONE[\s]+|[\s]*(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<network_service>[^\s]*)[\s]+)[\s]+field=(?<content_type>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032140:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032140:01"
					"[rsa][message][id1]" => "0104032140:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId276
	# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } name=<fld17> action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId276" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+name=(?<fld17>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId276"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032142" {
		# MESSAGE 0104032142
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032142"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032142"
					"[rsa][message][id1]" => "0104032142"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032142:01
		# line in RSA: vd=<vsys> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0104032142:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032142:01"
					"[rsa][message][id1]" => "0104032142:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032142:02
		# line in RSA: vd=<vsys> user="<username>" ui=<fld13> action=<action> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} user=\"%{username}\" ui=%{fld13} action=%{action} msg=\"%{event_description}\"" }
				id => "message-0104032142:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032142:02"
					"[rsa][message][id1]" => "0104032142:02"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId278
	# line in RSA: vd=<vsys> user="<username>" ui=<fld13> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId278" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=\"%{username}\" ui=%{fld13} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
			id => "msgParserId278"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId279
	# line in RSA: vd=<vsys> user="<username>" ui=<fld13> iff=<fld22> src=<saddr>:<fld26> dst=<daddr>:<fld27> <fld21> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId279" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=\"%{username}\" ui=%{fld13} iff=%{fld22} src=%{saddr}:%{fld26} dst=%{daddr}:%{fld27} %{fld21} msg=\"%{event_description}\"" }
			id => "msgParserId279"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId280
	# line in RSA: vd=<vsys> action=<action> {reason=<result> log=<fld3>|log=<fld3>} msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId280" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+(reason=(?<result>[^\s]*)[\s]+log=(?<fld3>[^\s]*)|log=(?<fld3>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId280"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0104032002" {
		# MESSAGE 0104032002
		# line in RSA: vd=<vsys> user="<username>" ui={<network_service>(<saddr>) |<network_service> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<network_service>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032002"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032002"
					"[rsa][message][id1]" => "0104032002"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0104032002:01
		# line in RSA: vd=<vsys> ui={<network_service>(<saddr>) |<saddr> } action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)[\s]+|(?<saddr>[^\s]*)[\s]+)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0104032002:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0104032002:01"
					"[rsa][message][id1]" => "0104032002:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId282
	# line in RSA: vd=<vsys> service=<network_service> mode=<scheme> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId282" {
		dissect {
			mapping => { "message" => "vd=%{vsys} service=%{network_service} mode=%{scheme} msg=\"%{event_description}\"" }
			id => "msgParserId282"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId283
	# line in RSA: vd=<vsys> service=<network_service> <fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId283" {
		dissect {
			mapping => { "message" => "vd=%{vsys} service=%{network_service} %{fld3} msg=\"%{event_description}\"" }
			id => "msgParserId283"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0100022901" {
		# MESSAGE 0100022901
		# line in RSA: vd=<vsys> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
				id => "message-0100022901"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100022901"
					"[rsa][message][id1]" => "0100022901"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100022901:01
		# line in RSA: vd=<vsys> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0100022901:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100022901:01"
					"[rsa][message][id1]" => "0100022901:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0100022902" {
		# MESSAGE 0100022902
		# line in RSA: vd=<vsys> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
				id => "message-0100022902"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100022902"
					"[rsa][message][id1]" => "0100022902"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100022902:01
		# line in RSA: vd=<vsys> action=<action> status=<event_state> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
				id => "message-0100022902:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100022902:01"
					"[rsa][message][id1]" => "0100022902:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA: vd=<vsys> action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId284"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId285
	# line in RSA: vd=<vsys> user=<username> ui=<fld13> action=<action> status=<event_state> count=<fld14> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{fld13} action=%{action} status=%{event_state} count=%{fld14} msg=\"%{event_description}\"" }
			id => "msgParserId285"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId286
	# line in RSA: action=<action> tunnel_type=<scheme> vd="<vsys>" tunnel_id=<fld23> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" dst_host="<dhost>" reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "action=%{action} tunnel_type=%{scheme} vd=\"%{vsys}\" tunnel_id=%{fld23} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" dst_host=\"%{dhost}\" reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId286"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId287
	# line in RSA: action=<action> tunnel_type=<scheme> vd="<vsys>" tunnel_id=<fld23> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" dst_host="<dhost>" reason="<result>" duration=<duration> sent=<sbytes> rcvd=<rbytes> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId287" {
		dissect {
			mapping => { "message" => "action=%{action} tunnel_type=%{scheme} vd=\"%{vsys}\" tunnel_id=%{fld23} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" dst_host=\"%{dhost}\" reason=\"%{result}\" duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} msg=\"%{event_description}\"" }
			id => "msgParserId287"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId288
	# line in RSA: action=<action> tunnel_type=<scheme> vd="<vsys>" tunnel_id=<fld23> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" dst_host="<dhost>" app-type="<obj_type>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId288" {
		dissect {
			mapping => { "message" => "action=%{action} tunnel_type=%{scheme} vd=\"%{vsys}\" tunnel_id=%{fld23} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" dst_host=\"%{dhost}\" app-type=\"%{obj_type}\" msg=\"%{event_description}\"" }
			id => "msgParserId288"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0134039942" {
		# MESSAGE 0134039942
		# line in RSA: vd=<vsys> action=<action> tunnel_id=<fld23> tunnel_type=<scheme> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" duration=<duration> sent=<sbytes> rcvd=<rbytes> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} tunnel_id=%{fld23} tunnel_type=%{scheme} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} msg=\"%{event_description}\"" }
				id => "message-0134039942"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0134039942"
					"[rsa][message][id1]" => "0134039942"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0134039942:01
		# line in RSA: vd=<vsys> action=<action> tunnel_id=<fld23> tunnel_type=<scheme> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} tunnel_id=%{fld23} tunnel_type=%{scheme} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" msg=\"%{event_description}\"" }
				id => "message-0134039942:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0134039942:01"
					"[rsa][message][id1]" => "0134039942:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0132039430" {
		# MESSAGE 0132039430
		# line in RSA: vd=<vsys> action=<action> tunnel_id=<fld23> tunnel_type=<scheme> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" duration=<duration> sent=<sbytes> rcvd=<rbytes> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} tunnel_id=%{fld23} tunnel_type=%{scheme} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} reason=%{result} msg=\"%{event_description}\"" }
				id => "message-0132039430"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0132039430"
					"[rsa][message][id1]" => "0132039430"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0132039430:01
		# line in RSA: vd=<vsys> action=<action> tunnel_id=<fld23> tunnel_type=<scheme> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} action=%{action} tunnel_id=%{fld23} tunnel_type=%{scheme} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" reason=%{result} msg=\"%{event_description}\"" }
				id => "message-0132039430:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0132039430:01"
					"[rsa][message][id1]" => "0132039430:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA: action=<action> tunnel_type=<scheme> vd="<vsys>" tunnel_id=<fld23> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" dst_host="<dhost>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "action=%{action} tunnel_type=%{scheme} vd=\"%{vsys}\" tunnel_id=%{fld23} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" dst_host=\"%{dhost}\" msg=\"%{event_description}\"" }
			id => "msgParserId293"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId294
	# line in RSA: action=<action> tunnel_type=<scheme> vd="<vsys>" tunnel_id=<fld23> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" dst_host="<dhost>" alert=<fld36> desc=<fld37> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "action=%{action} tunnel_type=%{scheme} vd=\"%{vsys}\" tunnel_id=%{fld23} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" dst_host=\"%{dhost}\" alert=%{fld36} desc=%{fld37} msg=\"%{event_description}\"" }
			id => "msgParserId294"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId295
	# line in RSA: vd=<vsys> action=<action> ui=<fld23> status=<event_state> user="<username>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} ui=%{fld23} status=%{event_state} user=\"%{username}\" msg=\"%{event_description}\"" }
			id => "msgParserId295"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId296
	# line in RSA: action=<action> tunnel_type=<scheme> vd="<vsys>" tunnel_id=<fld23> remote_ip=<daddr> tunnel_ip=<fld24> user="<username>" group="<group>" dst_host="<dhost>" duration=<duration> sent=<sbytes> rcvd=<rbytes> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "action=%{action} tunnel_type=%{scheme} vd=\"%{vsys}\" tunnel_id=%{fld23} remote_ip=%{daddr} tunnel_ip=%{fld24} user=\"%{username}\" group=\"%{group}\" dst_host=\"%{dhost}\" duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId296"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0101037125" {
		# MESSAGE 0101037125
		# line in RSA: vd="<vsys>" msg="<event_description>" action={"<action>"|<action>} rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf="<sinterface>" cookies=<fld10> user="<username>" group="<group>" xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel="<fld31>" status=<event_state> error_reason=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=\"(?<fld31>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+error_reason=(?<result>.*)$" }
				id => "message-0101037125"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037125"
					"[rsa][message][id1]" => "0101037125"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037125:01
		# line in RSA: vd=<vsys> logdesc=<info> msg=<event_description> action=<action> rem_ip=<daddr> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result> reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{info} msg=%{event_description} action=%{action} rem_ip=%{daddr} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result} reason=%{result}" }
				id => "message-0101037125:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037125:01"
					"[rsa][message][id1]" => "0101037125:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037130" {
		# MESSAGE 0101037130
		# line in RSA: vd="<vsys>" msg="<event_description>" action={"<action>"|<action>} rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf="<sinterface>" cookies=<fld10> user="<username>" group="<group>" xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel="<fld31>" status=<event_state> init=<fld5> mode=<scheme> dir=<direction> stage=<fld6> role=<fld7> result=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=\"(?<fld31>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+init=(?<fld5>[^\s]*)[\s]+mode=(?<scheme>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+stage=(?<fld6>[^\s]*)[\s]+role=(?<fld7>[^\s]*)[\s]+result=(?<result>.*)$" }
				id => "message-0101037130"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037130"
					"[rsa][message][id1]" => "0101037130"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037130:01
		# line in RSA: vd=<vsys> logdesc=<info> msg=<event_description> action=<action> rem_ip=<daddr> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result> reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{info} msg=%{event_description} action=%{action} rem_ip=%{daddr} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result} reason=%{result}" }
				id => "message-0101037130:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037130:01"
					"[rsa][message][id1]" => "0101037130:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037135" {
		# MESSAGE 0101037135
		# line in RSA: vd={"<vsys>"|<vsys>} msg=<event_description> action=<action> {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}=<sinterface> cookies=<fld10> user=<username> group=<group> {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} enc_spi=<fld14> dec_spi=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=(?<event_description>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+enc_spi=(?<fld14>[^\s]*)[\s]+dec_spi=(?<fld15>.*)$" }
				id => "message-0101037135"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037135"
					"[rsa][message][id1]" => "0101037135"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037135:01
		# line in RSA: vd=<vsys> logdesc=<info> msg=<event_description> action=<action> rem_ip=<daddr> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result> reason=<result> in_spi=<dst_spi> out_spi=<src_spi>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{info} msg=%{event_description} action=%{action} rem_ip=%{daddr} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result} reason=%{result} in_spi=%{dst_spi} out_spi=%{src_spi}" }
				id => "message-0101037135:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037135:01"
					"[rsa][message][id1]" => "0101037135:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037136" {
		# MESSAGE 0101037136
		# line in RSA: vd="<vsys>" msg="<event_description>" action={"<action>"|<action>} rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf="<sinterface>" cookies=<fld10> user="<username>" group="<group>" xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel="<fld31>" status=<event_state>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=\"(?<fld31>[^\"]*)\"[\s]+status=(?<event_state>.*)$" }
				id => "message-0101037136"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037136"
					"[rsa][message][id1]" => "0101037136"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037136:01
		# line in RSA: vd=<vsys> msg=<event_description> action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> logdesc=<info> assignip=<stransaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} msg=%{event_description} action=%{action} remip=%{daddr} locip=%{saddr} remport=%{dport} locport=%{sport} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} logdesc=%{info} assignip=%{stransaddr}" }
				id => "message-0101037136:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037136:01"
					"[rsa][message][id1]" => "0101037136:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037138" {
		# MESSAGE 0101037138
		# line in RSA: vd="<vsys>" msg="<event_description>" action={"<action>"|<action>} rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf="<sinterface>" cookies=<fld10> user="<username>" group="<group>" xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel="<fld31>" tunnel_ip=<fld24> tunnel_id=<fld23> tunnel_type=<scheme> duration=<duration> sent=<sbytes> rcvd=<rbytes> next_stat=<fld32> tunnel=<fld34>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=\"(?<fld31>[^\"]*)\"[\s]+tunnel_ip=(?<fld24>[^\s]*)[\s]+tunnel_id=(?<fld23>[^\s]*)[\s]+tunnel_type=(?<scheme>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+next_stat=(?<fld32>[^\s]*)[\s]+tunnel=(?<fld34>.*)$" }
				id => "message-0101037138"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037138"
					"[rsa][message][id1]" => "0101037138"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037138:01
		# line in RSA: vd="<vsys>" msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf="<sinterface>" cookies="<fld10>" user="<username>" group="<group>" xauthuser={"<c_username>"|<c_username>} xauthgroup="<fld4>" vpntunnel={"<node>"|<node>} tunnelip=<peer> tunnelid=<connectionid> tunneltype=<scheme> duration=<duration> sent=<sbytes> rcvd=<rbytes> nextstat=<fld32> tunnel="<fld34>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+remport=(?<dport>[^\s]*)[\s]+locport=(?<sport>[^\s]*)[\s]+outintf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=\"(?<fld10>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauthuser=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauthgroup=\"(?<fld4>[^\"]*)\"[\s]+vpntunnel=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+tunnelip=(?<peer>[^\s]*)[\s]+tunnelid=(?<connectionid>[^\s]*)[\s]+tunneltype=(?<scheme>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+nextstat=(?<fld32>[^\s]*)[\s]+tunnel=\"(?<fld34>[^\"]*)\"$" }
				id => "message-0101037138:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037138:01"
					"[rsa][message][id1]" => "0101037138:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037138:02
		# line in RSA: vd="<vsys>" logdesc=<fld1> msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf="<sinterface>" cookies="<fld10>" user="<username>" group="<group>" xauthuser={"<c_username>"|<c_username>} xauthgroup="<fld4>" assignip=<stransaddr> vpntunnel={"<node>"|<node>} tunnelip=<peer> tunnelid=<connectionid> tunneltype=<scheme> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> nextstat=<fld32>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=(?<fld1>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+remport=(?<dport>[^\s]*)[\s]+locport=(?<sport>[^\s]*)[\s]+outintf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=\"(?<fld10>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauthuser=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauthgroup=\"(?<fld4>[^\"]*)\"[\s]+assignip=(?<stransaddr>[^\s]*)[\s]+vpntunnel=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+tunnelip=(?<peer>[^\s]*)[\s]+tunnelid=(?<connectionid>[^\s]*)[\s]+tunneltype=(?<scheme>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+nextstat=(?<fld32>.*)$" }
				id => "message-0101037138:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037138:02"
					"[rsa][message][id1]" => "0101037138:02"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037138:03
		# line in RSA: vd=<vsys> logdesc=<fld1> msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf="<sinterface>" cookies="<fld10>" user="<username>" group="<group>" xauthuser={"<c_username>"|<c_username>} xauthgroup="<fld4>" assignip=<stransaddr> vpntunnel={"<node>"|<node>} tunnelip=<peer> tunnelid=<connectionid> tunneltype=<scheme> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> nextstat=<fld32>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+logdesc=(?<fld1>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+remport=(?<dport>[^\s]*)[\s]+locport=(?<sport>[^\s]*)[\s]+outintf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=\"(?<fld10>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauthuser=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauthgroup=\"(?<fld4>[^\"]*)\"[\s]+assignip=(?<stransaddr>[^\s]*)[\s]+vpntunnel=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+tunnelip=(?<peer>[^\s]*)[\s]+tunnelid=(?<connectionid>[^\s]*)[\s]+tunneltype=(?<scheme>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+nextstat=(?<fld32>.*)$" }
				id => "message-0101037138:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037138:03"
					"[rsa][message][id1]" => "0101037138:03"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037139" {
		# MESSAGE 0101037139
		# line in RSA: vd="<vsys>" msg="<event_description>" action={"<action>"|<action>} rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf="<sinterface>" cookies=<fld10> user="<username>" group="<group>" xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel="<fld31>" phase2_name=<fld18>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=\"(?<fld31>[^\"]*)\"[\s]+phase2_name=(?<fld18>.*)$" }
				id => "message-0101037139"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037139"
					"[rsa][message][id1]" => "0101037139"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037139:01
		# line in RSA: vd=<vsys> logdesc=<fld1> msg=<event_description> action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> assignip=<stransaddr> vpntunnel=<node> phase2_name=<fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{fld1} msg=%{event_description} action=%{action} remip=%{daddr} locip=%{saddr} remport=%{dport} locport=%{sport} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} assignip=%{stransaddr} vpntunnel=%{node} phase2_name=%{fld18}" }
				id => "message-0101037139:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037139:01"
					"[rsa][message][id1]" => "0101037139:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037122" {
		# MESSAGE 0101037122
		# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}="<sinterface>" cookies=<fld10> user="<username>" group="<group>" {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} status=<event_state> role=<fld5> {esp_transform|esptransform}=<fld6> {esp_auth|espauth}=<fld7>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+role=(?<fld5>[^\s]*)[\s]+(esp_transform|esptransform)=(?<fld6>[^\s]*)[\s]+(esp_auth|espauth)=(?<fld7>.*)$" }
				id => "message-0101037122"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037122"
					"[rsa][message][id1]" => "0101037122"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037122:01
		# line in RSA: vd=<vsys> logdesc=<fld5> msg=<event_description> action=<action> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> reason=<result> peer_notif=<fld6> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result> esptransform=<fld37> espauth=<fld38>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{fld5} msg=%{event_description} action=%{action} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} reason=%{result} peer_notif=%{fld6} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result} esptransform=%{fld37} espauth=%{fld38}" }
				id => "message-0101037122:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037122:01"
					"[rsa][message][id1]" => "0101037122:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037124" {
		# MESSAGE 0101037124
		# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}="<sinterface>" cookies=<fld10> user="<username>" group="<group>" {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} status=<event_state> error_reason=<result> peer_notif=<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+error_reason=(?<result>[^\s]*)[\s]+peer_notif=(?<fld6>.*)$" }
				id => "message-0101037124"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037124"
					"[rsa][message][id1]" => "0101037124"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037124:01
		# line in RSA: vd=<vsys> logdesc=<fld5> msg=<event_description> action=<action> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> reason=<result> peer_notif=<fld6> rem_ip=<fld32> error_reason=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{fld5} msg=%{event_description} action=%{action} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} reason=%{result} peer_notif=%{fld6} rem_ip=%{fld32} error_reason=%{disposition}" }
				id => "message-0101037124:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037124:01"
					"[rsa][message][id1]" => "0101037124:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037128" {
		# MESSAGE 0101037128
		# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}="<sinterface>" cookies=<fld10> user="<username>" group="<group>" {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} status=<event_state> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+init=(?<fld32>[^\s]*)[\s]+mode=(?<fld34>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+stage=(?<fld35>[^\s]*)[\s]+role=(?<fld36>[^\s]*)[\s]+result=(?<result>.*)$" }
				id => "message-0101037128"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037128"
					"[rsa][message][id1]" => "0101037128"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037128:01
		# line in RSA: vd=<vsys> logdesc=<info> msg=<event_description> action=<action> rem_ip=<daddr> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{info} msg=%{event_description} action=%{action} rem_ip=%{daddr} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result}" }
				id => "message-0101037128:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037128:01"
					"[rsa][message][id1]" => "0101037128:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037120" {
		# MESSAGE 0101037120
		# line in RSA: vd="<vsys>" msg="<event_description>" action={"<action>"|<action>} rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf="<sinterface>" cookies=<fld10> user="<username>" group="<group>" xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel="<fld31>" status=<event_state> xauth_result=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=\"(?<fld31>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+xauth_result=(?<result>.*)$" }
				id => "message-0101037120"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037120"
					"[rsa][message][id1]" => "0101037120"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037120:01
		# line in RSA: vd="<vsys>" msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf="<sinterface>" cookies="<fld10>" user="<username>" group="<group>" xauthuser={"<c_username>"|<c_username>} xauthgroup="<fld4>" vpntunnel={"<node>"|<node>} status=<event_state> xauth_result="<result>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+remport=(?<dport>[^\s]*)[\s]+locport=(?<sport>[^\s]*)[\s]+outintf=\"(?<sinterface>[^\"]*)\"[\s]+cookies=\"(?<fld10>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+xauthuser=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauthgroup=\"(?<fld4>[^\"]*)\"[\s]+vpntunnel=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+xauth_result=\"(?<result>[^\"]*)\"$" }
				id => "message-0101037120:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037120:01"
					"[rsa][message][id1]" => "0101037120:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037129" {
		# MESSAGE 0101037129
		# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}="<sinterface>" cookies=<fld10> user="<username>" group="<group>" {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} status=<event_state> init=<fld5> mode=<scheme> dir=<direction> stage=<fld6> role=<fld7> result=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+init=(?<fld5>[^\s]*)[\s]+mode=(?<scheme>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+stage=(?<fld6>[^\s]*)[\s]+role=(?<fld7>[^\s]*)[\s]+result=(?<result>.*)$" }
				id => "message-0101037129"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037129"
					"[rsa][message][id1]" => "0101037129"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037129:01
		# line in RSA: vd=<vsys> logdesc=<fld5> msg=<event_description> action=<action> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> reason=<result> peer_notif=<fld6> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{fld5} msg=%{event_description} action=%{action} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} reason=%{result} peer_notif=%{fld6} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result}" }
				id => "message-0101037129:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037129:01"
					"[rsa][message][id1]" => "0101037129:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037133" {
		# MESSAGE 0101037133
		# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}="<sinterface>" cookies=<fld10> user="<username>" group="<group>" {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} role=<fld5> in_spi=<dst_spi> out_spi=<src_spi>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+role=(?<fld5>[^\s]*)[\s]+in_spi=(?<dst_spi>[^\s]*)[\s]+out_spi=(?<src_spi>.*)$" }
				id => "message-0101037133"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037133"
					"[rsa][message][id1]" => "0101037133"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037133:01
		# line in RSA: vd=<vsys> logdesc=<fld5> msg=<event_description> action=<action> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> reason=<result> peer_notif=<fld6> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result> in_spi=<fld37> out_spi=<fld38>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{fld5} msg=%{event_description} action=%{action} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} reason=%{result} peer_notif=%{fld6} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result} in_spi=%{fld37} out_spi=%{fld38}" }
				id => "message-0101037133:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037133:01"
					"[rsa][message][id1]" => "0101037133:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037134" {
		# MESSAGE 0101037134
		# line in RSA: vd={"<vsys>"|<vsys>} {logdesc="<fld1>" msg="<event_description>"| msg="<event_description>"} action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}="<sinterface>" cookies=<fld10> user="<username>" group="<group>" {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group=<group> assignip=<stransaddr> |xauthgroup=<group> assignip=<stransaddr>| xauth_group=<group>| xauthgroup=<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+(logdesc=\"(?<fld1>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"|[\s]*msg=\"(?<event_description>[^\"]*)\")[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=\"(?<sinterface>[^\"]*)\"[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group=(?<group>[^\s]*)[\s]+assignip=(?<stransaddr>[^\s]*)[\s]+|xauthgroup=(?<group>[^\s]*)[\s]+assignip=(?<stransaddr>[^\s]*)|[\s]*xauth_group=(?<group>[^\s]*)|[\s]*xauthgroup=(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>.*))$" }
				id => "message-0101037134"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037134"
					"[rsa][message][id1]" => "0101037134"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037134:01
		# line in RSA: vd={"<vsys>"|<vsys>} {logdesc="<fld1>" msg="<event_description>"| msg="<event_description>"} action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}=<sinterface> cookies=<fld10> user=<username> group=<group> {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group=<group> assignip=<stransaddr> |xauthgroup=<group> assignip=<stransaddr>| xauth_group=<group>| xauthgroup=<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+(logdesc=\"(?<fld1>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"|[\s]*msg=\"(?<event_description>[^\"]*)\")[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group=(?<group>[^\s]*)[\s]+assignip=(?<stransaddr>[^\s]*)[\s]+|xauthgroup=(?<group>[^\s]*)[\s]+assignip=(?<stransaddr>[^\s]*)|[\s]*xauth_group=(?<group>[^\s]*)|[\s]*xauthgroup=(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>.*))$" }
				id => "message-0101037134:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037134:01"
					"[rsa][message][id1]" => "0101037134:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0101037127" {
		# MESSAGE 0101037127
		# line in RSA: vd={"<vsys>"|<vsys>} msg={"<event_description>"|<event_description>} action={"<action>"|<action>} {rem_ip|remip}=<daddr> {loc_ip|locip}=<saddr> {rem_port|remport}=<dport> {loc_port|locport}=<sport> {out_intf|outintf}={"<sinterface>"|<sinterface>} cookies=<fld10> user={"<username>"|<username>} group={"<group>"|<group>} {xauth_user|xauthuser}={"<c_username>"|<c_username>} {xauth_group|xauthgroup}={"<group>"|<group>} {vpn_tunnel|vpntunnel}={"<node>"|<node>} status=<event_state> init=<fld5> mode=<scheme> dir=<direction> stage=<fld6> role=<fld7> result=<result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+(rem_ip|remip)=(?<daddr>[^\s]*)[\s]+(loc_ip|locip)=(?<saddr>[^\s]*)[\s]+(rem_port|remport)=(?<dport>[^\s]*)[\s]+(loc_port|locport)=(?<sport>[^\s]*)[\s]+(out_intf|outintf)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+cookies=(?<fld10>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(xauth_user|xauthuser)=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+(xauth_group|xauthgroup)=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(vpn_tunnel|vpntunnel)=(\"(?<node>[^\"]*)\"|(?<node>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+init=(?<fld5>[^\s]*)[\s]+mode=(?<scheme>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+stage=(?<fld6>[^\s]*)[\s]+role=(?<fld7>[^\s]*)[\s]+result=(?<result>.*)$" }
				id => "message-0101037127"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037127"
					"[rsa][message][id1]" => "0101037127"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037127:01
		# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" action=<action> remip=<daddr> locip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<fld42> dstport=<dport> dstintf="<dinterface>" sessionid=<sessionid> status=<event_state> policyid=<policy_id>  dstcountry="<location_dst>" srccountry="<location_src>" trandisp=<context> service=<network_service> proto=<fld70> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+remip=(?<daddr>[^\s]*)[\s]+locip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstip=(?<fld42>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+trandisp=(?<context>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0101037127:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037127:01"
					"[rsa][message][id1]" => "0101037127:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0101037127:02
		# line in RSA: vd=<vsys> logdesc=<fld5> msg=<event_description> action=<action> remip=<daddr> loc_ip=<saddr> locip=<saddr> rem_port=<dport> remport=<dport> loc_port=<sport> locport=<sport> out_intf=<sinterface> outintf=<sinterface> cookies=<fld10> user=<username> group=<group> xauth_user=<c_username> xauthuser=<c_username> xauth_group=<group> xauthgroup=<group> assignip=<stransaddr> vpn_tunnel=<fld31> vpntunnel=<node> status=<event_state> reason=<result> peer_notif=<fld6> init=<fld32> mode=<fld34> dir=<direction> stage=<fld35> role=<fld36> result=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{fld5} msg=%{event_description} action=%{action} remip=%{daddr} loc_ip=%{saddr} locip=%{saddr} rem_port=%{dport} remport=%{dport} loc_port=%{sport} locport=%{sport} out_intf=%{sinterface} outintf=%{sinterface} cookies=%{fld10} user=%{username} group=%{group} xauth_user=%{c_username} xauthuser=%{c_username} xauth_group=%{group} xauthgroup=%{group} assignip=%{stransaddr} vpn_tunnel=%{fld31} vpntunnel=%{node} status=%{event_state} reason=%{result} peer_notif=%{fld6} init=%{fld32} mode=%{fld34} dir=%{direction} stage=%{fld35} role=%{fld36} result=%{result}" }
				id => "message-0101037127:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0101037127:02"
					"[rsa][message][id1]" => "0101037127:02"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA: vd=<vsys> status=<event_state> <fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} %{fld3} msg=\"%{event_description}\"" }
			id => "msgParserId319"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId320
	# line in RSA: vd="<vsys>" action=<action> cpu=<fld3> mem=<fld4> total_session=<fld5> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId320" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" action=%{action} cpu=%{fld3} mem=%{fld4} total_session=%{fld5} msg=\"%{event_description}\"" }
			id => "msgParserId320"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId321
	# line in RSA: {vd=<vsys> action=|action=}<action> cpu=<fld3> mem=<fld4> total_session=<fld5> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId321" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+action=|action=)(?<action>[^\s]*)[\s]+cpu=(?<fld3>[^\s]*)[\s]+mem=(?<fld4>[^\s]*)[\s]+total_session=(?<fld5>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId321"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"vsys" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId322
	# line in RSA: vd="<vsys>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId322" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" msg=\"%{event_description}\"" }
			id => "msgParserId322"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId323
	# line in RSA: vd=<vsys> ssid=<ssid> bssid=<bssid> rate=<fld29> channel=<fld26> action=<action>
	else if [logstash][msgparser][id] == "msgParserId323" {
		dissect {
			mapping => { "message" => "vd=%{vsys} ssid=%{ssid} bssid=%{bssid} rate=%{fld29} channel=%{fld26} action=%{action}" }
			id => "msgParserId323"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId324
	# line in RSA: vd=<vsys> sn=<serial_number> ap=<fld25> action=<action>
	else if [logstash][msgparser][id] == "msgParserId324" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sn=%{serial_number} ap=%{fld25} action=%{action}" }
			id => "msgParserId324"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId325
	# line in RSA: vd=<vsys> sn=<serial_number> ap=<fld25> vap=<fld22> ssid=<ssid> mac=<smacaddr> security=<scheme> action=<action>
	else if [logstash][msgparser][id] == "msgParserId325" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sn=%{serial_number} ap=%{fld25} vap=%{fld22} ssid=%{ssid} mac=%{smacaddr} security=%{scheme} action=%{action}" }
			id => "msgParserId325"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "1059028672" {
		# MESSAGE 1059028672
		# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld11> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld11>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>.*)$" }
				id => "message-1059028672"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028672"
					"[rsa][message][id1]" => "1059028672"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028672:01
		# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} kind=<fld1> direction=<direction> {srcip|src}=<saddr> {src_port|srcport}=<sport> {src_int|srcintf}={"<sinterface>"|<sinterface>} {dstip|dst}=<daddr> {dst_port|dstport}=<dport> {dst_int|dstintf}={"<dinterface>"|<dinterface>} {src_name|srcuser}={"<shost>"|<shost>} {dst_name|dstuser}={"<dhost>"|<dhost>} proto=<protocol> service={"<network_service>"|<network_service>} policyid=<policy_id> identidx=<fld12> {serial|sessionid}=<fld21> {app_list|applist}={"<group_object>"|<group_object>} {app_type|apptype}={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+kind=(?<fld1>[^\s]*)[\s]+direction=(?<direction>[^\s]*)[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(src_port|srcport)=(?<sport>[^\s]*)[\s]+(src_int|srcintf)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dst_port|dstport)=(?<dport>[^\s]*)[\s]+(dst_int|dstintf)=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+(src_name|srcuser)=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+(dst_name|dstuser)=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld12>[^\s]*)[\s]+(serial|sessionid)=(?<fld21>[^\s]*)[\s]+(app_list|applist)=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+(app_type|apptype)=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>.*)$" }
				id => "message-1059028672:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028672:01"
					"[rsa][message][id1]" => "1059028672:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> status={"<fld16>"|<fld16>}
	else if [logstash][msgparser][id] == "msgParserId327" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(\"(?<fld16>[^\"]*)\"|(?<fld16>.*))$" }
			id => "msgParserId327"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId328
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> count={"<fld16>"|<fld16>}
	else if [logstash][msgparser][id] == "msgParserId328" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+count=(\"(?<fld16>[^\"]*)\"|(?<fld16>.*))$" }
			id => "msgParserId328"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId329
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> status={"<fld16>"|<fld16>} filename={"<filename>"|<filename>} filesize={"<filename_size>"|<filename_size>} msg={"<event_description>"|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId329" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(\"(?<fld16>[^\"]*)\"|(?<fld16>[^\s]*))[\s]+filename=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+filesize=(\"(?<filename_size>[^\"]*)\"|(?<filename_size>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
			id => "msgParserId329"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId330
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> count={"<fld16>"|<fld16>} content={"<fld17>"|<fld17>}
	else if [logstash][msgparser][id] == "msgParserId330" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+count=(\"(?<fld16>[^\"]*)\"|(?<fld16>[^\s]*))[\s]+content=(\"(?<fld17>[^\"]*)\"|(?<fld17>.*))$" }
			id => "msgParserId330"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId331
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> count={"<fld16>"|<fld16>} reason={"<result>"|<result>} req={"<fld18>"|<fld18>}
	else if [logstash][msgparser][id] == "msgParserId331" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+count=(\"(?<fld16>[^\"]*)\"|(?<fld16>[^\s]*))[\s]+reason=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+req=(\"(?<fld18>[^\"]*)\"|(?<fld18>.*))$" }
			id => "msgParserId331"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId332
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action>
	else if [logstash][msgparser][id] == "msgParserId332" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>.*)$" }
			id => "msgParserId332"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId333
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> status={"<fld16>"|<fld16>} phone={"<fld19>"|<fld19>} reason={"<result>"|<result>}
	else if [logstash][msgparser][id] == "msgParserId333" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(\"(?<fld16>[^\"]*)\"|(?<fld16>[^\s]*))[\s]+phone=(\"(?<fld19>[^\"]*)\"|(?<fld19>[^\s]*))[\s]+reason=(\"(?<result>[^\"]*)\"|(?<result>.*))$" }
			id => "msgParserId333"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId334
	# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld1> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> count={"<fld16>"|<fld16>} reason={"<result>"|<result>} request={"<fld15>"|<fld15>}
	else if [logstash][msgparser][id] == "msgParserId334" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+count=(\"(?<fld16>[^\"]*)\"|(?<fld16>[^\s]*))[\s]+reason=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+request=(\"(?<fld15>[^\"]*)\"|(?<fld15>.*))$" }
			id => "msgParserId334"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "1059028705" {
		# MESSAGE 1059028705
		# line in RSA: vd={"<vsys>"|<vsys>} {attackid|attack_id}=<sigid> {user="<username>" group="<group>" srcip=<saddr>|user="<username>" group="<group>" src=<saddr>|srcip=<saddr>|src=<saddr>} {srcport|src_port}=<sport> {srcintf|src_int}={"<sinterface>"|<sinterface>} {dstip|dst}=<daddr> {dstport|dst_port}=<dport> {dstintf|dst_int}={"<dinterface>"|<dinterface>} {src_name="<shost>" dst_name="<dhost>" profilegroup="<rule_group>" profiletype="<rule_template>" profile="<rulename>"|dstname="<dhost>"} proto=<fld70> service={"<network_service>"|<network_service>} {policyid=<policy_id> identidx=<fld7>|policyid=<policy_id>} {sessionid|serial}=<fld1> {applist|app_list}={"<group_object>"|<group_object>} {apptype|app_type}={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> {count=<dclass_counter1> hostname=<shost> url="<url>"|count=<dclass_counter1>} msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+(attackid|attack_id)=(?<sigid>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*)|src=(?<saddr>[^\s]*))[\s]+(srcport|src_port)=(?<sport>[^\s]*)[\s]+(srcintf|src_int)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dstport|dst_port)=(?<dport>[^\s]*)[\s]+(dstintf|dst_int)=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+(src_name=\"(?<shost>[^\"]*)\"[\s]+dst_name=\"(?<dhost>[^\"]*)\"[\s]+profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"|dstname=\"(?<dhost>[^\"]*)\")[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)|policyid=(?<policy_id>[^\s]*))[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(applist|app_list)=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+(apptype|app_type)=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+(count=(?<dclass_counter1>[^\s]*)[\s]+hostname=(?<shost>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"|count=(?<dclass_counter1>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-1059028705"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028705"
					"[rsa][message][id1]" => "1059028705"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028705:01
		# line in RSA: vd={"<vsys>"|<vsys>} appid=<sigid> user="<username>" group="<group>" srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> proto=<fld70> service={"<network_service>"|<network_service>} {sessionid|serial}=<fld1> {applist|app_list}={"<group_object>"|<group_object>} appcat="<category>" app={"<obj_name>"|<obj_name>} action=<action> hostname="<hostname>" url="<url>" msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+appid=(?<sigid>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(applist|app_list)=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+appcat=\"(?<category>[^\"]*)\"[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-1059028705:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028705:01"
					"[rsa][message][id1]" => "1059028705:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028705:02
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> poluuid=<id2> action=<action> crscore=<reputation_num> craction=<fld37>  crlevel=<fld2> transport=<stransport> transip=<stransaddr>  tranip=<dtransaddr> tranport=<dtransport> applist=<fld14> srcname=<shost> devtype=<fld21> osname=<fld23> osversion=<fld24> unauthuser=<fld25> unauthusersource=<fld26> mastersrcmac=<fld28> srcmac=<fld29> appid=<fld11> app=<fld12> appcat=<fld13> apprisk=<risk> applist=<group_object> appact=<action> utmaction=<disposition> countapp=<fld4> countweb=<fld6> shapersentname=<fld9> shaperdropsentbyte=<sbytes> shaperrcvdname=<fld17> shaperdroprcvdbyte=<fld18> srcssid=<ssid> wanin=<fld18> wanout=<fld19> lanin=<fld20> lanout=<fld21> shaperperipname=<fld19> shaperperipdropbyte=<fld20> user=<username> hostname=<hostname> url=<url> msg=<event_description> profile=<rulename> reqtype=<fld9> direction=<direction> error=<resultcode> group=<group> profiletype=<fld23>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} poluuid=%{id2} action=%{action} crscore=%{reputation_num} craction=%{fld37}  crlevel=%{fld2} transport=%{stransport} transip=%{stransaddr}  tranip=%{dtransaddr} tranport=%{dtransport} applist=%{fld14} srcname=%{shost} devtype=%{fld21} osname=%{fld23} osversion=%{fld24} unauthuser=%{fld25} unauthusersource=%{fld26} mastersrcmac=%{fld28} srcmac=%{fld29} appid=%{fld11} app=%{fld12} appcat=%{fld13} apprisk=%{risk} applist=%{group_object} appact=%{action} utmaction=%{disposition} countapp=%{fld4} countweb=%{fld6} shapersentname=%{fld9} shaperdropsentbyte=%{sbytes} shaperrcvdname=%{fld17} shaperdroprcvdbyte=%{fld18} srcssid=%{ssid} wanin=%{fld18} wanout=%{fld19} lanin=%{fld20} lanout=%{fld21} shaperperipname=%{fld19} shaperperipdropbyte=%{fld20} user=%{username} hostname=%{hostname} url=%{url} msg=%{event_description} profile=%{rulename} reqtype=%{fld9} direction=%{direction} error=%{resultcode} group=%{group} profiletype=%{fld23}" }
				id => "message-1059028705:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028705:02"
					"[rsa][message][id1]" => "1059028705:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "1059028704" {
		# MESSAGE 1059028704:02
		# line in RSA: vd="<vsys>",attack_id=<sigid>,user="<username>",group="<group>",src=<saddr>,src_port=<sport>,src_int="<sinterface>",dst=<daddr>,dst_port=<dport>,dst_int="<dinterface>",src_name="<shost>",dst_name="<dhost>",profilegroup="<rule_group>",profiletype="<rule_template>",profile="<rulename>",proto=<fld70>,service=<network_service>,policyid=<policy_id>,serial=<fld2>,app_list="<group_object>",app_type="<obj_type>",app="<obj_name>",action=<action>,count=<dclass_counter1>,msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\",attack_id=%{sigid},user=\"%{username}\",group=\"%{group}\",src=%{saddr},src_port=%{sport},src_int=\"%{sinterface}\",dst=%{daddr},dst_port=%{dport},dst_int=\"%{dinterface}\",src_name=\"%{shost}\",dst_name=\"%{dhost}\",profilegroup=\"%{rule_group}\",profiletype=\"%{rule_template}\",profile=\"%{rulename}\",proto=%{fld70},service=%{network_service},policyid=%{policy_id},serial=%{fld2},app_list=\"%{group_object}\",app_type=\"%{obj_type}\",app=\"%{obj_name}\",action=%{action},count=%{dclass_counter1},msg=\"%{event_description}\"" }
				id => "message-1059028704:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:02"
					"[rsa][message][id1]" => "1059028704:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704
		# line in RSA: vd={"<vsys>"|<vsys>} attack_id=<sigid> user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} profilegroup={"<rule_group>"|<rule_group>} profiletype={"<rule_template>"|<rule_template>} profile={"<rulename>"|<rulename>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> { intf_policyid=<fld5> identidx=<fld6> serial=<fld1> | serial=<fld1> } app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> {count=<dclass_counter1> hostname=<hostname> url=<url>|count="<dclass_counter1>"|count=<dclass_counter1>} msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+attack_id=(?<sigid>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*intf_policyid=(?<fld5>[^\s]*)[\s]+identidx=(?<fld6>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+|[\s]*serial=(?<fld1>[^\s]*)[\s]+)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+(count=(?<dclass_counter1>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)|count=\"(?<dclass_counter1>[^\"]*)\"|count=(?<dclass_counter1>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-1059028704"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704"
					"[rsa][message][id1]" => "1059028704"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:01
		# line in RSA: vd="<vsys>" user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> src_port=<sport> src_int={"<sinterface>"|<sinterface>} dst=<daddr> dst_port=<dport> dst_int={"<dinterface>"|<dinterface>} src_name={"<shost>"|<shost>} dst_name={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> serial=<fld2> app_list={"<group_object>"|<group_object>} app_type={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> count={"<dclass_counter1>"|<dclass_counter1>} msg={"<event_description>"|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+src_name=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+dst_name=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld2>[^\s]*)[\s]+app_list=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+app_type=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+count=(\"(?<dclass_counter1>[^\"]*)\"|(?<dclass_counter1>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>.*))$" }
				id => "message-1059028704:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:01"
					"[rsa][message][id1]" => "1059028704:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:03
		# line in RSA: vd={"<vsys>"|<vsys>} attackid=<sigid> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf={"<sinterface>"|<sinterface>} dstip=<daddr> dstport=<dport> dstintf={"<dinterface>"|<dinterface>} dstname={"<dhost>"|<dhost>} proto=<fld70> service={"<network_service>"|<network_service>} policyid=<policy_id> identidx=<fld6> sessionid=<sessionid> applist={"<group_object>"|<group_object>} apptype={"<obj_type>"|<obj_type>} app={"<obj_name>"|<obj_name>} action=<action> count=<dclass_counter1> {hostname=<hostname>|msg=<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+attackid=(?<sigid>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+dstname=(\"(?<dhost>[^\"]*)\"|(?<dhost>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld6>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+apptype=(\"(?<obj_type>[^\"]*)\"|(?<obj_type>[^\s]*))[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+(hostname=(?<hostname>.*)|msg=(?<event_description>.*))$" }
				id => "message-1059028704:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:03"
					"[rsa][message][id1]" => "1059028704:03"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:04
		# line in RSA: vd="<vsys>" attackid=<sigid> srcip=<saddr> srcport=<sport> srcintf="<sinterface> dstip=<daddr> dstport=<dport> dstintf="<dinterface>" dstname="<dhost>" proto=<fld70> service="<network_service>" policyid=<policy_id> identidx=<fld6> sessionid=<sessionid> applist="<group_object>" apptype="<obj_type>" app="<obj_name>" action=<action> count=<dclass_counter1> hostname="<hostname>" url="<url>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" attackid=%{sigid} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" dstname=\"%{dhost}\" proto=%{fld70} service=\"%{network_service}\" policyid=%{policy_id} identidx=%{fld6} sessionid=%{sessionid} applist=\"%{group_object}\" apptype=\"%{obj_type}\" app=\"%{obj_name}\" action=%{action} count=%{dclass_counter1} hostname=\"%{hostname}\" url=\"%{url}\" msg=\"%{event_description}\"" }
				id => "message-1059028704:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:04"
					"[rsa][message][id1]" => "1059028704:04"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:05
		# line in RSA: vd="<vsys>" attackid=<sigid> srcip=<saddr> srcport=<sport> srcintf="<sinterface> dstip=<daddr> dstport=<dport> dstintf="<dinterface>" dstname="<dhost>" proto=<fld70> service="<network_service>" policyid=<policy_id> identidx=<fld6> sessionid=<sessionid> applist="<group_object>" apptype="<obj_type>" app="<obj_name>" action=<action> count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" attackid=%{sigid} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" dstname=\"%{dhost}\" proto=%{fld70} service=\"%{network_service}\" policyid=%{policy_id} identidx=%{fld6} sessionid=%{sessionid} applist=\"%{group_object}\" apptype=\"%{obj_type}\" app=\"%{obj_name}\" action=%{action} count=%{dclass_counter1} msg=\"%{event_description}\"" }
				id => "message-1059028704:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:05"
					"[rsa][message][id1]" => "1059028704:05"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:06
		# line in RSA: vd="<vsys>" attackid=<sigid> srcip=<saddr> srcport=<sport> srcintf="<sinterface> dstip=<daddr> dstport=<dport> dstintf="<dinterface>" dstname="<dhost>" proto=<fld70> service="<network_service>" policyid=<policy_id> identidx=<fld6> sessionid=<sessionid> applist="<group_object>" app="<obj_name>" action=<action> count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" attackid=%{sigid} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" dstname=\"%{dhost}\" proto=%{fld70} service=\"%{network_service}\" policyid=%{policy_id} identidx=%{fld6} sessionid=%{sessionid} applist=\"%{group_object}\" app=\"%{obj_name}\" action=%{action} count=%{dclass_counter1} msg=\"%{event_description}\"" }
				id => "message-1059028704:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:06"
					"[rsa][message][id1]" => "1059028704:06"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:07
		# line in RSA: vd="<vsys>" attackid=<sigid> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> dstname="<dhost>" proto=<fld70> service="<network_service>" policyid=<policy_id> identidx=<fld6> sessionid=<sessionid> applist="<group_object>" apptype="<obj_type>" app="<obj_name>" action=<action> count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" attackid=%{sigid} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} dstname=\"%{dhost}\" proto=%{fld70} service=\"%{network_service}\" policyid=%{policy_id} identidx=%{fld6} sessionid=%{sessionid} applist=\"%{group_object}\" apptype=\"%{obj_type}\" app=\"%{obj_name}\" action=%{action} count=%{dclass_counter1} msg=\"%{event_description}\"" }
				id => "message-1059028704:07"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:07"
					"[rsa][message][id1]" => "1059028704:07"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:08
		# line in RSA: vd="<vsys>" appid=<fld1> {user=<username> group=<group> srcip=<saddr>|srcip=<saddr>} {srcport=<sport> srcintf="<sinterface>"|srcport=<sport>} dstip=<daddr> {dstport=<dport> dstintf="<dinterface>"|dstport=<dport>} proto=<fld70> service="<network_service>" sessionid=<sessionid> applist="<group_object>" {appcat="<category>" app="<obj_name>"|app="<obj_name>"} action=<action> {hostname=<hostname> url="<url>" msg="<event_description>" apprisk=<risk>|url="<url>" msg="<event_description>" apprisk=<risk>|msg="<event_description>" apprisk=<risk>|msg="<event_description>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+appid=(?<fld1>[^\s]*)[\s]+(user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+(srcport=(?<sport>[^\s]*)[\s]+srcintf=\"(?<sinterface>[^\"]*)\"|srcport=(?<sport>[^\s]*))[\s]+dstip=(?<daddr>[^\s]*)[\s]+(dstport=(?<dport>[^\s]*)[\s]+dstintf=\"(?<dinterface>[^\"]*)\"|dstport=(?<dport>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=\"(?<group_object>[^\"]*)\"[\s]+(appcat=\"(?<category>[^\"]*)\"[\s]+app=\"(?<obj_name>[^\"]*)\"|app=\"(?<obj_name>[^\"]*)\")[\s]+action=(?<action>[^\s]*)[\s]+(hostname=(?<hostname>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|msg=\"(?<event_description>[^\"]*)\")$" }
				id => "message-1059028704:08"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:08"
					"[rsa][message][id1]" => "1059028704:08"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:14
		# line in RSA: vd=<vsys> appid=<fld7> user={"<username>"|<username>} group={"<group>"|<group>} srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<fld70> service=<network_service> policyid=<policy_id> sessionid=<sessionid> applist=<group_object> appcat=<category> app=<obj_name> action=<action> hostname=<hostname> url=<url> msg=<event_description> apprisk=<risk>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+appid=(?<fld7>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(?<group_object>[^\s]*)[\s]+appcat=(?<category>[^\s]*)[\s]+app=(?<obj_name>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=(?<event_description>[^\s]*)[\s]+apprisk=(?<risk>.*)$" }
				id => "message-1059028704:14"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:14"
					"[rsa][message][id1]" => "1059028704:14"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:13
		# line in RSA: vd=<vsys> appid=<fld7> user={"<username>"|<username>} group={"<group>"|<group>} srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<fld70> service=<network_service> policyid=<policy_id> sessionid=<sessionid> applist=<group_object> appcat=<category> app=<obj_name> action=<action> url=<url> msg=<event_description> apprisk=<risk>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+appid=(?<fld7>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(?<group_object>[^\s]*)[\s]+appcat=(?<category>[^\s]*)[\s]+app=(?<obj_name>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=(?<event_description>[^\s]*)[\s]+apprisk=(?<risk>.*)$" }
				id => "message-1059028704:13"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:13"
					"[rsa][message][id1]" => "1059028704:13"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:15
		# line in RSA: vd=<vsys> appid=<fld7> user={"<username>"|<username>} group={"<group>"|<group>} srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<fld70> service=<network_service> policyid=<policy_id> sessionid=<sessionid> applist=<group_object> appcat=<category> app=<obj_name> action=<action> msg=<event_description> apprisk=<risk>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+appid=(?<fld7>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(?<group_object>[^\s]*)[\s]+appcat=(?<category>[^\s]*)[\s]+app=(?<obj_name>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=(?<event_description>[^\s]*)[\s]+apprisk=(?<risk>.*)$" }
				id => "message-1059028704:15"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:15"
					"[rsa][message][id1]" => "1059028704:15"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:09
		# line in RSA: vd={"<vsys>"|<vsys>} appid=<fld7> user=<username> srcip=<saddr> srcport=<sport> srcintf={"<sinterface>"|<sinterface>} dstip=<daddr> dstport=<dport> dstintf={"<dinterface>"|<dinterface>} {profiletype=<fld8> proto=<fld70>|proto=<fld70>} service={"<network_service>"|<network_service>} policyid=<policy_id> sessionid=<sessionid> applist={"<group_object>"|<group_object>} appcat=<category> app={"<obj_name>"|<obj_name>} action=<action> {hostname="<hostname>" url="<url>" msg="<event_description>" apprisk=<risk>|url="<url>" msg="<event_description>" apprisk=<risk>|msg="<event_description>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+appid=(?<fld7>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+(profiletype=(?<fld8>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)|proto=(?<fld70>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+appcat=(?<category>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+(hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|msg=\"(?<event_description>[^\"]*)\")$" }
				id => "message-1059028704:09"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:09"
					"[rsa][message][id1]" => "1059028704:09"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:10
		# line in RSA: vd={"<vsys>"|<vsys>} appid=<fld7> user=<username> srcip=<saddr> srcport=<sport> srcintf={"<sinterface>"|<sinterface>} dstip=<daddr> dstport=<dport> {profiletype=<fld8> proto=<fld70>|proto=<fld70>} service={"<network_service>"|<network_service>} policyid=<policy_id> sessionid=<sessionid> applist={"<group_object>"|<group_object>} appcat=<category> app={"<obj_name>"|<obj_name>} action=<action> {hostname="<hostname>" url="<url>" msg="<event_description>" apprisk=<risk>|msg="<event_description>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+appid=(?<fld7>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+(profiletype=(?<fld8>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)|proto=(?<fld70>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+appcat=(?<category>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+(hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|msg=\"(?<event_description>[^\"]*)\")$" }
				id => "message-1059028704:10"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:10"
					"[rsa][message][id1]" => "1059028704:10"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:11
		# line in RSA: vd=""<vsys>"" appid=<fld7> user=""<username>"" group=""<group>"" srcip=<saddr> srcport=<sport> srcintf=""<sinterface>"" dstip=<daddr> dstport=<dport> dstintf=""<dinterface>"" proto=<fld70> service=""<network_service>"" sessionid=<sessionid> applist=""<group_object>"" appcat=""<category>"" app=""<obj_name>"" action=<action> hostname=""<hostname>"" url=""<url>"" msg=""<event_description>"" apprisk=<risk>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"\"%{vsys}\"\" appid=%{fld7} user=\"\"%{username}\"\" group=\"\"%{group}\"\" srcip=%{saddr} srcport=%{sport} srcintf=\"\"%{sinterface}\"\" dstip=%{daddr} dstport=%{dport} dstintf=\"\"%{dinterface}\"\" proto=%{fld70} service=\"\"%{network_service}\"\" sessionid=%{sessionid} applist=\"\"%{group_object}\"\" appcat=\"\"%{category}\"\" app=\"\"%{obj_name}\"\" action=%{action} hostname=\"\"%{hostname}\"\" url=\"\"%{url}\"\" msg=\"\"%{event_description}\"\" apprisk=%{risk}" }
				id => "message-1059028704:11"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:11"
					"[rsa][message][id1]" => "1059028704:11"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:12
		# line in RSA: vd={"<vsys>"|<vsys>} appid=<fld7> user=<username> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> {profiletype=<fld8> proto=<fld70>|proto=<fld70>} service={"<network_service>"|<network_service>} policyid=<policy_id> sessionid=<sessionid> applist={"<group_object>"|<group_object>} appcat=<category> app={"<obj_name>"|<obj_name>} action=<action> {hostname="<hostname>" url="<url>" msg="<event_description>" apprisk=<risk>|msg="<event_description>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+appid=(?<fld7>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+(profiletype=(?<fld8>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)|proto=(?<fld70>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=(\"(?<group_object>[^\"]*)\"|(?<group_object>[^\s]*))[\s]+appcat=(?<category>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+(hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+apprisk=(?<risk>.*)|msg=\"(?<event_description>[^\"]*)\")$" }
				id => "message-1059028704:12"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:12"
					"[rsa][message][id1]" => "1059028704:12"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:16
		# line in RSA: vd=<vsys> attackid=<sigid> srcip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstintf="<dinterface>" dstname="<dhost>" proto=<fld70> service="<network_service>" policyid=<policy_id> identidx=<id> sessionid=<sessionid> applist="<group_object>" apptype="<obj_type>" app="<obj_name>" action=<action> {count=<dclass_counter1> hostname="<hostname>" url="<url>"|count=<dclass_counter1> url="<url>"|count=<dclass_counter1>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+dstname=\"(?<dhost>[^\"]*)\"[\s]+proto=(?<fld70>[^\s]*)[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+applist=\"(?<group_object>[^\"]*)\"[\s]+apptype=\"(?<obj_type>[^\"]*)\"[\s]+app=\"(?<obj_name>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+(count=(?<dclass_counter1>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"|count=(?<dclass_counter1>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"|count=(?<dclass_counter1>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-1059028704:16"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:16"
					"[rsa][message][id1]" => "1059028704:16"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:17
		# line in RSA: vd=<vsys> attackid=<sigid> srcip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstname="<dhost>" proto=<fld70> service="<network_service>" policyid=<policy_id> identidx=<id> sessionid=<sessionid> applist="<group_object>" apptype="<obj_type>" app="<obj_name>" action=<action> count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} attackid=%{sigid} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface}\" dstip=%{daddr} dstport=%{dport} dstname=\"%{dhost}\" proto=%{fld70} service=\"%{network_service}\" policyid=%{policy_id} identidx=%{id} sessionid=%{sessionid} applist=\"%{group_object}\" apptype=\"%{obj_type}\" app=\"%{obj_name}\" action=%{action} count=%{dclass_counter1} msg=\"%{event_description}\"" }
				id => "message-1059028704:17"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "1059028704:17"
					"[rsa][message][id1]" => "1059028704:17"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:19
		# line in RSA: vd=<vsys>,appid=<fld7>,user="<username>",srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",profiletype="<rule_template>",proto=<fld70>,service="<network_service>",policyid=<policy_id>,sessionid=<sessionid>,applist="<group_object>",appcat="<category>",app="<obj_name>",{action=<action>,crscore=<reputation_num>,crlevel=<fld38>,hostname="<hostname>",url="<url>"|action=<action>,crscore=<reputation_num>,crlevel=<fld38>|action=<action>,hostname="<hostname>",url="<url>"|action=<action>,url="<url>"|action=<action>},msg="<event_description>",apprisk=<risk>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^,]*),appid=(?<fld7>[^,]*),user=\"(?<username>[^\"]*)\",srcip=(?<saddr>[^,]*),srcport=(?<sport>[^,]*),srcintf=\"(?<sinterface>[^\"]*)\",dstip=(?<daddr>[^,]*),dstport=(?<dport>[^,]*),dstintf=\"(?<dinterface>[^\"]*)\",profiletype=\"(?<rule_template>[^\"]*)\",proto=(?<fld70>[^,]*),service=\"(?<network_service>[^\"]*)\",policyid=(?<policy_id>[^,]*),sessionid=(?<sessionid>[^,]*),applist=\"(?<group_object>[^\"]*)\",appcat=\"(?<category>[^\"]*)\",app=\"(?<obj_name>[^\"]*)\",(action=(?<action>[^,]*),crscore=(?<reputation_num>[^,]*),crlevel=(?<fld38>[^,]*),hostname=\"(?<hostname>[^\"]*)\",url=\"(?<url>[^\"]*)\"|action=(?<action>[^,]*),crscore=(?<reputation_num>[^,]*),crlevel=(?<fld38>[^,]*)|action=(?<action>[^,]*),hostname=\"(?<hostname>[^\"]*)\",url=\"(?<url>[^\"]*)\"|action=(?<action>[^,]*),url=\"(?<url>[^\"]*)\"|action=(?<action>[^,]*)),msg=\"(?<event_description>[^\"]*)\",apprisk=(?<risk>.*)$" }
				id => "message-1059028704:19"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
					"[event][id]" => "1059028704:19"
					"[rsa][message][id1]" => "1059028704:19"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 1059028704:18
		# line in RSA: apprisk=<risk> appcat=<category> profile=<rulename> profiletype=<rule_template> appid=<fld7> logver=<fld51> devname=<event_source> devid=<hardware_id> logid=<id> log_id=<id> type=<event_type> subtype=<category> level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> src=<saddr> srcname=<saddr> src_port=<sport> dst=<daddr> dst_country=<location_dst> dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> app_type=<obj_type> rule=<rule> sent=<sbytes> rcvd=<rbytes>  src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> app_cat=<fld25> user=<username> group=<group> msg=<event_description> profilegroup=<rule_group> action=<action> fwver=<fld13> ui=<network_service> process=<process> reason=<result> gateway=<fld14> interface=<interface> mode=<scheme> file=<filename> size=<fld7> logdesc=<info> port=<sport> version=<version> filesize=<filename_size> processtime=<fld34> hostname=<hostname> clouduser=<fld11> cloudaction=<fld12> url=<url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "apprisk=%{risk} appcat=%{category} profile=%{rulename} profiletype=%{rule_template} appid=%{fld7} logver=%{fld51} devname=%{event_source} devid=%{hardware_id} logid=%{id} log_id=%{id} type=%{event_type} subtype=%{category} level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} src=%{saddr} srcname=%{saddr} src_port=%{sport} dst=%{daddr} dst_country=%{location_dst} dst_port=%{dport} tran_ip=%{stransaddr} tran_port=%{stransport} app_type=%{obj_type} rule=%{rule} sent=%{sbytes} rcvd=%{rbytes}  src_int=%{sinterface} dst_int=%{dinterface} SN=%{serial_number} app_cat=%{fld25} user=%{username} group=%{group} msg=%{event_description} profilegroup=%{rule_group} action=%{action} fwver=%{fld13} ui=%{network_service} process=%{process} reason=%{result} gateway=%{fld14} interface=%{interface} mode=%{scheme} file=%{filename} size=%{fld7} logdesc=%{info} port=%{sport} version=%{version} filesize=%{filename_size} processtime=%{fld34} hostname=%{hostname} clouduser=%{fld11} cloudaction=%{fld12} url=%{url}" }
				id => "message-1059028704:18"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
					"[event][id]" => "1059028704:18"
					"[rsa][message][id1]" => "1059028704:18"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0954024576" {
		# MESSAGE 0954024576:01
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user=<username> group=<group> src=<saddr> {sport=<sport> src_port=<fld28>|sport=<sport>} src_int=<sinterface> dst=<daddr> {dport=<dport> dst_port=<fld29>|dport=<dport>} dst_int=<dinterface> service=<network_service> status=<event_state> hostname=<hostname> url=<url> from=<from> to=<to> msg=<event_description> rulename=<rulename> compoundname=<fld2> action=<action> severity=<risk_num>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld28>[^\s]*)|sport=(?<sport>[^\s]*))[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld29>[^\s]*)|dport=(?<dport>[^\s]*))[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+to=(?<to>[^\s]*)[\s]+msg=(?<event_description>[^\s]*)[\s]+rulename=(?<rulename>[^\s]*)[\s]+compoundname=(?<fld2>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+severity=(?<risk_num>.*)$" }
				id => "message-0954024576:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0954024576:01"
					"[rsa][message][id1]" => "0954024576:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0954024576:02
		# line in RSA: vd=<vsys> filteridx=<fld1> filtertype=<fld2> policyid=<policy_id> identidx=<fld3> sessionid=<sessionid> epoch=<fld5> eventid=<fld6> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> filetype=<fld7> sentbyte=<sbytes> rcvdbyte=<rbytes> hostname=<hostname> url=<url> action=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} filteridx=%{fld1} filtertype=%{fld2} policyid=%{policy_id} identidx=%{fld3} sessionid=%{sessionid} epoch=%{fld5} eventid=%{fld6} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} filetype=%{fld7} sentbyte=%{sbytes} rcvdbyte=%{rbytes} hostname=%{hostname} url=%{url} action=%{action}" }
				id => "message-0954024576:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0954024576:02"
					"[rsa][message][id1]" => "0954024576:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0954024577" {
		# MESSAGE 0954024577
		# line in RSA: vd="<vsys>" {policyid=<policy_id> identidx=<fld10>|policyid=<policy_id>} serial=<fld1> user="<username>" group="<group>" src=<saddr> sport=<sport> src_port=<fld28> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld29> dst_int="<dinterface>" service=<network_service>  status=<event_state> hostname="<hostname>" url="<url>" from="<from>" to="<to>" msg={"<event_description>"|<event_description>} rulename="<rulename>" {compoundname="<fld2>" action=<action> severity=<risk_num>|compoundname="<fld2>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld10>[^\s]*)|policyid=(?<policy_id>[^\s]*))[\s]+serial=(?<fld1>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld28>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld29>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+rulename=\"(?<rulename>[^\"]*)\"[\s]+(compoundname=\"(?<fld2>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+severity=(?<risk_num>.*)|compoundname=\"(?<fld2>[^\"]*)\")$" }
				id => "message-0954024577"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0954024577"
					"[rsa][message][id1]" => "0954024577"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0954024577:01
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user=<username> group=<group> src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service>  status=<event_state> hostname=<hostname> url=<url> from=<from> to=<to> msg=<event_description> rulename=<rulename> compoundname=<fld2> action=<action> severity=<risk_num>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} serial=%{fld1} user=%{username} group=%{group} src=%{saddr} sport=%{sport} src_int=%{sinterface} dst=%{daddr} dport=%{dport} dst_int=%{dinterface} service=%{network_service}  status=%{event_state} hostname=%{hostname} url=%{url} from=%{from} to=%{to} msg=%{event_description} rulename=%{rulename} compoundname=%{fld2} action=%{action} severity=%{risk_num}" }
				id => "message-0954024577:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0954024577:01"
					"[rsa][message][id1]" => "0954024577:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0954024577:02
		# line in RSA: vd="<vsys>" policyid=<policy_id> identidx=<fld13> serial=<fld1> user="<username>" group="<group>" src=<saddr> {sport=<sport> src_port=<fld7>|sport=<sport>} src_int="<sinterface>" dst=<daddr> {dport=<dport> dst_port=<fld8>|dport=<dport>} dst_int="<dinterface>" service=<network_service>  status=<event_state> hostname="<hostname>" url="<url>" from="<from>" to="<to>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld13>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld7>[^\s]*)|sport=(?<sport>[^\s]*))[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld8>[^\s]*)|dport=(?<dport>[^\s]*))[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0954024577:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0954024577:02"
					"[rsa][message][id1]" => "0954024577:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0954024577:03
		# line in RSA: vd=<vsys> filteridx=<fcatnum> filtertype=<filter> filtercat=<fcatnum> severity=<severity> policyid=<policy_id> sessionid=<sessionid> epoch=<fld1> eventid=<fld2> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<fld70> service=<network_service> filetype=<filetype> sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> action=<action> hostname=<hostname> url=<url> agent=<fld2> filename=<filename> filesize=<filename_size> profile=<rulename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} filteridx=%{fcatnum} filtertype=%{filter} filtercat=%{fcatnum} severity=%{severity} policyid=%{policy_id} sessionid=%{sessionid} epoch=%{fld1} eventid=%{fld2} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{fld70} service=%{network_service} filetype=%{filetype} sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} action=%{action} hostname=%{hostname} url=%{url} agent=%{fld2} filename=%{filename} filesize=%{filename_size} profile=%{rulename}" }
				id => "message-0954024577:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0954024577:03"
					"[rsa][message][id1]" => "0954024577:03"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0400000000" {
		# MESSAGE 0400000000
		# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> src=<saddr> dst=<daddr> {icmp_id=<fld2> icmp_type=<icmptype>| icmp_type=<icmptype>} icmp_code=<icmpcode> { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> msg="<event_description> [Reference: <info> ]"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+(icmp_id=(?<fld2>[^\s]*)[\s]+icmp_type=(?<icmptype>[^\s]*)|[\s]*icmp_type=(?<icmptype>[^\s]*))[\s]+icmp_code=(?<icmpcode>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+msg=\"(?<event_description>[^\s]*)[\s]+\[Reference:[\s]+(?<info>[^\s]*)[\s]+\]\"$" }
				id => "message-0400000000"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0400000000"
					"[rsa][message][id1]" => "0400000000"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0400000000:01
		# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> src=<saddr> dst=<daddr> {src_port=<sport> dst_port=<dport> | icmp_type=<icmptype> icmp_code=<icmpcode>} { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> msg="<event_description> [Reference: <info> ]"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+(src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+|[\s]*icmp_type=(?<icmptype>[^\s]*)[\s]+icmp_code=(?<icmpcode>[^\s]*))[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+msg=\"(?<event_description>[^\s]*)[\s]+\[Reference:[\s]+(?<info>[^\s]*)[\s]+\]\"$" }
				id => "message-0400000000:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0400000000:01"
					"[rsa][message][id1]" => "0400000000:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0419070000" {
		# MESSAGE 0419070000:05
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld4> attack_id=<sigid> severity=<risk> src=<saddr> dst=<daddr> icmp_id=<fld2> icmp_type=<icmptype> icmp_code=<icmpcode> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> ref="<info>" count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+severity=(?<risk>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+icmp_id=(?<fld2>[^\s]*)[\s]+icmp_type=(?<icmptype>[^\s]*)[\s]+icmp_code=(?<icmpcode>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+ref=\"(?<info>[^\"]*)\"[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0419070000:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000:05"
					"[rsa][message][id1]" => "0419070000:05"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419070000:04
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld4> attack_id=<sigid> severity=<risk> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> src_int=<sinterface> dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> ref="<info>" count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} serial=%{fld4} attack_id=%{sigid} severity=%{risk} src=%{saddr} dst=%{daddr} src_port=%{sport} dst_port=%{dport} src_int=%{sinterface} dst_int=%{dinterface} status=%{event_state} proto=%{fld70} service=%{network_service} user=%{username} group=%{group} ref=\"%{info}\" count=%{dclass_counter1} msg=\"%{event_description}\"" }
				id => "message-0419070000:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000:04"
					"[rsa][message][id1]" => "0419070000:04"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419070000
		# line in RSA: {vd=<vsys> serial=|serial=}<fld4> attack_id=<sigid> severity=<risk> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> ref="<fld5>" msg="<event_description>[Reference: <info>]"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld4>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+severity=(?<risk>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+ref=\"(?<fld5>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\[]*)\[Reference:[\s]+(?<info>[^\]]*)\]\"$" }
				id => "message-0419070000"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000"
					"[rsa][message][id1]" => "0419070000"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419070000:01
		# line in RSA: {vd=<vsys> serial=|serial=}<fld4> attack_id=<sigid> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> msg="<event_description>[Reference: <info>]"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld4>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+msg=\"(?<event_description>[^\[]*)\[Reference:[\s]+(?<info>[^\]]*)\]\"$" }
				id => "message-0419070000:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000:01"
					"[rsa][message][id1]" => "0419070000:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419070000:02
		# line in RSA: {vd=<vsys> serial=|serial=}<fld4> attack_id=<sigid> src=<saddr> dst=<daddr> icmp_id=<fld2> icmp_type=<icmptype> icmp_code=<icmpcode> { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> msg="<event_description>[Reference: <info>]"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld4>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+icmp_id=(?<fld2>[^\s]*)[\s]+icmp_type=(?<icmptype>[^\s]*)[\s]+icmp_code=(?<icmpcode>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+msg=\"(?<event_description>[^\[]*)\[Reference:[\s]+(?<info>[^\]]*)\]\"$" }
				id => "message-0419070000:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000:02"
					"[rsa][message][id1]" => "0419070000:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419070000:03
		# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> severity=<severity> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+severity=(?<severity>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0419070000:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000:03"
					"[rsa][message][id1]" => "0419070000:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419070000:06
		# line in RSA: vd=<vsys> attack_id=<sigid> severity=<risk> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> src_int=<sinterface> dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> ref="<info>" count=<dclass_counter1> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} attack_id=%{sigid} severity=%{risk} src=%{saddr} dst=%{daddr} src_port=%{sport} dst_port=%{dport} src_int=%{sinterface} dst_int=%{dinterface} status=%{event_state} proto=%{fld70} service=%{network_service} user=%{username} group=%{group} ref=\"%{info}\" count=%{dclass_counter1} msg=\"%{event_description}\"" }
				id => "message-0419070000:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419070000:06"
					"[rsa][message][id1]" => "0419070000:06"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId356
	# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> src=<saddr> dst=<daddr> icmp_id=<fld2> icmp_type=<icmptype> icmp_code=<icmpcode> { interface=<interface> src_int=<sinterface> | src_int=<sinterface> } dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> msg="<event_description> [Reference: <info>]"
	else if [logstash][msgparser][id] == "msgParserId356" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+icmp_id=(?<fld2>[^\s]*)[\s]+icmp_type=(?<icmptype>[^\s]*)[\s]+icmp_code=(?<icmpcode>[^\s]*)[\s]+([\s]*interface=(?<interface>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+|[\s]*src_int=(?<sinterface>[^\s]*)[\s]+)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+msg=\"(?<event_description>[^\s]*)[\s]+\[Reference:[\s]+(?<info>[^\]]*)\]\"$" }
			id => "msgParserId356"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0420018432" {
		# MESSAGE 0420018432
		# line in RSA: severity=<risk> carrier_ep="<fld6>" { profilegroup="<rule_group>" profiletype="<rule_template>" profile="<rulename>" | profile="<rulename>" } src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> {identidx=<fld7> serial=<fld4> status=<event_state> | serial=<fld4> status=<event_state> | status=<event_state>} proto=<fld70> service=<network_service> vd={"<vsys>" | <vsys>} count=<dclass_counter1> src_port=<sport> dst_port=<dport> attack_id=<sigid> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=\"(?<fld6>[^\"]*)\"[\s]+([\s]*profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+|[\s]*profile=\"(?<rulename>[^\"]*)\"[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(identidx=(?<fld7>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+|[\s]*serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+|[\s]*status=(?<event_state>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"[\s]+|[\s]*(?<vsys>[^\s]*))[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0420018432"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0420018432"
					"[rsa][message][id1]" => "0420018432"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0420018432:01
		# line in RSA: severity=<risk> src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} {identidx=<fld7> serial=<fld4> status=<event_state> | serial=<fld4> status=<event_state> | status=<event_state>} proto=<fld70> service=<network_service> vd={"<vsys>" | <vsys>} count=<dclass_counter1> src_port=<sport> dst_port=<dport> attack_id=<sigid> attack_name=<signame> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+(identidx=(?<fld7>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+|[\s]*serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+|[\s]*status=(?<event_state>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"[\s]+|[\s]*(?<vsys>[^\s]*))[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+attack_name=(?<signame>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0420018432:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0420018432:01"
					"[rsa][message][id1]" => "0420018432:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId359
	# line in RSA: {vd=<vsys> attack_id=|attack_id=}<sigid> severity=<risk> src=<saddr> dst=<daddr> src_port=<sport> dst_port=<dport> src_int=<sinterface> dst_int=<dinterface> status=<event_state> proto=<protocol> service=<network_service> user=<username> group=<group> ref="<info>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId359" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+attack_id=|attack_id=)(?<sigid>[^\s]*)[\s]+severity=(?<risk>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<protocol>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId359"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"protocol" => "TCP"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId360
	# line in RSA: vd=<vsys> serial=<fld4> attack_id=<sigid> severity=<risk> src=<saddr> dst=<daddr> icmp_id=<fld2> icmp_type=<icmptype> icmp_code=<icmpcode> src_int=<sinterface> dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> user=<username> group=<group> ref="<info>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "vd=%{vsys} serial=%{fld4} attack_id=%{sigid} severity=%{risk} src=%{saddr} dst=%{daddr} icmp_id=%{fld2} icmp_type=%{icmptype} icmp_code=%{icmpcode} src_int=%{sinterface} dst_int=%{dinterface} status=%{event_state} proto=%{fld70} service=%{network_service} user=%{username} group=%{group} ref=\"%{info}\" msg=\"%{event_description}\"" }
			id => "msgParserId360"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0419016384" {
		# MESSAGE 0419016384
		# line in RSA: severity=<risk> carrier_ep=<fld6> profilegroup={"<rule_group>"|<rule_group>} profiletype={"<rule_template>"|<rule_template>} profile={"<rulename>"|<rulename>} src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<fld7> serial=<fld4> status=<event_state> proto=<fld70> service=<network_service> vd=<vsys> count=<dclass_counter1> src_port=<sport> dst_port=<dport> attack_id=<sigid> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" incident_serialno=<id> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=(?<fld6>[^\s]*)[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+incident_serialno=(?<id>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0419016384"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384"
					"[rsa][message][id1]" => "0419016384"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:01
		# line in RSA: severity=<risk> carrier_ep=<fld6> profile={"<rulename>"|<rulename>} src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> serial=<fld4> status=<event_state> proto=<fld70> service=<network_service> vd=<vsys> count=<dclass_counter1> src_port=<sport> dst_port=<dport> attack_id=<sigid> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" incident_serialno=<id> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=(?<fld6>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+incident_serialno=(?<id>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0419016384:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:01"
					"[rsa][message][id1]" => "0419016384:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:02
		# line in RSA: vd="<vsys>" severity=<risk> {srcip|src}=<saddr> {dstip|dst}=<daddr> {srcintf=<sinterface> dstintf=<dinterface>|dst_int=<dinterface>|dstintf=<dinterface>} policyid=<policy_id> identidx=<id> {sessionid|serial}=<fld11> status=<event_state> proto=<fld70> service=<network_service> count=<fld1> attackname=<signame> srcport=<sport> dstport=<dport> attackid=<sigid> sensor="<sensor>" {ref="<info>" user="<username>" group="<group>"|ref="<info>"} {incidentserialno=<fld26> msg="<event_description>"|incidentserialno=<fld26>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+severity=(?<risk>[^\s]*)[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(srcintf=(?<sinterface>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)|dst_int=(?<dinterface>[^\s]*)|dstintf=(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(sessionid|serial)=(?<fld11>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+count=(?<fld1>[^\s]*)[\s]+attackname=(?<signame>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+(ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|ref=\"(?<info>[^\"]*)\")[\s]+(incidentserialno=(?<fld26>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|incidentserialno=(?<fld26>.*))$" }
				id => "message-0419016384:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:02"
					"[rsa][message][id1]" => "0419016384:02"
					"[event][categoryid]" => "1002040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:03
		# line in RSA: vd="<vsys>" severity=<risk> {srcip|src}=<saddr> {dstip|dst}=<daddr> policyid=<policy_id> identidx=<id> {sessionid|serial}=<fld11> status=<event_state> proto=<fld70> service=<network_service> count=<fld1> attackname=<signame> srcport=<sport> dstport=<dport> attackid=<sigid> sensor="<sensor>" {ref="<info>" user="<username>" group="<group>"|ref="<info>"} {incidentserialno=<fld26> msg="<event_description>"|incidentserialno=<fld26>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+severity=(?<risk>[^\s]*)[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(sessionid|serial)=(?<fld11>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+count=(?<fld1>[^\s]*)[\s]+attackname=(?<signame>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+(ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|ref=\"(?<info>[^\"]*)\")[\s]+(incidentserialno=(?<fld26>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|incidentserialno=(?<fld26>.*))$" }
				id => "message-0419016384:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:03"
					"[rsa][message][id1]" => "0419016384:03"
					"[event][categoryid]" => "1002040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:06
		# line in RSA: vd="<vsys>" severity=<risk> {srcip|src}=<saddr> {dstip|dst}=<daddr> srcintf="<sinterface>" dstintf="<dinterface>" sessionid=<sessionid> action=<action> proto=<fld70> service=<network_service> attack=<signame> srcport=<sport> dstport=<dport> hostname="<hostname>" direction=<direction> attackid=<sigid> profile="<rulename>" {ref="<info>" user="<username>" group="<group>"|ref="<info>" user="<username>"|ref="<info>"} {incidentserialno=<fld26> msg="<event_description>"|incidentserialno=<fld26>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+severity=(?<risk>[^\s]*)[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+attack=(?<signame>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+direction=(?<direction>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+(ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"|ref=\"(?<info>[^\"]*)\")[\s]+(incidentserialno=(?<fld26>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|incidentserialno=(?<fld26>.*))$" }
				id => "message-0419016384:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:06"
					"[rsa][message][id1]" => "0419016384:06"
					"[event][categoryid]" => "1002040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:07
		# line in RSA: vd="<vsys>" severity=<risk> {srcip=<saddr> srccountry=<location_src>|srcip=<saddr>} dstip=<daddr> {srcintf="<sinterface>" dstintf="<dinterface>" policyid=<fld42> sessionid=<sessionid>|srcintf="<sinterface>" dstintf="<dinterface>" sessionid=<sessionid>|sessionid=<sessionid>} action=<action> proto=<fld70> service=<network_service> attack=<signame> srcport=<sport> {dstport=<dport> hostname=<hostname>|dstport=<dport>} direction=<direction> attackid=<sigid> profile="<rulename>" {ref="<info>" user="<username>" group="<group>"|ref="<info>" user="<username>"|ref="<info>"} {incidentserialno=<fld26> msg="<event_description>"|incidentserialno=<fld26>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+severity=(?<risk>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srccountry=(?<location_src>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+dstip=(?<daddr>[^\s]*)[\s]+(srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+policyid=(?<fld42>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)|srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)|sessionid=(?<sessionid>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+attack=(?<signame>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+(dstport=(?<dport>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+direction=(?<direction>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+(ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"|ref=\"(?<info>[^\"]*)\")[\s]+(incidentserialno=(?<fld26>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|incidentserialno=(?<fld26>.*))$" }
				id => "message-0419016384:07"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:07"
					"[rsa][message][id1]" => "0419016384:07"
					"[event][categoryid]" => "1002040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:04
		# line in RSA: vd="<vsys>" severity=<risk> {srcip|src}=<saddr> {dstip|dst}=<daddr> {srcintf="<sinterface>" dstintf="<dinterface>" sessionid=<sessionid>|sessionid=<sessionid>} action=<action> proto=<fld70> service=<network_service> attack=<signame> srcport=<sport> dstport=<dport> direction=<direction> attackid=<sigid> profile="<rulename>" {ref="<info>" user="<username>" group="<group>"|ref="<info>" user="<username>"|ref="<info>"} {incidentserialno=<fld26> msg="<event_description>"|incidentserialno=<fld26>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+severity=(?<risk>[^\s]*)[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)|sessionid=(?<sessionid>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+attack=(?<signame>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+direction=(?<direction>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+(ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"|ref=\"(?<info>[^\"]*)\")[\s]+(incidentserialno=(?<fld26>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|incidentserialno=(?<fld26>.*))$" }
				id => "message-0419016384:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:04"
					"[rsa][message][id1]" => "0419016384:04"
					"[event][categoryid]" => "1002040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016384:05
		# line in RSA: vd=<vsys> severity=<risk> srcip=<saddr> src=<saddr> dst=<daddr> ipdst=<daddr> sessionid=<sessionid> action=<action> proto=<fld70> service=<network_service> attack=<signame> srcport=<sport> dstport=<dport> direction=<direction> attackid=<sigid> profile=<rulename> ref=<info> user=<username> group=<group> incidentserialno=<fld26> msg=<event_description> level=<severity> srcintf=<sinterface> dstip=<daddr> dstintf=<dinterface> policyid=<policy_id> identidx=<id> status=<event_state> count=<fld26> attackname=<signame> sensor=<sensor> crscore=<reputation_num> crlevel=<fld38> hostname=<hostname> srccountry=<location_src>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} severity=%{risk} srcip=%{saddr} src=%{saddr} dst=%{daddr} ipdst=%{daddr} sessionid=%{sessionid} action=%{action} proto=%{fld70} service=%{network_service} attack=%{signame} srcport=%{sport} dstport=%{dport} direction=%{direction} attackid=%{sigid} profile=%{rulename} ref=%{info} user=%{username} group=%{group} incidentserialno=%{fld26} msg=%{event_description} level=%{severity} srcintf=%{sinterface} dstip=%{daddr} dstintf=%{dinterface} policyid=%{policy_id} identidx=%{id} status=%{event_state} count=%{fld26} attackname=%{signame} sensor=%{sensor} crscore=%{reputation_num} crlevel=%{fld38} hostname=%{hostname} srccountry=%{location_src}" }
				id => "message-0419016384:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016384:05"
					"[rsa][message][id1]" => "0419016384:05"
					"[event][categoryid]" => "1002040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0419016385" {
		# MESSAGE 0419016385
		# line in RSA: severity=<risk> carrier_ep=<fld6> profilegroup={"<rule_group>"|<rule_group>} profiletype={"<rule_template>"|<rule_template>} profile={"<rulename>"|<rulename>} src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<fld7> serial=<fld4> status=<event_state> proto=<fld70> service=<network_service> vd=<vsys> count=<dclass_counter1> icmp_id=<fld36> icmp_type=<fld38> icmp_code=<fld39> attack_id=<sigid> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" incident_serialno=<id> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=(?<fld6>[^\s]*)[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+icmp_id=(?<fld36>[^\s]*)[\s]+icmp_type=(?<fld38>[^\s]*)[\s]+icmp_code=(?<fld39>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+incident_serialno=(?<id>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0419016385"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016385"
					"[rsa][message][id1]" => "0419016385"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016385:01
		# line in RSA: severity=<risk> carrier_ep=<fld6> profile={"<rulename>"|<rulename>} src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> serial=<fld4> status=<event_state> proto=<fld70> service=<network_service> vd=<vsys> count=<dclass_counter1> icmp_id=<fld36> icmp_type=<fld38> icmp_code=<fld39> attack_id=<sigid> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" incident_serialno=<id> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=(?<fld6>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+icmp_id=(?<fld36>[^\s]*)[\s]+icmp_type=(?<fld38>[^\s]*)[\s]+icmp_code=(?<fld39>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+incident_serialno=(?<id>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0419016385:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016385:01"
					"[rsa][message][id1]" => "0419016385:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0419016385:02
		# line in RSA: vd=<vsys> severity=<risk> srcip=<saddr> srccountry="<location_src>" dstip=<daddr> srcintf={"<sinterface>"|<sinterface>} dstintf={"<dinterface>"|<dinterface>} policyid=<policy_id> sessionid=<sessionid> action=<action> proto=<fld70> service=<network_service> attack=<signame> icmpid=<fld36> icmptype=<fld38> icmpcode=<fld39> attackid=<sigid> profile={"<rulename>"|<rulename>} ref="<info>" incidentserialno=<id> msg="<event_description>" crscore=<fld1> crlevel=<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+severity=(?<risk>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+dstip=(?<daddr>[^\s]*)[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+attack=(?<signame>[^\s]*)[\s]+icmpid=(?<fld36>[^\s]*)[\s]+icmptype=(?<fld38>[^\s]*)[\s]+icmpcode=(?<fld39>[^\s]*)[\s]+attackid=(?<sigid>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+ref=\"(?<info>[^\"]*)\"[\s]+incidentserialno=(?<id>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+crscore=(?<fld1>[^\s]*)[\s]+crlevel=(?<fld2>.*)$" }
				id => "message-0419016385:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0419016385:02"
					"[rsa][message][id1]" => "0419016385:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId366
	# line in RSA: severity=<risk> carrier_ep=<fld6> profilegroup={"<rule_group>"|<rule_group>} profiletype={"<rule_template>"|<rule_template>} profile={"<rulename>"|<rulename>} src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<fld7> serial=<fld4> status=<event_state> proto=<fld70> service=<network_service> vd=<vsys> count=<dclass_counter1> attack_id=<sigid> sensor="<sensor>" ref="<info>" user="<username>" group="<group>" incident_serialno=<id> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId366" {
		grok {
			match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=(?<fld6>[^\s]*)[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<sensor>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+incident_serialno=(?<id>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId366"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0211008192" {
		# MESSAGE 0211008192
		# line in RSA: vd={"<vsys>"|<vsys>} msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} {srcip|src}=<saddr> {dstip|dst}=<daddr> {sport=<sport> src_port=<fld2>|srcport=<sport>} {dport=<dport> dst_port=<fld3>|dstport=<dport>} {src_int|srcintf}={"<sinterface>"|<sinterface>} {dst_int|dstintf}={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> {serial|sessionid}=<fld1> {direction|dir}=<direction> file={"<filename>"|<filename>} checksum={"<checksum>"|<checksum>} quarskip={"<result>"|<result>} virus={"<virusname>"|<virusname>} dtype=<fld4> ref={"<info>"|<info>} url="<url>" carrier_ep=<fld5> profile={"<rulename>"|<rulename>} profiletype={"<rule_template>"|<rule_template>} profilegroup={"<rule_group>"|<rule_group>} user="<username>" group="<group>" agent=<fld6> from="<from>" to="<to>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(src_int|srcintf)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dst_int|dstintf)=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+(direction|dir)=(?<direction>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+checksum=(\"(?<checksum>[^\"]*)\"|(?<checksum>[^\s]*))[\s]+quarskip=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+dtype=(?<fld4>[^\s]*)[\s]+ref=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+carrier_ep=(?<fld5>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+agent=(?<fld6>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"$" }
				id => "message-0211008192"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211008192"
					"[rsa][message][id1]" => "0211008192"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211008192:01
		# line in RSA: vd={"<vsys>"|<vsys>} msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} {srcip|src}=<saddr> {dstip|dst}=<daddr> {sport=<sport> src_port=<fld2>|srcport=<sport>} {dport=<dport> dst_port=<fld3>|dstport=<dport>} {src_int|srcintf}={"<sinterface>"|<sinterface>} {dst_int|dstintf}={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> {sessionid|serial}=<fld1> {direction|dir}=<direction> file={"<filename>"|<filename>} {checksum="<checksum>" quarskip="<result>"|quarskip="<result>"|checksum="<checksum>"} virus={"<virusname>"|<virusname>} dtype=<fld4> ref={"<info>"|<info>} {url="<url>" profile="<rulename>" profiletype="<rule_template>" user="<username>"|user="<username>"} {agent=<fld15> analyticscksum=<checksum>|group="<group>"} analyticssubmit=<fld17>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(src_int|srcintf)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dst_int|dstintf)=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(direction|dir)=(?<direction>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+(checksum=\"(?<checksum>[^\"]*)\"[\s]+quarskip=\"(?<result>[^\"]*)\"|quarskip=\"(?<result>[^\"]*)\"|checksum=\"(?<checksum>[^\"]*)\")[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+dtype=(?<fld4>[^\s]*)[\s]+ref=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+(url=\"(?<url>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"|user=\"(?<username>[^\"]*)\")[\s]+(agent=(?<fld15>[^\s]*)[\s]+analyticscksum=(?<checksum>[^\s]*)|group=\"(?<group>[^\"]*)\")[\s]+analyticssubmit=(?<fld17>.*)$" }
				id => "message-0211008192:01"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211008192:01"
					"[rsa][message][id1]" => "0211008192:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211008192:02
		# line in RSA: vd=<vsys> msg=<event_description> service=<network_service> srcip=<saddr> dstip=<daddr> direction=<direction> filename=<filename> analyticscksum=<checksum> analyticssubmit=<fld17> crscore=<reputation_num> crlevel=<fld38> virus=<virusname> ref=<info> url=<url> profile=<rulename> action=<action> agent=<fld7> virusid=<fld10> quarskip=<result> dtype=<fld6> sessionid=<sessionid> srcport=<sport> dstport=<dport> proto=<fld70> to=<to> from=<from> recipient=<trans_to> sender=<trans_from>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} msg=%{event_description} service=%{network_service} srcip=%{saddr} dstip=%{daddr} direction=%{direction} filename=%{filename} analyticscksum=%{checksum} analyticssubmit=%{fld17} crscore=%{reputation_num} crlevel=%{fld38} virus=%{virusname} ref=%{info} url=%{url} profile=%{rulename} action=%{action} agent=%{fld7} virusid=%{fld10} quarskip=%{result} dtype=%{fld6} sessionid=%{sessionid} srcport=%{sport} dstport=%{dport} proto=%{fld70} to=%{to} from=%{from} recipient=%{trans_to} sender=%{trans_from}" }
				id => "message-0211008192:02"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211008192:02"
					"[rsa][message][id1]" => "0211008192:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId370
	# line in RSA: vd="<vsys>" msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} src=<saddr> dst=<daddr> sport=<sport> src_port=<fld2> dport=<dport> dst_port=<fld3> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> serial=<fld1> file={"<filename>"|<filename>} checksum={"<checksum>"|<checksum>} quarskip={"<result>"|<result>} virus={"<virusname>"|<virusname>} dtype=<fld4> ref={"<info>"|<info>} url="<url>" carrier_ep=<fld5> profiletype={"<rule_template>"|<rule_template>} profilegroup={"<rule_group>"|<rule_group>} profile={"<rulename>"|<rulename>} user="<username>" group="<group>" from="<from>" to="<to>"
	else if [logstash][msgparser][id] == "msgParserId370" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+checksum=(\"(?<checksum>[^\"]*)\"|(?<checksum>[^\s]*))[\s]+quarskip=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+dtype=(?<fld4>[^\s]*)[\s]+ref=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+carrier_ep=(?<fld5>[^\s]*)[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"$" }
			id => "msgParserId370"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0211060000" {
		# MESSAGE 0211060000
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> status=<event_state> {file="<filename>" virus="<virusname>" | virus="<virusname>"} url="<url>" ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+(file=\"(?<filename>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+|[\s]*virus=\"(?<virusname>[^\"]*)\")[\s]+url=\"(?<url>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0211060000"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000"
					"[rsa][message][id1]" => "0211060000"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:08
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" {file="<filename>" virus="<virusname>"|virus="<virusname>"} ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+(file=\"(?<filename>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"|virus=\"(?<virusname>[^\"]*)\")[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0211060000:08"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:08"
					"[rsa][message][id1]" => "0211060000:08"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:01
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<fld3>" to="<fld4>" file=<filename> virus="<virusname>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<fld3>[^\"]*)\"[\s]+to=\"(?<fld4>[^\"]*)\"[\s]+file=(?<filename>[^\s]*)[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0211060000:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:01"
					"[rsa][message][id1]" => "0211060000:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:02
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> file="<filename>" virus="<virusname>" url="<url>" msg={ "<event_description>. ref <info>" | "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+file=\"(?<filename>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\.]*)\.[\s]+ref[\s]+(?<info>[^\"]*)\"[\s]+|[\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0211060000:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:02"
					"[rsa][message][id1]" => "0211060000:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:03
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> file="<filename>" virus="<virusname>" msg={ "<event_description>. ref <info>" | "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+file=\"(?<filename>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\.]*)\.[\s]+ref[\s]+(?<info>[^\"]*)\"[\s]+|[\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0211060000:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:03"
					"[rsa][message][id1]" => "0211060000:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:04
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from=<from> to=<to> virus="<virusname>" msg={ "<event_description>. ref <info>" | "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+to=(?<to>[^\s]*)[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\.]*)\.[\s]+ref[\s]+(?<info>[^\"]*)\"[\s]+|[\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0211060000:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:04"
					"[rsa][message][id1]" => "0211060000:04"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:05
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> virus="<virusname>" url="<url>" msg={ "<event_description>. ref <info>" | "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\.]*)\.[\s]+ref[\s]+(?<info>[^\"]*)\"[\s]+|[\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0211060000:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:05"
					"[rsa][message][id1]" => "0211060000:05"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:06
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" file=<filename> virus="<virusname>" msg={ "<event_description>. ref <info>" | "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+file=(?<filename>[^\s]*)[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\.]*)\.[\s]+ref[\s]+(?<info>[^\"]*)\"[\s]+|[\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0211060000:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:06"
					"[rsa][message][id1]" => "0211060000:06"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0211060000:07
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" virus="<virusname>" msg={ "<event_description>. ref <info>" | "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\.]*)\.[\s]+ref[\s]+(?<info>[^\"]*)\"[\s]+|[\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0211060000:07"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0211060000:07"
					"[rsa][message][id1]" => "0211060000:07"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId380
	# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> service=<network_service> status=<event_state> from=<from> to=<to> file=<filename> virus=<virusname> <event_description>
	else if [logstash][msgparser][id] == "msgParserId380" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+to=(?<to>[^\s]*)[\s]+file=(?<filename>[^\s]*)[\s]+virus=(?<virusname>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId380"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId381
	# line in RSA: vd="<vsys>" msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} src=<saddr> dst=<daddr> sport=<sport> src_port=<fld2> dport=<dport> dst_port=<fld3> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> serial=<fld1> url="<url>" user="<username>" group=<group> command="<action>"
	else if [logstash][msgparser][id] == "msgParserId381" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=(?<group>[^\s]*)[\s]+command=\"(?<action>[^\"]*)\"$" }
			id => "msgParserId381"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0212008448" {
		# MESSAGE 0212008448
		# line in RSA: vd="<vsys>" msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} src=<saddr> dst=<daddr> sport=<sport> src_port=<fld2> dport=<dport> dst_port=<fld3> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> serial=<fld1> dir=<direction> <fld23> file={"<filename>"|<filename>} checksum={"<checksum>"|<checksum>} quarskip={"<result>"|<result>} url={"<url>"|<url>} carrier_ep=<fld34> profiletype={"<rule_template>"|<rule_template>} profilegroup={"<rule_group>"|<rule_group>} profile={"<rulename>"|<rulename>} user="<username>" group="<group>" agent=<fld6> from="<from>" to="<to>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+checksum=(\"(?<checksum>[^\"]*)\"|(?<checksum>[^\s]*))[\s]+quarskip=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+url=(\"(?<url>[^\"]*)\"|(?<url>[^\s]*))[\s]+carrier_ep=(?<fld34>[^\s]*)[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+agent=(?<fld6>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"$" }
				id => "message-0212008448"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0212008448"
					"[rsa][message][id1]" => "0212008448"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0212008448:01
		# line in RSA: vd="<vsys>" msg=<event_description> status=<event_state> service=<network_service> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<fld3> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> identidx=<id> sessionid=<sessionid> direction=<direction> filefilter=<fld21> filetype=<fld23> file=<filename> quarskip=<result> user="<username>" group="<group>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" msg=%{event_description} status=%{event_state} service=%{network_service} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{fld3} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} identidx=%{id} sessionid=%{sessionid} direction=%{direction} filefilter=%{fld21} filetype=%{fld23} file=%{filename} quarskip=%{result} user=\"%{username}\" group=\"%{group}\"" }
				id => "message-0212008448:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0212008448:01"
					"[rsa][message][id1]" => "0212008448:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0212063000" {
		# MESSAGE 0212063000
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> filefilter=<fld7> service={"<network_service>"|<network_service>} status=<event_state> file=<filename> url="<url>" ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+filefilter=(?<fld7>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+file=(?<filename>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0212063000"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0212063000"
					"[rsa][message][id1]" => "0212063000"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0212063000:01
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" file=<filename> virus="<virusname>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+file=(?<filename>[^\s]*)[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0212063000:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0212063000:01"
					"[rsa][message][id1]" => "0212063000:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0213066000" {
		# MESSAGE 0213066000:09
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:09"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:09"
					"[rsa][message][id1]" => "0213066000:09"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> status=<event_state> file="<filename>" url="<url>" ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+file=\"(?<filename>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000"
					"[rsa][message][id1]" => "0213066000"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:01
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> status=<event_state> file="<filename>" ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+file=\"(?<filename>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:01"
					"[rsa][message][id1]" => "0213066000:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:02
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> status=<event_state> url="<url>" ref="<info>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+ref=\"(?<info>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:02"
					"[rsa][message][id1]" => "0213066000:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:03
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:03"
					"[rsa][message][id1]" => "0213066000:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:04
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> file="<filename>" url="<url>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+file=\"(?<filename>[^\"]*)\"[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:04"
					"[rsa][message][id1]" => "0213066000:04"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:05
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> file="<filename>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+file=\"(?<filename>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:05"
					"[rsa][message][id1]" => "0213066000:05"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:06
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> url="<url>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:06"
					"[rsa][message][id1]" => "0213066000:06"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:07
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" file=<filename> virus="<virusname>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+file=(?<filename>[^\s]*)[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:07"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:07"
					"[rsa][message][id1]" => "0213066000:07"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213066000:08
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" virus="<virusname>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+virus=\"(?<virusname>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0213066000:08"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213066000:08"
					"[rsa][message][id1]" => "0213066000:08"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0262008961" {
		# MESSAGE 0262008961
		# line in RSA: vd={"<vsys>"|<vsys>} msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} {srcip|src}=<saddr> {dstip|dst}=<daddr> {sport=<sport> src_port=<fld2>|srcport=<sport>} {dport=<dport> dst_port=<fld3>|dstport=<dport>} {srcintf|src_int}={"<sinterface>"|<sinterface>} {dstintf|dst_int}={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> {sessionid|serial}=<fld1> {direction|dir}=<direction> file={"<filename>"|<filename>} checksum={"<checksum>"|<checksum>} quarskip={"<result>"|<result>} virus={"<virusname>"|<virusname>} dtype=<fld4> ref={"<info>"|<info>} url="<url>" carrier_ep=<fld5> profile={"<rulename>"|<rulename>} profiletype={"<rule_template>"|<rule_template>} profilegroup={"<rule_group>"|<rule_group>} user="<username>" group="<group>" agent=<fld6> from="<from>" to="<to>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(srcintf|src_int)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstintf|dst_int)=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(direction|dir)=(?<direction>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+checksum=(\"(?<checksum>[^\"]*)\"|(?<checksum>[^\s]*))[\s]+quarskip=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+dtype=(?<fld4>[^\s]*)[\s]+ref=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+carrier_ep=(?<fld5>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+agent=(?<fld6>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"$" }
				id => "message-0262008961"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0262008961"
					"[rsa][message][id1]" => "0262008961"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0262008961:01
		# line in RSA: vd="<vsys>" msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} src=<saddr> dst=<daddr> sport=<sport> src_port=<fld2> dport=<dport> dst_port=<fld3> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> serial=<fld1> dir=<direction> file={"<filename>"|<filename>} checksum={"<checksum>"|<checksum>} quarskip={"<result>"|<result>} virus={"<virusname>"|<virusname>} dtype=<fld4> ref={"<info>"|<info>} url="<url>" endpoint=<fld5> profile={"<rulename>"|<rulename>} user="<username>" group="<group>" agent=<fld6> from="<from>" to="<to>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+checksum=(\"(?<checksum>[^\"]*)\"|(?<checksum>[^\s]*))[\s]+quarskip=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+virus=(\"(?<virusname>[^\"]*)\"|(?<virusname>[^\s]*))[\s]+dtype=(?<fld4>[^\s]*)[\s]+ref=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+endpoint=(?<fld5>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+agent=(?<fld6>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"$" }
				id => "message-0262008961:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0262008961:01"
					"[rsa][message][id1]" => "0262008961:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0262008961:02
		# line in RSA: vd={"<vsys>"|<vsys>} msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} {srcip|src}=<saddr> {dstip|dst}=<daddr> {sport=<sport> src_port=<fld2>|srcport=<sport>} {dport=<dport> dst_port=<fld3>|dstport=<dport>} {srcintf|src_int}={"<sinterface>"|<sinterface>} {dstintf|dst_int}={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> {sessionid|serial}=<fld1> {direction|dir}=<direction> quarskip={"<result>"|<result>} url="<url>" profile={"<rulename>"|<rulename>} profiletype={"<rule_template>"|<rule_template>} srcname=<shost> osname=<os> osversion=<version> agent=<fld6> analyticscksum=<checksum> analyticssubmit=<fld17>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(srcintf|src_int)=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstintf|dst_int)=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(direction|dir)=(?<direction>[^\s]*)[\s]+quarskip=(\"(?<result>[^\"]*)\"|(?<result>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+srcname=(?<shost>[^\s]*)[\s]+osname=(?<os>[^\s]*)[\s]+osversion=(?<version>[^\s]*)[\s]+agent=(?<fld6>[^\s]*)[\s]+analyticscksum=(?<checksum>[^\s]*)[\s]+analyticssubmit=(?<fld17>.*)$" }
				id => "message-0262008961:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0262008961:02"
					"[rsa][message][id1]" => "0262008961:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0213008705" {
		# MESSAGE 0213008705
		# line in RSA: vd="<vsys>" msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} src=<saddr> dst=<daddr> sport=<sport> src_port=<fld2> dport=<dport> dst_port=<fld3> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> identidx=<id> serial=<fld1> file={"<filename>"|<filename>} url="<url>" carrier_ep=<fld5> profiletype={"<rule_template>"|<rule_template>} profilegroup={"<rule_group>"|<rule_group>} profile={"<rulename>"|<rulename>} user="<username>" group="<group>" from="<from>" to="<to>" agent=<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+carrier_ep=(?<fld5>[^\s]*)[\s]+profiletype=(\"(?<rule_template>[^\"]*)\"|(?<rule_template>[^\s]*))[\s]+profilegroup=(\"(?<rule_group>[^\"]*)\"|(?<rule_group>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+agent=(?<fld6>.*)$" }
				id => "message-0213008705"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213008705"
					"[rsa][message][id1]" => "0213008705"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0213008705:01
		# line in RSA: vd="<vsys>" msg={"<event_description>"|<event_description>} status={"<event_state>"|<event_state>} service={"<network_service>"|<network_service>} src=<saddr> dst=<daddr> sport=<sport> dport=<dport> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> serial=<fld1> file={"<filename>"|<filename>} url="<url>" endpoint=<fld33> profile={"<rulename>"|<rulename>} user="<username>" group="<group>" from="<from>" to="<to>" agent=<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+msg=(\"(?<event_description>[^\"]*)\"|(?<event_description>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+file=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+url=\"(?<url>[^\"]*)\"[\s]+endpoint=(?<fld33>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+agent=(?<fld6>.*)$" }
				id => "message-0213008705:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0213008705:01"
					"[rsa][message][id1]" => "0213008705:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId400
	# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> url={ "<url>" | <url> } msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId400" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=([\s]*\"(?<url>[^\"]*)\"[\s]+|[\s]*(?<url>[^\s]*)[\s]+)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId400"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0315012544" {
		# MESSAGE 0315012544:01
		# line in RSA: {urlfilter_idx=<fld23> urlfilter_list=<fld24> vd=<vsys>|vd=<vsys> urlfilteridx=<fld23> urlfilterlist=<fld24>} policyid=<policy_id> identidx=<fld25> {sessionid|serial}=<serial_number> {user="<username>" group="<group>"|user="<username>"} {srcip|src}=<saddr> {sport=<sport> src_port=<fld6>|srcport=<fld6>} {src_int|srcintf}=<sinterface> {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<fld7>} {dst_int|dstintf}=<dinterface> service=<network_service> hostname=<hostname> {profiletype=<fld29> profilegroup=<fld30>|profiletype=<fld29>} profile="<rulename>" status=<event_state> {req_type|reqtype}=<fld8> url=<url> {sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>"|"<event_description>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(urlfilter_idx=(?<fld23>[^\s]*)[\s]+urlfilter_list=(?<fld24>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)|vd=(?<vsys>[^\s]*)[\s]+urlfilteridx=(?<fld23>[^\s]*)[\s]+urlfilterlist=(?<fld24>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld25>[^\s]*)[\s]+(sessionid|serial)=(?<serial_number>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|user=\"(?<username>[^\"]*)\")[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<fld6>[^\s]*))[\s]+(src_int|srcintf)=(?<sinterface>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<fld7>[^\s]*))[\s]+(dst_int|dstintf)=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+(profiletype=(?<fld29>[^\s]*)[\s]+profilegroup=(?<fld30>[^\s]*)|profiletype=(?<fld29>[^\s]*))[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+status=(?<event_state>[^\s]*)[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+(sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|\"(?<event_description>[^\"]*)\")$" }
				id => "message-0315012544:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012544:01"
					"[rsa][message][id1]" => "0315012544:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012544
		# line in RSA: vd=<vsys> policyid=<policy_id> user="<username>" group="<group>" src=<saddr> sport=<sport> src_port=<fld6> src_int=<sinterface> dst=<daddr> dport=<dport> dst_port=<fld7> dst_int=<dinterface> service=<network_service> hostname=<hostname> profile="<rulename>" status=<event_state> req_type=<fld8> url=<url> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} user=\"%{username}\" group=\"%{group}\" src=%{saddr} sport=%{sport} src_port=%{fld6} src_int=%{sinterface} dst=%{daddr} dport=%{dport} dst_port=%{fld7} dst_int=%{dinterface} service=%{network_service} hostname=%{hostname} profile=\"%{rulename}\" status=%{event_state} req_type=%{fld8} url=%{url} msg=\"%{event_description}\"" }
				id => "message-0315012544"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012544"
					"[rsa][message][id1]" => "0315012544"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012544:02
		# line in RSA: vd={"<vsys>"|<vsys>},urlfilteridx=<fld35>,urlfilterlist=<fld36>,policyid=<policy_id>,{intf_policyid=<fld15>,identidx=<id> | identidx=<id>},{serial|sessionid}=<fld1>,srcname="<shost>",osname=<fld23>,osversion=<fld24>,unauthuser=<fld25>,unauthusersource=<fld26>,{user="<username>",group="<group>",srcip=<saddr>|user="<username>",group="<group>",src=<saddr>|user="<username>",srcip=<saddr>|user="<username>",src=<saddr>|srcip=<saddr>|src=<saddr>},{sport=<sport>,src_port=<fld6>|srcport=<sport>},{src_int|srcintf}="<sinterface>",{dstip|dst}=<daddr>,{dport=<dport>,dst_port=<fld7>|dstport=<dport>},{dst_int|dstintf}="<dinterface>",service="<network_service>",hostname="<hostname>",{ carrier_ep="<fld10>",profiletype="<rule_template>" | profiletype="<rule_template>" },{profilegroup="<rule_group>",profile="<rulename>"|profile="<rulename>"},status="<event_state>",{req_type|reqtype}=<fld8>,url="<url>",{sentbyte=<sbytes>,rcvdbyte=<rbytes>,msg="<event_description>"|sent=<sbytes>,rcvd=<rbytes>,msg="<event_description>" | msg="<event_description>" }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^,]*)),urlfilteridx=(?<fld35>[^,]*),urlfilterlist=(?<fld36>[^,]*),policyid=(?<policy_id>[^,]*),(intf_policyid=(?<fld15>[^,]*),identidx=(?<id>[^\s]*)[\s]+|[\s]*identidx=(?<id>[^,]*)),(serial|sessionid)=(?<fld1>[^,]*),srcname=\"(?<shost>[^\"]*)\",osname=(?<fld23>[^,]*),osversion=(?<fld24>[^,]*),unauthuser=(?<fld25>[^,]*),unauthusersource=(?<fld26>[^,]*),(user=\"(?<username>[^\"]*)\",group=\"(?<group>[^\"]*)\",srcip=(?<saddr>[^,]*)|user=\"(?<username>[^\"]*)\",group=\"(?<group>[^\"]*)\",src=(?<saddr>[^,]*)|user=\"(?<username>[^\"]*)\",srcip=(?<saddr>[^,]*)|user=\"(?<username>[^\"]*)\",src=(?<saddr>[^,]*)|srcip=(?<saddr>[^,]*)|src=(?<saddr>[^,]*)),(sport=(?<sport>[^,]*),src_port=(?<fld6>[^,]*)|srcport=(?<sport>[^,]*)),(src_int|srcintf)=\"(?<sinterface>[^\"]*)\",(dstip|dst)=(?<daddr>[^,]*),(dport=(?<dport>[^,]*),dst_port=(?<fld7>[^,]*)|dstport=(?<dport>[^,]*)),(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\",service=\"(?<network_service>[^\"]*)\",hostname=\"(?<hostname>[^\"]*)\",([\s]*carrier_ep=\"(?<fld10>[^\"]*)\",profiletype=\"(?<rule_template>[^\"]*)\"[\s]+|[\s]*profiletype=\"(?<rule_template>[^\"]*)\"[\s]+),(profilegroup=\"(?<rule_group>[^\"]*)\",profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\"),status=\"(?<event_state>[^\"]*)\",(req_type|reqtype)=(?<fld8>[^,]*),url=\"(?<url>[^\"]*)\",(sentbyte=(?<sbytes>[^,]*),rcvdbyte=(?<rbytes>[^,]*),msg=\"(?<event_description>[^\"]*)\"|sent=(?<sbytes>[^,]*),rcvd=(?<rbytes>[^,]*),msg=\"(?<event_description>[^\"]*)\"[\s]+|[\s]*msg=\"(?<event_description>[^\"]*)\"[\s]+)$" }
				id => "message-0315012544:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012544:02"
					"[rsa][message][id1]" => "0315012544:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012544:03
		# line in RSA: vd=<vsys> policyid=<policy_id> sessionid=<sessionid> user=<username> srcip=<saddr> srcport=<sport> src_int=<sinterface> srcintf=<sinterface> dstip=<daddr> dst=<daddr> dport=<dport> dst_port=<fld7> dstport=<dport> dst_int=<dinterface> dstintf=<dinterface> proto=<fld70> service=<network_service> hostname=<hostname> profile=<rulename> action=<action> req_type=<fld8> reqtype=<fld8> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg=<event_description> crscore=<reputation_num> crlevel=<fld38> urlfilteridx=<fld35> referralurl=<fld36>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} sessionid=%{sessionid} user=%{username} srcip=%{saddr} srcport=%{sport} src_int=%{sinterface} srcintf=%{sinterface} dstip=%{daddr} dst=%{daddr} dport=%{dport} dst_port=%{fld7} dstport=%{dport} dst_int=%{dinterface} dstintf=%{dinterface} proto=%{fld70} service=%{network_service} hostname=%{hostname} profile=%{rulename} action=%{action} req_type=%{fld8} reqtype=%{fld8} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} msg=%{event_description} crscore=%{reputation_num} crlevel=%{fld38} urlfilteridx=%{fld35} referralurl=%{fld36}" }
				id => "message-0315012544:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012544:03"
					"[rsa][message][id1]" => "0315012544:03"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId405
	# line in RSA: vd=<vsys> policyid=<policy_id> identidx=<fld25> {sessionid|serial}=<serial_number> {user="<username>" group="<group>" src=<saddr>|srcip=<saddr>} {sport=<sport> src_port=<fld6>|srcport=<sport>} {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<dport>} profiletype=<fld29> {profilegroup=<fld30> profile="<rulename>"|profile="<rulename>"} service=<network_service> status=<event_state> {msg="<event_description>" sentbyte=<sbytes> rcvdbyte=<rbytes>|msg="<event_description>"}
	else if [logstash][msgparser][id] == "msgParserId405" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld25>[^\s]*)[\s]+(sessionid|serial)=(?<serial_number>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+profiletype=(?<fld29>[^\s]*)[\s]+(profilegroup=(?<fld30>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\")[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+(msg=\"(?<event_description>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>.*)|msg=\"(?<event_description>[^\"]*)\")$" }
			id => "msgParserId405"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId406
	# line in RSA: vd=<vsys> policyid=<policy_id> serial=<serial_number> user="<username>" group="<group>" src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId406" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} serial=%{serial_number} user=\"%{username}\" group=\"%{group}\" src=%{saddr} sport=%{sport} dst=%{daddr} dport=%{dport} service=%{network_service} status=%{event_state} msg=\"%{event_description}\"" }
			id => "msgParserId406"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId407
	# line in RSA: vd=<vsys> hostname="<hostname>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId407" {
		dissect {
			mapping => { "message" => "vd=%{vsys} hostname=\"%{hostname}\" msg=\"%{event_description}\"" }
			id => "msgParserId407"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0315012549" {
		# MESSAGE 0315012549
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> {serial|sessionid}=<fld1> user={"<username>"|<username>} group={"<group>"|<group>} src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service={"<network_service>"|<network_service>} profile={"<rulename>"|<rulename>} status={"<event_state>"|<event_state>} req_type=<fld8> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+req_type=(?<fld8>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0315012549"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012549"
					"[rsa][message][id1]" => "0315012549"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012549:02
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> identidx=<id> {serial|sessionid}=<fld1> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service={"<network_service>"|<network_service>} profiletype="<rule_template>" profile={"<rulename>"|<rulename>} hostname={"<shost>"|<shost>} status={"<event_state>"|<event_state>} {req_type|reqtype}=<fld8> msg="<event_description>" sentbyte=<sbytes> rcvdbyte=<rbytes>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+hostname=(\"(?<shost>[^\"]*)\"|(?<shost>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>.*)$" }
				id => "message-0315012549:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012549:02"
					"[rsa][message][id1]" => "0315012549:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012549:01
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> identidx=<id> {serial|sessionid}=<fld1> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service={"<network_service>"|<network_service>} profiletype="<rule_template>" profile={"<rulename>"|<rulename>} status={"<event_state>"|<event_state>} {req_type|reqtype}=<fld8> msg="<event_description>" sentbyte=<sbytes> rcvdbyte=<rbytes>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>.*)$" }
				id => "message-0315012549:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012549:01"
					"[rsa][message][id1]" => "0315012549:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012549:03
		# line in RSA: vd="<vsys>" sessionid=<sessionid> user=<username> group="<group>" srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> service={"<network_service>"|<network_service>} profile={"<rulename>"|<rulename>} {hostname="<hostname>" action=<action>|action=<action>} {req_type|reqtype}=<fld8> msg="<event_description>" sentbyte=<sbytes> rcvdbyte=<rbytes>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+(hostname=\"(?<hostname>[^\"]*)\"[\s]+action=(?<action>[^\s]*)|action=(?<action>[^\s]*))[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>.*)$" }
				id => "message-0315012549:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012549:03"
					"[rsa][message][id1]" => "0315012549:03"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012549:04
		# line in RSA: vd=<vsys> policyid=<policy_id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> action=<action> reqtype=<fld8> msg=<event_description> sentbyte=<sbytes> rcvdbyte=<rbytes> profile=<rulename> url=<url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} action=%{action} reqtype=%{fld8} msg=%{event_description} sentbyte=%{sbytes} rcvdbyte=%{rbytes} profile=%{rulename} url=%{url}" }
				id => "message-0315012549:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012549:04"
					"[rsa][message][id1]" => "0315012549:04"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId413
	# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> {serial|sessionid}=<fld1> {user=<username> group="<group>" src=<saddr>|srcip=<saddr>} {srcport|sport}=<sport> {srcintf|src_int}=<sinterface> {dstip|dst}=<daddr> {dstport|dport}=<dport> {dstintf|dst_int}=<dinterface> service={"<network_service>|<network_service>} {profiletype=<rule_template> profile=<rulename>|profile=<rulename>} status=<event_state> {reqtype|req_type}=<fld8> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId413" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+(user=(?<username>[^\s]*)[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+(srcport|sport)=(?<sport>[^\s]*)[\s]+(srcintf|src_int)=(?<sinterface>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dstport|dport)=(?<dport>[^\s]*)[\s]+(dstintf|dst_int)=(?<dinterface>[^\s]*)[\s]+service=(\"(?<network_service>[^\s]*)|(?<network_service>[^\s]*))[\s]+(profiletype=(?<rule_template>[^\s]*)[\s]+profile=(?<rulename>[^\s]*)|profile=(?<rulename>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+(reqtype|req_type)=(?<fld8>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId413"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0315093002" {
		# MESSAGE 0315093002
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0315093002"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315093002"
					"[rsa][message][id1]" => "0315093002"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315093002:01
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> {sport=<sport> src_int=<sinterface>|sport=<sport>} dst=<daddr> {dport=<dport> dst_int=<dinterface>|dport=<dport>} service=<network_service> hostname=<hostname> status=<event_state> url=<url> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)|sport=(?<sport>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)|dport=(?<dport>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0315093002:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315093002:01"
					"[rsa][message][id1]" => "0315093002:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId416
	# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> hostname=<hostname> status=<event_state> url=<url> msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId416" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId416"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId417
	# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group=<group> src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> status=<event_state> msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId417" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=(?<group>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId417"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId418
	# line in RSA: {vd=<vsys> serial=|serial=}<fld1> id=<fld2> user={ "<username>" | <username> } group=<group> src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId418" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+id=(?<fld2>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=(?<group>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId418"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId419
	# line in RSA: vd="<vsys>" policyid=<policy_id> identidx=<fld2> serial=<fld1> user={ "<username>" | <username> } group="<group>" src=<saddr> sport=<sport> src_port=<fld23> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld24> dst_int="<dinterface>" service="<network_service>" hostname=<hostname> profiletype="<rule_template>" profilegroup="<rule_group>" profile="<rulename>" status="<event_state>" req_type=<fld45> url="<url>" msg={ "<event_description>" | <event_description> } error="<result>"
	else if [logstash][msgparser][id] == "msgParserId419" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld2>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld23>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld24>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=(?<hostname>[^\s]*)[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+req_type=(?<fld45>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)[\s]+error=\"(?<result>[^\"]*)\"$" }
			id => "msgParserId419"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0316099501" {
		# MESSAGE 0316099501:03
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group=<group> src=<saddr> {sport=<sport> src_int="<sinterface>"|sport=<sport>} dst=<daddr> dport=<dport> dst_int="<dinterface>" service=<network_service> method=<fld3> class=<fld4> class_desc=<fld5> hostname=<hostname> status=<event_state> url=<url> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=(?<group>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"|sport=(?<sport>[^\s]*))[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0316099501:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316099501:03"
					"[rsa][message][id1]" => "0316099501:03"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316099501
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group=<group> src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> method=<fld3> class=<fld4> class_desc=<fld5> hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=(?<group>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0316099501"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316099501"
					"[rsa][message][id1]" => "0316099501"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316099501:01
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group=<fld2> src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> method=<fld3> cat=<fcatnum> cat_desc="<filter>" hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=(?<fld2>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0316099501:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316099501:01"
					"[rsa][message][id1]" => "0316099501:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316099501:02
		# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user={ "<username>" | <username> } group=<fld2> src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> dport=<dport> dst_int=<dinterface> service=<network_service> method=<fld3> cat=<fcatnum> cat_desc="<filter>" hostname=<hostname> status=<event_state> url=<url> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=(?<fld2>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+hostname=(?<hostname>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0316099501:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316099501:02"
					"[rsa][message][id1]" => "0316099501:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId424
	# line in RSA: {vd=<vsys> user=|user=}<username> src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> cat=<fcatnum> cat_desc="<filter>" hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId424" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+user=|user=)(?<username>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId424"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0317099510" {
		# MESSAGE 0317099510
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> method=<fld3> cat=<fcatnum> cat_desc="<filter>" hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0317099510"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317099510"
					"[rsa][message][id1]" => "0317099510"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317099510:01
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> dst=<daddr> dport=<dport> service=<network_service> method=<fld3> class=<fld4> class_desc=<fld5> hostname=<hostname> url=<url> status=<event_state> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)[\s]+hostname=(?<hostname>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0317099510:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317099510:01"
					"[rsa][message][id1]" => "0317099510:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317099510:02
		# line in RSA: {vd=<vsys> serial=|serial=}<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int=<sinterface> dst=<daddr> {dport=<dport> dst_int="<dinterface>"|dport=<dport>} service=<network_service> method=<fld3> cat=<fcatnum> cat_desc="<filter>" hostname=<hostname> status=<event_state> url=<url> msg={ "<event_description>" | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+serial=|serial=)(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"|dport=(?<dport>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+method=(?<fld3>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+hostname=(?<hostname>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-0317099510:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317099510:02"
					"[rsa][message][id1]" => "0317099510:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId428
	# line in RSA: vd=<vsys> policyid=<policy_id> serial=<fld1> user={ "<username>" | <username> } group={ "<group>" | <group> } src=<saddr> sport=<sport> src_int={ "<sinterface>" | <sinterface> } dst=<daddr> dport=<dport> dst_int={"<dinterface>" | <dinterface> } service={ "<network_service>" | <network_service> } method={ "<fld3>" | <fld3> } cat=<fcatnum> cat_desc="<filter>" mode="<mode>" rule_type="<fld4>" rule_data="<fld5>" hostname={"<hostname>" | <hostname> } status=<event_state> url={ "<url>" | <url> } msg={ "<event_description>" | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId428" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=([\s]*\"(?<username>[^\"]*)\"[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+group=([\s]*\"(?<group>[^\"]*)\"[\s]+|[\s]*(?<group>[^\s]*)[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=([\s]*\"(?<sinterface>[^\"]*)\"[\s]+|[\s]*(?<sinterface>[^\s]*)[\s]+)[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"[\s]+|[\s]*(?<dinterface>[^\s]*)[\s]+)[\s]+service=([\s]*\"(?<network_service>[^\"]*)\"[\s]+|[\s]*(?<network_service>[^\s]*)[\s]+)[\s]+method=([\s]*\"(?<fld3>[^\"]*)\"[\s]+|[\s]*(?<fld3>[^\s]*)[\s]+)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"[\s]+mode=\"(?<mode>[^\"]*)\"[\s]+rule_type=\"(?<fld4>[^\"]*)\"[\s]+rule_data=\"(?<fld5>[^\"]*)\"[\s]+hostname=(\"(?<hostname>[^\"]*)\"[\s]+|[\s]*(?<hostname>[^\s]*)[\s]+)[\s]+status=(?<event_state>[^\s]*)[\s]+url=([\s]*\"(?<url>[^\"]*)\"[\s]+|[\s]*(?<url>[^\s]*)[\s]+)[\s]+msg=([\s]*\"(?<event_description>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId428"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0317013312" {
		# MESSAGE 0317013312
		# line in RSA: vd="<vsys>" policyid=<policy_id> { intf_policyid=<fld15> identidx=<id> | identidx=<id> } {sessionid|serial}=<fld1> {user="<username>" group="<group>"|user="<username>"} {srcip|src}=<saddr> {sport=<sport> src_port=<fld6>|srcport=<fld6>} {srcintf|src_int}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<fld7>} {dstintf|dst_int}="<dinterface>" service="<network_service>" hostname="<hostname>" { carrier_ep="<fld10>" profiletype="<rule_template>" | profiletype="<rule_template>" } {profilegroup="<rule_group>" profile="<rulename>"|profile="<rulename>"} status="<event_state>" {req_type|reqtype}=<fld8> url="<url>" { sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>" |sent=<sbytes> rcvd=<rbytes> msg="<event_description>" | msg="<event_description>" } method=<fld3> {class=<fld4> class_desc=<fld5>|class=<fld4>} {cat=<fcatnum> cat_desc="<filter>"|cat=<fcatnum>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)[\s]+([\s]*intf_policyid=(?<fld15>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+|[\s]*identidx=(?<id>[^\s]*)[\s]+)[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|user=\"(?<username>[^\"]*)\")[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<fld6>[^\s]*))[\s]+(srcintf|src_int)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<fld7>[^\s]*))[\s]+(dstintf|dst_int)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+([\s]*carrier_ep=\"(?<fld10>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+|[\s]*profiletype=\"(?<rule_template>[^\"]*)\"[\s]+)[\s]+(profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\")[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+([\s]*sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+|sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+|[\s]*msg=\"(?<event_description>[^\"]*)\"[\s]+)[\s]+method=(?<fld3>[^\s]*)[\s]+(class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)|class=(?<fld4>[^\s]*))[\s]+(cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"|cat=(?<fcatnum>.*))$" }
				id => "message-0317013312"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317013312"
					"[rsa][message][id1]" => "0317013312"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317013312:01
		# line in RSA: vd="<vsys>" policyid=<policy_id> serial=<fld1> user="<username>" group="<group>" src=<saddr> sport=<sport> src_port=<fld6> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld7> dst_int="<dinterface>" service="<network_service>" hostname="<hostname>" profile="<rulename>" status="<event_state>" req_type=<fld8> url="<url>" msg="<event_description>" method=<fld3> class=<fld4> class_desc=<fld5> cat=<fcatnum> cat_desc="<filter>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" policyid=%{policy_id} serial=%{fld1} user=\"%{username}\" group=\"%{group}\" src=%{saddr} sport=%{sport} src_port=%{fld6} src_int=\"%{sinterface}\" dst=%{daddr} dport=%{dport} dst_port=%{fld7} dst_int=\"%{dinterface}\" service=\"%{network_service}\" hostname=\"%{hostname}\" profile=\"%{rulename}\" status=\"%{event_state}\" req_type=%{fld8} url=\"%{url}\" msg=\"%{event_description}\" method=%{fld3} class=%{fld4} class_desc=%{fld5} cat=%{fcatnum} cat_desc=\"%{filter}\"" }
				id => "message-0317013312:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317013312:01"
					"[rsa][message][id1]" => "0317013312:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317013312:05
		# line in RSA: vd="<vsys>" sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> proto=<fld70> service=<network_service> hostname="<hostname>" profile="<rulename>" action=<action> reqtype=<fld8> url="<url>" sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg="<event_description>" method=<fld3> cat=<fcatnum> catdesc="<filter>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} proto=%{fld70} service=%{network_service} hostname=\"%{hostname}\" profile=\"%{rulename}\" action=%{action} reqtype=%{fld8} url=\"%{url}\" sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} msg=\"%{event_description}\" method=%{fld3} cat=%{fcatnum} catdesc=\"%{filter}\"" }
				id => "message-0317013312:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317013312:05"
					"[rsa][message][id1]" => "0317013312:05"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317013312:03
		# line in RSA: vd="<vsys>" policyid=<policy_id> identidx=<id> sessionid=<sessionid> srcip=<saddr> srcport=<fld6> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstintf="<dinterface>" service="<network_service>" hostname="<hostname>" profiletype="<rule_template>" profile="<rulename>" status="<event_state>" reqtype=<fld8> url="<url>" sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>" method=<fld3> class=<fld4> cat=<fcatnum> catdesc="<filter>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" policyid=%{policy_id} identidx=%{id} sessionid=%{sessionid} srcip=%{saddr} srcport=%{fld6} srcintf=\"%{sinterface}\" dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" service=\"%{network_service}\" hostname=\"%{hostname}\" profiletype=\"%{rule_template}\" profile=\"%{rulename}\" status=\"%{event_state}\" reqtype=%{fld8} url=\"%{url}\" sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=\"%{event_description}\" method=%{fld3} class=%{fld4} cat=%{fcatnum} catdesc=\"%{filter}\"" }
				id => "message-0317013312:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317013312:03"
					"[rsa][message][id1]" => "0317013312:03"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317013312:04
		# line in RSA: vd="<vsys>" policyid=<policy_id> identidx=<id> sessionid=<sessionid> srcip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstintf="<dinterface>" service="<network_service>" profiletype="<rule_template>" profile="<rulename>" status="<event_state>" reqtype=<fld8> url="<url>" sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>" method=<fld3> class=<fld4> cat=<fcatnum> catdesc="<filter>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" policyid=%{policy_id} identidx=%{id} sessionid=%{sessionid} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface}\" dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" service=\"%{network_service}\" profiletype=\"%{rule_template}\" profile=\"%{rulename}\" status=\"%{event_state}\" reqtype=%{fld8} url=\"%{url}\" sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=\"%{event_description}\" method=%{fld3} class=%{fld4} cat=%{fcatnum} catdesc=\"%{filter}\"" }
				id => "message-0317013312:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317013312:04"
					"[rsa][message][id1]" => "0317013312:04"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0317013312:02
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> poluuid=<id2> action=<action> crscore=<reputation_num> craction=<fld37>  crlevel=<fld2> transport=<stransport> transip=<stransaddr>  tranip=<dtransaddr> tranport=<dtransport> applist=<fld14> srcname=<shost> devtype=<fld21> osname=<fld23> osversion=<fld24> unauthuser=<fld25> unauthusersource=<fld26> mastersrcmac=<fld28> srcmac=<fld29> appid=<fld11> app=<fld12> appcat=<fld13> apprisk=<risk> applist=<group_object> appact=<action> utmaction=<disposition> countapp=<fld4> countweb=<fld6> shapersentname=<fld9> shaperdropsentbyte=<sbytes> shaperrcvdname=<fld17> shaperdroprcvdbyte=<fld18> srcssid=<ssid> wanin=<fld18> wanout=<fld19> lanin=<fld20> lanout=<fld21> shaperperipname=<fld19> shaperperipdropbyte=<fld20> user=<username> hostname=<hostname> url=<url> msg=<event_description> profile=<rulename> reqtype=<fld9> direction=<direction> error=<resultcode> method=<fld3> cat=<fcatnum> catdesc=<filter> group=<group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} poluuid=%{id2} action=%{action} crscore=%{reputation_num} craction=%{fld37}  crlevel=%{fld2} transport=%{stransport} transip=%{stransaddr}  tranip=%{dtransaddr} tranport=%{dtransport} applist=%{fld14} srcname=%{shost} devtype=%{fld21} osname=%{fld23} osversion=%{fld24} unauthuser=%{fld25} unauthusersource=%{fld26} mastersrcmac=%{fld28} srcmac=%{fld29} appid=%{fld11} app=%{fld12} appcat=%{fld13} apprisk=%{risk} applist=%{group_object} appact=%{action} utmaction=%{disposition} countapp=%{fld4} countweb=%{fld6} shapersentname=%{fld9} shaperdropsentbyte=%{sbytes} shaperrcvdname=%{fld17} shaperdroprcvdbyte=%{fld18} srcssid=%{ssid} wanin=%{fld18} wanout=%{fld19} lanin=%{fld20} lanout=%{fld21} shaperperipname=%{fld19} shaperperipdropbyte=%{fld20} user=%{username} hostname=%{hostname} url=%{url} msg=%{event_description} profile=%{rulename} reqtype=%{fld9} direction=%{direction} error=%{resultcode} method=%{fld3} cat=%{fcatnum} catdesc=%{filter} group=%{group}" }
				id => "message-0317013312:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0317013312:02"
					"[rsa][message][id1]" => "0317013312:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0316013056" {
		# MESSAGE 0316013056
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> {intf_policyid=<fld15> identidx=<id> | identidx=<id>} {serial|sessionid}=<fld1> {user="<username>" group="<group>" srcip=<saddr>|user="<username>" group="<group>" src=<saddr>|user="<username>" srcip=<saddr>|user="<username>" src=<saddr>|srcip=<saddr>|src=<saddr>} {sport=<sport> src_port=<fld6>|srcport=<sport>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<dport>} {dst_int|dstintf}="<dinterface>" service="<network_service>" hostname="<hostname>" { carrier_ep="<fld10>" profiletype="<rule_template>" | profiletype="<rule_template>" } {profilegroup="<rule_group>" profile="<rulename>"|profile="<rulename>"} status="<event_state>" {req_type|reqtype}=<fld8> url="<url>" {sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>"|sent=<sbytes> rcvd=<rbytes> msg="<event_description>" | msg="<event_description>" } method=<fld3> {class=<fld4> class_desc=<fld5>|class=<fld4>} cat=<fcatnum> {catdesc|cat_desc}="<filter>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(intf_policyid=(?<fld15>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+|[\s]*identidx=(?<id>[^\s]*))[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*)|src=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+([\s]*carrier_ep=\"(?<fld10>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+|[\s]*profiletype=\"(?<rule_template>[^\"]*)\"[\s]+)[\s]+(profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\")[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+(sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+|[\s]*msg=\"(?<event_description>[^\"]*)\"[\s]+)[\s]+method=(?<fld3>[^\s]*)[\s]+(class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)|class=(?<fld4>[^\s]*))[\s]+cat=(?<fcatnum>[^\s]*)[\s]+(catdesc|cat_desc)=\"(?<filter>[^\"]*)\"$" }
				id => "message-0316013056"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316013056"
					"[rsa][message][id1]" => "0316013056"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316013056:01
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> {serial=<fld1>|identidx=<fld2> sessionid=<sessionid>} user="<username>" group="<group>" {srcip|src}=<saddr> {sport=<sport> src_port=<fld6>|srcport=<sport>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<dport>} {dst_int|dstintf}="<dinterface>" service="<network_service>" hostname="<hostname>" {profile="<rulename>" status="<event_state>"|status="<event_state>"} {req_type|reqtype}=<fld8> url="<url>" {msg="<event_description>"|sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>"} method=<fld3> class=<fld4> {class_desc|classdesc}=<fld5> {cat=<fcatnum> cat_desc="<filter>"|cat=<fcatnum>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(serial=(?<fld1>[^\s]*)|identidx=(?<fld2>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*))[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+(profile=\"(?<rulename>[^\"]*)\"[\s]+status=\"(?<event_state>[^\"]*)\"|status=\"(?<event_state>[^\"]*)\")[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+(msg=\"(?<event_description>[^\"]*)\"|sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\")[\s]+method=(?<fld3>[^\s]*)[\s]+class=(?<fld4>[^\s]*)[\s]+(class_desc|classdesc)=(?<fld5>[^\s]*)[\s]+(cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"|cat=(?<fcatnum>.*))$" }
				id => "message-0316013056:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316013056:01"
					"[rsa][message][id1]" => "0316013056:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316013056:02
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> {intf_policyid=<fld15> identidx=<id> | identidx=<id>} {serial|sessionid}=<fld1> {user="<username>" group="<group>" srcip=<saddr>|user="<username>" group="<group>" src=<saddr>|user="<username>" srcip=<saddr>|user="<username>" src=<saddr>|srcip=<saddr>|src=<saddr>} {sport=<sport> src_port=<fld6>|srcport=<sport>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<dport>} {dst_int|dstintf}="<dinterface>" service="<network_service>" hostname="<hostname>" { carrier_ep="<fld10>" profiletype="<rule_template>" | profiletype="<rule_template>" } {profilegroup="<rule_group>" profile="<rulename>"|profile="<rulename>"} status="<event_state>" {req_type|reqtype}=<fld8> url=<url> msg="<event_description>" method=<fld3> {class=<fld4> class_desc=<fld5>|class=<fld4>} cat=<fcatnum> {catdesc|cat_desc}="<filter>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(intf_policyid=(?<fld15>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+|[\s]*identidx=(?<id>[^\s]*))[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*)|src=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+([\s]*carrier_ep=\"(?<fld10>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+|[\s]*profiletype=\"(?<rule_template>[^\"]*)\"[\s]+)[\s]+(profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\")[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=(?<url>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+method=(?<fld3>[^\s]*)[\s]+(class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)|class=(?<fld4>[^\s]*))[\s]+cat=(?<fcatnum>[^\s]*)[\s]+(catdesc|cat_desc)=\"(?<filter>[^\"]*)\"$" }
				id => "message-0316013056:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316013056:02"
					"[rsa][message][id1]" => "0316013056:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316013056:05
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> sessionid=<sessionid> {user="<username>" group="<group>"|user="<username>"} {srcip|src}=<saddr> {sport=<sport> src_port=<fld6>|srcport=<sport>} {srcintf|src_int}=<sinterface> {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<dport>} {dstintf|dst_int}=<dinterface> proto=<fld70> service=<network_service> hostname="<hostname>" profile="<rulename>" action=<action> {req_type|reqtype}=<fld8> url="<url>" sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg="<event_description>" method=<fld3> cat=<fcatnum> catdesc="<filter>" crscore=<reputation_num> crlevel=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|user=\"(?<username>[^\"]*)\")[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(srcintf|src_int)=(?<sinterface>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dstintf|dst_int)=(?<dinterface>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+direction=(?<direction>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+method=(?<fld3>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+catdesc=\"(?<filter>[^\"]*)\"[\s]+crscore=(?<reputation_num>[^\s]*)[\s]+crlevel=(?<fld38>.*)$" }
				id => "message-0316013056:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316013056:05"
					"[rsa][message][id1]" => "0316013056:05"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316013056:03
		# line in RSA: vd={"<vsys>"|<vsys>} sessionid=<sessionid> {user="<username>" group="<group>"|user="<username>"} {srcip|src}=<saddr> {srcport=<sport> srcintf="<sinterface>"|sport=<sport> src_port=<fld6>|srcport=<sport>} {dstip|dst}=<daddr> {dstport=<dport> dstintf="<dinterface>"|dport=<dport> dst_port=<fld7>|dstport=<dport>} proto=<fld70> service=<network_service> hostname="<hostname>" profile="<rulename>" action=<action> {reqtype|req_type}=<fld8> url="<url>" sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg="<event_description>" method=<fld3> cat=<fcatnum> catdesc="<filter>" crscore=<reputation_num> crlevel=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|user=\"(?<username>[^\"]*)\")[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(srcport=(?<sport>[^\s]*)[\s]+srcintf=\"(?<sinterface>[^\"]*)\"|sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dstport=(?<dport>[^\s]*)[\s]+dstintf=\"(?<dinterface>[^\"]*)\"|dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+(reqtype|req_type)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+direction=(?<direction>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+method=(?<fld3>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+catdesc=\"(?<filter>[^\"]*)\"[\s]+crscore=(?<reputation_num>[^\s]*)[\s]+crlevel=(?<fld38>.*)$" }
				id => "message-0316013056:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316013056:03"
					"[rsa][message][id1]" => "0316013056:03"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0316013056:04
		# line in RSA: vd={"<vsys>"|<vsys>},policyid=<policy_id>,{intf_policyid=<fld15>,identidx=<id> | identidx=<id>},{serial|sessionid}=<fld1>,srcname="<shost>",osname=<fld23>,osversion=<fld24>,unauthuser=<fld25>,unauthusersource=<fld26>,{user="<username>",group="<group>",srcip=<saddr>|user="<username>",group="<group>",src=<saddr>|user="<username>",srcip=<saddr>|user="<username>",src=<saddr>|srcip=<saddr>|src=<saddr>},{sport=<sport>,src_port=<fld6>|srcport=<sport>},{src_int|srcintf}="<sinterface>",{dstip|dst}=<daddr>,{dport=<dport>,dst_port=<fld7>|dstport=<dport>},{dst_int|dstintf}="<dinterface>",service="<network_service>",hostname="<hostname>",{ carrier_ep="<fld10>",profiletype="<rule_template>" | profiletype="<rule_template>" },{profilegroup="<rule_group>",profile="<rulename>"|profile="<rulename>"},status="<event_state>",{req_type|reqtype}=<fld8>,url="<url>",{sentbyte=<sbytes>,rcvdbyte=<rbytes>,msg="<event_description>"|sent=<sbytes>,rcvd=<rbytes>,msg="<event_description>" | msg="<event_description>" },method=<fld3>,{class=<fld4>,class_desc=<fld5>|class=<fld4>},cat=<fcatnum>,{catdesc|cat_desc}="<filter>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^,]*)),policyid=(?<policy_id>[^,]*),(intf_policyid=(?<fld15>[^,]*),identidx=(?<id>[^\s]*)[\s]+|[\s]*identidx=(?<id>[^,]*)),(serial|sessionid)=(?<fld1>[^,]*),srcname=\"(?<shost>[^\"]*)\",osname=(?<fld23>[^,]*),osversion=(?<fld24>[^,]*),unauthuser=(?<fld25>[^,]*),unauthusersource=(?<fld26>[^,]*),(user=\"(?<username>[^\"]*)\",group=\"(?<group>[^\"]*)\",srcip=(?<saddr>[^,]*)|user=\"(?<username>[^\"]*)\",group=\"(?<group>[^\"]*)\",src=(?<saddr>[^,]*)|user=\"(?<username>[^\"]*)\",srcip=(?<saddr>[^,]*)|user=\"(?<username>[^\"]*)\",src=(?<saddr>[^,]*)|srcip=(?<saddr>[^,]*)|src=(?<saddr>[^,]*)),(sport=(?<sport>[^,]*),src_port=(?<fld6>[^,]*)|srcport=(?<sport>[^,]*)),(src_int|srcintf)=\"(?<sinterface>[^\"]*)\",(dstip|dst)=(?<daddr>[^,]*),(dport=(?<dport>[^,]*),dst_port=(?<fld7>[^,]*)|dstport=(?<dport>[^,]*)),(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\",service=\"(?<network_service>[^\"]*)\",hostname=\"(?<hostname>[^\"]*)\",([\s]*carrier_ep=\"(?<fld10>[^\"]*)\",profiletype=\"(?<rule_template>[^\"]*)\"[\s]+|[\s]*profiletype=\"(?<rule_template>[^\"]*)\"[\s]+),(profilegroup=\"(?<rule_group>[^\"]*)\",profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\"),status=\"(?<event_state>[^\"]*)\",(req_type|reqtype)=(?<fld8>[^,]*),url=\"(?<url>[^\"]*)\",(sentbyte=(?<sbytes>[^,]*),rcvdbyte=(?<rbytes>[^,]*),msg=\"(?<event_description>[^\"]*)\"|sent=(?<sbytes>[^,]*),rcvd=(?<rbytes>[^,]*),msg=\"(?<event_description>[^\"]*)\"[\s]+|[\s]*msg=\"(?<event_description>[^\"]*)\"[\s]+),method=(?<fld3>[^,]*),(class=(?<fld4>[^,]*),class_desc=(?<fld5>[^,]*)|class=(?<fld4>[^,]*)),cat=(?<fcatnum>[^,]*),(catdesc|cat_desc)=\"(?<filter>[^\"]*)\"$" }
				id => "message-0316013056:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0316013056:04"
					"[rsa][message][id1]" => "0316013056:04"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId437
	# line in RSA: vd="<vsys>" policyid=<policy_id> serial=<fld1> user="<username>" group="<group>" src=<saddr> sport=<sport> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_int="<dinterface>" service={"<network_service>"|<network_service>} hostname="<hostname>" profile="<rulename>" status={"<event_state>"|<event_state>} req_type=<fld8> url="<url>" msg="<event_description>" method=<fld3> class=<fld4> class_desc=<fld5> cat=<fcatnum> cat_desc="<filter>"
	else if [logstash][msgparser][id] == "msgParserId437" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)[\s]+serial=(?<fld1>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+sport=(?<sport>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst=(?<daddr>[^\s]*)[\s]+dport=(?<dport>[^\s]*)[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+service=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+req_type=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+method=(?<fld3>[^\s]*)[\s]+class=(?<fld4>[^\s]*)[\s]+class_desc=(?<fld5>[^\s]*)[\s]+cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"$" }
			id => "msgParserId437"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0315012545" {
		# MESSAGE 0315012545
		# line in RSA: {urlfilter_idx=<fld9> urlfilter_list=<fld10> vd="<vsys>"|vd="<vsys>" urlfilteridx=<fld9> urlfilterlist=<fld10>} policyid=<policy_id> {intf_policyid=<fld18> identidx=<id>|identidx=<id>} {sessionid|serial}=<fld1> {user="<username>" group="<group>" srcip=<saddr>|user="<username>" group="<group>" src=<saddr>|user="<username>" srcip=<saddr>|user="<username>" src=<saddr>|srcip=<saddr>|src=<saddr>} {sport=<sport> src_port=<fld6>|srcport=<fld6>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<fld7>} {dst_int|dstintf}="<dinterface>" service="<network_service>" hostname="<hostname>" {carrier_ep=<fld19> profiletype="<rule_template>"|profiletype="<rule_template>"} {profilegroup="<rule_group>" profile="<rulename>"|profile="<rulename>"} status="<event_state>" {req_type|reqtype}=<fld8> url="<url>" {sentbyte=<sbytes> rcvdbyte=<rbytes> msg="<event_description>"|sent=<sbytes> rcvd=<rbytes> msg="<event_description>"|msg="<event_description>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(urlfilter_idx=(?<fld9>[^\s]*)[\s]+urlfilter_list=(?<fld10>[^\s]*)[\s]+vd=\"(?<vsys>[^\"]*)\"|vd=\"(?<vsys>[^\"]*)\"[\s]+urlfilteridx=(?<fld9>[^\s]*)[\s]+urlfilterlist=(?<fld10>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(intf_policyid=(?<fld18>[^\s]*)[\s]+identidx=(?<id>[^\s]*)|identidx=(?<id>[^\s]*))[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*)|src=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<fld6>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<fld7>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+(carrier_ep=(?<fld19>[^\s]*)[\s]+profiletype=\"(?<rule_template>[^\"]*)\"|profiletype=\"(?<rule_template>[^\"]*)\")[\s]+(profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\")[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+(sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|sent=(?<sbytes>[^\s]*)[\s]+rcvd=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"|msg=\"(?<event_description>[^\"]*)\")$" }
				id => "message-0315012545"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012545"
					"[rsa][message][id1]" => "0315012545"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012545:01
		# line in RSA: vd="<vsys>" policyid=<policy_id> serial=<fld1> user="<username>" group="<group>" src=<saddr> sport=<sport> src_port=<fld6> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld7> dst_int="<dinterface>" service="<network_service>" hostname="<hostname>" profile="<rulename>" status="<event_state>" req_type=<fld8> url="<url>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=\"%{vsys}\" policyid=%{policy_id} serial=%{fld1} user=\"%{username}\" group=\"%{group}\" src=%{saddr} sport=%{sport} src_port=%{fld6} src_int=\"%{sinterface}\" dst=%{daddr} dport=%{dport} dst_port=%{fld7} dst_int=\"%{dinterface}\" service=\"%{network_service}\" hostname=\"%{hostname}\" profile=\"%{rulename}\" status=\"%{event_state}\" req_type=%{fld8} url=\"%{url}\" msg=\"%{event_description}\"" }
				id => "message-0315012545:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012545:01"
					"[rsa][message][id1]" => "0315012545:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012545:02
		# line in RSA: vd=<vsys> policyid=<policy_id> sessionid=<sessionid> serial=<fld1> user=<username> srcip=<saddr> srcport=<fld2> src_int=<sinterface> srcintf=<sinterface> dstip=<daddr> dst=<daddr> dstport=<fld3> dst_int=<dinterface> dstintf=<dinterface> proto=<fld70> service=<network_service> hostname=<hostname> profile=<rulename> action=<action> reqtype=<fld9> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg=<event_description> urlfilteridx=<fld10> referralurl=<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} sessionid=%{sessionid} serial=%{fld1} user=%{username} srcip=%{saddr} srcport=%{fld2} src_int=%{sinterface} srcintf=%{sinterface} dstip=%{daddr} dst=%{daddr} dstport=%{fld3} dst_int=%{dinterface} dstintf=%{dinterface} proto=%{fld70} service=%{network_service} hostname=%{hostname} profile=%{rulename} action=%{action} reqtype=%{fld9} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} msg=%{event_description} urlfilteridx=%{fld10} referralurl=%{fld15}" }
				id => "message-0315012545:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012545:02"
					"[rsa][message][id1]" => "0315012545:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0315012546" {
		# MESSAGE 0315012546
		# line in RSA: urlfilter_idx=<fld9> urlfilter_list=<fld10> vd="<vsys>" policyid=<policy_id> identidx=<id> serial=<fld1> user="<username>" group="<group>" src=<saddr> sport=<sport> src_port=<fld6> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld7> dst_int="<dinterface>" service="<network_service>" hostname="<hostname>" profiletype="<rule_template>" profilegroup="<rule_group>" profile="<rulename>" status="<event_state>" req_type=<fld8> url="<url>" msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "urlfilter_idx=%{fld9} urlfilter_list=%{fld10} vd=\"%{vsys}\" policyid=%{policy_id} identidx=%{id} serial=%{fld1} user=\"%{username}\" group=\"%{group}\" src=%{saddr} sport=%{sport} src_port=%{fld6} src_int=\"%{sinterface}\" dst=%{daddr} dport=%{dport} dst_port=%{fld7} dst_int=\"%{dinterface}\" service=\"%{network_service}\" hostname=\"%{hostname}\" profiletype=\"%{rule_template}\" profilegroup=\"%{rule_group}\" profile=\"%{rulename}\" status=\"%{event_state}\" req_type=%{fld8} url=\"%{url}\" msg=\"%{event_description}\"" }
				id => "message-0315012546"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012546"
					"[rsa][message][id1]" => "0315012546"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315012546:01
		# line in RSA: vd=<vsys> urlfilter_idx=<fld9> urlfilter_list=<fld10> urlfilteridx=<fld59> urlfilterlist=<fld50> policyid=<policy_id> identidx=<id> serial=<serial_number> sessionid=<sessionid> user=<username> sport=<sport> src=<saddr> src_port=<sport> src_int=<sinterface> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dst=<daddr> dport=<dport> dstport=<dport> dstintf=<dinterface> dst_port=<dport> dst_int=<dinterface> status=<event_state> proto=<fld70> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> action=<action> reqtype=<fld19> req_type=<fld8> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} urlfilter_idx=%{fld9} urlfilter_list=%{fld10} urlfilteridx=%{fld59} urlfilterlist=%{fld50} policyid=%{policy_id} identidx=%{id} serial=%{serial_number} sessionid=%{sessionid} user=%{username} sport=%{sport} src=%{saddr} src_port=%{sport} src_int=%{sinterface} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dst=%{daddr} dport=%{dport} dstport=%{dport} dstintf=%{dinterface} dst_port=%{dport} dst_int=%{dinterface} status=%{event_state} proto=%{fld70} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} action=%{action} reqtype=%{fld19} req_type=%{fld8} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} msg=%{event_description}" }
				id => "message-0315012546:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0315012546:01"
					"[rsa][message][id1]" => "0315012546:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0508080001" {
		# MESSAGE 0508080001
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> service=<network_service> status=<event_state> from="<from>" to="<to>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(?<sinterface>[^\s]*)[\s]+dst_int=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+to=\"(?<to>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0508080001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0508080001"
					"[rsa][message][id1]" => "0508080001"
					"[event][categoryid]" => "1204020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0508080001:01
		# line in RSA: {vd=<vsys> src=|src=}<saddr> dst=<daddr> service=<network_service> status=<event_state> from=<from> to=<to> virus=<virusname> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+src=|src=)(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+to=(?<to>[^\s]*)[\s]+virus=(?<virusname>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-0508080001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0508080001:01"
					"[rsa][message][id1]" => "0508080001:01"
					"[event][categoryid]" => "1204020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId445
	# line in RSA: vd=<vsys> policyid=<policy_id> serial=<serial_number> user="<username>" group="<group>" src=<saddr> sport=<sport> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_int="<dinterface>" service="<network_service>" status="<event_state>" from="<from>" to="<to>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId445" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} serial=%{serial_number} user=\"%{username}\" group=\"%{group}\" src=%{saddr} sport=%{sport} src_int=\"%{sinterface}\" dst=%{daddr} dport=%{dport} dst_int=\"%{dinterface}\" service=\"%{network_service}\" status=\"%{event_state}\" from=\"%{from}\" to=\"%{to}\" msg=\"%{event_description}\"" }
			id => "msgParserId445"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId446
	# line in RSA: policyid=<policy_id> identidx=<fld23> serial=<serial_number> user="<username>" group="<group>" vd=<vsys> src=<saddr> sport=<sport> src_port=<fld24> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld25> dst_int="<dinterface>" service=<network_service> carrier_ep=<fld4> profile="<rulename>" profilegroup="<rule_group>" profiletype="<rule_template>" status=<event_state> from="<from>" to="<to>" tracker=<fld34> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId446" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} identidx=%{fld23} serial=%{serial_number} user=\"%{username}\" group=\"%{group}\" vd=%{vsys} src=%{saddr} sport=%{sport} src_port=%{fld24} src_int=\"%{sinterface}\" dst=%{daddr} dport=%{dport} dst_port=%{fld25} dst_int=\"%{dinterface}\" service=%{network_service} carrier_ep=%{fld4} profile=\"%{rulename}\" profilegroup=\"%{rule_group}\" profiletype=\"%{rule_template}\" status=%{event_state} from=\"%{from}\" to=\"%{to}\" tracker=%{fld34} msg=\"%{event_description}\"" }
			id => "msgParserId446"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0508020480" {
		# MESSAGE 0508020480
		# line in RSA: policyid=<policy_id> identidx=<fld23> serial=<serial_number> user="<username>" group="<group>" vd=<vsys> src=<saddr> sport=<sport> src_port=<fld24> src_int="<sinterface>" dst=<daddr> dport=<dport> dst_port=<fld25> dst_int="<dinterface>" service=<network_service> carrier_ep=<fld4> profile="<rulename>" profilegroup="<rule_group>" profiletype="<rule_template>" status=<event_state> from="<from>" to="<to>" tracker=<fld34> msg="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "policyid=%{policy_id} identidx=%{fld23} serial=%{serial_number} user=\"%{username}\" group=\"%{group}\" vd=%{vsys} src=%{saddr} sport=%{sport} src_port=%{fld24} src_int=\"%{sinterface}\" dst=%{daddr} dport=%{dport} dst_port=%{fld25} dst_int=\"%{dinterface}\" service=%{network_service} carrier_ep=%{fld4} profile=\"%{rulename}\" profilegroup=\"%{rule_group}\" profiletype=\"%{rule_template}\" status=%{event_state} from=\"%{from}\" to=\"%{to}\" tracker=%{fld34} msg=\"%{event_description}\"" }
				id => "message-0508020480"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0508020480"
					"[rsa][message][id1]" => "0508020480"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0508020480:01
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> identidx=<fld23> {serial=<serial_number> user="<username>" group="<group>"|sessionid=<serial_number> user="<username>" group="<group>"|sessionid=<serial_number>} {srcip|src}=<saddr> {sport=<sport> src_port=<fld24>|srcport=<sport>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld25>|dstport=<dport>} {dst_int|dstintf}="<dinterface>" {service=<network_service> profile=<rulename> profiletype=<rule_template>|service=<network_service>} status=<event_state> from="<from>" {to="<to>" tracker=<fld34> sentbyte=<sbytes>|sentbyte=<sbytes>} rcvdbyte=<rbytes> msg=<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld23>[^\s]*)[\s]+(serial=(?<serial_number>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|sessionid=(?<serial_number>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|sessionid=(?<serial_number>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld24>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld25>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+(service=(?<network_service>[^\s]*)[\s]+profile=(?<rulename>[^\s]*)[\s]+profiletype=(?<rule_template>[^\s]*)|service=(?<network_service>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+from=\"(?<from>[^\"]*)\"[\s]+(to=\"(?<to>[^\"]*)\"[\s]+tracker=(?<fld34>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)|sentbyte=(?<sbytes>[^\s]*))[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+msg=(?<event_description>.*)$" }
				id => "message-0508020480:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0508020480:01"
					"[rsa][message][id1]" => "0508020480:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId447
	# line in RSA: vd="<vsys>" action=<action> start=<fld1><space>end=<fld2><space>engine=<component_version> plugin=<content_version>
	else if [logstash][msgparser][id] == "msgParserId447" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" action=%{action} start=%{fld1}%{space}end=%{fld2}%{space}engine=%{component_version} plugin=%{content_version}" }
			id => "msgParserId447"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId448
	# line in RSA: vd=<vsys> action=<action> ip=<hostip> service=<network_service> proto=<protocol> port=<dport>
	else if [logstash][msgparser][id] == "msgParserId448" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} ip=%{hostip} service=%{network_service} proto=%{protocol} port=%{dport}" }
			id => "msgParserId448"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId449
	# line in RSA: vd=<vsys> action=<action> ip=<hostip> os=<fld2> os_family=<fld3> os_gen=<fld4> os_vendor=<fld5>
	else if [logstash][msgparser][id] == "msgParserId449" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} ip=%{hostip} os=%{fld2} os_family=%{fld3} os_gen=%{fld4} os_vendor=%{fld5}" }
			id => "msgParserId449"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId450
	# line in RSA: vd="<vsys>" action=<action> ip=<hostip> <fld23> severity=<fld35> proto=<protocol> port=<dport>
	else if [logstash][msgparser][id] == "msgParserId450" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" action=%{action} ip=%{hostip} %{fld23} severity=%{fld35} proto=%{protocol} port=%{dport}" }
			id => "msgParserId450"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId451
	# line in RSA: <fld3>
	else if [logstash][msgparser][id] == "msgParserId451" {
		dissect {
			mapping => { "message" => "%{fld3}" }
			id => "msgParserId451"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId452
	# line in RSA: vd=<vsys> action=<action> daemon=<fld1> pid=<fld2> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId452" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} daemon=%{fld1} pid=%{fld2} msg=\"%{event_description}\"" }
			id => "msgParserId452"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId453
	# line in RSA: vd=<vsys> user="<username>" ui=<network_service>(<saddr>) msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId453" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=\"%{username}\" ui=%{network_service}(%{saddr}) msg=\"%{event_description}\"" }
			id => "msgParserId453"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId454
	# line in RSA: vd=<vsys> action=<action> daemon=<fld1> pid=<fld2> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId454" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} daemon=%{fld1} pid=%{fld2} msg=\"%{event_description}\"" }
			id => "msgParserId454"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId455
	# line in RSA: vd=<vsys> ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId455" {
		dissect {
			mapping => { "message" => "vd=%{vsys} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=\"%{event_description}\"" }
			id => "msgParserId455"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "0315013317" {
		# MESSAGE 0315013317
		# line in RSA: vd="<vsys>" { policyid=<policy_id> intf_policyid=<fld10> | policyid=<policy_id> } identidx=<fld33> {sessionid|serial}=<fld1> {user="<username>" group="<group>" src=<saddr>|user="<username>" group="<group>" srcip=<saddr>|user="<username>" srcip=<saddr>|user="<username>" src=<saddr>|srcip=<saddr>} {sport=<sport> src_port=<fld2>|srcport=<fld2>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld3>|dstport=<fld3>} {dst_int|dstintf}="<dinterface>" service="<network_service>" hostname="<hostname>" {carrier_ep=<fld4> profiletype="<rule_template>" profilegroup="<rule_group>"|profiletype="<rule_template>" profilegroup="<rule_group>"|profiletype="<rule_template>"} profile="<rulename>" status="<fld16>" {req_type|reqtype}=<fld8> url="<url>" {sentbyte|sent}=<sbytes> {rcvdbyte|rcvd}=<rbytes> msg="<event_description>" method=<fld5> {class=<fld6> class_desc=<fld7>|class=<fld6>} {cat=<fcatnum> cat_desc="<filter>"|cat=<fcatnum>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+([\s]*policyid=(?<policy_id>[^\s]*)[\s]+intf_policyid=(?<fld10>[^\s]*)[\s]+|[\s]*policyid=(?<policy_id>[^\s]*)[\s]+)[\s]+identidx=(?<fld33>[^\s]*)[\s]+(sessionid|serial)=(?<fld1>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld2>[^\s]*)|srcport=(?<fld2>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld3>[^\s]*)|dstport=(?<fld3>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+(carrier_ep=(?<fld4>[^\s]*)[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profilegroup=\"(?<rule_group>[^\"]*)\"|profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profilegroup=\"(?<rule_group>[^\"]*)\"|profiletype=\"(?<rule_template>[^\"]*)\")[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+status=\"(?<fld16>[^\"]*)\"[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+(sentbyte|sent)=(?<sbytes>[^\s]*)[\s]+(rcvdbyte|rcvd)=(?<rbytes>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+method=(?<fld5>[^\s]*)[\s]+(class=(?<fld6>[^\s]*)[\s]+class_desc=(?<fld7>[^\s]*)|class=(?<fld6>[^\s]*))[\s]+(cat=(?<fcatnum>[^\s]*)[\s]+cat_desc=\"(?<filter>[^\"]*)\"|cat=(?<fcatnum>.*))$" }
				id => "message-0315013317"
				add_field => {
					"[event][id]" => "0315013317"
					"[rsa][message][id1]" => "0315013317"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0315013317:01
		# line in RSA: vd=<vsys>  policyid=<policy_id> sessionid=<sessionid> user=<username> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> servCLI=<network_service> hostname=<hostname> profile=<rulename> action=<action> reqtype=<fld9> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> msg=<event_description> method=<fld10> cat=<fcatnum>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys}  policyid=%{policy_id} sessionid=%{sessionid} user=%{username} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} servCLI=%{network_service} hostname=%{hostname} profile=%{rulename} action=%{action} reqtype=%{fld9} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} msg=%{event_description} method=%{fld10} cat=%{fcatnum}" }
				id => "message-0315013317:01"
				add_field => {
					"[event][id]" => "0315013317:01"
					"[rsa][message][id1]" => "0315013317:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId246
	# line in RSA: vd=<vsys> id=<fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId246" {
		dissect {
			mapping => { "message" => "vd=%{vsys} id=%{fld3} msg=\"%{event_description}\"" }
			id => "msgParserId246"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId458
	# line in RSA: user=<username> ui=<fld> action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId458" {
		dissect {
			mapping => { "message" => "user=%{username} ui=%{fld} action=%{action} status=%{event_state} msg=\"%{event_description}\"" }
			id => "msgParserId458"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId459
	# line in RSA: severity=<risk> carrier_ep="<fld6>" { profilegroup="<rule_group>" profiletype="<rule_template>" profile="<rulename>" | profile="<rulename>" } src=<saddr> dst=<daddr> src_int={"<sinterface>"|<sinterface>} dst_int={"<dinterface>"|<dinterface>} policyid=<policy_id> {identidx=<fld7> serial=<fld4> status=<event_state> | serial=<fld4> status=<event_state> | status=<event_state>} proto=<fld70> service=<network_service> vd={"<vsys>" | <vsys>} count=<dclass_counter1> icmp_id=<fld10> icmp_type=<fld11> icmp_code=<fld12> attack_id=<sigid> sensor="<fld14>" ref="<fld15>" user="<username>" group="<fld16>" msg="<fld17>"
	else if [logstash][msgparser][id] == "msgParserId459" {
		grok {
			match => { "message" => "^severity=(?<risk>[^\s]*)[\s]+carrier_ep=\"(?<fld6>[^\"]*)\"[\s]+([\s]*profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+|[\s]*profile=\"(?<rulename>[^\"]*)\"[\s]+)[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+dst_int=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(identidx=(?<fld7>[^\s]*)[\s]+serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+|[\s]*serial=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+|[\s]*status=(?<event_state>[^\s]*))[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+vd=(\"(?<vsys>[^\"]*)\"[\s]+|[\s]*(?<vsys>[^\s]*))[\s]+count=(?<dclass_counter1>[^\s]*)[\s]+icmp_id=(?<fld10>[^\s]*)[\s]+icmp_type=(?<fld11>[^\s]*)[\s]+icmp_code=(?<fld12>[^\s]*)[\s]+attack_id=(?<sigid>[^\s]*)[\s]+sensor=\"(?<fld14>[^\"]*)\"[\s]+ref=\"(?<fld15>[^\"]*)\"[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<fld16>[^\"]*)\"[\s]+msg=\"(?<fld17>[^\"]*)\"$" }
			id => "msgParserId459"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId460
	# line in RSA: vd="<fld1>" user="<username>" ui="<network_service>" action=<action> cfg_tid=<fld2> cfg_path="<fld3>" cfg_obj="<fld4>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId460" {
		dissect {
			mapping => { "message" => "vd=\"%{fld1}\" user=\"%{username}\" ui=\"%{network_service}\" action=%{action} cfg_tid=%{fld2} cfg_path=\"%{fld3}\" cfg_obj=\"%{fld4}\" msg=\"%{event_description}\"" }
			id => "msgParserId460"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId461
	# line in RSA: vd="<fld1>" user="<username>" ui="<network_service>" action=<action> cfg_tid=<fld2> cfg_path="<fld3>" cfg_obj="<fld4>" cfg_attr="<fld5>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId461" {
		dissect {
			mapping => { "message" => "vd=\"%{fld1}\" user=\"%{username}\" ui=\"%{network_service}\" action=%{action} cfg_tid=%{fld2} cfg_path=\"%{fld3}\" cfg_obj=\"%{fld4}\" cfg_attr=\"%{fld5}\" msg=\"%{event_description}\"" }
			id => "msgParserId461"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId462
	# line in RSA: {policyid=<policy_id>|vd=<vsys> policyid=<policy_id>} identidx=<fld23> {sessionid|serial}=<serial_number> {user=<username> group=<group> vd=<vsys> src=<saddr>|srcip=<saddr>} {sport=<sport> src_port=<fld24>|srcport=<sport>} {srcintf|src_int}=<sinterface> {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld25>|dstport=<dport>} {dstintf|dst_int}=<dinterface> service=<network_service> {carrier_ep=<fld14> profile=<rulename> profilegroup=<rule_group>|profile=<rulename> profiletype=<rule_template>} status=<event_state> from=<from> {to=<to> tracker=<fld34>|to=<to>} {sentbyte|sent}=<sbytes> {rcvdbyte|rcvd}=<rbytes> msg=<event_description> subject=<fld3> {size=<fld4> cc=<fld5>|size=<fld4>} attachment=<fld6>
	else if [logstash][msgparser][id] == "msgParserId462" {
		grok {
			match => { "message" => "^(policyid=(?<policy_id>[^\s]*)|vd=(?<vsys>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*))[\s]+identidx=(?<fld23>[^\s]*)[\s]+(sessionid|serial)=(?<serial_number>[^\s]*)[\s]+(user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+vd=(?<vsys>[^\s]*)[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld24>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(srcintf|src_int)=(?<sinterface>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld25>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dstintf|dst_int)=(?<dinterface>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+(carrier_ep=(?<fld14>[^\s]*)[\s]+profile=(?<rulename>[^\s]*)[\s]+profilegroup=(?<rule_group>[^\s]*)|profile=(?<rulename>[^\s]*)[\s]+profiletype=(?<rule_template>[^\s]*))[\s]+status=(?<event_state>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+(to=(?<to>[^\s]*)[\s]+tracker=(?<fld34>[^\s]*)|to=(?<to>[^\s]*))[\s]+(sentbyte|sent)=(?<sbytes>[^\s]*)[\s]+(rcvdbyte|rcvd)=(?<rbytes>[^\s]*)[\s]+msg=(?<event_description>[^\s]*)[\s]+subject=(?<fld3>[^\s]*)[\s]+(size=(?<fld4>[^\s]*)[\s]+cc=(?<fld5>[^\s]*)|size=(?<fld4>[^\s]*))[\s]+attachment=(?<fld6>.*)$" }
			id => "msgParserId462"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId463
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user="<username>" group="<group>" ui="<interface>" action=<action> status=<event_state> reason="<result>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId463" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} policyid=%{policy_id} user=\"%{username}\" group=\"%{group}\" ui=\"%{interface}\" action=%{action} status=%{event_state} reason=\"%{result}\" msg=\"%{event_description}\"" }
			id => "msgParserId463"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId464
	# line in RSA: vd="<vsys>" src=<saddr> srcname=<shost> src_port= <sport> dst=<daddr> dstname=<dhost> dst_country="<location_dst>" src_country="<location_src>" dst_port=<dport> wanopt_app_type=<fld7> duration=<duration> rule=<rule> policyid=<policy_id> identidx=<fld10> wan_in=<fld11> wan_out=<fld12> lan_in=<fld13> lan_out=<fld14> src_int="<sinterface>" dst_int="<dinterface>" user="<username>" group="<group>"
	else if [logstash][msgparser][id] == "msgParserId464" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} srcname=%{shost} src_port= %{sport} dst=%{daddr} dstname=%{dhost} dst_country=\"%{location_dst}\" src_country=\"%{location_src}\" dst_port=%{dport} wanopt_app_type=%{fld7} duration=%{duration} rule=%{rule} policyid=%{policy_id} identidx=%{fld10} wan_in=%{fld11} wan_out=%{fld12} lan_in=%{fld13} lan_out=%{fld14} src_int=\"%{sinterface}\" dst_int=\"%{dinterface}\" user=\"%{username}\" group=\"%{group}\"" }
			id => "msgParserId464"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0001000014" {
		# MESSAGE 0001000014
		# line in RSA: vd=<vsys>,srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",sessionid=<sessionid>,status=<event_state>,policyid=<policy_id>,dstcountry="<location_dst>",srccountry="<location_src>",trandisp=<context>,service=<network_service>,proto=<fld70>,app=<obj_name>,duration=<duration>,sentbyte=<sbytes>,rcvdbyte=<rbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys},srcip=%{saddr},srcport=%{sport},srcintf=\"%{sinterface}\",dstip=%{daddr},dstport=%{dport},dstintf=\"%{dinterface}\",sessionid=%{sessionid},status=%{event_state},policyid=%{policy_id},dstcountry=\"%{location_dst}\",srccountry=\"%{location_src}\",trandisp=%{context},service=%{network_service},proto=%{fld70},app=%{obj_name},duration=%{duration},sentbyte=%{sbytes},rcvdbyte=%{rbytes}" }
				id => "message-0001000014"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014"
					"[rsa][message][id1]" => "0001000014"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0001000014:01
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> status={<event_state> user="<username>" policyid=<policy_id>|<event_state> policyid=<policy_id>} {dstcountry="<location_dst>" srccountry="<location_src>" trandisp=<context>|trandisp=<context>} service=<network_service> proto=<fld70> app={"<obj_name>"|<obj_name>} duration=<duration> sentbyte=<sbytes> {rcvdbyte=<rbytes> sentpkt=<fld10> rcvdpkt=<fld11>|sentpkt=<fld10> rcvdpkt=<fld11> rcvdbyte=<rbytes>|rcvdbyte=<rbytes> sentpkt=<fld10>|rcvdbyte=<rbytes>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+status=((?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)|(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*))[\s]+(dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+trandisp=(?<context>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+app=(\"(?<obj_name>[^\"]*)\"|(?<obj_name>[^\s]*))[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+(rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld10>[^\s]*)[\s]+rcvdpkt=(?<fld11>.*)|sentpkt=(?<fld10>[^\s]*)[\s]+rcvdpkt=(?<fld11>[^\s]*)[\s]+rcvdbyte=(?<rbytes>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld10>.*)|rcvdbyte=(?<rbytes>.*))$" }
				id => "message-0001000014:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014:01"
					"[rsa][message][id1]" => "0001000014:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0001000014:02
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> proto=<fld70> {action=<action> policyid=<policy_id>|action=<action>} {dstcountry="<location_dst>" srccountry="<location_src>" trandisp=<context>|trandisp=<context>} service=<network_service> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld10> rcvdpkt=<fld11> crscore=<reputation_num> craction=<fld37> crlevel=<fld38>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(action=(?<action>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)|action=(?<action>[^\s]*))[\s]+(dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+trandisp=(?<context>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld10>[^\s]*)[\s]+rcvdpkt=(?<fld11>[^\s]*)[\s]+crscore=(?<reputation_num>[^\s]*)[\s]+craction=(?<fld37>[^\s]*)[\s]+crlevel=(?<fld38>.*)$" }
				id => "message-0001000014:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014:02"
					"[rsa][message][id1]" => "0001000014:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0001000014:03
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> {action=<action> policyid=<policy_id>|action=<action>} {dstcountry="<location_dst>" srccountry="<location_src>" trandisp=<context>|trandisp=<context>} {service=<network_service> proto=<fld70>|service="<fld70>/<network_service>"} app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> {sentpkt=<fld10> rcvdpkt=<fld11> crscore=<reputation_num> craction=<fld37> crlevel=<fld38>|sentpkt=<fld10>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(action=(?<action>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)|action=(?<action>[^\s]*))[\s]+(dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+trandisp=(?<context>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+(service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)|service=\"(?<fld70>[^/]*)/(?<network_service>[^\"]*)\")[\s]+app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+(sentpkt=(?<fld10>[^\s]*)[\s]+rcvdpkt=(?<fld11>[^\s]*)[\s]+crscore=(?<reputation_num>[^\s]*)[\s]+craction=(?<fld37>[^\s]*)[\s]+crlevel=(?<fld38>.*)|sentpkt=(?<fld10>.*))$" }
				id => "message-0001000014:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014:03"
					"[rsa][message][id1]" => "0001000014:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0001000014:05
		# line in RSA: vd=<vsys>,srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",sessionid=<sessionid>,action=<action>,policyid=<policy_id>,dstcountry="<location_dst>",srccountry="<location_src>",trandisp=<context>,service=<network_service>,proto=<fld70>,app=<obj_name>,duration=<duration>,sentbyte=<sbytes>,rcvdbyte=<rbytes>,sentpkt=<fld5>,rcvdpkt=<fld6>,crscore=<reputation_num>,craction=<fld37>,crlevel=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys},srcip=%{saddr},srcport=%{sport},srcintf=\"%{sinterface}\",dstip=%{daddr},dstport=%{dport},dstintf=\"%{dinterface}\",sessionid=%{sessionid},action=%{action},policyid=%{policy_id},dstcountry=\"%{location_dst}\",srccountry=\"%{location_src}\",trandisp=%{context},service=%{network_service},proto=%{fld70},app=%{obj_name},duration=%{duration},sentbyte=%{sbytes},rcvdbyte=%{rbytes},sentpkt=%{fld5},rcvdpkt=%{fld6},crscore=%{reputation_num},craction=%{fld37},crlevel=%{fld2}" }
				id => "message-0001000014:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014:05"
					"[rsa][message][id1]" => "0001000014:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0001000014:06
		# line in RSA: vd=<vsys>,{srcip=<saddr>,srcport=<sport>|srcip=<saddr>},srcintf={"<sinterface>"|<sinterface>},{dstip=<daddr>,dstport=<dport>|dstip=<daddr>},dstintf="<dinterface>",sessionid=<sessionid>,action=<action>,policyid=<policy_id>,dstcountry="<location_dst>",srccountry="<location_src>",trandisp=<context>,service=<network_service>,proto=<fld70>,app=<obj_name>,duration=<duration>,sentbyte=<sbytes>,rcvdbyte=<rbytes>,sentpkt=<fld5>,rcvdpkt=<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^,]*),(srcip=(?<saddr>[^,]*),srcport=(?<sport>[^,]*)|srcip=(?<saddr>[^,]*)),srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^,]*)),(dstip=(?<daddr>[^,]*),dstport=(?<dport>[^,]*)|dstip=(?<daddr>[^,]*)),dstintf=\"(?<dinterface>[^\"]*)\",sessionid=(?<sessionid>[^,]*),action=(?<action>[^,]*),policyid=(?<policy_id>[^,]*),dstcountry=\"(?<location_dst>[^\"]*)\",srccountry=\"(?<location_src>[^\"]*)\",trandisp=(?<context>[^,]*),service=(?<network_service>[^,]*),proto=(?<fld70>[^,]*),app=(?<obj_name>[^,]*),duration=(?<duration>[^,]*),sentbyte=(?<sbytes>[^,]*),rcvdbyte=(?<rbytes>[^,]*),sentpkt=(?<fld5>[^,]*),rcvdpkt=(?<fld6>.*)$" }
				id => "message-0001000014:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014:06"
					"[rsa][message][id1]" => "0001000014:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0001000014:04
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> poluuid=<id2> action=<action> crscore=<reputation_num> craction=<fld37>  crlevel=<fld2> srcname=<shost> devtype=<fld21> osname=<fld23> osversion=<fld24> unauthuser=<fld25> unauthusersource=<fld26> mastersrcmac=<fld28> srcmac=<fld29> srcssid=<ssid> dstname=<dhost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} poluuid=%{id2} action=%{action} crscore=%{reputation_num} craction=%{fld37}  crlevel=%{fld2} srcname=%{shost} devtype=%{fld21} osname=%{fld23} osversion=%{fld24} unauthuser=%{fld25} unauthusersource=%{fld26} mastersrcmac=%{fld28} srcmac=%{fld29} srcssid=%{ssid} dstname=%{dhost}" }
				id => "message-0001000014:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0001000014:04"
					"[rsa][message][id1]" => "0001000014:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId466
	# line in RSA: vd="<vsys>" msg="<event_description>" status="<event_state>" service="<network_service>" src=<saddr> dst=<daddr> sport=<sport> src_port=<fld1> dport=<dport> dst_port=<fld2> src_int=<sinterface> dst_int=<dinterface> policyid=<policy_id> identidx=<fld3> serial=<serial_number> file="<filename>" url="<url>" carrier_ep="<fld4>" profiletype="<rule_template>" profilegroup="<rule_group>" profile="<rulename>" user="<username>" group=<group> from="<from>" to="<to>" agent="<fld10>"
	else if [logstash][msgparser][id] == "msgParserId466" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" msg=\"%{event_description}\" status=\"%{event_state}\" service=\"%{network_service}\" src=%{saddr} dst=%{daddr} sport=%{sport} src_port=%{fld1} dport=%{dport} dst_port=%{fld2} src_int=%{sinterface} dst_int=%{dinterface} policyid=%{policy_id} identidx=%{fld3} serial=%{serial_number} file=\"%{filename}\" url=\"%{url}\" carrier_ep=\"%{fld4}\" profiletype=\"%{rule_template}\" profilegroup=\"%{rule_group}\" profile=\"%{rulename}\" user=\"%{username}\" group=%{group} from=\"%{from}\" to=\"%{to}\" agent=\"%{fld10}\"" }
			id => "msgParserId466"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId467
	# line in RSA: vd=<vsys> msg=<event_description> action=<action> rem_ip=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> out_intf=<sinterface> cookies=<fld1> user=<username> group=<group> xauth_user={"<c_username>"|<c_username>} xauth_group=<group> vpn_tunnel=<fld4> status=<event_state> xauth_result=<result>
	else if [logstash][msgparser][id] == "msgParserId467" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+msg=(?<event_description>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+rem_ip=(?<daddr>[^\s]*)[\s]+loc_ip=(?<saddr>[^\s]*)[\s]+rem_port=(?<dport>[^\s]*)[\s]+loc_port=(?<sport>[^\s]*)[\s]+out_intf=(?<sinterface>[^\s]*)[\s]+cookies=(?<fld1>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(?<group>[^\s]*)[\s]+xauth_user=(\"(?<c_username>[^\"]*)\"|(?<c_username>[^\s]*))[\s]+xauth_group=(?<group>[^\s]*)[\s]+vpn_tunnel=(?<fld4>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+xauth_result=(?<result>.*)$" }
			id => "msgParserId467"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"ec_outcome" => "Failure"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0000000013" {
		# MESSAGE 0000000013:02
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> {status=<event_state> user="<username>" group="<group>"|status=<event_state>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} trandisp=<context> service=<network_service> proto=<fld70> {app=<obj_name> appcat=<fld8> applist=<fld9> appact=<fld11> duration=<duration>|app=<obj_name> duration=<duration>|duration=<duration>} sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> utmaction=<action> utmevent=<event_type> utmseverity=<risk> {attack=<signame> hostname=<hostname>|attack=<signame>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|status=(?<event_state>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+trandisp=(?<context>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(app=(?<obj_name>[^\s]*)[\s]+appcat=(?<fld8>[^\s]*)[\s]+applist=(?<fld9>[^\s]*)[\s]+appact=(?<fld11>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|duration=(?<duration>[^\s]*))[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>[^\s]*)[\s]+utmaction=(?<action>[^\s]*)[\s]+utmevent=(?<event_type>[^\s]*)[\s]+utmseverity=(?<risk>[^\s]*)[\s]+(attack=(?<signame>[^\s]*)[\s]+hostname=(?<hostname>.*)|attack=(?<signame>.*))$" }
				id => "message-0000000013:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:02"
					"[rsa][message][id1]" => "0000000013:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:05
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> {status=<event_state> user="<username>" group="<group>"|status=<event_state>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} {trandisp=<context> transip=<stransaddr> transport=<stransport>|trandisp=<context>} service=<network_service> proto=<fld70> appid=<fld37> {app="<obj_name>" appcat=<fld8> apprisk=<risk> applist=<fld9> appact=<fld11> duration=<duration>|app="<obj_name>" duration=<duration>|duration=<duration>} sentbyte=<sbytes> {rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> identidx=<fld7> utmaction=<action> utmevent=<event_type> attack=<signame>|rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6>|rcvdbyte=<rbytes> sentpkt=<fld5>|rcvdbyte=<rbytes> crscore=<reputation_num> craction=<fld37> crlevel=<fld38>|rcvdbyte=<rbytes>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|status=(?<event_state>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+(trandisp=(?<context>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+appid=(?<fld37>[^\s]*)[\s]+(app=\"(?<obj_name>[^\"]*)\"[\s]+appcat=(?<fld8>[^\s]*)[\s]+apprisk=(?<risk>[^\s]*)[\s]+applist=(?<fld9>[^\s]*)[\s]+appact=(?<fld11>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|app=\"(?<obj_name>[^\"]*)\"[\s]+duration=(?<duration>[^\s]*)|duration=(?<duration>[^\s]*))[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+(rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)[\s]+utmaction=(?<action>[^\s]*)[\s]+utmevent=(?<event_type>[^\s]*)[\s]+attack=(?<signame>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+crscore=(?<reputation_num>[^\s]*)[\s]+craction=(?<fld37>[^\s]*)[\s]+crlevel=(?<fld38>.*)|rcvdbyte=(?<rbytes>.*))$" }
				id => "message-0000000013:05"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:05"
					"[rsa][message][id1]" => "0000000013:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:10
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> {status=<event_state> user="<username>" group="<group>"|status=<event_state>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} {trandisp=<context> tranip=<dtransaddr> tranport=<dtransport>|trandisp=<context> transip=<stransaddr> transport=<stransport>|trandisp=<context>} service=<network_service> proto=<fld70> {app=<obj_name> appcat=<fld8> applist=<fld9> appact=<fld11> duration=<duration>|app=<obj_name> duration=<duration>|duration=<duration>} sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6>{identidx=<fld7> utmaction=<action>|utmaction=<action>} utmevent=<event_type> {utmsubtype=<fld4> httpstatus=<fld14> urlcnt=<fld1> hostname="<hostname>" catdesc="<filter>"|utmsubtype=<fld4> httpstatus=<fld14>  hostname="<hostname>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|status=(?<event_state>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+(trandisp=(?<context>[^\s]*)[\s]+tranip=(?<dtransaddr>[^\s]*)[\s]+tranport=(?<dtransport>[^\s]*)|trandisp=(?<context>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(app=(?<obj_name>[^\s]*)[\s]+appcat=(?<fld8>[^\s]*)[\s]+applist=(?<fld9>[^\s]*)[\s]+appact=(?<fld11>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|duration=(?<duration>[^\s]*))[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>[^iu]*)(identidx=(?<fld7>[^\s]*)[\s]+utmaction=(?<action>[^\s]*)|utmaction=(?<action>[^\s]*))[\s]+utmevent=(?<event_type>[^\s]*)[\s]+(utmsubtype=(?<fld4>[^\s]*)[\s]+httpstatus=(?<fld14>[^\s]*)[\s]+urlcnt=(?<fld1>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+catdesc=\"(?<filter>[^\"]*)\"|utmsubtype=(?<fld4>[^\s]*)[\s]+httpstatus=(?<fld14>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\")$" }
				id => "message-0000000013:10"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:10"
					"[rsa][message][id1]" => "0000000013:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:06
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> {status=<event_state> user="<username>" group="<group>"|status=<event_state>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} {trandisp=<context> tranip=<dtransaddr> tranport=<dtransport>|trandisp=<context> transip=<stransaddr> transport=<stransport>|trandisp=<context>} service=<network_service> proto=<fld70> {app=<obj_name> appcat=<fld8> applist=<fld9> appact=<fld11> duration=<duration>|app=<obj_name> duration=<duration>|duration=<duration>} sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6>{identidx=<fld7> utmaction=<action>|utmaction=<action>} utmevent=<event_type> {utmsubtype=<fld4> urlcnt=<fld1> hostname="<hostname>" catdesc="<filter>"|utmsubtype=<fld4> urlcnt=<fld1> catdesc="<filter>"|utmsubtype=<fld4> hostname="<hostname>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|status=(?<event_state>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+(trandisp=(?<context>[^\s]*)[\s]+tranip=(?<dtransaddr>[^\s]*)[\s]+tranport=(?<dtransport>[^\s]*)|trandisp=(?<context>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(app=(?<obj_name>[^\s]*)[\s]+appcat=(?<fld8>[^\s]*)[\s]+applist=(?<fld9>[^\s]*)[\s]+appact=(?<fld11>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|duration=(?<duration>[^\s]*))[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>[^iu]*)(identidx=(?<fld7>[^\s]*)[\s]+utmaction=(?<action>[^\s]*)|utmaction=(?<action>[^\s]*))[\s]+utmevent=(?<event_type>[^\s]*)[\s]+(utmsubtype=(?<fld4>[^\s]*)[\s]+urlcnt=(?<fld1>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+catdesc=\"(?<filter>[^\"]*)\"|utmsubtype=(?<fld4>[^\s]*)[\s]+urlcnt=(?<fld1>[^\s]*)[\s]+catdesc=\"(?<filter>[^\"]*)\"|utmsubtype=(?<fld4>[^\s]*)[\s]+hostname=\"(?<hostname>[^\"]*)\")$" }
				id => "message-0000000013:06"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:06"
					"[rsa][message][id1]" => "0000000013:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:08
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstintf="<dinterface>" sessionid=<sessionid> status=<event_state> user="<username>" group="<group>" policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"{trandisp=<context> transip=<stransaddr> transport=<stransport>|trandisp=<context>} service=<network_service> proto=<fld70> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> identidx=<fld7> utmaction=<action> {utmevent=<event_type> httpstatus=<fld14>|utmevent=<event_type>} {filename="<filename>" hostname="<hostname>"|hostname="<hostname>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=\"(?<sinterface>[^\"]*)\"[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"(trandisp=(?<context>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)[\s]+utmaction=(?<action>[^\s]*)[\s]+(utmevent=(?<event_type>[^\s]*)[\s]+httpstatus=(?<fld14>[^\s]*)|utmevent=(?<event_type>[^\s]*))[\s]+(filename=\"(?<filename>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"|hostname=\"(?<hostname>[^\"]*)\")$" }
				id => "message-0000000013:08"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:08"
					"[rsa][message][id1]" => "0000000013:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:07
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstintf="<dinterface>" sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>" trandisp=<context> tranip=<dtransaddr> tranport=<dtransport> transip=<stransaddr> transport=<stransport> service=<network_service> proto=<fld70> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface}\" dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=\"%{location_dst}\" srccountry=\"%{location_src}\" trandisp=%{context} tranip=%{dtransaddr} tranport=%{dtransport} transip=%{stransaddr} transport=%{stransport} service=%{network_service} proto=%{fld70} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6}" }
				id => "message-0000000013:07"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:07"
					"[rsa][message][id1]" => "0000000013:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:09
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf="<sinterface>" dstip=<daddr> dstport=<dport> dstintf="<dinterface>" sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>" trandisp=<context> transip=<stransaddr> transport=<stransport> service=<network_service> proto=<fld70> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> vpn=<fld23> vpntype=<fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=\"%{sinterface}\" dstip=%{daddr} dstport=%{dport} dstintf=\"%{dinterface}\" sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=\"%{location_dst}\" srccountry=\"%{location_src}\" trandisp=%{context} transip=%{stransaddr} transport=%{stransport} service=%{network_service} proto=%{fld70} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} vpn=%{fld23} vpntype=%{fld25}" }
				id => "message-0000000013:09"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:09"
					"[rsa][message][id1]" => "0000000013:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> {status=<event_state> user="<username>" group="<group>"|status=<event_state> user="<username>"|status=<event_state>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} {trandisp=<context> tranip=<dtransaddr> tranport=<dtransport>|trandisp=<context> transip=<stransaddr> transport=<stransport>|trandisp=<context>} service=<network_service> proto=<fld70> {app=<obj_name> appcat=<fld8> applist=<fld9> appact=<fld11> duration=<duration>|app=<obj_name> duration=<duration>|duration=<duration>} sentbyte=<sbytes> {rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> identidx=<fld7> utmaction=<action> utmevent=<event_type> attack=<signame>|rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6>|rcvdbyte=<rbytes> sentpkt=<fld5>|rcvdbyte=<rbytes> crscore=<reputation_num> craction=<fld37> crlevel=<fld38>|rcvdbyte=<rbytes>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+(status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|status=(?<event_state>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"|status=(?<event_state>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+(trandisp=(?<context>[^\s]*)[\s]+tranip=(?<dtransaddr>[^\s]*)[\s]+tranport=(?<dtransport>[^\s]*)|trandisp=(?<context>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(app=(?<obj_name>[^\s]*)[\s]+appcat=(?<fld8>[^\s]*)[\s]+applist=(?<fld9>[^\s]*)[\s]+appact=(?<fld11>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|duration=(?<duration>[^\s]*))[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+(rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>[^\s]*)[\s]+identidx=(?<fld7>[^\s]*)[\s]+utmaction=(?<action>[^\s]*)[\s]+utmevent=(?<event_type>[^\s]*)[\s]+attack=(?<signame>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>.*)|rcvdbyte=(?<rbytes>[^\s]*)[\s]+crscore=(?<reputation_num>[^\s]*)[\s]+craction=(?<fld37>[^\s]*)[\s]+crlevel=(?<fld38>.*)|rcvdbyte=(?<rbytes>.*))$" }
				id => "message-0000000013"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013"
					"[rsa][message][id1]" => "0000000013"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:01
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> status=<event_state> {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} trandisp=<context> service=<network_service> proto=<fld70> {app=<obj_name> duration=<duration>|duration=<duration>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+trandisp=(?<context>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>.*)|duration=(?<duration>.*))$" }
				id => "message-0000000013:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:01"
					"[rsa][message][id1]" => "0000000013:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:03
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} {poluuid=<id2> sessionid=<sessionid>|sessionid=<sessionid>} {action=<action> user="<username>" group="<group>"|action=<action> user="<username>"|action=<action>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} trandisp=<context> service=<network_service> proto=<fld70> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld10> {crscore=<reputation_num> craction=<fld37> crlevel=<fld38>|utmaction=<fld12> countapp=<fld13>|utmaction=<fld12> countips=<fld13>|rcvdpkt=<fld11>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+(poluuid=(?<id2>[^\s]*)[\s]+sessionid=(?<sessionid>[^\s]*)|sessionid=(?<sessionid>[^\s]*))[\s]+(action=(?<action>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|action=(?<action>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"|action=(?<action>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+trandisp=(?<context>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld10>[^\s]*)[\s]+(crscore=(?<reputation_num>[^\s]*)[\s]+craction=(?<fld37>[^\s]*)[\s]+crlevel=(?<fld38>.*)|utmaction=(?<fld12>[^\s]*)[\s]+countapp=(?<fld13>.*)|utmaction=(?<fld12>[^\s]*)[\s]+countips=(?<fld13>.*)|rcvdpkt=(?<fld11>.*))$" }
				id => "message-0000000013:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:03"
					"[rsa][message][id1]" => "0000000013:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:12
		# line in RSA: vd=<vsys>,srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",{poluuid=<id2>,sessionid=<sessionid>|sessionid=<sessionid>},proto=<fld70>,action=<action>,policyid=<policy_id>,policytype=<fld26>,dstcountry="<location_dst>",srccountry="<location_src>",{trandisp=<context>,service="<network_service>",appid=<fld12>,app="<obj_name>",appcat="<category>",apprisk=<risk>,applist="<group_object>"|trandisp=<context>,service="<network_service>",appcat="<category>",applist="<group_object>"|trandisp=<context>,service="<network_service>"},duration=<duration>,sentbyte=<sbytes>,rcvdbyte=<rbytes>,{sentpkt=<fld5>,rcvdpkt=<fld6>|sentpkt=<fld5>},{wanin=<fld7>,wanout=<fld8>,lanin=<fld9>,lanout=<fld10>,utmaction=<disposition>,countapp=<fld4>,crscore=<reputation_num>,craction=<fld37>,crlevel=<fld2>|appcat="<category>",crscore=<reputation_num>,craction=<fld37>,crlevel=<fld2>|crscore=<reputation_num>,craction=<fld37>,crlevel=<fld2>|utmaction=<disposition>,countapp=<fld14>|appcat="<category>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^,]*),srcip=(?<saddr>[^,]*),srcport=(?<sport>[^,]*),srcintf=\"(?<sinterface>[^\"]*)\",dstip=(?<daddr>[^,]*),dstport=(?<dport>[^,]*),dstintf=\"(?<dinterface>[^\"]*)\",(poluuid=(?<id2>[^,]*),sessionid=(?<sessionid>[^,]*)|sessionid=(?<sessionid>[^,]*)),proto=(?<fld70>[^,]*),action=(?<action>[^,]*),policyid=(?<policy_id>[^,]*),policytype=(?<fld26>[^,]*),dstcountry=\"(?<location_dst>[^\"]*)\",srccountry=\"(?<location_src>[^\"]*)\",(trandisp=(?<context>[^,]*),service=\"(?<network_service>[^\"]*)\",appid=(?<fld12>[^,]*),app=\"(?<obj_name>[^\"]*)\",appcat=\"(?<category>[^\"]*)\",apprisk=(?<risk>[^,]*),applist=\"(?<group_object>[^\"]*)\"|trandisp=(?<context>[^,]*),service=\"(?<network_service>[^\"]*)\",appcat=\"(?<category>[^\"]*)\",applist=\"(?<group_object>[^\"]*)\"|trandisp=(?<context>[^,]*),service=\"(?<network_service>[^\"]*)\"),duration=(?<duration>[^,]*),sentbyte=(?<sbytes>[^,]*),rcvdbyte=(?<rbytes>[^,]*),(sentpkt=(?<fld5>[^,]*),rcvdpkt=(?<fld6>[^,]*)|sentpkt=(?<fld5>[^,]*)),(wanin=(?<fld7>[^,]*),wanout=(?<fld8>[^,]*),lanin=(?<fld9>[^,]*),lanout=(?<fld10>[^,]*),utmaction=(?<disposition>[^,]*),countapp=(?<fld4>[^,]*),crscore=(?<reputation_num>[^,]*),craction=(?<fld37>[^,]*),crlevel=(?<fld2>.*)|appcat=\"(?<category>[^\"]*)\",crscore=(?<reputation_num>[^,]*),craction=(?<fld37>[^,]*),crlevel=(?<fld2>.*)|crscore=(?<reputation_num>[^,]*),craction=(?<fld37>[^,]*),crlevel=(?<fld2>.*)|utmaction=(?<disposition>[^,]*),countapp=(?<fld14>.*)|appcat=\"(?<category>[^\"]*)\")$" }
				id => "message-0000000013:12"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:12"
					"[rsa][message][id1]" => "0000000013:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:13
		# line in RSA: vd=<vsys>,srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",{poluuid=<id2>,sessionid=<sessionid>|sessionid=<sessionid>},proto=<fld70>,action=<action>,policyid=<policy_id>,policytype=<fld26>,dstcountry="<location_dst>",srccountry="<location_src>",trandisp=<context>,service="<network_service>",{appid=<fld12>,app="<obj_name>",appcat="<category>",apprisk=<risk>,applist="<group_object>"|appcat="<category>",applist="<group_object>"},duration=<duration>,sentbyte=<sbytes>,rcvdbyte=<rbytes>,sentpkt=<fld5>,rcvdpkt=<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^,]*),srcip=(?<saddr>[^,]*),srcport=(?<sport>[^,]*),srcintf=\"(?<sinterface>[^\"]*)\",dstip=(?<daddr>[^,]*),dstport=(?<dport>[^,]*),dstintf=\"(?<dinterface>[^\"]*)\",(poluuid=(?<id2>[^,]*),sessionid=(?<sessionid>[^,]*)|sessionid=(?<sessionid>[^,]*)),proto=(?<fld70>[^,]*),action=(?<action>[^,]*),policyid=(?<policy_id>[^,]*),policytype=(?<fld26>[^,]*),dstcountry=\"(?<location_dst>[^\"]*)\",srccountry=\"(?<location_src>[^\"]*)\",trandisp=(?<context>[^,]*),service=\"(?<network_service>[^\"]*)\",(appid=(?<fld12>[^,]*),app=\"(?<obj_name>[^\"]*)\",appcat=\"(?<category>[^\"]*)\",apprisk=(?<risk>[^,]*),applist=\"(?<group_object>[^\"]*)\"|appcat=\"(?<category>[^\"]*)\",applist=\"(?<group_object>[^\"]*)\"),duration=(?<duration>[^,]*),sentbyte=(?<sbytes>[^,]*),rcvdbyte=(?<rbytes>[^,]*),sentpkt=(?<fld5>[^,]*),rcvdpkt=(?<fld6>.*)$" }
				id => "message-0000000013:13"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:13"
					"[rsa][message][id1]" => "0000000013:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000013:04
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> poluuid=<id2> action=<action> crscore=<reputation_num> craction=<fld37>  crlevel=<fld2> transport=<stransport> transip=<stransaddr>  tranip=<dtransaddr> tranport=<dtransport> applist=<fld14> srcname=<shost> devtype=<fld21> osname=<fld23> osversion=<fld24> unauthuser=<fld25> unauthusersource=<fld26> mastersrcmac=<fld28> srcmac=<fld29> appid=<fld11> app=<fld12> appcat=<fld13> apprisk=<risk> applist=<group_object> appact=<action> utmaction=<disposition> countapp=<fld4> countweb=<fld6> shapersentname=<fld9> shaperdropsentbyte=<sbytes> shaperrcvdname=<fld17> shaperdroprcvdbyte=<fld18> srcssid=<ssid> wanin=<fld18> wanout=<fld19> lanin=<fld20> lanout=<fld21> shaperperipname=<fld19> shaperperipdropbyte=<fld20> user=<username> group=<group> dstname=<dhost> vpn=<fld23> vpntype=<fld25> policytype=<fld26> countips=<fld36> utmevent=<event_type> attack=<signame> hostname=<hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} poluuid=%{id2} action=%{action} crscore=%{reputation_num} craction=%{fld37}  crlevel=%{fld2} transport=%{stransport} transip=%{stransaddr}  tranip=%{dtransaddr} tranport=%{dtransport} applist=%{fld14} srcname=%{shost} devtype=%{fld21} osname=%{fld23} osversion=%{fld24} unauthuser=%{fld25} unauthusersource=%{fld26} mastersrcmac=%{fld28} srcmac=%{fld29} appid=%{fld11} app=%{fld12} appcat=%{fld13} apprisk=%{risk} applist=%{group_object} appact=%{action} utmaction=%{disposition} countapp=%{fld4} countweb=%{fld6} shapersentname=%{fld9} shaperdropsentbyte=%{sbytes} shaperrcvdname=%{fld17} shaperdroprcvdbyte=%{fld18} srcssid=%{ssid} wanin=%{fld18} wanout=%{fld19} lanin=%{fld20} lanout=%{fld21} shaperperipname=%{fld19} shaperperipdropbyte=%{fld20} user=%{username} group=%{group} dstname=%{dhost} vpn=%{fld23} vpntype=%{fld25} policytype=%{fld26} countips=%{fld36} utmevent=%{event_type} attack=%{signame} hostname=%{hostname}" }
				id => "message-0000000013:04"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000013:04"
					"[rsa][message][id1]" => "0000000013:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0000000015" {
		# MESSAGE 0000000015
		# line in RSA: vd=<vsys> {srcip=<saddr> srcport=<sport>|srcip=<saddr>} srcintf="<sinterface>" {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf="<dinterface>" sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>" {trandisp=<context> transip=<stransaddr> transport=<stransport>|trandisp=<context>} service=<network_service> proto=<fld70> {app=<obj_name> duration=<duration>|duration=<duration>} sentbyte=<sbytes> {rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6>|rcvdbyte=<rbytes>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+(srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)|srcip=(?<saddr>[^\s]*))[\s]+srcintf=\"(?<sinterface>[^\"]*)\"[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=\"(?<dinterface>[^\"]*)\"[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+(trandisp=(?<context>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)|trandisp=(?<context>[^\s]*))[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(app=(?<obj_name>[^\s]*)[\s]+duration=(?<duration>[^\s]*)|duration=(?<duration>[^\s]*))[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+(rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld5>[^\s]*)[\s]+rcvdpkt=(?<fld6>.*)|rcvdbyte=(?<rbytes>.*))$" }
				id => "message-0000000015"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000015"
					"[rsa][message][id1]" => "0000000015"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000015:02
		# line in RSA: vd=<vsys>,srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",{poluuid=<id2>,sessionid=<sessionid>|poluuid=<id2>},proto=<fld70>,action=<action>,policyid=<policy_id>,policytype=<fld6>,dstcountry="<location_dst>",srccountry="<location_src>",{trandisp=<context>,transip=<stransaddr>,transport=<stransport>,service="<network_service>"|trandisp=<context>,service="<network_service>"},duration=<duration>,sentbyte=<sbytes>,rcvdbyte=<rbytes>,sentpkt=<fld5>,appcat="<category>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^,]*),srcip=(?<saddr>[^,]*),srcport=(?<sport>[^,]*),srcintf=\"(?<sinterface>[^\"]*)\",dstip=(?<daddr>[^,]*),dstport=(?<dport>[^,]*),dstintf=\"(?<dinterface>[^\"]*)\",(poluuid=(?<id2>[^,]*),sessionid=(?<sessionid>[^,]*)|poluuid=(?<id2>[^,]*)),proto=(?<fld70>[^,]*),action=(?<action>[^,]*),policyid=(?<policy_id>[^,]*),policytype=(?<fld6>[^,]*),dstcountry=\"(?<location_dst>[^\"]*)\",srccountry=\"(?<location_src>[^\"]*)\",(trandisp=(?<context>[^,]*),transip=(?<stransaddr>[^,]*),transport=(?<stransport>[^,]*),service=\"(?<network_service>[^\"]*)\"|trandisp=(?<context>[^,]*),service=\"(?<network_service>[^\"]*)\"),duration=(?<duration>[^,]*),sentbyte=(?<sbytes>[^,]*),rcvdbyte=(?<rbytes>[^,]*),sentpkt=(?<fld5>[^,]*),appcat=\"(?<category>[^\"]*)\"$" }
				id => "message-0000000015:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000015:02"
					"[rsa][message][id1]" => "0000000015:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000015:01
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> poluuid=<id2> action=<action> transport=<stransport> transip=<stransaddr>  tranip=<dtransaddr> tranport=<dtransport> appcat=<category> srcname=<shost> dstname=<dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} poluuid=%{id2} action=%{action} transport=%{stransport} transip=%{stransaddr}  tranip=%{dtransaddr} tranport=%{dtransport} appcat=%{category} srcname=%{shost} dstname=%{dhost}" }
				id => "message-0000000015:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000015:01"
					"[rsa][message][id1]" => "0000000015:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId485
	# line in RSA: {vd=<vsys> logdesc="<info>"|vd=<vsys>} action="<action>" {cpu=<fld1> mem=<fld3>|cpu=<fld1>} totalsession=<fld2> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId485" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+logdesc=\"(?<info>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+action=\"(?<action>[^\"]*)\"[\s]+(cpu=(?<fld1>[^\s]*)[\s]+mem=(?<fld3>[^\s]*)|cpu=(?<fld1>[^\s]*))[\s]+totalsession=(?<fld2>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId485"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId486
	# line in RSA: {vd=<vsys> logdesc="<info>"|vd=<vsys>} status="<event_state>" proto=<fld70> msg="<event_description>" new_status="state=<fld71> tuple-num=<fld72> policyid=<policy_id> identidx=<fld73> dir=<direction> act=<action>hook=<fld74> <saddr>:<sport>-><daddr>:<dport>(<stransaddr>:<stransport>) <fld75>" old_status="<fld76>"
	else if [logstash][msgparser][id] == "msgParserId486" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+logdesc=\"(?<info>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+proto=(?<fld70>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+new_status=\"state=(?<fld71>[^\s]*)[\s]+tuple\-num=(?<fld72>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+identidx=(?<fld73>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+act=(?<action>[^h]*)hook=(?<fld74>[^\s]*)[\s]+(?<saddr>[^:]*):(?<sport>[^\-]*)\->(?<daddr>[^:]*):(?<dport>[^\(]*)\((?<stransaddr>[^:]*):(?<stransport>[^\)]*)\)[\s]+(?<fld75>[^\"]*)\"[\s]+old_status=\"(?<fld76>[^\"]*)\"$" }
			id => "msgParserId486"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId487
	# line in RSA: vd=<vsys> user={"<username>"|<username>} ui={<network_service>(<saddr>)|<network_service>} action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId487" {
		grok {
			match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId487"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId488
	# line in RSA: vd=<vsys> action=<action> reason=<result> log=<fld1> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId488" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} reason=%{result} log=%{fld1} msg=\"%{event_description}\"" }
			id => "msgParserId488"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId489
	# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={<network_service>(<saddr>)|<network_service>} action=<action> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId489" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId489"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0100032400" {
		# MESSAGE 0100032400:01
		# line in RSA: vd={"<vsys>"|<vsys>} logdesc={"<info>"|<info>} user={"<username>"|<username>} ui={<network_service>(<saddr>)|<network_service>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+logdesc=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032400:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032400:01"
					"[rsa][message][id1]" => "0100032400:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032400
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={<network_service>(<saddr>)|<network_service>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032400"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032400"
					"[rsa][message][id1]" => "0100032400"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId492
	# line in RSA: vd={"<vsys>"|<vsys>} msg="<event_description>" to_vcluster={"<fld1>"|<fld1>} vdname={"<fld2>"|<fld2>}
	else if [logstash][msgparser][id] == "msgParserId492" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+to_vcluster=(\"(?<fld1>[^\"]*)\"|(?<fld1>[^\s]*))[\s]+vdname=(\"(?<fld2>[^\"]*)\"|(?<fld2>.*))$" }
			id => "msgParserId492"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId493
	# line in RSA: vd={"<vsys>"|<vsys>} action=<action> status=<event_state> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId493" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId493"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId494
	# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>"|<network_service>} action=<action> cfgtid=<fld1> cfgpath={"<cfg.path>"|<cfg.path>} msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId494" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+cfgtid=(?<fld1>[^\s]*)[\s]+cfgpath=(\"(?<cfg.path>[^\"]*)\"|(?<cfg.path>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId494"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0100044545" {
		# MESSAGE 0100044545
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>"|<network_service>} action=<action> cfgtid=<fld1> cfgpath={"<cfg.path>"|<cfg.path>} cfgobj={"<cfg.obj>"|<cfg.obj>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+cfgtid=(?<fld1>[^\s]*)[\s]+cfgpath=(\"(?<cfg.path>[^\"]*)\"|(?<cfg.path>[^\s]*))[\s]+cfgobj=(\"(?<cfg.obj>[^\"]*)\"|(?<cfg.obj>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100044545"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100044545"
					"[rsa][message][id1]" => "0100044545"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100044545:01
		# line in RSA: vd=<vsys> logdesc=<info> user=<username> ui=<network_service> action=<action> cfgtid=<fld1> cfgpath=<cfg.path> cfgobj=<cfg.obj> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{info} user=%{username} ui=%{network_service} action=%{action} cfgtid=%{fld1} cfgpath=%{cfg.path} cfgobj=%{cfg.obj} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
				id => "message-0100044545:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100044545:01"
					"[rsa][message][id1]" => "0100044545:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0100032003" {
		# MESSAGE 0100032003:01
		# line in RSA: vd="<vsys>" logdesc="<fld5>" sn=<fld1> user={"<username>"|<username>} ui={<network_service>(<saddr>)|<network_service>} action=<action> status=<event_state> duration=<duration> {state="<fld20> reason=<result>|reason=<result>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=\"(?<fld5>[^\"]*)\"[\s]+sn=(?<fld1>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+(state=\"(?<fld20>[^\s]*)[\s]+reason=(?<result>[^\s]*)|reason=(?<result>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032003:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032003:01"
					"[rsa][message][id1]" => "0100032003:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032003
		# line in RSA: {vd="<vsys>" logdesc="<fld5>"|vd="<vsys>"|vd=<vsys>} user={"<username>"|<username>} ui={<network_service>(<saddr>)|<network_service>} action=<action> status=<event_state> duration=<duration> {state="<fld20> reason=<result>|reason=<result>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=\"(?<fld5>[^\"]*)\"|vd=\"(?<vsys>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=((?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+(state=\"(?<fld20>[^\s]*)[\s]+reason=(?<result>[^\s]*)|reason=(?<result>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032003"
				add_field => {
				"event_source" => "%{hdevice}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032003"
					"[rsa][message][id1]" => "0100032003"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032003:02
		# line in RSA: vd=<vsys> logdesc=<info> sn=<serial_number> user=<username> ui=<network_service> method=<fld11> srcip=<saddr> dstip=<daddr> action=<action> status=<event_state> duration=<duration> state=<fld20> reason=<result> cfgtid=<fld1> cfgpath=<cfg.path> cfgobj=<cfg.obj> msg=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=%{info} sn=%{serial_number} user=%{username} ui=%{network_service} method=%{fld11} srcip=%{saddr} dstip=%{daddr} action=%{action} status=%{event_state} duration=%{duration} state=%{fld20} reason=%{result} cfgtid=%{fld1} cfgpath=%{cfg.path} cfgobj=%{cfg.obj} msg=%{event_description}" }
				id => "message-0100032003:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032003:02"
					"[rsa][message][id1]" => "0100032003:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0100044547" {
		# MESSAGE 0100044547:01
		# line in RSA: vd={"<vsys>"|<vsys>} logdesc={"<info>"|<info>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} action=<action> cfgtid=<fld1> cfgpath={"<cfg.path>"|<cfg.path>} cfgobj={"<cfg.obj>"|<cfg.obj>} cfgattr={"<cfg.attr>"|<cfg.attr>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+logdesc=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+cfgtid=(?<fld1>[^\s]*)[\s]+cfgpath=(\"(?<cfg.path>[^\"]*)\"|(?<cfg.path>[^\s]*))[\s]+cfgobj=(\"(?<cfg.obj>[^\"]*)\"|(?<cfg.obj>[^\s]*))[\s]+cfgattr=(\"(?<cfg.attr>[^\"]*)\"|(?<cfg.attr>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100044547:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"ec_subject" => "User"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100044547:01"
					"[rsa][message][id1]" => "0100044547:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100044547
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} action=<action> cfgtid=<fld1> cfgpath={"<cfg.path>"|<cfg.path>} cfgobj={"<cfg.obj>"|<cfg.obj>} cfgattr={"<cfg.attr>"|<cfg.attr>} msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+cfgtid=(?<fld1>[^\s]*)[\s]+cfgpath=(\"(?<cfg.path>[^\"]*)\"|(?<cfg.path>[^\s]*))[\s]+cfgobj=(\"(?<cfg.obj>[^\"]*)\"|(?<cfg.obj>[^\s]*))[\s]+cfgattr=(\"(?<cfg.attr>[^\"]*)\"|(?<cfg.attr>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100044547"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"ec_subject" => "User"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100044547"
					"[rsa][message][id1]" => "0100044547"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0100032001" {
		# MESSAGE 0100032001:01
		# line in RSA: vd={"<vsys>"|<vsys>} logdesc={"<info>"|<info>} sn=<serial_number> user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>(<hostip>) method=<fld1> srcip=<saddr> dstip=<daddr>|<network_service>} action=<action> status=<event_state> reason=<result> profile="<rulename>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+logdesc=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+sn=(?<serial_number>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+method=(?<fld1>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032001:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032001:01"
					"[rsa][message][id1]" => "0100032001:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032001
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} action=<action> status=<event_state> reason=<result> profile="<rulename>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032001"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032001"
					"[rsa][message][id1]" => "0100032001"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0100032002" {
		# MESSAGE 0100032002:02
		# line in RSA: vd={"<vsys>"|<vsys>} logdesc={"<info>"|<info>} sn=<serial_number> user={"<username>"|<username>} ui=<network_service>(<hostip>) action=<action> status=<event_state> srcip=<saddr> dstip=<daddr> reason="<result>" msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+logdesc=(\"(?<info>[^\"]*)\"|(?<info>[^\s]*))[\s]+sn=(?<serial_number>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+reason=\"(?<result>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032002:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032002:02"
					"[rsa][message][id1]" => "0100032002:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032002
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>(<hostip>) method=<fld1> srcip=<saddr> dstip=<daddr>|<network_service>} action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\(]*)\((?<hostip>[^\)]*)\)[\s]+method=(?<fld1>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032002"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032002"
					"[rsa][message][id1]" => "0100032002"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032002:01
		# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description> logdesc=<info> sn=<serial_number> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description} logdesc=%{info} sn=%{serial_number} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
				id => "message-0100032002:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032002:01"
					"[rsa][message][id1]" => "0100032002:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId507
	# line in RSA: vd={"<vsys>"|<vsys>} ui={"<network_service>(<saddr>)"|<network_service>} action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId507" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId507"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId508
	# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId508" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId508"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0100032140" {
		# MESSAGE 0100032140:01
		# line in RSA: vd={"<vsys>"|<vsys>} logdesc="<fld12>" user={"<username>"|<username>} ui={"<network_service>"|<network_service>} field=<fld10> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+logdesc=\"(?<fld12>[^\"]*)\"[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+field=(?<fld10>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032140:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032140:01"
					"[rsa][message][id1]" => "0100032140:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032140
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} field=<fld10> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+field=(?<fld10>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032140"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032140"
					"[rsa][message][id1]" => "0100032140"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0100041000" {
		# MESSAGE 0100041000
		# line in RSA: {vd=<vsys> logdesc=<fld1> status=<event_state>| vd=<vsys> status=<event_state>|status=<event_state>} virdb=<fld3> idsdb=<fld4> libav=<fld5> aven=<fld6> imap=<fld7> smtp=<fld8> pop3=<fld9> http=<fld10> ftp=<fld11> fcni=<fld12> fdni=<fld13> idsmn=<fld14> idssn=<fld15> { msg="<event_description>" | msg=<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+logdesc=(?<fld1>[^\s]*)[\s]+status=(?<event_state>[^\s]*)|[\s]*vd=(?<vsys>[^\s]*)[\s]+status=(?<event_state>[^\s]*)|status=(?<event_state>[^\s]*))[\s]+virdb=(?<fld3>[^\s]*)[\s]+idsdb=(?<fld4>[^\s]*)[\s]+libav=(?<fld5>[^\s]*)[\s]+aven=(?<fld6>[^\s]*)[\s]+imap=(?<fld7>[^\s]*)[\s]+smtp=(?<fld8>[^\s]*)[\s]+pop3=(?<fld9>[^\s]*)[\s]+http=(?<fld10>[^\s]*)[\s]+ftp=(?<fld11>[^\s]*)[\s]+fcni=(?<fld12>[^\s]*)[\s]+fdni=(?<fld13>[^\s]*)[\s]+idsmn=(?<fld14>[^\s]*)[\s]+idssn=(?<fld15>[^\s]*)[\s]+([\s]*msg=\"(?<event_description>[^\"]*)\"[\s]+|[\s]*msg=(?<event_description>.*))$" }
				id => "message-0100041000"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100041000"
					"[rsa][message][id1]" => "0100041000"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100041000:01
		# line in RSA: {vd=<vsys> logdesc=<fld1> status=<event_state>| vd=<vsys> status=<event_state>|status=<event_state>} msg="<event_description> fcni=<fld2> fdni=<fld2> fsci=<fld3> <fld4> from <saddr>:<sport>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+logdesc=(?<fld1>[^\s]*)[\s]+status=(?<event_state>[^\s]*)|[\s]*vd=(?<vsys>[^\s]*)[\s]+status=(?<event_state>[^\s]*)|status=(?<event_state>[^\s]*))[\s]+msg=\"(?<event_description>[^\s]*)[\s]+fcni=(?<fld2>[^\s]*)[\s]+fdni=(?<fld2>[^\s]*)[\s]+fsci=(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>[^\"]*)\"$" }
				id => "message-0100041000:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100041000:01"
					"[rsa][message][id1]" => "0100041000:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100041000:02
		# line in RSA: {vd=<vsys> logdesc=<fld1> status=<event_state>| vd=<vsys> status=<event_state>|status=<event_state>} msg="<event_description> {fcni=<fld2> fdni=<fld2>|fdni=<fld2>} from <saddr>:<sport>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+logdesc=(?<fld1>[^\s]*)[\s]+status=(?<event_state>[^\s]*)|[\s]*vd=(?<vsys>[^\s]*)[\s]+status=(?<event_state>[^\s]*)|status=(?<event_state>[^\s]*))[\s]+msg=\"(?<event_description>[^\s]*)[\s]+(fcni=(?<fld2>[^\s]*)[\s]+fdni=(?<fld2>[^\s]*)|fdni=(?<fld2>[^\s]*))[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>[^\"]*)\"$" }
				id => "message-0100041000:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100041000:02"
					"[rsa][message][id1]" => "0100041000:02"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100041000:03
		# line in RSA: vd=<vsys> logdesc="<info>" status=<event_state> msg="<event_description> fcni=<fld2> fdni=<fld3> fsci=<fld4> from <saddr>-<sport>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} logdesc=\"%{info}\" status=%{event_state} msg=\"%{event_description} fcni=%{fld2} fdni=%{fld3} fsci=%{fld4} from %{saddr}-%{sport}\"" }
				id => "message-0100041000:03"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100041000:03"
					"[rsa][message][id1]" => "0100041000:03"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId515
	# line in RSA: {vd=<vsys> logdesc=<fld5>|vd="<vsys>"|vd=<vsys>} user={"<username>"|<username>} ui={"<network_service>"|<network_service>} action=<action> cfgtid=<fld1> cfgpath={"<cfg.path>"|<cfg.path>} cfgattr={"<cfg.attr>"|<cfg.attr>} msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId515" {
		grok {
			match => { "message" => "^(vd=(?<vsys>[^\s]*)[\s]+logdesc=(?<fld5>[^\s]*)|vd=\"(?<vsys>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\"]*)\"|(?<network_service>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+cfgtid=(?<fld1>[^\s]*)[\s]+cfgpath=(\"(?<cfg.path>[^\"]*)\"|(?<cfg.path>[^\s]*))[\s]+cfgattr=(\"(?<cfg.attr>[^\"]*)\"|(?<cfg.attr>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId515"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId516
	# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId516" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId516"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0100032102" {
		# MESSAGE 0100032102
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} ui={"<network_service>(<saddr>)"|<network_service>} module=<fld10> submodule=<fld11> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+ui=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+module=(?<fld10>[^\s]*)[\s]+submodule=(?<fld11>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032102"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032102"
					"[rsa][message][id1]" => "0100032102"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0100032102:01
		# line in RSA: vd={"<vsys>"|<vsys>} user={"<username>"|<username>} action={"<network_service>(<saddr>)"|<network_service>} status=<fld10> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+action=(\"(?<network_service>[^\(]*)\((?<saddr>[^\)]*)\)\"|(?<network_service>[^\s]*))[\s]+status=(?<fld10>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0100032102:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0100032102:01"
					"[rsa][message][id1]" => "0100032102:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId518
	# line in RSA: vd="<vsys>" action=<action> dstip=<daddr> os=<fld2> {os_family|osfamily}=<fld3> {os_gen|osgen}=<fld4> {os_vendor|osvendor}=<fld5>
	else if [logstash][msgparser][id] == "msgParserId518" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+action=(?<action>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+os=(?<fld2>[^\s]*)[\s]+(os_family|osfamily)=(?<fld3>[^\s]*)[\s]+(os_gen|osgen)=(?<fld4>[^\s]*)[\s]+(os_vendor|osvendor)=(?<fld5>.*)$" }
			id => "msgParserId518"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId519
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> proto=<protocol> dstport=<dport>
	else if [logstash][msgparser][id] == "msgParserId519" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} proto=%{protocol} dstport=%{dport}" }
			id => "msgParserId519"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId520
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> service=<network_service> proto=<protocol> dstport=<dport>
	else if [logstash][msgparser][id] == "msgParserId520" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} service=%{network_service} proto=%{protocol} dstport=%{dport}" }
			id => "msgParserId520"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId521
	# line in RSA: vd="<vsys>" policyid=<policy_id> src=<saddr> dst=<daddr> src_int="<sinterface>" dst_int="<dinterface>" user="<username>" group="<group>" dns_name="<fld1>" dns_ip="<fld2>"
	else if [logstash][msgparser][id] == "msgParserId521" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" policyid=%{policy_id} src=%{saddr} dst=%{daddr} src_int=\"%{sinterface}\" dst_int=\"%{dinterface}\" user=\"%{username}\" group=\"%{group}\" dns_name=\"%{fld1}\" dns_ip=\"%{fld2}\"" }
			id => "msgParserId521"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId522
	# line in RSA: {vd="<vsys>" logdesc="<fld1>"|vd="<vsys>"|vd=<vsys>} {srcip|src}=<saddr> user={"<username>"|<username>} server=<daddr> action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId522" {
		grok {
			match => { "message" => "^(vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=\"(?<fld1>[^\"]*)\"|vd=\"(?<vsys>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+server=(?<daddr>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId522"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId523
	# line in RSA: {vd="<vsys>" logdesc="<fld1>"|vd="<vsys>"|vd=<vsys>} {srcip|src}=<saddr> user={"<username>"|<username>} server=<daddr> action=<action> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId523" {
		grok {
			match => { "message" => "^(vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=\"(?<fld1>[^\"]*)\"|vd=\"(?<vsys>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+server=(?<daddr>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId523"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId524
	# line in RSA: {vd="<vsys>" logdesc="<fld1>"|vd="<vsys>"|vd=<vsys>} {srcip|src}=<saddr> {dstip|dst}=<daddr> policyid=<policy_id> user={"<username>"|<username>} {adgroup="<fld1>" group="<group>"|adgroup="<fld1>"|group="<group>"} {ui=<network_service>|authproto=<fld2>} action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId524" {
		grok {
			match => { "message" => "^(vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=\"(?<fld1>[^\"]*)\"|vd=\"(?<vsys>[^\"]*)\"|vd=(?<vsys>[^\s]*))[\s]+(srcip|src)=(?<saddr>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+(adgroup=\"(?<fld1>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|adgroup=\"(?<fld1>[^\"]*)\"|group=\"(?<group>[^\"]*)\")[\s]+(ui=(?<network_service>[^\s]*)|authproto=(?<fld2>[^\s]*))[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId524"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId525
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user={"<username>"|<username>} {adgroup="<fld1>" group="<group>"|adgroup="<fld1>"|group="<group>"} ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId525" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+(adgroup=\"(?<fld1>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|adgroup=\"(?<fld1>[^\"]*)\"|group=\"(?<group>[^\"]*)\")[\s]+ui=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId525"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0102043009" {
		# MESSAGE 0102043009
		# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user={"<username>"|<username>} {adgroup="<fld1>" group="<group>"|adgroup="<fld1>"|group="<group>"} ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+(adgroup=\"(?<fld1>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|adgroup=\"(?<fld1>[^\"]*)\"|group=\"(?<group>[^\"]*)\")[\s]+ui=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0102043009"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102043009"
					"[rsa][message][id1]" => "0102043009"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102043009:01
		# line in RSA: vd=<vsys> policyid=<policy_id> sessionid=<sessionid> user=<username> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> hostname=<hostname> action=<action> reqtype=<fld18> msg=<event_description> sentbyte=<sbytes> rcvdbyte=<rbytes> logdesc=<fld1> authproto=<protocol> status=<event_state> reason=<result> group=<group> url=<url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} sessionid=%{sessionid} user=%{username} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} hostname=%{hostname} action=%{action} reqtype=%{fld18} msg=%{event_description} sentbyte=%{sbytes} rcvdbyte=%{rbytes} logdesc=%{fld1} authproto=%{protocol} status=%{event_state} reason=%{result} group=%{group} url=%{url}" }
				id => "message-0102043009:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102043009:01"
					"[rsa][message][id1]" => "0102043009:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0102043008" {
		# MESSAGE 0102043008
		# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user={"<username>"|<username>} {adgroup="<fld1>" group="<group>"|adgroup="<fld1>"|group="<group>"} ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+(adgroup=\"(?<fld1>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|adgroup=\"(?<fld1>[^\"]*)\"|group=\"(?<group>[^\"]*)\")[\s]+ui=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0102043008"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102043008"
					"[rsa][message][id1]" => "0102043008"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0102043008:01
		# line in RSA: vd="<vsys>" logdesc="<fld1>" srcip=<saddr> dstip=<daddr> policyid=<policy_id> user={"<username>"|<username>} group={"<group>"|<group>} authproto=<protocol> action=<action> status=<event_state> reason=<result> msg="<event_description>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+logdesc=\"(?<fld1>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+authproto=(?<protocol>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
				id => "message-0102043008:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0102043008:01"
					"[rsa][message][id1]" => "0102043008:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId530
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user=<username> adgroup="<fld1>" group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId530" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} policyid=%{policy_id} user=%{username} adgroup=\"%{fld1}\" group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=\"%{event_description}\"" }
			id => "msgParserId530"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId528
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> policyid=<policy_id> user={"<username>"|<username>} {adgroup="<fld1>" group="<group>"|adgroup="<fld1>"|group="<group>"} ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId528" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+(adgroup=\"(?<fld1>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|adgroup=\"(?<fld1>[^\"]*)\"|group=\"(?<group>[^\"]*)\")[\s]+ui=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId528"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId531
	# line in RSA: vd={"<vsys>"|<vsys>} src=<saddr> dst=<daddr> policyid=<policy_id> user={"<username>"|<username>} {adgroup="<fld1>" group="<group>"|adgroup="<fld1>"|group="<group>"} ui=<network_service> action=<action> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId531" {
		grok {
			match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+(adgroup=\"(?<fld1>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"|adgroup=\"(?<fld1>[^\"]*)\"|group=\"(?<group>[^\"]*)\")[\s]+ui=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+reason=(?<result>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId531"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId532
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> initiator=<fld4> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId532" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} initiator=%{fld4} status=%{event_state} reason=%{result} msg=\"%{event_description}\"" }
			id => "msgParserId532"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId533
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> initiator=<fld4> status=<event_state> reason=<result> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId533" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" src=%{saddr} dst=%{daddr} initiator=%{fld4} status=%{event_state} reason=%{result} msg=\"%{event_description}\"" }
			id => "msgParserId533"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId534
	# line in RSA: vd="<vsys>" src=<saddr> dst=<daddr> src_int="<sinterface>" dst_int="<dinterface>" src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> action=<action> user=<username> group={"<group>"|<group>} policyid=<policy_id> <fld23>
	else if [logstash][msgparser][id] == "msgParserId534" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+src_port=(?<sport>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(?<fld23>.*)$" }
			id => "msgParserId534"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId535
	# line in RSA: vd="<vsys>" dst=<daddr> ui=<network_service> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId535" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" dst=%{daddr} ui=%{network_service} msg=\"%{event_description}\"" }
			id => "msgParserId535"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId536
	# line in RSA: vd="<vsys>" action=<action> status=<event_state> license_limit=<fld1> reason=<result> repeat=<fld8> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId536" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" action=%{action} status=%{event_state} license_limit=%{fld1} reason=%{result} repeat=%{fld8} msg=\"%{event_description}\"" }
			id => "msgParserId536"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0000000008" {
		# MESSAGE 0000000008
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> dstcountry="<location_dst>" srccountry="<location_src>" service=<network_service> wanoptapptype=<fld10> duration=<duration> policyid=<policy_id> {user="<username>" group="<group>" identidx=<fld25> wanin=<fld21>|user="<username>" group=<group> identidx=<fld25> wanin=<fld21>|user="<username>" identidx=<fld25> wanin=<fld21>|identidx=<fld25> wanin=<fld21>|wanin=<fld21>}  wanout=<fld13> lanin=<fld14> lanout=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+service=(?<network_service>[^\s]*)[\s]+wanoptapptype=(?<fld10>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+identidx=(?<fld25>[^\s]*)[\s]+wanin=(?<fld21>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=(?<group>[^\s]*)[\s]+identidx=(?<fld25>[^\s]*)[\s]+wanin=(?<fld21>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+identidx=(?<fld25>[^\s]*)[\s]+wanin=(?<fld21>[^\s]*)|identidx=(?<fld25>[^\s]*)[\s]+wanin=(?<fld21>[^\s]*)|wanin=(?<fld21>[^\s]*))[\s]+wanout=(?<fld13>[^\s]*)[\s]+lanin=(?<fld14>[^\s]*)[\s]+lanout=(?<fld15>.*)$" }
				id => "message-0000000008"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000008"
					"[rsa][message][id1]" => "0000000008"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000008:01
		# line in RSA: vd={"<vsys>"|<vsys>},srcport=<sport>,srcintf=<sinterface>,dstip=<daddr>,dstport=<dport>,dstintf=<dinterface>,service=<network_service>,wanoptapptype=<fld10>,duration=<duration>,policyid=<policy_id>,wanin=<fld21>,wanout=<fld13>,lanin=<fld14>,lanout=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^,]*)),srcport=(?<sport>[^,]*),srcintf=(?<sinterface>[^,]*),dstip=(?<daddr>[^,]*),dstport=(?<dport>[^,]*),dstintf=(?<dinterface>[^,]*),service=(?<network_service>[^,]*),wanoptapptype=(?<fld10>[^,]*),duration=(?<duration>[^,]*),policyid=(?<policy_id>[^,]*),wanin=(?<fld21>[^,]*),wanout=(?<fld13>[^,]*),lanin=(?<fld14>[^,]*),lanout=(?<fld15>.*)$" }
				id => "message-0000000008:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000008:01"
					"[rsa][message][id1]" => "0000000008:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0000000009" {
		# MESSAGE 0000000009
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> dstcountry="<location_dst>" srccountry="<location_src>" service=<network_service> wanoptapptype=<fld10> duration=<duration> policyid=<policy_id> user={"<username>"|<username>} group={"<group>"|<group>} identidx=<fld25> wanin=<fld21> wanout=<fld13> lanin=<fld14> lanout=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+service=(?<network_service>[^\s]*)[\s]+wanoptapptype=(?<fld10>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+identidx=(?<fld25>[^\s]*)[\s]+wanin=(?<fld21>[^\s]*)[\s]+wanout=(?<fld13>[^\s]*)[\s]+lanin=(?<fld14>[^\s]*)[\s]+lanout=(?<fld15>.*)$" }
				id => "message-0000000009"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000009"
					"[rsa][message][id1]" => "0000000009"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000009:01
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> service=<network_service> wanoptapptype=<fld10> proto=<fld70> duration=<duration> policyid=<policy_id> wanin=<fld21> rcvdbyte=<rbytes> wanout=<fld13> lanin=<fld14> sentbyte=<sbytes> lanout=<fld15> appcat=<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} service=%{network_service} wanoptapptype=%{fld10} proto=%{fld70} duration=%{duration} policyid=%{policy_id} wanin=%{fld21} rcvdbyte=%{rbytes} wanout=%{fld13} lanin=%{fld14} sentbyte=%{sbytes} lanout=%{fld15} appcat=%{fld15}" }
				id => "message-0000000009:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000009:01"
					"[rsa][message][id1]" => "0000000009:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "0000000010" {
		# MESSAGE 0000000010
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> dstcountry="<location_dst>" srccountry="<location_src>" service=<network_service> wanoptapptype=<fld10> duration=<duration> policyid=<policy_id> user={"<username>"|<username>} group={"<group>"|<group>} identidx=<fld25> wanin=<fld21> wanout=<fld13> lanin=<fld14> lanout=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(?<sinterface>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)[\s]+dstintf=(?<dinterface>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"[\s]+service=(?<network_service>[^\s]*)[\s]+wanoptapptype=(?<fld10>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+policyid=(?<policy_id>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+identidx=(?<fld25>[^\s]*)[\s]+wanin=(?<fld21>[^\s]*)[\s]+wanout=(?<fld13>[^\s]*)[\s]+lanin=(?<fld14>[^\s]*)[\s]+lanout=(?<fld15>.*)$" }
				id => "message-0000000010"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000010"
					"[rsa][message][id1]" => "0000000010"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000010:01
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> dstcountry=<location_dst> srccountry=<location_src> service=<network_service> wanoptapptype=<fld10> duration=<duration> policyid=<policy_id> wanin=<fld21> rcvdbyte=<rbytes> wanout=<fld13> lanin=<fld14> sentbyte=<sbytes> lanout=<fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} dstcountry=%{location_dst} srccountry=%{location_src} service=%{network_service} wanoptapptype=%{fld10} duration=%{duration} policyid=%{policy_id} wanin=%{fld21} rcvdbyte=%{rbytes} wanout=%{fld13} lanin=%{fld14} sentbyte=%{sbytes} lanout=%{fld15}" }
				id => "message-0000000010:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0000000010:01"
					"[rsa][message][id1]" => "0000000010:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId544
	# line in RSA: vd=<vsys> msg=<event_description> ha_role=<fld1> devintfname=<fld2>
	else if [logstash][msgparser][id] == "msgParserId544" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} ha_role=%{fld1} devintfname=%{fld2}" }
			id => "msgParserId544"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId545
	# line in RSA: vd=<vsys> action=<action> status=<event_state> engine=<component_version> plugin=<content_version>
	else if [logstash][msgparser][id] == "msgParserId545" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} engine=%{component_version} plugin=%{content_version}" }
			id => "msgParserId545"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId546
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> vuln=<fld1> vulncat=<fld2> vulnid=<fld3> vulnref=<fld4> severity=<fld5> vulnscore=<fld6> proto=<protocol> dstport=<dport>
	else if [logstash][msgparser][id] == "msgParserId546" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} vuln=%{fld1} vulncat=%{fld2} vulnid=%{fld3} vulnref=%{fld4} severity=%{fld5} vulnscore=%{fld6} proto=%{protocol} dstport=%{dport}" }
			id => "msgParserId546"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId547
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> method=<fld3> assetid=<fld4> assetname=<fld5>
	else if [logstash][msgparser][id] == "msgParserId547" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} method=%{fld3} assetid=%{fld4} assetname=%{fld5}" }
			id => "msgParserId547"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0814044032" {
		# MESSAGE 0814044032
		# line in RSA: vd="<vsys>" {sessionid|session_id}=<fld4> epoch=<fld5> {eventid|event_id}=<fld6> {src|scrip}=<saddr> {srcport|src_port}=<sport> {dstip|dst}=<daddr> {dst_port|dstport}=<dport> proto=<fld70> {srcintf|src_int}="<sinterface>" {dstintf|dst_int}="<dinterface>" {policyid|policy_id}=<policy_id> user="<username>" group="<group>" profile="<rulename>" voip_proto=<fld1> kind=<fld2> action=<action> status=<event_state> duration=<duration> dir=<direction> from=<from> to=<to>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+(sessionid|session_id)=(?<fld4>[^\s]*)[\s]+epoch=(?<fld5>[^\s]*)[\s]+(eventid|event_id)=(?<fld6>[^\s]*)[\s]+(src|scrip)=(?<saddr>[^\s]*)[\s]+(srcport|src_port)=(?<sport>[^\s]*)[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dst_port|dstport)=(?<dport>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+(srcintf|src_int)=\"(?<sinterface>[^\"]*)\"[\s]+(dstintf|dst_int)=\"(?<dinterface>[^\"]*)\"[\s]+(policyid|policy_id)=(?<policy_id>[^\s]*)[\s]+user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"[\s]+voip_proto=(?<fld1>[^\s]*)[\s]+kind=(?<fld2>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+dir=(?<direction>[^\s]*)[\s]+from=(?<from>[^\s]*)[\s]+to=(?<to>.*)$" }
				id => "message-0814044032"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0814044032"
					"[rsa][message][id1]" => "0814044032"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0814044032:01
		# line in RSA: vd={"<vsys>"|<vsys>} {eventtime=<event_time_string> session_id=<fld4>|logtime=<event_time_string> session_id=<fld4>|session_id=<fld4>} epoch=<fld5> event_id=<fld6> srcip=<saddr> src_port=<sport> dstip=<daddr> dst_port=<dport> proto=<fld70> src_int="<sinterface>" dst_int="<dinterface>" policy_id=<policy_id> profile={"<rulename>"|<rulename>} voip_proto=<fld1> kind=<fld2> action={"<action>"|<action>} status={"<event_state>"|<event_state>} duration=<duration> dir={"<direction>"|<direction>} call_id={"<id>"|<id>} from={"<from>"|<from>} to={"<to>"|<to>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+(eventtime=(?<event_time_string>[^\s]*)[\s]+session_id=(?<fld4>[^\s]*)|logtime=(?<event_time_string>[^\s]*)[\s]+session_id=(?<fld4>[^\s]*)|session_id=(?<fld4>[^\s]*))[\s]+epoch=(?<fld5>[^\s]*)[\s]+event_id=(?<fld6>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+src_port=(?<sport>[^\s]*)[\s]+dstip=(?<daddr>[^\s]*)[\s]+dst_port=(?<dport>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+src_int=\"(?<sinterface>[^\"]*)\"[\s]+dst_int=\"(?<dinterface>[^\"]*)\"[\s]+policy_id=(?<policy_id>[^\s]*)[\s]+profile=(\"(?<rulename>[^\"]*)\"|(?<rulename>[^\s]*))[\s]+voip_proto=(?<fld1>[^\s]*)[\s]+kind=(?<fld2>[^\s]*)[\s]+action=(\"(?<action>[^\"]*)\"|(?<action>[^\s]*))[\s]+status=(\"(?<event_state>[^\"]*)\"|(?<event_state>[^\s]*))[\s]+duration=(?<duration>[^\s]*)[\s]+dir=(\"(?<direction>[^\"]*)\"|(?<direction>[^\s]*))[\s]+call_id=(\"(?<id>[^\"]*)\"|(?<id>[^\s]*))[\s]+from=(\"(?<from>[^\"]*)\"|(?<from>[^\s]*))[\s]+to=(\"(?<to>[^\"]*)\"|(?<to>.*))$" }
				id => "message-0814044032:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0814044032:01"
					"[rsa][message][id1]" => "0814044032:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId556
	# line in RSA: vd="<vsys>" {dst=<daddr> ui|ui}=<network_service> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId556" {
		grok {
			match => { "message" => "^vd=\"(?<vsys>[^\"]*)\"[\s]+(dst=(?<daddr>[^\s]*)[\s]+ui|ui)=(?<network_service>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId556"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId557
	# line in RSA: vd="<vsys>" <msg> status=<event_state>
	else if [logstash][msgparser][id] == "msgParserId557" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" %{msg} status=%{event_state}" }
			id => "msgParserId557"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0002000012" {
		# MESSAGE 0002000012
		# line in RSA: vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> srcintf={"<sinterface>"|<sinterface>} {dstip=<daddr> dstport=<dport>|dstip=<daddr>} dstintf={"<dinterface>"|<dinterface>} sessionid=<sessionid> status=<event_state> user={"<username>"|<username>} group={"<group>"|<group>} {policyid=<policy_id> dstcountry="<location_dst>" srccountry="<location_src>"|policyid=<policy_id>} trandisp=<context> tranip=<dtransaddr> tranport=<dtransport> transip=<stransaddr> transport=<stransport> service=<network_service> proto=<fld70> appid=<fld11> app=<fld12> appcat=<fld13> applist=<fld14> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld15> rcvdpkt=<fld16> vpn=<fld18> <fld21>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(?<vsys>[^\s]*)[\s]+srcip=(?<saddr>[^\s]*)[\s]+srcname=(?<shost>[^\s]*)[\s]+srcport=(?<sport>[^\s]*)[\s]+srcintf=(\"(?<sinterface>[^\"]*)\"|(?<sinterface>[^\s]*))[\s]+(dstip=(?<daddr>[^\s]*)[\s]+dstport=(?<dport>[^\s]*)|dstip=(?<daddr>[^\s]*))[\s]+dstintf=(\"(?<dinterface>[^\"]*)\"|(?<dinterface>[^\s]*))[\s]+sessionid=(?<sessionid>[^\s]*)[\s]+status=(?<event_state>[^\s]*)[\s]+user=(\"(?<username>[^\"]*)\"|(?<username>[^\s]*))[\s]+group=(\"(?<group>[^\"]*)\"|(?<group>[^\s]*))[\s]+(policyid=(?<policy_id>[^\s]*)[\s]+dstcountry=\"(?<location_dst>[^\"]*)\"[\s]+srccountry=\"(?<location_src>[^\"]*)\"|policyid=(?<policy_id>[^\s]*))[\s]+trandisp=(?<context>[^\s]*)[\s]+tranip=(?<dtransaddr>[^\s]*)[\s]+tranport=(?<dtransport>[^\s]*)[\s]+transip=(?<stransaddr>[^\s]*)[\s]+transport=(?<stransport>[^\s]*)[\s]+service=(?<network_service>[^\s]*)[\s]+proto=(?<fld70>[^\s]*)[\s]+appid=(?<fld11>[^\s]*)[\s]+app=(?<fld12>[^\s]*)[\s]+appcat=(?<fld13>[^\s]*)[\s]+applist=(?<fld14>[^\s]*)[\s]+duration=(?<duration>[^\s]*)[\s]+sentbyte=(?<sbytes>[^\s]*)[\s]+rcvdbyte=(?<rbytes>[^\s]*)[\s]+sentpkt=(?<fld15>[^\s]*)[\s]+rcvdpkt=(?<fld16>[^\s]*)[\s]+vpn=(?<fld18>[^\s]*)[\s]+(?<fld21>.*)$" }
				id => "message-0002000012"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0002000012"
					"[rsa][message][id1]" => "0002000012"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0002000012:01
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> dstssid=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} dstssid=%{fld7}" }
				id => "message-0002000012:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0002000012:01"
					"[rsa][message][id1]" => "0002000012:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId561
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> assignip=<stransaddr> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> msg=<event_description> action=<action> remip=<daddr> locip=<saddr> remport=<dport> locport=<sport> outintf=<fld7> cookies=<fld8> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> init=<fld12> mode=<scheme> dir=<direction> stage=<fld13> role=<fld14> result=<result> phase2_name=<fld15> xauth_user=<c_username> enc_spi=<fld17> dec_spi=<fld18> error_reason=<fld19> peer_notif=<fld20> in_spi=<fld21> out_spi=<src_spi> esptransform=<fld22> espauth=<fld23> tunneltype=<scheme> tunnel_id=<fld24> remote_ip=<daddr> tunnel_ip=<fld25> dst_host=<dhost> reason=<fld26> duration=<duration> sent=<sbytes> rcvd=<rbytes> logdesc=<fld27> tunnelip=<peer> tunnelid=<connectionid> nextstat=<fld30> sentbyte=<sbytes> rcvdbyte=<rbytes> exch=<fld31> version=<fld32>
	else if [logstash][msgparser][id] == "msgParserId561" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} assignip=%{stransaddr} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} msg=%{event_description} action=%{action} remip=%{daddr} locip=%{saddr} remport=%{dport} locport=%{sport} outintf=%{fld7} cookies=%{fld8} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} init=%{fld12} mode=%{scheme} dir=%{direction} stage=%{fld13} role=%{fld14} result=%{result} phase2_name=%{fld15} xauth_user=%{c_username} enc_spi=%{fld17} dec_spi=%{fld18} error_reason=%{fld19} peer_notif=%{fld20} in_spi=%{fld21} out_spi=%{src_spi} esptransform=%{fld22} espauth=%{fld23} tunneltype=%{scheme} tunnel_id=%{fld24} remote_ip=%{daddr} tunnel_ip=%{fld25} dst_host=%{dhost} reason=%{fld26} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} logdesc=%{fld27} tunnelip=%{peer} tunnelid=%{connectionid} nextstat=%{fld30} sentbyte=%{sbytes} rcvdbyte=%{rbytes} exch=%{fld31} version=%{fld32}" }
			id => "msgParserId561"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "event_system" {
		# MESSAGE event_system
		# line in RSA: level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<protocol> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> src=<saddr> srcname=<saddr> src_port=<sport> dst=<daddr> dst_country=<location_dst> dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> tran_sip=<fld5> tran_sport=<fld15> app_type=<obj_type> rule=<rule> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> vpn_type=<fld23> vpn_tunnel=<fld24> src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> app=<obj_name> app_cat=<fld25> user=<username> group=<group> msg=<event_description> carrier_ep=<fld26> profilegroup=<rule_group> conserve=<fld27> free=<fld27> red=<fld28> action=<action> fwver=<fld13> ui=<network_service> count=<fld26> green=<fld15> process=<process> reason=<result> gateway=<fld14> interface=<interface> mode=<scheme> sysconserve=<fld15> total=<fld12> entermargin=<fld16> exitmargin=<fld11> file=<filename> size=<fld7> daemon=<fld28> pid=<fld18> cpu=<fld27> mem=<fld10> totalsession=<fld11> log=<fld12> cfgtid=<fld26> logdesc=<info> community=<fld21> port=<sport> version=<version> field=<content_type> banned_src=<fld32> banned_rule=<fld33> sensor=<sensor>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{protocol} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} src=%{saddr} srcname=%{saddr} src_port=%{sport} dst=%{daddr} dst_country=%{location_dst} dst_port=%{dport} tran_ip=%{stransaddr} tran_port=%{stransport} tran_sip=%{fld5} tran_sport=%{fld15} app_type=%{obj_type} rule=%{rule} sent=%{sbytes} rcvd=%{rbytes} shaper_drop_sent=%{fld16} shaper_drop_rcvd=%{fld17} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_name=%{fld21} vpn=%{fld22} vpn_type=%{fld23} vpn_tunnel=%{fld24} src_int=%{sinterface} dst_int=%{dinterface} SN=%{serial_number} app=%{obj_name} app_cat=%{fld25} user=%{username} group=%{group} msg=%{event_description} carrier_ep=%{fld26} profilegroup=%{rule_group} conserve=%{fld27} free=%{fld27} red=%{fld28} action=%{action} fwver=%{fld13} ui=%{network_service} count=%{fld26} green=%{fld15} process=%{process} reason=%{result} gateway=%{fld14} interface=%{interface} mode=%{scheme} sysconserve=%{fld15} total=%{fld12} entermargin=%{fld16} exitmargin=%{fld11} file=%{filename} size=%{fld7} daemon=%{fld28} pid=%{fld18} cpu=%{fld27} mem=%{fld10} totalsession=%{fld11} log=%{fld12} cfgtid=%{fld26} logdesc=%{info} community=%{fld21} port=%{sport} version=%{version} field=%{content_type} banned_src=%{fld32} banned_rule=%{fld33} sensor=%{sensor}" }
				id => "message-event_system"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
					"[event][id]" => "event_system"
					"[rsa][message][id1]" => "event_system"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_system:01
		# line in RSA: level=<severity> pri=<severity> vd=<vsys> status=<event_state> to_vcluster=<fld1> vdname=<fld2> user=<username> ui=<network_service> action=<action> msg=<event_description> proto=<protocol> new_status=<event_state> tuple-num=<fld4> act=<action> identidx=<id> dir=<direction> hook=<fld5> to_vcluster=<fld6> vdname=<fld7> cfgtid=<fld8> cfgpath=<cfg.path> cfgobj=<cfg.obj> old_status=<fld11> duration=<duration> state=<fld12> reason=<result> profile=<rulename> field=<fld13> module=<fld14> submodule=<fld15> ha_role=<fld16> devintfname=<fld17> cfgattr=<cfg.attr> virdb=<fld19> idsdb=<fld20> libav=<fld21> aven=<fld22> imap=<fld23> smtp=<fld24> pop3=<fld25> http=<fld26> ftp=<fld27> fcni=<fld28> fdni=<fld29> idsmn=<fld30> idssn=<fld31> src=<saddr> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> src_port=<sport> dst_port=<dport> service=<network_service> group=<group> policyid=<policy_id> banned_src=<fld32> banned_rule=<fld33> sensor=<sensor> license_limit=<fld34> repeat=<fld35> hostname=<hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} status=%{event_state} to_vcluster=%{fld1} vdname=%{fld2} user=%{username} ui=%{network_service} action=%{action} msg=%{event_description} proto=%{protocol} new_status=%{event_state} tuple-num=%{fld4} act=%{action} identidx=%{id} dir=%{direction} hook=%{fld5} to_vcluster=%{fld6} vdname=%{fld7} cfgtid=%{fld8} cfgpath=%{cfg.path} cfgobj=%{cfg.obj} old_status=%{fld11} duration=%{duration} state=%{fld12} reason=%{result} profile=%{rulename} field=%{fld13} module=%{fld14} submodule=%{fld15} ha_role=%{fld16} devintfname=%{fld17} cfgattr=%{cfg.attr} virdb=%{fld19} idsdb=%{fld20} libav=%{fld21} aven=%{fld22} imap=%{fld23} smtp=%{fld24} pop3=%{fld25} http=%{fld26} ftp=%{fld27} fcni=%{fld28} fdni=%{fld29} idsmn=%{fld30} idssn=%{fld31} src=%{saddr} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} src_port=%{sport} dst_port=%{dport} service=%{network_service} group=%{group} policyid=%{policy_id} banned_src=%{fld32} banned_rule=%{fld33} sensor=%{sensor} license_limit=%{fld34} repeat=%{fld35} hostname=%{hostname}" }
				id => "message-event_system:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
					"[event][id]" => "event_system:01"
					"[rsa][message][id1]" => "event_system:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "event_admin" {
		# MESSAGE event_admin
		# line in RSA: level=<severity> pri=<severity> vd=<vsys> SN=<serial_number> duration=<duration> rule=<rule> policyid=<policy_id> proto=<protocol> service=<network_service> app_type=<obj_type> status=<event_state> src=<saddr> srcname=<saddr> dst=<daddr> src_int=<sinterface> dstname=<dhost> src_int=<sinterface> dst_int=<dinterface> sent=<sbytes> rcvd=<rbytes> sent_pkt=<fld3> rcvd_pkt=<fld4> src_port=<sport> dst_port=<dport> vpn=<fld22> tran_ip=<stransaddr> tran_port=<stransport> dir_disp=<fld5> tran_disp=<fld6> user=<username> ui=<network_service> seq=<fld7> old_device=<fld8> old_distance=<fld9> old_priority=<fld10> old_dst=<fld11> old_status=<fld12> old_flags=<fld13> new_device=<fld14> new_distance=<fld15> new_priority=<fld16> new_dst=<fld17> new_status=<event_state> new_flags=<fld18> msg=<event_description> action=<action> reason=<result> profile=<rulename> field=<fld55> old=<fld19> new=<fld20> name=<fld21> sintf=<sinterface> dintf=<dinterface> saddr=<saddr> daddr=<daddr> schd=<fld27> svr=<fld28> act=<action> nat=<fld29> log=<fld89> signal=<fld23> len=<fld24> data=<fld25> index=<fld26> file=<filename> server=<daddr> port=<port> error=<resultcode> file=<filename> id=<fld22> conserve=<fld31> total=<fld12> free=<fld32> entermargin=<fld45> exitmargin=<fld51> loc_ip=<saddr> loc_port=<sport> rem_ip=<daddr> rem_port=<dport> out_if=<sinterface> vpn_tunnel=<fld17> spi=<fld41> seqno=<fld42>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} SN=%{serial_number} duration=%{duration} rule=%{rule} policyid=%{policy_id} proto=%{protocol} service=%{network_service} app_type=%{obj_type} status=%{event_state} src=%{saddr} srcname=%{saddr} dst=%{daddr} src_int=%{sinterface} dstname=%{dhost} src_int=%{sinterface} dst_int=%{dinterface} sent=%{sbytes} rcvd=%{rbytes} sent_pkt=%{fld3} rcvd_pkt=%{fld4} src_port=%{sport} dst_port=%{dport} vpn=%{fld22} tran_ip=%{stransaddr} tran_port=%{stransport} dir_disp=%{fld5} tran_disp=%{fld6} user=%{username} ui=%{network_service} seq=%{fld7} old_device=%{fld8} old_distance=%{fld9} old_priority=%{fld10} old_dst=%{fld11} old_status=%{fld12} old_flags=%{fld13} new_device=%{fld14} new_distance=%{fld15} new_priority=%{fld16} new_dst=%{fld17} new_status=%{event_state} new_flags=%{fld18} msg=%{event_description} action=%{action} reason=%{result} profile=%{rulename} field=%{fld55} old=%{fld19} new=%{fld20} name=%{fld21} sintf=%{sinterface} dintf=%{dinterface} saddr=%{saddr} daddr=%{daddr} schd=%{fld27} svr=%{fld28} act=%{action} nat=%{fld29} log=%{fld89} signal=%{fld23} len=%{fld24} data=%{fld25} index=%{fld26} file=%{filename} server=%{daddr} port=%{port} error=%{resultcode} file=%{filename} id=%{fld22} conserve=%{fld31} total=%{fld12} free=%{fld32} entermargin=%{fld45} exitmargin=%{fld51} loc_ip=%{saddr} loc_port=%{sport} rem_ip=%{daddr} rem_port=%{dport} out_if=%{sinterface} vpn_tunnel=%{fld17} spi=%{fld41} seqno=%{fld42}" }
				id => "message-event_admin"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
					"[event][id]" => "event_admin"
					"[rsa][message][id1]" => "event_admin"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_admin:01
		# line in RSA: level=<severity> pri=<severity> vd=<vsys> dhcp_msg=<context> dir=<direction> mac=<smacaddr> ip=<hostip> lease=<duration_string> msg=<event_description> user=<username> local=<sport> remote=<daddr> assigned=<hostip> stat=<fld16> gateway_ip=<fld4> assigned_ip=<hostip> ui=<network_service> module=<fld2> submodule=<fld19> status=<event_state> intf=<interface> name=<fld4> phase1name=<fld15> field=<fld5> old=<fld20> new=<fld6> seq=<fld13> device=<fld32> distance=<fld36> dst=<daddr> old_dintf=<fld37> old_saddr=<fld38> old_daddr=<fld39> old_schd=<fld40> old_svr=<fld41> old_act=<fld42> result=<result> code=<fld21> cmdb_obj=<fld20> action=<action> iff=<fld8> ipproto=<fld24> ports=<fld25> off=<fld10> hostname=<hostname> port=<port> mtu=<fld3> virdb=<fld7> idsdb=<fld8> libav=<fld9> aven=<fld11> imap=<fld12> smtp=<fld29> pop3=<fld30> http=<fld31> ftp=<fld4> fcni=<fld34> fdni=<fld35> idsmn=<fld5> idssn=<fld6> old_sintf=<fld4> old_nat=<fld5> old_log=<fld6> new_schd=<fld12> new_svr=<fld13> new_nat=<fld15> new_log=<fld16> new_act=<action> new_sintf=<sinterface> new_dintf=<dinterface> new_saddr=<saddr> new_daddr=<daddr> old_status=<fld12> new_status=<event_state> passwd=<fld5> old_value=<fld8> new_value=<fld9> remote-gw=<daddr> fwver=<fld13> reason=<result> old_server=<fld2> new_server=<daddr> secret=<fld12> old_port=<fld27> old_cn=<fld21> old_dn=<fld24> new_port=<dport> email-pattern=<fld41> pattern=<fld17> upload=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} dhcp_msg=%{context} dir=%{direction} mac=%{smacaddr} ip=%{hostip} lease=%{duration_string} msg=%{event_description} user=%{username} local=%{sport} remote=%{daddr} assigned=%{hostip} stat=%{fld16} gateway_ip=%{fld4} assigned_ip=%{hostip} ui=%{network_service} module=%{fld2} submodule=%{fld19} status=%{event_state} intf=%{interface} name=%{fld4} phase1name=%{fld15} field=%{fld5} old=%{fld20} new=%{fld6} seq=%{fld13} device=%{fld32} distance=%{fld36} dst=%{daddr} old_dintf=%{fld37} old_saddr=%{fld38} old_daddr=%{fld39} old_schd=%{fld40} old_svr=%{fld41} old_act=%{fld42} result=%{result} code=%{fld21} cmdb_obj=%{fld20} action=%{action} iff=%{fld8} ipproto=%{fld24} ports=%{fld25} off=%{fld10} hostname=%{hostname} port=%{port} mtu=%{fld3} virdb=%{fld7} idsdb=%{fld8} libav=%{fld9} aven=%{fld11} imap=%{fld12} smtp=%{fld29} pop3=%{fld30} http=%{fld31} ftp=%{fld4} fcni=%{fld34} fdni=%{fld35} idsmn=%{fld5} idssn=%{fld6} old_sintf=%{fld4} old_nat=%{fld5} old_log=%{fld6} new_schd=%{fld12} new_svr=%{fld13} new_nat=%{fld15} new_log=%{fld16} new_act=%{action} new_sintf=%{sinterface} new_dintf=%{dinterface} new_saddr=%{saddr} new_daddr=%{daddr} old_status=%{fld12} new_status=%{event_state} passwd=%{fld5} old_value=%{fld8} new_value=%{fld9} remote-gw=%{daddr} fwver=%{fld13} reason=%{result} old_server=%{fld2} new_server=%{daddr} secret=%{fld12} old_port=%{fld27} old_cn=%{fld21} old_dn=%{fld24} new_port=%{dport} email-pattern=%{fld41} pattern=%{fld17} upload=%{fld7}" }
				id => "message-event_admin:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
					"[event][id]" => "event_admin:01"
					"[rsa][message][id1]" => "event_admin:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE event_admin:02
		# line in RSA: level=<severity> pri=<severity> vd=<vsys> user=<username> ui=<network_service> upload=<fld17> num=<fld18> msg=<event_description> ip=<hostip> ha-prio=<fld9> fwver=<fld13> seq=<fld13> sintf=<sinterface> dintf=<dinterface> saddr=<saddr> daddr=<daddr> act=<action> nat=<fld5> iptype=<fld15> schd=<fld11> svr=<fld10> url=<url> device=<fld32> distance=<fld36> priority=<fld20> dst=<daddr> status=<event_state> flags=<fld6> log=<fld29> idbased=<fld3> action=<action> reason=<result> profile=<rulename> id=<fld22> attack_id=<sigid> src=<saddr> src_port=<sport> dst_port=<dport> interface=<interface> src_int=<sinterface> dst_int=<dinterface> proto=<protocol> service=<network_service> srcport=<sport> dstport=<dport> hostname=<hostname> cat_desc=<filter> cat=<fld5> iff=<fld78> ipproto=<fld44> ports=<fld40> off=<fld30> gw=<fld26>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} user=%{username} ui=%{network_service} upload=%{fld17} num=%{fld18} msg=%{event_description} ip=%{hostip} ha-prio=%{fld9} fwver=%{fld13} seq=%{fld13} sintf=%{sinterface} dintf=%{dinterface} saddr=%{saddr} daddr=%{daddr} act=%{action} nat=%{fld5} iptype=%{fld15} schd=%{fld11} svr=%{fld10} url=%{url} device=%{fld32} distance=%{fld36} priority=%{fld20} dst=%{daddr} status=%{event_state} flags=%{fld6} log=%{fld29} idbased=%{fld3} action=%{action} reason=%{result} profile=%{rulename} id=%{fld22} attack_id=%{sigid} src=%{saddr} src_port=%{sport} dst_port=%{dport} interface=%{interface} src_int=%{sinterface} dst_int=%{dinterface} proto=%{protocol} service=%{network_service} srcport=%{sport} dstport=%{dport} hostname=%{hostname} cat_desc=%{filter} cat=%{fld5} iff=%{fld78} ipproto=%{fld44} ports=%{fld40} off=%{fld30} gw=%{fld26}" }
				id => "message-event_admin:02"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
					"[event][id]" => "event_admin:02"
					"[rsa][message][id1]" => "event_admin:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId567
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> user=<username> src=<saddr> server=<daddr> action=<action> msg=<event_description> dst=<daddr> group=<group> ui=<network_service> status=<event_state> reason=<result> proto=<protocol> policyid=<policy_id> adgroup=<group> srcname=<shost> dstname=<dhost> fwver=<fld13> ipproto=<fld84> service=<network_service> initiator=<fld83> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52>  scope=<fld13> scope_data=<fld23>
	else if [logstash][msgparser][id] == "msgParserId567" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} user=%{username} src=%{saddr} server=%{daddr} action=%{action} msg=%{event_description} dst=%{daddr} group=%{group} ui=%{network_service} status=%{event_state} reason=%{result} proto=%{protocol} policyid=%{policy_id} adgroup=%{group} srcname=%{shost} dstname=%{dhost} fwver=%{fld13} ipproto=%{fld84} service=%{network_service} initiator=%{fld83} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52}  scope=%{fld13} scope_data=%{fld23}" }
			id => "msgParserId567"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId568
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> user=<username> msg=<event_description> local=<sport> remote=<daddr> assigned=<hostip> action=<action>
	else if [logstash][msgparser][id] == "msgParserId568" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} user=%{username} msg=%{event_description} local=%{sport} remote=%{daddr} assigned=%{hostip} action=%{action}" }
			id => "msgParserId568"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId569
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld1> status=<event_state> reason=<result> scope=<fld2> scope_data=<fld3> rule_type=<fld4> rule_data=<fld5> offsite=<fld6> expiry=<fld7> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld8> dns_ip=<fld9> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> logdesc=<fld10> srcip=<saddr> dstip=<daddr> authproto=<fld11>
	else if [logstash][msgparser][id] == "msgParserId569" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld1} status=%{event_state} reason=%{result} scope=%{fld2} scope_data=%{fld3} rule_type=%{fld4} rule_data=%{fld5} offsite=%{fld6} expiry=%{fld7} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld8} dns_ip=%{fld9} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} logdesc=%{fld10} srcip=%{saddr} dstip=%{daddr} authproto=%{fld11}" }
			id => "msgParserId569"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId570
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> user=<username> msg=<event_description> loc_ip=<saddr> rem_ip=<daddr> assigned=<hostip> action=<action> rem_port=<dport> loc_port=<sport> out_intf=<sinterface> cookies=<fld25> group=<group> xauth_user=<c_username> xauth_group=<group> vpn_tunnel=<fld17> status=<event_state> error_num=<resultcode> spi=<src_spi> out_if=<sinterface> seq=<fld21> init=<fld3> mode=<scheme> stage=<fld4> dir=<direction> xauth_result=<fld18> fwver=<fld17> role=<fld18> result=<result> error_reason=<fld16> peer_notif=<fld17> enc_spi=<fld6> dec_spi=<fld7> out_spi=<src_spi> in_spi=<fld5> tunnel_id=<fld12> tunnel_id=<fld11> tunnel_type=<scheme> duration=<duration> sent=<sbytes> rcvd=<rbytes> next_stat=<fld8> tunnel=<fld9> phase2_name=<fld16> esp_transform=<fld9> esp_auth=<fld10>
	else if [logstash][msgparser][id] == "msgParserId570" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} user=%{username} msg=%{event_description} loc_ip=%{saddr} rem_ip=%{daddr} assigned=%{hostip} action=%{action} rem_port=%{dport} loc_port=%{sport} out_intf=%{sinterface} cookies=%{fld25} group=%{group} xauth_user=%{c_username} xauth_group=%{group} vpn_tunnel=%{fld17} status=%{event_state} error_num=%{resultcode} spi=%{src_spi} out_if=%{sinterface} seq=%{fld21} init=%{fld3} mode=%{scheme} stage=%{fld4} dir=%{direction} xauth_result=%{fld18} fwver=%{fld17} role=%{fld18} result=%{result} error_reason=%{fld16} peer_notif=%{fld17} enc_spi=%{fld6} dec_spi=%{fld7} out_spi=%{src_spi} in_spi=%{fld5} tunnel_id=%{fld12} tunnel_id=%{fld11} tunnel_type=%{scheme} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} next_stat=%{fld8} tunnel=%{fld9} phase2_name=%{fld16} esp_transform=%{fld9} esp_auth=%{fld10}" }
			id => "msgParserId570"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId571
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> user=<username> msg=<event_description> loc_ip=<saddr> rem_ip=<daddr> assigned=<hostip> action=<action> rem_port=<dport> loc_port=<sport> out_intf=<sinterface> cookies=<fld25> group=<group> xauth_user=<c_username> xauth_group=<group> vpn_tunnel=<fld17> status=<event_state> error_num=<resultcode> spi=<src_spi> out_if=<sinterface> seq=<fld21> init=<fld3> mode=<scheme> stage=<fld4> dir=<direction> xauth_result=<fld18> fwver=<fld17> role=<fld18> result=<result> error_reason=<fld16> peer_notif=<fld17> enc_spi=<fld6> dec_spi=<fld7> out_spi=<src_spi> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> app-type=<obj_type> alert=<fld2> desc=<fld31> duration=<duration> sent=<sbytes> rcvd=<rbytes> ui=<network_service> reason=<result> tunnel_ip=<fld5>
	else if [logstash][msgparser][id] == "msgParserId571" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} user=%{username} msg=%{event_description} loc_ip=%{saddr} rem_ip=%{daddr} assigned=%{hostip} action=%{action} rem_port=%{dport} loc_port=%{sport} out_intf=%{sinterface} cookies=%{fld25} group=%{group} xauth_user=%{c_username} xauth_group=%{group} vpn_tunnel=%{fld17} status=%{event_state} error_num=%{resultcode} spi=%{src_spi} out_if=%{sinterface} seq=%{fld21} init=%{fld3} mode=%{scheme} stage=%{fld4} dir=%{direction} xauth_result=%{fld18} fwver=%{fld17} role=%{fld18} result=%{result} error_reason=%{fld16} peer_notif=%{fld17} enc_spi=%{fld6} dec_spi=%{fld7} out_spi=%{src_spi} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} app-type=%{obj_type} alert=%{fld2} desc=%{fld31} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} ui=%{network_service} reason=%{result} tunnel_ip=%{fld5}" }
			id => "msgParserId571"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId572
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> logdesc=<info> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> vcluster=<fld3> ha_group=<fld4> ha_role=<fld68> hbdn_reason=<fld4> devintfname=<fld33> vcluster_state=<fld6> vcluster_member=<fld7> hostname=<hostname> sn=<fld8> sync_type=<application> sync_status=<result> xauth_user=<c_username>
	else if [logstash][msgparser][id] == "msgParserId572" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} logdesc=%{info} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} vcluster=%{fld3} ha_group=%{fld4} ha_role=%{fld68} hbdn_reason=%{fld4} devintfname=%{fld33} vcluster_state=%{fld6} vcluster_member=%{fld7} hostname=%{hostname} sn=%{fld8} sync_type=%{application} sync_status=%{result} xauth_user=%{c_username}" }
			id => "msgParserId572"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId573
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld3> tunnel_ip=<fld5>
	else if [logstash][msgparser][id] == "msgParserId573" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld3} tunnel_ip=%{fld5}" }
			id => "msgParserId573"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId574
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> fwver=<fld13> virdb=<fld7> idsdb=<fld8> libav=<fld9> aven=<fld11> imap=<fld12> smtp=<fld29> pop3=<fld30> http=<fld31> ftp=<fld32> fcni=<fld34> fdni=<fld35> idsmn=<fld36> idssn=<fld6>
	else if [logstash][msgparser][id] == "msgParserId574" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} fwver=%{fld13} virdb=%{fld7} idsdb=%{fld8} libav=%{fld9} aven=%{fld11} imap=%{fld12} smtp=%{fld29} pop3=%{fld30} http=%{fld31} ftp=%{fld32} fcni=%{fld34} fdni=%{fld35} idsmn=%{fld36} idssn=%{fld6}" }
			id => "msgParserId574"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId575
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group>
	else if [logstash][msgparser][id] == "msgParserId575" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group}" }
			id => "msgParserId575"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId576
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> fwver=<fld13> dhcp_msg=<context> dir=<direction> mac=<smacaddr> ip=<hostip> lease=<duration_string> hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId576" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} fwver=%{fld13} dhcp_msg=%{context} dir=%{direction} mac=%{smacaddr} ip=%{hostip} lease=%{duration_string} hostname=%{hostname}" }
			id => "msgParserId576"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId577
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> server-admin-status=<event_state> fwver=<fld17> vip=<fld3> port=<port>
	else if [logstash][msgparser][id] == "msgParserId577" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} server-admin-status=%{event_state} fwver=%{fld17} vip=%{fld3} port=%{port}" }
			id => "msgParserId577"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId578
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> cpu=<fld27> mem=<fld90> total_session=<fld3>
	else if [logstash][msgparser][id] == "msgParserId578" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} cpu=%{fld27} mem=%{fld90} total_session=%{fld3}" }
			id => "msgParserId578"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId579
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> fwver=<fld13> bssid=<bssid> ssid=<ssid> rate=<fld21> channel=<fld6> sn=<fld8> ap=<fld4> mac=<smacaddr> security=<fld9> sent=<sbytes> rcvd=<rbytes> vap=<fld3>
	else if [logstash][msgparser][id] == "msgParserId579" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} fwver=%{fld13} bssid=%{bssid} ssid=%{ssid} rate=%{fld21} channel=%{fld6} sn=%{fld8} ap=%{fld4} mac=%{smacaddr} security=%{fld9} sent=%{sbytes} rcvd=%{rbytes} vap=%{fld3}" }
			id => "msgParserId579"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId580
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> cfg_tid=<fld4> cfg_path=<fld5> cfg_obj=<fld6> cfg_attr=<fld7>
	else if [logstash][msgparser][id] == "msgParserId580" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} cfg_tid=%{fld4} cfg_path=%{fld5} cfg_obj=%{fld6} cfg_attr=%{fld7}" }
			id => "msgParserId580"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId581
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor>
	else if [logstash][msgparser][id] == "msgParserId581" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor}" }
			id => "msgParserId581"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId582
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> interface=<interface> dhcp_msg=<context> dir=<direction> mac=<smacaddr> ip=<hostip> lease=<duration_string> hostname=<hostname> total=<fld12> used=<fld1>
	else if [logstash][msgparser][id] == "msgParserId582" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} interface=%{interface} dhcp_msg=%{context} dir=%{direction} mac=%{smacaddr} ip=%{hostip} lease=%{duration_string} hostname=%{hostname} total=%{fld12} used=%{fld1}" }
			id => "msgParserId582"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId583
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dstname=<dhost> srcname=<fld39> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> transip=<stransaddr> transport=<stransport> appid=<fld7> app=<obj_name> appcat=<fld8> applist=<fld9> appact=<fld11> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld12> rcvdpkt=<fld16> wanoptapptype=<fld17> identidx=<id> wanin=<fld18> wanout=<fld19> lanin=<fld20> lanout=<fld21> crscore=<reputation_num> craction=<fld43> crlevel=<fld44> poluuid=<id2>
	else if [logstash][msgparser][id] == "msgParserId583" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dstname=%{dhost} srcname=%{fld39} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} transip=%{stransaddr} transport=%{stransport} appid=%{fld7} app=%{obj_name} appcat=%{fld8} applist=%{fld9} appact=%{fld11} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld12} rcvdpkt=%{fld16} wanoptapptype=%{fld17} identidx=%{id} wanin=%{fld18} wanout=%{fld19} lanin=%{fld20} lanout=%{fld21} crscore=%{reputation_num} craction=%{fld43} crlevel=%{fld44} poluuid=%{id2}" }
			id => "msgParserId583"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId584
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dstname=<dhost> srcname=<fld3> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> crscore=<reputation_num> craction=<fld56> crlevel=<fld16>
	else if [logstash][msgparser][id] == "msgParserId584" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dstname=%{dhost} srcname=%{fld3} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} crscore=%{reputation_num} craction=%{fld56} crlevel=%{fld16}" }
			id => "msgParserId584"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId585
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> status=<event_state> user=<username> group=<group> policyid=<policy_id> dstcountry=<location_dst> trandisp=<context> tranip=<dtransaddr> tranport=<dtransport> service=<network_service> proto=<fld70> appid=<fld7> app=<obj_name> applist=<group_object> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sessionid=<sessionid> srccountry=<location_src> transip=<stransaddr> transport=<stransport> appcat=<fld4> sentpkt=<fld12> rcvdpkt=<fld16> vpn=<fld22> shapersentname=<fld9> shaperdropsentbyte=<sbytes> shaperrcvdname=<fld17> shaperdroprcvdbyte=<fld18> shaperperipname=<fld19> shaperperipdropbyte=<fld20> devtype=<fld21> osname=<fld23> osversion=<fld24> unauthuser=<fld25> unauthusersource=<fld26> collectedemail=<fld27> mastersrcmac=<fld28> srcmac=<fld29>
	else if [logstash][msgparser][id] == "msgParserId585" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} status=%{event_state} user=%{username} group=%{group} policyid=%{policy_id} dstcountry=%{location_dst} trandisp=%{context} tranip=%{dtransaddr} tranport=%{dtransport} service=%{network_service} proto=%{fld70} appid=%{fld7} app=%{obj_name} applist=%{group_object} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sessionid=%{sessionid} srccountry=%{location_src} transip=%{stransaddr} transport=%{stransport} appcat=%{fld4} sentpkt=%{fld12} rcvdpkt=%{fld16} vpn=%{fld22} shapersentname=%{fld9} shaperdropsentbyte=%{sbytes} shaperrcvdname=%{fld17} shaperdroprcvdbyte=%{fld18} shaperperipname=%{fld19} shaperperipdropbyte=%{fld20} devtype=%{fld21} osname=%{fld23} osversion=%{fld24} unauthuser=%{fld25} unauthusersource=%{fld26} collectedemail=%{fld27} mastersrcmac=%{fld28} srcmac=%{fld29}" }
			id => "msgParserId585"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId586
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> src_port=<sport> src_int=<sinterface> dst=<daddr> dst_port=<dport> dst_int=<dinterface> SN=<serial_number> status=<event_state> policyid=<policy_id> dst_country=<location_dst> src_country=<location_src> tran_sip=<fld5> tran_sport=<fld15> service=<network_service> proto=<fld70> duration=<duration> sent=<sbytes> rcvd=<rbytes> msg=<event_description> dir_disp=<fld7> tran_disp=<fld6> sent_pkt=<fld3> rcvd_pkt=<fld4> srcname=<shost> dstname=<dhost> tran_ip=<stransaddr> tran_port=<stransport> app_type=<obj_type> rule=<rule> shaper_drop_rcvd=<fld10> shaper_sent_name=<fld19> perip_name=<fld14> vpn_type=<fld24> app=<obj_name> app_cat=<fld25> user=<username> group=<group> profilegroup=<rule_group> carrier_ep=<fld26> shaper_drop_sent=<fld16> perip_drop=<fld18> shaper_rcvd_name=<fld20> vpn=<fld22> vpn_tunnel=<fld17> identidx=<id>
	else if [logstash][msgparser][id] == "msgParserId586" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} src_port=%{sport} src_int=%{sinterface} dst=%{daddr} dst_port=%{dport} dst_int=%{dinterface} SN=%{serial_number} status=%{event_state} policyid=%{policy_id} dst_country=%{location_dst} src_country=%{location_src} tran_sip=%{fld5} tran_sport=%{fld15} service=%{network_service} proto=%{fld70} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} msg=%{event_description} dir_disp=%{fld7} tran_disp=%{fld6} sent_pkt=%{fld3} rcvd_pkt=%{fld4} srcname=%{shost} dstname=%{dhost} tran_ip=%{stransaddr} tran_port=%{stransport} app_type=%{obj_type} rule=%{rule} shaper_drop_rcvd=%{fld10} shaper_sent_name=%{fld19} perip_name=%{fld14} vpn_type=%{fld24} app=%{obj_name} app_cat=%{fld25} user=%{username} group=%{group} profilegroup=%{rule_group} carrier_ep=%{fld26} shaper_drop_sent=%{fld16} perip_drop=%{fld18} shaper_rcvd_name=%{fld20} vpn=%{fld22} vpn_tunnel=%{fld17} identidx=%{id}" }
			id => "msgParserId586"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId587
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> SN=<serial_number> sent=<sbytes> rcvd=<rbytes> identidx=<id> fwver=<fld13> srcname=<saddr> dstname=<dhost> app_type=<obj_type> rule=<rule> vpn=<fld22> carrier_ep=<fld12> tran_ip=<stransaddr> tran_port=<stransport>
	else if [logstash][msgparser][id] == "msgParserId587" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} SN=%{serial_number} sent=%{sbytes} rcvd=%{rbytes} identidx=%{id} fwver=%{fld13} srcname=%{saddr} dstname=%{dhost} app_type=%{obj_type} rule=%{rule} vpn=%{fld22} carrier_ep=%{fld12} tran_ip=%{stransaddr} tran_port=%{stransport}" }
			id => "msgParserId587"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId588
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> SN=<serial_number> dir_disp=<fld7> tran_disp=<fld8> sent=<sbytes> rcvd=<rbytes> sent_pkt=<fld9> rcvd_pkt=<fld11> identidx=<id> fwver=<fld13> srcname=<saddr> dstname=<dhost> tran_ip=<stransaddr> tran_port=<stransport> app_type=<obj_type> rule=<rule> vpn=<fld22> carrier_ep=<fld12>
	else if [logstash][msgparser][id] == "msgParserId588" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} SN=%{serial_number} dir_disp=%{fld7} tran_disp=%{fld8} sent=%{sbytes} rcvd=%{rbytes} sent_pkt=%{fld9} rcvd_pkt=%{fld11} identidx=%{id} fwver=%{fld13} srcname=%{saddr} dstname=%{dhost} tran_ip=%{stransaddr} tran_port=%{stransport} app_type=%{obj_type} rule=%{rule} vpn=%{fld22} carrier_ep=%{fld12}" }
			id => "msgParserId588"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId589
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> SN=<serial_number> srcname=<shost> dstname=<dhost> sent=<sbytes> rcvd=<rbytes> sent_pkt=<fld8> rcvd_pkt=<fld11> tran_ip=<stransaddr> tran_port=<stransport> vpn=<fld18>
	else if [logstash][msgparser][id] == "msgParserId589" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} SN=%{serial_number} srcname=%{shost} dstname=%{dhost} sent=%{sbytes} rcvd=%{rbytes} sent_pkt=%{fld8} rcvd_pkt=%{fld11} tran_ip=%{stransaddr} tran_port=%{stransport} vpn=%{fld18}" }
			id => "msgParserId589"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId590
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> srcname=<saddr> dstname=<dhost> wanopt_app_type=<fld7> rule=<rule> identidx=<id> wan_in=<fld9> wan_out=<fld12> lan_in=<fld17> lan_out=<fld19>
	else if [logstash][msgparser][id] == "msgParserId590" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} srcname=%{saddr} dstname=%{dhost} wanopt_app_type=%{fld7} rule=%{rule} identidx=%{id} wan_in=%{fld9} wan_out=%{fld12} lan_in=%{fld17} lan_out=%{fld19}" }
			id => "msgParserId590"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId591
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> srcname=<shost> dstname=<dhost> src_country=<location_src> dst_country=<location_dst>  wanopt_app_type=<fld12> rule=<rule> identidx=<id> wan_in=<fld17> wan_out=<fld19> lan_in=<fld21> lan_out=<fld24>
	else if [logstash][msgparser][id] == "msgParserId591" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} srcname=%{shost} dstname=%{dhost} src_country=%{location_src} dst_country=%{location_dst}  wanopt_app_type=%{fld12} rule=%{rule} identidx=%{id} wan_in=%{fld17} wan_out=%{fld19} lan_in=%{fld21} lan_out=%{fld24}" }
			id => "msgParserId591"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId592
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> xauth_user=<c_username> quotatype=<fld1> quotaused=<fld2> quotamax=<fld18> keyword=<fld20> direction=<direction> agent=<fld27> crscore=<reputation_num> crlevel=<fld38> referralurl=<fld39>
	else if [logstash][msgparser][id] == "msgParserId592" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} xauth_user=%{c_username} quotatype=%{fld1} quotaused=%{fld2} quotamax=%{fld18} keyword=%{fld20} direction=%{direction} agent=%{fld27} crscore=%{reputation_num} crlevel=%{fld38} referralurl=%{fld39}" }
			id => "msgParserId592"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId593
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> assetid=<fld22> assetname=<fld24> vuln=<fld21> vulncat=<fld22> vulnid=<fld24> vulnref=<fld25> severity=<risk> vulnscore=<fld26> engine=<fld20> plugin=<fld21> os=<fld18> osfamily=<fld19> osgen=<fld27> osvendor=<fld28>
	else if [logstash][msgparser][id] == "msgParserId593" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} assetid=%{fld22} assetname=%{fld24} vuln=%{fld21} vulncat=%{fld22} vulnid=%{fld24} vulnref=%{fld25} severity=%{risk} vulnscore=%{fld26} engine=%{fld20} plugin=%{fld21} os=%{fld18} osfamily=%{fld19} osgen=%{fld27} osvendor=%{fld28}" }
			id => "msgParserId593"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId594
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> kind=<fld24> direction=<direction> srcuser=<shost> dstuser=<dhost> applist=<group_object> apptype=<obj_type> from=<from> to=<to> tracker=<fld19> attackid=<sigid> dstname=<dhost> count=<dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId594" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} kind=%{fld24} direction=%{direction} srcuser=%{shost} dstuser=%{dhost} applist=%{group_object} apptype=%{obj_type} from=%{from} to=%{to} tracker=%{fld19} attackid=%{sigid} dstname=%{dhost} count=%{dclass_counter1}" }
			id => "msgParserId594"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId595
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> from=<from> to=<to> tracker=<fld19>
	else if [logstash][msgparser][id] == "msgParserId595" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} from=%{from} to=%{to} tracker=%{fld19}" }
			id => "msgParserId595"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId596
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> session_id=<fld18> epoch=<fld19> event_id=<fld20> policy_id=<fld21> voip_proto=<fld22> kind=<fld24> dir=<direction> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId596" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} session_id=%{fld18} epoch=%{fld19} event_id=%{fld20} policy_id=%{fld21} voip_proto=%{fld22} kind=%{fld24} dir=%{direction} from=%{from} to=%{to}" }
			id => "msgParserId596"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId597
	# line in RSA: eventtype=<vendor_event_cat> level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<fld70> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> severity=<risk> count=<fld26> attackname=<signame> attackid=<sigid> ref=<info> incidentserialno=<fld20>
	else if [logstash][msgparser][id] == "msgParserId597" {
		dissect {
			mapping => { "message" => "eventtype=%{vendor_event_cat} level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{fld70} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} severity=%{risk} count=%{fld26} attackname=%{signame} attackid=%{sigid} ref=%{info} incidentserialno=%{fld20}" }
			id => "msgParserId597"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId598
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> direction=<fld19> filefilter=<fld20> filetype=<fld21> file=<filename> quarskip=<result> virus=<virusname> dtype=<fld18> ref=<info> analyticssubmit=<fld22>
	else if [logstash][msgparser][id] == "msgParserId598" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} direction=%{fld19} filefilter=%{fld20} filetype=%{fld21} file=%{filename} quarskip=%{result} virus=%{virusname} dtype=%{fld18} ref=%{info} analyticssubmit=%{fld22}" }
			id => "msgParserId598"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId599
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> filteridx=<fld18> filtertype=<fld19> epoch=<fld20> eventid=<fld21> filetype=<fld22>
	else if [logstash][msgparser][id] == "msgParserId599" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} filteridx=%{fld18} filtertype=%{fld19} epoch=%{fld20} eventid=%{fld21} filetype=%{fld22}" }
			id => "msgParserId599"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId600
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> serial=<fld18> sport=<sport> dport=<dport> from=<from> to=<to> carrier_ep=<fld26> profilegroup=<rule_group> tracker=<fld19>
	else if [logstash][msgparser][id] == "msgParserId600" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} serial=%{fld18} sport=%{sport} dport=%{dport} from=%{from} to=%{to} carrier_ep=%{fld26} profilegroup=%{rule_group} tracker=%{fld19}" }
			id => "msgParserId600"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId601
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> serial=<fld18> sport=<sport> dport=<dport> from=<from> to=<to> virus=<virusname> carrier_ep=<fld26> profilegroup=<rule_group> tracker=<fld19> sent=<sbytes> rcvd=<rbytes> subject=<fld20> size=<fld11> cc=<fld21> attachment=<fld22>
	else if [logstash][msgparser][id] == "msgParserId601" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} serial=%{fld18} sport=%{sport} dport=%{dport} from=%{from} to=%{to} virus=%{virusname} carrier_ep=%{fld26} profilegroup=%{rule_group} tracker=%{fld19} sent=%{sbytes} rcvd=%{rbytes} subject=%{fld20} size=%{fld11} cc=%{fld21} attachment=%{fld22}" }
			id => "msgParserId601"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId602
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> src_port=<sport> dst_port=<dport> proto=<protocol> service=<network_service> banned_src=<fld3> banned_rule=<fld93> sensor=<sensor> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> eventtype=<vendor_event_cat> identidx=<id> hostname=<hostname> profiletype=<fld8> profile=<rulename> reqtype=<fld9> url=<url> method=<fld11> class=<fld12> cat=<fld16> catdesc=<fld17> serial=<fld18> sport=<sport> dport=<dport> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId602" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} src_port=%{sport} dst_port=%{dport} proto=%{protocol} service=%{network_service} banned_src=%{fld3} banned_rule=%{fld93} sensor=%{sensor} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} eventtype=%{vendor_event_cat} identidx=%{id} hostname=%{hostname} profiletype=%{fld8} profile=%{rulename} reqtype=%{fld9} url=%{url} method=%{fld11} class=%{fld12} cat=%{fld16} catdesc=%{fld17} serial=%{fld18} sport=%{sport} dport=%{dport} from=%{from} to=%{to}" }
			id => "msgParserId602"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId603
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> serial=<fld4> sport=<sport> dport=<dport> service=<network_service> from=<from> to=<to> file=<filename> virus=<virusname> ref=<info> url=<url> src_port=<sport> dst_port=<dport> identidx=<id> dir=<direction> checksum=<checksum> quarskip=<result> dtype=<fld6> carrier_ep=<fld26> profile=<rulename> profiletype=<rule_template> profilegroup=<rule_group> agent=<fld7> src_port=<sport> dst_port=<dport> identidx=<id> checksum=<checksum> quarskip=<result> dtype=<fld6> carrier_ep=<fld26> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename>
	else if [logstash][msgparser][id] == "msgParserId603" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} serial=%{fld4} sport=%{sport} dport=%{dport} service=%{network_service} from=%{from} to=%{to} file=%{filename} virus=%{virusname} ref=%{info} url=%{url} src_port=%{sport} dst_port=%{dport} identidx=%{id} dir=%{direction} checksum=%{checksum} quarskip=%{result} dtype=%{fld6} carrier_ep=%{fld26} profile=%{rulename} profiletype=%{rule_template} profilegroup=%{rule_group} agent=%{fld7} src_port=%{sport} dst_port=%{dport} identidx=%{id} checksum=%{checksum} quarskip=%{result} dtype=%{fld6} carrier_ep=%{fld26} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename}" }
			id => "msgParserId603"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId604
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> serial=<fld18> sport=<sport> dport=<dport> service=<network_service> from=<from> to=<to> ref=<info> file=<filename> url=<url> from=<from> to=<to> virus=<virusname> src_port=<sport> dst_port=<dport> identidx=<id> carrier_ep=<fld26> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> agent=<fld7> endpoint=<fld4>
	else if [logstash][msgparser][id] == "msgParserId604" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} serial=%{fld18} sport=%{sport} dport=%{dport} service=%{network_service} from=%{from} to=%{to} ref=%{info} file=%{filename} url=%{url} from=%{from} to=%{to} virus=%{virusname} src_port=%{sport} dst_port=%{dport} identidx=%{id} carrier_ep=%{fld26} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} agent=%{fld7} endpoint=%{fld4}" }
			id => "msgParserId604"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId605
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> serial=<fld18> sport=<sport> dport=<dport> filefilter=<fld4> service=<network_service> file=<filename> url=<url> ref=<info> from=<from> to=<to> virus=<virusname> service=<network_service> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> identidx=<id> serial=<fld18> dir=<direction> file=<filename> checksum=<checksum> quarskip=<result> virus=<virusname> dtype=<fld6> ref=<info> url=<url> carrier_ep=<fld26> profile=<rulename> profiletype=<rule_template> profilegroup=<rule_group> agent=<fld7> from=<from> to=<to> command=<action> filetype=<fld21>
	else if [logstash][msgparser][id] == "msgParserId605" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} serial=%{fld18} sport=%{sport} dport=%{dport} filefilter=%{fld4} service=%{network_service} file=%{filename} url=%{url} ref=%{info} from=%{from} to=%{to} virus=%{virusname} service=%{network_service} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} identidx=%{id} serial=%{fld18} dir=%{direction} file=%{filename} checksum=%{checksum} quarskip=%{result} virus=%{virusname} dtype=%{fld6} ref=%{info} url=%{url} carrier_ep=%{fld26} profile=%{rulename} profiletype=%{rule_template} profilegroup=%{rule_group} agent=%{fld7} from=%{from} to=%{to} command=%{action} filetype=%{fld21}" }
			id => "msgParserId605"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId606
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> service=<network_service> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> identidx=<id> serial=<fld18> dir=<direction> file=<filename> checksum=<checksum> quarskip=<result> virus=<virusname> dtype=<fld6> ref=<info> url=<url> carrier_ep=<fld26> profile=<rulename> profiletype=<rule_template> profilegroup=<rule_group> agent=<fld7> from=<from> to=<to> endpoint=<fld4>
	else if [logstash][msgparser][id] == "msgParserId606" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} service=%{network_service} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} identidx=%{id} serial=%{fld18} dir=%{direction} file=%{filename} checksum=%{checksum} quarskip=%{result} virus=%{virusname} dtype=%{fld6} ref=%{info} url=%{url} carrier_ep=%{fld26} profile=%{rulename} profiletype=%{rule_template} profilegroup=%{rule_group} agent=%{fld7} from=%{from} to=%{to} endpoint=%{fld4}" }
			id => "msgParserId606"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId607
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> serial=<fld18> attack_id=<sigid> severity=<risk> icmp_id=<fld6> icmp_type=<icmptype> icmp_code=<icmpcode> proto=<fld70> service=<network_service> ref=<info> count=<fld26>  carrier_ep=<fld12> profilegroup=<rule_group> profiletype=<rule_template> profile=<rulename> identidx=<id> sensor=<sensor> incident_serialno=<fld5> src_port=<sport> dst_port=<dport>
	else if [logstash][msgparser][id] == "msgParserId607" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} serial=%{fld18} attack_id=%{sigid} severity=%{risk} icmp_id=%{fld6} icmp_type=%{icmptype} icmp_code=%{icmpcode} proto=%{fld70} service=%{network_service} ref=%{info} count=%{fld26}  carrier_ep=%{fld12} profilegroup=%{rule_group} profiletype=%{rule_template} profile=%{rulename} identidx=%{id} sensor=%{sensor} incident_serialno=%{fld5} src_port=%{sport} dst_port=%{dport}" }
			id => "msgParserId607"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId608
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> severity=<risk> carrier_ep=<fld26> profilegroup=<rule_group> profiletype=<rule_template> profile=<rulename> identidx=<id> serial=<fld18> proto=<fld70> service=<network_service> count=<fld5> src_port=<sport> dst_port=<dport> attack_id=<sigid> sensor=<sensor> ref=<info> icmp_id=<fld4> icmp_type=<icmptype> icmp_code=<icmpcode> id=<fld22>
	else if [logstash][msgparser][id] == "msgParserId608" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} severity=%{risk} carrier_ep=%{fld26} profilegroup=%{rule_group} profiletype=%{rule_template} profile=%{rulename} identidx=%{id} serial=%{fld18} proto=%{fld70} service=%{network_service} count=%{fld5} src_port=%{sport} dst_port=%{dport} attack_id=%{sigid} sensor=%{sensor} ref=%{info} icmp_id=%{fld4} icmp_type=%{icmptype} icmp_code=%{icmpcode} id=%{fld22}" }
			id => "msgParserId608"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId609
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> severity=<risk> carrier_ep=<fld26> profilegroup=<rule_group> profiletype=<rule_template> profile=<rulename> identidx=<id> serial=<fld18> proto=<fld70> service=<network_service> count=<fld5> src_port=<sport> dst_port=<dport> attack_id=<sigid> sensor=<sensor> ref=<info> icmp_id=<fld4> icmp_type=<icmptype> icmp_code=<icmpcode>
	else if [logstash][msgparser][id] == "msgParserId609" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} severity=%{risk} carrier_ep=%{fld26} profilegroup=%{rule_group} profiletype=%{rule_template} profile=%{rulename} identidx=%{id} serial=%{fld18} proto=%{fld70} service=%{network_service} count=%{fld5} src_port=%{sport} dst_port=%{dport} attack_id=%{sigid} sensor=%{sensor} ref=%{info} icmp_id=%{fld4} icmp_type=%{icmptype} icmp_code=%{icmpcode}" }
			id => "msgParserId609"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId610
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> error=<resultcode> carrier_ep=<fld26> method=<fld11> class=<fld12> class_desc=<fld7> cat=<fld16> cat_desc=<filter>
	else if [logstash][msgparser][id] == "msgParserId610" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} error=%{resultcode} carrier_ep=%{fld26} method=%{fld11} class=%{fld12} class_desc=%{fld7} cat=%{fld16} cat_desc=%{filter}" }
			id => "msgParserId610"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId611
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> method=<fld11> class=<fld12> class_desc=<fld7> cat=<fld16> cat_desc=<filter> mode=<scheme> id=<fld22>
	else if [logstash][msgparser][id] == "msgParserId611" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} method=%{fld11} class=%{fld12} class_desc=%{fld7} cat=%{fld16} cat_desc=%{filter} mode=%{scheme} id=%{fld22}" }
			id => "msgParserId611"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId612
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> method=<fld11> class=<fld12> class_desc=<fld7> cat=<fld16> cat_desc=<filter> mode=<scheme> id=<fld22> error=<resultcode>
	else if [logstash][msgparser][id] == "msgParserId612" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} method=%{fld11} class=%{fld12} class_desc=%{fld7} cat=%{fld16} cat_desc=%{filter} mode=%{scheme} id=%{fld22} error=%{resultcode}" }
			id => "msgParserId612"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId613
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> method=<fld11> class=<fld12> class_desc=<fld7>
	else if [logstash][msgparser][id] == "msgParserId613" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} method=%{fld11} class=%{fld12} class_desc=%{fld7}" }
			id => "msgParserId613"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId614
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> method=<fld11> class=<fld12> class_desc=<fld7> cat=<fld16> cat_desc=<filter>
	else if [logstash][msgparser][id] == "msgParserId614" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} method=%{fld11} class=%{fld12} class_desc=%{fld7} cat=%{fld16} cat_desc=%{filter}" }
			id => "msgParserId614"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId615
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> proto=<protocol> kind=<fld7> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> SN=<serial_number> repeat=<fld8>
	else if [logstash][msgparser][id] == "msgParserId615" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} proto=%{protocol} kind=%{fld7} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} SN=%{serial_number} repeat=%{fld8}" }
			id => "msgParserId615"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId616
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> proto=<protocol> kind=<fld7> req=<fld9> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId616" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} proto=%{protocol} kind=%{fld7} req=%{fld9} from=%{from} to=%{to}" }
			id => "msgParserId616"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId617
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> src_name=<shost> dst_name=<dhost> proto=<fld70> app_list=<group_object> app_type=<obj_type> app=<obj_name> count=<fld26> filename=<filename> filesize=<filename_size> req=<fld9> content=<fld24> phone=<fld11> request=<fld12> attack_id=<sigid>
	else if [logstash][msgparser][id] == "msgParserId617" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} src_name=%{shost} dst_name=%{dhost} proto=%{fld70} app_list=%{group_object} app_type=%{obj_type} app=%{obj_name} count=%{fld26} filename=%{filename} filesize=%{filename_size} req=%{fld9} content=%{fld24} phone=%{fld11} request=%{fld12} attack_id=%{sigid}" }
			id => "msgParserId617"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId618
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> src_name=<shost> dst_name=<dhost> proto=<protocol> app_list=<group_object> app_type=<obj_type> app=<obj_name> count=<fld26> filename=<filename> filesize=<filename_size> req=<fld9> content=<fld24> phone=<fld11> request=<fld12> attack_id=<sigid> from=<from> to=<to> rulename=<fld7> compoundname=<fld8> severity=<risk>
	else if [logstash][msgparser][id] == "msgParserId618" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} src_name=%{shost} dst_name=%{dhost} proto=%{protocol} app_list=%{group_object} app_type=%{obj_type} app=%{obj_name} count=%{fld26} filename=%{filename} filesize=%{filename_size} req=%{fld9} content=%{fld24} phone=%{fld11} request=%{fld12} attack_id=%{sigid} from=%{from} to=%{to} rulename=%{fld7} compoundname=%{fld8} severity=%{risk}" }
			id => "msgParserId618"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId619
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> src_name=<shost> dst_name=<dhost> proto=<protocol> app_list=<group_object> app_type=<obj_type> app=<obj_name> count=<fld26> filename=<filename> filesize=<filename_size> req=<fld9> content=<fld24> phone=<fld11> request=<fld12> attack_id=<sigid> from=<from> to=<to> rulename=<fld7> compoundname=<fld8> severity=<risk> start=<fld15> end=<fld16> engine=<fld20> plugin=<fld21> ip=<hostip> port=<port> os=<fld16> os_family=<fld17> os_gen=<fld18> os_vendor=<fld19>
	else if [logstash][msgparser][id] == "msgParserId619" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} src_name=%{shost} dst_name=%{dhost} proto=%{protocol} app_list=%{group_object} app_type=%{obj_type} app=%{obj_name} count=%{fld26} filename=%{filename} filesize=%{filename_size} req=%{fld9} content=%{fld24} phone=%{fld11} request=%{fld12} attack_id=%{sigid} from=%{from} to=%{to} rulename=%{fld7} compoundname=%{fld8} severity=%{risk} start=%{fld15} end=%{fld16} engine=%{fld20} plugin=%{fld21} ip=%{hostip} port=%{port} os=%{fld16} os_family=%{fld17} os_gen=%{fld18} os_vendor=%{fld19}" }
			id => "msgParserId619"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId620
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> src=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description> ui=<network_service> initiator=<fld83> status=<event_state> reason=<result> scope=<fld13> scope_data=<fld23> rule_type=<fld6> rule_data=<fld8> offsite=<fld9> expiry=<fld52> oldwprof=<change_old> newwprof=<change_new> dst=<daddr> src_int=<sinterface> dst_int=<dinterface> group=<group> dns_name=<fld38> dns_ip=<fld37> rem_ip|=<daddr> loc_ip=<saddr> rem_port=<dport> loc_port=<sport> policyid=<policy_id> adgroup=<group> tunnel_type=<scheme> tunnel_id=<fld11> remote_ip=<daddr> tunnel_id=<fld12> dst_host=<dhost> rip=<fld3> duration=<duration> sent=<sbytes> rcvd=<rbytes> fwver=<fld13> urlfilter_idx=<fld4> urlfilter_list=<fld5> identidx=<id> serial=<fld6> sport=<sport> src_port=<sport> dport=<dport> dst_port=<dport> service=<network_service> hostname=<hostname> profiletype=<rule_template> profilegroup=<rule_group> profile=<rulename> req_type=<fld10> url=<url> src_name=<shost> dst_name=<dhost> proto=<protocol> app_list=<group_object> app_type=<obj_type> app=<obj_name> count=<fld26> filename=<filename> filesize=<filename_size> req=<fld9> content=<fld24> phone=<fld11> request=<fld12> attack_id=<sigid> from=<from> to=<to> rulename=<fld7> compoundname=<fld8> severity=<risk> start=<fld15> end=<fld16> engine=<fld20> plugin=<fld21> ip=<hostip> vuln=<fld21> vuln_cat=<fld16> vuln_id=<fld17> vuln_ref=<fld18> port=<port>
	else if [logstash][msgparser][id] == "msgParserId620" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} src=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description} ui=%{network_service} initiator=%{fld83} status=%{event_state} reason=%{result} scope=%{fld13} scope_data=%{fld23} rule_type=%{fld6} rule_data=%{fld8} offsite=%{fld9} expiry=%{fld52} oldwprof=%{change_old} newwprof=%{change_new} dst=%{daddr} src_int=%{sinterface} dst_int=%{dinterface} group=%{group} dns_name=%{fld38} dns_ip=%{fld37} rem_ip|=%{daddr} loc_ip=%{saddr} rem_port=%{dport} loc_port=%{sport} policyid=%{policy_id} adgroup=%{group} tunnel_type=%{scheme} tunnel_id=%{fld11} remote_ip=%{daddr} tunnel_id=%{fld12} dst_host=%{dhost} rip=%{fld3} duration=%{duration} sent=%{sbytes} rcvd=%{rbytes} fwver=%{fld13} urlfilter_idx=%{fld4} urlfilter_list=%{fld5} identidx=%{id} serial=%{fld6} sport=%{sport} src_port=%{sport} dport=%{dport} dst_port=%{dport} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profilegroup=%{rule_group} profile=%{rulename} req_type=%{fld10} url=%{url} src_name=%{shost} dst_name=%{dhost} proto=%{protocol} app_list=%{group_object} app_type=%{obj_type} app=%{obj_name} count=%{fld26} filename=%{filename} filesize=%{filename_size} req=%{fld9} content=%{fld24} phone=%{fld11} request=%{fld12} attack_id=%{sigid} from=%{from} to=%{to} rulename=%{fld7} compoundname=%{fld8} severity=%{risk} start=%{fld15} end=%{fld16} engine=%{fld20} plugin=%{fld21} ip=%{hostip} vuln=%{fld21} vuln_cat=%{fld16} vuln_id=%{fld17} vuln_ref=%{fld18} port=%{port}" }
			id => "msgParserId620"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hfld1}"
				"event_type" => "%{msgIdPart1}"
				"category" => "%{msgIdPart2}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId621
	# line in RSA: status=<event_state> vd=<vsys> trandisp=<context> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> tranip=<dtransaddr> tranport=<dtransport> transip=<stransaddr> service=<network_service> proto=<protocol> duration=<duration> policyid=<policy_id> custom=<fld41> indentidx=<id> sentbyte=<sbytes> rcvdbyte=<rbytes> shaperdropsentbyte=<sbytes> shaperdroprcvdbyte=<rbytes> shaperdroprcvdbyte=<bytes> shapersentname=<fld24> shaperrcvdname=<fld25> shaperperipname=<fld27> rcvdpkt=<fld40> vpntype=<fld42> vpntunnel=<node> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> appid=<fld21> app=<obj_name> appcat=<category> applist=<group_object> appact=<action> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> crscore=<reputation_num> craction=<fld37> shaperperipdropbyte=<fld20>
	else if [logstash][msgparser][id] == "msgParserId621" {
		dissect {
			mapping => { "message" => "status=%{event_state} vd=%{vsys} trandisp=%{context} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} tranip=%{dtransaddr} tranport=%{dtransport} transip=%{stransaddr} service=%{network_service} proto=%{protocol} duration=%{duration} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sentbyte=%{sbytes} rcvdbyte=%{rbytes} shaperdropsentbyte=%{sbytes} shaperdroprcvdbyte=%{rbytes} shaperdroprcvdbyte=%{bytes} shapersentname=%{fld24} shaperrcvdname=%{fld25} shaperperipname=%{fld27} rcvdpkt=%{fld40} vpntype=%{fld42} vpntunnel=%{node} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} appid=%{fld21} app=%{obj_name} appcat=%{category} applist=%{group_object} appact=%{action} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} crscore=%{reputation_num} craction=%{fld37} shaperperipdropbyte=%{fld20}" }
			id => "msgParserId621"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_activity" => "Permit"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId622
	# line in RSA: status=<event_state> vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> service=<network_service> proto=<protocol> duration=<duration> policyid=<policy_id> custom=<fld41> indentidx=<id> sentbyte=<sbytes> rcvdbyte=<rbytes> shaperdropsentbyte=<sbytes> shaperdroprcvdbyte=<rbytes> shaperdroprcvdbyte=<bytes> shapersentname=<fld24> shaperrcvdname=<fld25> shaperperipname=<fld27> rcvdpkt=<fld40> vpntype=<fld42> vpntunnel=<node> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> appid=<fld21> app=<obj_name> appcat=<category> applist=<group_object> appact=<action> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> crscore=<reputation_num> craction=<fld37> shaperperipdropbyte=<fld20>
	else if [logstash][msgparser][id] == "msgParserId622" {
		dissect {
			mapping => { "message" => "status=%{event_state} vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} service=%{network_service} proto=%{protocol} duration=%{duration} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sentbyte=%{sbytes} rcvdbyte=%{rbytes} shaperdropsentbyte=%{sbytes} shaperdroprcvdbyte=%{rbytes} shaperdroprcvdbyte=%{bytes} shapersentname=%{fld24} shaperrcvdname=%{fld25} shaperperipname=%{fld27} rcvdpkt=%{fld40} vpntype=%{fld42} vpntunnel=%{node} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} appid=%{fld21} app=%{obj_name} appcat=%{category} applist=%{group_object} appact=%{action} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} crscore=%{reputation_num} craction=%{fld37} shaperperipdropbyte=%{fld20}" }
			id => "msgParserId622"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId623
	# line in RSA: status=<event_state> vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> tranip=<dtransaddr> tranport=<dtransport> transip=<stransaddr> service=<network_service> proto=<protocol> duration=<duration> policyid=<policy_id> custom=<fld41> indentidx=<id> sentbyte=<sbytes> rcvdbyte=<rbytes> shaperdropsentbyte=<sbytes> shaperdroprcvdbyte=<rbytes> shaperdroprcvdbyte=<bytes> shapersentname=<fld24> shaperrcvdname=<fld25> shaperperipname=<fld27> rcvdpkt=<fld40> vpntype=<fld42> vpntunnel=<node> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> appid=<fld21> app=<obj_name> appcat=<category> applist=<group_object> appact=<action> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> crscore=<reputation_num> craction=<fld37> shaperperipdropbyte=<fld20>
	else if [logstash][msgparser][id] == "msgParserId623" {
		dissect {
			mapping => { "message" => "status=%{event_state} vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} tranip=%{dtransaddr} tranport=%{dtransport} transip=%{stransaddr} service=%{network_service} proto=%{protocol} duration=%{duration} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sentbyte=%{sbytes} rcvdbyte=%{rbytes} shaperdropsentbyte=%{sbytes} shaperdroprcvdbyte=%{rbytes} shaperdroprcvdbyte=%{bytes} shapersentname=%{fld24} shaperrcvdname=%{fld25} shaperperipname=%{fld27} rcvdpkt=%{fld40} vpntype=%{fld42} vpntunnel=%{node} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} appid=%{fld21} app=%{obj_name} appcat=%{category} applist=%{group_object} appact=%{action} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} crscore=%{reputation_num} craction=%{fld37} shaperperipdropbyte=%{fld20}" }
			id => "msgParserId623"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId624
	# line in RSA: status=<event_state> vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> service=<network_service> proto=<protocol> duration=<duration> policyid=<policy_id> custom=<fld41> indentidx=<id> sentbyte=<sbytes> rcvdbyte=<rbytes> shaperdropsentbyte=<sbytes> shaperdroprcvdbyte=<rbytes> shaperdroprcvdbyte=<bytes> shapersentname=<fld24> shaperrcvdname=<fld25> shaperperipname=<fld27> rcvdpkt=<fld40> vpntype=<fld42> vpntunnel=<node> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> appid=<fld21> app=<obj_name> appcat=<category> applist=<group_object> appact=<action> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> crscore=<reputation_num> craction=<fld37> shaperperipdropbyte=<fld20>
	else if [logstash][msgparser][id] == "msgParserId624" {
		dissect {
			mapping => { "message" => "status=%{event_state} vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} service=%{network_service} proto=%{protocol} duration=%{duration} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sentbyte=%{sbytes} rcvdbyte=%{rbytes} shaperdropsentbyte=%{sbytes} shaperdroprcvdbyte=%{rbytes} shaperdroprcvdbyte=%{bytes} shapersentname=%{fld24} shaperrcvdname=%{fld25} shaperperipname=%{fld27} rcvdpkt=%{fld40} vpntype=%{fld42} vpntunnel=%{node} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} appid=%{fld21} app=%{obj_name} appcat=%{category} applist=%{group_object} appact=%{action} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} crscore=%{reputation_num} craction=%{fld37} shaperperipdropbyte=%{fld20}" }
			id => "msgParserId624"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId625
	# line in RSA: vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> wanoptapptype=<fld10> duration=<duration> policyid=<policy_id> indentidx=<id> wanin=<fld11> wanout=<fld12> lanin=<fld13> lanout=<fld14> srcintf=<sinterface> dstintf=<dinterface> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39>
	else if [logstash][msgparser][id] == "msgParserId625" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} wanoptapptype=%{fld10} duration=%{duration} policyid=%{policy_id} indentidx=%{id} wanin=%{fld11} wanout=%{fld12} lanin=%{fld13} lanout=%{fld14} srcintf=%{sinterface} dstintf=%{dinterface} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39}" }
			id => "msgParserId625"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId626
	# line in RSA: vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstport=<dport> duration=<duration> policyid=<policy_id> custom=<fld41> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> user=<username> group=<group> crscore=<reputation_num> craction=<fld37>
	else if [logstash][msgparser][id] == "msgParserId626" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstport=%{dport} duration=%{duration} policyid=%{policy_id} custom=%{fld41} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} user=%{username} group=%{group} crscore=%{reputation_num} craction=%{fld37}" }
			id => "msgParserId626"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId627
	# line in RSA: status=<event_state> vd=<vsys> trandisp=<context> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> tranip=<dtransaddr> tranport=<dtransport> transip=<stransaddr> service=<network_service> proto=<protocol> duration=<duration> policyid=<policy_id> custom=<fld41> indentidx=<id> sentbyte=<sbytes> rcvdbyte=<rbytes> shaperdropsentbyte=<sbytes> shaperdroprcvdbyte=<rbytes> shaperdroprcvdbyte=<bytes> shapersentname=<fld24> shaperrcvdname=<fld25> shaperperipname=<fld27> rcvdpkt=<fld40> vpntype=<fld42> vpntunnel=<node> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> appid=<fld21> app=<obj_name> appcat=<category> applist=<group_object> appact=<action> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> crscore=<reputation_num> craction=<fld37> shaperperipdropbyte=<fld20>
	else if [logstash][msgparser][id] == "msgParserId627" {
		dissect {
			mapping => { "message" => "status=%{event_state} vd=%{vsys} trandisp=%{context} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} tranip=%{dtransaddr} tranport=%{dtransport} transip=%{stransaddr} service=%{network_service} proto=%{protocol} duration=%{duration} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sentbyte=%{sbytes} rcvdbyte=%{rbytes} shaperdropsentbyte=%{sbytes} shaperdroprcvdbyte=%{rbytes} shaperdroprcvdbyte=%{bytes} shapersentname=%{fld24} shaperrcvdname=%{fld25} shaperperipname=%{fld27} rcvdpkt=%{fld40} vpntype=%{fld42} vpntunnel=%{node} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} appid=%{fld21} app=%{obj_name} appcat=%{category} applist=%{group_object} appact=%{action} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} crscore=%{reputation_num} craction=%{fld37} shaperperipdropbyte=%{fld20}" }
			id => "msgParserId627"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId628
	# line in RSA: status=<event_state> vd=<vsys> trandisp=<context> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstcountry=<location_dst> srccountry=<location_src> dstport=<dport> tranip=<dtransaddr> tranport=<dtransport> transip=<stransaddr> service=<network_service> proto=<protocol> duration=<duration> policyid=<policy_id> custom=<fld41> indentidx=<id> sentbyte=<sbytes> rcvdbyte=<rbytes> shaperdropsentbyte=<sbytes> shaperdroprcvdbyte=<rbytes> shaperdroprcvdbyte=<bytes> shapersentname=<fld24> shaperrcvdname=<fld25> shaperperipname=<fld27> rcvdpkt=<fld40> vpntype=<fld42> vpntunnel=<node> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> appid=<fld21> app=<obj_name> appcat=<category> applist=<group_object> appact=<action> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> utmaction=<action> filename=<filename> virus=<virusname> attack=<signame> hostname=<hostname> catdesc=<info> sender=<fld10> recipient=<fld13> mailcount=<fld14> spamcount=<fld15> dlprule=<fld16> utmevent=<event_type> utmseverity=<risk> sha256=<fld20> analyticssubmit=<fld19> crscore=<reputation_num> craction=<fld37> shaperperipdropbyte=<fld20>
	else if [logstash][msgparser][id] == "msgParserId628" {
		dissect {
			mapping => { "message" => "status=%{event_state} vd=%{vsys} trandisp=%{context} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstcountry=%{location_dst} srccountry=%{location_src} dstport=%{dport} tranip=%{dtransaddr} tranport=%{dtransport} transip=%{stransaddr} service=%{network_service} proto=%{protocol} duration=%{duration} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sentbyte=%{sbytes} rcvdbyte=%{rbytes} shaperdropsentbyte=%{sbytes} shaperdroprcvdbyte=%{rbytes} shaperdroprcvdbyte=%{bytes} shapersentname=%{fld24} shaperrcvdname=%{fld25} shaperperipname=%{fld27} rcvdpkt=%{fld40} vpntype=%{fld42} vpntunnel=%{node} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} appid=%{fld21} app=%{obj_name} appcat=%{category} applist=%{group_object} appact=%{action} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} utmaction=%{action} filename=%{filename} virus=%{virusname} attack=%{signame} hostname=%{hostname} catdesc=%{info} sender=%{fld10} recipient=%{fld13} mailcount=%{fld14} spamcount=%{fld15} dlprule=%{fld16} utmevent=%{event_type} utmseverity=%{risk} sha256=%{fld20} analyticssubmit=%{fld19} crscore=%{reputation_num} craction=%{fld37} shaperperipdropbyte=%{fld20}" }
			id => "msgParserId628"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId629
	# line in RSA: vd=<vsys> action=<action> start=<fld1> end=<fld2> status=<event_state> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId629" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} start=%{fld1} end=%{fld2} status=%{event_state} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId629"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId630
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> severity=<severity> proto=<protocol> dstport=<dport>
	else if [logstash][msgparser][id] == "msgParserId630" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} severity=%{severity} proto=%{protocol} dstport=%{dport}" }
			id => "msgParserId630"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId631
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr>
	else if [logstash][msgparser][id] == "msgParserId631" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr}" }
			id => "msgParserId631"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId632
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> service=<network_service> proto=<protocol> dstport=<dport>
	else if [logstash][msgparser][id] == "msgParserId632" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} service=%{network_service} proto=%{protocol} dstport=%{dport}" }
			id => "msgParserId632"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId633
	# line in RSA: vd=<vsys> action=<action> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId633" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId633"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId634
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> vulncnt=<fld10>
	else if [logstash][msgparser][id] == "msgParserId634" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} vulncnt=%{fld10}" }
			id => "msgParserId634"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId635
	# line in RSA: vd=<vsys> action=<action> dstip=<daddr> proto=<protocol> dstport=<dport>
	else if [logstash][msgparser][id] == "msgParserId635" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} dstip=%{daddr} proto=%{protocol} dstport=%{dport}" }
			id => "msgParserId635"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId636
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> file=<filename> checksum=<fld5> quarskip=<result> virus=<virusname> dtype=<fld30> ref=<url> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> agent=<agent> from=<from> to=<to> sha256=<fld20> analyticssubmit=<fld19> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId636" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} file=%{filename} checksum=%{fld5} quarskip=%{result} virus=%{virusname} dtype=%{fld30} ref=%{url} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} agent=%{agent} from=%{from} to=%{to} sha256=%{fld20} analyticssubmit=%{fld19} msg=%{event_description}" }
			id => "msgParserId636"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Deny"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId637
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> file=<filename> checksum=<fld5> quarskip=<result> virus=<virusname> dtype=<fld30> ref=<url> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> agent=<agent> from=<from> to=<to> sha256=<fld20> analyticssubmit=<fld19> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId637" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} file=%{filename} checksum=%{fld5} quarskip=%{result} virus=%{virusname} dtype=%{fld30} ref=%{url} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} agent=%{agent} from=%{from} to=%{to} sha256=%{fld20} analyticssubmit=%{fld19} msg=%{event_description}" }
			id => "msgParserId637"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Permit"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId638
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> file=<filename> checksum=<fld5> quarskip=<result> virus=<virusname> dtype=<fld30> ref=<url> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> agent=<agent> from=<from> to=<to> sha256=<fld20> analyticssubmit=<fld19> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId638" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} file=%{filename} checksum=%{fld5} quarskip=%{result} virus=%{virusname} dtype=%{fld30} ref=%{url} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} agent=%{agent} from=%{from} to=%{to} sha256=%{fld20} analyticssubmit=%{fld19} msg=%{event_description}" }
			id => "msgParserId638"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId639
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> virus=<virusname> dtype=<fld30> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId639" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} virus=%{virusname} dtype=%{fld30} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} msg=%{event_description}" }
			id => "msgParserId639"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Deny"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId640
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> virus=<virusname> dtype=<fld30> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId640" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} virus=%{virusname} dtype=%{fld30} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} msg=%{event_description}" }
			id => "msgParserId640"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId641
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> virus=<virusname> dtype=<fld30> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId641" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} virus=%{virusname} dtype=%{fld30} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId641"
			add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId642
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> virus=<virusname> dtype=<fld30> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId642" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} virus=%{virusname} dtype=%{fld30} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId642"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId643
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> filetype=<fld57> file=<filename> checksum=<fld5> quarskip=<result> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId643" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} filetype=%{fld57} file=%{filename} checksum=%{fld5} quarskip=%{result} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId643"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId644
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> url=<url> user=<username> group=<group> command=<action> agent=<agent> profiletype=<rule_template> profile=<rulename> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId644" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} url=%{url} user=%{username} group=%{group} command=%{action} agent=%{agent} profiletype=%{rule_template} profile=%{rulename} msg=%{event_description}" }
			id => "msgParserId644"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId645
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> filetype=<fld57> file=<filename> checksum=<fld5> quarskip=<result> virus=<virusname> dtype=<fld30> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId645" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} filetype=%{fld57} file=%{filename} checksum=%{fld5} quarskip=%{result} virus=%{virusname} dtype=%{fld30} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId645"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId646
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> filetype=<fld57> file=<filename> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId646" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} filetype=%{fld57} file=%{filename} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId646"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Permit"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId647
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> checksum=<fld5> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId647" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} checksum=%{fld5} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId647"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId648
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> checksum=<fld5> file=<filename> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId648" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} checksum=%{fld5} file=%{filename} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId648"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId649
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> file=<filename> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId649" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} file=%{filename} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId649"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId650
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> file=<filename> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> agent=<agent> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId650" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} file=%{filename} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} agent=%{agent} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId650"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Permit"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId651
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> file=<filename> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId651" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} file=%{filename} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId651"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Deny"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId652
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> file=<filename> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> from=<from> to=<to> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId652" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} file=%{filename} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} from=%{from} to=%{to} msg=%{event_description}" }
			id => "msgParserId652"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"ec_activity" => "Permit"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId653
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> from=<from> to=<to> agent=<agent> switchproto=<fld10> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId653" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} from=%{from} to=%{to} agent=%{agent} switchproto=%{fld10} msg=%{event_description}" }
			id => "msgParserId653"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId654
	# line in RSA: vd=<vsys> status=<event_state> service=<network_service> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> direction=<direction> file=<filename> checksum=<fld5> quarskip=<result> virus=<virusname> dtype=<fld30> ref=<url> url=<url> profile=<rulename> profiletype=<rule_template> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> agent=<agent> from=<from> to=<to> sha256=<fld20> analyticssubmit=<fld19> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId654" {
		dissect {
			mapping => { "message" => "vd=%{vsys} status=%{event_state} service=%{network_service} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} direction=%{direction} file=%{filename} checksum=%{fld5} quarskip=%{result} virus=%{virusname} dtype=%{fld30} ref=%{url} url=%{url} profile=%{rulename} profiletype=%{rule_template} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} agent=%{agent} from=%{from} to=%{to} sha256=%{fld20} analyticssubmit=%{fld19} msg=%{event_description}" }
			id => "msgParserId654"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId655
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld6> indentidx=<fld6> sessionid=<sessionid> initiator=<fld83> user=<username> group=<group> srcname=<shost> osname=<fld6> osversion=<fld6> unauthuser=<fld6> unauthusersource=<fld6> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld8> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> agent=<fld6> from=<from> to=<to> banword=<fld6> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId655" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld6} indentidx=%{fld6} sessionid=%{sessionid} initiator=%{fld83} user=%{username} group=%{group} srcname=%{shost} osname=%{fld6} osversion=%{fld6} unauthuser=%{fld6} unauthusersource=%{fld6} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld8} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} agent=%{fld6} from=%{from} to=%{to} banword=%{fld6} msg=%{event_description}" }
			id => "msgParserId655"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId656
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> direction=<direction> agent=<agent> from=<from> to=<to> banword=<fld43> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId656" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} direction=%{direction} agent=%{agent} from=%{from} to=%{to} banword=%{fld43} msg=%{event_description}" }
			id => "msgParserId656"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId657
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> agent=<agent> from=<from> to=<to> banword=<fld43> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId657" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} agent=%{agent} from=%{from} to=%{to} banword=%{fld43} msg=%{event_description}" }
			id => "msgParserId657"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId658
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> direction=<direction> agent=<agent> from=<from> to=<to> banword=<fld43> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId658" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} direction=%{direction} agent=%{agent} from=%{from} to=%{to} banword=%{fld43} msg=%{event_description}" }
			id => "msgParserId658"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId659
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> agent=<agent> from=<from> to=<to> keyword=<fld10> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId659" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} agent=%{agent} from=%{from} to=%{to} keyword=%{fld10} msg=%{event_description}" }
			id => "msgParserId659"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId660
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> direction=<direction> agent=<agent> from=<from> to=<to> banword=<fld43> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId660" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} direction=%{direction} agent=%{agent} from=%{from} to=%{to} banword=%{fld43} msg=%{event_description}" }
			id => "msgParserId660"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId661
	# line in RSA: urlfilteridx=<fld10> urlfilterlist=<fld11> vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId661" {
		dissect {
			mapping => { "message" => "urlfilteridx=%{fld10} urlfilterlist=%{fld11} vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId661"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId662
	# line in RSA: urlfilteridx=<fld10> urlfilterlist=<fld11> vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId662" {
		dissect {
			mapping => { "message" => "urlfilteridx=%{fld10} urlfilterlist=%{fld11} vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId662"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId663
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profiletype=<rule_template> profile=<rulename> hostname=<hostname> status=<event_state> reqtype=<fld7> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId663" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profiletype=%{rule_template} profile=%{rulename} hostname=%{hostname} status=%{event_state} reqtype=%{fld7} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId663"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId664
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profiletype=<rule_template> profile=<rulename> hostname=<hostname> status=<event_state> reqtype=<fld7> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId664" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profiletype=%{rule_template} profile=%{rulename} hostname=%{hostname} status=%{event_state} reqtype=%{fld7} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId664"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId665
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profiletype=<rule_template> profile=<rulename> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId665" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profiletype=%{rule_template} profile=%{rulename} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId665"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId666
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> profiletype=<rule_template> profile=<rulename> service=<network_service> status=<event_state> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId666" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} profiletype=%{rule_template} profile=%{rulename} service=%{network_service} status=%{event_state} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId666"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId667
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> profiletype=<rule_template> profile=<rulename> service=<network_service> status=<event_state> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId667" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} profiletype=%{rule_template} profile=%{rulename} service=%{network_service} status=%{event_state} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId667"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId668
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> profiletype=<rule_template> profile=<rulename> service=<network_service> status=<event_state> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId668" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} profiletype=%{rule_template} profile=%{rulename} service=%{network_service} status=%{event_state} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId668"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId669
	# line in RSA: vd=<vsys> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId669" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId669"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId670
	# line in RSA: vd=<vsys> user=<username> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> urltype=<fld10> hostname=<hostname> status=<event_state> error=<resultcode> url=<url> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId670" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} urltype=%{fld10} hostname=%{hostname} status=%{event_state} error=%{resultcode} url=%{url} msg=%{event_description}" }
			id => "msgParserId670"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId671
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> error=<resultcode> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId671" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} error=%{resultcode} msg=%{event_description}" }
			id => "msgParserId671"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId672
	# line in RSA: vd=<vsys> quotaexceeded=<fld10> quotatype=<fld11> quotaused=<fld12> quotamax=<fld13> catdesc=<info> user=<username> profile=<rulename> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId672" {
		dissect {
			mapping => { "message" => "vd=%{vsys} quotaexceeded=%{fld10} quotatype=%{fld11} quotaused=%{fld12} quotamax=%{fld13} catdesc=%{info} user=%{username} profile=%{rulename} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId672"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId673
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> class=<fld53> classdesc=<fld54> cat=<fcatnum> catdesc=<info> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId673" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} class=%{fld53} classdesc=%{fld54} cat=%{fcatnum} catdesc=%{info} msg=%{event_description}" }
			id => "msgParserId673"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId674
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> class=<fld53> classdesc=<fld54> cat=<fcatnum> catdesc=<info> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId674" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} class=%{fld53} classdesc=%{fld54} cat=%{fcatnum} catdesc=%{info} msg=%{event_description}" }
			id => "msgParserId674"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId675
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> class=<fld53> classdesc=<fld54> cat=<fcatnum> catdesc=<info> mode=<scheme> ruletype=<fld10> ruledata=<fld11> ovrdtbl=<fld12> ovrdid=<fld13> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId675" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} class=%{fld53} classdesc=%{fld54} cat=%{fcatnum} catdesc=%{info} mode=%{scheme} ruletype=%{fld10} ruledata=%{fld11} ovrdtbl=%{fld12} ovrdid=%{fld13} msg=%{event_description}" }
			id => "msgParserId675"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId676
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> class=<fld53> classdesc=<fld54> cat=<fcatnum> catdesc=<info> quotatype=<fld46> quotaused=<fld47> quotamax=<fld48> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId676" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} class=%{fld53} classdesc=%{fld54} cat=%{fcatnum} catdesc=%{info} quotatype=%{fld46} quotaused=%{fld47} quotamax=%{fld48} msg=%{event_description}" }
			id => "msgParserId676"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId677
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> class=<fld53> classdesc=<fld54> cat=<fcatnum> catdesc=<info> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId677" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} class=%{fld53} classdesc=%{fld54} cat=%{fcatnum} catdesc=%{info} msg=%{event_description}" }
			id => "msgParserId677"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId678
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> count=<packets> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId678" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} count=%{packets} msg=%{event_description}" }
			id => "msgParserId678"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId679
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId679" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId679"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId680
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> status=<event_state> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> count=<packets> filtertype=<filter> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId680" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} status=%{event_state} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} count=%{packets} filtertype=%{filter} msg=%{event_description}" }
			id => "msgParserId680"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId681
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> profiletype=<rule_template> profile=<rulename> hostname=<hostname> status=<event_state> service=<network_service> reqtype=<fld7> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId681" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} profiletype=%{rule_template} profile=%{rulename} hostname=%{hostname} status=%{event_state} service=%{network_service} reqtype=%{fld7} msg=%{event_description}" }
			id => "msgParserId681"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId682
	# line in RSA: vd=<vsys> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> initiator=<fld8> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> hostname=<hostname> profiletype=<rule_template> profile=<rulename> reqtype=<fld7> url=<url> sentbyte=<sbytes> rcvdbyte=<rbytes> status=<event_state> agent=<agent> from=<from> to=<to> contenttype=<fld10> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId682" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} initiator=%{fld8} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} hostname=%{hostname} profiletype=%{rule_template} profile=%{rulename} reqtype=%{fld7} url=%{url} sentbyte=%{sbytes} rcvdbyte=%{rbytes} status=%{event_state} agent=%{agent} from=%{from} to=%{to} contenttype=%{fld10} msg=%{event_description}" }
			id => "msgParserId682"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId683
	# line in RSA: severity=<severity> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> indentidx=<id> custom=<fld41> sessionid=<sessionid> status=<event_state> proto=<protocol> service=<network_service> vd=<vsys> count=<packets> attackname=<signame> srcport=<sport> dstport=<dport> attackid=<sigid> sensor=<sensor> ref=<url> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> incidentserialno=<serial_number>
	else if [logstash][msgparser][id] == "msgParserId683" {
		dissect {
			mapping => { "message" => "severity=%{severity} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} indentidx=%{id} custom=%{fld41} sessionid=%{sessionid} status=%{event_state} proto=%{protocol} service=%{network_service} vd=%{vsys} count=%{packets} attackname=%{signame} srcport=%{sport} dstport=%{dport} attackid=%{sigid} sensor=%{sensor} ref=%{url} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} incidentserialno=%{serial_number}" }
			id => "msgParserId683"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId684
	# line in RSA: severity=<severity> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> indentidx=<id> custom=<fld41> sessionid=<sessionid> status=<event_state> proto=<protocol> service=<network_service> vd=<vsys> count=<packets> attackname=<signame> icmpid=<fld10> icmptype=<icmptype> icmpcode=<icmpcode> attackid=<sigid> sensor=<sensor> ref=<url> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> incidentserialno=<serial_number>
	else if [logstash][msgparser][id] == "msgParserId684" {
		dissect {
			mapping => { "message" => "severity=%{severity} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} indentidx=%{id} custom=%{fld41} sessionid=%{sessionid} status=%{event_state} proto=%{protocol} service=%{network_service} vd=%{vsys} count=%{packets} attackname=%{signame} icmpid=%{fld10} icmptype=%{icmptype} icmpcode=%{icmpcode} attackid=%{sigid} sensor=%{sensor} ref=%{url} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} incidentserialno=%{serial_number}" }
			id => "msgParserId684"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId685
	# line in RSA: severity=<severity> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> indentidx=<id> custom=<fld41> sessionid=<sessionid> status=<event_state> proto=<protocol> service=<network_service> vd=<vsys> count=<packets> attackname=<signame> attackid=<sigid> sensor=<sensor> ref=<url> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> incidentserialno=<serial_number>
	else if [logstash][msgparser][id] == "msgParserId685" {
		dissect {
			mapping => { "message" => "severity=%{severity} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} indentidx=%{id} custom=%{fld41} sessionid=%{sessionid} status=%{event_state} proto=%{protocol} service=%{network_service} vd=%{vsys} count=%{packets} attackname=%{signame} attackid=%{sigid} sensor=%{sensor} ref=%{url} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} incidentserialno=%{serial_number}" }
			id => "msgParserId685"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId686
	# line in RSA: severity=<severity> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> indentidx=<id> custom=<fld41> sessionid=<sessionid> status=<event_state> proto=<protocol> service=<network_service> vd=<vsys> count=<packets> attackname=<signame> srcport=<sport> dstport=<dport> attackid=<sigid> sensor=<sensor> ref=<url> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> incidentserialno=<serial_number>
	else if [logstash][msgparser][id] == "msgParserId686" {
		dissect {
			mapping => { "message" => "severity=%{severity} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} indentidx=%{id} custom=%{fld41} sessionid=%{sessionid} status=%{event_state} proto=%{protocol} service=%{network_service} vd=%{vsys} count=%{packets} attackname=%{signame} srcport=%{sport} dstport=%{dport} attackid=%{sigid} sensor=%{sensor} ref=%{url} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} incidentserialno=%{serial_number}" }
			id => "msgParserId686"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId687
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes>
	else if [logstash][msgparser][id] == "msgParserId687" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes}" }
			id => "msgParserId687"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId688
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> banword=<fld43> subject=<subject>
	else if [logstash][msgparser][id] == "msgParserId688" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} banword=%{fld43} subject=%{subject}" }
			id => "msgParserId688"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId689
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> banword=<fld43>
	else if [logstash][msgparser][id] == "msgParserId689" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} banword=%{fld43}" }
			id => "msgParserId689"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId690
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> agent=<agent>
	else if [logstash][msgparser][id] == "msgParserId690" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} agent=%{agent}" }
			id => "msgParserId690"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId691
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> direction=<direction> agent=<agent>
	else if [logstash][msgparser][id] == "msgParserId691" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} direction=%{direction} agent=%{agent}" }
			id => "msgParserId691"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId692
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> subject=<subject> size=<filename_size> cc=<cc> attachment=<fld41>
	else if [logstash][msgparser][id] == "msgParserId692" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} subject=%{subject} size=%{filename_size} cc=%{cc} attachment=%{fld41}" }
			id => "msgParserId692"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId693
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> banword=<fld43> subject=<subject> size=<filename_size> cc=<cc> attachment=<fld41>
	else if [logstash][msgparser][id] == "msgParserId693" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} banword=%{fld43} subject=%{subject} size=%{filename_size} cc=%{cc} attachment=%{fld41}" }
			id => "msgParserId693"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId694
	# line in RSA: policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> profile=<rulename> profiletype=<rule_template> status=<event_state> from=<from> to=<to> tracker=<fld38> sentbyte=<sbytes> rcvdbyte=<rbytes> subject=<subject> size=<filename_size>
	else if [logstash][msgparser][id] == "msgParserId694" {
		dissect {
			mapping => { "message" => "policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} status=%{event_state} from=%{from} to=%{to} tracker=%{fld38} sentbyte=%{sbytes} rcvdbyte=%{rbytes} subject=%{subject} size=%{filename_size}" }
			id => "msgParserId694"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId695
	# line in RSA: filteridx=<fcatnum> dlpextra=<info> filtertype=<filter> vd=<vsys> policyid=<policy_id> indentidx=<id> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> user=<username> group=<group> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> service=<network_service> filetype=<fld57> sentbyte=<sbytes> rcvdbyte=<rbytes> hostname=<hostname> url=<url> from=<from> to=<to> subject=<subject> file=<filename> action=<action> profile=<rulename>
	else if [logstash][msgparser][id] == "msgParserId695" {
		dissect {
			mapping => { "message" => "filteridx=%{fcatnum} dlpextra=%{info} filtertype=%{filter} vd=%{vsys} policyid=%{policy_id} indentidx=%{id} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} user=%{username} group=%{group} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} service=%{network_service} filetype=%{fld57} sentbyte=%{sbytes} rcvdbyte=%{rbytes} hostname=%{hostname} url=%{url} from=%{from} to=%{to} subject=%{subject} file=%{filename} action=%{action} profile=%{rulename}" }
			id => "msgParserId695"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId696
	# line in RSA: vd=<vsys> sensitivity=<fld10> docsource=<fld11> dlpextra=<info> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId696" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sensitivity=%{fld10} docsource=%{fld11} dlpextra=%{info} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId696"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId697
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action>
	else if [logstash][msgparser][id] == "msgParserId697" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action}" }
			id => "msgParserId697"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId698
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> status=<event_state>
	else if [logstash][msgparser][id] == "msgParserId698" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} status=%{event_state}" }
			id => "msgParserId698"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId699
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> count=<packets>
	else if [logstash][msgparser][id] == "msgParserId699" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} count=%{packets}" }
			id => "msgParserId699"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId700
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> status=<event_state> filename=<filename> filesize=<filename_size> immsg=<fld10>
	else if [logstash][msgparser][id] == "msgParserId700" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} status=%{event_state} filename=%{filename} filesize=%{filename_size} immsg=%{fld10}" }
			id => "msgParserId700"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId701
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> count=<packets> content=<fld10>
	else if [logstash][msgparser][id] == "msgParserId701" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} count=%{packets} content=%{fld10}" }
			id => "msgParserId701"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId702
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> count=<packets> reason=<result> req=<fld10>
	else if [logstash][msgparser][id] == "msgParserId702" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} count=%{packets} reason=%{result} req=%{fld10}" }
			id => "msgParserId702"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId703
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action>
	else if [logstash][msgparser][id] == "msgParserId703" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action}" }
			id => "msgParserId703"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId704
	# line in RSA: vd=<vsys> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> status=<event_state> phone=<fld27> reason=<result>
	else if [logstash][msgparser][id] == "msgParserId704" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} status=%{event_state} phone=%{fld27} reason=%{result}" }
			id => "msgParserId704"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId705
	# line in RSA: vd=<vsys> attackid=<sigid> user=<username> group=<group> srcname=<shost> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> srcname=<shost> profiletype=<rule_template> profile=<rulename> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> count=<packets> hostname=<hostname> url=<url> message=<event_description> msg=<event_description> apprisk=<risk>
	else if [logstash][msgparser][id] == "msgParserId705" {
		dissect {
			mapping => { "message" => "vd=%{vsys} attackid=%{sigid} user=%{username} group=%{group} srcname=%{shost} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} srcname=%{shost} profiletype=%{rule_template} profile=%{rulename} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} count=%{packets} hostname=%{hostname} url=%{url} message=%{event_description} msg=%{event_description} apprisk=%{risk}" }
			id => "msgParserId705"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId706
	# line in RSA: vd=<vsys> attackid=<sigid> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> srcname=<shost> profiletype=<rule_template> profile=<rulename> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> count=<packets> hostname=<hostname> url=<url> message=<event_description>
	else if [logstash][msgparser][id] == "msgParserId706" {
		dissect {
			mapping => { "message" => "vd=%{vsys} attackid=%{sigid} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} srcname=%{shost} profiletype=%{rule_template} profile=%{rulename} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} count=%{packets} hostname=%{hostname} url=%{url} message=%{event_description}" }
			id => "msgParserId706"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId707
	# line in RSA: vd=<vsys> attackid=<sigid> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> srcname=<shost> profiletype=<rule_template> profile=<rulename> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action> count=<packets> hostname=<hostname> url=<url> message=<event_description>
	else if [logstash][msgparser][id] == "msgParserId707" {
		dissect {
			mapping => { "message" => "vd=%{vsys} attackid=%{sigid} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} srcname=%{shost} profiletype=%{rule_template} profile=%{rulename} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action} count=%{packets} hostname=%{hostname} url=%{url} message=%{event_description}" }
			id => "msgParserId707"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId708
	# line in RSA: vd=<vsys> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action>
	else if [logstash][msgparser][id] == "msgParserId708" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action}" }
			id => "msgParserId708"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId709
	# line in RSA: vd=<vsys> user=<username> group=<group> osname=<os> osversion=<version> unauthuser=<username> unauthusersource=<fld39> kind=<fld58> profiletype=<rule_template> profile=<rulename> direction=<direction> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> proto=<protocol> service=<network_service> policyid=<policy_id> custom=<fld41> indentidx=<id> sessionid=<sessionid> applist=<group_object> apptype=<obj_type> app=<obj_name> action=<action>
	else if [logstash][msgparser][id] == "msgParserId709" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} group=%{group} osname=%{os} osversion=%{version} unauthuser=%{username} unauthusersource=%{fld39} kind=%{fld58} profiletype=%{rule_template} profile=%{rulename} direction=%{direction} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} proto=%{protocol} service=%{network_service} policyid=%{policy_id} custom=%{fld41} indentidx=%{id} sessionid=%{sessionid} applist=%{group_object} apptype=%{obj_type} app=%{obj_name} action=%{action}" }
			id => "msgParserId709"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId710
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes> dlpsensor=<sensor> hostname=<hostname> url=<url> cat=<fcatnum> catdesc=<info>
	else if [logstash][msgparser][id] == "msgParserId710" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes} dlpsensor=%{sensor} hostname=%{hostname} url=%{url} cat=%{fcatnum} catdesc=%{info}" }
			id => "msgParserId710"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId711
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes> dlpsensor=<sensor> to=<to> from=<from> subject=<subject> attachment=<fld41>
	else if [logstash][msgparser][id] == "msgParserId711" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes} dlpsensor=%{sensor} to=%{to} from=%{from} subject=%{subject} attachment=%{fld41}" }
			id => "msgParserId711"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId712
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes> dlpsensor=<sensor> ftpcmd=<fld10> file=<filename>
	else if [logstash][msgparser][id] == "msgParserId712" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes} dlpsensor=%{sensor} ftpcmd=%{fld10} file=%{filename}" }
			id => "msgParserId712"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId713
	# line in RSA: dlpsensor=<sensor> vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes>
	else if [logstash][msgparser][id] == "msgParserId713" {
		dissect {
			mapping => { "message" => "dlpsensor=%{sensor} vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes}" }
			id => "msgParserId713"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId714
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes> to=<to> from=<from> subject=<subject> direction=<direction>
	else if [logstash][msgparser][id] == "msgParserId714" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes} to=%{to} from=%{from} subject=%{subject} direction=%{direction}" }
			id => "msgParserId714"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId715
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes> dlpsensor=<sensor> to=<to> from=<from> subject=<subject>
	else if [logstash][msgparser][id] == "msgParserId715" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes} dlpsensor=%{sensor} to=%{to} from=%{from} subject=%{subject}" }
			id => "msgParserId715"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId716
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> infection=<fld46> virus=<virusname> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> client=<saddr> server=<daddr> rcvdbyte=<rbytes> sentbyte=<sbytes> to=<to> from=<from> subject=<subject>
	else if [logstash][msgparser][id] == "msgParserId716" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} infection=%{fld46} virus=%{virusname} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} client=%{saddr} server=%{daddr} rcvdbyte=%{rbytes} sentbyte=%{sbytes} to=%{to} from=%{from} subject=%{subject}" }
			id => "msgParserId716"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId717
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> messages=<fld10> startdate=<fld11> enddate=<fld12>
	else if [logstash][msgparser][id] == "msgParserId717" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} messages=%{fld10} startdate=%{fld11} enddate=%{fld12}" }
			id => "msgParserId717"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId718
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> messages=<fld10> content=<fld10>
	else if [logstash][msgparser][id] == "msgParserId718" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} messages=%{fld10} content=%{fld10}" }
			id => "msgParserId718"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId719
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> status=<event_state> filename=<filename> filesize=<filename_size> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId719" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} status=%{event_state} filename=%{filename} filesize=%{filename_size} msg=%{event_description}" }
			id => "msgParserId719"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId720
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> status=<event_state>
	else if [logstash][msgparser][id] == "msgParserId720" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} status=%{event_state}" }
			id => "msgParserId720"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId721
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> direction=<direction> connmode=<fld10>
	else if [logstash][msgparser][id] == "msgParserId721" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} direction=%{direction} connmode=%{fld10}" }
			id => "msgParserId721"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId722
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> filename=<filename> virus=<virusname> heuristic=<fld10>
	else if [logstash][msgparser][id] == "msgParserId722" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} filename=%{filename} virus=%{virusname} heuristic=%{fld10}" }
			id => "msgParserId722"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId723
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> filename=<filename>
	else if [logstash][msgparser][id] == "msgParserId723" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} filename=%{filename}" }
			id => "msgParserId723"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId724
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> filename=<filename>
	else if [logstash][msgparser][id] == "msgParserId724" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} filename=%{filename}" }
			id => "msgParserId724"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId725
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> filename=<filename>
	else if [logstash][msgparser][id] == "msgParserId725" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} filename=%{filename}" }
			id => "msgParserId725"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId726
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> laddr=<saddr> raddr=<daddr> local=<sport> remote=<daddr> action=<action> direction=<direction> filename=<filename> filesize=<filename_size>
	else if [logstash][msgparser][id] == "msgParserId726" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} laddr=%{saddr} raddr=%{daddr} local=%{sport} remote=%{daddr} action=%{action} direction=%{direction} filename=%{filename} filesize=%{filename_size}" }
			id => "msgParserId726"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId727
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> action=<action> status=<event_state> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> direction=<direction> duration=<duration> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId727" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} direction=%{direction} duration=%{duration} from=%{from} to=%{to}" }
			id => "msgParserId727"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId728
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> action=<action> status=<event_state> phone=<fld27> srcip=<saddr> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId728" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} phone=%{fld27} srcip=%{saddr} from=%{from} to=%{to}" }
			id => "msgParserId728"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId729
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> action=<action> status=<event_state> phone=<fld27> srcip=<saddr> reason=<result>
	else if [logstash][msgparser][id] == "msgParserId729" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} phone=%{fld27} srcip=%{saddr} reason=%{result}" }
			id => "msgParserId729"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId730
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> action=<action> status=<event_state> phone=<fld27> srcip=<saddr> reason=<result> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId730" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} phone=%{fld27} srcip=%{saddr} reason=%{result} from=%{from} to=%{to}" }
			id => "msgParserId730"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId731
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> action=<action> status=<event_state> phone=<fld27> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> duration=<duration> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId731" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} phone=%{fld27} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} duration=%{duration} from=%{from} to=%{to}" }
			id => "msgParserId731"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId732
	# line in RSA: vd=<vsys> clogver=<fld44> epoch=<fld55> eventid=<fld56> cstatus=<fld45> sessionid=<sessionid> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> policyid=<policy_id> indentidx=<id> proto=<protocol> kind=<fld58> action=<action> status=<event_state> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> direction=<direction> duration=<duration> messagetype=<fld10> requestname=<fld11> malformdesc=<fld12> malformdata=<fld13> line=<fld14> column=<fld15> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId732" {
		dissect {
			mapping => { "message" => "vd=%{vsys} clogver=%{fld44} epoch=%{fld55} eventid=%{fld56} cstatus=%{fld45} sessionid=%{sessionid} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} policyid=%{policy_id} indentidx=%{id} proto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} direction=%{direction} duration=%{duration} messagetype=%{fld10} requestname=%{fld11} malformdesc=%{fld12} malformdata=%{fld13} line=%{fld14} column=%{fld15} from=%{from} to=%{to}" }
			id => "msgParserId732"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId733
	# line in RSA: vd=<vsys> action=<action> status=<event_state> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId733" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId733"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId734
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> status=<event_state> reason=<result> profile=<rulename> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId734" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} profile=%{rulename} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId734"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId735
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> status=<event_state> reason=<result> profile=<rulename> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId735" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} profile=%{rulename} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId735"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId736
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> status=<event_state> reason=<result> profile=<rulename> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId736" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} profile=%{rulename} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId736"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId737
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> xauthresult=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId737" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} xauthresult=%{result} msg=%{event_description}" }
			id => "msgParserId737"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId738
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> xauthresult=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId738" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} xauthresult=%{result} msg=%{event_description}" }
			id => "msgParserId738"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId739
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> role=<fld28> esptransform=<fld10> espauth=<fld11> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId739" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} role=%{fld28} esptransform=%{fld10} espauth=%{fld11} msg=%{event_description}" }
			id => "msgParserId739"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId740
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> role=<fld28> esptransform=<fld10> espauth=<fld11> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId740" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} role=%{fld28} esptransform=%{fld10} espauth=%{fld11} msg=%{event_description}" }
			id => "msgParserId740"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId741
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> errorreason=<result> peernotif=<info> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId741" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} errorreason=%{result} peernotif=%{info} msg=%{event_description}" }
			id => "msgParserId741"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId742
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> errorreason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId742" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} errorreason=%{result} msg=%{event_description}" }
			id => "msgParserId742"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId743
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> init=<fld30> mode=<scheme> direction=<direction> stage=<fld10> role=<fld28> result=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId743" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} init=%{fld30} mode=%{scheme} direction=%{direction} stage=%{fld10} role=%{fld28} result=%{result} msg=%{event_description}" }
			id => "msgParserId743"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId744
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> init=<fld30> mode=<scheme> direction=<direction> stage=<fld10> role=<fld28> result=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId744" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} init=%{fld30} mode=%{scheme} direction=%{direction} stage=%{fld10} role=%{fld28} result=%{result} msg=%{event_description}" }
			id => "msgParserId744"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId745
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> errornum=<info> spi=<src_spi> seq=<serial_number> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId745" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} errornum=%{info} spi=%{src_spi} seq=%{serial_number} msg=%{event_description}" }
			id => "msgParserId745"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId746
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> errornum=<info> spi=<src_spi> seq=<serial_number> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId746" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} errornum=%{info} spi=%{src_spi} seq=%{serial_number} msg=%{event_description}" }
			id => "msgParserId746"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId747
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> role=<fld28> inspi=<src_spi> outspi=<dst_spi> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId747" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} role=%{fld28} inspi=%{src_spi} outspi=%{dst_spi} msg=%{event_description}" }
			id => "msgParserId747"
			add_field => {
				"ec_subject" => "CryptoKey"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId748
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId748" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} msg=%{event_description}" }
			id => "msgParserId748"
			add_field => {
				"ec_subject" => "CryptoKey"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId749
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> encspi=<src_spi> decspi=<dst_spi> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId749" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} encspi=%{src_spi} decspi=%{dst_spi} msg=%{event_description}" }
			id => "msgParserId749"
			add_field => {
				"ec_subject" => "CryptoKey"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId750
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId750" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} msg=%{event_description}" }
			id => "msgParserId750"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId751
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId751" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} msg=%{event_description}" }
			id => "msgParserId751"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId752
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId752" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId752"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId753
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId753" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} msg=%{event_description}" }
			id => "msgParserId753"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId754
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> xauthuser=<c_username> xauthgroup=<group> vpntunnel=<node> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId754" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} xauthuser=%{c_username} xauthgroup=%{group} vpntunnel=%{node} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId754"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId755
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> peernotif=<info> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId755" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} peernotif=%{info} msg=%{event_description}" }
			id => "msgParserId755"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId756
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> peernotif=<info> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId756" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} peernotif=%{info} msg=%{event_description}" }
			id => "msgParserId756"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId757
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> role=<fld28> esptransform=<fld10> espauth=<fld11> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId757" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} role=%{fld28} esptransform=%{fld10} espauth=%{fld11} msg=%{event_description}" }
			id => "msgParserId757"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId758
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> role=<fld28> esptransform=<fld10> espauth=<fld11> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId758" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} role=%{fld28} esptransform=%{fld10} espauth=%{fld11} msg=%{event_description}" }
			id => "msgParserId758"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId759
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> errorreason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId759" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} errorreason=%{result} msg=%{event_description}" }
			id => "msgParserId759"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId760
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> init=<fld30> direction=<direction> role=<fld28> result=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId760" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} init=%{fld30} direction=%{direction} role=%{fld28} result=%{result} msg=%{event_description}" }
			id => "msgParserId760"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId761
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> init=<fld30> direction=<direction> role=<fld28> result=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId761" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} init=%{fld30} direction=%{direction} role=%{fld28} result=%{result} msg=%{event_description}" }
			id => "msgParserId761"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId762
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> errornum=<info> spi=<src_spi> seq=<serial_number> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId762" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} errornum=%{info} spi=%{src_spi} seq=%{serial_number} msg=%{event_description}" }
			id => "msgParserId762"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId763
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> errornum=<info> spi=<src_spi> seq=<serial_number> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId763" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} errornum=%{info} spi=%{src_spi} seq=%{serial_number} msg=%{event_description}" }
			id => "msgParserId763"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId764
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> role=<fld28> inspi=<src_spi> outspi=<dst_spi> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId764" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} role=%{fld28} inspi=%{src_spi} outspi=%{dst_spi} msg=%{event_description}" }
			id => "msgParserId764"
			add_field => {
				"ec_subject" => "CryptoKey"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId765
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId765" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} msg=%{event_description}" }
			id => "msgParserId765"
			add_field => {
				"ec_subject" => "CryptoKey"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId766
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> encspi=<src_spi> decspi=<dst_spi> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId766" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} encspi=%{src_spi} decspi=%{dst_spi} msg=%{event_description}" }
			id => "msgParserId766"
			add_field => {
				"ec_subject" => "CryptoKey"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId767
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId767" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} msg=%{event_description}" }
			id => "msgParserId767"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId768
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> status=<event_state> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId768" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} status=%{event_state} msg=%{event_description}" }
			id => "msgParserId768"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId769
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId769" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId769"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId770
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId770" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} msg=%{event_description}" }
			id => "msgParserId770"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId771
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> locip=<saddr> outintf=<dinterface> cookies=<web_cookie> user=<username> group=<group> vpntunnel=<node> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId771" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} locip=%{saddr} outintf=%{dinterface} cookies=%{web_cookie} user=%{username} group=%{group} vpntunnel=%{node} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId771"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId772
	# line in RSA: vd=<vsys> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId772" {
		dissect {
			mapping => { "message" => "vd=%{vsys} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId772"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId773
	# line in RSA: vd=<vsys> vcluster=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId773" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vcluster=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId773"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId774
	# line in RSA: vd=<vsys> vdname=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId774" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vdname=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId774"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId775
	# line in RSA: vd=<vsys> harole=<user_role> vcluster=<fld10> hostname=<hostname> sn=<serial_number> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId775" {
		dissect {
			mapping => { "message" => "vd=%{vsys} harole=%{user_role} vcluster=%{fld10} hostname=%{hostname} sn=%{serial_number} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId775"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId776
	# line in RSA: vd=<vsys> vcluster=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId776" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vcluster=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId776"
			add_field => {
				"ec_activity" => "Detect"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId777
	# line in RSA: vd=<vsys> vcluster=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId777" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vcluster=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId777"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId778
	# line in RSA: vd=<vsys> vcluster=<fld10> devintfname=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId778" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vcluster=%{fld10} devintfname=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId778"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId779
	# line in RSA: vd=<vsys> vcluster=<fld10> devintfname=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId779" {
		dissect {
			mapping => { "message" => "vd=%{vsys} vcluster=%{fld10} devintfname=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId779"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId780
	# line in RSA: vd=<vsys> harole=<user_role> devintfname=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId780" {
		dissect {
			mapping => { "message" => "vd=%{vsys} harole=%{user_role} devintfname=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId780"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId781
	# line in RSA: vd=<vsys> harole=<user_role> devintfname=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId781" {
		dissect {
			mapping => { "message" => "vd=%{vsys} harole=%{user_role} devintfname=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId781"
			add_field => {
				"ec_theme" => "ALM"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId782
	# line in RSA: vd=<vsys> devintfname=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId782" {
		dissect {
			mapping => { "message" => "vd=%{vsys} devintfname=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId782"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "ALM"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId783
	# line in RSA: vd=<vsys> harole=<user_role> hbdnreason=<result> devintfname=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId783" {
		dissect {
			mapping => { "message" => "vd=%{vsys} harole=%{user_role} hbdnreason=%{result} devintfname=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId783"
			add_field => {
				"ec_theme" => "ALM"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId784
	# line in RSA: vd=<vsys> synctype=<fld10> syncstatus=<fld11> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId784" {
		dissect {
			mapping => { "message" => "vd=%{vsys} synctype=%{fld10} syncstatus=%{fld11} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId784"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId785
	# line in RSA: vd=<vsys> ip=<hostip> haprio=<fld10> activity=<action> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId785" {
		dissect {
			mapping => { "message" => "vd=%{vsys} ip=%{hostip} haprio=%{fld10} activity=%{action} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId785"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId786
	# line in RSA: vd=<vsys> user=<username> server=<daddr> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId786" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} server=%{daddr} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId786"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId787
	# line in RSA: vd=<vsys> user=<username> server=<daddr> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId787" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} server=%{daddr} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId787"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId788
	# line in RSA: user=<username> server=<daddr> action=<action> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId788" {
		dissect {
			mapping => { "message" => "user=%{username} server=%{daddr} action=%{action} msg=%{event_description}" }
			id => "msgParserId788"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId789
	# line in RSA: vd=<vsys> user=<username> from=<from> to=<to> service=<network_service> proto=<protocol> nftype=<event_type> virus=<virusname> profile=<rulename> profiletype=<rule_template> count=<packets> duration=<duration> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId789" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} from=%{from} to=%{to} service=%{network_service} proto=%{protocol} nftype=%{event_type} virus=%{virusname} profile=%{rulename} profiletype=%{rule_template} count=%{packets} duration=%{duration} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId789"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId790
	# line in RSA: vd=<vsys> hostname=<hostname> service=<network_service> profile=<rulename> profiletype=<rule_template> profilevd=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId790" {
		dissect {
			mapping => { "message" => "vd=%{vsys} hostname=%{hostname} service=%{network_service} profile=%{rulename} profiletype=%{rule_template} profilevd=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId790"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId791
	# line in RSA: vd=<vsys> count=<packets> duration=<duration> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId791" {
		dissect {
			mapping => { "message" => "vd=%{vsys} count=%{packets} duration=%{duration} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId791"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId792
	# line in RSA: vd=<vsys> carrierep=<fld11> ip=<hostip> rssokey=<fld10> msg=<event_description> acctstat=<event_state> reason=<result> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId792" {
		dissect {
			mapping => { "message" => "vd=%{vsys} carrierep=%{fld11} ip=%{hostip} rssokey=%{fld10} msg=%{event_description} acctstat=%{event_state} reason=%{result} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId792"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId793
	# line in RSA: vd=<vsys> carrierep=<fld11> ip=<hostip> rssokey=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId793" {
		dissect {
			mapping => { "message" => "vd=%{vsys} carrierep=%{fld11} ip=%{hostip} rssokey=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId793"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId794
	# line in RSA: vd=<vsys> carrierep=<fld11> ip=<hostip> rssokey=<fld10> msg=<event_description> acctstat=<event_state> reason=<result> count=<packets> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId794" {
		dissect {
			mapping => { "message" => "vd=%{vsys} carrierep=%{fld11} ip=%{hostip} rssokey=%{fld10} msg=%{event_description} acctstat=%{event_state} reason=%{result} count=%{packets} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId794"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId795
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId795" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId795"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Enable"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId796
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId796" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} msg=%{event_description}" }
			id => "msgParserId796"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Disable"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId797
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId797" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId797"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId798
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> nextstats=<fld10> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId798" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} nextstats=%{fld10} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} reason=%{result} msg=%{event_description}" }
			id => "msgParserId798"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId799
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> apptype=<obj_type> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId799" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} apptype=%{obj_type} msg=%{event_description}" }
			id => "msgParserId799"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId800
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> apptype=<obj_type> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId800" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} apptype=%{obj_type} msg=%{event_description}" }
			id => "msgParserId800"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId801
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> apptype=<obj_type> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId801" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} apptype=%{obj_type} msg=%{event_description}" }
			id => "msgParserId801"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId802
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId802" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId802"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId803
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId803" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId803"
			add_field => {
				"ec_subject" => "Certificate"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId804
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId804" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId804"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId805
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> desc=<event_description> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId805" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} desc=%{event_description} msg=%{event_description}" }
			id => "msgParserId805"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId806
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId806" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId806"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId807
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId807" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} reason=%{result} msg=%{event_description}" }
			id => "msgParserId807"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId808
	# line in RSA: vd=<vsys> action=<action> remip=<daddr> user=<username> group=<group> dsthost=<dhost> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId808" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} remip=%{daddr} user=%{username} group=%{group} dsthost=%{dhost} reason=%{result} msg=%{event_description}" }
			id => "msgParserId808"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Unknown"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId809
	# line in RSA: vd=<vsys> action=<action> cpu=<cpu> mem=<fld11> totalsession=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId809" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} cpu=%{cpu} mem=%{fld11} totalsession=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId809"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId810
	# line in RSA: vd=<vsys> fwservername=<fld11> addrtype=<fld10> ip=<hostip> fqdn=<fqdn> port=<sport> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId810" {
		dissect {
			mapping => { "message" => "vd=%{vsys} fwservername=%{fld11} addrtype=%{fld10} ip=%{hostip} fqdn=%{fqdn} port=%{sport} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId810"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId811
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> apn=<fld33> selection=<fld34> cgsn=<fld10> ugsn=<fld11> nsapi=<fld12> linkednsapi=<fld13> imeisv=<fld14> rattype=<fld15> rai=<fld51> uli=<fld52> endusraddress=<daddr> headerteid=<fld35>
	else if [logstash][msgparser][id] == "msgParserId811" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33} selection=%{fld34} cgsn=%{fld10} ugsn=%{fld11} nsapi=%{fld12} linkednsapi=%{fld13} imeisv=%{fld14} rattype=%{fld15} rai=%{fld51} uli=%{fld52} endusraddress=%{daddr} headerteid=%{fld35}" }
			id => "msgParserId811"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId812
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> denycause=<info> dtlexp=<event_description> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> apn=<fld33> selection=<fld34> cgsn=<fld10> ugsn=<fld11> nsapi=<fld12> linkednsapi=<fld13> imeisv=<fld14> rattype=<fld15> rai=<fld51> uli=<fld52> endusraddress=<daddr> headerteid=<fld35>
	else if [logstash][msgparser][id] == "msgParserId812" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} denycause=%{info} dtlexp=%{event_description} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33} selection=%{fld34} cgsn=%{fld10} ugsn=%{fld11} nsapi=%{fld12} linkednsapi=%{fld13} imeisv=%{fld14} rattype=%{fld15} rai=%{fld51} uli=%{fld52} endusraddress=%{daddr} headerteid=%{fld35}" }
			id => "msgParserId812"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId813
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> apn=<fld33> selection=<fld34> cgsn=<fld10> ugsn=<fld11> nsapi=<fld12> linkednsapi=<fld13> imeisv=<fld14> rattype=<fld15> rai=<fld51> uli=<fld52> endusraddress=<daddr> headerteid=<fld35>
	else if [logstash][msgparser][id] == "msgParserId813" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33} selection=%{fld34} cgsn=%{fld10} ugsn=%{fld11} nsapi=%{fld12} linkednsapi=%{fld13} imeisv=%{fld14} rattype=%{fld15} rai=%{fld51} uli=%{fld52} endusraddress=%{daddr} headerteid=%{fld35}" }
			id => "msgParserId813"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId814
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> dtlexp=<event_description> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> apn=<fld33> selection=<fld34> cgsn=<fld10> ugsn=<fld11> nsapi=<fld12> linkednsapi=<fld13> imeisv=<fld14> rattype=<fld15> rai=<fld51> uli=<fld52> endusraddress=<daddr> headerteid=<fld35>
	else if [logstash][msgparser][id] == "msgParserId814" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} dtlexp=%{event_description} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33} selection=%{fld34} cgsn=%{fld10} ugsn=%{fld11} nsapi=%{fld12} linkednsapi=%{fld13} imeisv=%{fld14} rattype=%{fld15} rai=%{fld51} uli=%{fld52} endusraddress=%{daddr} headerteid=%{fld35}" }
			id => "msgParserId814"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId815
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> cggsn=<fld10> usgsn=<fld11> csgsnteid=<fld12> cggsnteid=<fld13> usgsnteid=<fld14> uggsnteid=<fld15> tunnelidx=<fld32> duration=<duration> cpkts=<fld51> cbytes=<sbytes> upkts=<fld52> ubytes=<rbytes> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> apn=<fld33> selection=<fld34> cgsn=<fld10> ugsn=<fld11> nsapi=<fld12> linkednsapi=<fld13> imeisv=<fld14> rattype=<fld15> rai=<fld51> uli=<fld52> endusraddress=<daddr>
	else if [logstash][msgparser][id] == "msgParserId815" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} cggsn=%{fld10} usgsn=%{fld11} csgsnteid=%{fld12} cggsnteid=%{fld13} usgsnteid=%{fld14} uggsnteid=%{fld15} tunnelidx=%{fld32} duration=%{duration} cpkts=%{fld51} cbytes=%{sbytes} upkts=%{fld52} ubytes=%{rbytes} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33} selection=%{fld34} cgsn=%{fld10} ugsn=%{fld11} nsapi=%{fld12} linkednsapi=%{fld13} imeisv=%{fld14} rattype=%{fld15} rai=%{fld51} uli=%{fld52} endusraddress=%{daddr}" }
			id => "msgParserId815"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId816
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> tunnelidx=<fld32> from=<from> to=<to> endusraddress=<daddr> imsi=<fld36> msisdn=<fld31> apn=<fld33>
	else if [logstash][msgparser][id] == "msgParserId816" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} tunnelidx=%{fld32} from=%{from} to=%{to} endusraddress=%{daddr} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33}" }
			id => "msgParserId816"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId817
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> imeisv=<fld14> snetwork=<fld51> rattype=<fld15> selection=<fld34> apn=<fld33> endusraddress=<daddr> headerteid=<fld35> cpaddr=<saddr> cpteid=<fld51>
	else if [logstash][msgparser][id] == "msgParserId817" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} imeisv=%{fld14} snetwork=%{fld51} rattype=%{fld15} selection=%{fld34} apn=%{fld33} endusraddress=%{daddr} headerteid=%{fld35} cpaddr=%{saddr} cpteid=%{fld51}" }
			id => "msgParserId817"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId818
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> denycause=<info> dtlexp=<event_description> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> imeisv=<fld14> snetwork=<fld51> rattype=<fld15> selection=<fld34> apn=<fld33> endusraddress=<daddr> headerteid=<fld35> cpaddr=<saddr> cpteid=<fld51>
	else if [logstash][msgparser][id] == "msgParserId818" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} denycause=%{info} dtlexp=%{event_description} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} imeisv=%{fld14} snetwork=%{fld51} rattype=%{fld15} selection=%{fld34} apn=%{fld33} endusraddress=%{daddr} headerteid=%{fld35} cpaddr=%{saddr} cpteid=%{fld51}" }
			id => "msgParserId818"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId819
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> msgtype=<event_type> from=<from> to=<to> dtlexp=<event_description> srcport=<sport> dstport=<dport> seqnum=<serial_number> tunnelidx=<fld32> imsi=<fld36> msisdn=<fld31> imeisv=<fld14> snetwork=<fld51> rattype=<fld15> selection=<fld34> apn=<fld33> endusraddress=<daddr> headerteid=<fld35> cpaddr=<saddr> cpteid=<fld51>
	else if [logstash][msgparser][id] == "msgParserId819" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} msgtype=%{event_type} from=%{from} to=%{to} dtlexp=%{event_description} srcport=%{sport} dstport=%{dport} seqnum=%{serial_number} tunnelidx=%{fld32} imsi=%{fld36} msisdn=%{fld31} imeisv=%{fld14} snetwork=%{fld51} rattype=%{fld15} selection=%{fld34} apn=%{fld33} endusraddress=%{daddr} headerteid=%{fld35} cpaddr=%{saddr} cpteid=%{fld51}" }
			id => "msgParserId819"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId820
	# line in RSA: vd=<vsys> profile=<rulename> status=<event_state> tunnelidx=<fld32> duration=<duration> cpkts=<fld51> cbytes=<sbytes> upkts=<fld52> ubytes=<rbytes> imsi=<fld36> msisdn=<fld31> apn=<fld33> selection=<fld34> imeisv=<fld14> rattype=<fld15> endusraddress=<daddr> snetwork=<fld51>
	else if [logstash][msgparser][id] == "msgParserId820" {
		dissect {
			mapping => { "message" => "vd=%{vsys} profile=%{rulename} status=%{event_state} tunnelidx=%{fld32} duration=%{duration} cpkts=%{fld51} cbytes=%{sbytes} upkts=%{fld52} ubytes=%{rbytes} imsi=%{fld36} msisdn=%{fld31} apn=%{fld33} selection=%{fld34} imeisv=%{fld14} rattype=%{fld15} endusraddress=%{daddr} snetwork=%{fld51}" }
			id => "msgParserId820"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId821
	# line in RSA: vd=<vsys> action=<action> user=<username> ui=<network_service> certtype=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId821" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} user=%{username} ui=%{network_service} certtype=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId821"
			add_field => {
				"ec_subject" => "Certificate"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId822
	# line in RSA: vd=<vsys> action=<action> user=<username> ui=<network_service> certtype=<fld15> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId822" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} user=%{username} ui=%{network_service} certtype=%{fld15} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId822"
			add_field => {
				"ec_subject" => "Certificate"
				"ec_activity" => "Delete"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId823
	# line in RSA: vd=<vsys> action=<action> status=<event_state> user=<username> ui=<network_service> certtype=<fld15> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId823" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} user=%{username} ui=%{network_service} certtype=%{fld15} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId823"
			add_field => {
				"ec_subject" => "Certificate"
				"ec_activity" => "Modify"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId824
	# line in RSA: vd=<vsys> action=<action> status=<event_state> name=<fld14> certtype=<fld15> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId824" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} name=%{fld14} certtype=%{fld15} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId824"
			add_field => {
				"ec_subject" => "Certificate"
				"ec_activity" => "Modify"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId825
	# line in RSA: vd=<vsys> action=<action> user=<username> ui=<network_service> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId825" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} user=%{username} ui=%{network_service} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId825"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Modify"
				"ec_theme" => "Encryption"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId826
	# line in RSA: vd=<vsys> action=<action> user=<username> ui=<network_service> certtype=<fld15> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId826" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} user=%{username} ui=%{network_service} certtype=%{fld15} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId826"
			add_field => {
				"ec_subject" => "Certificate"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Error"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId827
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> policyid=<policy_id> user=<username> group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId827" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} policyid=%{policy_id} user=%{username} group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId827"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId828
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> policyid=<policy_id> user=<username> group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId828" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} policyid=%{policy_id} user=%{username} group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId828"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId829
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> policyid=<policy_id> user=<username> group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId829" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} policyid=%{policy_id} user=%{username} group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId829"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId830
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> policyid=<policy_id> user=<username> group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId830" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} policyid=%{policy_id} user=%{username} group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId830"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId831
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> proto=<protocol> policyid=<policy_id> user=<username> adgroup=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId831" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} proto=%{protocol} policyid=%{policy_id} user=%{username} adgroup=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId831"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId832
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> proto=<protocol> policyid=<policy_id> user=<username> adgroup=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId832" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} proto=%{protocol} policyid=%{policy_id} user=%{username} adgroup=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId832"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId833
	# line in RSA: vd=<vsys> srcip=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId833" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description}" }
			id => "msgParserId833"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId834
	# line in RSA: vd=<vsys> srcip=<saddr> user=<username> server=<daddr> action=<action> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId834" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} user=%{username} server=%{daddr} action=%{action} msg=%{event_description}" }
			id => "msgParserId834"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId835
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> policyid=<policy_id> user=<username> adgroup=<group> group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId835" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} policyid=%{policy_id} user=%{username} adgroup=%{group} group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId835"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId836
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> policyid=<policy_id> user=<username> adgroup=<group> group=<group> ui=<network_service> action=<action> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId836" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} policyid=%{policy_id} user=%{username} adgroup=%{group} group=%{group} ui=%{network_service} action=%{action} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId836"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId837
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> initiator=<fld8> status=<event_state> reason=<result> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId837" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} initiator=%{fld8} status=%{event_state} reason=%{result} msg=%{event_description}" }
			id => "msgParserId837"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId838
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> initiator=<fld8> status=<event_state> reason=<result> scope=<fld12> scopedata=<fld13> ruletype=<fld10> ruledata=<fld11> offsite=<fld14> expiry=<fld15> oldwprof=<change_old> newwprof=<change_new> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId838" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} initiator=%{fld8} status=%{event_state} reason=%{result} scope=%{fld12} scopedata=%{fld13} ruletype=%{fld10} ruledata=%{fld11} offsite=%{fld14} expiry=%{fld15} oldwprof=%{change_old} newwprof=%{change_new} msg=%{event_description}" }
			id => "msgParserId838"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId839
	# line in RSA: vd=<vsys> dstip=<daddr> ui=<network_service> msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId839" {
		dissect {
			mapping => { "message" => "vd=%{vsys} dstip=%{daddr} ui=%{network_service} msg=%{event_description}" }
			id => "msgParserId839"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId840
	# line in RSA: vd=<vsys> proto=<protocol> infected=<fld14> suspicious=<fld12> scanned=<fld13> intercepted=<fld11> blocked=<fld10> checksum=<fld5> duration=<duration> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId840" {
		dissect {
			mapping => { "message" => "vd=%{vsys} proto=%{protocol} infected=%{fld14} suspicious=%{fld12} scanned=%{fld13} intercepted=%{fld11} blocked=%{fld10} checksum=%{fld5} duration=%{duration} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId840"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId841
	# line in RSA: vd=<vsys> action=<action> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId841" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId841"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId842
	# line in RSA: vd=<vsys> ssid=<ssid> bssid=<bssid> aptype=<fld10> rate=<fld11> radioband=<fld12> channel=<fld47> action=<action> manuf=<fld7> securitymode=<fld13> rssi=<fld8> Noise=<fld14> live=<fld9> age=<fld16> onwire=<fld15> detectionmethod=<fld44> stamac=<macaddr> apscan=<fld51> sndetected=<fld17> radioiddetected=<fld18> stacount=<fld52> snclosest=<fld53> radioiddetected=<fld18> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId842" {
		dissect {
			mapping => { "message" => "vd=%{vsys} ssid=%{ssid} bssid=%{bssid} aptype=%{fld10} rate=%{fld11} radioband=%{fld12} channel=%{fld47} action=%{action} manuf=%{fld7} securitymode=%{fld13} rssi=%{fld8} Noise=%{fld14} live=%{fld9} age=%{fld16} onwire=%{fld15} detectionmethod=%{fld44} stamac=%{macaddr} apscan=%{fld51} sndetected=%{fld17} radioiddetected=%{fld18} stacount=%{fld52} snclosest=%{fld53} radioiddetected=%{fld18} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId842"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId843
	# line in RSA: vd=<vsys> sn=<serial_number> ap=<fld10> approfile=<fld11> ip=<hostip> meshmode=<fld12> snmeshparent=<fld13> action=<action> reason=<result> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId843" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sn=%{serial_number} ap=%{fld10} approfile=%{fld11} ip=%{hostip} meshmode=%{fld12} snmeshparent=%{fld13} action=%{action} reason=%{result} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId843"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId844
	# line in RSA: vd=<vsys> sn=<serial_number> ap=<fld10> vap=<fld11> ssid=<ssid> user=<username> group=<group> mac=<smacaddr> ip=<hostip> channel=<fld47> radioband=<fld12> action=<action> reason=<result> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId844" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sn=%{serial_number} ap=%{fld10} vap=%{fld11} ssid=%{ssid} user=%{username} group=%{group} mac=%{smacaddr} ip=%{hostip} channel=%{fld47} radioband=%{fld12} action=%{action} reason=%{result} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId844"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId845
	# line in RSA: vd=<vsys> sn=<serial_number> ap=<fld10> ip=<hostip> radioid=<fld10> configcountry=<fld11> opercountry=<fld13> cfgtxpower=<fld14> radioband=<fld12> action=<action> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId845" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sn=%{serial_number} ap=%{fld10} ip=%{hostip} radioid=%{fld10} configcountry=%{fld11} opercountry=%{fld13} cfgtxpower=%{fld14} radioband=%{fld12} action=%{action} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId845"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId846
	# line in RSA: vd=<vsys> action=<action> ssid=<ssid> bssid=<bssid> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId846" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} ssid=%{ssid} bssid=%{bssid} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId846"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId847
	# line in RSA: vd=<vsys> sn=<serial_number> ap=<fld10> vap=<fld11> ssid=<ssid> mac=<smacaddr> radioband=<fld12> stacount=<fld52> action=<action> reason=<result> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId847" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sn=%{serial_number} ap=%{fld10} vap=%{fld11} ssid=%{ssid} mac=%{smacaddr} radioband=%{fld12} stacount=%{fld52} action=%{action} reason=%{result} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId847"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId848
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId848" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId848"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId849
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> invalidmac=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId849" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} invalidmac=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId849"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId850
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> dur=<duration> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId850" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} dur=%{duration} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId850"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId851
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> weakwepiv=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId851" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} weakwepiv=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId851"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId852
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId852" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId852"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId853
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> invalidmac=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId853" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} invalidmac=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId853"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId854
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> dur=<duration> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId854" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} dur=%{duration} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId854"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId855
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> seq=<serial_number> encrypt=<fld50> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> weakwepiv=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId855" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} seq=%{serial_number} encrypt=%{fld50} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} weakwepiv=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId855"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId856
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> eapoltype=<fld11> eapolcnt=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId856" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} eapoltype=%{fld11} eapolcnt=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId856"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId857
	# line in RSA: vd=<vsys> action=<action> threattype=<fld6> live=<fld9> age=<fld16> channel=<fld47> rssi=<fld8> frametype=<fld48> ds=<fld49> bssid=<bssid> tamac=<macaddr> manuf=<fld7> sndetected=<fld17> radioiddetected=<fld18> mgmtcnt=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId857" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} threattype=%{fld6} live=%{fld9} age=%{fld16} channel=%{fld47} rssi=%{fld8} frametype=%{fld48} ds=%{fld49} bssid=%{bssid} tamac=%{macaddr} manuf=%{fld7} sndetected=%{fld17} radioiddetected=%{fld18} mgmtcnt=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId857"
			add_field => {
				"ec_theme" => "TEV"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId858
	# line in RSA: vd=<vsys> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> dstintf=<dinterface> srcport=<sport> dstport=<dport> proto=<protocol> service=<network_service> action=<action> user=<username> group=<group> policyid=<policy_id> bannedsrc=<fld10> bannedrule=<fld11> sensor=<sensor>
	else if [logstash][msgparser][id] == "msgParserId858" {
		dissect {
			mapping => { "message" => "vd=%{vsys} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} dstintf=%{dinterface} srcport=%{sport} dstport=%{dport} proto=%{protocol} service=%{network_service} action=%{action} user=%{username} group=%{group} policyid=%{policy_id} bannedsrc=%{fld10} bannedrule=%{fld11} sensor=%{sensor}" }
			id => "msgParserId858"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId859
	# line in RSA: vd=<vsys> policyid=<policy_id> src=<saddr> dst=<daddr> srcip=<saddr> dstip=<daddr> src_int=<sinterface> dst_intf=<dinterface> srcintf=<sinterface> dstintf=<dinterface> user=<username> group=<group> dns_name=<domainname> dnsname=<domainname> dns_ip=<fld37> dnsip=<fld10> dst_int=<fld1>
	else if [logstash][msgparser][id] == "msgParserId859" {
		dissect {
			mapping => { "message" => "vd=%{vsys} policyid=%{policy_id} src=%{saddr} dst=%{daddr} srcip=%{saddr} dstip=%{daddr} src_int=%{sinterface} dst_intf=%{dinterface} srcintf=%{sinterface} dstintf=%{dinterface} user=%{username} group=%{group} dns_name=%{domainname} dnsname=%{domainname} dns_ip=%{fld37} dnsip=%{fld10} dst_int=%{fld1}" }
			id => "msgParserId859"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId860
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> cfgtid=<fld10> cfgpath=<cfg.path> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId860" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} cfgtid=%{fld10} cfgpath=%{cfg.path} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId860"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId861
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> cfgtid=<fld10> cfgpath=<cfg.path> cfgobj=<cfg.obj> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId861" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} cfgtid=%{fld10} cfgpath=%{cfg.path} cfgobj=%{cfg.obj} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId861"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId862
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> cfgtid=<fld10> cfgpath=<cfg.path> cfgattr=<cfg.attr> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId862" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} cfgtid=%{fld10} cfgpath=%{cfg.path} cfgattr=%{cfg.attr} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId862"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId863
	# line in RSA: vd=<vsys> user=<username> ui=<network_service> action=<action> cfgtid=<fld10> cfgpath=<cfg.path> cfgobj=<cfg.obj> cfgattr=<cfg.attr> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId863" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} ui=%{network_service} action=%{action} cfgtid=%{fld10} cfgpath=%{cfg.path} cfgobj=%{cfg.obj} cfgattr=%{cfg.attr} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId863"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId864
	# line in RSA: vd=<vsys> action=<action> status=<event_state> licenselimit=<fld10> reason=<result> repeat=<fld11> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId864" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} licenselimit=%{fld10} reason=%{result} repeat=%{fld11} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId864"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId865
	# line in RSA: vd=<vsys> action=<action> status=<event_state> licenselimit=<fld10> licenseused=<fld11> usedfortype=<fld12> connectiontype=<fld13> count=<packets> user=<username> ip=<hostip> name=<fld14> forticlientid=<id> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId865" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} licenselimit=%{fld10} licenseused=%{fld11} usedfortype=%{fld12} connectiontype=%{fld13} count=%{packets} user=%{username} ip=%{hostip} name=%{fld14} forticlientid=%{id} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId865"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId866
	# line in RSA: vd=<vsys> action=<action> status=<event_state> ui=<network_service> user=<username> licenselimit=<fld10> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId866" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} ui=%{network_service} user=%{username} licenselimit=%{fld10} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId866"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId867
	# line in RSA: vd=<vsys> action=<action> status=<event_state> ui=<network_service> user=<username> reason=<result> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId867" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} status=%{event_state} ui=%{network_service} user=%{username} reason=%{result} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId867"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId868
	# line in RSA: vd=<vsys> user=<username> hostname=<hostname> ip=<hostip> forticlientid=<id> interface=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId868" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} hostname=%{hostname} ip=%{hostip} forticlientid=%{id} interface=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId868"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId869
	# line in RSA: vd=<vsys> forticlientid=<id> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId869" {
		dissect {
			mapping => { "message" => "vd=%{vsys} forticlientid=%{id} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId869"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId870
	# line in RSA: vd=<vsys> user=<username> hostname=<hostname> ip=<hostip> forticlientid=<id> interface=<interface> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId870" {
		dissect {
			mapping => { "message" => "vd=%{vsys} user=%{username} hostname=%{hostname} ip=%{hostip} forticlientid=%{id} interface=%{interface} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId870"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId871
	# line in RSA: vd=<vsys> action=<action> sessionid=<sessionid> policyid=<policy_id> srcport=<sport> dstport=<dport> reason=<result> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId871" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} sessionid=%{sessionid} policyid=%{policy_id} srcport=%{sport} dstport=%{dport} reason=%{result} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId871"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId872
	# line in RSA: vd=<vsys> action=<action> sessionid=<sessionid> policyid=<policy_id> srcport=<sport> dstport=<dport> desc=<event_description> msg=<event_description> srcip=<saddr> src=<saddr> dstip=<daddr> dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId872" {
		dissect {
			mapping => { "message" => "vd=%{vsys} action=%{action} sessionid=%{sessionid} policyid=%{policy_id} srcport=%{sport} dstport=%{dport} desc=%{event_description} msg=%{event_description} srcip=%{saddr} src=%{saddr} dstip=%{daddr} dst=%{daddr}" }
			id => "msgParserId872"
			add_field => {
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId873
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> status=<event_state> duration=<duration> direction=<direction> callid=<fld10> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId873" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} duration=%{duration} direction=%{direction} callid=%{fld10} from=%{from} to=%{to}" }
			id => "msgParserId873"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId874
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> status=<event_state> reason=<result> duration=<duration> direction=<direction> messagetype=<fld10> requestname=<fld11> callid=<fld10> count=<packets> from=<from> to=<to>
	else if [logstash][msgparser][id] == "msgParserId874" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} reason=%{result} duration=%{duration} direction=%{direction} messagetype=%{fld10} requestname=%{fld11} callid=%{fld10} count=%{packets} from=%{from} to=%{to}" }
			id => "msgParserId874"
			add_field => {
				"ec_activity" => "Deny"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId875
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> reason=<result> duration=<duration> direction=<direction> messagetype=<fld10> requestname=<fld11> malformdesc=<fld12> malformdata=<fld13> line=<fld14> column=<fld15>
	else if [logstash][msgparser][id] == "msgParserId875" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} reason=%{result} duration=%{duration} direction=%{direction} messagetype=%{fld10} requestname=%{fld11} malformdesc=%{fld12} malformdata=%{fld13} line=%{fld14} column=%{fld15}" }
			id => "msgParserId875"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId876
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> status=<event_state> phone=<fld27>
	else if [logstash][msgparser][id] == "msgParserId876" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} phone=%{fld27}" }
			id => "msgParserId876"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId877
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> status=<event_state> reason=<result> phone=<fld27>
	else if [logstash][msgparser][id] == "msgParserId877" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} reason=%{result} phone=%{fld27}" }
			id => "msgParserId877"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId878
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> status=<event_state> reason=<result> phone=<fld27>
	else if [logstash][msgparser][id] == "msgParserId878" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} reason=%{result} phone=%{fld27}" }
			id => "msgParserId878"
			add_field => {
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId879
	# line in RSA: vd=<vsys> sessionid=<sessionid> epoch=<fld55> eventid=<fld56> srcip=<saddr> dstip=<daddr> srcport=<sport> dstport=<dport> proto=<protocol> srcintf=<sinterface> dstintf=<dinterface> policyid=<policy_id> user=<username> group=<group> profile=<rulename> profiletype=<rule_template> voipproto=<protocol> kind=<fld58> action=<action> status=<event_state> duration=<duration> phone=<fld27>
	else if [logstash][msgparser][id] == "msgParserId879" {
		dissect {
			mapping => { "message" => "vd=%{vsys} sessionid=%{sessionid} epoch=%{fld55} eventid=%{fld56} srcip=%{saddr} dstip=%{daddr} srcport=%{sport} dstport=%{dport} proto=%{protocol} srcintf=%{sinterface} dstintf=%{dinterface} policyid=%{policy_id} user=%{username} group=%{group} profile=%{rulename} profiletype=%{rule_template} voipproto=%{protocol} kind=%{fld58} action=%{action} status=%{event_state} duration=%{duration} phone=%{fld27}" }
			id => "msgParserId879"
			add_field => {
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0000000011" {
		# MESSAGE 0000000011:01
		# line in RSA: vd=<vsys>,srcip=<saddr>,srcport=<sport>,srcintf="<sinterface>",dstip=<daddr>,dstport=<dport>,dstintf="<dinterface>",poluuid=<id2>,sessionid=<sessionid>,proto=<fld70>,action=<action>,policyid=<policy_id>,policytype=<fld26>,appcat="<category>",crscore=<reputation_num>,craction=<fld37>,crlevel=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys},srcip=%{saddr},srcport=%{sport},srcintf=\"%{sinterface}\",dstip=%{daddr},dstport=%{dport},dstintf=\"%{dinterface}\",poluuid=%{id2},sessionid=%{sessionid},proto=%{fld70},action=%{action},policyid=%{policy_id},policytype=%{fld26},appcat=\"%{category}\",crscore=%{reputation_num},craction=%{fld37},crlevel=%{fld2}" }
				id => "message-0000000011:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
					"[event][id]" => "0000000011:01"
					"[rsa][message][id1]" => "0000000011:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0000000011
		# line in RSA: vd=<vsys> srcip=<saddr> srcname=<shost> srcport=<sport> dstip=<daddr> dstname=<dhost> dstport=<dport> duration=<duration> policyid=<policy_id> custom=<fld41> srcintf=<sinterface> dstintf=<dinterface> sessionid=<sessionid> user=<username> group=<group> crscore=<reputation_num> craction=<fld37> action=<action> poluuid=<id2> crlevel=<fld2> appid=<fld7> app=<obj_name> appcat=<category> apprisk=<risk> applist=<group_object> appact=<action> utmaction=<action> countapp=<fld4> proto=<fld70> policytype=<fld26> status=<event_state> trandisp=<context> sentbyte=<sbytes> rcvdbyte=<rbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcname=%{shost} srcport=%{sport} dstip=%{daddr} dstname=%{dhost} dstport=%{dport} duration=%{duration} policyid=%{policy_id} custom=%{fld41} srcintf=%{sinterface} dstintf=%{dinterface} sessionid=%{sessionid} user=%{username} group=%{group} crscore=%{reputation_num} craction=%{fld37} action=%{action} poluuid=%{id2} crlevel=%{fld2} appid=%{fld7} app=%{obj_name} appcat=%{category} apprisk=%{risk} applist=%{group_object} appact=%{action} utmaction=%{action} countapp=%{fld4} proto=%{fld70} policytype=%{fld26} status=%{event_state} trandisp=%{context} sentbyte=%{sbytes} rcvdbyte=%{rbytes}" }
				id => "message-0000000011"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_source" => "%{hdevice}"
					"[event][id]" => "0000000011"
					"[rsa][message][id1]" => "0000000011"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId910
	# line in RSA: vd="<vsys>" msg="<event_description>" sync_type=<fld59> sync_status="<fld60>"
	else if [logstash][msgparser][id] == "msgParserId910" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" msg=\"%{event_description}\" sync_type=%{fld59} sync_status=\"%{fld60}\"" }
			id => "msgParserId910"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0318012801" {
		# MESSAGE 0318012801
		# line in RSA: vd={"<vsys>"|<vsys>} policyid=<policy_id> {intf_policyid=<fld15> identidx=<id> | identidx=<id>} {serial|sessionid}=<fld1> {user="<username>" group="<group>" srcip=<saddr>|user="<username>" group="<group>" src=<saddr>|user="<username>" srcip=<saddr>|user="<username>" src=<saddr>|srcip=<saddr>|src=<saddr>} {sport=<sport> src_port=<fld6>|srcport=<sport>} {src_int|srcintf}="<sinterface>" {dstip|dst}=<daddr> {dport=<dport> dst_port=<fld7>|dstport=<dport>} {dst_int|dstintf}="<dinterface>" service="<network_service>" hostname="<hostname>" { carrier_ep="<fld10>" profiletype="<rule_template>" | profiletype="<rule_template>" } {profilegroup="<rule_group>" profile="<rulename>"|profile="<rulename>"} status="<event_state>" {req_type|reqtype}=<fld8> url="<url>" msg="<event_description>" error="<resultcode>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^vd=(\"(?<vsys>[^\"]*)\"|(?<vsys>[^\s]*))[\s]+policyid=(?<policy_id>[^\s]*)[\s]+(intf_policyid=(?<fld15>[^\s]*)[\s]+identidx=(?<id>[^\s]*)[\s]+|[\s]*identidx=(?<id>[^\s]*))[\s]+(serial|sessionid)=(?<fld1>[^\s]*)[\s]+(user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+group=\"(?<group>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+srcip=(?<saddr>[^\s]*)|user=\"(?<username>[^\"]*)\"[\s]+src=(?<saddr>[^\s]*)|srcip=(?<saddr>[^\s]*)|src=(?<saddr>[^\s]*))[\s]+(sport=(?<sport>[^\s]*)[\s]+src_port=(?<fld6>[^\s]*)|srcport=(?<sport>[^\s]*))[\s]+(src_int|srcintf)=\"(?<sinterface>[^\"]*)\"[\s]+(dstip|dst)=(?<daddr>[^\s]*)[\s]+(dport=(?<dport>[^\s]*)[\s]+dst_port=(?<fld7>[^\s]*)|dstport=(?<dport>[^\s]*))[\s]+(dst_int|dstintf)=\"(?<dinterface>[^\"]*)\"[\s]+service=\"(?<network_service>[^\"]*)\"[\s]+hostname=\"(?<hostname>[^\"]*)\"[\s]+([\s]*carrier_ep=\"(?<fld10>[^\"]*)\"[\s]+profiletype=\"(?<rule_template>[^\"]*)\"[\s]+|[\s]*profiletype=\"(?<rule_template>[^\"]*)\"[\s]+)[\s]+(profilegroup=\"(?<rule_group>[^\"]*)\"[\s]+profile=\"(?<rulename>[^\"]*)\"|profile=\"(?<rulename>[^\"]*)\")[\s]+status=\"(?<event_state>[^\"]*)\"[\s]+(req_type|reqtype)=(?<fld8>[^\s]*)[\s]+url=\"(?<url>[^\"]*)\"[\s]+msg=\"(?<event_description>[^\"]*)\"[\s]+error=\"(?<resultcode>[^\"]*)\"$" }
				id => "message-0318012801"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0318012801"
					"[rsa][message][id1]" => "0318012801"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 0318012801:01
		# line in RSA: vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<fld70> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> sentpkt=<fld5> rcvdpkt=<fld6> poluuid=<id2> action=<action> crscore=<reputation_num> craction=<fld37>  crlevel=<fld2> transport=<stransport> transip=<stransaddr>  tranip=<dtransaddr> tranport=<dtransport> applist=<fld14> srcname=<shost> devtype=<fld21> osname=<fld23> osversion=<fld24> unauthuser=<fld25> unauthusersource=<fld26> mastersrcmac=<fld28> srcmac=<fld29> appid=<fld11> app=<fld12> appcat=<fld13> apprisk=<risk> applist=<group_object> appact=<action> utmaction=<disposition> countapp=<fld4> countweb=<fld6> shapersentname=<fld9> shaperdropsentbyte=<sbytes> shaperrcvdname=<fld17> shaperdroprcvdbyte=<fld18> srcssid=<ssid> wanin=<fld18> wanout=<fld19> lanin=<fld20> lanout=<fld21> shaperperipname=<fld19> shaperperipdropbyte=<fld20> user=<username> hostname=<hostname> url=<url> msg=<event_description> profile=<rulename> reqtype=<fld9> direction=<direction> error=<resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{fld70} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} sentpkt=%{fld5} rcvdpkt=%{fld6} poluuid=%{id2} action=%{action} crscore=%{reputation_num} craction=%{fld37}  crlevel=%{fld2} transport=%{stransport} transip=%{stransaddr}  tranip=%{dtransaddr} tranport=%{dtransport} applist=%{fld14} srcname=%{shost} devtype=%{fld21} osname=%{fld23} osversion=%{fld24} unauthuser=%{fld25} unauthusersource=%{fld26} mastersrcmac=%{fld28} srcmac=%{fld29} appid=%{fld11} app=%{fld12} appcat=%{fld13} apprisk=%{risk} applist=%{group_object} appact=%{action} utmaction=%{disposition} countapp=%{fld4} countweb=%{fld6} shapersentname=%{fld9} shaperdropsentbyte=%{sbytes} shaperrcvdname=%{fld17} shaperdroprcvdbyte=%{fld18} srcssid=%{ssid} wanin=%{fld18} wanout=%{fld19} lanin=%{fld20} lanout=%{fld21} shaperperipname=%{fld19} shaperperipdropbyte=%{fld20} user=%{username} hostname=%{hostname} url=%{url} msg=%{event_description} profile=%{rulename} reqtype=%{fld9} direction=%{direction} error=%{resultcode}" }
				id => "message-0318012801:01"
				add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
					"[event][id]" => "0318012801:01"
					"[rsa][message][id1]" => "0318012801:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId919
	# line in RSA: vd=<vsys> session_id=<fld4> policyid=<policy_id> src=<saddr> srcport=<sport> dst=<daddr> dstport=<dport> action=<action> alert=<fld36> desc=<fld37> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId919" {
		dissect {
			mapping => { "message" => "vd=%{vsys} session_id=%{fld4} policyid=%{policy_id} src=%{saddr} srcport=%{sport} dst=%{daddr} dstport=%{dport} action=%{action} alert=%{fld36} desc=%{fld37} msg=\"%{event_description}\"" }
			id => "msgParserId919"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId920
	# line in RSA: vd="<vsys>" logdesc="<fld1>" session_id=<fld2> policyid=<policy_id> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> action=<action> alert=<fld5> desc=<fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId920" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" logdesc=\"%{fld1}\" session_id=%{fld2} policyid=%{policy_id} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} action=%{action} alert=%{fld5} desc=%{fld3} msg=\"%{event_description}\"" }
			id => "msgParserId920"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId921
	# line in RSA: vd="<vsys>" logdesc="<fld1>" session_id=<fld2> policyid=<policy_id> srcip=<saddr> srcport=<sport> dstip=<daddr> dstport=<dport> action=<action> alert=<fld5> desc<fld3> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId921" {
		dissect {
			mapping => { "message" => "vd=\"%{vsys}\" logdesc=\"%{fld1}\" session_id=%{fld2} policyid=%{policy_id} srcip=%{saddr} srcport=%{sport} dstip=%{daddr} dstport=%{dport} action=%{action} alert=%{fld5} desc%{fld3} msg=\"%{event_description}\"" }
			id => "msgParserId921"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId922
	# line in RSA: vd=<vsys> severity=<severity> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> sessionid=<sessionid> action=<action> proto=<fld70> service=<network_service> count=<dclass_counter1> attack=<signame> srcport=<sport> dstport=<dport> attackid=<sigid> profile=<rulename> ref=<web_referer> msg=<event_description> crscore=<reputation_num> crlevel=<fld4> srccountry=<location_src> policyid=<policy_id>
	else if [logstash][msgparser][id] == "msgParserId922" {
		dissect {
			mapping => { "message" => "vd=%{vsys} severity=%{severity} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} sessionid=%{sessionid} action=%{action} proto=%{fld70} service=%{network_service} count=%{dclass_counter1} attack=%{signame} srcport=%{sport} dstport=%{dport} attackid=%{sigid} profile=%{rulename} ref=%{web_referer} msg=%{event_description} crscore=%{reputation_num} crlevel=%{fld4} srccountry=%{location_src} policyid=%{policy_id}" }
			id => "msgParserId922"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId923
	# line in RSA: vd=<vsys> severity=<severity> srcip=<saddr> dstip=<daddr> srcintf=<sinterface> sessionid=<sessionid> action=<action> proto=<fld70> service=<network_service> count=<fld2> attack=<signame> srcport=<sport> dstport=<dport> icmpid=<fld5> icmptype=<icmptype> icmpcode=<icmpcode>  attackid=<sigid> profile=<rulename> ref=<web_referer> msg=<event_description> crscore=<reputation_num> crlevel=<fld4> srccountry=<location_src> policyid=<policy_id>
	else if [logstash][msgparser][id] == "msgParserId923" {
		dissect {
			mapping => { "message" => "vd=%{vsys} severity=%{severity} srcip=%{saddr} dstip=%{daddr} srcintf=%{sinterface} sessionid=%{sessionid} action=%{action} proto=%{fld70} service=%{network_service} count=%{fld2} attack=%{signame} srcport=%{sport} dstport=%{dport} icmpid=%{fld5} icmptype=%{icmptype} icmpcode=%{icmpcode}  attackid=%{sigid} profile=%{rulename} ref=%{web_referer} msg=%{event_description} crscore=%{reputation_num} crlevel=%{fld4} srccountry=%{location_src} policyid=%{policy_id}" }
			id => "msgParserId923"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId924
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<protocol> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> src=<saddr> srcname=<saddr> src_port=<sport> dst=<daddr> dst_country=<location_dst> dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> tran_sip=<fld5> tran_sport=<fld15> app_type=<obj_type> rule=<rule> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> vpn_type=<fld23> vpn_tunnel=<fld24> src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> app=<obj_name> app_cat=<fld25> user=<username> group=<group> msg=<event_description> carrier_ep=<fld26> profilegroup=<rule_group> conserve=<fld27> free=<fld27> red=<fld28> action=<action> fwver=<fld13> ui=<network_service> count=<fld26> green=<fld15> process=<process> reason=<result> gateway=<fld14> interface=<interface> mode=<scheme> sysconserve=<fld15> total=<fld12> entermargin=<fld16> exitmargin=<fld11> file=<filename> size=<fld7> daemon=<fld28> pid=<fld18> cpu=<fld27> mem=<fld10> totalsession=<fld11> log=<fld12> cfgtid=<fld26> logdesc=<info> community=<fld21> port=<sport> version=<version>
	else if [logstash][msgparser][id] == "msgParserId924" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{protocol} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} src=%{saddr} srcname=%{saddr} src_port=%{sport} dst=%{daddr} dst_country=%{location_dst} dst_port=%{dport} tran_ip=%{stransaddr} tran_port=%{stransport} tran_sip=%{fld5} tran_sport=%{fld15} app_type=%{obj_type} rule=%{rule} sent=%{sbytes} rcvd=%{rbytes} shaper_drop_sent=%{fld16} shaper_drop_rcvd=%{fld17} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_name=%{fld21} vpn=%{fld22} vpn_type=%{fld23} vpn_tunnel=%{fld24} src_int=%{sinterface} dst_int=%{dinterface} SN=%{serial_number} app=%{obj_name} app_cat=%{fld25} user=%{username} group=%{group} msg=%{event_description} carrier_ep=%{fld26} profilegroup=%{rule_group} conserve=%{fld27} free=%{fld27} red=%{fld28} action=%{action} fwver=%{fld13} ui=%{network_service} count=%{fld26} green=%{fld15} process=%{process} reason=%{result} gateway=%{fld14} interface=%{interface} mode=%{scheme} sysconserve=%{fld15} total=%{fld12} entermargin=%{fld16} exitmargin=%{fld11} file=%{filename} size=%{fld7} daemon=%{fld28} pid=%{fld18} cpu=%{fld27} mem=%{fld10} totalsession=%{fld11} log=%{fld12} cfgtid=%{fld26} logdesc=%{info} community=%{fld21} port=%{sport} version=%{version}" }
			id => "msgParserId924"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId925
	# line in RSA: level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<protocol> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> src=<saddr> srcname=<saddr> src_port=<sport> dst=<daddr> dst_country=<location_dst> dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> tran_sip=<fld5> tran_sport=<fld15> app_type=<obj_type> rule=<rule> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> vpn_type=<fld23> vpn_tunnel=<fld24> src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> app=<obj_name> app_cat=<fld25> user=<username> group=<group> msg=<event_description> carrier_ep=<fld26> profilegroup=<rule_group> conserve=<fld27> free=<fld27> red=<fld28> action=<action> fwver=<fld13> ui=<network_service> count=<fld26> green=<fld15> process=<process> reason=<result> gateway=<fld14> interface=<interface> mode=<scheme> sysconserve=<fld15> total=<fld12> entermargin=<fld16> exitmargin=<fld11> file=<filename> size=<fld7> daemon=<fld28> pid=<fld18> cpu=<fld27> mem=<fld10> totalsession=<fld11> log=<fld12> cfgtid=<fld26> logdesc=<info> community=<fld21> port=<sport> version=<version> filesize=<filename_size> datarange=<fld32> reporttype=<fld33> processtime=<fld34>
	else if [logstash][msgparser][id] == "msgParserId925" {
		dissect {
			mapping => { "message" => "level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{protocol} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} src=%{saddr} srcname=%{saddr} src_port=%{sport} dst=%{daddr} dst_country=%{location_dst} dst_port=%{dport} tran_ip=%{stransaddr} tran_port=%{stransport} tran_sip=%{fld5} tran_sport=%{fld15} app_type=%{obj_type} rule=%{rule} sent=%{sbytes} rcvd=%{rbytes} shaper_drop_sent=%{fld16} shaper_drop_rcvd=%{fld17} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_name=%{fld21} vpn=%{fld22} vpn_type=%{fld23} vpn_tunnel=%{fld24} src_int=%{sinterface} dst_int=%{dinterface} SN=%{serial_number} app=%{obj_name} app_cat=%{fld25} user=%{username} group=%{group} msg=%{event_description} carrier_ep=%{fld26} profilegroup=%{rule_group} conserve=%{fld27} free=%{fld27} red=%{fld28} action=%{action} fwver=%{fld13} ui=%{network_service} count=%{fld26} green=%{fld15} process=%{process} reason=%{result} gateway=%{fld14} interface=%{interface} mode=%{scheme} sysconserve=%{fld15} total=%{fld12} entermargin=%{fld16} exitmargin=%{fld11} file=%{filename} size=%{fld7} daemon=%{fld28} pid=%{fld18} cpu=%{fld27} mem=%{fld10} totalsession=%{fld11} log=%{fld12} cfgtid=%{fld26} logdesc=%{info} community=%{fld21} port=%{sport} version=%{version} filesize=%{filename_size} datarange=%{fld32} reporttype=%{fld33} processtime=%{fld34}" }
			id => "msgParserId925"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId926
	# line in RSA: user="<username>" userfrom="<c_username>" msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId926" {
		dissect {
			mapping => { "message" => "user=\"%{username}\" userfrom=\"%{c_username}\" msg=\"%{event_description}\"" }
			id => "msgParserId926"
			add_field => {
				"event_source" => "%{hdevice}"
				"hardware_id" => "%{hserialnum}"
				"event_type" => "%{hlog_type}"
				"category" => "%{hsub_type}"
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId927
	# line in RSA: itime=<fld50> logver=<fld51> devname=<event_source> devid=<hardware_id> logid=<id> log_id=<id> type=<event_type> subtype=<category> level=<severity> pri=<severity> vd=<vsys> srcip=<saddr> srcport=<sport> srcintf=<sinterface> dstip=<daddr> dstport=<dport> dstintf=<dinterface> sessionid=<sessionid> status=<event_state> policyid=<policy_id> dstcountry=<location_dst> srccountry=<location_src> trandisp=<context> service=<network_service> proto=<protocol> app=<obj_name> duration=<duration> sentbyte=<sbytes> rcvdbyte=<rbytes> src=<saddr> srcname=<saddr> src_port=<sport> dst=<daddr> dst_country=<location_dst> dst_port=<dport> tran_ip=<stransaddr> tran_port=<stransport> tran_sip=<fld5> tran_sport=<fld15> app_type=<obj_type> rule=<rule> sent=<sbytes> rcvd=<rbytes> shaper_drop_sent=<fld16> shaper_drop_rcvd=<fld17> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_drop=<fld18> shaper_sent_name=<fld19> shaper_rcvd_name=<fld20> perip_name=<fld21> vpn=<fld22> vpn_type=<fld23> vpn_tunnel=<fld24> src_int=<sinterface> dst_int=<dinterface> SN=<serial_number> app=<obj_name> app_cat=<fld25> user=<username> group=<group> msg=<event_description> carrier_ep=<fld26> profilegroup=<rule_group> conserve=<fld27> free=<fld27> red=<fld28> action=<action> fwver=<fld13> ui=<network_service> count=<fld26> green=<fld15> process=<process> reason=<result> gateway=<fld14> interface=<interface> mode=<scheme> sysconserve=<fld15> total=<fld12> entermargin=<fld16> exitmargin=<fld11> file=<filename> size=<fld7> daemon=<fld28> pid=<fld18> cpu=<fld27> mem=<fld10> totalsession=<fld11> log=<fld12> cfgtid=<fld26> logdesc=<info> community=<fld21> port=<sport> version=<version> filesize=<filename_size> datarange=<fld32> reporttype=<fld33> processtime=<fld34> hostname=<hostname> url=<url> direction=<direction> eventtype=<vendor_event_cat> profile=<rulename> attackid=<sigid> attack=<signame> ref=<info> utmaction=<event_state> crscore=<reputation_num> severity=<severity> forwardedfor=<fld53> trueclntip=<fld54> poluuid=<id2> tunneltype=<scheme> tunnelid=<connectionid> remip=<daddr> dst_host=<dhost> eventtime=<event_time_string>
	else if [logstash][msgparser][id] == "msgParserId927" {
		dissect {
			mapping => { "message" => "itime=%{fld50} logver=%{fld51} devname=%{event_source} devid=%{hardware_id} logid=%{id} log_id=%{id} type=%{event_type} subtype=%{category} level=%{severity} pri=%{severity} vd=%{vsys} srcip=%{saddr} srcport=%{sport} srcintf=%{sinterface} dstip=%{daddr} dstport=%{dport} dstintf=%{dinterface} sessionid=%{sessionid} status=%{event_state} policyid=%{policy_id} dstcountry=%{location_dst} srccountry=%{location_src} trandisp=%{context} service=%{network_service} proto=%{protocol} app=%{obj_name} duration=%{duration} sentbyte=%{sbytes} rcvdbyte=%{rbytes} src=%{saddr} srcname=%{saddr} src_port=%{sport} dst=%{daddr} dst_country=%{location_dst} dst_port=%{dport} tran_ip=%{stransaddr} tran_port=%{stransport} tran_sip=%{fld5} tran_sport=%{fld15} app_type=%{obj_type} rule=%{rule} sent=%{sbytes} rcvd=%{rbytes} shaper_drop_sent=%{fld16} shaper_drop_rcvd=%{fld17} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_drop=%{fld18} shaper_sent_name=%{fld19} shaper_rcvd_name=%{fld20} perip_name=%{fld21} vpn=%{fld22} vpn_type=%{fld23} vpn_tunnel=%{fld24} src_int=%{sinterface} dst_int=%{dinterface} SN=%{serial_number} app=%{obj_name} app_cat=%{fld25} user=%{username} group=%{group} msg=%{event_description} carrier_ep=%{fld26} profilegroup=%{rule_group} conserve=%{fld27} free=%{fld27} red=%{fld28} action=%{action} fwver=%{fld13} ui=%{network_service} count=%{fld26} green=%{fld15} process=%{process} reason=%{result} gateway=%{fld14} interface=%{interface} mode=%{scheme} sysconserve=%{fld15} total=%{fld12} entermargin=%{fld16} exitmargin=%{fld11} file=%{filename} size=%{fld7} daemon=%{fld28} pid=%{fld18} cpu=%{fld27} mem=%{fld10} totalsession=%{fld11} log=%{fld12} cfgtid=%{fld26} logdesc=%{info} community=%{fld21} port=%{sport} version=%{version} filesize=%{filename_size} datarange=%{fld32} reporttype=%{fld33} processtime=%{fld34} hostname=%{hostname} url=%{url} direction=%{direction} eventtype=%{vendor_event_cat} profile=%{rulename} attackid=%{sigid} attack=%{signame} ref=%{info} utmaction=%{event_state} crscore=%{reputation_num} severity=%{severity} forwardedfor=%{fld53} trueclntip=%{fld54} poluuid=%{id2} tunneltype=%{scheme} tunnelid=%{connectionid} remip=%{daddr} dst_host=%{dhost} eventtime=%{event_time_string}" }
			id => "msgParserId927"
			add_field => {
				"vid" => "%{event_type}_%{category}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[action]"
		destination => "[ec_activity]"
		dictionary => {
			"connect" => "Start"
			"disconnect" => "Stop"
			"interface-stat-change" => "Modify"
			"daemon-shutdown" => "Stop"
			"daemon-startup" => "Start"
			"del_log" => "Delete"
			"FSAE-logon" => "Logon"
			"FSAE-logoff" => "Logoff"
			"block" => "Deny"
			"ssl-web-deny" => "Deny"
			"ssl-web-close" => "Stop"
			"ssl-login-fail" => "Logon"
			"passthrough" => "Permit"
			"allowed" => "Permit"
			"exempted" => "Permit"
			"permit" => "Permit"
			"pass" => "Permit"
			"accept" => "Permit"
			"delete_phase1_sa" => "Delete"
			"delete_ipsec_sa" => "Delete"
			"login" => "Logon"
			"logout" => "Logoff"
			"start" => "Start"
			"stop" => "Stop"
			"scan" => "Scan"
			"add" => "Modify"
			"modify" => "Modify"
			"service-detection" => "Detect"
			"detected" => "Detect"
			"host-detection" => "Detect"
			"vuln-detection" => "Detect"
			"ban-ip" => "Deny"
			"edit" => "Modify"
			"Edit" => "Modify"
			"Delete" => "Delete"
			"delete" => "Delete"
			"del-vom" => "Delete"
			"add-vom" => "Modify"
			"FSSO-logon" => "Logon"
			"FSSO-logoff" => "Logoff"
			"os-scan" => "Scan"
			"locked_out" => "Lockout"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[fld35]"
		destination => "[ec_theme]"
		dictionary => {
			"authenticate" => "Authentication"
			"authentication" => "Authentication"
			"NTLM-auth" => "Authentication"
			"FSAE-auth" => "Authentication"
			"auth_success" => "Authentication"
			"vuln_detection" => "TEV"
			"tev" => "TEV"
			"communication" => "Communication"
			"scan" => "TEV"
			"service-detection" => "TEV"
			"host-detection" => "TEV"
			"port-detection" => "TEV"
			"os-scan" => "TEV"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[action]"
		destination => "[ec_subject]"
		dictionary => {
			"authenticate" => "User"
			"FSAE-logon" => "User"
			"FSAE-auth" => "User"
			"user" => "User"
			"networkcomm" => "NetworkComm"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[resultcode]"
		destination => "[ec_outcome]"
		dictionary => {
			"success" => "Success"
			"failure" => "Failure"
			"DOWN" => "Failure"
			"fail" => "Failure"
			"failed" => "Failure"
			"error" => "Error"
			"auth_success" => "Success"
			"dpd_failure" => "Failure"
			"esp_error" => "Error"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[icmpcode]"
		destination => "[icmpcode]"
		dictionary => {
			"0x00" => "0"
			"0x01" => "1"
			"0x02" => "2"
			"0x03" => "3"
			"0x04" => "4"
			"0x05" => "5"
			"0x06" => "6"
			"0x07" => "7"
			"0x08" => "8"
			"0x09" => "9"
			"0x0a" => "10"
			"0x0b" => "11"
			"0x0c" => "12"
			"0x0d" => "13"
			"0x0e" => "14"
			"0x0f" => "15"
			"0x10" => "16"
			"0x11" => "17"
			"0x12" => "18"
			"0x1e" => "30"
			"0x1f" => "31"
			"0x28" => "40"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1801020000" => "Network.Connections.Successful"
			"1803000000" => "Network.Denied.Connections"
			"1001030000" => "Attacks.Access.Informational"
			"1801010000" => "Network.Connections.Errors"
			"1801030000" => "Network.Connections.Terminations"
			"1801000000" => "Network.Connections"
		}
		fallback => "Other.Default"
		override => true
	}
}
filter {
	translate {
		field => "[action]"
		destination => "[event_cat]"
		dictionary => {
			"accept" => "1801020000"
			"deny" => "1803000000"
			"blocked" => "1803000000"
			"detected" => "1001030000"
			"ip-conn" => "1801010000"
			"close" => "1801030000"
			"start" => "1801000000"
			"timeout" => "1801030000"
		}
		fallback => "1901000000"
		override => true
	}
}
filter {
	translate {
		field => "[fld70]"
		destination => "[protocol]"
		dictionary => {
			"3" => "GGP"
			"0" => "HOPOPT"
			"1" => "ICMP"
			"6" => "TCP"
			"17" => "UDP"
			"21" => "PRM"
			"HOPOPT" => "HOPOPT"
			"icmp" => "ICMP"
			"tcp" => "TCP"
			"udp" => "UDP"
			"prm" => "PRM"
		}
		fallback => ""
		override => true
	}
}

# Rename fields
filter {
	mutate {
		rename => {
			"cfg.attr" => "cfg_attr"
			"cfg.obj" => "cfg_obj"
			"cfg.path" => "cfg_path"
		}
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_fortinetmsg.json"
#			template_name => "fortinet_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
