# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "delldrac"
			"[observer][name]" => "Dell DRAC"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld1>[<hfld2>]: <hfld3> RAC:<username> <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<hfld3>[^\s]*)[\s]+RAC:(?<username>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hfld1>[<hfld2>]: <hfld3> RAC:<messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<hfld3>[^\s]*)[\s]+RAC:(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %DRAC enterprises.3183.1.1.0.<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%DRAC[\s]+enterprises\.3183\.1\.1\.0\.(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: Severity: <hseverity>, Category: <hfld1>, MessageID: <messageid>, Message:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "Severity: %{hseverity}, Category: %{hfld1}, MessageID: %{messageid}, Message:%{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: Severity: <hseverity>, Category: <hfld1>, MessageID: <hfld2>, Message:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "Severity: %{hseverity}, Category: %{hfld1}, MessageID: %{hfld2}, Message:%{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "iDRAC_1"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <month> <day> <time> <hostname> Severity: <hseverity>, Category: <hfld1>, MessageID: <messageid>, Message:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hostname} Severity: %{hseverity}, Category: %{hfld1}, MessageID: %{messageid}, Message:%{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <month> <day> <time> <hostname> Severity: <hseverity>, Category: <hfld1>, MessageID: <hfld2>, Message:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hostname} Severity: %{hseverity}, Category: %{hfld1}, MessageID: %{hfld2}, Message:%{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "iDRAC_1"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_delldracmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:    <id>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId0"
			add_field => {
				"event_description" => "Generic Critical Fan Failure"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId1"
			add_field => {
				"event_description" => "Generic Critical Fan Failure Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId2"
			add_field => {
				"event_description" => "Under-Voltage Problem"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId3"
			add_field => {
				"event_description" => "Under-Voltage Problem Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId4"
			add_field => {
				"event_description" => "Generic Critical Voltage Problem"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId5"
			add_field => {
				"event_description" => "Generic Critical Voltage Problem Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId6"
			add_field => {
				"event_description" => "Under-Temperature Warning"
				"severity" => "Minor"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId7"
			add_field => {
				"event_description" => "Under-Temperature Warning Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId8"
			add_field => {
				"event_description" => "Under-Temperature Problem"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId9"
			add_field => {
				"event_description" => "Under-Temperature Problem Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId10"
			add_field => {
				"event_description" => "Over-Temperature warning"
				"severity" => "Minor"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId11"
			add_field => {
				"event_description" => "Over-Temperature warning Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId12"
			add_field => {
				"event_description" => "Over-Temperature Problem"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId13"
			add_field => {
				"event_description" => "Over-Temperature Problem Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId14"
			add_field => {
				"event_description" => "Chasis Intrusion - Physical Security Violation"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId15"
			add_field => {
				"event_description" => "Chasis Intrusion Event Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId16"
			add_field => {
				"event_description" => "Fan Redundancy Lost"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId17"
			add_field => {
				"event_description" => "Fan redundancy Has Returned to Normal"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId18"
			add_field => {
				"event_description" => "Power Supply Redundancy Lost"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId19"
			add_field => {
				"event_description" => "Power Supply Redudndancy Has Returned to Normal"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId20
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId20"
			add_field => {
				"event_description" => "CPU Thermal Trip"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId21
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId21"
			add_field => {
				"event_description" => "CPU Thermal Trip Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId22
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId22"
			add_field => {
				"event_description" => "CPU Internal Error"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId23
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId23"
			add_field => {
				"event_description" => "CPU Internal Error Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId24
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId24"
			add_field => {
				"event_description" => "CPU Configuration Error"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId25"
			add_field => {
				"event_description" => "CPU Configuration Error Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId26"
			add_field => {
				"event_description" => "CPU Presence Detected"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId27"
			add_field => {
				"event_description" => "CPU Not Present"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId28
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId28"
			add_field => {
				"event_description" => "Power Supply Inserted"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId29
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId29"
			add_field => {
				"event_description" => "Power Supply Removed"
				"severity" => "Minor"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId30
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId30"
			add_field => {
				"event_description" => "Power Supply Failure"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId31
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId31"
			add_field => {
				"event_description" => "Power Supply Failure Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId32
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId32"
			add_field => {
				"event_description" => "Power Supply Warning"
				"severity" => "Minor"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId33
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId33"
			add_field => {
				"event_description" => "Power Supply Warning Cleared"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId34
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId34"
			add_field => {
				"event_description" => "Power Supply AC Lost"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId35
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId35"
			add_field => {
				"event_description" => "Power Supply AC Restored"
				"severity" => "Informational"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId36
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId36"
			add_field => {
				"event_description" => "System Event Log Full - Logging Disabled"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId37"
			add_field => {
				"event_description" => "Automatic System Recovery Timer Expired"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId38
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId38"
			add_field => {
				"event_description" => "Automatic System Recovery Reset Occurred"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId39
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId39"
			add_field => {
				"event_description" => "Automatic System Recovery Power Down Occurred"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId40
	# line in RSA:    <id>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{id}" }
			id => "msgParserId40"
			add_field => {
				"event_description" => "Automatic System Recovery Power Cycle Occurred"
				"severity" => "Critical"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId41
	# line in RSA:   <fld1>[<fld2>]: <fld3> RAC:<username>  closing session from <saddr>
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "%{fld1}[%{fld2}]: %{fld3} RAC:%{username}  closing session from %{saddr}" }
			id => "msgParserId41"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE login:01
		# line in RSA:  <fld1>[<fld2>]: <fld3> RAC:<username> login  from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}[%{fld2}]: %{fld3} RAC:%{username} login  from %{saddr}" }
				id => "message-login:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "login:01"
					"[rsa][message][id1]" => "login:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE login:02
		# line in RSA:   <fld1>[<fld2>]: <fld3> RAC:login failed from <username>: '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}[%{fld2}]: %{fld3} RAC:login failed from %{username}: '%{saddr}'" }
				id => "message-login:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "login:02"
					"[rsa][message][id1]" => "login:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:      <username> login from <saddr>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{username} login from %{saddr}" }
			id => "msgParserId44"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId45
	# line in RSA:      <username> closing session from <saddr>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{username} closing session from %{saddr}" }
			id => "msgParserId45"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId46
	# line in RSA:  Login attempt alert for <username> from <saddr> using <sinterface>, IP will be blocked for <duration> seconds.
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "Login attempt alert for %{username} from %{saddr} using %{sinterface}, IP will be blocked for %{duration} seconds." }
			id => "msgParserId46"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId47
	# line in RSA:  The session for <username> from <saddr> using <sinterface> is logged off.
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "The session for %{username} from %{saddr} using %{sinterface} is logged off." }
			id => "msgParserId47"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId48
	# line in RSA:  Unable to log in for <username> from <saddr> using {<sinterface>.|<sinterface>}
	else if [logstash][msgparser][id] == "msgParserId48" {
		grok {
			match => { "message" => "^[\s]*Unable[\s]+to[\s]+log[\s]+in[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+using[\s]+((?<sinterface>[^\.]*)\.|(?<sinterface>.*))$" }
			id => "msgParserId48"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId49
	# line in RSA:  Successfully logged in using <username>, from <saddr> and {<sinterface>.|<sinterface>}
	else if [logstash][msgparser][id] == "msgParserId49" {
		grok {
			match => { "message" => "^[\s]*Successfully[\s]+logged[\s]+in[\s]+using[\s]+(?<username>[^,]*),[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+and[\s]+((?<sinterface>[^\.]*)\.|(?<sinterface>.*))$" }
			id => "msgParserId49"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId50
	# line in RSA:  The iDRAC IP Address changed from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "The iDRAC IP Address changed from %{change_old} to %{change_new}" }
			id => "msgParserId50"
			add_field => {
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"change_attribute" => "The iDRAC IP Address"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId51
	# line in RSA:  The iDRAC firmware updated successfully. Previous version: <fld1>, Current version: <version>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "The iDRAC firmware updated successfully. Previous version: %{fld1}, Current version: %{version}" }
			id => "msgParserId51"
			add_field => {
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"event_description" => "The iDRAC firmware updated successfully."
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA:  Successfully downloaded the update package details <info>
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "Successfully downloaded the update package details %{info}" }
			id => "msgParserId52"
			add_field => {
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"event_description" => "Successfully downloaded the update package"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId53
	# line in RSA:  <device>firmware updated successfully. Current version:<version>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{device}firmware updated successfully. Current version:%{version}" }
			id => "msgParserId53"
			add_field => {
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{messageid}"
				"event_description" => "firmware updated successfully"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA:     <event_description>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId54"
			add_field => {
				"category" => "%{hfld1}"
				"severity" => "%{hseverity}"
				"id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_delldracmsg.json"
#			template_name => "delldrac_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
