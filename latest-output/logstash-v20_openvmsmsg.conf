# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "openvms"
			"[observer][name]" => "HP OpenVMS"
			"[observer][type]" => "Midrange"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0005
	# line in RSA: %OPENVMS-<level>: <month> <day> <time>[VMS-Audit] Security alarm (SECURITY) and security audit (SECURITY) on<hhostname>, system id: <hsystem>, Auditable event:<messageid> <hfld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%OPENVMS\-(?<level>[^:]*):[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\[]*)\[VMS\-Audit\][\s]+Security[\s]+alarm[\s]+\(SECURITY\)[\s]+and[\s]+security[\s]+audit[\s]+\(SECURITY\)[\s]+on(?<hhostname>[^,]*),[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %OPENVMS-<level>: <month> <day> <time>[VMS-Audit] Security audit (SECURITY) on <hhostname>, system id: <hsystem>, Auditable event:<messageid> <hfld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%OPENVMS\-(?<level>[^:]*):[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\[]*)\[VMS\-Audit\][\s]+Security[\s]+audit[\s]+\(SECURITY\)[\s]+on[\s]+(?<hhostname>[^,]*),[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <month> <day> <time> [VMS-Audit] Security {audit|alarm} (SECURITY) on MT64C, system id: <hsystem>, Auditable event: <messageid> <fld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[VMS\-Audit\][\s]+Security[\s]+(audit|alarm)[\s]+\(SECURITY\)[\s]+on[\s]+MT64C,[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<fld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <month> <day> <time> [VMS-Audit] Security alarm (SECURITY) and security audit (SECURITY) on MT64C, system id: <hsystem>, Auditable event: <messageid> <fld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[VMS\-Audit\][\s]+Security[\s]+alarm[\s]+\(SECURITY\)[\s]+and[\s]+security[\s]+audit[\s]+\(SECURITY\)[\s]+on[\s]+MT64C,[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<fld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <month> <day> <time> [VMS-Audit] Security {audit|alarm} (SECURITY) on <hhostname>, system id: <hsystem>, Auditable event: <messageid> <fld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[VMS\-Audit\][\s]+Security[\s]+(audit|alarm)[\s]+\(SECURITY\)[\s]+on[\s]+(?<hhostname>[^,]*),[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<fld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <month> <day> <time> [VMS-Audit] Security alarm (SECURITY) and security audit (SECURITY) on <hhostname>, system id: <hsystem>, Auditable event: <messageid> <fld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[VMS\-Audit\][\s]+Security[\s]+alarm[\s]+\(SECURITY\)[\s]+and[\s]+security[\s]+audit[\s]+\(SECURITY\)[\s]+on[\s]+(?<hhostname>[^,]*),[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<fld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <month> <day> <time> [VMS-Audit] Security alarm (SECURITY) and Security alarm (SECURITY) on <hhostname>, system id: <hsystem>, Auditable event: <messageid> <fld1>, <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[VMS\-Audit\][\s]+Security[\s]+alarm[\s]+\(SECURITY\)[\s]+and[\s]+Security[\s]+alarm[\s]+\(SECURITY\)[\s]+on[\s]+(?<hhostname>[^,]*),[\s]+system[\s]+id:[\s]+(?<hsystem>[^,]*),[\s]+Auditable[\s]+event:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<fld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_openvmsmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Audit" {
		# MESSAGE 000001
		# line in RSA: Audit server shutting down, Event time: <fld1>, PID: <process_id_val>, Username: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Audit server shutting down, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}" }
				id => "message-000001"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Audit server shutting down"
					"[event][id]" => "000001"
					"[rsa][message][id1]" => "000001"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000031
		# line in RSA: Audit server starting up, Event time: <fld1>, PID: <process_id_val>, Username: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Audit server starting up, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}" }
				id => "message-000031"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Audit server shutting up"
					"[event][id]" => "000031"
					"[rsa][message][id1]" => "000031"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Batch" {
		# MESSAGE 000033
		# line in RSA: Batch process login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Posix UID: <uid>, Posix GID: <groupid> , Status: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Batch process login failure, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid} , Status: %{result}, %{info}" }
				id => "message-000033"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Batch process login failure"
					"[event][id]" => "000033"
					"[rsa][message][id1]" => "000033"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000038
		# line in RSA: Batch process login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Posix UID: <uid>, Posix GID: <groupid> , 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Batch process login, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid} ," }
				id => "message-000038"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Batch process login"
					"[event][id]" => "000038"
					"[rsa][message][id1]" => "000038"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000049
		# line in RSA: Batch process login, Event time:  <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Batch process login, Event time:  %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}" }
				id => "message-000049"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Batch process login"
					"[event][id]" => "000049"
					"[rsa][message][id1]" => "000049"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000055
		# line in RSA: Batch process logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], {Image name: <application>, Posix UID:<uid>, Posix GID: <groupid>,|Image name: <application>,|Image name: <application>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Batch[\s]+process[\s]+logout,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+(Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),|Image[\s]+name:[\s]+(?<application>[^,]*),|Image[\s]+name:[\s]+(?<application>.*))$" }
				id => "message-000055"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"hostname" => "%{hhostname}"
				"event_description" => "Batch process logout"
					"[event][id]" => "000055"
					"[rsa][message][id1]" => "000055"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: DECnet logical link { created, | deleted, } Event time: <fld1>, PID: <process_id_val>, DECnet logical link ID: <fld2>, Status: <result>, <info>
	else if [logstash][msgparser][id] == "msgParserId4" {
		grok {
			match => { "message" => "^DECnet[\s]+logical[\s]+link[\s]+([\s]*created,[\s]+|[\s]*deleted,[\s]+)[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+DECnet[\s]+logical[\s]+link[\s]+ID:[\s]+(?<fld2>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+(?<info>.*)$" }
			id => "msgParserId4"
			add_field => {
				"hostname" => "%{hhostname}"
				"[logstash][fullDateTimeString]" => "%{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Detached" {
		# MESSAGE 000002
		# line in RSA: Detached process login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], {Terminal name: <terminal>:, Image name: <application>, Posix UID: <uid> |Image name: <application>, Posix UID: <uid>}, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Detached[\s]+process[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],[\s]+(Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^\s]*)[\s]+|Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*)),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^\s]*)[\s]+$" }
				id => "message-000002"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process login"
					"[event][id]" => "000002"
					"[rsa][message][id1]" => "000002"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000039
		# line in RSA: Detached process login, Event time: <fld1>, PID: <process_id_val>, Username: <username>, Process owner: [<fld2>], {Terminal name: <terminal>:, Image name: <application>, Posix UID: <uid> |Image name: <application>, Posix UID: <uid>}, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Detached[\s]+process[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],[\s]+(Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^\s]*)[\s]+|Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*)),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^\s]*)[\s]+$" }
				id => "message-000039"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process login"
					"[event][id]" => "000039"
					"[rsa][message][id1]" => "000039"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000003
		# line in RSA: Detached process logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Detached process logout, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000003"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"ec_theme" => "ALM"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process logout"
					"[event][id]" => "000003"
					"[rsa][message][id1]" => "000003"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000023
		# line in RSA: Detached process login failure, Event time: <fld1>, PID: <process_id_val>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Posix UID: <uid>, Posix GID: <groupid>, Status: <result>, <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Detached process login failure, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid}, Status: %{result}, %{info}" }
				id => "message-000023"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process login failure"
					"[event][id]" => "000023"
					"[rsa][message][id1]" => "000023"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000047
		# line in RSA: Detached process login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], {Terminal name: <terminal>:, Image name: <application>, Posix UID: <uid> |Image name: <application>},
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Detached[\s]+process[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],[\s]+(Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^\s]*)[\s]+|Image[\s]+name:[\s]+(?<application>[^,]*)),$" }
				id => "message-000047"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process login"
					"[event][id]" => "000047"
					"[rsa][message][id1]" => "000047"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000052
		# line in RSA: Detached process logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Detached process logout, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}" }
				id => "message-000052"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process logout"
					"[event][id]" => "000052"
					"[rsa][message][id1]" => "000052"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000053
		# line in RSA: Detached process logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>:, Image name: <application> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Detached process logout, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}:, Image name: %{application}" }
				id => "message-000053"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"hostname" => "%{hhostname}"
				"event_description" => "Detached process logout"
					"[event][id]" => "000053"
					"[rsa][message][id1]" => "000053"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Identifier" {
		# MESSAGE 000004
		# line in RSA: Identifier added, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, {Process owner: [<fld2>], Terminal name: <terminal>, | Process owner: [<fld2>],} Image name: <application>, Identifier name: <fld8>, Identifier value: <fld9>, Attributes: <fld10>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Identifier[\s]+added,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+(Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^,]*),[\s]+|[\s]*Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],)[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Identifier[\s]+name:[\s]+(?<fld8>[^,]*),[\s]+Identifier[\s]+value:[\s]+(?<fld9>[^,]*),[\s]+Attributes:[\s]+(?<fld10>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^\s]*)[\s]+$" }
				id => "message-000004"
				add_field => {
				"ec_subject" => "Process"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "Identifier added"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000024
		# line in RSA: Identifier granted, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Identifier name: <fld8>, Identifier value: <fld9>, Attributes: <fld10>, Holder name: <fld11>, Holder owner: <fld12>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Identifier granted, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Identifier name: %{fld8}, Identifier value: %{fld9}, Attributes: %{fld10}, Holder name: %{fld11}, Holder owner: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000024"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "Identifier granted"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000025
		# line in RSA: Identifier removed, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Identifier name: <fld8>, Identifier value: <fld9>, Attributes: <fld10>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Identifier removed, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Identifier name: %{fld8}, Identifier value: %{fld9}, Attributes: %{fld10}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000025"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "Identifier removed"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Identifier:01
		# line in RSA: Identifier modified, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Image name: <application>, Identifier name: <fld9>, Identifier value: <fld89>, Attributes: <fld10>, New identifier value: <fld11>, Posix UID: <uid>, Posix GID: <groupid>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Identifier modified, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{owner}], Image name: %{application}, Identifier name: %{fld9}, Identifier value: %{fld89}, Attributes: %{fld10}, New identifier value: %{fld11}, Posix UID: %{uid}, Posix GID: %{groupid}," }
				id => "message-Identifier:01"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "Identifier modified"
					"[event][id]" => "Identifier:01"
					"[rsa][message][id1]" => "Identifier:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Local" {
		# MESSAGE 000005
		# line in RSA: Local interactive login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>:, Image name: <application>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Local interactive login, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}:, Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000005"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Local interactive login"
					"[event][id]" => "000005"
					"[rsa][message][id1]" => "000005"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000006
		# line in RSA: Local interactive logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Local interactive logout, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000006"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Local interactive logout"
					"[event][id]" => "000006"
					"[rsa][message][id1]" => "000006"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000026
		# line in RSA: Local interactive login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Terminal name: <terminal>, <fld5>, Status: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Local interactive login failure, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Terminal name: %{terminal}, %{fld5}, Status: %{result}, %{info}" }
				id => "message-000026"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Local interactive login failure"
					"[event][id]" => "000026"
					"[rsa][message][id1]" => "000026"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Network" {
		# MESSAGE 000007
		# line in RSA: Network login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Image name: <application>, Remote node id: <r_hostid>, Remote username: <c_username>, Posix UID: <uid>, {Posix GID: <groupid>,|Posix GID: <groupid>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Network[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Remote[\s]+node[\s]+id:[\s]+(?<r_hostid>[^,]*),[\s]+Remote[\s]+username:[\s]+(?<c_username>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+(Posix[\s]+GID:[\s]+(?<groupid>[^,]*),|Posix[\s]+GID:[\s]+(?<groupid>[^\s]*))[\s]+$" }
				id => "message-000007"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Network login"
					"[event][id]" => "000007"
					"[rsa][message][id1]" => "000007"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000008
		# line in RSA: Network logout, Event time: <fld1>, {PID: <process_id_val>, Process name: <process>|PID: <process_id_val>}, Username: <username>, Process owner: [<owner>], Image name: <application>, Remote node id: <r_hostid>, Remote username: <c_username>, Posix UID: <uid>, {Posix GID: <groupid>,|Posix GID: <groupid>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Network[\s]+logout,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+(PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*)|PID:[\s]+(?<process_id_val>[^,]*)),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Remote[\s]+node[\s]+id:[\s]+(?<r_hostid>[^,]*),[\s]+Remote[\s]+username:[\s]+(?<c_username>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+(Posix[\s]+GID:[\s]+(?<groupid>[^,]*),|Posix[\s]+GID:[\s]+(?<groupid>[^\s]*))[\s]+$" }
				id => "message-000008"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Network logout"
					"[event][id]" => "000008"
					"[rsa][message][id1]" => "000008"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000027
		# line in RSA: Network login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Remote node id: <r_hostid>, Posix UID: <uid>, Posix GID: <groupid> , Status: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network login failure, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Remote node id: %{r_hostid}, Posix UID: %{uid}, Posix GID: %{groupid} , Status: %{result}, %{info}" }
				id => "message-000027"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Network login failure"
					"[event][id]" => "000027"
					"[rsa][message][id1]" => "000027"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000035
		# line in RSA: Network login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Remote nodename: <node>, Remote node id: <r_hostid>, Remote username: <c_username>, Status: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network login failure, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Remote nodename: %{node}, Remote node id: %{r_hostid}, Remote username: %{c_username}, Status: %{result}, %{info}" }
				id => "message-000035"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Network login failure"
					"[event][id]" => "000035"
					"[rsa][message][id1]" => "000035"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000046
		# line in RSA:  Network login, Event time:  <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Terminal name: <terminal>, Image name: <application>, Remote nodename: <node>, Remote node fullname: <fld2>, Remote username: <c_username>, Command line: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network login, Event time:  %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Terminal name: %{terminal}, Image name: %{application}, Remote nodename: %{node}, Remote node fullname: %{fld2}, Remote username: %{c_username}, Command line: %{fld3}" }
				id => "message-000046"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Network login"
					"[event][id]" => "000046"
					"[rsa][message][id1]" => "000046"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Object" {
		# MESSAGE 000042
		# line in RSA:  Object deletion, Event information: <event_description>, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: <owner>, Terminal name: <terminal>:, Image name: <application>, Object class name: <obj_type>, Object owner: [<fld9>], Object protection: <privilege>, OWNER:<fld11>, GROUP:<group>, WORLD:<fld12>, {Directory name: <directory>, Directory ID: (<fld13>), Directory entry: <fld14>|File name: <filename>, File ID: <fld14>}, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld18>, Status: <result>, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Object[\s]+deletion,[\s]+Event[\s]+information:[\s]+(?<event_description>[^,]*),[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+(?<owner>[^,]*),[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+Object[\s]+owner:[\s]+\[(?<fld9>[^\]]*)\],[\s]+Object[\s]+protection:[\s]+(?<privilege>[^,]*),[\s]+OWNER:(?<fld11>[^,]*),[\s]+GROUP:(?<group>[^,]*),[\s]+WORLD:(?<fld12>[^,]*),[\s]+(Directory[\s]+name:[\s]+(?<directory>[^,]*),[\s]+Directory[\s]+ID:[\s]+\((?<fld13>[^\)]*)\),[\s]+Directory[\s]+entry:[\s]+(?<fld14>[^,]*)|File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+File[\s]+ID:[\s]+(?<fld14>[^,]*)),[\s]+Access[\s]+requested:[\s]+(?<action>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+Sequence[\s]+key:[\s]+(?<fld18>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+(?<info>.*)$" }
				id => "message-000042"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "000042"
					"[rsa][message][id1]" => "000042"
					"[event][categoryid]" => "1206020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000009
		# line in RSA:  Object access, Event information: <event_description>, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Terminal name: <terminal>:, Image name: <application>, Object class name: <obj_type>, Object owner: [<user>], Object protection: <privilege>, OWNER:<fld11>, GROUP:<group>, WORLD:<fld12>, {Directory name: <directory>, Directory ID: (<fld13>), Directory entry: <fld14>|File name: <filename>, File ID: <fld14>}, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld18>, Status: <result>, {<info>,|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Object[\s]+access,[\s]+Event[\s]+information:[\s]+(?<event_description>[^,]*),[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+Object[\s]+owner:[\s]+\[(?<user>[^\]]*)\],[\s]+Object[\s]+protection:[\s]+(?<privilege>[^,]*),[\s]+OWNER:(?<fld11>[^,]*),[\s]+GROUP:(?<group>[^,]*),[\s]+WORLD:(?<fld12>[^,]*),[\s]+(Directory[\s]+name:[\s]+(?<directory>[^,]*),[\s]+Directory[\s]+ID:[\s]+\((?<fld13>[^\)]*)\),[\s]+Directory[\s]+entry:[\s]+(?<fld14>[^,]*)|File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+File[\s]+ID:[\s]+(?<fld14>[^,]*)),[\s]+Access[\s]+requested:[\s]+(?<action>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+Sequence[\s]+key:[\s]+(?<fld18>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+((?<info>[^,]*),|(?<info>.*))$" }
				id => "message-000009"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000043:01
		# line in RSA:  Object access, Event information: <event_description>, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Image name: <application>, Object class name: <obj_type>, Object owner: [<user>], Object protection: <privilege>, OWNER:<fld11>, GROUP:<group>, WORLD:<fld12>, {Directory name: <directory>, Directory ID: (<fld13>), Directory entry: <fld14> | File name: <filename>, File ID: <fld14> }, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld18>, Status: <result>, {<info>,|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Object[\s]+access,[\s]+Event[\s]+information:[\s]+(?<event_description>[^,]*),[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+Object[\s]+owner:[\s]+\[(?<user>[^\]]*)\],[\s]+Object[\s]+protection:[\s]+(?<privilege>[^,]*),[\s]+OWNER:(?<fld11>[^,]*),[\s]+GROUP:(?<group>[^,]*),[\s]+WORLD:(?<fld12>[^,]*),[\s]+(Directory[\s]+name:[\s]+(?<directory>[^,]*),[\s]+Directory[\s]+ID:[\s]+\((?<fld13>[^\)]*)\),[\s]+Directory[\s]+entry:[\s]+(?<fld14>[^\s]*)[\s]+|[\s]*File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+File[\s]+ID:[\s]+(?<fld14>[^\s]*)[\s]+),[\s]+Access[\s]+requested:[\s]+(?<action>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+Sequence[\s]+key:[\s]+(?<fld18>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+((?<info>[^,]*),|(?<info>.*))$" }
				id => "message-000043:01"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000043:01"
					"[rsa][message][id1]" => "000043:01"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000043
		# line in RSA:  Object access, Event information: <event_description>, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Object class name: <obj_type>, Object owner: [<user>], Object protection: <privilege>, OWNER:<fld11>, GROUP:<group>, WORLD:<fld12>, {Directory name: <directory>, Directory ID: (<fld13>), Directory entry: <fld14> | File name: <filename>, File ID: <fld14> }, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld18>, Status: <result>, {<info>,|<info>,}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Object[\s]+access,[\s]+Event[\s]+information:[\s]+(?<event_description>[^,]*),[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+Object[\s]+owner:[\s]+\[(?<user>[^\]]*)\],[\s]+Object[\s]+protection:[\s]+(?<privilege>[^,]*),[\s]+OWNER:(?<fld11>[^,]*),[\s]+GROUP:(?<group>[^,]*),[\s]+WORLD:(?<fld12>[^,]*),[\s]+(Directory[\s]+name:[\s]+(?<directory>[^,]*),[\s]+Directory[\s]+ID:[\s]+\((?<fld13>[^\)]*)\),[\s]+Directory[\s]+entry:[\s]+(?<fld14>[^\s]*)[\s]+|[\s]*File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+File[\s]+ID:[\s]+(?<fld14>[^\s]*)[\s]+),[\s]+Access[\s]+requested:[\s]+(?<action>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+Sequence[\s]+key:[\s]+(?<fld18>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+((?<info>[^,]*),|(?<info>[^,]*),)$" }
				id => "message-000043"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000043"
					"[rsa][message][id1]" => "000043"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000010
		# line in RSA: Object access, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Directory name: <directory>, Directory ID: <fld8>, Directory entry: <fld9>, Access requested: <action>, Privileges used: <accesses>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld14>, Status: <result>, <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object access, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Directory name: %{directory}, Directory ID: %{fld8}, Directory entry: %{fld9}, Access requested: %{action}, Privileges used: %{accesses}, Posix UID: %{uid}, Posix GID: %{groupid}, Sequence key: %{fld14}, Status: %{result}, %{info}" }
				id => "message-000010"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000011
		# line in RSA: Object access, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object owner: [<fld8>], Object protection: <privilege>, OWNER:<fld10>, GROUP:<group>, WORLD:<fld11>, File name: <filename>, File ID: <fld12>, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld16>, Status: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object access, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Object owner: [%{fld8}], Object protection: %{privilege}, OWNER:%{fld10}, GROUP:%{group}, WORLD:%{fld11}, File name: %{filename}, File ID: %{fld12}, Access requested: %{action}, Posix UID: %{uid}, Posix GID: %{groupid}, Sequence key: %{fld16}, Status: %{result}, %{info}" }
				id => "message-000011"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "000011"
					"[rsa][message][id1]" => "000011"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000012
		# line in RSA: Object access, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, File name: <filename>, File ID: <fld8>, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, {Deaccess key: <fld55>, Sequence key: <fld12>|Sequence key: <fld12>}, Status: <result>, {<info>,|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Object[\s]+access,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^,]*),[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+File[\s]+ID:[\s]+(?<fld8>[^,]*),[\s]+Access[\s]+requested:[\s]+(?<action>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+(Deaccess[\s]+key:[\s]+(?<fld55>[^,]*),[\s]+Sequence[\s]+key:[\s]+(?<fld12>[^,]*)|Sequence[\s]+key:[\s]+(?<fld12>[^,]*)),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+((?<info>[^,]*),|(?<info>.*))$" }
				id => "message-000012"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000012"
					"[rsa][message][id1]" => "000012"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000036:01
		# line in RSA: Object access, Event time: <fld1>, PID: <process_id_val>ParentPID:<process_id_src>, Process name: <process>Parentprocessname:<process_src>, Username: <username>Parentusername:<c_username>, Process owner: [<owner>], Image name: <application>, Object class name: <obj_type>, File name: <filename>, File ID: <fld8>, Access requested: <action>, Posix UID: <uid> Parent Posix UID:<fld56>, Posix GID: <groupid> Parent Posix GID:<fld55>, Sequence key: <fld12>, Status: <result>, <info>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object access, Event time: %{fld1}, PID: %{process_id_val}ParentPID:%{process_id_src}, Process name: %{process}Parentprocessname:%{process_src}, Username: %{username}Parentusername:%{c_username}, Process owner: [%{owner}], Image name: %{application}, Object class name: %{obj_type}, File name: %{filename}, File ID: %{fld8}, Access requested: %{action}, Posix UID: %{uid} Parent Posix UID:%{fld56}, Posix GID: %{groupid} Parent Posix GID:%{fld55}, Sequence key: %{fld12}, Status: %{result}, %{info}," }
				id => "message-000036:01"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000036:01"
					"[rsa][message][id1]" => "000036:01"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000036
		# line in RSA: Object access, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Image name: <application>, Object class name: <obj_type>, File name: <filename>, File ID: <fld8>, Access requested: <action>, Posix UID: <uid>, Posix GID: <groupid>, Sequence key: <fld12>, Status: <result>, {<info>,|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Object[\s]+access,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+File[\s]+ID:[\s]+(?<fld8>[^,]*),[\s]+Access[\s]+requested:[\s]+(?<action>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+Sequence[\s]+key:[\s]+(?<fld12>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+((?<info>[^,]*),|(?<info>.*))$" }
				id => "message-000036"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000036"
					"[rsa][message][id1]" => "000036"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Object:01
		# line in RSA: Object access, Event time:<fld1>,{PID:<process_id_val>ParentPID:<process_id_src>, Process name:<process>Parentprocessname:<process_src>, Username:<username>Parentusername:<c_username>|PID:<process_id_val>, Process name:<process>, Username:<username>}, Process owner: [<owner>],{Image name:<application>, Object class name:<obj_type>, Directory name:<directory>, Directory ID:<fld9>, Directory entry:<fld10>|Object class name:<obj_type>, File name:<filename>, File ID:<fld9>}, Access requested:<action>, Posix UID:<uid>Parent Posix UID:<fld77>, Posix GID:<groupid>Parent Posix GID:<fld4>,{Deaccess key:<fld17>, Sequence key:<fld18>|Sequence key:<fld18>}, Status:<result>,<info>,
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Object[\s]+access,[\s]+Event[\s]+time:(?<fld1>[^,]*),(PID:(?<process_id_val>[^P]*)ParentPID:(?<process_id_src>[^,]*),[\s]+Process[\s]+name:(?<process>[^P]*)Parentprocessname:(?<process_src>[^,]*),[\s]+Username:(?<username>[^P]*)Parentusername:(?<c_username>[^,]*)|PID:(?<process_id_val>[^,]*),[\s]+Process[\s]+name:(?<process>[^,]*),[\s]+Username:(?<username>[^,]*)),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],(Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*),[\s]+Directory[\s]+name:(?<directory>[^,]*),[\s]+Directory[\s]+ID:(?<fld9>[^,]*),[\s]+Directory[\s]+entry:(?<fld10>[^,]*)|Object[\s]+class[\s]+name:(?<obj_type>[^,]*),[\s]+File[\s]+name:(?<filename>[^,]*),[\s]+File[\s]+ID:(?<fld9>[^,]*)),[\s]+Access[\s]+requested:(?<action>[^,]*),[\s]+Posix[\s]+UID:(?<uid>[^P]*)Parent[\s]+Posix[\s]+UID:(?<fld77>[^,]*),[\s]+Posix[\s]+GID:(?<groupid>[^P]*)Parent[\s]+Posix[\s]+GID:(?<fld4>[^,]*),(Deaccess[\s]+key:(?<fld17>[^,]*),[\s]+Sequence[\s]+key:(?<fld18>[^,]*)|Sequence[\s]+key:(?<fld18>[^,]*)),[\s]+Status:(?<result>[^,]*),(?<info>[^,]*),$" }
				id => "message-Object:01"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "Object:01"
					"[rsa][message][id1]" => "Object:01"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Object:02
		# line in RSA: Object creation, Event time:<fld1>,{PID:<process_id_val>ParentPID:<process_id_src>, Process name:<process>Parentprocessname:<process_src>, Username:<username>Parentusername:<c_username>|PID:<process_id_val>, Process name:<process>, Username:<username>}, Process owner: [<owner>],{Image name:<application>, Object class name:<obj_type>, Directory name:<directory>, Directory ID:<fld9>, Directory entry:<fld10>|Image name:<application>, Object class name:<obj_type>, File name:<filename>, File ID:<fld9>|Object class name:<obj_type>, File name:<filename>, File ID:<fld9>}, Posix UID:<uid>Parent Posix UID:<fld41>, Posix GID:<groupid>Parent Posix GID:<fld4>,{Deaccess key:<fld17>, Sequence key:<fld18>|Sequence key:<fld18>}, Status:<result>,<info>,
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Object[\s]+creation,[\s]+Event[\s]+time:(?<fld1>[^,]*),(PID:(?<process_id_val>[^P]*)ParentPID:(?<process_id_src>[^,]*),[\s]+Process[\s]+name:(?<process>[^P]*)Parentprocessname:(?<process_src>[^,]*),[\s]+Username:(?<username>[^P]*)Parentusername:(?<c_username>[^,]*)|PID:(?<process_id_val>[^,]*),[\s]+Process[\s]+name:(?<process>[^,]*),[\s]+Username:(?<username>[^,]*)),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],(Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*),[\s]+Directory[\s]+name:(?<directory>[^,]*),[\s]+Directory[\s]+ID:(?<fld9>[^,]*),[\s]+Directory[\s]+entry:(?<fld10>[^,]*)|Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*),[\s]+File[\s]+name:(?<filename>[^,]*),[\s]+File[\s]+ID:(?<fld9>[^,]*)|Object[\s]+class[\s]+name:(?<obj_type>[^,]*),[\s]+File[\s]+name:(?<filename>[^,]*),[\s]+File[\s]+ID:(?<fld9>[^,]*)),[\s]+Posix[\s]+UID:(?<uid>[^P]*)Parent[\s]+Posix[\s]+UID:(?<fld41>[^,]*),[\s]+Posix[\s]+GID:(?<groupid>[^P]*)Parent[\s]+Posix[\s]+GID:(?<fld4>[^,]*),(Deaccess[\s]+key:(?<fld17>[^,]*),[\s]+Sequence[\s]+key:(?<fld18>[^,]*)|Sequence[\s]+key:(?<fld18>[^,]*)),[\s]+Status:(?<result>[^,]*),(?<info>[^,]*),$" }
				id => "message-Object:02"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object creation"
					"[event][id]" => "Object:02"
					"[rsa][message][id1]" => "Object:02"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Object:03
		# line in RSA: Object creation, Event time:<fld1>, PID:<process_id_val>, Process name:<process>, Username:<username>, Process owner: [<owner>],{Terminal name:<terminal>, Image name:<application>, Object class name:<obj_type>|Image name:<application>, Object class name:<obj_type>|Terminal name:<terminal>, Object class name:<obj_type>|Object class name:<obj_type>}, File name:<filename>, File ID:<fld8>, Posix UID:<uid>, Posix GID:<groupid>, Deaccess key:<fld17>, Sequence key:<fld18>, Status:<result>,<info>,
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Object[\s]+creation,[\s]+Event[\s]+time:(?<fld1>[^,]*),[\s]+PID:(?<process_id_val>[^,]*),[\s]+Process[\s]+name:(?<process>[^,]*),[\s]+Username:(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],(Terminal[\s]+name:(?<terminal>[^,]*),[\s]+Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*)|Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*)|Terminal[\s]+name:(?<terminal>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*)|Object[\s]+class[\s]+name:(?<obj_type>[^,]*)),[\s]+File[\s]+name:(?<filename>[^,]*),[\s]+File[\s]+ID:(?<fld8>[^,]*),[\s]+Posix[\s]+UID:(?<uid>[^,]*),[\s]+Posix[\s]+GID:(?<groupid>[^,]*),[\s]+Deaccess[\s]+key:(?<fld17>[^,]*),[\s]+Sequence[\s]+key:(?<fld18>[^,]*),[\s]+Status:(?<result>[^,]*),(?<info>[^,]*),$" }
				id => "message-Object:03"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object creation"
					"[event][id]" => "Object:03"
					"[rsa][message][id1]" => "Object:03"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Object:04
		# line in RSA: Object deaccess, Event time:<fld1>, PID:<process_id_val>, Object class name:<obj_type>, Deaccess key:<fld17>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object deaccess, Event time:%{fld1}, PID:%{process_id_val}, Object class name:%{obj_type}, Deaccess key:%{fld17}," }
				id => "message-Object:04"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object deaccess"
					"[event][id]" => "Object:04"
					"[rsa][message][id1]" => "Object:04"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Object:05
		# line in RSA: Object creation, Event information:<event_description>, Event time:<fld1>, PID:<process_id_val>, Process name:<process>, Username:<username>, Process owner: [<owner>],{Terminal name:<terminal>, Image name:<application>, Object class name:<obj_type>|Image name:<application>, Object class name:<obj_type>|Terminal name:<terminal>, Object class name:<obj_type>|Object class name:<obj_type>}, Object owner: [<user>], Object protection: <privilege>, OWNER:<fld11>, GROUP:<group>, WORLD:<fld12>, File name:<filename>, File ID:<fld4>, Posix UID:<uid>, Posix GID:<groupid>, Sequence key:<fld7>, Status:<result>,<info>,
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Object[\s]+creation,[\s]+Event[\s]+information:(?<event_description>[^,]*),[\s]+Event[\s]+time:(?<fld1>[^,]*),[\s]+PID:(?<process_id_val>[^,]*),[\s]+Process[\s]+name:(?<process>[^,]*),[\s]+Username:(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],(Terminal[\s]+name:(?<terminal>[^,]*),[\s]+Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*)|Image[\s]+name:(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*)|Terminal[\s]+name:(?<terminal>[^,]*),[\s]+Object[\s]+class[\s]+name:(?<obj_type>[^,]*)|Object[\s]+class[\s]+name:(?<obj_type>[^,]*)),[\s]+Object[\s]+owner:[\s]+\[(?<user>[^\]]*)\],[\s]+Object[\s]+protection:[\s]+(?<privilege>[^,]*),[\s]+OWNER:(?<fld11>[^,]*),[\s]+GROUP:(?<group>[^,]*),[\s]+WORLD:(?<fld12>[^,]*),[\s]+File[\s]+name:(?<filename>[^,]*),[\s]+File[\s]+ID:(?<fld4>[^,]*),[\s]+Posix[\s]+UID:(?<uid>[^,]*),[\s]+Posix[\s]+GID:(?<groupid>[^,]*),[\s]+Sequence[\s]+key:(?<fld7>[^,]*),[\s]+Status:(?<result>[^,]*),(?<info>[^,]*),$" }
				id => "message-Object:05"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Object creation"
					"[event][id]" => "Object:05"
					"[rsa][message][id1]" => "Object:05"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000045
		# line in RSA: Object access, Event time:  <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Object class name: <obj_type>, File name: <obj_name>, File ID: <fld3>, Access requested: <action>, Privileges used: <accesses>, Sequence key: <fld4>, Status: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object access, Event time:  %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Object class name: %{obj_type}, File name: %{obj_name}, File ID: %{fld3}, Access requested: %{action}, Privileges used: %{accesses}, Sequence key: %{fld4}, Status: %{result}" }
				id => "message-000045"
				add_field => {
				"ec_subject" => "Process"
				"hostname" => "%{hhostname}"
				"event_description" => "Object access"
					"[event][id]" => "000045"
					"[rsa][message][id1]" => "000045"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000051
		# line in RSA: Object deletion, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: <owner>, Image name: <application>, Object class name: <obj_type>, File name: <filename>, File ID: <fld14>, Access requested: <action>, Sequence key: <fld18>, Status: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object deletion, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: %{owner}, Image name: %{application}, Object class name: %{obj_type}, File name: %{filename}, File ID: %{fld14}, Access requested: %{action}, Sequence key: %{fld18}, Status: %{result}" }
				id => "message-000051"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "000051"
					"[rsa][message][id1]" => "000051"
					"[event][categoryid]" => "1206020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000054
		# line in RSA: Object access, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Object class name: <obj_type>, File name: <filename>, File ID: <fld8>, Access requested: <action>, Sequence key: <fld12>, Status: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Object access, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Object class name: %{obj_type}, File name: %{filename}, File ID: %{fld8}, Access requested: %{action}, Sequence key: %{fld12}, Status: %{result}, %{info}" }
				id => "message-000054"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "000054"
					"[rsa][message][id1]" => "000054"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: Privilege used, Event information:<event_description>, Event time:<fld1>, PID:<process_id_val>, Process name:<process>, Username:<username>, Process owner: [<owner>], Image name:<application>, Privileges used:<privilege>, Posix UID:<uid>, Posix GID:<groupid>,
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "Privilege used, Event information:%{event_description}, Event time:%{fld1}, PID:%{process_id_val}, Process name:%{process}, Username:%{username}, Process owner: [%{owner}], Image name:%{application}, Privileges used:%{privilege}, Posix UID:%{uid}, Posix GID:%{groupid}," }
			id => "msgParserId34"
			add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Privilege used"
				"[logstash][fullDateTimeString]" => "%{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Remote" {
		# MESSAGE Remote:01
		# line in RSA: Remote interactive breakin detection, Event time:<fld1>, PID:<process_id_val>, Process name:<process>, Username:<username>, Password:<fld19>, Terminal name:<terminal>,<fld5>, Host:<fqdn>Port:<network_port>, Remote nodename:<node>, Remote node id:<r_hostid>, Remote username:<c_username>, Status:<result>,<info>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Remote interactive breakin detection, Event time:%{fld1}, PID:%{process_id_val}, Process name:%{process}, Username:%{username}, Password:%{fld19}, Terminal name:%{terminal},%{fld5}, Host:%{fqdn}Port:%{network_port}, Remote nodename:%{node}, Remote node id:%{r_hostid}, Remote username:%{c_username}, Status:%{result},%{info}," }
				id => "message-Remote:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive breakin detection"
					"[event][id]" => "Remote:01"
					"[rsa][message][id1]" => "Remote:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000013
		# line in RSA: Remote interactive login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Terminal name: <terminal>, <fld5>, Host: <fqdn> {Port: <network_port>, Remote nodename:|, Remote nodename:} <node>, Remote node id: <r_hostid>, Remote username: <c_username>, Status: <result>, {<info>,|<info>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Remote[\s]+interactive[\s]+login[\s]+failure,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^,]*),[\s]+(?<fld5>[^,]*),[\s]+Host:[\s]+(?<fqdn>[^\s]*)[\s]+(Port:[\s]+(?<network_port>[^,]*),[\s]+Remote[\s]+nodename:|,[\s]+Remote[\s]+nodename:)[\s]+(?<node>[^,]*),[\s]+Remote[\s]+node[\s]+id:[\s]+(?<r_hostid>[^,]*),[\s]+Remote[\s]+username:[\s]+(?<c_username>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*),[\s]+((?<info>[^,]*),|(?<info>[^\s]*))[\s]+$" }
				id => "message-000013"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive login failure"
					"[event][id]" => "000013"
					"[rsa][message][id1]" => "000013"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000014
		# line in RSA: Remote interactive login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Terminal name: <terminal>, Host: <fqdn> Port: <network_port>, Image name: <application>, Remote node id: <r_hostid>, Remote username: <c_username>, { Posix UID: <uid>, Posix GID: <groupid>, Status: <result>| Status: <result>}, {<info>,|<info>}  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Remote[\s]+interactive[\s]+login[\s]+failure,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^,]*),[\s]+Host:[\s]+(?<fqdn>[^\s]*)[\s]+Port:[\s]+(?<network_port>[^,]*),[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Remote[\s]+node[\s]+id:[\s]+(?<r_hostid>[^,]*),[\s]+Remote[\s]+username:[\s]+(?<c_username>[^,]*),[\s]+([\s]*Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^,]*),[\s]+Status:[\s]+(?<result>[^,]*)|[\s]*Status:[\s]+(?<result>[^,]*)),[\s]+((?<info>[^,]*),|(?<info>[^\s]*))[\s]+$" }
				id => "message-000014"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive login failure"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000028
		# line in RSA: Remote interactive login failure, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Host: <fqdn> Port: <network_port>, Image name: <application>, Posix UID: <uid>, Posix GID: <groupid>, Status: <result>, <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Remote interactive login failure, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Host: %{fqdn} Port: %{network_port}, Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid}, Status: %{result}, %{info}" }
				id => "message-000028"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive login failure"
					"[event][id]" => "000028"
					"[rsa][message][id1]" => "000028"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000041
		# line in RSA: Remote interactive login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>:, Host: <fqdn> Port: <network_port>, Image name: <application>, Remote node id: <r_hostid>, Remote node fullname: <fld8>, Remote username: <c_username>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Remote interactive login, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}:, Host: %{fqdn} Port: %{network_port}, Image name: %{application}, Remote node id: %{r_hostid}, Remote node fullname: %{fld8}, Remote username: %{c_username}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000041"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive login"
					"[event][id]" => "000041"
					"[rsa][message][id1]" => "000041"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000015
		# line in RSA: Remote interactive login, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Terminal name: <terminal>:, Host: <fqdn> {Locn: <location_desc>|Port: <network_port>}, Image name: <application>, Remote node id: <r_hostid>, Remote username: <c_username>, Posix UID: <uid>, {Posix GID: <groupid>,|Posix GID: <groupid>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Remote[\s]+interactive[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Host:[\s]+(?<fqdn>[^\s]*)[\s]+(Locn:[\s]+(?<location_desc>[^,]*)|Port:[\s]+(?<network_port>[^,]*)),[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Remote[\s]+node[\s]+id:[\s]+(?<r_hostid>[^,]*),[\s]+Remote[\s]+username:[\s]+(?<c_username>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+(Posix[\s]+GID:[\s]+(?<groupid>[^,]*),|Posix[\s]+GID:[\s]+(?<groupid>[^\s]*))[\s]+$" }
				id => "message-000015"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive login"
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000016
		# line in RSA: Remote interactive logout, Event time: <fld1>, PID: <process_id_val>, {Process name: <process>, Username: <username>|Username: <username>}, Process owner: [<owner>], Terminal name: <terminal>:, Host: <fqdn> {Locn: <location_desc>|Port: <network_port>}, Image name: <application>, Remote node id: <r_hostid>, Remote username: <c_username>, Posix UID: <uid>, {Posix GID: <groupid>,|Posix GID: <groupid>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Remote[\s]+interactive[\s]+logout,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+(Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*)|Username:[\s]+(?<username>[^,]*)),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^:]*):,[\s]+Host:[\s]+(?<fqdn>[^\s]*)[\s]+(Locn:[\s]+(?<location_desc>[^,]*)|Port:[\s]+(?<network_port>[^,]*)),[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Remote[\s]+node[\s]+id:[\s]+(?<r_hostid>[^,]*),[\s]+Remote[\s]+username:[\s]+(?<c_username>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+(Posix[\s]+GID:[\s]+(?<groupid>[^,]*),|Posix[\s]+GID:[\s]+(?<groupid>[^\s]*))[\s]+$" }
				id => "message-000016"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Remote interactive logout"
					"[event][id]" => "000016"
					"[rsa][message][id1]" => "000016"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: Security audit state set, Event time: <fld1>, PID: <process_id_val>, Username: <username>, <info> 
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Security audit state set, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}, %{info}" }
			id => "msgParserId42"
			add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "Security audit state set"
				"[logstash][fullDateTimeString]" => "%{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE 000018
		# line in RSA: Server thread logout, Event time: <fld1>, PID: <process_id_val>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server thread logout, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000018"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Server thread logout"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Server:01
		# line in RSA: Server thread logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<owner>], Posix UID: <uid>, Posix GID: <groupid>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server thread logout, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{owner}], Posix UID: %{uid}, Posix GID: %{groupid}," }
				id => "message-Server:01"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Server thread logout"
					"[event][id]" => "Server:01"
					"[rsa][message][id1]" => "Server:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000050
		# line in RSA: Server thread logout, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server thread logout, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}" }
				id => "message-000050"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"event_description" => "Server thread logout"
					"[event][id]" => "000050"
					"[rsa][message][id1]" => "000050"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Subprocess" {
		# MESSAGE 000022
		# line in RSA: Subprocess or pipe subprocess login, Event time: <fld1>, {PID: <process_id_val> Parent PID:<process_id_src>, Process name: <process>Parent process name:<process_src>|PID: <process_id_val>, Process name: <process>}, Username: <username> { Parent username: | Parentusername: }<agent>, Process owner: [<owner>], Image name: <application>, Posix UID: <uid> Parent Posix UID: <fld3>, Posix GID: <groupid> Parent Posix GID: <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Subprocess[\s]+or[\s]+pipe[\s]+subprocess[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+(PID:[\s]+(?<process_id_val>[^\s]*)[\s]+Parent[\s]+PID:(?<process_id_src>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^P]*)Parent[\s]+process[\s]+name:(?<process_src>[^,]*)|PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*)),[\s]+Username:[\s]+(?<username>[^\s]*)[\s]+([\s]*Parent[\s]+username:[\s]+|[\s]*Parentusername:[\s]+)(?<agent>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^\s]*)[\s]+Parent[\s]+Posix[\s]+UID:[\s]+(?<fld3>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^\s]*)[\s]+Parent[\s]+Posix[\s]+GID:[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-000022"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Subprocess or pipe subprocess login"
				"c_username" => "%{agent}"
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE Subprocess:01
		# line in RSA: Subprocess or pipe subprocess logout, Event time:<fld1>, PID: <process_id_val>ParentPID:<process_id_src>, Process name: <process>Parentprocessname:<process_src>, Username: <username>Parentusername:<c_username>, Process owner: [<fld8>], Image name: <application>, Posix UID: <uid> Parent Posix UID:<fld9>, Posix GID: <groupid> Parent Posix GID: <fld11>,
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Subprocess or pipe subprocess logout, Event time:%{fld1}, PID: %{process_id_val}ParentPID:%{process_id_src}, Process name: %{process}Parentprocessname:%{process_src}, Username: %{username}Parentusername:%{c_username}, Process owner: [%{fld8}], Image name: %{application}, Posix UID: %{uid} Parent Posix UID:%{fld9}, Posix GID: %{groupid} Parent Posix GID: %{fld11}," }
				id => "message-Subprocess:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Subprocess or pipe subprocess logout"
					"[event][id]" => "Subprocess:01"
					"[rsa][message][id1]" => "Subprocess:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000048
		# line in RSA: Subprocess or pipe subprocess login, Event time: <fld1>, {PID:<process_id_val>ParentPID:<process_id_src>, Process name:<process>Parentprocessname:<process_src>, Username:<username>Parentusername:<c_username>|PID:<process_id_val>, Process name:<process>, Username:<username>}, Process owner: [<owner>], Image name: <application> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Subprocess[\s]+or[\s]+pipe[\s]+subprocess[\s]+login,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+(PID:(?<process_id_val>[^P]*)ParentPID:(?<process_id_src>[^,]*),[\s]+Process[\s]+name:(?<process>[^P]*)Parentprocessname:(?<process_src>[^,]*),[\s]+Username:(?<username>[^P]*)Parentusername:(?<c_username>[^,]*)|PID:(?<process_id_val>[^,]*),[\s]+Process[\s]+name:(?<process>[^,]*),[\s]+Username:(?<username>[^,]*)),[\s]+Process[\s]+owner:[\s]+\[(?<owner>[^\]]*)\],[\s]+Image[\s]+name:[\s]+(?<application>[^\s]*)[\s]+$" }
				id => "message-000048"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"event_description" => "Subprocess or pipe subprocess login"
					"[event][id]" => "000048"
					"[rsa][message][id1]" => "000048"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE 000019
		# line in RSA: System UAF record addition, Event time: <fld1>, PID: <process_id_val>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>;1, User record: <fld8>, Account: New: <fld9>, Original:<fld10>, Password Date: New: <fld11>, Original: <fld12>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record addition, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name};1, User record: %{fld8}, Account: New: %{fld9}, Original:%{fld10}, Password Date: New: %{fld11}, Original: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000019"
				add_field => {
				"ec_subject" => "Process"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record addition"
					"[event][id]" => "000019"
					"[rsa][message][id1]" => "000019"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000020
		# line in RSA: System UAF record copied, Event time: <fld1>, PID: <process_id_val>, Process name:  <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: New: <fld8>, Original: <fld9>, Password Date: New: <fld11>, Original: <fld12>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record copied, Event time: %{fld1}, PID: %{process_id_val}, Process name:  %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name}, User record: New: %{fld8}, Original: %{fld9}, Password Date: New: %{fld11}, Original: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000020"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record copied"
					"[event][id]" => "000020"
					"[rsa][message][id1]" => "000020"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000029
		# line in RSA: System UAF record copied, Event time: <fld1>, PID: <process_id_val>, Process name:  <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: New: <fld8>,  Original: <fld9>, {Account: New: <fld10>,  Original: <fld11>, Default Directory: New: <fld12>, | Default Directory: New: <fld12>,}  Original: [<fld13>], Owner: New: <fld23>,  Original: <fld24>, UIC: New: <fld14>,  Original: [<fld15>], Password Date: New: <fld18>,  Original: <fld19>, Password: New: <fld20>,  Original: <fld21>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^System[\s]+UAF[\s]+record[\s]+copied,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^,]*),[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+Object[\s]+name:[\s]+(?<obj_name>[^,]*),[\s]+User[\s]+record:[\s]+New:[\s]+(?<fld8>[^,]*),[\s]+Original:[\s]+(?<fld9>[^,]*),[\s]+(Account:[\s]+New:[\s]+(?<fld10>[^,]*),[\s]+Original:[\s]+(?<fld11>[^,]*),[\s]+Default[\s]+Directory:[\s]+New:[\s]+(?<fld12>[^,]*),[\s]+|[\s]*Default[\s]+Directory:[\s]+New:[\s]+(?<fld12>[^,]*),)[\s]+Original:[\s]+\[(?<fld13>[^\]]*)\],[\s]+Owner:[\s]+New:[\s]+(?<fld23>[^,]*),[\s]+Original:[\s]+(?<fld24>[^,]*),[\s]+UIC:[\s]+New:[\s]+(?<fld14>[^,]*),[\s]+Original:[\s]+\[(?<fld15>[^\]]*)\],[\s]+Password[\s]+Date:[\s]+New:[\s]+(?<fld18>[^,]*),[\s]+Original:[\s]+(?<fld19>[^,]*),[\s]+Password:[\s]+New:[\s]+(?<fld20>[^,]*),[\s]+Original:[\s]+(?<fld21>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^\s]*)[\s]+$" }
				id => "message-000029"
				add_field => {
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record copied"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000021
		# line in RSA: System UAF record modification, Event time: <fld1>, PID: <process_id_val>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: <fld8>, Password Date: New: <fld11>, Original: <fld12>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record modification, Event time: %{fld1}, PID: %{process_id_val}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name}, User record: %{fld8}, Password Date: New: %{fld11}, Original: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000021"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record modification"
					"[event][id]" => "000021"
					"[rsa][message][id1]" => "000021"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000030
		# line in RSA: System UAF record modification, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: <fld8>, Password Date: New: <fld11>,  Original: <fld12>, Password: New: <fld13>,  { Original: <fld14>, Posix UID: <uid>, Posix GID: <groupid> | Original: <fld14> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^System[\s]+UAF[\s]+record[\s]+modification,[\s]+Event[\s]+time:[\s]+(?<fld1>[^,]*),[\s]+PID:[\s]+(?<process_id_val>[^,]*),[\s]+Process[\s]+name:[\s]+(?<process>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Process[\s]+owner:[\s]+\[(?<fld2>[^\]]*)\],[\s]+Terminal[\s]+name:[\s]+(?<terminal>[^,]*),[\s]+Image[\s]+name:[\s]+(?<application>[^,]*),[\s]+Object[\s]+class[\s]+name:[\s]+(?<obj_type>[^,]*),[\s]+Object[\s]+name:[\s]+(?<obj_name>[^,]*),[\s]+User[\s]+record:[\s]+(?<fld8>[^,]*),[\s]+Password[\s]+Date:[\s]+New:[\s]+(?<fld11>[^,]*),[\s]+Original:[\s]+(?<fld12>[^,]*),[\s]+Password:[\s]+New:[\s]+(?<fld13>[^,]*),[\s]+([\s]*Original:[\s]+(?<fld14>[^,]*),[\s]+Posix[\s]+UID:[\s]+(?<uid>[^,]*),[\s]+Posix[\s]+GID:[\s]+(?<groupid>[^\s]*)[\s]+|[\s]*Original:[\s]+(?<fld14>[^\s]*)[\s]+)[\s]+$" }
				id => "message-000030"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record modification"
					"[event][id]" => "000030"
					"[rsa][message][id1]" => "000030"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000044
		# line in RSA: System UAF record modification, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: <fld8>, Password Date: New: <fld11>,  Original: <fld12>, Password: New: <fld13>,  Original: <fld14>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record modification, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name}, User record: %{fld8}, Password Date: New: %{fld11},  Original: %{fld12}, Password: New: %{fld13},  Original: %{fld14}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000044"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record modification"
					"[event][id]" => "000044"
					"[rsa][message][id1]" => "000044"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000032
		# line in RSA: System UAF record modification, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: <fld8>, PGFLQUOTA: New: <fld11>,  Original: <fld12>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record modification, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name}, User record: %{fld8}, PGFLQUOTA: New: %{fld11},  Original: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000032"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record modification"
					"[event][id]" => "000032"
					"[rsa][message][id1]" => "000032"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000034
		# line in RSA: System UAF record modification, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Terminal name: <terminal>, Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: <fld8>, Default privileges: New: <fld11>,  Original: <fld12>, Posix UID: <uid>, Posix GID: <groupid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record modification, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Terminal name: %{terminal}, Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name}, User record: %{fld8}, Default privileges: New: %{fld11},  Original: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}" }
				id => "message-000034"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record modification"
					"[event][id]" => "000034"
					"[rsa][message][id1]" => "000034"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000040
		# line in RSA: System UAF record modification, Event time: <fld1>, PID: <process_id_val>, Process name: <process>, Username: <username>, Process owner: [<fld2>], Image name: <application>, Object class name: <obj_type>, Object name: <obj_name>, User record: <fld8>, Flags: New: <fld11>,  Original: <fld12>, Posix UID: <uid>, Posix GID: <groupid>, 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System UAF record modification, Event time: %{fld1}, PID: %{process_id_val}, Process name: %{process}, Username: %{username}, Process owner: [%{fld2}], Image name: %{application}, Object class name: %{obj_type}, Object name: %{obj_name}, User record: %{fld8}, Flags: New: %{fld11},  Original: %{fld12}, Posix UID: %{uid}, Posix GID: %{groupid}," }
				id => "message-000040"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"event_description" => "System UAF record modification"
					"[event][id]" => "000040"
					"[rsa][message][id1]" => "000040"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_openvmsmsg.json"
#			template_name => "openvms_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
