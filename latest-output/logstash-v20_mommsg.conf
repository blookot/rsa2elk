# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "mom"
			"[observer][name]" => "Microsoft Operations Manager"
			"[observer][type]" => "Configuration Management"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %NICWIN-<level>-<messageid>: Operations Manager,<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NICWIN\-(?<level>[^\-]*)\-(?<message>(?<messageid>[^:]*):[\s]+Operations[\s]+Manager,(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %NICWIN-<level>-<messageid>: Application,<hnumber>,<hday> <hdatetime>,<hevent_id>,Microsoft Operations Manager,<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NICWIN\-(?<level>[^\-]*)\-(?<message>(?<messageid>[^:]*):[\s]+Application,(?<hnumber>[^,]*),(?<hday>[^\s]*)[\s]+(?<hdatetime>[^,]*),(?<hevent_id>[^,]*),Microsoft[\s]+Operations[\s]+Manager,(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_mommsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> with the following command line. "<fld5>"
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} with the following command line. \"%{fld5}\"" }
			id => "msgParserId0"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId1"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId2"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> on remote computer <dhost>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} on remote computer %{dhost}" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "Agent"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> corresponding to a host name \"<shost>\" from a host database. Error Code: <resultcode>  Error Description: <result>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} corresponding to a host name \\"%{shost}\\" from a host database. Error Code: %{resultcode}  Error Description: %{result}" }
			id => "msgParserId4"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> in \"<fld5>\" on MOM Server \"<fld6>\" for Management Group \"<group>\"
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} in \\"%{fld5}\\" on MOM Server \\"%{fld6}\\" for Management Group \\"%{group}\\"" }
			id => "msgParserId5"
			add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId6"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> in \"<fld13>\" on MOM Server \"<fld14>\" for Management Group \"<group>\"
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} in \\"%{fld13}\\" on MOM Server \\"%{fld14}\\" for Management Group \\"%{group}\\"" }
			id => "msgParserId7"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId8"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> machine \"<dhost>\". This could be a <info>. Error Message: \"<result>\"
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} machine \\"%{dhost}\\". This could be a %{info}. Error Message: \\"%{result}\\"" }
			id => "msgParserId9"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> on remote computer <dhost>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} on remote computer %{dhost}" }
			id => "msgParserId10"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description>. Management Group: <group> 
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}. Management Group: %{group}" }
			id => "msgParserId11"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> 
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId12"
			add_field => {
				"ec_subject" => "Database"
				"ec_activity" => "Start"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> 
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId13"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Management group: <group> 
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Management group: %{group}" }
			id => "msgParserId14"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Error Description: <result> 
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Error Description: %{result}" }
			id => "msgParserId15"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Management group: <group> 
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Management group: %{group}" }
			id => "msgParserId16"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Management group: <group> 
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Management group: %{group}" }
			id => "msgParserId17"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description>The following error(s) were encountered: Exception Message:<result>  Management group: <group> 
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}The following error(s) were encountered: Exception Message:%{result}  Management group: %{group}" }
			id => "msgParserId18"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> 
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId19"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId20
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Management group: <group>  
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Management group: %{group}" }
			id => "msgParserId20"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId21
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Exception <result>Management group: <group> 
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Exception %{result}Management group: %{group}" }
			id => "msgParserId21"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId22
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> with error <result>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} with error %{result}" }
			id => "msgParserId22"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId23
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Management Group: <group> <info>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Management Group: %{group} %{info}" }
			id => "msgParserId23"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId24
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> 
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId24"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> following exception <result>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} following exception %{result}" }
			id => "msgParserId25"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Message: <result>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Message: %{result}" }
			id => "msgParserId26"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> Error Message: <result> 
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description} Error Message: %{result}" }
			id => "msgParserId27"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId28
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> 
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId28"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId29
	# line in RSA: <fld8>: <event_log>,<fld10>,<fld2> <fld3>,<id>,<event_source>,<username>,<severity>,<hostname>,<category>,<fld4>,<event_description> 
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{fld8}: %{event_log},%{fld10},%{fld2} %{fld3},%{id},%{event_source},%{username},%{severity},%{hostname},%{category},%{fld4},%{event_description}" }
			id => "msgParserId29"
			add_field => {
				"ec_subject" => "Service"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_mommsg.json"
#			template_name => "mom_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
