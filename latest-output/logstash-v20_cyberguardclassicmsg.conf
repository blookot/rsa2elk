# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}



# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <month> <day> <time> unix: CA: fw=<hname> time="<date> <htime>" pri=<level> seq=<hcount> event=<messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} unix: CA: fw=%{hname} time=\"%{date} %{htime}\" pri=%{level} seq=%{hcount} event=%{messageid} %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <month> <day> <time> auditlogd: id=<messageid> time="<timestamp>" fw=<hname> pri=<level> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} auditlogd: id=%{messageid} time=\"%{timestamp}\" fw=%{hname} pri=%{level} %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <month> <day> <time> auditlogd: Alert: <messageid> Time: <date> <htime> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} auditlogd: Alert: %{messageid} Time: %{date} %{htime} %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <month> <day> <time> auditlogd: Activity: <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} auditlogd: Activity: %{messageid} %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_cyberguardclassicmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "1" {
		# MESSAGE DirectLogin
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@result:*successfaillookup(result)> <@username:*RMQ(username)> <@info:*successfaillookup(info)><@ec_subject:User><@ec_activity:Logon><@ec_theme:Authentication> user=<username> status=<result> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "user=%{username} status=%{result} msg=%{info}" }
				id => "message-DirectLogin"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "DirectLogin"
					"[rsa][message][id1]" => "DirectLogin"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ProxyAuthentication
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@result:*successfaillookup(result)> <@username:*RMQ(username)> <@info:*successfaillookup(info)> user=<username> src=<fld2> status=<result> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "user=%{username} src=%{fld2} status=%{result} msg=%{info}" }
				id => "message-ProxyAuthentication"
				add_field => {
					"[event][id]" => "ProxyAuthentication"
					"[rsa][message][id1]" => "ProxyAuthentication"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: <@daddr:*CNVTIP(fld1)><@saddr:*CNVTIP(fld2)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@sinterface:*RMQ(sinterface)> <@dinterface:*RMQ(dinterface)><@ec_theme:Communication> protocol=<protocol> src=<fld2> dst=<fld1> srcport=<sport> dstport=<dport> sent=<sbytes> rcvd=<rbytes> duration=<duration> srcintfc=<sinterface> dstintfc=<dinterface> oper=<fld10>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "protocol=%{protocol} src=%{fld2} dst=%{fld1} srcport=%{sport} dstport=%{dport} sent=%{sbytes} rcvd=%{rbytes} duration=%{duration} srcintfc=%{sinterface} dstintfc=%{dinterface} oper=%{fld10}" }
			id => "msgParserId2"
			add_field => {
				"ec_theme" => "Communication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@result:*successfaillookup(result)> <@username:*RMQ(username)> <@info:*RMQ(info)><@ec_subject:Password><@ec_activity:Modify><@ec_theme:Password><@ec_outcome:Success> user=<username> status=<result> msg=<info>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "user=%{username} status=%{result} msg=%{info}" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "4" {
		# MESSAGE Start
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> subevt=1 user=<username> status=<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=1 user=%{username} status=%{result}" }
				id => "message-Start"
				add_field => {
					"[event][id]" => "Start"
					"[rsa][message][id1]" => "Start"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Stop
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> subevt=2 user=<username> status=<result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=2 user=%{username} status=%{result}" }
				id => "message-Stop"
				add_field => {
					"[event][id]" => "Stop"
					"[rsa][message][id1]" => "Stop"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Configure
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=3 user=<username> status=<result> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=3 user=%{username} status=%{result} msg=%{info}" }
				id => "message-Configure"
				add_field => {
					"[event][id]" => "Configure"
					"[rsa][message][id1]" => "Configure"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Signal
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=4 user=<username> status=<result> msg=<info> pid=<process_id> process=<process> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=4 user=%{username} status=%{result} msg=%{info} pid=%{process_id} process=%{process}" }
				id => "message-Signal"
				add_field => {
					"[event][id]" => "Signal"
					"[rsa][message][id1]" => "Signal"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Execute
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=5 user=<username> status=<result> msg=<info> pid=<process_id> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=5 user=%{username} status=%{result} msg=%{info} pid=%{process_id}" }
				id => "message-Execute"
				add_field => {
					"[event][id]" => "Execute"
					"[rsa][message][id1]" => "Execute"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Duty
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=6 user=<username> status=<result> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=6 user=%{username} status=%{result} msg=%{info}" }
				id => "message-Duty"
				add_field => {
					"[event][id]" => "Duty"
					"[rsa][message][id1]" => "Duty"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "5" {
		# MESSAGE AuditingDisabled
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> subevt=27 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=27" }
				id => "message-AuditingDisabled"
				add_field => {
					"[event][id]" => "AuditingDisabled"
					"[rsa][message][id1]" => "AuditingDisabled"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileAccess
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@result:*granteddeniedlookup(result)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=1 user=<username> pid=<process_id> sid=<fld12> msg=<info> status=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=1 user=%{username} pid=%{process_id} sid=%{fld12} msg=%{info} status=%{result}" }
				id => "message-FileAccess"
				add_field => {
					"[event][id]" => "FileAccess"
					"[rsa][message][id1]" => "FileAccess"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FileTransmissionBlocked
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=2 msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=2 msg=%{info}" }
				id => "message-FileTransmissionBlocked"
				add_field => {
					"[event][id]" => "FileTransmissionBlocked"
					"[rsa][message][id1]" => "FileTransmissionBlocked"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DiskPartitionFull
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=3 msg=<info> util=<fld11> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=3 msg=%{info} util=%{fld11}" }
				id => "message-DiskPartitionFull"
				add_field => {
					"[event][id]" => "DiskPartitionFull"
					"[rsa][message][id1]" => "DiskPartitionFull"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE FailedLoginAttempt
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> <@info:*successfaillookup(info)><@ec_subject:User><@ec_activity:Logon><@ec_theme:Authentication><@ec_outcome:Failure> subevt=4 user=<username> src=<fld2> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=4 user=%{username} src=%{fld2} msg=%{info}" }
				id => "message-FailedLoginAttempt"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "FailedLoginAttempt"
					"[rsa][message][id1]" => "FailedLoginAttempt"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NumberOfLicensedHostsExceeded
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)>subevt=5 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=5" }
				id => "message-NumberOfLicensedHostsExceeded"
				add_field => {
					"[event][id]" => "NumberOfLicensedHostsExceeded"
					"[rsa][message][id1]" => "NumberOfLicensedHostsExceeded"
					"[event][categoryid]" => "1608010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PacketForwardingAttack
		# line in RSA: <@daddr:*CNVTIP(fld1)><@saddr:*CNVTIP(fld2)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@sinterface:*RMQ(sinterface)> <@dinterface:*RMQ(dinterface)> subevt=6 src=<fld2> dst=<fld1> srcintfc=<sinterface> dstintfc=<dinterface> protocol=<protocol> srcport=<sport> dstport=<dport> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=6 src=%{fld2} dst=%{fld1} srcintfc=%{sinterface} dstintfc=%{dinterface} protocol=%{protocol} srcport=%{sport} dstport=%{dport} msg=%{info}" }
				id => "message-PacketForwardingAttack"
				add_field => {
					"[event][id]" => "PacketForwardingAttack"
					"[rsa][message][id1]" => "PacketForwardingAttack"
					"[event][categoryid]" => "1001020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LANDAttack
		# line in RSA: <@daddr:*CNVTIP(fld1)><@saddr:*CNVTIP(fld2)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@sinterface:*RMQ(sinterface)> <@dinterface:*RMQ(dinterface)> subevt=7 src=<fld2> dst=<fld1> srcintfc=<sinterface> dstintfc=<dinterface> protocol=<protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=7 src=%{fld2} dst=%{fld1} srcintfc=%{sinterface} dstintfc=%{dinterface} protocol=%{protocol}" }
				id => "message-LANDAttack"
				add_field => {
					"[event][id]" => "LANDAttack"
					"[rsa][message][id1]" => "LANDAttack"
					"[event][categoryid]" => "1001020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PingOfDeathAttack
		# line in RSA: <@daddr:*CNVTIP(fld1)><@saddr:*CNVTIP(fld2)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@sinterface:*RMQ(sinterface)> <@dinterface:*RMQ(dinterface)> subevt=8 src=<fld2> dst=<fld1> srcintfc=<sinterface> dstintfc=<dinterface> protocol=<protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=8 src=%{fld2} dst=%{fld1} srcintfc=%{sinterface} dstintfc=%{dinterface} protocol=%{protocol}" }
				id => "message-PingOfDeathAttack"
				add_field => {
					"[event][id]" => "PingOfDeathAttack"
					"[rsa][message][id1]" => "PingOfDeathAttack"
					"[event][categoryid]" => "1002040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AuditArchive
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=15 msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=15 msg=%{info}" }
				id => "message-AuditArchive"
				add_field => {
					"[event][id]" => "AuditArchive"
					"[rsa][message][id1]" => "AuditArchive"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PlatformSensorFailure
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=16 msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=16 msg=%{info}" }
				id => "message-PlatformSensorFailure"
				add_field => {
					"[event][id]" => "PlatformSensorFailure"
					"[rsa][message][id1]" => "PlatformSensorFailure"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE VirusUpdate
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=18 msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=18 msg=%{info}" }
				id => "message-VirusUpdate"
				add_field => {
					"[event][id]" => "VirusUpdate"
					"[rsa][message][id1]" => "VirusUpdate"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE HAStandbyDown
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=25 msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=25 msg=%{info}" }
				id => "message-HAStandbyDown"
				add_field => {
					"[event][id]" => "HAStandbyDown"
					"[rsa][message][id1]" => "HAStandbyDown"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CM/H_DiskFull
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@info:*RMQ(info)> subevt=26 msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=26 msg=%{info}" }
				id => "message-CM/H_DiskFull"
				add_field => {
					"[event][id]" => "CM/H_DiskFull"
					"[rsa][message][id1]" => "CM/H_DiskFull"
					"[event][categoryid]" => "1603010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE IPInterfaceSpoofingAttempt
		# line in RSA: <@daddr:*CNVTIP(fld1)><@saddr:*CNVTIP(fld2)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@sinterface:*RMQ(sinterface)> <@dinterface:*RMQ(dinterface)> <@info:*RMQ(info)> subevt=9 protocol=<protocol> src=<fld2> dst=<fld1> srcport=<sport> dstport=<dport> srcintfc=<sinterface> dstintfc=<dinterface> msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=9 protocol=%{protocol} src=%{fld2} dst=%{fld1} srcport=%{sport} dstport=%{dport} srcintfc=%{sinterface} dstintfc=%{dinterface} msg=%{info}" }
				id => "message-IPInterfaceSpoofingAttempt"
				add_field => {
					"[event][id]" => "IPInterfaceSpoofingAttempt"
					"[rsa][message][id1]" => "IPInterfaceSpoofingAttempt"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PortScanAttempt
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> subevt=10 src=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=10 src=%{fld2}" }
				id => "message-PortScanAttempt"
				add_field => {
					"[event][id]" => "PortScanAttempt"
					"[rsa][message][id1]" => "PortScanAttempt"
					"[event][categoryid]" => "1103000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE MACViolation
		# line in RSA: <@daddr:*CNVTIP(fld1)><@saddr:*CNVTIP(fld2)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@dinterface:*RMQ(dinterface)> <@info:*RMQ(info)> subevt=11 src=<fld2> dst=<fld1> sdstintfc=<dinterface> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=11 src=%{fld2} dst=%{fld1} sdstintfc=%{dinterface} msg=%{info}" }
				id => "message-MACViolation"
				add_field => {
					"[event][id]" => "MACViolation"
					"[rsa][message][id1]" => "MACViolation"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TCPSYNFloodAttack
		# line in RSA: <@daddr:*CNVTIP(fld1)><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> subevt=12 dst=<fld1> dstport=<dport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=12 dst=%{fld1} dstport=%{dport}" }
				id => "message-TCPSYNFloodAttack"
				add_field => {
					"[event][id]" => "TCPSYNFloodAttack"
					"[rsa][message][id1]" => "TCPSYNFloodAttack"
					"[event][categoryid]" => "1002040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE HAServerChanged
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=13 user=<username> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=13 user=%{username} msg=%{info}" }
				id => "message-HAServerChanged"
				add_field => {
					"[event][id]" => "HAServerChanged"
					"[rsa][message][id1]" => "HAServerChanged"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE HANoHeartbeat
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@username:*RMQ(username)> <@info:*RMQ(info)> subevt=14 user=<username> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=14 user=%{username} msg=%{info}" }
				id => "message-HANoHeartbeat"
				add_field => {
					"[event][id]" => "HANoHeartbeat"
					"[rsa][message][id1]" => "HANoHeartbeat"
					"[event][categoryid]" => "1604010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SoftwareUpdate
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> <@result:*successfaillookup(result)> <@username:*RMQ(username)> <@info:*RMQ(info)> subevt=17 status=<result> user=<username> msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "subevt=17 status=%{result} user=%{username} msg=%{info}" }
				id => "message-SoftwareUpdate"
				add_field => {
					"[event][id]" => "SoftwareUpdate"
					"[rsa][message][id1]" => "SoftwareUpdate"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><fld4> <fld5>:<fld6>:<fld7>: <fld1> <fld2>        <fld3>       <saddr>            <daddr>            <protocol>    <sport>       <dport>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5}:%{fld6}:%{fld7}: %{fld1} %{fld2}        %{fld3}       %{saddr}            %{daddr}            %{protocol}    %{sport}       %{dport}" }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@info:connection permit><@ec_subject:NetworkComm><@ec_activity:Permit><@ec_theme:Communication><fld4> <fld5>:<fld6>:<fld7>: <fld1> <fld2>       <fld3>       <saddr>             <daddr>              <protocol>   <network_service>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5}:%{fld6}:%{fld7}: %{fld1} %{fld2}       %{fld3}       %{saddr}             %{daddr}              %{protocol}   %{network_service}" }
			id => "msgParserId32"
			add_field => {
				"info" => "connection permit"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@info:connection deny><@ec_subject:NetworkComm><@ec_activity:Deny><@ec_theme:Communication><fld6> <fld7>:<fld8>:<fld9>: <fld1> <fld2>       <fld3>       <saddr>             <daddr>              <protocol>    <sport>        <dport>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{fld6} %{fld7}:%{fld8}:%{fld9}: %{fld1} %{fld2}       %{fld3}       %{saddr}             %{daddr}              %{protocol}    %{sport}        %{dport}" }
			id => "msgParserId33"
			add_field => {
				"info" => "connection deny"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@info:connection close><@ec_subject:OS><@ec_activity:Stop><@ec_theme:Communication><fld1>: clasd: <saddr>: server closing connection
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{fld1}: clasd: %{saddr}: server closing connection" }
			id => "msgParserId34"
			add_field => {
				"info" => "connection close"
				"ec_subject" => "OS"
				"ec_activity" => "Stop"
				"ec_theme" => "Communication"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "logins" {
		# MESSAGE logins
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@info:Login successful><@ec_subject:User><@ec_activity:Logon><@ec_theme:Authentication><@ec_outcome:Success><fld1> <fld2>:<fld3>:<fld4>: Login successful       <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2}:%{fld3}:%{fld4}: Login successful       %{username}" }
				id => "message-logins"
				add_field => {
				"info" => "Login successful"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "logins"
					"[rsa][message][id1]" => "logins"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE logins:01
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@info:Login failed><@ec_subject:User><@ec_activity:Logon><@ec_theme:Authentication><@ec_outcome:Failure><fld1> <fld2>:<fld3>:<fld4>: Login failed <username> <saddr> <service> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2}:%{fld3}:%{fld4}: Login failed %{username} %{saddr} %{service} %{protocol}" }
				id => "message-logins:01"
				add_field => {
				"info" => "Login failed"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "logins:01"
					"[rsa][message][id1]" => "logins:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)> msg=<info> rule=<fld1> src=<fld2> dst=<fld1> proto=<protocol> sent=<sbytes> rcvd=<rbytes> duration=<duration> 
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "msg=%{info} rule=%{fld1} src=%{fld2} dst=%{fld1} proto=%{protocol} sent=%{sbytes} rcvd=%{rbytes} duration=%{duration}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)>Src Interface: <sinterface> Dst Interface: <dinterface> Src Address: <saddr> Dst Address: <daddr> Protocol: <protocol> { Src Port: <sport> Dst Port: <dport> | Type and Code: <fld15> }
	else if [logstash][msgparser][id] == "msgParserId38" {
		grok {
			match => { "message" => "^Src[\s]+Interface:[\s]+(?<sinterface>[^\s]*)[\s]+Dst[\s]+Interface:[\s]+(?<dinterface>[^\s]*)[\s]+Src[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Dst[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+([\s]*Src[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Dst[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+|[\s]*Type[\s]+and[\s]+Code:[\s]+(?<fld15>[^\s]*)[\s]+)$" }
			id => "msgParserId38"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <@ec_subject:NetworkComm><@ec_activity:Scan><@ec_theme:TEV><@protocol:TCP><@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)>From host: <shost>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "From host: %{shost}" }
			id => "msgParserId39"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"protocol" => "TCP"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh" {
		# MESSAGE ssh
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><fld1> ssh: { end of | client <shost>: user <username>: end login } session.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+ssh:[\s]+([\s]*end[\s]+of[\s]+|[\s]*client[\s]+(?<shost>[^:]*):[\s]+user[\s]+(?<username>[^:]*):[\s]+end[\s]+login[\s]+)[\s]+session\.$" }
				id => "message-ssh"
				add_field => {
					"[event][id]" => "ssh"
					"[rsa][message][id1]" => "ssh"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ssh:01
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@ec_theme:Authentication><@ec_outcome:Success><fld1>: ssh: client <shost>: user <username>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: ssh: client %{shost}: user %{username}: %{info}" }
				id => "message-ssh:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "ssh:01"
					"[rsa][message][id1]" => "ssh:01"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ssh:02
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><fld1>: ssh: client:<shost> user:<username> command:<action> pid:<process_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: ssh: client:%{shost} user:%{username} command:%{action} pid:%{process_id}" }
				id => "message-ssh:02"
				add_field => {
					"[event][id]" => "ssh:02"
					"[rsa][message][id1]" => "ssh:02"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ssh:03
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><fld1>: ssh: session disconnect: connection lost: '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: ssh: session disconnect: connection lost: '%{info}'" }
				id => "message-ssh:03"
				add_field => {
					"[event][id]" => "ssh:03"
					"[rsa][message][id1]" => "ssh:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ssh:04
		# line in RSA: <@:*SYSVAL($MSGID,$ID1)><@msg:*PARMVAL($MSG)><@info:Incoming connection received><fld1>: ssh: client <shost>: incoming connection received.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: ssh: client %{shost}: incoming connection received." }
				id => "message-ssh:04"
				add_field => {
				"info" => "Incoming connection received"
					"[event][id]" => "ssh:04"
					"[rsa][message][id1]" => "ssh:04"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[result]"
		destination => "[result]"
		dictionary => {
			"0" => "failure"
			"1" => "success"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[result]"
		destination => "[result]"
		dictionary => {
			"0" => "denied"
			"1" => "granted"
		}
		fallback => ""
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_cyberguardclassicmsg.json"
#			template_name => "_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
