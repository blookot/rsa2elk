# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "accurev"
			"[observer][name]" => "Accurev"
			"[observer][type]" => "Content Management System"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %ACCUREV-<hlevel>: <hday> <hmonth> <hdate> <htime> <hyear>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ACCUREV\-(?<hlevel>[^:]*):[\s]+(?<hday>[^\s]*)[\s]+(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hyear>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-accurevmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: addmember for <username> from <daddr> for group <group> exited with <disposition>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "addmember for %{username} from %{daddr} for group %{group} exited with %{disposition}" }
			id => "msgParserId0"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "addmember"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: authmethod for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "authmethod for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId1"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "authmethod"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: chdepot for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "chdepot for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId2"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "chdepot"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: chpasswd for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "chpasswd for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "Password"
				"ec_theme" => "Configuration"
				"action" => "chpasswd"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: chref for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "chref for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId4"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "chref"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: chslice for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "chslice for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId5"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "chslice"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: chstream for <username> from <daddr> against <fld12> with new name <fld13> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "chstream for %{username} from %{daddr} against %{fld12} with new name %{fld13} exited with %{disposition}" }
			id => "msgParserId6"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "chstream"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: chuser for <username> from <daddr> against against user <c_username> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "chuser for %{username} from %{daddr} against against user %{c_username} exited with %{disposition}" }
			id => "msgParserId7"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "chuser"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: chws for <username> from <daddr> against <fld12> with new name <fld13> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "chws for %{username} from %{daddr} against %{fld12} with new name %{fld13} exited with %{disposition}" }
			id => "msgParserId8"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "chws"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: defcomp for <username> from <daddr> against <fld12> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "defcomp for %{username} from %{daddr} against %{fld12} exited with %{disposition}" }
			id => "msgParserId9"
			add_field => {
				"action" => "defcomp"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA: eacl for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "eacl for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId10"
			add_field => {
				"action" => "eacl"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: lock for <username> from <daddr> for <fld11> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "lock for %{username} from %{daddr} for %{fld11} exited with %{disposition}" }
			id => "msgParserId11"
			add_field => {
				"action" => "lock"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA: Login for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "Login for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId12"
			add_field => {
				"ec_theme" => "Authentication"
				"action" => "Login"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: mkdepot for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "mkdepot for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId13"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "mkdepot"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: mkgroup for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "mkgroup for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId14"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "mkgroup"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: mkstream for <username> from <daddr> for <fld12> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "mkstream for %{username} from %{daddr} for %{fld12} exited with %{disposition}" }
			id => "msgParserId15"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "mkstream"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: mktrig for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "mktrig for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId16"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "mktrig"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA: mkuser for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "mkuser for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId17"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "mkuser"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA: mkws for <username> from <daddr> against <fld12> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "mkws for %{username} from %{daddr} against %{fld12} exited with %{disposition}" }
			id => "msgParserId18"
			add_field => {
				"ec_theme" => "Configuration"
				"action" => "mkws"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: reactivate for <username> from <daddr> for <obj_name> of type <obj_type> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "reactivate for %{username} from %{daddr} for %{obj_name} of type %{obj_type} exited with %{disposition}" }
			id => "msgParserId19"
			add_field => {
				"ec_activity" => "Restore"
				"action" => "reactivate"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId20
	# line in RSA: remove for <username> from <daddr> for <obj_name> of type <obj_type> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "remove for %{username} from %{daddr} for %{obj_name} of type %{obj_type} exited with %{disposition}" }
			id => "msgParserId20"
			add_field => {
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"action" => "remove"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId21
	# line in RSA: rmmember for <username> from <daddr> for group <group> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "rmmember for %{username} from %{daddr} for group %{group} exited with %{disposition}" }
			id => "msgParserId21"
			add_field => {
				"action" => "rmmember"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId22
	# line in RSA: rmproperty for <username> from <daddr> for <info> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "rmproperty for %{username} from %{daddr} for %{info} exited with %{disposition}" }
			id => "msgParserId22"
			add_field => {
				"action" => "rmproperty"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId23
	# line in RSA: rmtrig for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "rmtrig for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId23"
			add_field => {
				"action" => "rmtrig"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId24
	# line in RSA: setproperty for <username> from <daddr> for <info> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "setproperty for %{username} from %{daddr} for %{info} exited with %{disposition}" }
			id => "msgParserId24"
			add_field => {
				"action" => "setproperty"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA: unlock for <username> from <daddr> for <fld12> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "unlock for %{username} from %{daddr} for %{fld12} exited with %{disposition}" }
			id => "msgParserId25"
			add_field => {
				"action" => "unlock"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA: write_schema for <username> from <daddr> exited with <disposition>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "write_schema for %{username} from %{daddr} exited with %{disposition}" }
			id => "msgParserId26"
			add_field => {
				"action" => "write_schema"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-accurevmsg.json"
#			template_name => "accurev_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
