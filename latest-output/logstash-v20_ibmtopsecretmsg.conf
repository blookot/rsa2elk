# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ibmtopsecret"
			"[observer][name]" => "IBM Mainframe (Top Secret)"
			"[observer][type]" => "Mainframe"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %TopSecret-<level>-<messageid>: <hfld2>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%TopSecret-%{level}-%{messageid}: %{hfld2}|%{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %TopSecret-<level>: <hfld2>|TYPE=<messageid>|<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%TopSecret\-(?<level>[^:]*):[\s]+(?<message>(?<hfld2>[^\|]*)\|TYPE=(?<messageid>[^\|]*)\|(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %IBMTOPSECRETTVMA-4: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBMTOPSECRETTVMA-4: %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "TOPSECRETA_TVM"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %IBMTOPSECRETTVME-4: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBMTOPSECRETTVME-4: %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "TOPSECRETE_TVM"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ibmtopsecretmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "IN" {
		# MESSAGE IN:01
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<username>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{username}|" }
				id => "message-IN:01"
				add_field => {
					"[event][id]" => "IN:01"
					"[rsa][message][id1]" => "IN:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE IN:03
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|" }
				id => "message-IN:03"
				add_field => {
					"[event][id]" => "IN:03"
					"[rsa][message][id1]" => "IN:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE IN:04
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|" }
				id => "message-IN:04"
				add_field => {
					"[event][id]" => "IN:04"
					"[rsa][message][id1]" => "IN:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DS" {
		# MESSAGE DS:01
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|00|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<resource_class>|<observed_val>|<observed_val>|<observed_val>|<accesses>|<accesses>|<accesses>|<process>|<service>|<fld20>|<resource>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|00|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{resource_class}|%{observed_val}|%{observed_val}|%{observed_val}|%{accesses}|%{accesses}|%{accesses}|%{process}|%{service}|%{fld20}|%{resource}|" }
				id => "message-DS:01"
				add_field => {
				"result" => "OK"
				"svcno" => "%{service}"
					"[event][id]" => "DS:01"
					"[rsa][message][id1]" => "DS:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE DS:02
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<resource_class>|<observed_val>|<observed_val>|<observed_val>|<accesses>|<accesses>|<accesses>|<process>|<service>|<fld20>|<resource>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{resource_class}|%{observed_val}|%{observed_val}|%{observed_val}|%{accesses}|%{accesses}|%{accesses}|%{process}|%{service}|%{fld20}|%{resource}|" }
				id => "message-DS:02"
				add_field => {
				"svcno" => "%{service}"
					"[event][id]" => "DS:02"
					"[rsa][message][id1]" => "DS:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "RE" {
		# MESSAGE RE:01
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|00|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<resource_class>|<observed_val>|<observed_val>|<observed_val>|<accesses>|<accesses>|<accesses>|<process>|<service>|<fld20>|<resource>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|00|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{resource_class}|%{observed_val}|%{observed_val}|%{observed_val}|%{accesses}|%{accesses}|%{accesses}|%{process}|%{service}|%{fld20}|%{resource}|" }
				id => "message-RE:01"
				add_field => {
				"result" => "OK"
				"svcno" => "%{service}"
					"[event][id]" => "RE:01"
					"[rsa][message][id1]" => "RE:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE RE:02
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<resource_class>|<observed_val>|<observed_val>|<observed_val>|<accesses>|<accesses>|<accesses>|<process>|<service>|<fld20>|<resource>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{resource_class}|%{observed_val}|%{observed_val}|%{observed_val}|%{accesses}|%{accesses}|%{accesses}|%{process}|%{service}|%{fld20}|%{resource}|" }
				id => "message-RE:02"
				add_field => {
				"svcno" => "%{service}"
					"[event][id]" => "RE:02"
					"[rsa][message][id1]" => "RE:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE RE:03
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|00|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<resource_class>|<observed_val>|<observed_val>|<observed_val>|<accesses>|<accesses>|<accesses>|<process>|<service>|<fld20>|<resource>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|00|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{resource_class}|%{observed_val}|%{observed_val}|%{observed_val}|%{accesses}|%{accesses}|%{accesses}|%{process}|%{service}|%{fld20}|%{resource}" }
				id => "message-RE:03"
				add_field => {
				"result" => "OK"
				"svcno" => "%{service}"
					"[event][id]" => "RE:03"
					"[rsa][message][id1]" => "RE:03"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE RE:04
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|<hostid>|<resource_class>|<observed_val>|<observed_val>|<observed_val>|<accesses>|<accesses>|<accesses>|<process>|<service>|<fld20>|<resource>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|%{hostid}|%{resource_class}|%{observed_val}|%{observed_val}|%{observed_val}|%{accesses}|%{accesses}|%{accesses}|%{process}|%{service}|%{fld20}|%{resource}" }
				id => "message-RE:04"
				add_field => {
				"svcno" => "%{service}"
					"[event][id]" => "RE:04"
					"[rsa][message][id1]" => "RE:04"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TR" {
		# MESSAGE TR:01
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|00|<resultcode>|<audit>|<bypass>|<fld18>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|00|%{resultcode}|%{audit}|%{bypass}|%{fld18}|" }
				id => "message-TR:01"
				add_field => {
				"result" => "OK"
					"[event][id]" => "TR:01"
					"[rsa][message][id1]" => "TR:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
		# MESSAGE TR:02
		# line in RSA: <fld1>|<fld2>|<uid>|<user_dept>|<user_div>|<zone>|<jobname>|<terminal>|<event_description>|<jobnum>|<location_desc>|<fld13>|<result>|<resultcode>|<audit>|<bypass>|<fld18>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}|%{fld2}|%{uid}|%{user_dept}|%{user_div}|%{zone}|%{jobname}|%{terminal}|%{event_description}|%{jobnum}|%{location_desc}|%{fld13}|%{result}|%{resultcode}|%{audit}|%{bypass}|%{fld18}|" }
				id => "message-TR:02"
				add_field => {
					"[event][id]" => "TR:02"
					"[rsa][message][id1]" => "TR:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CMND" {
		# MESSAGE CMND:01
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=ADD|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=ADD|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:01"
				add_field => {
					"[event][id]" => "CMND:01"
					"[rsa][message][id1]" => "CMND:01"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:02
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=REM|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=REM|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:02"
				add_field => {
					"[event][id]" => "CMND:02"
					"[rsa][message][id1]" => "CMND:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:03
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=CRE|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=CRE|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:03"
				add_field => {
					"[event][id]" => "CMND:03"
					"[rsa][message][id1]" => "CMND:03"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:04
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=DEL|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=DEL|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:04"
				add_field => {
					"[event][id]" => "CMND:04"
					"[rsa][message][id1]" => "CMND:04"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:05
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=REP|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=REP|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:05"
				add_field => {
					"[event][id]" => "CMND:05"
					"[rsa][message][id1]" => "CMND:05"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:06
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=REF|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=REF|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:06"
				add_field => {
					"[event][id]" => "CMND:06"
					"[rsa][message][id1]" => "CMND:06"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:07
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=ADM|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=ADM|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:07"
				add_field => {
					"[event][id]" => "CMND:07"
					"[rsa][message][id1]" => "CMND:07"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:08
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=DEA|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=DEA|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:08"
				add_field => {
					"[event][id]" => "CMND:08"
					"[rsa][message][id1]" => "CMND:08"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
		# MESSAGE CMND:09
		# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=MOV|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=MOV|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
				id => "message-CMND:09"
				add_field => {
					"[event][id]" => "CMND:09"
					"[rsa][message][id1]" => "CMND:09"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: PARM=CHANGES|USERID=<uid>|DATE=<fld1>|TIME=<fld2>|SYSID=<hostid>|TYPE=<event_type>|COMMMAND_PREFIX=TSS|FUNCTION=REP|ENTITY=<obj_name>|COMMAND=<event_description>(<obj_value>)<param>|
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "PARM=CHANGES|USERID=%{uid}|DATE=%{fld1}|TIME=%{fld2}|SYSID=%{hostid}|TYPE=%{event_type}|COMMMAND_PREFIX=TSS|FUNCTION=REP|ENTITY=%{obj_name}|COMMAND=%{event_description}(%{obj_value})%{param}|" }
			id => "msgParserId13"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA: PARM="<fld1>"|USERID="<uid>"|DATE="<fld3>"|TIME="<fld4>"|SYSID="<hostid>"|TYPE="<event_type>"|COMMMAND_PREFIX="<fld7>"|FUNCTION="<action>"|ENTITY="<obj_name>"|COMMAND="<event_description>(<obj_value>)<param>"|
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "PARM=\"%{fld1}\"|USERID=\"%{uid}\"|DATE=\"%{fld3}\"|TIME=\"%{fld4}\"|SYSID=\"%{hostid}\"|TYPE=\"%{event_type}\"|COMMMAND_PREFIX=\"%{fld7}\"|FUNCTION=\"%{action}\"|ENTITY=\"%{obj_name}\"|COMMAND=\"%{event_description}(%{obj_value})%{param}\"|" }
			id => "msgParserId18"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: EVENT_TYPE=<event_type>|DATE_WRITTEN=<fld2>|TIME_WRITTEN=<fld3>|ACID_NAME=<uid>|DEPARTMENT=<user_dept>|DIVISION=<user_div>|ZONE_NAME=<zone>|JOBNAME=<jobname>|TERMINAL_ID=<terminal>|TYPE=<event_description>|JOB_NUMBER=<jobnum>|FACILITY=<location_desc>|USER_MODE=<fld13>|RETURN_CODE=<result>|REASON_CODE=<resultcode>|AUDIT_IND=<audit>|AUTH_BYPASS=<bypass>|SUSPEND_IND=<fld19>|SYSID=<hostid>|SPARE=<fld21>|USER_NAME=<username>|RESOURCE_CLASS=<resource_class>|REQ_ACCESS_1=<observed_val>|REQ_ACCESS_2=<observed_val>|REQ_ACCESS_3=<observed_val>|ALLOW_ACCESS_1=<accesses>|ALLOW_ACCESS_2=<accesses>|ALLOW_ACCESS_3=<accesses>|PROGRAM=<process>|CALLING_SVC=<service>|RESOURCE=<resource>|DATASET_NAME=<resource>|VOLSER=<disk_volume>|UNKNOWN_FIELD=<fld35>|PARM_OPTION=<param>|
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "EVENT_TYPE=%{event_type}|DATE_WRITTEN=%{fld2}|TIME_WRITTEN=%{fld3}|ACID_NAME=%{uid}|DEPARTMENT=%{user_dept}|DIVISION=%{user_div}|ZONE_NAME=%{zone}|JOBNAME=%{jobname}|TERMINAL_ID=%{terminal}|TYPE=%{event_description}|JOB_NUMBER=%{jobnum}|FACILITY=%{location_desc}|USER_MODE=%{fld13}|RETURN_CODE=%{result}|REASON_CODE=%{resultcode}|AUDIT_IND=%{audit}|AUTH_BYPASS=%{bypass}|SUSPEND_IND=%{fld19}|SYSID=%{hostid}|SPARE=%{fld21}|USER_NAME=%{username}|RESOURCE_CLASS=%{resource_class}|REQ_ACCESS_1=%{observed_val}|REQ_ACCESS_2=%{observed_val}|REQ_ACCESS_3=%{observed_val}|ALLOW_ACCESS_1=%{accesses}|ALLOW_ACCESS_2=%{accesses}|ALLOW_ACCESS_3=%{accesses}|PROGRAM=%{process}|CALLING_SVC=%{service}|RESOURCE=%{resource}|DATASET_NAME=%{resource}|VOLSER=%{disk_volume}|UNKNOWN_FIELD=%{fld35}|PARM_OPTION=%{param}|" }
			id => "msgParserId19"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyD HHmmss" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_type]"
		destination => "[ec_subject]"
		dictionary => {
			"IN" => "User"
			"DS" => "User"
			"RE" => "User"
			"TR" => "User"
			"ADD" => "Configuration"
			"ADM" => "Configuration"
			"CRE" => "Configuration"
			"DEA" => "Configuration"
			"DEL" => "Configuration"
			"MOV" => "Configuration"
			"REF" => "Configuration"
			"REM" => "Configuration"
			"PER" => "Configuration"
			"REP" => "Configuration"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[event_type]"
		destination => "[ec_activity]"
		dictionary => {
			"IN" => "Logon"
			"DS" => "Request"
			"RE" => "Request"
			"TR" => "Request"
			"ADD" => "Add"
			"ADM" => "Modify"
			"CRE" => "Create"
			"DEA" => "Modify"
			"DEL" => "Delete"
			"REF" => "Enable"
			"REM" => "Disable"
			"PER" => "Enable"
			"REP" => "Modify"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[event_type]"
		destination => "[ec_theme]"
		dictionary => {
			"IN" => "Authentication"
			"DS" => "AccessControl"
			"RE" => "AccessControl"
			"PW" => "Password"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[result]"
		destination => "[ec_outcome]"
		dictionary => {
			"0" => "Success"
			"4" => "Failure"
			"8" => "Error"
			"12" => "Error"
			"16" => "Error"
			"24" => "Failure"
			"28" => "Failure"
			"32" => "Failure"
			"40" => "Error"
			"44" => "Error"
			"48" => "Failure"
			"52" => "Failure"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[result]"
		destination => "[result]"
		dictionary => {
			"00" => "OK"
			"04" => "ACCESS DENIED"
			"08" => "ACCESS DENIED"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[result]"
		destination => "[result]"
		dictionary => {
			"00" => "OK"
			"04" => "ACCESS DENIED"
			"08" => "PASSWORD-INCORRECT"
			"12" => "PASSWORD-EXPIRED"
			"16" => "NEW-PASSWORD-INVALID"
			"24" => "FAILED-INST/EXIT"
			"28" => "ACCESS-NOT-AUTHORIZED"
			"32" => "SECURITY-DORMANT"
			"40" => "OPER-ID-CARD-REQUIRED"
			"44" => "BAD-OPER-ID-CARD"
			"48" => "TERMINAL-UNAUTHORIZED"
			"52" => "UNAUTHORIZED-APPLICATION"
		}
		fallback => ""
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ibmtopsecretmsg.json"
#			template_name => "ibmtopsecret_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
