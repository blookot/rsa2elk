# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "vmware_vshield"
			"[observer][name]" => "VMware vShield"
			"[observer][type]" => "Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> vShieldEdge <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShieldEdge[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> vShieldEdge <messageid>IN= <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShieldEdge[\s]+(?<messageid>[^I]*)IN=[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> vShieldEdge <fld1> <fld2> -<messageid>[<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShieldEdge[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+\-(?<messageid>[^\[]*)\[(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> vShieldEdge <fld1>[<fld2>]: <messageid> <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShieldEdge[\s]+(?<fld1>[^\[]*)\[(?<fld2>[^\]]*)\]:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1111
	# line in RSA: <hmonth> <hday> <htime> vShieldEdge <messageid> MARK -- <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShieldEdge[\s]+(?<message>(?<messageid>[^\s]*)[\s]+MARK[\s]+\-\-[\s]+(?<payload>.*))$" }
			id => "header-1111"
			add_field => {
				"[rsa][header][id]" => "1111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hday> <htime> vShield_FW_<fld1> <messageid>[<fld2>]: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield_FW_(?<fld1>[^\s]*)[\s]+(?<messageid>[^\[]*)\[(?<fld2>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <hmonth> <hday> <htime> vShield-FW-<fld1> <messageid>[<fld2>]: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield\-FW\-(?<fld1>[^\s]*)[\s]+(?<messageid>[^\[]*)\[(?<fld2>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <hmonth> <hday> <htime> localhost <messageid>[<fld2>]: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+localhost[\s]+(?<messageid>[^\[]*)\[(?<fld2>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> vShield_FW_<fld1> <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield_FW_(?<fld1>[^\s]*)[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <hmonth> <hday> <htime> vShield-FW-<fld1> <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield\-FW\-(?<fld1>[^\s]*)[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <hmonth> <hday> <htime> localhost <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+localhost[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> vShield_FW_<fld1> [<fld2>] <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield_FW_(?<fld1>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> vShield_FW_<fld1> [<fld2>] <messageid> -<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield_FW_(?<fld1>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+\-(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <hmonth> <hday> <htime> vShield-FW-<fld1> <messageid> -<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield\-FW\-(?<fld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+\-(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: <hmonth> <hday> <htime> localhost <messageid> -<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+localhost[\s]+(?<messageid>[^\s]*)[\s]+\-(?<payload>.*))$" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> vShield_FW_<fld1> [<fld2>] <messageid>(<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield_FW_(?<fld1>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+(?<messageid>[^\(]*)\((?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <hmonth> <hday> <htime> vShield_FW_<fld1> [<fld2>] <msgIdPart1> <msgIdPart2> failed <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield_FW_(?<fld1>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+failed[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: <hmonth> <hday> <htime> <hhostname> [<messageid>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhostname} [%{messageid}] %{message}" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <hmonth> <hday> <htime> <hhostname> <process>[<process_id>]: [<messageid>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhostname} %{process}[%{process_id}]: [%{messageid}]: %{message}" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <hmonth> <hday> <htime> vShield-edge-<hfld1>-<hfld2> <messageid>[]: [<hfld6>]: <hfld7>I <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} vShield-edge-%{hfld1}-%{hfld2} %{messageid}[]: [%{hfld6}]: %{hfld7}I %{message}" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: <hmonth> <hday> <htime> vShield-edge-<hfld1>-<hfld2> <messageid> MARK -- <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+vShield\-edge\-(?<hfld1>[^\-]*)\-(?<hfld2>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+MARK[\s]+\-\-[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-vmware_vshieldmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  -- MARK -- 
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "-- MARK --" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dhcpd" {
		# MESSAGE dhcpd:01
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPINFORM from <hostip> via intif: unknown subnet for client address <fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPINFORM from %{hostip} via intif: unknown subnet for client address %{fld18}" }
				id => "message-dhcpd:01"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPINFORM"
					"[event][id]" => "dhcpd:01"
					"[rsa][message][id1]" => "dhcpd:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:02
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPINFORM from <hostip> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPINFORM from %{hostip} via intif" }
				id => "message-dhcpd:02"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPINFORM"
					"[event][id]" => "dhcpd:02"
					"[rsa][message][id1]" => "dhcpd:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:03
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPACK to <hostip> (<dmacaddr>) via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPACK to %{hostip} (%{dmacaddr}) via intif" }
				id => "message-dhcpd:03"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPACK"
					"[event][id]" => "dhcpd:03"
					"[rsa][message][id1]" => "dhcpd:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:04
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPACK on <hostip> to <dmacaddr> (<hostname>) via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPACK on %{hostip} to %{dmacaddr} (%{hostname}) via intif" }
				id => "message-dhcpd:04"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPACK"
					"[event][id]" => "dhcpd:04"
					"[rsa][message][id1]" => "dhcpd:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:05
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPACK on <hostip> to <dmacaddr> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPACK on %{hostip} to %{dmacaddr} via intif" }
				id => "message-dhcpd:05"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPACK"
					"[event][id]" => "dhcpd:05"
					"[rsa][message][id1]" => "dhcpd:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:06
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPDISCOVER from <dmacaddr> via intif: network <fld19>: no free leases
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPDISCOVER from %{dmacaddr} via intif: network %{fld19}: no free leases" }
				id => "message-dhcpd:06"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPDISCOVER"
					"[event][id]" => "dhcpd:06"
					"[rsa][message][id1]" => "dhcpd:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:07
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPDISCOVER from <dmacaddr> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPDISCOVER from %{dmacaddr} via intif" }
				id => "message-dhcpd:07"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPDISCOVER"
					"[event][id]" => "dhcpd:07"
					"[rsa][message][id1]" => "dhcpd:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:08
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPREQUEST for <hostip> (<fld19>) from <dmacaddr> via intif: wrong network.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPREQUEST for %{hostip} (%{fld19}) from %{dmacaddr} via intif: wrong network." }
				id => "message-dhcpd:08"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPREQUEST"
					"[event][id]" => "dhcpd:08"
					"[rsa][message][id1]" => "dhcpd:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:09
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPREQUEST for <hostip> (<fld19>) from <dmacaddr> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPREQUEST for %{hostip} (%{fld19}) from %{dmacaddr} via intif" }
				id => "message-dhcpd:09"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPREQUEST"
					"[event][id]" => "dhcpd:09"
					"[rsa][message][id1]" => "dhcpd:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:10
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPREQUEST for <hostip> from <dmacaddr> (<hostname>) via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPREQUEST for %{hostip} from %{dmacaddr} (%{hostname}) via intif" }
				id => "message-dhcpd:10"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPREQUEST"
					"[event][id]" => "dhcpd:10"
					"[rsa][message][id1]" => "dhcpd:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:11
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPREQUEST for <hostip> from <dmacaddr> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPREQUEST for %{hostip} from %{dmacaddr} via intif" }
				id => "message-dhcpd:11"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPREQUEST"
					"[event][id]" => "dhcpd:11"
					"[rsa][message][id1]" => "dhcpd:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:12
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPNAK on <hostip> to <dmacaddr> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPNAK on %{hostip} to %{dmacaddr} via intif" }
				id => "message-dhcpd:12"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPNAK"
					"[event][id]" => "dhcpd:12"
					"[rsa][message][id1]" => "dhcpd:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:13
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPRELEASE of <hostip> from <dmacaddr> (<hostname>) via intif (found)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPRELEASE of %{hostip} from %{dmacaddr} (%{hostname}) via intif (found)" }
				id => "message-dhcpd:13"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPRELEASE"
					"[event][id]" => "dhcpd:13"
					"[rsa][message][id1]" => "dhcpd:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:14
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPRELEASE of <hostip> from <dmacaddr> via intif (not found)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPRELEASE of %{hostip} from %{dmacaddr} via intif (not found)" }
				id => "message-dhcpd:14"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPRELEASE"
					"[event][id]" => "dhcpd:14"
					"[rsa][message][id1]" => "dhcpd:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:15
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPOFFER on <hostip> to <dmacaddr> (<hostname>) via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPOFFER on %{hostip} to %{dmacaddr} (%{hostname}) via intif" }
				id => "message-dhcpd:15"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPOFFER"
					"[event][id]" => "dhcpd:15"
					"[rsa][message][id1]" => "dhcpd:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:16
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: DHCPOFFER on <hostip> to <dmacaddr> via intif
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: DHCPOFFER on %{hostip} to %{dmacaddr} via intif" }
				id => "message-dhcpd:16"
				add_field => {
				"event_source" => "vShield Edge"
				"action" => "DHCPOFFER"
					"[event][id]" => "dhcpd:16"
					"[rsa][message][id1]" => "dhcpd:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:17
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: Wrote <dclass_counter1> leases to leases file.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: Wrote %{dclass_counter1} leases to leases file." }
				id => "message-dhcpd:17"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dhcpd:17"
					"[rsa][message][id1]" => "dhcpd:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:18
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: Sending on <fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: Sending on %{fld29}" }
				id => "message-dhcpd:18"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dhcpd:18"
					"[rsa][message][id1]" => "dhcpd:18"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:19
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: Listening on <fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: Listening on %{fld29}" }
				id => "message-dhcpd:19"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dhcpd:19"
					"[rsa][message][id1]" => "dhcpd:19"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dhcpd:20
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dhcpd: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dhcpd: %{info}" }
				id => "message-dhcpd:20"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dhcpd:20"
					"[rsa][message][id1]" => "dhcpd:20"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "edge" {
		# MESSAGE edge:01
		# line in RSA: DROP_<fld59>IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> {DF PROTO=<protocol> | PROTO=<protocol>} SPT=<sport> DPT=<dport> WINDOW=<fld45> {RES=<fld46> | SY RES=<fld46>} {SYN URGP=<fld47> | URGP=<fld47>} MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^DROP_(?<fld59>[^I]*)IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+(DF[\s]+PROTO=(?<protocol>[^\s]*)[\s]+|[\s]*PROTO=(?<protocol>[^\s]*))[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+WINDOW=(?<fld45>[^\s]*)[\s]+(RES=(?<fld46>[^\s]*)[\s]+|[\s]*SY[\s]+RES=(?<fld46>[^\s]*))[\s]+(SYN[\s]+URGP=(?<fld47>[^\s]*)[\s]+|[\s]*URGP=(?<fld47>[^\s]*))[\s]+MARK=(?<fld22>.*)$" }
				id => "message-edge:01"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "edge:01"
					"[rsa][message][id1]" => "edge:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE edge:02
		# line in RSA: DROP_<fld59>IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^DROP_(?<fld59>[^I]*)IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+TYPE=(?<fld45>[^\s]*)[\s]+CODE=(?<fld46>[^\s]*)[\s]+ID=(?<fld47>[^\s]*)[\s]+SEQ=(?<fld48>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-edge:02"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "edge:02"
					"[rsa][message][id1]" => "edge:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE edge:03
		# line in RSA: DROP_<fld59>IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^DROP_(?<fld59>[^I]*)IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+LEN=(?<fld45>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-edge:03"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "edge:03"
					"[rsa][message][id1]" => "edge:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "kernel" {
		# MESSAGE kernel:01
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: ACCEPT IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> {DF PROTO=<protocol> | PROTO=<protocol>} SPT=<sport> DPT=<dport> WINDOW=<fld45> {RES=<fld46> | SY RES=<fld46>} {SYN URGP=<fld47> | URGP=<fld47>} MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+ACCEPT[\s]+IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+(DF[\s]+PROTO=(?<protocol>[^\s]*)[\s]+|[\s]*PROTO=(?<protocol>[^\s]*))[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+WINDOW=(?<fld45>[^\s]*)[\s]+(RES=(?<fld46>[^\s]*)[\s]+|[\s]*SY[\s]+RES=(?<fld46>[^\s]*))[\s]+(SYN[\s]+URGP=(?<fld47>[^\s]*)[\s]+|[\s]*URGP=(?<fld47>[^\s]*))[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:01"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:01"
					"[rsa][message][id1]" => "kernel:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:02
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: ACCEPT IN=<sinterface> OUT=<dinterface> MAC=<fld26> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> {DF PROTO=<protocol> | PROTO=<protocol>} SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> {SYN URGP=<fld47> MARK=<fld22>| SYN URGP=<fld47>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+ACCEPT[\s]+IN=(?<sinterface>[^\s]*)[\s]+OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+(DF[\s]+PROTO=(?<protocol>[^\s]*)[\s]+|[\s]*PROTO=(?<protocol>[^\s]*))[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+WINDOW=(?<fld45>[^\s]*)[\s]+RES=(?<fld46>[^\s]*)[\s]+(SYN[\s]+URGP=(?<fld47>[^\s]*)[\s]+MARK=(?<fld22>.*)|[\s]*SYN[\s]+URGP=(?<fld47>.*))$" }
				id => "message-kernel:02"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:02"
					"[rsa][message][id1]" => "kernel:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:03
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: ACCEPT IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+ACCEPT[\s]+IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+TYPE=(?<fld45>[^\s]*)[\s]+CODE=(?<fld46>[^\s]*)[\s]+ID=(?<fld47>[^\s]*)[\s]+SEQ=(?<fld48>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:03"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:03"
					"[rsa][message][id1]" => "kernel:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:04
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: DROP IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+DROP[\s]+IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+TYPE=(?<fld45>[^\s]*)[\s]+CODE=(?<fld46>[^\s]*)[\s]+ID=(?<fld47>[^\s]*)[\s]+SEQ=(?<fld48>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:04"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:04"
					"[rsa][message][id1]" => "kernel:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:05
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: ACCEPT IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+ACCEPT[\s]+IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+LEN=(?<fld45>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:05"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:05"
					"[rsa][message][id1]" => "kernel:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:06
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: DROP IN=<sinterface> {OUT=<dinterface> MAC=<fld26> | OUT=<dinterface>} SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+DROP[\s]+IN=(?<sinterface>[^\s]*)[\s]+(OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+|[\s]*OUT=(?<dinterface>[^\s]*))[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+LEN=(?<fld45>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:06"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:06"
					"[rsa][message][id1]" => "kernel:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:07
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: ACCEPT IN=<sinterface> OUT=<dinterface> MAC=<fld26> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> MARK=<fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge kernel: ACCEPT IN=%{sinterface} OUT=%{dinterface} MAC=%{fld26} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} MARK=%{fld22}" }
				id => "message-kernel:07"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:07"
					"[rsa][message][id1]" => "kernel:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:11
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: SNAT IN=<sinterface> OUT=<dinterface> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> {DF PROTO=<protocol> | PROTO=<protocol>} SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> {SYN URGP=<fld47> | URGP=<fld47>} MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+SNAT[\s]+IN=(?<sinterface>[^\s]*)[\s]+OUT=(?<dinterface>[^\s]*)[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+(DF[\s]+PROTO=(?<protocol>[^\s]*)[\s]+|[\s]*PROTO=(?<protocol>[^\s]*))[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+WINDOW=(?<fld45>[^\s]*)[\s]+RES=(?<fld46>[^\s]*)[\s]+(SYN[\s]+URGP=(?<fld47>[^\s]*)[\s]+|[\s]*URGP=(?<fld47>[^\s]*))[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:11"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:11"
					"[rsa][message][id1]" => "kernel:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:12
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: SNAT IN=<sinterface> OUT=<dinterface> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> MARK=<fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge kernel: SNAT IN=%{sinterface} OUT=%{dinterface} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} TYPE=%{fld45} CODE=%{fld46} ID=%{fld47} SEQ=%{fld48} MARK=%{fld22}" }
				id => "message-kernel:12"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:12"
					"[rsa][message][id1]" => "kernel:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:13
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: SNAT IN=<sinterface> OUT=<dinterface> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45> MARK=<fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge kernel: SNAT IN=%{sinterface} OUT=%{dinterface} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} LEN=%{fld45} MARK=%{fld22}" }
				id => "message-kernel:13"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:13"
					"[rsa][message][id1]" => "kernel:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:14
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: DNAT IN=<sinterface> OUT=<dinterface> MAC=<fld26> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> {DF PROTO=<protocol> | PROTO=<protocol>} SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> {SYN URGP=<fld47> | URGP=<fld47>} MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+DNAT[\s]+IN=(?<sinterface>[^\s]*)[\s]+OUT=(?<dinterface>[^\s]*)[\s]+MAC=(?<fld26>[^\s]*)[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld40>[^\s]*)[\s]+TOS=(?<fld41>[^\s]*)[\s]+PREC=(?<fld42>[^\s]*)[\s]+TTL=(?<fld43>[^\s]*)[\s]+ID=(?<fld44>[^\s]*)[\s]+(DF[\s]+PROTO=(?<protocol>[^\s]*)[\s]+|[\s]*PROTO=(?<protocol>[^\s]*))[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+WINDOW=(?<fld45>[^\s]*)[\s]+RES=(?<fld46>[^\s]*)[\s]+(SYN[\s]+URGP=(?<fld47>[^\s]*)[\s]+|[\s]*URGP=(?<fld47>[^\s]*))[\s]+MARK=(?<fld22>.*)$" }
				id => "message-kernel:14"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:14"
					"[rsa][message][id1]" => "kernel:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:15
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: ip_conntrack_validate_write
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge kernel: ip_conntrack_validate_write" }
				id => "message-kernel:15"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:15"
					"[rsa][message][id1]" => "kernel:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:16
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: <fld28>: interrupt took <fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge kernel: %{fld28}: interrupt took %{fld29}" }
				id => "message-kernel:16"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:16"
					"[rsa][message][id1]" => "kernel:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:17
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge kernel: {intif | extif}: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShieldEdge[\s]+kernel:[\s]+(intif[\s]+|[\s]*extif):[\s]+(?<info>.*)$" }
				id => "message-kernel:17"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "kernel:17"
					"[rsa][message][id1]" => "kernel:17"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: <fld15> <fld16> <fld17> vShieldEdge vShieldEdge: Firewall has started enforcing security policies!
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge vShieldEdge: Firewall has started enforcing security policies!" }
			id => "msgParserId38"
			add_field => {
				"event_source" => "vShield Edge"
				"event_description" => " Firewall has started enforcing security policies!;"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "fw" {
		# MESSAGE fw:01
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge fwIN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge fwIN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} TYPE=%{fld45} CODE=%{fld46} ID=%{fld47} SEQ=%{fld48}" }
				id => "message-fw:01"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "fw:01"
					"[rsa][message][id1]" => "fw:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fw:02
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge fwIN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> URGP=<fld47> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge fwIN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} WINDOW=%{fld45} RES=%{fld46} URGP=%{fld47}" }
				id => "message-fw:02"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "fw:02"
					"[rsa][message][id1]" => "fw:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE fw:03
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge fwIN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge fwIN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} LEN=%{fld45}" }
				id => "message-fw:03"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "fw:03"
					"[rsa][message][id1]" => "fw:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "snat" {
		# MESSAGE snat:01
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge snatIN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge snatIN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} TYPE=%{fld45} CODE=%{fld46} ID=%{fld47} SEQ=%{fld48}" }
				id => "message-snat:01"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "snat:01"
					"[rsa][message][id1]" => "snat:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snat:02
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge snatIN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> URGP=<fld47> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge snatIN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} WINDOW=%{fld45} RES=%{fld46} URGP=%{fld47}" }
				id => "message-snat:02"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "snat:02"
					"[rsa][message][id1]" => "snat:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snat:03
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge snatIN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge snatIN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} LEN=%{fld45}" }
				id => "message-snat:03"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "snat:03"
					"[rsa][message][id1]" => "snat:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dnat" {
		# MESSAGE dnat:01
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dnatIN=<fld20> OUT=<fld21> MAC=<dmacaddr> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> TYPE=<fld45> CODE=<fld46> ID=<fld47> SEQ=<fld48> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dnatIN=%{fld20} OUT=%{fld21} MAC=%{dmacaddr} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} TYPE=%{fld45} CODE=%{fld46} ID=%{fld47} SEQ=%{fld48}" }
				id => "message-dnat:01"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dnat:01"
					"[rsa][message][id1]" => "dnat:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dnat:02
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dnatIN=<fld20> OUT=<fld21> MAC=<dmacaddr> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> URGP=<fld47> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dnatIN=%{fld20} OUT=%{fld21} MAC=%{dmacaddr} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} WINDOW=%{fld45} RES=%{fld46} URGP=%{fld47}" }
				id => "message-dnat:02"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dnat:02"
					"[rsa][message][id1]" => "dnat:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dnat:03
		# line in RSA: <fld15> <fld16> <fld17> vShieldEdge dnatIN=<fld20> OUT=<fld21> MAC=<dmacaddr> SRC=<saddr> DST=<daddr> LEN=<fld40> TOS=<fld41> PREC=<fld42> TTL=<fld43> ID=<fld44> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld45>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge dnatIN=%{fld20} OUT=%{fld21} MAC=%{dmacaddr} SRC=%{saddr} DST=%{daddr} LEN=%{fld40} TOS=%{fld41} PREC=%{fld42} TTL=%{fld43} ID=%{fld44} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} LEN=%{fld45}" }
				id => "message-dnat:03"
				add_field => {
				"event_source" => "vShield Edge"
					"[event][id]" => "dnat:03"
					"[rsa][message][id1]" => "dnat:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: <fld15> <fld16> <fld17> vShieldEdge <fld1> <fld2> -config[<fld3>]: <info>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1} %{fld2} -config[%{fld3}]: %{info}" }
			id => "msgParserId48"
			add_field => {
				"event_source" => "vShield Edge"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA:  <fld15> <fld16> <fld17> vShieldEdge <fld1>[<fld2>]: Syslog connection established; fd='<fld24>', server='<fld25>(<saddr>:<sport>)', local='<fld26>(<fld27>)'
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1}[%{fld2}]: Syslog connection established; fd='%{fld24}', server='%{fld25}(%{saddr}:%{sport})', local='%{fld26}(%{fld27})'" }
			id => "msgParserId49"
			add_field => {
				"event_source" => "vShield Edge"
				"event_description" => "Syslog connection established"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA:  <fld15> <fld16> <fld17> vShieldEdge <fld1>[<fld2>]: Log statistics; <info>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1}[%{fld2}]: Log statistics; %{info}" }
			id => "msgParserId50"
			add_field => {
				"event_source" => "vShield Edge"
				"event_description" => " Log statistics"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA: <fld15> <fld16> <fld17> vShieldEdge <fld1>[<fld2>]: Daemon exited gracefully, not restarting; exitcode='<resultcode>'
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1}[%{fld2}]: Daemon exited gracefully, not restarting; exitcode='%{resultcode}'" }
			id => "msgParserId51"
			add_field => {
				"event_source" => "vShield Edge"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA:  <fld15> <fld16> <fld17> vShieldEdge <fld1>[<fld2>]: Configuration reload request received, reloading configuration;
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1}[%{fld2}]: Configuration reload request received, reloading configuration;" }
			id => "msgParserId52"
			add_field => {
				"event_source" => "vShield Edge"
				"event_description" => "Configuration reload request received, reloading configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: <fld15> <fld16> <fld17> vShieldEdge <fld1>[<fld2>]: creating device node <node>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1}[%{fld2}]: creating device node %{node}" }
			id => "msgParserId53"
			add_field => {
				"event_source" => "vShield Edge"
				"event_description" => "creating device node"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA: <fld15> <fld16> <fld17> vShieldEdge <fld1>[<fld2>]: removing device node <node>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShieldEdge %{fld1}[%{fld2}]: removing device node %{node}" }
			id => "msgParserId54"
			add_field => {
				"event_source" => "vShield Edge"
				"event_description" => "removing device node"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA: <fld15> <fld16> <fld17> {vShield_FW_<fld1> | vShield-FW-<fld1> | localhost} sysmgr: {INFO: | ERROR:}<info>
	else if [logstash][msgparser][id] == "msgParserId55" {
		grok {
			match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield_FW_(?<fld1>[^\s]*)[\s]+|[\s]*vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+sysmgr:[\s]+(INFO:[\s]+|[\s]*ERROR:)(?<info>.*)$" }
			id => "msgParserId55"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> nproxy_D_T_0001: INFO:<info>
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} nproxy_D_T_0001: INFO:%{info}" }
			id => "msgParserId56"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "saflow" {
		# MESSAGE saflow
		# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> saflow[<fld2>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} saflow[%{fld2}]: %{info}" }
				id => "message-saflow"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "saflow"
					"[rsa][message][id1]" => "saflow"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE saflow:01
		# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> saflow[<fld2>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} saflow[%{fld2}]: %{info}" }
				id => "message-saflow:01"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "saflow:01"
					"[rsa][message][id1]" => "saflow:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpdate" {
		# MESSAGE ntpdate
		# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> ntpdate[<fld2>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} ntpdate[%{fld2}]: %{info}" }
				id => "message-ntpdate"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "ntpdate"
					"[rsa][message][id1]" => "ntpdate"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpdate:01
		# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> ntpdate[<fld2>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} ntpdate[%{fld2}]: %{info}" }
				id => "message-ntpdate:01"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "ntpdate:01"
					"[rsa][message][id1]" => "ntpdate:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog-ng" {
		# MESSAGE syslog-ng:05
		# line in RSA:  <fld15> <fld16> <fld17> {vShield-FW-<fld1> | localhost} syslog-ng[<fld2>]: Termination requested via signal, terminating;
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+syslog\-ng\[(?<fld2>[^\]]*)\]:[\s]+Termination[\s]+requested[\s]+via[\s]+signal,[\s]+terminating;$" }
				id => "message-syslog-ng:05"
				add_field => {
				"event_source" => "vShield App"
				"event_description" => " Termination requested via signal, terminating;"
					"[event][id]" => "syslog-ng:05"
					"[rsa][message][id1]" => "syslog-ng:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog-ng:04
		# line in RSA:  <fld15> <fld16> <fld17> vShield-FW-<fld1> syslog-ng[<fld2>]: I/O error occurred while writing; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} syslog-ng[%{fld2}]: I/O error occurred while writing; %{info}" }
				id => "message-syslog-ng:04"
				add_field => {
				"event_source" => "vShield App"
				"event_description" => " I/O error occurred while writing;"
					"[event][id]" => "syslog-ng:04"
					"[rsa][message][id1]" => "syslog-ng:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog-ng:03
		# line in RSA:  <fld15> <fld16> <fld17> vShield-FW-<fld1> syslog-ng[<fld2>]: Connection broken; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} syslog-ng[%{fld2}]: Connection broken; %{info}" }
				id => "message-syslog-ng:03"
				add_field => {
				"event_source" => "vShield App"
				"event_description" => " Connection broken;"
					"[event][id]" => "syslog-ng:03"
					"[rsa][message][id1]" => "syslog-ng:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog-ng:02
		# line in RSA:  <fld15> <fld16> <fld17> vShield-FW-<fld1> syslog-ng[<fld2>]: Log statistics; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} syslog-ng[%{fld2}]: Log statistics; %{info}" }
				id => "message-syslog-ng:02"
				add_field => {
				"event_source" => "vShield App"
				"event_description" => " Log statistics"
					"[event][id]" => "syslog-ng:02"
					"[rsa][message][id1]" => "syslog-ng:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog-ng:01
		# line in RSA: <fld15> <fld16> <fld17> {vShield_FW_<fld1> | vShield-FW-<fld1> | localhost} syslog-ng[<fld2>]: syslog-ng starting up; <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield_FW_(?<fld1>[^\s]*)[\s]+|[\s]*vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+syslog\-ng\[(?<fld2>[^\]]*)\]:[\s]+syslog\-ng[\s]+starting[\s]+up;[\s]+(?<fld3>.*)$" }
				id => "message-syslog-ng:01"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "syslog-ng:01"
					"[rsa][message][id1]" => "syslog-ng:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog-ng
		# line in RSA: <fld15> <fld16> <fld17> {vShield_FW_<fld1> | vShield-FW-<fld1> | localhost} syslog-ng[<fld2>]: syslog-ng shutting down; <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield_FW_(?<fld1>[^\s]*)[\s]+|[\s]*vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+syslog\-ng\[(?<fld2>[^\]]*)\]:[\s]+syslog\-ng[\s]+shutting[\s]+down;[\s]+(?<fld3>.*)$" }
				id => "message-syslog-ng"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "syslog-ng"
					"[rsa][message][id1]" => "syslog-ng"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "udev" {
		# MESSAGE udev:01
		# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> udev[<fld2>]: creating device node <node>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} udev[%{fld2}]: creating device node %{node}" }
				id => "message-udev:01"
				add_field => {
				"event_source" => "vShield App"
				"event_description" => "creating device node"
					"[event][id]" => "udev:01"
					"[rsa][message][id1]" => "udev:01"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE udev:02
		# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> udev[<fld2>]: removing device node <node>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} udev[%{fld2}]: removing device node %{node}" }
				id => "message-udev:02"
				add_field => {
				"event_source" => "vShield App"
				"event_description" => "removing device node"
					"[event][id]" => "udev:02"
					"[rsa][message][id1]" => "udev:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> platform_detect[<fld2>]: <info>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} platform_detect[%{fld2}]: %{info}" }
			id => "msgParserId69"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> zebra[<fld2>]: Terminating on signal
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} zebra[%{fld2}]: Terminating on signal" }
			id => "msgParserId70"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "VMWALL" {
		# MESSAGE VMWALL:01
		# line in RSA: <fld15> <fld16> <fld17> {vShield_FW_<fld1> [<fld2>] | vShield-FW-<fld1> | localhost} VMWALL: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield_FW_(?<fld1>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+|[\s]*vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+VMWALL:[\s]+(?<info>.*)$" }
				id => "message-VMWALL:01"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL:01"
					"[rsa][message][id1]" => "VMWALL:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE VMWALL:02
		# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] VMWALL -(<fld3>)- IN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld5> TOS=<fld6> PREC=<fld7> <fld8> ID=<fld9> PROTO=<protocol> TYPE=<fld10> CODE=<fld11> ID=<fld12> SEQ=<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] VMWALL -(%{fld3})- IN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld5} TOS=%{fld6} PREC=%{fld7} %{fld8} ID=%{fld9} PROTO=%{protocol} TYPE=%{fld10} CODE=%{fld11} ID=%{fld12} SEQ=%{fld13}" }
				id => "message-VMWALL:02"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL:02"
					"[rsa][message][id1]" => "VMWALL:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE VMWALL:03
		# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] VMWALL -(<fld3>)- IN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld5> TOS=<fld6> PREC=<fld7> <fld8> ID=<fld9> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] VMWALL -(%{fld3})- IN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld5} TOS=%{fld6} PREC=%{fld7} %{fld8} ID=%{fld9} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} LEN=%{fld13}" }
				id => "message-VMWALL:03"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL:03"
					"[rsa][message][id1]" => "VMWALL:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA: <fld15> <fld16> <fld17> {vShield-FW-<fld1> | localhost} VMWALL_L2 -(<fld3>)-  IN=<fld20> OUT=<fld21> MAC source = <smacaddr> MAC dest = <dmacaddr> proto = <protocol>proto = <fld23>
	else if [logstash][msgparser][id] == "msgParserId74" {
		grok {
			match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+VMWALL_L2[\s]+\-\((?<fld3>[^\)]*)\)\-[\s]+IN=(?<fld20>[^\s]*)[\s]+OUT=(?<fld21>[^\s]*)[\s]+MAC[\s]+source[\s]+=[\s]+(?<smacaddr>[^\s]*)[\s]+MAC[\s]+dest[\s]+=[\s]+(?<dmacaddr>[^\s]*)[\s]+proto[\s]+=[\s]+(?<protocol>[^p]*)proto[\s]+=[\s]+(?<fld23>.*)$" }
			id => "msgParserId74"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "VMWALL_L3" {
		# MESSAGE VMWALL_L3:01
		# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> VMWALL_L3 -(<fld3>)- IN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld5> TOS=<fld6> PREC=<fld7> <fld8> ID=<fld9> PROTO=<protocol> TYPE=<fld10> CODE=<fld11> [<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} VMWALL_L3 -(%{fld3})- IN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld5} TOS=%{fld6} PREC=%{fld7} %{fld8} ID=%{fld9} PROTO=%{protocol} TYPE=%{fld10} CODE=%{fld11} [%{info}]" }
				id => "message-VMWALL_L3:01"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL_L3:01"
					"[rsa][message][id1]" => "VMWALL_L3:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE VMWALL_L3:02
		# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> VMWALL_L3 -(<fld3>)- IN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld5> TOS=<fld6> PREC=<fld7> <fld8> ID=<fld9> {DF PROTO=<protocol> | PROTO=<protocol>} SPT=<sport> DPT=<dport> WINDOW=<fld45> RES=<fld46> {SYN URGP=<fld47> | URGP=<fld47>} MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+vShield\-FW\-(?<fld1>[^\s]*)[\s]+VMWALL_L3[\s]+\-\((?<fld3>[^\)]*)\)\-[\s]+IN=(?<fld20>[^\s]*)[\s]+OUT=(?<fld21>[^\s]*)[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld5>[^\s]*)[\s]+TOS=(?<fld6>[^\s]*)[\s]+PREC=(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+ID=(?<fld9>[^\s]*)[\s]+(DF[\s]+PROTO=(?<protocol>[^\s]*)[\s]+|[\s]*PROTO=(?<protocol>[^\s]*))[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+WINDOW=(?<fld45>[^\s]*)[\s]+RES=(?<fld46>[^\s]*)[\s]+(SYN[\s]+URGP=(?<fld47>[^\s]*)[\s]+|[\s]*URGP=(?<fld47>[^\s]*))[\s]+MARK=(?<fld22>.*)$" }
				id => "message-VMWALL_L3:02"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL_L3:02"
					"[rsa][message][id1]" => "VMWALL_L3:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE VMWALL_L3:03
		# line in RSA: <fld15> <fld16> <fld17> {vShield-FW-<fld1> | localhost} VMWALL_L3 -(<fld3>)- IN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld5> TOS=<fld6> PREC=<fld7> <fld8> ID=<fld9> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld13> MARK=<fld22>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld15>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(vShield\-FW\-(?<fld1>[^\s]*)[\s]+|[\s]*localhost)[\s]+VMWALL_L3[\s]+\-\((?<fld3>[^\)]*)\)\-[\s]+IN=(?<fld20>[^\s]*)[\s]+OUT=(?<fld21>[^\s]*)[\s]+SRC=(?<saddr>[^\s]*)[\s]+DST=(?<daddr>[^\s]*)[\s]+LEN=(?<fld5>[^\s]*)[\s]+TOS=(?<fld6>[^\s]*)[\s]+PREC=(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+ID=(?<fld9>[^\s]*)[\s]+PROTO=(?<protocol>[^\s]*)[\s]+SPT=(?<sport>[^\s]*)[\s]+DPT=(?<dport>[^\s]*)[\s]+LEN=(?<fld13>[^\s]*)[\s]+MARK=(?<fld22>.*)$" }
				id => "message-VMWALL_L3:03"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL_L3:03"
					"[rsa][message][id1]" => "VMWALL_L3:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE VMWALL_L3:04
		# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> VMWALL_L3 -(<fld3>)- IN=<fld20> OUT=<fld21> SRC=<saddr> DST=<daddr> LEN=<fld5> TOS=<fld6> PREC=<fld7> <fld8> ID=<fld9> PROTO=<protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} VMWALL_L3 -(%{fld3})- IN=%{fld20} OUT=%{fld21} SRC=%{saddr} DST=%{daddr} LEN=%{fld5} TOS=%{fld6} PREC=%{fld7} %{fld8} ID=%{fld9} PROTO=%{protocol}" }
				id => "message-VMWALL_L3:04"
				add_field => {
				"event_source" => "vShield App"
					"[event][id]" => "VMWALL_L3:04"
					"[rsa][message][id1]" => "VMWALL_L3:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] printk: <info>
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] printk: %{info}" }
			id => "msgParserId79"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> init: <info>
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} init: %{info}" }
			id => "msgParserId80"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> __ratelimit: <info>
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} __ratelimit: %{info}" }
			id => "msgParserId81"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] nf_vmflow: invalid arp packet
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] nf_vmflow: invalid arp packet" }
			id => "msgParserId82"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_check_proxy_id: <info>
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_check_proxy_id: %{info}" }
			id => "msgParserId83"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_del_proxy_rules: <info>
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_del_proxy_rules: %{info}" }
			id => "msgParserId84"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId85
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_allocate_id: <info>
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_allocate_id: %{info}" }
			id => "msgParserId85"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId86
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_get_proxy_id: <info>
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_get_proxy_id: %{info}" }
			id => "msgParserId86"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_allocate_listener_id: <info>
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_allocate_listener_id: %{info}" }
			id => "msgParserId87"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId88
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_add_access_rules: <info>
	else if [logstash][msgparser][id] == "msgParserId88" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_add_access_rules: %{info}" }
			id => "msgParserId88"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId89
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] sa_sys_attach_socket(<info>
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] sa_sys_attach_socket(%{info}" }
			id => "msgParserId89"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId90
	# line in RSA: <fld15> <fld16> <fld17> vShield_FW_<fld1> [<fld2>] Rule addition failed
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield_FW_%{fld1} [%{fld2}] Rule addition failed" }
			id => "msgParserId90"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId91
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_select_realm: <info>
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_select_realm: %{info}" }
			id => "msgParserId91"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId92
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_init_realm: <info>
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_init_realm: %{info}" }
			id => "msgParserId92"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_start_realm: <info>
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_start_realm: %{info}" }
			id => "msgParserId93"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_create_realm: <info>
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_create_realm: %{info}" }
			id => "msgParserId94"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId95
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_handle_dvfilter_frame: <info>
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_handle_dvfilter_frame: %{info}" }
			id => "msgParserId95"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_create_filter: <info>
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_create_filter: %{info}" }
			id => "msgParserId96"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId97
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vproxy_update_filter: <info>
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vproxy_update_filter: %{info}" }
			id => "msgParserId97"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId98
	# line in RSA: <fld15> <fld16> <fld17> vShield-FW-<fld1> vp_veth_create_interface: <info>
	else if [logstash][msgparser][id] == "msgParserId98" {
		dissect {
			mapping => { "message" => "%{fld15} %{fld16} %{fld17} vShield-FW-%{fld1} vp_veth_create_interface: %{info}" }
			id => "msgParserId98"
			add_field => {
				"event_source" => "vShield App"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA: Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>', Severity:'<severity>', Event Source:'<hostname>', Code:'<fld9>', Event Message:'<event_description>', Module:'<event_source>'
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}', Severity:'%{severity}', Event Source:'%{hostname}', Code:'%{fld9}', Event Message:'%{event_description}', Module:'%{event_source}'" }
			id => "msgParserId99"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "AuditLog" {
		# MESSAGE AuditLog:01
		# line in RSA: UserName:'<username>', ModuleName:'<event_source>', Operation:'LOGIN', Resource:'<fld8>', Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserName:'%{username}', ModuleName:'%{event_source}', Operation:'LOGIN', Resource:'%{fld8}', Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}'" }
				id => "message-AuditLog:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "AuditLog:01"
					"[rsa][message][id1]" => "AuditLog:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE AuditLog:02
		# line in RSA: UserName:'<username>', ModuleName:'<event_source>', Operation:'CREATE', Resource:'<fld8>', Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserName:'%{username}', ModuleName:'%{event_source}', Operation:'CREATE', Resource:'%{fld8}', Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}'" }
				id => "message-AuditLog:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "AuditLog:02"
					"[rsa][message][id1]" => "AuditLog:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE AuditLog:03
		# line in RSA: UserName:'<username>', ModuleName:'<event_source>', Operation:'CONFIG UPDATE', Resource:'<fld8>', Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserName:'%{username}', ModuleName:'%{event_source}', Operation:'CONFIG UPDATE', Resource:'%{fld8}', Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}'" }
				id => "message-AuditLog:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "AuditLog:03"
					"[rsa][message][id1]" => "AuditLog:03"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE AuditLog:04
		# line in RSA: UserName:'<username>', ModuleName:'<event_source>', Operation:'SAVE', Resource:'<fld8>', Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserName:'%{username}', ModuleName:'%{event_source}', Operation:'SAVE', Resource:'%{fld8}', Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}'" }
				id => "message-AuditLog:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "AuditLog:04"
					"[rsa][message][id1]" => "AuditLog:04"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE AuditLog:05
		# line in RSA: UserName:'<username>', ModuleName:'<event_source>', Operation:'START', Resource:'<fld8>', Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserName:'%{username}', ModuleName:'%{event_source}', Operation:'START', Resource:'%{fld8}', Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}'" }
				id => "message-AuditLog:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
					"[event][id]" => "AuditLog:05"
					"[rsa][message][id1]" => "AuditLog:05"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE AuditLog:06
		# line in RSA: UserName:'<username>', ModuleName:'<event_source>', Operation:'<action>', Resource:'<fld8>', Time:'<fld1> <fld2> <fld3> <fld4>.<fld7> <fld5> <fld6>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserName:'%{username}', ModuleName:'%{event_source}', Operation:'%{action}', Resource:'%{fld8}', Time:'%{fld1} %{fld2} %{fld3} %{fld4}.%{fld7} %{fld5} %{fld6}'" }
				id => "message-AuditLog:06"
				add_field => {
					"[event][id]" => "AuditLog:06"
					"[rsa][message][id1]" => "AuditLog:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "firewall" {
		# MESSAGE firewall:01
		# line in RSA:   N=<sinterface> OUT=<dinterface> MAC=<macaddr> SRC=<saddr> DST=<daddr> LEN=<fld1> TOS=<fld2> PREC=<fld3> TTL=<fld4> ID=<fld5> PROTO=<protocol> TYPE=<icmptype> CODE=<icmpcode> ID=<fld6> SEQ=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "N=%{sinterface} OUT=%{dinterface} MAC=%{macaddr} SRC=%{saddr} DST=%{daddr} LEN=%{fld1} TOS=%{fld2} PREC=%{fld3} TTL=%{fld4} ID=%{fld5} PROTO=%{protocol} TYPE=%{icmptype} CODE=%{icmpcode} ID=%{fld6} SEQ=%{fld7}" }
				id => "message-firewall:01"
				add_field => {
					"[event][id]" => "firewall:01"
					"[rsa][message][id1]" => "firewall:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firewall:02
		# line in RSA:   N=<sinterface> OUT=<dinterface> SRC=<saddr> DST=<daddr> LEN=<fld1> TOS=<fld2> PREC=<fld3> TTL=<fld4> ID=<fld5> PROTO=<protocol> SPT=<sport> DPT=<dport> LEN=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "N=%{sinterface} OUT=%{dinterface} SRC=%{saddr} DST=%{daddr} LEN=%{fld1} TOS=%{fld2} PREC=%{fld3} TTL=%{fld4} ID=%{fld5} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} LEN=%{fld6}" }
				id => "message-firewall:02"
				add_field => {
					"[event][id]" => "firewall:02"
					"[rsa][message][id1]" => "firewall:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firewall:03
		# line in RSA:   N=<sinterface> OUT=<dinterface> SRC=<saddr> DST=<daddr> LEN=<fld1> TOS=<fld2> PREC=<fld3> TTL=<fld4> ID=<fld5> PROTO=<protocol> TYPE=<icmptype> CODE=<icmpcode> ID=<fld6> SEQ=<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "N=%{sinterface} OUT=%{dinterface} SRC=%{saddr} DST=%{daddr} LEN=%{fld1} TOS=%{fld2} PREC=%{fld3} TTL=%{fld4} ID=%{fld5} PROTO=%{protocol} TYPE=%{icmptype} CODE=%{icmpcode} ID=%{fld6} SEQ=%{fld7}" }
				id => "message-firewall:03"
				add_field => {
					"[event][id]" => "firewall:03"
					"[rsa][message][id1]" => "firewall:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firewall:04
		# line in RSA:   N=<sinterface> OUT=<dinterface> MAC=<macaddr> SRC=<saddr> DST=<daddr> LEN=<fld1> TOS=<fld2> PREC=<fld3> TTL=<fld4> ID=<fld5> DF PROTO=<protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "N=%{sinterface} OUT=%{dinterface} MAC=%{macaddr} SRC=%{saddr} DST=%{daddr} LEN=%{fld1} TOS=%{fld2} PREC=%{fld3} TTL=%{fld4} ID=%{fld5} DF PROTO=%{protocol}" }
				id => "message-firewall:04"
				add_field => {
					"[event][id]" => "firewall:04"
					"[rsa][message][id1]" => "firewall:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firewall:05
		# line in RSA:   N=<sinterface> OUT=<dinterface> SRC=<saddr> DST=<daddr> LEN=<fld1> TOS=<fld2> PREC=<fld3> TTL=<fld4> ID=<fld5> DF PROTO=<protocol> SPT=<sport> WINDOW=<fld6> RES=<fld7> URGP=<fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "N=%{sinterface} OUT=%{dinterface} SRC=%{saddr} DST=%{daddr} LEN=%{fld1} TOS=%{fld2} PREC=%{fld3} TTL=%{fld4} ID=%{fld5} DF PROTO=%{protocol} SPT=%{sport} WINDOW=%{fld6} RES=%{fld7} URGP=%{fld8}" }
				id => "message-firewall:05"
				add_field => {
					"[event][id]" => "firewall:05"
					"[rsa][message][id1]" => "firewall:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-vmware_vshieldmsg.json"
#			template_name => "vmware_vshield_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
