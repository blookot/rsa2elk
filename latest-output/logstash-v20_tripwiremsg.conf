# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "tripwire"
			"[observer][name]" => "Tripwire Enterprise"
			"[observer][type]" => "Configuration Management"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %TRIPWIRE-<hseverity>: <hdatetime> username=<husername> message=<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%TRIPWIRE\-(?<hseverity>[^:]*):[\s]+(?<hdatetime>[^\s]*)[\s]+username=(?<husername>[^\s]*)[\s]+message=(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %TRIPWIRE-<msgIdPart1> <msgIdPart2>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%TRIPWIRE-%{msgIdPart1} %{msgIdPart2}: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %TRIPWIRE-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%TRIPWIRE-%{messageid}: %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hdate> <htime> <hhostname> Tripwire: <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+Tripwire:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hdate> <htime> <hhostip> TE: <hseverity> HostName=<hhostname> LogId=<hfld1> LogCategory="<msgIdPart1> <msgIdPart2> <msgIdPart3>" <!payload:hhostip>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhostip>[^\s]*)[\s]+TE:[\s]+(?<hseverity>[^\s]*)[\s]+HostName=(?<hhostname>[^\s]*)[\s]+LogId=(?<hfld1>[^\s]*)[\s]+LogCategory=\"(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<msgIdPart3>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hdate> <htime> <hhostip> TE: <hseverity> HostName=<hhostname> LogId=<hfld1> LogCategory="<msgIdPart1> <msgIdPart2>" <!payload:hhostip>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhostip>[^\s]*)[\s]+TE:[\s]+(?<hseverity>[^\s]*)[\s]+HostName=(?<hhostname>[^\s]*)[\s]+LogId=(?<hfld1>[^\s]*)[\s]+LogCategory=\"(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hdate> <htime> <hhostip> TE: <hseverity> HostName=<hhostname> LogId=<hfld1> LogCategory=<messageid> <!payload:hhostip>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhostip>[^\s]*)[\s]+TE:[\s]+(?<hseverity>[^\s]*)[\s]+HostName=(?<hhostname>[^\s]*)[\s]+LogId=(?<hfld1>[^\s]*)[\s]+LogCategory=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hdate> <htime> <hostip> TE: <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hostip} TE: %{messageid} %{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hdate> <htime> <hhostname> Tripwire - <hseverity> Log Event: <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+Tripwire[\s]+\-[\s]+(?<hseverity>[^\s]*)[\s]+Log[\s]+Event:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <hmonth> <hdate> <htime> <hostip> TE: <severity> HostName=<hostname> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hostip} TE: %{severity} HostName=%{hostname} %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "TRIPWIRE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9998
	# line in RSA: <hdate> <htime> <hhostname> Tripwire <hfld>: <p_msgid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+Tripwire[\s]+(?<hfld>[^:]*):[\s]+(?<p_msgid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9998"
			add_field => {
				"[rsa][header][id]" => "9998"
				"[rsa][message][id2]" => "TRIPWIRE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9997
	# line in RSA: %TRIPWIRE-<hfld>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%TRIPWIRE-%{hfld}: %{message}" }
			id => "header-9997"
			add_field => {
				"[rsa][header][id]" => "9997"
				"[rsa][message][id2]" => "TRIPWIRE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_tripwiremsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<event_time_string>, Attributes: <info>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{event_time_string}, Attributes: %{info}" }
			id => "msgParserId0"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a", "MMM d  yyyy H:m:s a" ] }
		}
	}
	else if [logstash][msgparser][id] == "Added" {
		# MESSAGE 000002
		# line in RSA: Added Version '<version>' as baseline to Element ''<obj_name>' from Node '<hostname>' and Rule '<rulename>''.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Added Version '%{version}' as baseline to Element ''%{obj_name}' from Node '%{hostname}' and Rule '%{rulename}''." }
				id => "message-000002"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Element"
					"[event][id]" => "000002"
					"[rsa][message][id1]" => "000002"
					"[event][categoryid]" => "1702010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Added
		# line in RSA: <fld10> <fld11> <hostname> Tripwire: Added <filename> on <fld7> by <rulename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{fld11} %{hostname} Tripwire: Added %{filename} on %{fld7} by %{rulename}" }
				id => "message-Added"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "Added"
					"[rsa][message][id1]" => "Added"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld10} %{fld11}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE Added:01
		# line in RSA: <fld10> <fld11> <hostname> Tripwire - <severity> Log Event: Added <filename> on <shost> by <rulename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{fld11} %{hostname} Tripwire - %{severity} Log Event: Added %{filename} on %{shost} by %{rulename}" }
				id => "message-Added:01"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "Added:01"
					"[rsa][message][id1]" => "Added:01"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld10} %{fld11}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Baseline" {
		# MESSAGE 000003
		# line in RSA:  Baseline of node '<hostname>' was completed in '<duration_string>' seconds.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Baseline of node '%{hostname}' was completed in '%{duration_string}' seconds." }
				id => "message-000003"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
					"[event][id]" => "000003"
					"[rsa][message][id1]" => "000003"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Node_Baselining_completed
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg="Baseline of node '<fld15>' was completed in '<duration_string>' seconds." 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=\"Baseline of node '%{fld15}' was completed in '%{duration_string}' seconds.\"" }
				id => "message-Node_Baselining_completed"
				add_field => {
					"[event][id]" => "Node_Baselining_completed"
					"[rsa][message][id1]" => "Node_Baselining_completed"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Baseline_Error
		# line in RSA: <hostip> TE: Error HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: Error HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Baseline_Error"
				add_field => {
				"severity" => "Error"
					"[event][id]" => "Baseline_Error"
					"[rsa][message][id1]" => "Baseline_Error"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Baseline
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg={"Baselining Node '<fld15>' with Rule '<rulename>', preserving any existing baselines."|"Baseline of node '<fld15>' was completed in '<duration_string>' seconds. (<fld16>)"|"Baselining Node '<fld15>' with Rule '<rulename>', for all elements."} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+NodeId=(?<fld14>[^\s]*)[\s]+NodeName=(?<shost>[^\s]*)[\s]+NodeIp=(?<saddr>[^\s]*)[\s]+AssociatedObjects=(?<fld13>[^\s]*)[\s]+Msg=(\"Baselining[\s]+Node[\s]+'(?<fld15>[^']*)'[\s]+with[\s]+Rule[\s]+'(?<rulename>[^']*)',[\s]+preserving[\s]+any[\s]+existing[\s]+baselines\.\"|\"Baseline[\s]+of[\s]+node[\s]+'(?<fld15>[^']*)'[\s]+was[\s]+completed[\s]+in[\s]+'(?<duration_string>[^']*)'[\s]+seconds\.[\s]+\((?<fld16>[^\)]*)\)\"|\"Baselining[\s]+Node[\s]+'(?<fld15>[^']*)'[\s]+with[\s]+Rule[\s]+'(?<rulename>[^']*)',[\s]+for[\s]+all[\s]+elements\.\")[\s]+$" }
				id => "message-Baseline"
				add_field => {
					"[event][id]" => "Baseline"
					"[rsa][message][id1]" => "Baseline"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Baselining" {
		# MESSAGE 000004
		# line in RSA:  Baselining the elements of Node '<hostname>', preserving any existing baselines.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Baselining the elements of Node '%{hostname}', preserving any existing baselines." }
				id => "message-000004"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000005
		# line in RSA:  Baselining new elements associated with Task '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Baselining new elements associated with Task '%{obj_name}'." }
				id => "message-000005"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Task"
					"[event][id]" => "000005"
					"[rsa][message][id1]" => "000005"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA:  Check of node '<hostname>' was completed in '<duration_string>' seconds.
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "Check of node '%{hostname}' was completed in '%{duration_string}' seconds." }
			id => "msgParserId5"
			add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Created" {
		# MESSAGE 000007
		# line in RSA: Created Report Group '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Report Group '%{obj_name}'." }
				id => "message-000007"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Report Group"
					"[event][id]" => "000007"
					"[rsa][message][id1]" => "000007"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000008
		# line in RSA: Created Role '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Role '%{obj_name}'." }
				id => "message-000008"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Role"
					"[event][id]" => "000008"
					"[rsa][message][id1]" => "000008"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000009
		# line in RSA: Created User '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created User '%{obj_name}'." }
				id => "message-000009"
				add_field => {
				"severity" => "%{hseverity}"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"username" => "%{husername}"
				"obj_type" => "User"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000010
		# line in RSA:  Created Archive Log Task '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Archive Log Task '%{obj_name}'." }
				id => "message-000010"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Archive Log Task"
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000011
		# line in RSA:  Created Severity Range '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Severity Range '%{obj_name}'." }
				id => "message-000011"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Severity Range"
					"[event][id]" => "000011"
					"[rsa][message][id1]" => "000011"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000012
		# line in RSA:  Created Update Baseline Action '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Update Baseline Action '%{obj_name}'." }
				id => "message-000012"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Update Baseline Action"
					"[event][id]" => "000012"
					"[rsa][message][id1]" => "000012"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000013
		# line in RSA:  Created Change Window Action '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Change Window Action '%{obj_name}'." }
				id => "message-000013"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Change Window Action"
					"[event][id]" => "000013"
					"[rsa][message][id1]" => "000013"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000014
		# line in RSA:  Created Compact Versions Task '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Compact Versions Task '%{obj_name}'." }
				id => "message-000014"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Compact Versions Task"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000015
		# line in RSA:  Created Criteria Set '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Criteria Set '%{obj_name}'." }
				id => "message-000015"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Criteria Set"
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000016
		# line in RSA:  Created System Log '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created System Log '%{obj_name}'." }
				id => "message-000016"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "System Log"
					"[event][id]" => "000016"
					"[rsa][message][id1]" => "000016"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000017
		# line in RSA:  Created Report Task '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Report Task '%{obj_name}'." }
				id => "message-000017"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Report Task"
					"[event][id]" => "000017"
					"[rsa][message][id1]" => "000017"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000018
		# line in RSA:  Created Device Inventory '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Device Inventory '%{obj_name}'." }
				id => "message-000018"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Device Inventory"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000019
		# line in RSA:  Created System Access Control '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created System Access Control '%{obj_name}'." }
				id => "message-000019"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "System Access Control"
					"[event][id]" => "000019"
					"[rsa][message][id1]" => "000019"
					"[event][categoryid]" => "1501020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000020
		# line in RSA:  Created User Roles '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created User Roles '%{obj_name}'." }
				id => "message-000020"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "AccessControl"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "User Roles"
					"[event][id]" => "000020"
					"[rsa][message][id1]" => "000020"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000021
		# line in RSA:  Created Node Group '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Node Group '%{obj_name}'." }
				id => "message-000021"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Node Group"
					"[event][id]" => "000021"
					"[rsa][message][id1]" => "000021"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000022
		# line in RSA:  Created Windows Server '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Windows Server '%{obj_name}'." }
				id => "message-000022"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Windows Server"
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000023
		# line in RSA:  Created Rule Group '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Rule Group '%{obj_name}'." }
				id => "message-000023"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Rule Group"
					"[event][id]" => "000023"
					"[rsa][message][id1]" => "000023"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000024
		# line in RSA:  Created Check Rule Task '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Check Rule Task '%{obj_name}'." }
				id => "message-000024"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Check Rule Task"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000025
		# line in RSA:  Created Execution Action '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Execution Action '%{obj_name}'." }
				id => "message-000025"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Execution Action"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000026
		# line in RSA:  Created Changed Elements '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Changed Elements '%{obj_name}'." }
				id => "message-000026"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Changed Elements "
					"[event][id]" => "000026"
					"[rsa][message][id1]" => "000026"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000027
		# line in RSA:  Created Windows File System Rule '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created Windows File System Rule '%{obj_name}'." }
				id => "message-000027"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Windows File System Rule"
					"[event][id]" => "000027"
					"[rsa][message][id1]" => "000027"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000028
		# line in RSA:  Created License for feature '<obj_name>' for host '<hostname>' with count '<dclass_counter1>' and expiring on '<fld12> <fld13>, <fld14>' Feature: <fld2> Host:<fld3> Count: <fld4> Expiring on: <fld5> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created License for feature '%{obj_name}' for host '%{hostname}' with count '%{dclass_counter1}' and expiring on '%{fld12} %{fld13}, %{fld14}' Feature: %{fld2} Host:%{fld3} Count: %{fld4} Expiring on: %{fld5}" }
				id => "message-000028"
				add_field => {
				"ec_subject" => "License"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "feature"
					"[event][id]" => "000028"
					"[rsa][message][id1]" => "000028"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000029
		# line in RSA:  Created License for feature '<obj_name>' for host '<hostname>' with count '<dclass_counter1>' and expiring on '<fld12> <fld13>, <fld14>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created License for feature '%{obj_name}' for host '%{hostname}' with count '%{dclass_counter1}' and expiring on '%{fld12} %{fld13}, %{fld14}'" }
				id => "message-000029"
				add_field => {
				"ec_subject" => "License"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "feature"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Deleted" {
		# MESSAGE 000030
		# line in RSA:  Deleted System Log '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Deleted System Log '%{obj_name}'." }
				id => "message-000030"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "System Log"
					"[event][id]" => "000030"
					"[rsa][message][id1]" => "000030"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000031
		# line in RSA:  Deleted System Access Control '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Deleted System Access Control '%{obj_name}'." }
				id => "message-000031"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "System Access Control"
					"[event][id]" => "000031"
					"[rsa][message][id1]" => "000031"
					"[event][categoryid]" => "1501030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000032
		# line in RSA:  Deleted Device Inventory '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Deleted Device Inventory '%{obj_name}'." }
				id => "message-000032"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Device Inventory"
					"[event][id]" => "000032"
					"[rsa][message][id1]" => "000032"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000033
		# line in RSA:  Deleted User Roles '<obj_name>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Deleted User Roles '%{obj_name}'." }
				id => "message-000033"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "User Roles"
					"[event][id]" => "000033"
					"[rsa][message][id1]" => "000033"
					"[event][categoryid]" => "1402010100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<event_time_string>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{event_time_string}, Attributes: %{info}" }
			id => "msgParserId33"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a", "MMM d  yyyy H:m:s a" ] }
		}
	}
	# PARSER msgParserId34
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<event_time_string>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{event_time_string}, Attributes: %{info}" }
			id => "msgParserId34"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a", "MMM d  yyyy H:m:s a" ] }
		}
	}
	# PARSER msgParserId35
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<event_time_string>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{event_time_string}, Attributes: %{info}" }
			id => "msgParserId35"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a", "MMM d  yyyy H:m:s a" ] }
		}
	}
	# PARSER msgParserId36
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<event_time_string>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{event_time_string}, Attributes: %{info}" }
			id => "msgParserId36"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a", "MMM d  yyyy H:m:s a" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<event_time_string>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{event_time_string}, Attributes: %{info}" }
			id => "msgParserId37"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a", "MMM d  yyyy H:m:s a" ] }
		}
	}
	# PARSER msgParserId38
	# line in RSA: Login attempt for '<username>' failed.
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "Login attempt for '%{username}' failed." }
			id => "msgParserId38"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Modified" {
		# MESSAGE 000045
		# line in RSA:  Modified System Log '<obj_name>'. Changed '<change_attribute>' from "<change_old>" to "<change_new>".
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Modified System Log '%{obj_name}'. Changed '%{change_attribute}' from \"%{change_old}\" to \"%{change_new}\"." }
				id => "message-000045"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "System Log"
					"[event][id]" => "000045"
					"[rsa][message][id1]" => "000045"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Modified
		# line in RSA: <fld10> <fld11> <hostname> Tripwire: Modified <filename> on <shost> by <rulename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{fld11} %{hostname} Tripwire: Modified %{filename} on %{shost} by %{rulename}" }
				id => "message-Modified"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "Modified"
					"[rsa][message][id1]" => "Modified"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld10} %{fld11}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE Modified:01
		# line in RSA: <fld10> <fld11> <hostname> Tripwire - <severity> Log Event: Modified <filename><space>on <shost> by <rulename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{fld11} %{hostname} Tripwire - %{severity} Log Event: Modified %{filename}%{space}on %{shost} by %{rulename}" }
				id => "message-Modified:01"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "Modified:01"
					"[rsa][message][id1]" => "Modified:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld10} %{fld11}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA:  Moved Windows Server '<hostname>' from Node Group '<change_old>' to Node Group '<change_new>'.
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "Moved Windows Server '%{hostname}' from Node Group '%{change_old}' to Node Group '%{change_new}'." }
			id => "msgParserId40"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"change_attribute" => "Node Group"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA:  Node <hostname> started.
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "Node %{hostname} started." }
			id => "msgParserId41"
			add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: Password was changed for user '<c_username>'.
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Password was changed for user '%{c_username}'." }
			id => "msgParserId42"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Promoting" {
		# MESSAGE 000049
		# line in RSA:  Promoting Element ''<obj_name>' from Node '<hostname>' and Rule '<rulename>''.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Promoting Element ''%{obj_name}' from Node '%{hostname}' and Rule '%{rulename}''." }
				id => "message-000049"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Element"
					"[event][id]" => "000049"
					"[rsa][message][id1]" => "000049"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000050
		# line in RSA:  Promoting Node '<hostname>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Promoting Node '%{hostname}'." }
				id => "message-000050"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
					"[event][id]" => "000050"
					"[rsa][message][id1]" => "000050"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA:  Role '<obj_name>' was added to user '<c_username>'.
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "Role '%{obj_name}' was added to user '%{c_username}'." }
			id => "msgParserId45"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Role"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Task" {
		# MESSAGE 000053
		# line in RSA:  Task '<obj_name>' was started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Task '%{obj_name}' was started." }
				id => "message-000053"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Task"
					"[event][id]" => "000053"
					"[rsa][message][id1]" => "000053"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000054
		# line in RSA:  Task '<obj_name>' was completed in <duration_string> seconds.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Task '%{obj_name}' was completed in %{duration_string} seconds." }
				id => "message-000054"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Task"
					"[event][id]" => "000054"
					"[rsa][message][id1]" => "000054"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000055
		# line in RSA:  Task '<obj_name>' missed at least one run because the Scheduler was not running at a time that the task was scheduled to run.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Task '%{obj_name}' missed at least one run because the Scheduler was not running at a time that the task was scheduled to run." }
				id => "message-000055"
				add_field => {
				"severity" => "%{hseverity}"
				"username" => "%{husername}"
				"obj_type" => "Task"
					"[event][id]" => "000055"
					"[rsa][message][id1]" => "000055"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "User" {
		# MESSAGE 000056
		# line in RSA: User '<username>' logged out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User '%{username}' logged out." }
				id => "message-000056"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"severity" => "%{hseverity}"
					"[event][id]" => "000056"
					"[rsa][message][id1]" => "000056"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000057
		# line in RSA: User '<username>' logged in.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User '%{username}' logged in." }
				id => "message-000057"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"severity" => "%{hseverity}"
					"[event][id]" => "000057"
					"[rsa][message][id1]" => "000057"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11> <fld12>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<fld13> <fld14> <fld15>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11} %{fld12}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{fld13} %{fld14} %{fld15}, Attributes: %{info}" }
			id => "msgParserId51"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{fld13} %{fld14} %{fld15}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA: node=<hostname>, server=<event_source>, rule=<rulename>, ruletype=<rule_template>, element=<obj_name>, version=<fld10> <fld11> <fld12>, changeType=<fld1>, changeTypeName=<disposition>, severity=<fld2>, severityname=<severity>, time=<fld13> <fld14> <fld15>, Attributes: <info>
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "node=%{hostname}, server=%{event_source}, rule=%{rulename}, ruletype=%{rule_template}, element=%{obj_name}, version=%{fld10} %{fld11} %{fld12}, changeType=%{fld1}, changeTypeName=%{disposition}, severity=%{fld2}, severityname=%{severity}, time=%{fld13} %{fld14} %{fld15}, Attributes: %{info}" }
			id => "msgParserId52"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"obj_type" => "Element"
				"[logstash][fullDateTimeString]" => "%{fld13} %{fld14} %{fld15}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: Connection 
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "Connection" }
			id => "msgParserId55"
			add_field => {
				"event_description" => "Test Connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> {LogUser=<username> ElementId=<fld18> VerId=<fld19> | LogUser=<username>} AssociatedObjects=<fld13> Msg=<info> 
	else if [logstash][msgparser][id] == "msgParserId56" {
		grok {
			match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+(LogUser=(?<username>[^\s]*)[\s]+ElementId=(?<fld18>[^\s]*)[\s]+VerId=(?<fld19>[^\s]*)[\s]+|[\s]*LogUser=(?<username>[^\s]*))[\s]+AssociatedObjects=(?<fld13>[^\s]*)[\s]+Msg=(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId56"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId57
	# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info> 
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
			id => "msgParserId57"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> AccessType=<fld17> EventType=<action> AppType=<obj_name> ElementId=<fld18> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> {VerId=<fld19> AssociatedObjects=<fld13> | AssociatedObjects=<fld13>} { Msg="'<filename>' accessed by <fld1> <info> | <info> } 
	else if [logstash][msgparser][id] == "msgParserId58" {
		grok {
			match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+AccessType=(?<fld17>[^\s]*)[\s]+EventType=(?<action>[^\s]*)[\s]+AppType=(?<obj_name>[^\s]*)[\s]+ElementId=(?<fld18>[^\s]*)[\s]+NodeId=(?<fld14>[^\s]*)[\s]+NodeName=(?<shost>[^\s]*)[\s]+NodeIp=(?<saddr>[^\s]*)[\s]+(VerId=(?<fld19>[^\s]*)[\s]+AssociatedObjects=(?<fld13>[^\s]*)[\s]+|[\s]*AssociatedObjects=(?<fld13>[^\s]*))[\s]+([\s]*Msg=\"'(?<filename>[^']*)'[\s]+accessed[\s]+by[\s]+(?<fld1>[^\s]*)[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId58"
			add_field => {
				"obj_type" => "AppType"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> Msg=<info> 
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} Msg=%{info}" }
			id => "msgParserId59"
			add_field => {
				"obj_type" => "AppType"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Change" {
		# MESSAGE Change_MODIFY
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=MODIFY {AssociatedObjects=<fld13> Msg=<info> | Msg=<info>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+ChangeType=MODIFY[\s]+(AssociatedObjects=(?<fld13>[^\s]*)[\s]+Msg=(?<info>[^\s]*)[\s]+|[\s]*Msg=(?<info>[^\s]*))[\s]+$" }
				id => "message-Change_MODIFY"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "Modifying existing configuration"
					"[event][id]" => "Change_MODIFY"
					"[rsa][message][id1]" => "Change_MODIFY"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Change_ADD
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> {ChangeType=ADD NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> | ChangeType=ADD} AssociatedObjects=<fld13> Msg=<info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+(ChangeType=ADD[\s]+NodeId=(?<fld14>[^\s]*)[\s]+NodeName=(?<shost>[^\s]*)[\s]+NodeIp=(?<saddr>[^\s]*)[\s]+|[\s]*ChangeType=ADD)[\s]+AssociatedObjects=(?<fld13>[^\s]*)[\s]+Msg=(?<info>[^\s]*)[\s]+$" }
				id => "message-Change_ADD"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "Adding new configuration"
					"[event][id]" => "Change_ADD"
					"[rsa][message][id1]" => "Change_ADD"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Change_REMOVE:01
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=REMOVE NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=REMOVE NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Change_REMOVE:01"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Removing existing configuration"
					"[event][id]" => "Change_REMOVE:01"
					"[rsa][message][id1]" => "Change_REMOVE:01"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Change_REMOVE:02
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> { ChangeType=REMOVE AssociatedObjects=<fld13> | ChangeType=REMOVE } Msg=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+([\s]*ChangeType=REMOVE[\s]+AssociatedObjects=(?<fld13>[^\s]*)[\s]+|[\s]*ChangeType=REMOVE[\s]+)[\s]+Msg=(?<info>.*)$" }
				id => "message-Change_REMOVE:02"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Removing existing configuration"
					"[event][id]" => "Change_REMOVE:02"
					"[rsa][message][id1]" => "Change_REMOVE:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Change_MOVE
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=MOVE AssociatedObjects=<fld13> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=MOVE AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Change_MOVE"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "Moving existing configuration"
					"[event][id]" => "Change_MOVE"
					"[rsa][message][id1]" => "Change_MOVE"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Element_Check" {
		# MESSAGE Element_Check
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Element_Check"
				add_field => {
					"[event][id]" => "Element_Check"
					"[rsa][message][id1]" => "Element_Check"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Element_Check:01
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ElementId=<fld16> AssociatedObjects=<fld13> Msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ElementId=%{fld16} AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Element_Check:01"
				add_field => {
					"[event][id]" => "Element_Check:01"
					"[rsa][message][id1]" => "Element_Check:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Node_Change" {
		# MESSAGE Node_Change:Add1
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=ADD NodeId=<node> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=ADD NodeId=%{node} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Node_Change:Add1"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "Node_Change:Add1"
					"[rsa][message][id1]" => "Node_Change:Add1"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Node_Change:Add
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=ADD AssociatedObjects=<fld13> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=ADD AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Node_Change:Add"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "Node_Change:Add"
					"[rsa][message][id1]" => "Node_Change:Add"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Node_Change:Modify
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=MODIFY { NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13>| AssociatedObjects=<fld13> } Msg=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+ChangeType=MODIFY[\s]+([\s]*NodeId=(?<fld14>[^\s]*)[\s]+NodeName=(?<shost>[^\s]*)[\s]+NodeIp=(?<saddr>[^\s]*)[\s]+AssociatedObjects=(?<fld13>[^\s]*)|[\s]*AssociatedObjects=(?<fld13>[^\s]*)[\s]+)[\s]+Msg=(?<info>.*)$" }
				id => "message-Node_Change:Modify"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "Node_Change:Modify"
					"[rsa][message][id1]" => "Node_Change:Modify"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Node_Change:Remove
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=REMOVE { NodeId=<fld14> AssociatedObjects=<fld13>| AssociatedObjects=<fld13> } Msg=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostip>[^\s]*)[\s]+TE:[\s]+(?<severity>[^\s]*)[\s]+HostName=(?<hostname>[^\s]*)[\s]+LogId=(?<fld12>[^\s]*)[\s]+LogCategory=(?<category>[^\s]*)[\s]+LogUser=(?<username>[^\s]*)[\s]+ChangeType=REMOVE[\s]+([\s]*NodeId=(?<fld14>[^\s]*)[\s]+AssociatedObjects=(?<fld13>[^\s]*)|[\s]*AssociatedObjects=(?<fld13>[^\s]*)[\s]+)[\s]+Msg=(?<info>.*)$" }
				id => "message-Node_Change:Remove"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
					"[event][id]" => "Node_Change:Remove"
					"[rsa][message][id1]" => "Node_Change:Remove"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info>
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
			id => "msgParserId73"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Rule_Change" {
		# MESSAGE Rule_Change:Add
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=ADD AssociatedObjects=<fld13> Msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=ADD AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Rule_Change:Add"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "Modifying rule"
					"[event][id]" => "Rule_Change:Add"
					"[rsa][message][id1]" => "Rule_Change:Add"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Rule_Change:Modify
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=MODIFY AssociatedObjects=<fld13> Msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=MODIFY AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Rule_Change:Modify"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "Modifying rule"
					"[event][id]" => "Rule_Change:Modify"
					"[rsa][message][id1]" => "Rule_Change:Modify"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Rule_Change:Remove
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> ChangeType=REMOVE AssociatedObjects=<fld13> Msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} ChangeType=REMOVE AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-Rule_Change:Remove"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Modifying rule"
					"[event][id]" => "Rule_Change:Remove"
					"[rsa][message][id1]" => "Rule_Change:Remove"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Security" {
		# MESSAGE Security_Login_Failed
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<fld6> Msg="Login attempt for '<username>' failed." 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{fld6} Msg=\"Login attempt for '%{username}' failed.\"" }
				id => "message-Security_Login_Failed"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_Login_Failed"
					"[rsa][message][id1]" => "Security_Login_Failed"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Security_User_Logout
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<fld6> AssociatedObjects=<fld13> Msg="User '<username>' logged out." 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{fld6} AssociatedObjects=%{fld13} Msg=\"User '%{username}' logged out.\"" }
				id => "message-Security_User_Logout"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "Security_User_Logout"
					"[rsa][message][id1]" => "Security_User_Logout"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Security_User_Login
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<fld6> AssociatedObjects=<fld13> Msg="User '<username>' logged in." 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{fld6} AssociatedObjects=%{fld13} Msg=\"User '%{username}' logged in.\"" }
				id => "message-Security_User_Login"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_User_Login"
					"[rsa][message][id1]" => "Security_User_Login"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Security
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<fld6> Msg=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{fld6} Msg=%{info}" }
				id => "message-Security"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "Security"
					"[rsa][message][id1]" => "Security"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE System:01
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> AssociatedObjects=<fld13> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} AssociatedObjects=%{fld13} Msg=%{info}" }
				id => "message-System:01"
				add_field => {
					"[event][id]" => "System:01"
					"[rsa][message][id1]" => "System:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE System:02
		# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} Msg=%{info}" }
				id => "message-System:02"
				add_field => {
					"[event][id]" => "System:02"
					"[rsa][message][id1]" => "System:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: <hostip> TE: <severity> HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> AssociatedObjects=<fld13> Msg=<info> 
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{hostip} TE: %{severity} HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} AssociatedObjects=%{fld13} Msg=%{info}" }
			id => "msgParserId83"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA: HostName=<hostname> LogId=<fld12> LogCategory=<category> LogUser=<username> AssociatedObjects=<fld13> Msg=<info> 
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "HostName=%{hostname} LogId=%{fld12} LogCategory=%{category} LogUser=%{username} AssociatedObjects=%{fld13} Msg=%{info}" }
			id => "msgParserId84"
			add_field => {
				"severity" => "%{messageid}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId86
	# line in RSA: <fld10> <fld11> <hostname> Tripwire - <severity> Log Event: Removed <filename> on <shost> by <rulename>
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "%{fld10} %{fld11} %{hostname} Tripwire - %{severity} Log Event: Removed %{filename} on %{shost} by %{rulename}" }
			id => "msgParserId86"
			add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{fld10} %{fld11}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "TRIPWIRE_GENERIC" {
		# MESSAGE TRIPWIRE_GENERIC
		# line in RSA: LogId=<fld> LogCategory=<category> LogUser=<username> AccessType=<fld> EventType=<action> AppType=<obj_name> ChangeType=<event_type> ElementId=<fld> NodeId=<fld14> NodeName=<shost> NodeIp=<saddr> VerId=<fld> AssociatedObjects=<fld> Msg=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LogId=%{fld} LogCategory=%{category} LogUser=%{username} AccessType=%{fld} EventType=%{action} AppType=%{obj_name} ChangeType=%{event_type} ElementId=%{fld} NodeId=%{fld14} NodeName=%{shost} NodeIp=%{saddr} VerId=%{fld} AssociatedObjects=%{fld} Msg=%{info}" }
				id => "message-TRIPWIRE_GENERIC"
				add_field => {
				"obj_type" => "AppType"
					"[event][id]" => "TRIPWIRE_GENERIC"
					"[rsa][message][id1]" => "TRIPWIRE_GENERIC"
					"[event][categoryid]" => "1901000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TRIPWIRE_GENERIC:01
		# line in RSA: <fld1> <fld2> <hostname> {Tripwire - <fld>: | Tripwire:} <fld>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(Tripwire[\s]+\-[\s]+(?<fld>[^:]*):[\s]+|[\s]*Tripwire:)[\s]+(?<fld>.*)$" }
				id => "message-TRIPWIRE_GENERIC:01"
				add_field => {
					"[event][id]" => "%{p_msgid}"
					"[rsa][message][id1]" => "TRIPWIRE_GENERIC:01"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE TRIPWIRE_GENERIC:02
		# line in RSA: <fld>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld}" }
				id => "message-TRIPWIRE_GENERIC:02"
				add_field => {
					"[event][id]" => "TRIPWIRE_GENERIC:02"
					"[rsa][message][id1]" => "TRIPWIRE_GENERIC:02"
					"[event][categoryid]" => "1901000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_tripwiremsg.json"
#			template_name => "tripwire_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
