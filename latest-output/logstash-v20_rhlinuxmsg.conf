# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "rhlinux"
			"[observer][name]" => "Linux"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0078
	# line in RSA: <month> <day> <time> Message forwarded from <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+Message[\s]+forwarded[\s]+from[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0078"
			add_field => {
				"[rsa][header][id]" => "0078"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0096
	# line in RSA: <month> <day> <time> {Message forwarded from|From}<hhost>:<messageid>[<hdata>]:<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(Message[\s]+forwarded[\s]+from|From)(?<hhost>[^:]*):(?<message>(?<messageid>[^\[]*)\[(?<hdata>[^\]]*)\]:(?<payload>.*))$" }
			id => "header-0096"
			add_field => {
				"[rsa][header][id]" => "0096"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0095
	# line in RSA: <fld1> <hyear>-<hmonth>-<hday>T<hhour>:<hmin>:<hsec>.<hfld99> <hhost> <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{fld1} %{hyear}-%{hmonth}-%{hday}T%{hhour}:%{hmin}:%{hsec}.%{hfld99} %{hhost} %{messageid} %{message}" }
			id => "header-0095"
			add_field => {
				"[rsa][header][id]" => "0095"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: Error logging to file,{ No Sp | No | N } <msgIdPart1> forwarded from <hhost>: <hagent> <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Error[\s]+logging[\s]+to[\s]+file,([\s]*No[\s]+Sp[\s]+|[\s]*No[\s]+|[\s]*N[\s]+)[\s]+(?<msgIdPart1>[^\s]*)[\s]+forwarded[\s]+from[\s]+(?<message>(?<hhost>[^:]*):[\s]+(?<hagent>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "No_%{msgIdPart1}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9998
	# line in RSA: : <msgIdPart1> <msgIdPart2>: <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^:[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-9998"
			add_field => {
				"[rsa][header][id]" => "9998"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9997
	# line in RSA: : <msgIdPart1> <msgIdPart2> <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^:[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-9997"
			add_field => {
				"[rsa][header][id]" => "9997"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2222
	# line in RSA: <hfld2>: User <hfld1> has logged in <!payload:$START>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld2>[^:]*):[\s]+User[\s]+(?<hfld1>[^\s]*)[\s]+has[\s]+logged[\s]+in[\s]+(?<payload>.*))$" }
			id => "header-2222"
			add_field => {
				"[rsa][header][id]" => "2222"
				"[rsa][message][id2]" => "User_LoggedIn"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2223
	# line in RSA: <month> <day> <time> <hhost> %APACHE: <hfld1> Safari/<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+%APACHE:[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+Safari/(?<payload>.*))$" }
			id => "header-2223"
			add_field => {
				"[rsa][header][id]" => "2223"
				"[rsa][message][id2]" => "Mobile_Safari"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1100
	# line in RSA: /usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/<messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^/usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1100"
			add_field => {
				"[rsa][header][id]" => "1100"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1110
	# line in RSA: /opt/proofpoint/<hversion>/appliance/systemscripts/<messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^/opt/proofpoint/(?<hversion>[^/]*)/appliance/systemscripts/(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1110"
			add_field => {
				"[rsa][header][id]" => "1110"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1119
	# line in RSA: /u01/app/{ oracle/product/11gR2/grid1/bin | root/product/grid/11gR2/bin | root/product/11g/grid/bin | root/product/11gR2/grid/bin | oracle/product/11.2.0/grid/bin | 11.2.0/grid/bin } /<messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^/u01/app/([\s]*oracle/product/11gR2/grid1/bin[\s]+|[\s]*root/product/grid/11gR2/bin[\s]+|[\s]*root/product/11g/grid/bin[\s]+|[\s]*root/product/11gR2/grid/bin[\s]+|[\s]*oracle/product/11\.2\.0/grid/bin[\s]+|[\s]*11\.2\.0/grid/bin[\s]+)[\s]+/(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1119"
			add_field => {
				"[rsa][header][id]" => "1119"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1120
	# line in RSA: /app/{ oracle/product/11gR2/grid1/bin | root/product/grid/11gR2/bin | root/product/11g/grid/bin | root/product/11gR2/grid/bin | oracle/product/11.2.0/grid/bin | 11.2.0/grid/bin } /<messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^/app/([\s]*oracle/product/11gR2/grid1/bin[\s]+|[\s]*root/product/grid/11gR2/bin[\s]+|[\s]*root/product/11g/grid/bin[\s]+|[\s]*root/product/11gR2/grid/bin[\s]+|[\s]*oracle/product/11\.2\.0/grid/bin[\s]+|[\s]*11\.2\.0/grid/bin[\s]+)[\s]+/(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1120"
			add_field => {
				"[rsa][header][id]" => "1120"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1130
	# line in RSA: Oracle GoldenGate Manager for <messageid>[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Oracle[\s]+GoldenGate[\s]+Manager[\s]+for[\s]+(?<message>(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1130"
			add_field => {
				"[rsa][header][id]" => "1130"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1140
	# line in RSA: [<process_id>]: <messageid>: <!payload:process_id>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^\[(?<message>(?<process_id>[^\]]*)\]:[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-1140"
			add_field => {
				"[rsa][header][id]" => "1140"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1141
	# line in RSA: <hfld1>: <messageid>::<hfld2> = STRING <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^:]*):[\s]+(?<messageid>[^:]*)::(?<hfld2>[^\s]*)[\s]+=[\s]+STRING[\s]+(?<payload>.*))$" }
			id => "header-1141"
			add_field => {
				"[rsa][header][id]" => "1141"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1111
	# line in RSA: <messageid> MARK -- <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\s]*)[\s]+MARK[\s]+\-\-[\s]+(?<payload>.*))$" }
			id => "header-1111"
			add_field => {
				"[rsa][header][id]" => "1111"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1112
	# line in RSA: <month> <day> <time> <hhost> <husername>: Arcsight Unix <messageid> from <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<husername>[^:]*):[\s]+Arcsight[\s]+Unix[\s]+(?<messageid>[^\s]*)[\s]+from[\s]+(?<payload>.*))$" }
			id => "header-1112"
			add_field => {
				"[rsa][header][id]" => "1112"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1113
	# line in RSA: <husername>: Arcsight Unix <messageid> from <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<husername>[^:]*):[\s]+Arcsight[\s]+Unix[\s]+(?<messageid>[^\s]*)[\s]+from[\s]+(?<payload>.*))$" }
			id => "header-1113"
			add_field => {
				"[rsa][header][id]" => "1113"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1114
	# line in RSA: <husername>: [<messageid>] :  <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<husername>[^:]*):[\s]+\[(?<messageid>[^\]]*)\][\s]+:[\s]+(?<payload>.*))$" }
			id => "header-1114"
			add_field => {
				"[rsa][header][id]" => "1114"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <messageid>(pam_unix)[<process_id>]:  <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\(]*)\(pam_unix\)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <messageid>[<process_id>]debug1: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]debug1:[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: [<messageid>][<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^\[(?<message>(?<messageid>[^\]]*)\]\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0033
	# line in RSA: [<messageid>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^\[(?<message>(?<messageid>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0033"
			add_field => {
				"[rsa][header][id]" => "0033"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: (<messageid>)[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^\((?<message>(?<messageid>[^\)]*)\)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: (<messageid>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^\((?<message>(?<messageid>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 5556
	# line in RSA: <month> <day> <time> <hhost> <messageid>[<process_id>]: nss_ldap: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+nss_ldap:[\s]+(?<payload>.*))$" }
			id => "header-5556"
			add_field => {
				"[rsa][header][id]" => "5556"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 5558
	# line in RSA: <messageid>[<process_id>]: nss_ldap: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+nss_ldap:[\s]+(?<payload>.*))$" }
			id => "header-5558"
			add_field => {
				"[rsa][header][id]" => "5558"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 5560
	# line in RSA: <month> <day> <time> <hhost> <husername>: nss_ldap: <messageid> <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<husername>[^:]*):[\s]+nss_ldap:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-5560"
			add_field => {
				"[rsa][header][id]" => "5560"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 5561
	# line in RSA: <husername>: nss_ldap: <messageid> <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<husername>[^:]*):[\s]+nss_ldap:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-5561"
			add_field => {
				"[rsa][header][id]" => "5561"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 5562
	# line in RSA: <husername>: <messageid> of <hfld1> version <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<husername>[^:]*):[\s]+(?<messageid>[^\s]*)[\s]+of[\s]+(?<hfld1>[^\s]*)[\s]+version[\s]+(?<payload>.*))$" }
			id => "header-5562"
			add_field => {
				"[rsa][header][id]" => "5562"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 5563
	# line in RSA: <husername>: <messageid> { weblogic server | -9 } <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<husername>[^:]*):[\s]+(?<messageid>[^\s]*)[\s]+([\s]*weblogic[\s]+server[\s]+|[\s]*\-9[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-5563"
			add_field => {
				"[rsa][header][id]" => "5563"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 6555
	# line in RSA: <messageid>logd-<hfld1>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^l]*)logd\-(?<hfld1>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-6555"
			add_field => {
				"[rsa][header][id]" => "6555"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <messageid>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1121
	# line in RSA: <messageid>(<data>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\(]*)\((?<data>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-1121"
			add_field => {
				"[rsa][header][id]" => "1121"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 6666
	# line in RSA: [opswgw-gateway-<hfld1>: <messageid>][<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^\[opswgw\-gateway\-(?<hfld1>[^:]*):[\s]+(?<message>(?<messageid>[^\]]*)\]\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-6666"
			add_field => {
				"[rsa][header][id]" => "6666"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 6667
	# line in RSA: <messageid>.<hfld1>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\.]*)\.(?<hfld1>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-6667"
			add_field => {
				"[rsa][header][id]" => "6667"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: {"<messageid>|<messageid>}:<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(\"(?<messageid>[^:]*)|(?<messageid>[^:]*)):(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <messageid>/<hfld1>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^/]*)/(?<hfld1>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1009
	# line in RSA: <hfld1>[<data>]: [<hfld2>] <husername>: [<hfld3>] <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+\[(?<hfld2>[^\]]*)\][\s]+(?<husername>[^:]*):[\s]+\[(?<hfld3>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1009"
			add_field => {
				"[rsa][header][id]" => "1009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2010
	# line in RSA: <month> <day> <time> <hhost> <messageid>: <space>node=<hfld6> type=<hfld4> msg=<hfld8>(<hfld5>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<space>[^n]*)node=(?<hfld6>[^\s]*)[\s]+type=(?<hfld4>[^\s]*)[\s]+msg=(?<hfld8>[^\(]*)\((?<hfld5>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-2010"
			add_field => {
				"[rsa][header][id]" => "2010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2012
	# line in RSA: <hfld1> <hfld2> <hfld3> node=<hhost> type=<hfld4> msg=<messageid>(<hfld5>): <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+node=(?<hhost>[^\s]*)[\s]+type=(?<message>(?<hfld4>[^\s]*)[\s]+msg=(?<messageid>[^\(]*)\((?<hfld5>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-2012"
			add_field => {
				"[rsa][header][id]" => "2012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 3009
	# line in RSA: <hfld1> <hfld2> <hfld3> <hhost> audit_log: type=<hfld4> msg=<hfld6>(<hfld5>): <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+audit_log:[\s]+type=(?<message>(?<hfld4>[^\s]*)[\s]+msg=(?<hfld6>[^\(]*)\((?<hfld5>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-3009"
			add_field => {
				"[rsa][header][id]" => "3009"
				"[rsa][message][id2]" => "audit_log"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2013
	# line in RSA: <month> <day> <time> <hhost> <hfld7> type=<hfld4> msg=<messageid>(<hfld5>): <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+type=(?<message>(?<hfld4>[^\s]*)[\s]+msg=(?<messageid>[^\(]*)\((?<hfld5>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-2013"
			add_field => {
				"[rsa][header][id]" => "2013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2009
	# line in RSA: <month> <day> <time> <hhost> type=<hfld4> msg=<messageid>(<hfld5>): <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+type=(?<message>(?<hfld4>[^\s]*)[\s]+msg=(?<messageid>[^\(]*)\((?<hfld5>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-2009"
			add_field => {
				"[rsa][header][id]" => "2009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <month> <day> <time> <hhost> [<messageid>][<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+\[(?<message>(?<messageid>[^\]]*)\]\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0094
	# line in RSA: <month> <day> <time> <hhost> <messageid>[<process_id>[collect_postgres_rollups.py.ERROR]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\[]*)\[collect_postgres_rollups\.py\.ERROR\]:[\s]+(?<payload>.*))$" }
			id => "header-0094"
			add_field => {
				"[rsa][header][id]" => "0094"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <month> <day> <time> <hhost> <messageid>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0079
	# line in RSA: <month> <day> <time> <hfld1> <hfld2> 0[<hfld3>]: <messageid>: Authentication <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hfld2>[^\s]*)[\s]+0\[(?<hfld3>[^\]]*)\]:[\s]+(?<messageid>[^:]*):[\s]+Authentication[\s]+(?<payload>.*))$" }
			id => "header-0079"
			add_field => {
				"[rsa][header][id]" => "0079"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0073
	# line in RSA: <month> <day> <time> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0073"
			add_field => {
				"[rsa][header][id]" => "0073"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <month> <day> <time> <hhost> <<<messageid>> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+<(?<message>(?<messageid>[^>]*)>[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <month> <day> <time> <hhost> (<messageid>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+\((?<message>(?<messageid>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <month> <day> <time> <hhost> <messageid>(pam_unix)[<process_id>]:  <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\(]*)\(pam_unix\)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <month> <day> <time> <hhost> (<messageid>)[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+\((?<message>(?<messageid>[^\)]*)\)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00116
	# line in RSA: <date>T<time>Z <hhost> <messageid>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<date>[^T]*)T(?<time>[^Z]*)Z[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-00116"
			add_field => {
				"[rsa][header][id]" => "00116"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: <month> <day> <time> <hhost> <messageid>[<process_id>]debug1: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]debug1:[\s]+(?<payload>.*))$" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: <month> <day> <time> <hhost> <messageid>/<hfld1>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^/]*)/(?<hfld1>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0082
	# line in RSA: <month> <day> <time> <hhost> <hfld1>: <hfld2>: <hfld3>: %IPPHONE <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hhost} %{hfld1}: %{hfld2}: %{hfld3}: %IPPHONE %{message}" }
			id => "header-0082"
			add_field => {
				"[rsa][header][id]" => "0082"
				"[rsa][message][id2]" => "%IPPHONE"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00119
	# line in RSA: <date>T<time>Z <hhost> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<date>[^T]*)T(?<time>[^Z]*)Z[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-00119"
			add_field => {
				"[rsa][header][id]" => "00119"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <month> <day> <time> <hhost> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0080
	# line in RSA: <month> <day> <time> <hhost> <fld1>[<fld2>]: [<messageid>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hhost} %{fld1}[%{fld2}]: [%{messageid}]: %{message}" }
			id => "header-0080"
			add_field => {
				"[rsa][header][id]" => "0080"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0092
	# line in RSA: <month> <day> <time> <hhost> [<fld1>[<messageid>[<process_id>]]]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hhost} [%{fld1}[%{messageid}[%{process_id}]]]: %{message}" }
			id => "header-0092"
			add_field => {
				"[rsa][header][id]" => "0092"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <month> <day> <time> <hhost> [<messageid>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+\[(?<message>(?<messageid>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <month> <day> <time> <hhost> <messageid>.<data>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\.]*)\.(?<data>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: <month> <day> <time> <hhost> <messageid>(<data>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\(]*)\((?<data>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0025
	# line in RSA: <hdate> <htime>,<hfld1>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^\s]*)[\s]+(?<htime>[^,]*),(?<hfld1>[^:]*):[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0025"
			add_field => {
				"[rsa][header][id]" => "0025"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0024
	# line in RSA: <hdate> <htime>,<hfld1>: ./<messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^\s]*)[\s]+(?<htime>[^,]*),(?<hfld1>[^:]*):[\s]+\./(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0050
	# line in RSA: <month> <day> <time> <hhost> <messageid> (<hfld1>) <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+\((?<hfld1>[^\)]*)\)[\s]+(?<payload>.*))$" }
			id => "header-0050"
			add_field => {
				"[rsa][header][id]" => "0050"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0089
	# line in RSA: <agent>[<process_id>]: <hhost>: user <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<hhost>[^:]*):[\s]+user[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0089"
			add_field => {
				"[rsa][header][id]" => "0089"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0091
	# line in RSA: <fld1> <fld2> systemd: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+systemd:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0091"
			add_field => {
				"[rsa][header][id]" => "0091"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0049
	# line in RSA: <month> <day> <time> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0049"
			add_field => {
				"[rsa][header][id]" => "0049"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1122
	# line in RSA: <month> <day> <time> <hhost> <severity> <messageid>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1122"
			add_field => {
				"[rsa][header][id]" => "1122"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0081
	# line in RSA: <month> <day> <time> <hfld1>: {Exit|Start} <messageid>[<hfld2>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^:]*):[\s]+(Exit|Start)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld2>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0081"
			add_field => {
				"[rsa][header][id]" => "0081"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0084
	# line in RSA: <hyear>-<hmonth>-<hday>T<htime><hhost><hfld1>[<hfld2>]:<hfld3><messageid><!payload:hfld1>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0088
	# line in RSA: <agent>[<process_id>]: <hhost> () : <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<hhost>[^\s]*)[\s]+\(\)[\s]+:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0088"
			add_field => {
				"[rsa][header][id]" => "0088"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0090
	# line in RSA: <fld1>: <fld2> <fld3>: Write <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^:]*):[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^:]*):[\s]+Write[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0090"
			add_field => {
				"[rsa][header][id]" => "0090"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: <month> <day> <time> <hhost> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0040
	# line in RSA: <month> <day> <time> <hhost> { notice <messageid>|<messageid>} (<hfld8>)[<hfld9> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+([\s]*notice[\s]+(?<messageid>[^\s]*)|(?<messageid>[^\s]*))[\s]+\((?<hfld8>[^\)]*)\)\[(?<hfld9>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0040"
			add_field => {
				"[rsa][header][id]" => "0040"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0023
	# line in RSA: <month> <day> <time> <hhost> ./<messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+\./(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0023"
			add_field => {
				"[rsa][header][id]" => "0023"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0027
	# line in RSA: <hmonth> <hday> <htime> <hhost> <hfld2> <hfld3>,<hfld1>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^,]*),(?<hfld1>[^:]*):[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0027"
			add_field => {
				"[rsa][header][id]" => "0027"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0028
	# line in RSA: <hmonth> <hday> <htime> <hhost> <hfld2> <hfld3>,<hfld1>: ./<messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^,]*),(?<hfld1>[^:]*):[\s]+\./(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0028"
			add_field => {
				"[rsa][header][id]" => "0028"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0085
	# line in RSA: <month> <day> <time> <hfld1> <hagent>[<hprocess_id>]: tid <hfld2>: [<hfld3>.<hseverity>]: <messageid> <!payload:hagent>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hagent>[^\[]*)\[(?<hprocess_id>[^\]]*)\]:[\s]+tid[\s]+(?<hfld2>[^:]*):[\s]+\[(?<hfld3>[^\.]*)\.(?<hseverity>[^\]]*)\]:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0085"
			add_field => {
				"[rsa][header][id]" => "0085"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0086
	# line in RSA: <month> <day> <time> <hagent>[<hprocess_id>]: [ID <hid> <hfld1>.<severity>] <messageid> <!payload:hagent>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<hagent>[^\[]*)\[(?<hprocess_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<hfld1>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0086"
			add_field => {
				"[rsa][header][id]" => "0086"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0087
	# line in RSA: <month> <day> <time> <hagent>[<hprocess_id>]: Login failed for '<hfld1>' from ::ffff:<hsaddr>:<hsport> <messageid> <!payload:hagent>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<hagent>[^\[]*)\[(?<hprocess_id>[^\]]*)\]:[\s]+Login[\s]+failed[\s]+for[\s]+'(?<hfld1>[^']*)'[\s]+from[\s]+::ffff:(?<hsaddr>[^:]*):(?<hsport>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0087"
			add_field => {
				"[rsa][header][id]" => "0087"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0093
	# line in RSA: <month> <day> <time> <hhost> <hfld1>[<hfld2> [<hfld3>]:<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld1>[^\[]*)\[(?<hfld2>[^\s]*)[\s]+\[(?<hfld3>[^\]]*)\]:(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0093"
			add_field => {
				"[rsa][header][id]" => "0093"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0029
	# line in RSA: <hdate> <htime>.<hfld1> <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^\.]*)\.(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0029"
			add_field => {
				"[rsa][header][id]" => "0029"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0026
	# line in RSA: %APACHE-4-[<hinfo>]: [<hdatetime>] [<messageid>] [client <hhost>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%APACHE-4-[%{hinfo}]: [%{hdatetime}] [%{messageid}] [client %{hhost}] %{message}" }
			id => "header-0026"
			add_field => {
				"[rsa][header][id]" => "0026"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0030
	# line in RSA: <month> <day> <time> <hhost> <hfld1> <hfld2>[<process_id>]: <messageid>: <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hfld2>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0030"
			add_field => {
				"[rsa][header][id]" => "0030"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0031
	# line in RSA: <month> <day> <time> <hhost> <hfld1> <hfld2>[<process_id>]: <messageid>(<!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hfld2>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<messageid>[^\(]*)\((?<payload>.*))$" }
			id => "header-0031"
			add_field => {
				"[rsa][header][id]" => "0031"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0053
	# line in RSA: <hdate>T<htime>.<hfld1> <hhost> <messageid>[<process_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^T]*)T(?<htime>[^\.]*)\.(?<hfld1>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0053"
			add_field => {
				"[rsa][header][id]" => "0053"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0083
	# line in RSA: <month> <day> <time> {<hhost> [<process_id>]| <hhost>}: <messageid>(<hfld1>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+((?<hhost>[^\s]*)[\s]+\[(?<process_id>[^\]]*)\]|[\s]*(?<hhost>[^:]*)):[\s]+(?<message>(?<messageid>[^\(]*)\((?<hfld1>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0083"
			add_field => {
				"[rsa][header][id]" => "0083"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0072
	# line in RSA: <process>[<process_id>]: <messageid>(<service>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<message>(?<messageid>[^\(]*)\((?<service>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0072"
			add_field => {
				"[rsa][header][id]" => "0072"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0070
	# line in RSA: <process>[<process_id>]: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0070"
			add_field => {
				"[rsa][header][id]" => "0070"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0051
	# line in RSA: <month> <day> <time> <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0051"
			add_field => {
				"[rsa][header][id]" => "0051"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0052
	# line in RSA: <month> <day> <time> <messageid>:<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0052"
			add_field => {
				"[rsa][header][id]" => "0052"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0076
	# line in RSA: <hdatetime> <hhost> <messageid> : <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdatetime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+:[\s]+(?<payload>.*))$" }
			id => "header-0076"
			add_field => {
				"[rsa][header][id]" => "0076"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0077
	# line in RSA: <month> <day> <time> <hhost> <hfld3> <hfld1> local<hfld2>.info] <messageid>. <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<hhost>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+local(?<hfld2>[^\.]*)\.info\][\s]+(?<messageid>[^\.]*)\.[\s]+(?<payload>.*))$" }
			id => "header-0077"
			add_field => {
				"[rsa][header][id]" => "0077"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0055
	# line in RSA: <hostname> cp_radius_helper_<hfld1>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hostname} cp_radius_helper_%{hfld1}: %{message}" }
			id => "header-0055"
			add_field => {
				"[rsa][header][id]" => "0055"
				"[rsa][message][id2]" => "cp_radius_helper"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_rhlinuxmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <shost>: { <agent>: <disposition> | <disposition> }
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^(?<shost>[^:]*):[\s]+([\s]*(?<agent>[^:]*):[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*(?<disposition>[^\s]*)[\s]+)$" }
			id => "msgParserId0"
			add_field => {
				"hostname" => "%{hhost}"
				"action" => "Error logging to file on host - No Message"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: <fld1>: User <username> has logged in
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{fld1}: User %{username} has logged in" }
			id => "msgParserId1"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: (<agent>): <space> [<fld1>,<fld2>] <info>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "(%{agent}): %{space} [%{fld1},%{fld2}] %{info}" }
			id => "msgParserId2"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: (<agent>): <space> Unable to open transaction log: <filename> <info>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "(%{agent}): %{space} Unable to open transaction log: %{filename} %{info}" }
			id => "msgParserId3"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId4"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA: <agent>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{agent}:%{event_description}" }
			id => "msgParserId5"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA: <agent>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{agent}:%{event_description}" }
			id => "msgParserId6"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: [<agent>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "[%{agent}] %{event_description}" }
			id => "msgParserId7"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "--" {
		# MESSAGE 00004:05
		# line in RSA: -- MARK -- 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "-- MARK --" }
				id => "message-00004:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00004:05"
					"[rsa][message][id1]" => "00004:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:03
		# line in RSA: -- <agent>[<process_id>]: pam_krb5[<fld1>]: no v5 creds for user ' <username> ', <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "-- %{agent}[%{process_id}]: pam_krb5[%{fld1}]: no v5 creds for user ' %{username} ', %{info}" }
				id => "message-00004:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "no v5 creds for user"
					"[event][id]" => "00004:03"
					"[rsa][message][id1]" => "00004:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004
		# line in RSA: -- { <agent>[<process_id>]: | <agent>: } LOGIN ON <interface> BY <username> FROM <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^\-\-[\s]+([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+LOGIN[\s]+ON[\s]+(?<interface>[^\s]*)[\s]+BY[\s]+(?<username>[^\s]*)[\s]+FROM[\s]+(?<saddr>.*)$" }
				id => "message-00004"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Login on Interface"
					"[event][id]" => "00004"
					"[rsa][message][id1]" => "00004"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:02
		# line in RSA: -- { <agent>[<process_id>]: | <agent>: } LOGIN ON <interface> BY <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^\-\-[\s]+([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+LOGIN[\s]+ON[\s]+(?<interface>[^\s]*)[\s]+BY[\s]+(?<username>.*)$" }
				id => "message-00004:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Login on Interface"
					"[event][id]" => "00004:02"
					"[rsa][message][id1]" => "00004:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:04
		# line in RSA: -- <agent>[<process_id>]: DIALUP AT <interface> BY <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "-- %{agent}[%{process_id}]: DIALUP AT %{interface} BY %{username}" }
				id => "message-00004:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Dialup at Interface"
					"[event][id]" => "00004:04"
					"[rsa][message][id1]" => "00004:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:01
		# line in RSA: -- { <agent>[<process_id>]: | <agent>: } ROOT LOGIN ON <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^\-\-[\s]+([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+ROOT[\s]+LOGIN[\s]+ON[\s]+(?<interface>.*)$" }
				id => "message-00004:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Root Login"
					"[event][id]" => "00004:01"
					"[rsa][message][id1]" => "00004:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:06
		# line in RSA: -- <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "-- %{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-00004:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00004:06"
					"[rsa][message][id1]" => "00004:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: <agent>: HISTORY: PPID=<parent_pid> PID=<process_id> UID=<uid> <action>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{agent}: HISTORY: PPID=%{parent_pid} PID=%{process_id} UID=%{uid} %{action}" }
			id => "msgParserId15"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "bash command history"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: <agent>[<process_id>]: <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
			id => "msgParserId16"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: -<agent>:<space> Successful login <username> from <shost>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "-%{agent}:%{space} Successful login %{username} from %{shost}" }
			id => "msgParserId17"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Successful Login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: <agent>: <username> : <fld1> TTY=<interface> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} : %{fld1} TTY=%{interface} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
			id => "msgParserId18"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA: <agent>: <node> <event_description>.
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{agent}: %{node} %{event_description}." }
			id => "msgParserId19"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA: <agent>[<process_id>]: [<severity> <application>:<fld1>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity} %{application}:%{fld1}] %{event_description}" }
			id => "msgParserId20"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA: <agent>[<process_id>]:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
			id => "msgParserId21"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: <agent>[<process_id>]: executing "<action>"
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: executing \"%{action}\"" }
			id => "msgParserId22"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "executing command"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA: <agent>[<process_id>]: <process>() <event_description>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process}() %{event_description}" }
			id => "msgParserId23"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: { <agent>[<process_id>]: | <agent>: } RRD_update (<application>): <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId24" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+RRD_update[\s]+\((?<application>[^\)]*)\):[\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId24"
			add_field => {
				"hostname" => "%{hhost}"
				"action" => "RRD_update"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/etc/hotplug/block.agent" {
		# MESSAGE 00364:01
		# line in RSA: <agent>[<process_id>]: <action> while waiting for <device>'s bus_id
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action} while waiting for %{device}'s bus_id" }
				id => "message-00364:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "nwaiting for block bus_id"
					"[event][id]" => "00364:01"
					"[rsa][message][id1]" => "00364:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00364
		# line in RSA: <agent>[<process_id>]: <space> new block device <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} new block device %{device}" }
				id => "message-00364"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "new block device"
					"[event][id]" => "00364"
					"[rsa][message][id1]" => "00364"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "/etc/hotplug/net.agent" {
		# MESSAGE 00160
		# line in RSA: <agent>: <space> invoke ifup <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} invoke ifup %{interface}" }
				id => "message-00160"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00160"
					"[rsa][message][id1]" => "00160"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002417
		# line in RSA: <agent>[<process_id>]: <result> ... exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result} ... exiting" }
				id => "message-002417"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Exiting due to error"
					"[event][id]" => "002417"
					"[rsa][message][id1]" => "002417"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "/etc/hotplug/pci.agent" {
		# MESSAGE 001990
		# line in RSA: <agent>[<process_id>]: message send failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: message send failed: %{result}" }
				id => "message-001990"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "message send failure"
					"[event][id]" => "001990"
					"[rsa][message][id1]" => "001990"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00785
		# line in RSA: <agent>[<process_id>]: <space> ... can't load module <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} ... can't load module %{obj_name}" }
				id => "message-00785"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "can't load module"
					"[event][id]" => "00785"
					"[rsa][message][id1]" => "00785"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: <agent>[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
			id => "msgParserId31"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId32"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId33
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId33"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: <agent>: <event_description>. <result>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}. %{result}" }
			id => "msgParserId34"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: <agent>: { <event_description>, <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId35" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^,]*),[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId35"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: <agent>: Syslog Has Been Truncated To Approximately <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{agent}: Syslog Has Been Truncated To Approximately %{event_time_string}" }
			id => "msgParserId36"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Syslog Has Been Truncated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: <agent>: KERN_ARP_ADDR_CHANGE: arp info overwritten for <daddr> from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{agent}: KERN_ARP_ADDR_CHANGE: arp info overwritten for %{daddr} from %{change_old} to %{change_new}" }
			id => "msgParserId37"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "KERN_ARP_ADDR_CHANGE"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: <agent>: <application>: <process>(<process_id>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}: %{process}(%{process_id}): %{event_description}" }
			id => "msgParserId38"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <agent>[<process_id>]: executing "<action>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: executing \"%{action}" }
			id => "msgParserId39"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "executing program"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId40"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/lib/vmware/bin/vmware-hostd" {
		# MESSAGE 001430
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Accepted password for user <username> from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Accepted[\s]+password[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001430"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "User password accepted"
					"[event][id]" => "001430"
					"[rsa][message][id1]" => "001430"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001462
		# line in RSA: <agent>[<process_id>]: pam_unix(<application>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{application}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-001462"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "001462"
					"[rsa][message][id1]" => "001462"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001463
		# line in RSA: <agent>[<process_id>]: <application>[<fld1>]: authentication fails for '<username>' (<user_fullname>): <result> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}[%{fld1}]: authentication fails for '%{username}' (%{user_fullname}): %{result} (%{info})" }
				id => "message-001463"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "001463"
					"[rsa][message][id1]" => "001463"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001431
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <application>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-001431"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001431"
					"[rsa][message][id1]" => "001431"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: <agent>[<process_id>]: Accepted password for user <username> from <saddr>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Accepted password for user %{username} from %{saddr}" }
			id => "msgParserId45"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/bin/sudo" {
		# MESSAGE 00260
		# line in RSA: <agent>: <username> : <fld1> TTY=<interface> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} : %{fld1} TTY=%{interface} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-00260"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00260"
					"[rsa][message][id1]" => "00260"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00260:01
		# line in RSA: <agent>:<username> : <space> no passwd entry for <administrator>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{username} : %{space} no passwd entry for %{administrator}!" }
				id => "message-00260:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00260:01"
					"[rsa][message][id1]" => "00260:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00260:02
		# line in RSA: <agent>: <username>: (command continued) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: (command continued) %{info}" }
				id => "message-00260:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo command continuation"
					"[event][id]" => "00260:02"
					"[rsa][message][id1]" => "00260:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: <agent>[<process_id>]: Ident: <fld31> Flows: <fld32>, Packets: <packets>, Bytes: <bytes>, Sequence Errors: <fld33>, Bad Packets: <fld34>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Ident: %{fld31} Flows: %{fld32}, Packets: %{packets}, Bytes: %{bytes}, Sequence Errors: %{fld33}, Bad Packets: %{fld34}" }
			id => "msgParserId48"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/local/bin/sudo" {
		# MESSAGE 00249
		# line in RSA: <agent>: <username> : user NOT in sudoers;TTY=<interface>;PWD=<directory>;RUNAS=<administrator>;COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} : user NOT in sudoers;TTY=%{interface};PWD=%{directory};RUNAS=%{administrator};COMMAND=%{action}" }
				id => "message-00249"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"result" => "user NOT in sudoers"
					"[event][id]" => "00249"
					"[rsa][message][id1]" => "00249"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00249:01
		# line in RSA: <agent>:<username> : <space> no passwd entry for <administrator>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{username} : %{space} no passwd entry for %{administrator}!" }
				id => "message-00249:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00249:01"
					"[rsa][message][id1]" => "00249:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/local/bin/usb_direct" {
		# MESSAGE 00953:01
		# line in RSA: <agent>[<process_id>]:<action>: <filename> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{action}: %{filename} - %{result}" }
				id => "message-00953:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00953:01"
					"[rsa][message][id1]" => "00953:01"
					"[event][categoryid]" => "1603050000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00953
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00953"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00953"
					"[rsa][message][id1]" => "00953"
					"[event][categoryid]" => "1603050000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA: <agent>[<process_id>]: (<username>) CMD <action>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD %{action}" }
			id => "msgParserId51"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond command"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/sbin/cron" {
		# MESSAGE 002414
		# line in RSA: <agent>[<process_id>]: (<username>) ORPHAN (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) ORPHAN (%{result})" }
				id => "message-002414"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ORPHAN process"
					"[event][id]" => "002414"
					"[rsa][message][id1]" => "002414"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00068
		# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-00068"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond command"
					"[event][id]" => "00068"
					"[rsa][message][id1]" => "00068"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00068:01
		# line in RSA: <agent>[<process_id>]: (CRON) <severity> (<event_description>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (CRON) %{severity} (%{event_description})" }
				id => "message-00068:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00068:01"
					"[rsa][message][id1]" => "00068:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00068:02
		# line in RSA: <agent>[<process_id>]: (acx) <event_type> (<event_description>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (acx) %{event_type} (%{event_description})" }
				id => "message-00068:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00068:02"
					"[rsa][message][id1]" => "00068:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 003414
		# line in RSA: <agent>: pam_vas: Authentication <<<result>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <fld1> Access Control Identifier(NT Name):<<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_vas: Authentication <%{result}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: %{fld1} Access Control Identifier(NT Name):<%{user_address}>" }
				id => "message-003414"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded passwordless"
					"[event][id]" => "003414"
					"[rsa][message][id1]" => "003414"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 003415
		# line in RSA: <agent>[<process_id>]: {<fld1>: session opened for user <username> by (uid=<uid>)| <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+((?<fld1>[^:]*):[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+\(uid=(?<uid>[^\)]*)\)|[\s]*(?<event_description>.*))$" }
				id => "message-003415"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "003415"
					"[rsa][message][id1]" => "003415"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/sbin/crond" {
		# MESSAGE 001327
		# line in RSA: <agent>[<process_id>]: (<username>) CMD <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD %{action}" }
				id => "message-001327"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond command"
					"[event][id]" => "001327"
					"[rsa][message][id1]" => "001327"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001328
		# line in RSA: <agent>[<process_id>]: (<username>) RELOAD (<filename>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) RELOAD (%{filename})" }
				id => "message-001328"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond reload file"
					"[event][id]" => "001328"
					"[rsa][message][id1]" => "001328"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA: <agent>[<process_id>]: (<username>) DEATH (<info>)
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) DEATH (%{info})" }
			id => "msgParserId59"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond DEATH"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId60" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId60"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: <agent>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{agent}:%{event_description}" }
			id => "msgParserId61"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/sbin/taskomatic" {
		# MESSAGE 00123:01
		# line in RSA: <agent>[<process_id>]:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{event_description}" }
				id => "message-00123:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00123:01"
					"[rsa][message][id1]" => "00123:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00123
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00123"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00123"
					"[rsa][message][id1]" => "00123"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId63
	# line in RSA: <agent>[<process_id>]: login from <saddr> as <username>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: login from %{saddr} as %{username}" }
			id => "msgParserId63"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA: <agent>: debug: <event_description>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "%{agent}: debug: %{event_description}" }
			id => "msgParserId64"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA: <agent>: { <event_time_string>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId65" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_time_string>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId65"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA: <agent>: event=<event_type>&loglevel=<severity>&msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{agent}: event=%{event_type}&loglevel=%{severity}&msg=%{event_description}" }
			id => "msgParserId66"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA: { <agent>: [<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId67" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^:]*):[\s]+\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId67"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA: { <agent>: [<process_id>] | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId68" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^:]*):[\s]+\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId68"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <agent>: <event_description> "<filename>": <result>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} \"%{filename}\": %{result}" }
			id => "msgParserId69"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: <agent>: <fld1> : Login passed for user <username> through <protocol> (<saddr>)
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} : Login passed for user %{username} through %{protocol} (%{saddr})" }
			id => "msgParserId70"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "abrt" {
		# MESSAGE 001271
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001271"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001271"
					"[rsa][message][id1]" => "001271"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE abrt
		# line in RSA: <action>: detected unhandled Python exception in '<process>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: detected unhandled Python exception in '%{process}'" }
				id => "message-abrt"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "detected unhandled Python exception"
					"[event][id]" => "abrt"
					"[rsa][message][id1]" => "abrt"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE abrt:01
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-abrt:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "abrt:01"
					"[rsa][message][id1]" => "abrt:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "abrtd" {
		# MESSAGE 001272
		# line in RSA: <agent>: UnRegistered <obj_type> plugin {'<obj_name>' | <obj_name>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+UnRegistered[\s]+(?<obj_type>[^\s]*)[\s]+plugin[\s]+('(?<obj_name>[^']*)'[\s]+|[\s]*(?<obj_name>.*))$" }
				id => "message-001272"
				add_field => {
				"hostname" => "%{hhost}"
				"disposition" => "UnRegistered"
					"[event][id]" => "001272"
					"[rsa][message][id1]" => "001272"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001273
		# line in RSA: <agent>: Registered <obj_type> plugin {'<obj_name>' | <obj_name>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+Registered[\s]+(?<obj_type>[^\s]*)[\s]+plugin[\s]+('(?<obj_name>[^']*)'[\s]+|[\s]*(?<obj_name>.*))$" }
				id => "message-001273"
				add_field => {
				"hostname" => "%{hhost}"
				"disposition" => "Registered"
					"[event][id]" => "001273"
					"[rsa][message][id1]" => "001273"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001274
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001274"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001274"
					"[rsa][message][id1]" => "001274"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Access" {
		# MESSAGE 01177
		# line in RSA: <agent> - <username>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} - %{username}: %{event_description}" }
				id => "message-01177"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01177"
					"[rsa][message][id1]" => "01177"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00465
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00465"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00465"
					"[rsa][message][id1]" => "00465"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId75
	# line in RSA: { <agent>[<process_id>]: | <agent>: } VCS ERROR <version> { Thread(<fld1>) <result> | <result> }
	else if [logstash][msgparser][id] == "msgParserId75" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+VCS[\s]+ERROR[\s]+(?<version>[^\s]*)[\s]+([\s]*Thread\((?<fld1>[^\)]*)\)[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId75"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "VCS ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ACEAGENT" {
		# MESSAGE 01244:01
		# line in RSA: <agent>:<event_description>:<id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{event_description}:%{id}" }
				id => "message-01244:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01244:01"
					"[rsa][message][id1]" => "01244:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01244
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01244"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01244"
					"[rsa][message][id1]" => "01244"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "AcsWeb" {
		# MESSAGE 00720:03
		# line in RSA: { <agent>[<process_id>]: | <agent>: } AUTH: User [<username>] for session [<sessionid>] logged out
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+AUTH:[\s]+User[\s]+\[(?<username>[^\]]*)\][\s]+for[\s]+session[\s]+\[(?<sessionid>[^\]]*)\][\s]+logged[\s]+out$" }
				id => "message-00720:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "successful logoff"
					"[event][id]" => "00720:03"
					"[rsa][message][id1]" => "00720:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00720:02
		# line in RSA: { <agent>[<process_id>]: | <agent>: } AUTH: User [<username>] for session [<sessionid>] successfully authenticated
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+AUTH:[\s]+User[\s]+\[(?<username>[^\]]*)\][\s]+for[\s]+session[\s]+\[(?<sessionid>[^\]]*)\][\s]+successfully[\s]+authenticated$" }
				id => "message-00720:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful login"
					"[event][id]" => "00720:02"
					"[rsa][message][id1]" => "00720:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00720
		# line in RSA: { <agent>[<process_id>]: | <agent>: } AUTH: User [<username>] login failed. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+AUTH:[\s]+User[\s]+\[(?<username>[^\]]*)\][\s]+login[\s]+failed\.[\s]+(?<result>.*)$" }
				id => "message-00720"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "00720"
					"[rsa][message][id1]" => "00720"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00720:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } AUTH: Previous admin session terminated by new admin [<username>] login
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+AUTH:[\s]+Previous[\s]+admin[\s]+session[\s]+terminated[\s]+by[\s]+new[\s]+admin[\s]+\[(?<username>[^\]]*)\][\s]+login$" }
				id => "message-00720:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "admin session terminated"
				"result" => "login by new admin"
					"[event][id]" => "00720:01"
					"[rsa][message][id1]" => "00720:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: <agent>[<process_id>]:  <event_time_string> AUDIT <event_description>
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:  %{event_time_string} AUDIT %{event_description}" }
			id => "msgParserId81"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA: { <agent>[<process_id>]: | <agent>: } INFO <hostname> Connect to adclient successfully
	else if [logstash][msgparser][id] == "msgParserId82" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+INFO[\s]+(?<hostname>[^\s]*)[\s]+Connect[\s]+to[\s]+adclient[\s]+successfully$" }
			id => "msgParserId82"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connect to adclient successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adclient" {
		# MESSAGE 00989
		# line in RSA: <agent>[<process_id>]: <severity> <fld1> Unable to get controller list: failed to find any GC service providers for <fqdn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{fld1} Unable to get controller list: failed to find any GC service providers for %{fqdn}" }
				id => "message-00989"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00989"
					"[rsa][message][id1]" => "00989"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002269
		# line in RSA: <agent>[<process_id>]: <severity> <<<filename> <action> > audit User '<username>' is authorized
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} <%{filename} %{action} > audit User '%{username}' is authorized" }
				id => "message-002269"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "User is authorized"
					"[event][id]" => "002269"
					"[rsa][message][id1]" => "002269"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002269:01
		# line in RSA: <agent>[<process_id>]: <severity> <info>|<product>|<application>|<version>|<fld1>|<result>|5|{user=<username>(<fld5>)|user=<username>}pid=<fld2> utc=<fld3> centrifyEventID=<operation_id> status=<disposition> {service=<service> tty=<terminal> client=<fld4>|server=<obj_server>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+(?<info>[^\|]*)\|(?<product>[^\|]*)\|(?<application>[^\|]*)\|(?<version>[^\|]*)\|(?<fld1>[^\|]*)\|(?<result>[^\|]*)\|5\|(user=(?<username>[^\(]*)\((?<fld5>[^\)]*)\)|user=(?<username>[^p]*))pid=(?<fld2>[^\s]*)[\s]+utc=(?<fld3>[^\s]*)[\s]+centrifyEventID=(?<operation_id>[^\s]*)[\s]+status=(?<disposition>[^\s]*)[\s]+(service=(?<service>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+client=(?<fld4>.*)|server=(?<obj_server>.*))$" }
				id => "message-002269:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "002269:01"
					"[rsa][message][id1]" => "002269:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002269:02
		# line in RSA: <agent>[<process_id>]: <severity> <info>|<product>|<application>|<version>|<fld1>|<result>|5|user=<username> pid=<fld2> utc=<fld3> centrifyEventID=<operation_id> status=<disposition> service=<service> tty=<terminal> authMechanism=<authmethod> client=<saddr> sshRights=<permissions> command=<param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{info}|%{product}|%{application}|%{version}|%{fld1}|%{result}|5|user=%{username} pid=%{fld2} utc=%{fld3} centrifyEventID=%{operation_id} status=%{disposition} service=%{service} tty=%{terminal} authMechanism=%{authmethod} client=%{saddr} sshRights=%{permissions} command=%{param}" }
				id => "message-002269:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "002269:02"
					"[rsa][message][id1]" => "002269:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002270
		# line in RSA: <agent>[<process_id>]: <severity> <<<filename> <action> > audit User '<username>' authenticated based on <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} <%{filename} %{action} > audit User '%{username}' authenticated based on %{protocol}" }
				id => "message-002270"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "User is authenticated based on Kerberos exchange to AD"
					"[event][id]" => "002270"
					"[rsa][message][id1]" => "002270"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002271
		# line in RSA: <agent>[<process_id>]: <severity> <<<filename> <action> > <process> { <application>: <event_description> (Reason:<result>) | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+<(?<filename>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+>[\s]+(?<process>[^\s]*)[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\(Reason:(?<result>[^\)]*)\)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002271"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
					"[event][id]" => "002271"
					"[rsa][message][id1]" => "002271"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002330:01
		# line in RSA: <agent>[<process_id>]: {DEBUG|DIAG} <<<action> > <process> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(DEBUG|DIAG)[\s]+<(?<action>[^\s]*)[\s]+>[\s]+(?<process>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-002330:01"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "DEBUG"
					"[event][id]" => "002330:01"
					"[rsa][message][id1]" => "002330:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002330
		# line in RSA: <agent>[<process_id>]: <severity> <<<action> > <process> { <event_description> (<info>)<result> | <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+<(?<action>[^\s]*)[\s]+>[\s]+(?<process>[^\s]*)[\s]+([\s]*(?<event_description>[^\s]*)[\s]+\((?<info>[^\)]*)\)(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002330"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002330"
					"[rsa][message][id1]" => "002330"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002319
		# line in RSA: <agent>[<process_id>]: <severity> <process> <event_description> in  <filename>,<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{process} %{event_description} in  %{filename},%{result}" }
				id => "message-002319"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002319"
					"[rsa][message][id1]" => "002319"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId92
	# line in RSA: Adding <bytes> swap on <device>. <info>
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "Adding %{bytes} swap on %{device}. %{info}" }
			id => "msgParserId92"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "adduser" {
		# MESSAGE 00027:02
		# line in RSA: <agent>[<process_id>]: new group: name=<group>, gid=<groupid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new group: name=%{group}, gid=%{groupid}" }
				id => "message-00027:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "new group added"
					"[event][id]" => "00027:02"
					"[rsa][message][id1]" => "00027:02"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027
		# line in RSA: <agent>[<process_id>]: new user: name=<username>, <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new user: name=%{username}, %{fld1}" }
				id => "message-00027"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "new user added"
					"[event][id]" => "00027"
					"[rsa][message][id1]" => "00027"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:03
		# line in RSA: <agent>[<process_id>]: add `<username>' to shadow group `<group>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: add `%{username}' to shadow group `%{group}'" }
				id => "message-00027:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user account added to group"
					"[event][id]" => "00027:03"
					"[rsa][message][id1]" => "00027:03"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA: <agent>[<process_id>]: :<action> <param>: RC=<resultcode>
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: :%{action} %{param}: RC=%{resultcode}" }
			id => "msgParserId96"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "add new user or group"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId97
	# line in RSA: <agent>[<process_id>]: :<action> <param>: RC=<resultcode>
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: :%{action} %{param}: RC=%{resultcode}" }
			id => "msgParserId97"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "add new user or group"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adinfo" {
		# MESSAGE 02383
		# line in RSA: <agent>[<process_id>]: <severity> <process> <info> reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{process} %{info} reason=%{result}" }
				id => "message-02383"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02383"
					"[rsa][message][id1]" => "02383"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002327
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { INFO | WARN } <process> { <event_description>. (<info>) <space> <result> | <event_description>: <info>: <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<process>[^\s]*)[\s]+([\s]*(?<event_description>[^\.]*)\.[\s]+\((?<info>[^\)]*)\)[\s]+(?<space>[^\s]*)[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<info>[^:]*):[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-002327"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002327"
					"[rsa][message][id1]" => "002327"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002328
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { INFO | WARN | DEBUG | DIAG} <process> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+|[\s]*DEBUG[\s]+|[\s]*DIAG)[\s]+(?<process>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-002328"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002328"
					"[rsa][message][id1]" => "002328"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA: <agent>[<process_id>]: <action> { AT | ON } <interface> BY <username>
	else if [logstash][msgparser][id] == "msgParserId101" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<action>[^\s]*)[\s]+([\s]*AT[\s]+|[\s]*ON[\s]+)[\s]+(?<interface>[^\s]*)[\s]+BY[\s]+(?<username>.*)$" }
			id => "msgParserId101"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: <agent>[<process_id>]: <space> authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{space} authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId102"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId103
	# line in RSA: <agent>[<process_id>]: WARN  <<<process>> <event_description>
	else if [logstash][msgparser][id] == "msgParserId103" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: WARN  <%{process}> %{event_description}" }
			id => "msgParserId103"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "WARN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId104
	# line in RSA: <agent>:  <process>[<process_id>]: [<parent_pid>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "%{agent}:  %{process}[%{process_id}]: [%{parent_pid}] %{event_description}" }
			id => "msgParserId104"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId105
	# line in RSA: <agent>:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "%{agent}:  %{event_description}" }
			id => "msgParserId105"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA: Agent: <event_description>
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "Agent: %{event_description}" }
			id => "msgParserId106"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId107
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId107"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId108
	# line in RSA: <agent>[<process_id>]: <interface>: { <service>: <result> | <result> }
	else if [logstash][msgparser][id] == "msgParserId108" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<interface>[^:]*):[\s]+([\s]*(?<service>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId108"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA: <agent>][<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "%{agent}][%{process_id}]: %{event_description}" }
			id => "msgParserId109"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId110
	# line in RSA: { <agent>[<process_id>] | <agent> }: { <event_description>: <result>  | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId110" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId110"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId111
	# line in RSA: <agent>[<process_id>]: Delaying command start for <duration_string> minutes
	else if [logstash][msgparser][id] == "msgParserId111" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Delaying command start for %{duration_string} minutes" }
			id => "msgParserId111"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Delaying command start"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId112
	# line in RSA: <agent>[<process_id>]: [<fld1>] <username>: [<fld2>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId112" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{username}: [%{fld2}] %{event_description}" }
			id => "msgParserId112"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA: <agent>[<process_id>]: <id> <event_description>
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{id} %{event_description}" }
			id => "msgParserId113"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA: Allocating PCI resources starting at <fld1>
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "Allocating PCI resources starting at %{fld1}" }
			id => "msgParserId114"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA: <agent>: <action>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "%{agent}: %{action}: %{event_description}" }
			id => "msgParserId115"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "anacron" {
		# MESSAGE 00042:01
		# line in RSA: <agent>[<process_id>]: Updated timestamp for job <application> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Updated timestamp for job %{application} to %{change_new}" }
				id => "message-00042:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00042:01"
					"[rsa][message][id1]" => "00042:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE anacron:03
		# line in RSA: <agent>[<process_id>]: Normal exit (<dclass_counter1> {jobs|job} run)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Normal[\s]+exit[\s]+\((?<dclass_counter1>[^\s]*)[\s]+(jobs|job)[\s]+run\)$" }
				id => "message-anacron:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "anacron:03"
					"[rsa][message][id1]" => "anacron:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE anacron:02
		# line in RSA: <agent>[<process_id>]: Anacron <action> on <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Anacron %{action} on %{fld1}" }
				id => "message-anacron:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "anacron:02"
					"[rsa][message][id1]" => "anacron:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE anacron:01
		# line in RSA: <agent>[<process_id>]: Will run job <application> in <fld1> min.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Will run job %{application} in %{fld1} min." }
				id => "message-anacron:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "anacron:01"
					"[rsa][message][id1]" => "anacron:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE anacron
		# line in RSA: <agent>[<process_id>]: Job <application>  <event_state> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Job %{application}  %{event_state}" }
				id => "message-anacron"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "anacron"
					"[rsa][message][id1]" => "anacron"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00042
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00042"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00042"
					"[rsa][message][id1]" => "00042"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId121
	# line in RSA: <agent>: { <event_description> due to <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId121" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^\s]*)[\s]+due[\s]+to[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId121"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "AP_NOTIFY" {
		# MESSAGE 002304
		# line in RSA: <agent>: SW-find request from AP <event_source> mac <smacaddr> port <sport> vlan <device> succeeded with <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SW-find request from AP %{event_source} mac %{smacaddr} port %{sport} vlan %{device} succeeded with %{result}" }
				id => "message-002304"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SW-find request from AP succeeded"
					"[event][id]" => "002304"
					"[rsa][message][id1]" => "002304"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002131
		# line in RSA: <agent>: SW-find request from AP <event_source> mac <smacaddr> port <sport> vlan <device> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SW-find request from AP %{event_source} mac %{smacaddr} port %{sport} vlan %{device} failed" }
				id => "message-002131"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SW-find request from AP failed"
					"[event][id]" => "002131"
					"[rsa][message][id1]" => "002131"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "apache" {
		# MESSAGE 00069
		# line in RSA: <agent>: (pam_unix) authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (pam_unix) authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00069"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00069"
					"[rsa][message][id1]" => "00069"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:01
		# line in RSA: <agent>[<process_id>]: <hostip> <space> [<event_time_string>] "<web_method> <url> <protocol>" <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{hostip} %{space} [%{event_time_string}] \"%{web_method} %{url} %{protocol}\" %{info}" }
				id => "message-00069:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "apache log"
					"[event][id]" => "00069:01"
					"[rsa][message][id1]" => "00069:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:02
		# line in RSA: <agent> Application Name: <application> From: <fld1>User Id: <uid>#<fld2>IP Address: <fld3>Event: <info> Status: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Application Name: %{application} From: %{fld1}User Id: %{uid}#%{fld2}IP Address: %{fld3}Event: %{info} Status: %{result}" }
				id => "message-00069:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "apache log"
					"[event][id]" => "00069:02"
					"[rsa][message][id1]" => "00069:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId127
	# line in RSA: <agent>: <disposition>
	else if [logstash][msgparser][id] == "msgParserId127" {
		dissect {
			mapping => { "message" => "%{agent}: %{disposition}" }
			id => "msgParserId127"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA: <agent>[<process_id>]: apmd_call_proxy:<action>: <filename>
	else if [logstash][msgparser][id] == "msgParserId128" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: apmd_call_proxy:%{action}: %{filename}" }
			id => "msgParserId128"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId129
	# line in RSA: <agent>: <application>
	else if [logstash][msgparser][id] == "msgParserId129" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}" }
			id => "msgParserId129"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId130
	# line in RSA: <agent>: INFO: <event_description>
	else if [logstash][msgparser][id] == "msgParserId130" {
		dissect {
			mapping => { "message" => "%{agent}: INFO: %{event_description}" }
			id => "msgParserId130"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "archived" {
		# MESSAGE 03438
		# line in RSA: <agent>[<process_id>]: Archiving <id> for list <group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Archiving %{id} for list %{group}" }
				id => "message-03438"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "archiving"
					"[event][id]" => "03438"
					"[rsa][message][id1]" => "03438"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002294
		# line in RSA: <agent>[<process_id>]: Unknown parameter "<param>" in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unknown parameter \"%{param}\" in %{filename}" }
				id => "message-002294"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unknown parmeter in file"
					"[event][id]" => "002294"
					"[rsa][message][id1]" => "002294"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002295
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002295"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002295"
					"[rsa][message][id1]" => "002295"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId133
	# line in RSA: <agent>: { <action>:<result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId133" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<action>[^:]*):(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId133"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId134
	# line in RSA: <agent>: SLOT: <interface> SEVERITY: <severity> ENTITY/EVENT CODE: <fld1> Arp Client <saddr> <action>
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "%{agent}: SLOT: %{interface} SEVERITY: %{severity} ENTITY/EVENT CODE: %{fld1} Arp Client %{saddr} %{action}" }
			id => "msgParserId134"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA: <agent>: bogon <daddr> <dmacaddr>
	else if [logstash][msgparser][id] == "msgParserId135" {
		dissect {
			mapping => { "message" => "%{agent}: bogon %{daddr} %{dmacaddr}" }
			id => "msgParserId135"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA: <agent>: Approve : <event_description> (<resultcode>) <fld1>
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "%{agent}: Approve : %{event_description} (%{resultcode}) %{fld1}" }
			id => "msgParserId136"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId137
	# line in RSA: <agent>: <fld1>: <event_description> (<resultcode>) <fld2>
	else if [logstash][msgparser][id] == "msgParserId137" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1}: %{event_description} (%{resultcode}) %{fld2}" }
			id => "msgParserId137"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA: <agent>: Dispatch : <event_description> (<resultcode>) <fld1>
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "%{agent}: Dispatch : %{event_description} (%{resultcode}) %{fld1}" }
			id => "msgParserId138"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId139
	# line in RSA: <agent>: <event_description>:<result>
	else if [logstash][msgparser][id] == "msgParserId139" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}:%{result}" }
			id => "msgParserId139"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId140
	# line in RSA: { <agent>[<process_id>]: | <agent>: } asailink: <application>: <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId140" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+asailink:[\s]+(?<application>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+(?<info>.*)$" }
			id => "msgParserId140"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA: <agent>[<process_id>]: <application>: <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{process}: %{event_description}" }
			id => "msgParserId141"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId142
	# line in RSA: <agent>[<process_id>]: <process> Client request <action>
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process} Client request %{action}" }
			id => "msgParserId142"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Client request activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "asamrcvr" {
		# MESSAGE 001703
		# line in RSA: <agent>[<process_id>]: <process> Connection established with host <shost>port <sport> version <version> <info>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Connection established with host %{shost}port %{sport} version %{version} %{info}. %{obj_type}" }
				id => "message-001703"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connection established with host"
					"[event][id]" => "001703"
					"[rsa][message][id1]" => "001703"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001704
		# line in RSA: <agent>[<process_id>]: <process> Unable to establish a connection with host <shost>port <sport>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Unable to establish a connection with host %{shost}port %{sport}. %{obj_type}" }
				id => "message-001704"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to establish a connection with host"
					"[event][id]" => "001704"
					"[rsa][message][id1]" => "001704"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001702
		# line in RSA: <agent>[<process_id>]: <process> Add User to Group on Platform <group>: eUser <username>, eUser Platform Association <user_agent>, eGroup <group_object>, eGroup Platform Association <obj_name>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Add User to Group on Platform %{group}: eUser %{username}, eUser Platform Association %{user_agent}, eGroup %{group_object}, eGroup Platform Association %{obj_name}. %{obj_type}" }
				id => "message-001702"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Add User to Group on Platform"
					"[event][id]" => "001702"
					"[rsa][message][id1]" => "001702"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001701
		# line in RSA: <agent>[<process_id>]: <process> Disable User on Platform <group>: eUser <username>, Platform Association <obj_name>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Disable User on Platform %{group}: eUser %{username}, Platform Association %{obj_name}. %{obj_type}" }
				id => "message-001701"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"event_description" => "Disable User on Platform"
					"[event][id]" => "001701"
					"[rsa][message][id1]" => "001701"
					"[event][categoryid]" => "1402020400"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001674
		# line in RSA: <agent>[<process_id>]: <username>'s password has been reset
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username}'s password has been reset" }
				id => "message-001674"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user password reset"
					"[event][id]" => "001674"
					"[rsa][message][id1]" => "001674"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001675
		# line in RSA: <agent>[<process_id>]: <process> An event was received for object <obj_name>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} An event was received for object %{obj_name}. %{obj_type}" }
				id => "message-001675"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "event received for object"
					"[event][id]" => "001675"
					"[rsa][message][id1]" => "001675"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001676
		# line in RSA: <agent>[<process_id>]: <process> { Add | Modify } User on Platform <group>: eUser <username>, UID <uid> { , Platform Association <obj_name>. <obj_type> | . <obj_type> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<process>[^\s]*)[\s]+([\s]*Add[\s]+|[\s]*Modify[\s]+)[\s]+User[\s]+on[\s]+Platform[\s]+(?<group>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+UID[\s]+(?<uid>[^\s]*)[\s]+([\s]*,[\s]+Platform[\s]+Association[\s]+(?<obj_name>[^\.]*)\.[\s]+(?<obj_type>[^\s]*)[\s]+|[\s]*\.[\s]+(?<obj_type>[^\s]*)[\s]+)$" }
				id => "message-001676"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Add/Modify User on Platform"
					"[event][id]" => "001676"
					"[rsa][message][id1]" => "001676"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001677
		# line in RSA: <agent>[<process_id>]: <process> { Add | Modify } User failed on Platform <group>: eUser <username>, UID <uid>{ , Platform Association <obj_name>. <obj_type> | . <obj_type> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<process>[^\s]*)[\s]+([\s]*Add[\s]+|[\s]*Modify[\s]+)[\s]+User[\s]+failed[\s]+on[\s]+Platform[\s]+(?<group>[^:]*):[\s]+eUser[\s]+(?<username>[^,]*),[\s]+UID[\s]+(?<uid>[^\s\s]*)([\s]*,[\s]+Platform[\s]+Association[\s]+(?<obj_name>[^\.]*)\.[\s]+(?<obj_type>[^\s]*)[\s]+|[\s]*\.[\s]+(?<obj_type>[^\s]*)[\s]+)$" }
				id => "message-001677"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Add/Modify User failed on Platform"
					"[event][id]" => "001677"
					"[rsa][message][id1]" => "001677"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001678
		# line in RSA: <agent>[<process_id>]: <process> Certificate verification failed. Result is <resultcode>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Certificate verification failed. Result is %{resultcode}. %{obj_type}" }
				id => "message-001678"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Certificate verification failed"
					"[event][id]" => "001678"
					"[rsa][message][id1]" => "001678"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001679
		# line in RSA: <agent>[<process_id>]: <process> SSL Certificate Local FDN is <dn>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} SSL Certificate Local FDN is %{dn}. %{obj_type}" }
				id => "message-001679"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Certificate Distinguished name"
					"[event][id]" => "001679"
					"[rsa][message][id1]" => "001679"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001680
		# line in RSA: <agent>[<process_id>]: ignoring security, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ignoring security, %{result}" }
				id => "message-001680"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ignoring security"
					"[event][id]" => "001680"
					"[rsa][message][id1]" => "001680"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001700
		# line in RSA: <agent>[<process_id>]: <username> is not a valid user
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} is not a valid user" }
				id => "message-001700"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user is not valid"
					"[event][id]" => "001700"
					"[rsa][message][id1]" => "001700"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001705
		# line in RSA: <agent>[<process_id>]: <process> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} %{event_description}" }
				id => "message-001705"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001705"
					"[rsa][message][id1]" => "001705"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA: <agent>: mac: <smacaddr>; ssid: <sessionid>; <device>;
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "%{agent}: mac: %{smacaddr}; ssid: %{sessionid}; %{device};" }
			id => "msgParserId156"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ASSOCIATION-SUCCESS"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "assure" {
		# MESSAGE 001468
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Launched '<application>' succeded pid=<parent_pid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Launched[\s]+'(?<application>[^']*)'[\s]+succeded[\s]+pid=(?<parent_pid>.*)$" }
				id => "message-001468"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application successfully launched"
					"[event][id]" => "001468"
					"[rsa][message][id1]" => "001468"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001469
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { '<application>' (PID=<parent_pid>) <disposition> | <disposition>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*'(?<application>[^']*)'[\s]+\(PID=(?<parent_pid>[^\)]*)\)[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*(?<disposition>.*))$" }
				id => "message-001469"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application activity"
					"[event][id]" => "001469"
					"[rsa][message][id1]" => "001469"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "at" {
		# MESSAGE 01024
		# line in RSA: <agent>: pam_unix(<service>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-01024"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "session opened"
					"[event][id]" => "01024"
					"[rsa][message][id1]" => "01024"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01024:01
		# line in RSA: <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-01024:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "01024:01"
					"[rsa][message][id1]" => "01024:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01024:02
		# line in RSA: <agent>: pam_vas: Authentication <<<result>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <fld1> Access Control Identifier(UPN):<<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_vas: Authentication <%{result}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: %{fld1} Access Control Identifier(UPN):<%{user_address}>" }
				id => "message-01024:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded passwordless"
					"[event][id]" => "01024:02"
					"[rsa][message][id1]" => "01024:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01024:03
		# line in RSA: <agent>: pam_vas: Authentication <<<result>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <<<fld1>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_vas: Authentication <%{result}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: <%{fld1}>" }
				id => "message-01024:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded passwordless"
					"[event][id]" => "01024:03"
					"[rsa][message][id1]" => "01024:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "atftpd" {
		# MESSAGE 01049
		# line in RSA: <agent>[<process_id>]: Fetching from <saddr> to <dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Fetching from %{saddr} to %{dhost}" }
				id => "message-01049"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "atftpd fetching"
					"[event][id]" => "01049"
					"[rsa][message][id1]" => "01049"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01049:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01049:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01049:01"
					"[rsa][message][id1]" => "01049:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA: Attached scsi removable disk <fld1>, <info>
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "Attached scsi removable disk %{fld1}, %{info}" }
			id => "msgParserId164"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "atisnmp" {
		# MESSAGE 02565
		# line in RSA: <agent>: [code <fld1>] event_trap_check(): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [code %{fld1}] event_trap_check(): %{event_description}" }
				id => "message-02565"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02565"
					"[rsa][message][id1]" => "02565"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02565:01
		# line in RSA: <agent>: [code <fld1>] event_load_values(): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [code %{fld1}] event_load_values(): %{event_description}" }
				id => "message-02565:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02565:01"
					"[rsa][message][id1]" => "02565:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02565:02
		# line in RSA: <agent>: [code <fld1>] th_check_line(): Error loading line => <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [code %{fld1}] th_check_line(): Error loading line => %{info}" }
				id => "message-02565:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02565:02"
					"[rsa][message][id1]" => "02565:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId168
	# line in RSA: <agent>: [<process_id>]: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId168" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}]: %{severity}: %{event_description}" }
			id => "msgParserId168"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId169
	# line in RSA: { <agent>[<process_id>]: | <agent>: } au_fetch starting to fetch <filename>
	else if [logstash][msgparser][id] == "msgParserId169" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+au_fetch[\s]+starting[\s]+to[\s]+fetch[\s]+(?<filename>.*)$" }
			id => "msgParserId169"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId170
	# line in RSA: <agent>[<process_id>]: saving binary audit log <username>
	else if [logstash][msgparser][id] == "msgParserId170" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: saving binary audit log %{username}" }
			id => "msgParserId170"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Saving binary audit log"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "audispd" {
		# MESSAGE 002055
		# line in RSA: <agent>: <space1>node=<node> type=USER_AUTH msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='PAM: <disposition> acct="<username>" <space> exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=failed)'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=USER_AUTH msg=audit(%{fld25}.%{fld26}:%{fld27}): user pid=%{process_id} uid=%{uid} auid=%{fld9} subj=%{subject} msg='PAM: %{disposition} acct=\"%{username}\" %{space} exe=\"%{action}\" (hostname=%{shost}, addr=%{saddr}, terminal=%{terminal} res=failed)'" }
				id => "message-002055"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_type" => "USER AUTH"
				"result" => "failed"
				"s_context" => "%{subject}"
					"[event][id]" => "002055"
					"[rsa][message][id1]" => "002055"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 002056
		# line in RSA: <agent>: <space1>node=<node> type=USER_AUTH msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='PAM: <disposition> acct="<username>" <space> exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=success)'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=USER_AUTH msg=audit(%{fld25}.%{fld26}:%{fld27}): user pid=%{process_id} uid=%{uid} auid=%{fld9} subj=%{subject} msg='PAM: %{disposition} acct=\"%{username}\" %{space} exe=\"%{action}\" (hostname=%{shost}, addr=%{saddr}, terminal=%{terminal} res=success)'" }
				id => "message-002056"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_type" => "USER AUTH"
				"result" => "success"
				"s_context" => "%{subject}"
					"[event][id]" => "002056"
					"[rsa][message][id1]" => "002056"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 002057
		# line in RSA: <agent>: <space1>node=<node> type=USER_ACCT msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='PAM: <disposition> acct="<username>" <space> exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=success)'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=USER_ACCT msg=audit(%{fld25}.%{fld26}:%{fld27}): user pid=%{process_id} uid=%{uid} auid=%{fld9} subj=%{subject} msg='PAM: %{disposition} acct=\"%{username}\" %{space} exe=\"%{action}\" (hostname=%{shost}, addr=%{saddr}, terminal=%{terminal} res=success)'" }
				id => "message-002057"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER ACCT"
				"result" => "success"
				"s_context" => "%{subject}"
					"[event][id]" => "002057"
					"[rsa][message][id1]" => "002057"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 002058
		# line in RSA: <agent>: <space1>node=<node> type=USER_START msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='PAM: <disposition> acct="<username>" <space> exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=success)'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=USER_START msg=audit(%{fld25}.%{fld26}:%{fld27}): user pid=%{process_id} uid=%{uid} auid=%{fld9} subj=%{subject} msg='PAM: %{disposition} acct=\"%{username}\" %{space} exe=\"%{action}\" (hostname=%{shost}, addr=%{saddr}, terminal=%{terminal} res=success)'" }
				id => "message-002058"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER START"
				"result" => "success"
				"s_context" => "%{subject}"
					"[event][id]" => "002058"
					"[rsa][message][id1]" => "002058"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 002059
		# line in RSA: <agent>: <space1>node=<node> type=USER_END msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='PAM: <disposition> acct="<username>" <space> exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=success)'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=USER_END msg=audit(%{fld25}.%{fld26}:%{fld27}): user pid=%{process_id} uid=%{uid} auid=%{fld9} subj=%{subject} msg='PAM: %{disposition} acct=\"%{username}\" %{space} exe=\"%{action}\" (hostname=%{shost}, addr=%{saddr}, terminal=%{terminal} res=success)'" }
				id => "message-002059"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER END"
				"result" => "success"
				"s_context" => "%{subject}"
					"[event][id]" => "002059"
					"[rsa][message][id1]" => "002059"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 002060
		# line in RSA: <agent>: <space1>node=<node> type=USER_LOGIN msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='{ acct="<username>": | uid=<child_pid>: } <space>exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=failed)'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=USER_LOGIN[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<fld27>[^\)]*)\):[\s]+user[\s]+pid=(?<process_id>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+auid=(?<fld9>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+msg='([\s]*acct=\"(?<username>[^\"]*)\":[\s]+|[\s]*uid=(?<child_pid>[^:]*):[\s]+)[\s]+(?<space>[^e]*)exe=\"(?<action>[^\"]*)\"[\s]+\(hostname=(?<shost>[^,]*),[\s]+addr=(?<saddr>[^,]*),[\s]+terminal=(?<terminal>[^\s]*)[\s]+res=failed\)'$" }
				id => "message-002060"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_type" => "USER LOGIN"
				"result" => "failure"
				"s_context" => "%{subject}"
					"[event][id]" => "002060"
					"[rsa][message][id1]" => "002060"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 002061
		# line in RSA: <agent>: <space1>node=<node> type=USER_LOGIN msg=audit(<fld25>.<fld26>:<fld27>): user pid=<process_id> uid=<uid> auid=<fld9> subj=<subject> msg='{ acct="<username>": | uid=<child_pid>: } <space>exe="<action>" (hostname=<shost>, addr=<saddr>, terminal=<terminal> res=success)'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=USER_LOGIN[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<fld27>[^\)]*)\):[\s]+user[\s]+pid=(?<process_id>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+auid=(?<fld9>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+msg='([\s]*acct=\"(?<username>[^\"]*)\":[\s]+|[\s]*uid=(?<child_pid>[^:]*):[\s]+)[\s]+(?<space>[^e]*)exe=\"(?<action>[^\"]*)\"[\s]+\(hostname=(?<shost>[^,]*),[\s]+addr=(?<saddr>[^,]*),[\s]+terminal=(?<terminal>[^\s]*)[\s]+res=success\)'$" }
				id => "message-002061"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_type" => "USER LOGIN"
				"result" => "success"
				"event_description" => "successful user login"
				"s_context" => "%{subject}"
					"[event][id]" => "002061"
					"[rsa][message][id1]" => "002061"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03809
		# line in RSA: <agent>: <space1>node=<node> type=<event_type> msg=audit(<fld25>.<fld26>:<fld27>): <space> user pid=<process_id> uid=<uid> auid=<fld9> msg=<space>PAM: <disposition> acct={ "<username>": | <username> } exe={ "<action>" | <action> } (hostname=<shost> addr=<saddr> {, terminal= | terminal= } <terminal> res=<result> )
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=(?<event_type>[^\s]*)[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<fld27>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+user[\s]+pid=(?<process_id>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+auid=(?<fld9>[^\s]*)[\s]+msg=(?<space>[^P]*)PAM:[\s]+(?<disposition>[^\s]*)[\s]+acct=([\s]*\"(?<username>[^\"]*)\":[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+exe=([\s]*\"(?<action>[^\"]*)\"[\s]+|[\s]*(?<action>[^\s]*)[\s]+)[\s]+\(hostname=(?<shost>[^\s]*)[\s]+addr=(?<saddr>[^\s]*)[\s]+(,[\s]+terminal=[\s]+|[\s]*terminal=[\s]+)[\s]+(?<terminal>[^\s]*)[\s]+res=(?<result>[^\s]*)[\s]+\)$" }
				id => "message-03809"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03809"
					"[rsa][message][id1]" => "03809"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE audispd:05
		# line in RSA: <agent>: <space1>node=<node> type=<event_type> msg=audit(<fld25>.<fld26>:<id>): arch=<fld1> syscall=<id2> success=<disposition> exit=<fld6> a0=<fld2> a1=<fld3> a2=<fld4> a3=<fld28> items=<fld29>{ ppid=<parent_pid> pid=<process_id> | pid=<process_id> }auid=<fld9> uid=<uid> gid=<groupid> euid=<fld11> suid=<fld12> fsuid=<fld13> egid=<fld14> sgid=<fld15> fsgid=<fld16> tty=<terminal> ses=<sessionid> comm="<process>" exe="<filename>" subj=<s_context> key=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=(?<event_type>[^\s]*)[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):[\s]+arch=(?<fld1>[^\s]*)[\s]+syscall=(?<id2>[^\s]*)[\s]+success=(?<disposition>[^\s]*)[\s]+exit=(?<fld6>[^\s]*)[\s]+a0=(?<fld2>[^\s]*)[\s]+a1=(?<fld3>[^\s]*)[\s]+a2=(?<fld4>[^\s]*)[\s]+a3=(?<fld28>[^\s]*)[\s]+items=(?<fld29>[^\s\s]*)([\s]*ppid=(?<parent_pid>[^\s]*)[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*)[\s]+)auid=(?<fld9>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+gid=(?<groupid>[^\s]*)[\s]+euid=(?<fld11>[^\s]*)[\s]+suid=(?<fld12>[^\s]*)[\s]+fsuid=(?<fld13>[^\s]*)[\s]+egid=(?<fld14>[^\s]*)[\s]+sgid=(?<fld15>[^\s]*)[\s]+fsgid=(?<fld16>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ses=(?<sessionid>[^\s]*)[\s]+comm=\"(?<process>[^\"]*)\"[\s]+exe=\"(?<filename>[^\"]*)\"[\s]+subj=(?<s_context>[^\s]*)[\s]+key=(?<info>.*)$" }
				id => "message-audispd:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:05"
					"[rsa][message][id1]" => "audispd:05"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03850
		# line in RSA: <agent>: <space1>node=<node> type=<event_type> msg=audit(<fld25>.<fld26>:<fld27>): arch=<fld1> syscall=<id2> success=<disposition> exit=<fld6> a0=<fld2> a1=<fld3> a2=<fld4> a3=<fld28> items=<fld29>{ ppid=<parent_pid> pid=<process_id> | pid=<process_id> }auid=<fld9> uid=<uid> gid=<groupid> euid=<fld11> suid=<fld12> fsuid=<fld13> egid=<fld14> sgid=<fld15> fsgid=<fld16> comm="<process>" exe="<filename>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=(?<event_type>[^\s]*)[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<fld27>[^\)]*)\):[\s]+arch=(?<fld1>[^\s]*)[\s]+syscall=(?<id2>[^\s]*)[\s]+success=(?<disposition>[^\s]*)[\s]+exit=(?<fld6>[^\s]*)[\s]+a0=(?<fld2>[^\s]*)[\s]+a1=(?<fld3>[^\s]*)[\s]+a2=(?<fld4>[^\s]*)[\s]+a3=(?<fld28>[^\s]*)[\s]+items=(?<fld29>[^\s\s]*)([\s]*ppid=(?<parent_pid>[^\s]*)[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*)[\s]+)auid=(?<fld9>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+gid=(?<groupid>[^\s]*)[\s]+euid=(?<fld11>[^\s]*)[\s]+suid=(?<fld12>[^\s]*)[\s]+fsuid=(?<fld13>[^\s]*)[\s]+egid=(?<fld14>[^\s]*)[\s]+sgid=(?<fld15>[^\s]*)[\s]+fsgid=(?<fld16>[^\s]*)[\s]+comm=\"(?<process>[^\"]*)\"[\s]+exe=\"(?<filename>[^\"]*)\"$" }
				id => "message-03850"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03850"
					"[rsa][message][id1]" => "03850"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE audispd
		# line in RSA: <agent>: <space>node=<node> type=AVC msg=audit(<fld25>.<fld26>:<id>): <space> avc:<result> {{<privilege>} for pid=<process_id> comm="<process>" {name="<obj_name>" dev="<device>" ino=<inode>|dest=<fld1>} scontext=<s_context> tcontext=<t_context> tclass=<obj_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space>[^n]*)node=(?<node>[^\s]*)[\s]+type=AVC[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+avc:(?<result>[^\s]*)[\s]+\{(?<privilege>[^\}]*)\}[\s]+for[\s]+pid=(?<process_id>[^\s]*)[\s]+comm=\"(?<process>[^\"]*)\"[\s]+(name=\"(?<obj_name>[^\"]*)\"[\s]+dev=\"(?<device>[^\"]*)\"[\s]+ino=(?<inode>[^\s]*)|dest=(?<fld1>[^\s]*))[\s]+scontext=(?<s_context>[^\s]*)[\s]+tcontext=(?<t_context>[^\s]*)[\s]+tclass=(?<obj_type>.*)$" }
				id => "message-audispd"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "AVC"
					"[event][id]" => "audispd"
					"[rsa][message][id1]" => "audispd"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 001268
		# line in RSA: <agent>: <space1>node=<node> type=AVC msg=audit(<fld25>.<fld26>:<fld27>): <space> avc: <space> denied <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=AVC msg=audit(%{fld25}.%{fld26}:%{fld27}): %{space} avc: %{space} denied %{event_description}" }
				id => "message-001268"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "AVC"
					"[event][id]" => "001268"
					"[rsa][message][id1]" => "001268"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03801
		# line in RSA: <agent>: <space1>node=<node> type=CWD msg=audit(<fld25>.<fld26>:<id>): <space> cwd=<directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=CWD msg=audit(%{fld25}.%{fld26}:%{id}): %{space} cwd=%{directory}" }
				id => "message-03801"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CWD"
					"[event][id]" => "03801"
					"[rsa][message][id1]" => "03801"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03806
		# line in RSA: <agent>: <space1>node=<node> type=LOGIN msg=audit(<fld25>.<fld26>:<fld27>): <space> login pid=<process_id> uid=<uid> old auid=<fld1> new auid=<fld2> old ses=<fld3> new ses=<sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=LOGIN msg=audit(%{fld25}.%{fld26}:%{fld27}): %{space} login pid=%{process_id} uid=%{uid} old auid=%{fld1} new auid=%{fld2} old ses=%{fld3} new ses=%{sessionid}" }
				id => "message-03806"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_type" => "LOGIN"
				"event_description" => "successful user login"
					"[event][id]" => "03806"
					"[rsa][message][id1]" => "03806"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE audispd:06
		# line in RSA: <agent>: <space>node=<node> type=PATH msg=audit(<fld25>.<fld26>:<id>): <space> item=<fld7> name={"<filename>"|<filename>} inode=<inode> dev=<device> mode=<fld8> ouid=<uid> ogid=<groupid> rdev=<fld11>obj=<obj_name>objtype=<obj_type> cap_fp=<fld9> cap_fi=<fld10> cap_fe=<fld13> cap_fver=<fld12>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space>[^n]*)node=(?<node>[^\s]*)[\s]+type=PATH[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+item=(?<fld7>[^\s]*)[\s]+name=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+inode=(?<inode>[^\s]*)[\s]+dev=(?<device>[^\s]*)[\s]+mode=(?<fld8>[^\s]*)[\s]+ouid=(?<uid>[^\s]*)[\s]+ogid=(?<groupid>[^\s]*)[\s]+rdev=(?<fld11>[^o]*)obj=(?<obj_name>[^o]*)objtype=(?<obj_type>[^\s]*)[\s]+cap_fp=(?<fld9>[^\s]*)[\s]+cap_fi=(?<fld10>[^\s]*)[\s]+cap_fe=(?<fld13>[^\s]*)[\s]+cap_fver=(?<fld12>.*)$" }
				id => "message-audispd:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "PATH"
					"[event][id]" => "audispd:06"
					"[rsa][message][id1]" => "audispd:06"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03802
		# line in RSA: <agent>: <space1>node=<node> type=PATH msg=audit(<fld25>.<fld26>:<fld27>): <space> item=<fld7> name={"<filename>"|<filename>} inode=<inode> dev=<device> mode=<fld8> ouid=<uid> ogid=<groupid> rdev=<fld11>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=PATH[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<fld27>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+item=(?<fld7>[^\s]*)[\s]+name=(\"(?<filename>[^\"]*)\"|(?<filename>[^\s]*))[\s]+inode=(?<inode>[^\s]*)[\s]+dev=(?<device>[^\s]*)[\s]+mode=(?<fld8>[^\s]*)[\s]+ouid=(?<uid>[^\s]*)[\s]+ogid=(?<groupid>[^\s]*)[\s]+rdev=(?<fld11>.*)$" }
				id => "message-03802"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "PATH"
					"[event][id]" => "03802"
					"[rsa][message][id1]" => "03802"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03804
		# line in RSA: <agent>: <space1>node=<node> type=SOCKETCALL msg=audit(<fld25>.<fld26>:<fld27>): <space> nargs=<fld1> a0=<fld2> a1=<fld3> a2=<fld4> a3=<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=SOCKETCALL msg=audit(%{fld25}.%{fld26}:%{fld27}): %{space} nargs=%{fld1} a0=%{fld2} a1=%{fld3} a2=%{fld4} a3=%{fld5}" }
				id => "message-03804"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "SOCKETCALL"
					"[event][id]" => "03804"
					"[rsa][message][id1]" => "03804"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03805
		# line in RSA: <agent>: <space1>node=<node> type=SOCKADDR msg=audit(<fld25>.<fld26>:<fld27>): saddr=<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=SOCKADDR msg=audit(%{fld25}.%{fld26}:%{fld27}): saddr=%{saddr}" }
				id => "message-03805"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "SOCKADDR"
					"[event][id]" => "03805"
					"[rsa][message][id1]" => "03805"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03807
		# line in RSA: <agent>: <space1>node=<node> type=DAEMON_START msg=audit(<fld25>.<fld26>:<fld27>): <space> auditd start, ver=<version> format=<fld36> auid=<fld9> pid=<process_id> res=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=DAEMON_START msg=audit(%{fld25}.%{fld26}:%{fld27}): %{space} auditd start, ver=%{version} format=%{fld36} auid=%{fld9} pid=%{process_id} res=%{disposition}" }
				id => "message-03807"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "DAEMON START"
					"[event][id]" => "03807"
					"[rsa][message][id1]" => "03807"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03808
		# line in RSA: <agent>: <space1>node=<node> type=CONFIG_CHANGE msg=audit(<fld25>.<fld26>:<fld27>): <space> audit_enabled=<fld23> old=<fld24> by auid=<fld9> res=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=CONFIG_CHANGE msg=audit(%{fld25}.%{fld26}:%{fld27}): %{space} audit_enabled=%{fld23} old=%{fld24} by auid=%{fld9} res=%{disposition}" }
				id => "message-03808"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CONFIG CHANGE"
					"[event][id]" => "03808"
					"[rsa][message][id1]" => "03808"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03808:01
		# line in RSA: <agent>: <space1>node=<node> type=CONFIG_CHANGE msg=audit(<fld25>.<fld26>:<fld27>): <space> audit_backlog_limit=<fld33> old=<fld24> by auid=<fld9> res=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=CONFIG_CHANGE msg=audit(%{fld25}.%{fld26}:%{fld27}): %{space} audit_backlog_limit=%{fld33} old=%{fld24} by auid=%{fld9} res=%{disposition}" }
				id => "message-03808:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CONFIG CHANGE"
					"[event][id]" => "03808:01"
					"[rsa][message][id1]" => "03808:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03808:03
		# line in RSA: <agent>: <space1>node=<node> type=CONFIG_CHANGE msg=audit(<fld25>.<fld26>:<id>): <space> auid=<fld9> {ses=<sessionid> op=<action> path="<directory>" key=<info>|op=<fld38> key=<info>} list=<rule_uid> res=<disposition>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=CONFIG_CHANGE[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+auid=(?<fld9>[^\s]*)[\s]+(ses=(?<sessionid>[^\s]*)[\s]+op=(?<action>[^\s]*)[\s]+path=\"(?<directory>[^\"]*)\"[\s]+key=(?<info>[^\s]*)|op=(?<fld38>[^\s]*)[\s]+key=(?<info>[^\s]*))[\s]+list=(?<rule_uid>[^\s]*)[\s]+res=(?<disposition>.*)$" }
				id => "message-03808:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CONFIG CHANGE"
					"[event][id]" => "03808:03"
					"[rsa][message][id1]" => "03808:03"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03803
		# line in RSA: <agent>: <space1>node=<node> type=EOE msg=audit(<fld25>.<fld26>:<id>):
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space1}node=%{node} type=EOE msg=audit(%{fld25}.%{fld26}:%{id}):" }
				id => "message-03803"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "EOE"
					"[event][id]" => "03803"
					"[rsa][message][id1]" => "03803"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03811
		# line in RSA: <agent>: <space1>node=<node> type={UNKNOWN[<fld1>]|UNKNOWN} msg=audit(<fld25>.<fld26>:<fld27>): <space> proctitle=<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space1>[^n]*)node=(?<node>[^\s]*)[\s]+type=(UNKNOWN\[(?<fld1>[^\]]*)\]|UNKNOWN)[\s]+msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<fld27>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+proctitle=(?<fld2>.*)$" }
				id => "message-03811"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "UNKNOWN"
					"[event][id]" => "03811"
					"[rsa][message][id1]" => "03811"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "UNIX" ] }
			}
		}
		# MESSAGE 03812
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>):{user pid|pid}=<process_id>uid=<uid>auid=<fld9>{ses=<sessionid>subj=<subject>|ses=<sessionid>}msg='{op=<action> grantors=<privilege>|op=<action>}acct="<username>" exe="<action>" hostname=<shost>addr=<saddr>terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<node>[^t]*)type=(?<event_type>[^m]*)msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):(user[\s]+pid|pid)=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld9>[^ss]*)(ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)|ses=(?<sessionid>[^m]*))msg='(op=(?<action>[^\s]*)[\s]+grantors=(?<privilege>[^a]*)|op=(?<action>[^a]*))acct=\"(?<username>[^\"]*)\"[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<shost>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<result>[^']*)'$" }
				id => "message-03812"
				add_field => {
				"hostname" => "%{hhost}"
				"s_context" => "%{subject}"
					"[event][id]" => "03812"
					"[rsa][message][id1]" => "03812"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:01
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>):{user pid|pid}=<process_id>uid=<uid>auid=<fld9>{ses=<sessionid>subj=<subject>|ses=<sessionid>}msg='op=<action>direction=<direction>cipher=<d_cipher>ksize=<d_ciphersize>mac=<fld3>pfs=<fld4>spid=<fld5>suid=<fld6>rport=<sport>laddr=<daddr>lport=<dport>exe="<action>" hostname=<shost>addr=<saddr>terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<node>[^t]*)type=(?<event_type>[^m]*)msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):(user[\s]+pid|pid)=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld9>[^ss]*)(ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)|ses=(?<sessionid>[^m]*))msg='op=(?<action>[^d]*)direction=(?<direction>[^c]*)cipher=(?<d_cipher>[^k]*)ksize=(?<d_ciphersize>[^m]*)mac=(?<fld3>[^p]*)pfs=(?<fld4>[^s]*)spid=(?<fld5>[^s]*)suid=(?<fld6>[^r]*)rport=(?<sport>[^l]*)laddr=(?<daddr>[^l]*)lport=(?<dport>[^e]*)exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<shost>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<result>[^']*)'$" }
				id => "message-audispd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"s_context" => "%{subject}"
					"[event][id]" => "audispd:01"
					"[rsa][message][id1]" => "audispd:01"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:02
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>):{user pid|pid}=<process_id>uid=<uid>auid=<fld9>{ses=<sessionid>subj=<subject>|ses=<sessionid>}msg='op=<action>kind=<fld5>fp=<checksum>direction=<direction>spid=<fld6>suid=<fld7>exe="<action>" hostname=<shost>addr=<saddr>terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<node>[^t]*)type=(?<event_type>[^m]*)msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):(user[\s]+pid|pid)=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld9>[^ss]*)(ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)|ses=(?<sessionid>[^m]*))msg='op=(?<action>[^k]*)kind=(?<fld5>[^f]*)fp=(?<checksum>[^d]*)direction=(?<direction>[^s]*)spid=(?<fld6>[^s]*)suid=(?<fld7>[^e]*)exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<shost>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<result>[^']*)'$" }
				id => "message-audispd:02"
				add_field => {
				"hostname" => "%{hhost}"
				"s_context" => "%{subject}"
					"[event][id]" => "audispd:02"
					"[rsa][message][id1]" => "audispd:02"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:03
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>):{user pid|pid}=<process_id>uid=<uid>auid=<fld9>{ses=<sessionid>subj=<subject>|ses=<sessionid>}msg='op=<action>id=<id>exe="<action>" hostname=<shost>addr=<saddr>terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<node>[^t]*)type=(?<event_type>[^m]*)msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):(user[\s]+pid|pid)=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld9>[^ss]*)(ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)|ses=(?<sessionid>[^m]*))msg='op=(?<action>[^i]*)id=(?<id>[^e]*)exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<shost>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<result>[^']*)'$" }
				id => "message-audispd:03"
				add_field => {
				"hostname" => "%{hhost}"
				"s_context" => "%{subject}"
					"[event][id]" => "audispd:03"
					"[rsa][message][id1]" => "audispd:03"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:04
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>):{user pid|pid}=<process_id>uid=<uid>auid=<fld9>{ses=<sessionid>subj=<subject>|ses=<sessionid>}msg='pam: default-context=<fld5> selected-context=<context> exe="<action>" hostname=<shost>addr=<saddr>terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<node>[^t]*)type=(?<event_type>[^m]*)msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):(user[\s]+pid|pid)=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld9>[^ss]*)(ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)|ses=(?<sessionid>[^m]*))msg='pam:[\s]+default\-context=(?<fld5>[^\s]*)[\s]+selected\-context=(?<context>[^\s]*)[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<shost>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<result>[^']*)'$" }
				id => "message-audispd:04"
				add_field => {
				"hostname" => "%{hhost}"
				"s_context" => "%{subject}"
					"[event][id]" => "audispd:04"
					"[rsa][message][id1]" => "audispd:04"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:09
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>):{user pid|pid}=<process_id>uid=<uid>auid=<fld9>{ses=<sessionid>subj=<s_context>|ses=<sessionid>}msg='unit=<service> comm=<fld6> exe="<action>" hostname=<shost>addr=<saddr>terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+node=(?<node>[^t]*)type=(?<event_type>[^m]*)msg=audit\((?<fld25>[^\.]*)\.(?<fld26>[^:]*):(?<id>[^\)]*)\):(user[\s]+pid|pid)=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld9>[^ss]*)(ses=(?<sessionid>[^s]*)subj=(?<s_context>[^m]*)|ses=(?<sessionid>[^m]*))msg='unit=(?<service>[^\s]*)[\s]+comm=(?<fld6>[^\s]*)[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<shost>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<result>[^']*)'$" }
				id => "message-audispd:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:09"
					"[rsa][message][id1]" => "audispd:09"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:08
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>): argc=<dclass_counter1> <param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: node=%{node}type=%{event_type}msg=audit(%{fld25}.%{fld26}:%{id}): argc=%{dclass_counter1} %{param}" }
				id => "message-audispd:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:08"
					"[rsa][message][id1]" => "audispd:08"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:07
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>): proctitle=<fld27>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: node=%{node}type=%{event_type}msg=audit(%{fld25}.%{fld26}:%{id}): proctitle=%{fld27}" }
				id => "message-audispd:07"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:07"
					"[rsa][message][id1]" => "audispd:07"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:10
		# line in RSA: <agent>: node=<node> type=<event_type> msg=audit(<fld25>.<fld26>:<id>): pid=<process_id> uid=<uid> subj=<s_context> old-auid=<fld1> auid=<fld9> tty=<terminal> old-ses=<fld3> ses=<sessionid> res=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: node=%{node} type=%{event_type} msg=audit(%{fld25}.%{fld26}:%{id}): pid=%{process_id} uid=%{uid} subj=%{s_context} old-auid=%{fld1} auid=%{fld9} tty=%{terminal} old-ses=%{fld3} ses=%{sessionid} res=%{result}" }
				id => "message-audispd:10"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:10"
					"[rsa][message][id1]" => "audispd:10"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:11
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>): dev=<device> prom=<fld1> old_prom=<fld2> auid=<fld3> uid=<uid> gid=<groupid> ses=<sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: node=%{node}type=%{event_type}msg=audit(%{fld25}.%{fld26}:%{id}): dev=%{device} prom=%{fld1} old_prom=%{fld2} auid=%{fld3} uid=%{uid} gid=%{groupid} ses=%{sessionid}" }
				id => "message-audispd:11"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:11"
					"[rsa][message][id1]" => "audispd:11"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audispd:12
		# line in RSA: <agent>: node=<node>type=<event_type>msg=audit(<fld25>.<fld26>:<id>): pid=<process_id> uid=<uid> auid=<fld3> ses=<sessionid> subj=<s_context> msg='cwd="<directory>" cmd="<action>" terminal=<terminal>res=<result>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: node=%{node}type=%{event_type}msg=audit(%{fld25}.%{fld26}:%{id}): pid=%{process_id} uid=%{uid} auid=%{fld3} ses=%{sessionid} subj=%{s_context} msg='cwd=\"%{directory}\" cmd=\"%{action}\" terminal=%{terminal}res=%{result}'" }
				id => "message-audispd:12"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "audispd:12"
					"[rsa][message][id1]" => "audispd:12"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03810
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-03810"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03810"
					"[rsa][message][id1]" => "03810"
					"[event][categoryid]" => "1612000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Audit" {
		# MESSAGE 002331
		# line in RSA: <agent> I (<hostname>) Remote login failed for user '<username>' from Web at IP <saddr> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} I (%{hostname}) Remote login failed for user '%{username}' from Web at IP %{saddr} %{info}" }
				id => "message-002331"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Remote login failure"
					"[event][id]" => "002331"
					"[rsa][message][id1]" => "002331"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002310
		# line in RSA: <agent> I (<hostname>) Remote login successful for user '<username>' from Web at IP <saddr> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} I (%{hostname}) Remote login successful for user '%{username}' from Web at IP %{saddr} %{info}" }
				id => "message-002310"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Remote login successful"
					"[event][id]" => "002310"
					"[rsa][message][id1]" => "002310"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002311
		# line in RSA: <agent> Remote logoff successful for user '<username>' from Web at IP <saddr> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote logoff successful for user '%{username}' from Web at IP %{saddr} %{info}" }
				id => "message-002311"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "Successful remote logout"
					"[event][id]" => "002311"
					"[rsa][message][id1]" => "002311"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002312
		# line in RSA: <agent> I (<hostname>) User '<username>' { powered off | restarted } blade <device>. <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+I[\s]+\((?<hostname>[^\)]*)\)[\s]+User[\s]+'(?<username>[^']*)'[\s]+([\s]*powered[\s]+off[\s]+|[\s]*restarted[\s]+)[\s]+blade[\s]+(?<device>[^\.]*)\.[\s]+(?<info>.*)$" }
				id => "message-002312"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User restarted or powered off blade"
					"[event][id]" => "002312"
					"[rsa][message][id1]" => "002312"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "audit" {
		# MESSAGE audit:01
		# line in RSA: ADD_USER msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>id=<id>exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ADD_USER msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='op=%{fld38}id=%{id}exe=\"%{action}\" hostname=%{hostname}addr=%{saddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "ADD_USER"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:01"
					"[rsa][message][id1]" => "audit:01"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:02
		# line in RSA: ADD_GROUP msg=<agent>(<info>): pid=<process_id> uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>acct="<username>" exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ADD_GROUP msg=%{agent}(%{info}): pid=%{process_id} uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='op=%{fld38}acct=\"%{username}\" exe=\"%{action}\" hostname=%{hostname}addr=%{saddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "ADD_GROUP"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:02"
					"[rsa][message][id1]" => "audit:02"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:03
		# line in RSA: USER_MGMT msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>{grp="<group>" acct="<username>"|id=<id>} exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_MGMT[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+pid=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld1>[^s]*)ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)msg='op=(?<fld38>[^gi]*)(grp=\"(?<group>[^\"]*)\"[\s]+acct=\"(?<username>[^\"]*)\"|id=(?<id>[^\s]*))[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_MGMT"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:03"
					"[rsa][message][id1]" => "audit:03"
					"[event][categoryid]" => "1402000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:04
		# line in RSA: CRED_ACQ msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid>subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username>acct="<username>" | acct="<username>"} exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^CRED_ACQ[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^s]*)subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^a]*)acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\")[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CRED_ACQ"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:04"
					"[rsa][message][id1]" => "audit:04"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:05
		# line in RSA: USER_CMD msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='cwd="<directory>" cmd=<action>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "USER_CMD msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='cwd=\"%{directory}\" cmd=%{action}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_CMD"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:05"
					"[rsa][message][id1]" => "audit:05"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:06
		# line in RSA: USER_START msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid>subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username>acct="<username>" | acct="<username>" | id=<id> } exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_START[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^s]*)subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^a]*)acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*id=(?<id>[^\s]*)[\s]+)[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_START"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:06"
					"[rsa][message][id1]" => "audit:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:07
		# line in RSA: SERVICE_STOP msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='unit=<service>comm="<process>" exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SERVICE_STOP msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='unit=%{service}comm=\"%{process}\" exe=\"%{action}\" hostname=%{hostname}addr=%{saddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "SERVICE_STOP"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:07"
					"[rsa][message][id1]" => "audit:07"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:08
		# line in RSA: SERVICE_START msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='unit=<service>comm="<process>" exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SERVICE_START msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='unit=%{service}comm=\"%{process}\" exe=\"%{action}\" hostname=%{hostname}addr=%{saddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "SERVICE_START"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:08"
					"[rsa][message][id1]" => "audit:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:09
		# line in RSA: USER_END msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid> subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username> acct="<username>" | acct="<username>" | id=<id>} exe="<action>" hostname=<hostname>addr=<daddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_END[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^\s]*)[\s]+acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*id=(?<id>[^\s]*))[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<daddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:09"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_END"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:09"
					"[rsa][message][id1]" => "audit:09"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:25
		# line in RSA: USER_AUTH msg=<agent>(<info>): user pid=<process_id> uid=<uid>auid=<fld1> ses=<sessionid> msg='op=<fld38> algo=<fld50> size=<bytes> fp=<fld2> rport=<dport> acct="<username>" exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "USER_AUTH msg=%{agent}(%{info}): user pid=%{process_id} uid=%{uid}auid=%{fld1} ses=%{sessionid} msg='op=%{fld38} algo=%{fld50} size=%{bytes} fp=%{fld2} rport=%{dport} acct=\"%{username}\" exe=\"%{action}\" hostname=%{hostname}addr=%{saddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:25"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_AUTH"
					"[event][id]" => "audit:25"
					"[rsa][message][id1]" => "audit:25"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:10
		# line in RSA: USER_AUTH msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid> subj=<subject> | ses=<sessionid>} msg='op=<fld38>{grantors=<c_username> acct="<username>" | rport=<dport> acct="<username>" | acct="<username>"} exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_AUTH[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^g\s\s]*)(grantors=(?<c_username>[^\s]*)[\s]+acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*rport=(?<dport>[^\s]*)[\s]+acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\")[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_AUTH"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:10"
					"[rsa][message][id1]" => "audit:10"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:11
		# line in RSA: CRED_DISP msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid> subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username> acct="<username>" | acct="<username>"} exe="<action>" hostname=<hostname>addr=<daddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^CRED_DISP[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^\s]*)[\s]+acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\")[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<daddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:11"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CRED_DISP"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:11"
					"[rsa][message][id1]" => "audit:11"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:12
		# line in RSA: USER_CHAUTHTOK msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>{grantors=<c_username>acct="<username>"|id=<id>}exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_CHAUTHTOK[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+pid=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld1>[^s]*)ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)msg='op=(?<fld38>[^gi]*)(grantors=(?<c_username>[^a]*)acct=\"(?<username>[^\"]*)\"|id=(?<id>[^e]*))exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_CHAUTHTOK"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:12"
					"[rsa][message][id1]" => "audit:12"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:13
		# line in RSA: CRYPTO_SESSION msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1>{ses=<sessionid> subj=<subject> | ses=<sessionid>} msg='op=<fld38>direction=<direction>cipher=<s_cipher>ksize=<s_ciphersize> { mac=<fld10>pfs=<fld3>spid=<parent_pid> | spid=<parent_pid>} suid=<fld4>rport=<dport>laddr=<saddr>lport=<sport>exe="<action>" hostname=<hostname>addr=<daddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^CRYPTO_SESSION[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^s\s]*)(ses=(?<sessionid>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^d]*)direction=(?<direction>[^c]*)cipher=(?<s_cipher>[^k]*)ksize=(?<s_ciphersize>[^\s]*)[\s]+([\s]*mac=(?<fld10>[^p]*)pfs=(?<fld3>[^s]*)spid=(?<parent_pid>[^\s]*)[\s]+|[\s]*spid=(?<parent_pid>[^\s]*))[\s]+suid=(?<fld4>[^r]*)rport=(?<dport>[^l]*)laddr=(?<saddr>[^l]*)lport=(?<sport>[^e]*)exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<daddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:13"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CRYPTO_SESSION"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:13"
					"[rsa][message][id1]" => "audit:13"
					"[event][categoryid]" => "1613010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:14
		# line in RSA: USER_ACCT msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>}uid=<uid>auid=<fld1>{ses=<sessionid> subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username> acct="<username>" | acct="<username>"} exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_ACCT[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^u]*))uid=(?<uid>[^a]*)auid=(?<fld1>[^s\s]*)(ses=(?<sessionid>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^\s]*)[\s]+acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\")[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_ACCT"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:14"
					"[rsa][message][id1]" => "audit:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:15
		# line in RSA: CRYPTO_KEY_USER msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>}uid=<uid> auid=<fld1> {ses=<sessionid> subj=<subject> | ses=<sessionid>} msg='op=<fld38>kind=<event_type>fp=<fld2>direction=<direction>spid=<parent_pid>{suid=<fld3>rport=<dport>laddr=<saddr>lport=<sport> | suid=<fld3>}exe="<action>" hostname=<hostname>addr=<daddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^CRYPTO_KEY_USER[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^u]*))uid=(?<uid>[^\s]*)[\s]+auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^\s]*)[\s]+subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^k]*)kind=(?<event_type>[^f]*)fp=(?<fld2>[^d]*)direction=(?<direction>[^s]*)spid=(?<parent_pid>[^s\s]*)(suid=(?<fld3>[^r]*)rport=(?<dport>[^l]*)laddr=(?<saddr>[^l]*)lport=(?<sport>[^\s]*)[\s]+|[\s]*suid=(?<fld3>[^e]*))exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<daddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:15"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CRYPTO_KEY_USER"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:15"
					"[rsa][message][id1]" => "audit:15"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:16
		# line in RSA: DEL_USER msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>id=<id>exe="<action>" hostname=<hostname>addr=<daddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DEL_USER msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='op=%{fld38}id=%{id}exe=\"%{action}\" hostname=%{hostname}addr=%{daddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:16"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "DEL_USER"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:16"
					"[rsa][message][id1]" => "audit:16"
					"[event][categoryid]" => "1402020100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:17
		# line in RSA: DEL_GROUP msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>grp="<group>" acct="<username>" exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DEL_GROUP msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='op=%{fld38}grp=\"%{group}\" acct=\"%{username}\" exe=\"%{action}\" hostname=%{hostname}addr=%{saddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:17"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "DEL_GROUP"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:17"
					"[rsa][message][id1]" => "audit:17"
					"[event][categoryid]" => "1402010100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:18
		# line in RSA: GRP_MGMT msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='{op=<fld38> grp="<group>"|op=<fld38>} acct="<username>" exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^GRP_MGMT[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+pid=(?<process_id>[^u]*)uid=(?<uid>[^a]*)auid=(?<fld1>[^s]*)ses=(?<sessionid>[^s]*)subj=(?<subject>[^m]*)msg='(op=(?<fld38>[^\s]*)[\s]+grp=\"(?<group>[^\"]*)\"|op=(?<fld38>[^\s]*))[\s]+acct=\"(?<username>[^\"]*)\"[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:18"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "GRP_MGMT"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:18"
					"[rsa][message][id1]" => "audit:18"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:19
		# line in RSA: LOGIN msg=<agent>(<info>): pid=<process_id>uid=<uid>subj=<subject>old-auid=<fld1>auid=<fld2>old-ses=<sessionid>ses=<sessionid1>res=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LOGIN msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}subj=%{subject}old-auid=%{fld1}auid=%{fld2}old-ses=%{sessionid}ses=%{sessionid1}res=%{disposition}" }
				id => "message-audit:19"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "LOGIN"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:19"
					"[rsa][message][id1]" => "audit:19"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:28
		# line in RSA: LOGIN msg=<agent>(<info>): pid=<process_id> uid=<uid> old auid=<fld1> new auid=<fld2> old ses=<sessionid> new ses=<sessionid1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LOGIN msg=%{agent}(%{info}): pid=%{process_id} uid=%{uid} old auid=%{fld1} new auid=%{fld2} old ses=%{sessionid} new ses=%{sessionid1}" }
				id => "message-audit:28"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "LOGIN"
					"[event][id]" => "audit:28"
					"[rsa][message][id1]" => "audit:28"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:20
		# line in RSA: CRED_REFR msg=<agent>(<info>): pid=<process_id>uid=<uid>auid=<fld1>ses=<sessionid>subj=<subject>msg='op=<fld38>grantors=<c_username>acct="<username>" exe="<action>" hostname=<hostname>addr=<daddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CRED_REFR msg=%{agent}(%{info}): pid=%{process_id}uid=%{uid}auid=%{fld1}ses=%{sessionid}subj=%{subject}msg='op=%{fld38}grantors=%{c_username}acct=\"%{username}\" exe=\"%{action}\" hostname=%{hostname}addr=%{daddr}terminal=%{terminal}res=%{disposition}'" }
				id => "message-audit:20"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CRED_REFR"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:20"
					"[rsa][message][id1]" => "audit:20"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:21
		# line in RSA: AVC msg=<agent>(<info>): avc:<disposition>{{<fld1>} for  pid=<process_id>comm="<process>" path="<filename>" dev="<device>" ino=<inode>scontext=<s_context>tcontext=<t_context>tclass=<obj_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^AVC[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+avc:(?<disposition>[^\{]*)\{(?<fld1>[^\}]*)\}[\s]+for[\s]+pid=(?<process_id>[^c]*)comm=\"(?<process>[^\"]*)\"[\s]+path=\"(?<filename>[^\"]*)\"[\s]+dev=\"(?<device>[^\"]*)\"[\s]+ino=(?<inode>[^s]*)scontext=(?<s_context>[^t]*)tcontext=(?<t_context>[^t]*)tclass=(?<obj_type>.*)$" }
				id => "message-audit:21"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "AVC"
					"[event][id]" => "audit:21"
					"[rsa][message][id1]" => "audit:21"
					"[event][categoryid]" => "1502000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:22
		# line in RSA: SYSCALL msg=<agent>(<info>): arch=<fld1>syscall=<id2>success=<disposition>exit=<fld6>a0=<fld7>a1=<fld8>a2=<fld9>a3=<fld10>items=<fld11>ppid=<parent_pid>pid=<process_id>auid=<fld12>uid=<uid>gid=<groupid>euid=<fld13>suid=<fld14>fsuid=<fld15>egid=<fld16>sgid=<fld17>fsgid=<fld18>tty=<terminal>ses=<sessionid>comm="<process>" exe="<action>" {subj=<subject> key=<fld19> | key="<fld19>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SYSCALL[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+arch=(?<fld1>[^s]*)syscall=(?<id2>[^s]*)success=(?<disposition>[^e]*)exit=(?<fld6>[^a]*)a0=(?<fld7>[^a]*)a1=(?<fld8>[^a]*)a2=(?<fld9>[^a]*)a3=(?<fld10>[^i]*)items=(?<fld11>[^p]*)ppid=(?<parent_pid>[^p]*)pid=(?<process_id>[^a]*)auid=(?<fld12>[^u]*)uid=(?<uid>[^g]*)gid=(?<groupid>[^e]*)euid=(?<fld13>[^s]*)suid=(?<fld14>[^f]*)fsuid=(?<fld15>[^e]*)egid=(?<fld16>[^s]*)sgid=(?<fld17>[^f]*)fsgid=(?<fld18>[^t]*)tty=(?<terminal>[^s]*)ses=(?<sessionid>[^c]*)comm=\"(?<process>[^\"]*)\"[\s]+exe=\"(?<action>[^\"]*)\"[\s]+(subj=(?<subject>[^\s]*)[\s]+key=(?<fld19>[^\s]*)[\s]+|[\s]*key=\"(?<fld19>[^\"]*)\")$" }
				id => "message-audit:22"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "SYSCALL"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:22"
					"[rsa][message][id1]" => "audit:22"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:23
		# line in RSA: CWD msg=<agent>(<index>):  cwd="<directory>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CWD msg=%{agent}(%{index}):  cwd=\"%{directory}\"" }
				id => "message-audit:23"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "CWD"
					"[event][id]" => "audit:23"
					"[rsa][message][id1]" => "audit:23"
					"[event][categoryid]" => "1603020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:24
		# line in RSA: PATH msg=<agent>(<info>): item=<fld1> {name="<filename>" | name=(<filename>)} inode=<inode>dev=<device>mode=<fld8>ouid=<uid>ogid=<groupid>rdev=<fld11> {obj=<obj_name>objtype=<obj_type> | nametype=<obj_type>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^PATH[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+item=(?<fld1>[^\s]*)[\s]+(name=\"(?<filename>[^\"]*)\"[\s]+|[\s]*name=\((?<filename>[^\)]*)\))[\s]+inode=(?<inode>[^d]*)dev=(?<device>[^m]*)mode=(?<fld8>[^o]*)ouid=(?<uid>[^o]*)ogid=(?<groupid>[^r]*)rdev=(?<fld11>[^\s]*)[\s]+(obj=(?<obj_name>[^o]*)objtype=(?<obj_type>[^\s]*)[\s]+|[\s]*nametype=(?<obj_type>.*))$" }
				id => "message-audit:24"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "PATH"
					"[event][id]" => "audit:24"
					"[rsa][message][id1]" => "audit:24"
					"[event][categoryid]" => "1603020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:26
		# line in RSA: USER_LOGIN msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid>subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username>acct="<username>" | acct="<username>" | id=<id> } exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_LOGIN[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^s]*)subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^a]*)acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*id=(?<id>[^\s]*)[\s]+)[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:26"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_LOGIN"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:26"
					"[rsa][message][id1]" => "audit:26"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:27
		# line in RSA: USER_LOGOUT msg=<agent>(<info>): {user pid=<process_id> | pid=<process_id>} uid=<uid>auid=<fld1> {ses=<sessionid>subj=<subject> | ses=<sessionid>} msg='op=<fld38> {grantors=<c_username>acct="<username>" | acct="<username>" | id=<id> } exe="<action>" hostname=<hostname>addr=<saddr>terminal=<terminal>res=<disposition>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^USER_LOGOUT[\s]+msg=(?<agent>[^\(]*)\((?<info>[^\)]*)\):[\s]+(user[\s]+pid=(?<process_id>[^\s]*)[\s]+|[\s]*pid=(?<process_id>[^\s]*))[\s]+uid=(?<uid>[^a]*)auid=(?<fld1>[^\s]*)[\s]+(ses=(?<sessionid>[^s]*)subj=(?<subject>[^\s]*)[\s]+|[\s]*ses=(?<sessionid>[^\s]*))[\s]+msg='op=(?<fld38>[^\s]*)[\s]+(grantors=(?<c_username>[^a]*)acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*acct=\"(?<username>[^\"]*)\"[\s]+|[\s]*id=(?<id>[^\s]*)[\s]+)[\s]+exe=\"(?<action>[^\"]*)\"[\s]+hostname=(?<hostname>[^a]*)addr=(?<saddr>[^t]*)terminal=(?<terminal>[^r]*)res=(?<disposition>[^']*)'$" }
				id => "message-audit:27"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "USER_LOGOUT"
				"s_context" => "%{subject}"
					"[event][id]" => "audit:27"
					"[rsa][message][id1]" => "audit:27"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE audit:29
		# line in RSA: EXECVE msg=<agent>(<info>): argc=<dclass_counter1> <context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "EXECVE msg=%{agent}(%{info}): argc=%{dclass_counter1} %{context}" }
				id => "message-audit:29"
				add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "EXECVE"
					"[event][id]" => "audit:29"
					"[rsa][message][id1]" => "audit:29"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001841
		# line in RSA: <event_type> msg=<agent>(<info>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} msg=%{agent}(%{info}): %{event_description}" }
				id => "message-001841"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001841"
					"[rsa][message][id1]" => "001841"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00126
		# line in RSA: {<agent>: <event_description>|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^:]*):[\s]+(?<event_description>.*)|(?<event_description>.*))$" }
				id => "message-00126"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00126"
					"[rsa][message][id1]" => "00126"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "auditd" {
		# MESSAGE 00321
		# line in RSA: <agent>: auditd shutdown failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: auditd shutdown failed" }
				id => "message-00321"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Shutdown failed"
					"[event][id]" => "00321"
					"[rsa][message][id1]" => "00321"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:01
		# line in RSA: <agent>: auditd { startup | shutdown } succeeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+auditd[\s]+([\s]*startup[\s]+|[\s]*shutdown[\s]+)[\s]+succeeded$" }
				id => "message-00321:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "startup/shutdown succeeded"
					"[event][id]" => "00321:01"
					"[rsa][message][id1]" => "00321:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:02
		# line in RSA: <agent>: Failed to lock <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Failed to lock %{filename}: %{result}" }
				id => "message-00321:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to lock file"
					"[event][id]" => "00321:02"
					"[rsa][message][id1]" => "00321:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:03
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { Warning - <event_description> | <event_description>: <action> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*Warning[\s]+\-[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-00321:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00321:03"
					"[rsa][message][id1]" => "00321:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "auditmanager" {
		# MESSAGE 001309
		# line in RSA: <agent>: Received wakeup signal before sleep finished
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received wakeup signal before sleep finished" }
				id => "message-001309"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Received wakeup signal before sleep finished"
					"[event][id]" => "001309"
					"[rsa][message][id1]" => "001309"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE auditmanager
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-auditmanager"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "auditmanager"
					"[rsa][message][id1]" => "auditmanager"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId246
	# line in RSA: <agent>: Audit logfile (<filename>) not processed (<result>).
	else if [logstash][msgparser][id] == "msgParserId246" {
		dissect {
			mapping => { "message" => "%{agent}: Audit logfile (%{filename}) not processed (%{result})." }
			id => "msgParserId246"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Audit log file not processed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId247
	# line in RSA: <agent>: user <username> logged out on <event_time_string> from <hostip>
	else if [logstash][msgparser][id] == "msgParserId247" {
		dissect {
			mapping => { "message" => "%{agent}: user %{username} logged out on %{event_time_string} from %{hostip}" }
			id => "msgParserId247"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "user logged out from host"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "authdaemond" {
		# MESSAGE 00629
		# line in RSA: <agent>: domain invalid <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: domain invalid %{domain}" }
				id => "message-00629"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "domain invalid"
					"[event][id]" => "00629"
					"[rsa][message][id1]" => "00629"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00629:01
		# line in RSA: <agent>: user invalid <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: user invalid %{username}" }
				id => "message-00629:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user invalid"
					"[event][id]" => "00629:01"
					"[rsa][message][id1]" => "00629:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00629:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00629:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00629:02"
					"[rsa][message][id1]" => "00629:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId250
	# line in RSA: <agent>: mac:<smacaddr>; <space> ssid: <sessionid>; <device>
	else if [logstash][msgparser][id] == "msgParserId250" {
		dissect {
			mapping => { "message" => "%{agent}: mac:%{smacaddr}; %{space} ssid: %{sessionid}; %{device}" }
			id => "msgParserId250"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId251
	# line in RSA: <agent>: user: <username>; mac:<smacaddr>; author reason: <event_description>; ssid: <sessionid>; <device>
	else if [logstash][msgparser][id] == "msgParserId251" {
		dissect {
			mapping => { "message" => "%{agent}: user: %{username}; mac:%{smacaddr}; author reason: %{event_description}; ssid: %{sessionid}; %{device}" }
			id => "msgParserId251"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId252
	# line in RSA: <agent>: pam_unix(<service>): authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId252" {
		dissect {
			mapping => { "message" => "%{agent}: pam_unix(%{service}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId252"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AUTO-INIT" {
		# MESSAGE 002101
		# line in RSA: <agent>[<process_id>]: [<severity>]: <process>: session <sessionid>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]: %{process}: session %{sessionid}: %{event_description}" }
				id => "message-002101"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002101"
					"[rsa][message][id1]" => "002101"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AUTO-INIT
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-AUTO-INIT"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "AUTO-INIT"
					"[rsa][message][id1]" => "AUTO-INIT"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "automount" {
		# MESSAGE 00086
		# line in RSA: <agent>[<process_id>]: expired <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: expired %{directory}" }
				id => "message-00086"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "home directory expired"
					"[event][id]" => "00086"
					"[rsa][message][id1]" => "00086"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002155
		# line in RSA: <agent>: nss_ldap: could not search LDAP server - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: nss_ldap: could not search LDAP server - %{result}" }
				id => "message-002155"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not search LDAP server"
				"service" => "nss_ldap"
					"[event][id]" => "002155"
					"[rsa][message][id1]" => "002155"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002156
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  mount(nfs): <application>: mount failure <filename> <space> <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+mount\(nfs\):[\s]+(?<application>[^:]*):[\s]+mount[\s]+failure[\s]+(?<filename>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+(?<device>.*)$" }
				id => "message-002156"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "nfs mount failure"
					"[event][id]" => "002156"
					"[rsa][message][id1]" => "002156"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002335
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  failed to mount <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+failed[\s]+to[\s]+mount[\s]+(?<filename>.*)$" }
				id => "message-002335"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "file mount failure"
					"[event][id]" => "002335"
					"[rsa][message][id1]" => "002335"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002157
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <application>:<dclass_counter1>: hostname lookup failed: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):(?<dclass_counter1>[^:]*):[\s]+hostname[\s]+lookup[\s]+failed:[\s]+(?<result>.*)$" }
				id => "message-002157"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "hostname lookup failed"
					"[event][id]" => "002157"
					"[rsa][message][id1]" => "002157"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002158
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  mount(nfs): mounted <filename> <space> <device>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+mount\(nfs\):[\s]+mounted[\s]+(?<filename>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+(?<device>.*)$" }
				id => "message-002158"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "file mounted on volume"
					"[event][id]" => "002158"
					"[rsa][message][id1]" => "002158"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002266
		# line in RSA: <agent>[<process_id>]: key "<obj_name>" not found in map source(s).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: key \"%{obj_name}\" not found in map source(s)." }
				id => "message-002266"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "key not found in map source(s)"
					"[event][id]" => "002266"
					"[rsa][message][id1]" => "002266"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE automount:02
		# line in RSA: <agent>[<process_id_src>]: expire_cleanup: sigchld: exp <process_id> <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id_src}]: expire_cleanup: sigchld: exp %{process_id} %{fld1}" }
				id => "message-automount:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "automount:02"
					"[rsa][message][id1]" => "automount:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE automount:01
		# line in RSA: <agent>[<process_id_src>]: expire_cleanup: got thid <process_id> path <filename> stat <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id_src}]: expire_cleanup: got thid %{process_id} path %{filename} stat %{fld1}" }
				id => "message-automount:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "automount:01"
					"[rsa][message][id1]" => "automount:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002159
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  { <application>: lookup(nisplus): <event_description> | <application>: <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<application>[^:]*):[\s]+lookup\(nisplus\):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002159"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002159"
					"[rsa][message][id1]" => "002159"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE automount
		# line in RSA: <agent>[<fld1>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{info}" }
				id => "message-automount"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "automount"
					"[rsa][message][id1]" => "automount"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "automountd" {
		# MESSAGE 002166
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <shost>:<process> server not responding: RPC: Rpcbind failure - RPC: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<shost>[^:]*):(?<process>[^\s]*)[\s]+server[\s]+not[\s]+responding:[\s]+RPC:[\s]+Rpcbind[\s]+failure[\s]+\-[\s]+RPC:[\s]+(?<result>.*)$" }
				id => "message-002166"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "server not responding -  Rpcbind failure"
					"[event][id]" => "002166"
					"[rsa][message][id1]" => "002166"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002167
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <application>: no well known address for autofs on transport udp
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+no[\s]+well[\s]+known[\s]+address[\s]+for[\s]+autofs[\s]+on[\s]+transport[\s]+udp$" }
				id => "message-002167"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "no well known address for autofs on transport udp"
					"[event][id]" => "002167"
					"[rsa][message][id1]" => "002167"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002168
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-002168"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002168"
					"[rsa][message][id1]" => "002168"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId267
	# line in RSA: <agent>: <process>: neighbor <smacaddr> <event_description>; <info>
	else if [logstash][msgparser][id] == "msgParserId267" {
		dissect {
			mapping => { "message" => "%{agent}: %{process}: neighbor %{smacaddr} %{event_description}; %{info}" }
			id => "msgParserId267"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "autosys" {
		# MESSAGE 001554
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001554"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001554"
					"[rsa][message][id1]" => "001554"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001554:01
		# line in RSA: autosys (<fld1>) tally <fld2>, deny <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "autosys (%{fld1}) tally %{fld2}, deny %{fld3}" }
				id => "message-001554:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001554:01"
					"[rsa][message][id1]" => "001554:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "avahi-daemon" {
		# MESSAGE 00493:09
		# line in RSA: <agent>[<process_id>]: Registering new address record for <hostip> on <interface>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Registering new address record for %{hostip} on %{interface}." }
				id => "message-00493:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493:09"
					"[rsa][message][id1]" => "00493:09"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:07
		# line in RSA: <agent>[<process_id>]: Joining mDNS multicast group on interface <interface>.IPv4 with address <hostip>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Joining mDNS multicast group on interface %{interface}.IPv4 with address %{hostip}." }
				id => "message-00493:07"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493:07"
					"[rsa][message][id1]" => "00493:07"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:02
		# line in RSA: <agent>[<process_id>]: Server startup complete. Host name is <hostname>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server startup complete. Host name is %{hostname}. %{info}" }
				id => "message-00493:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"event_description" => "Server startup complete"
					"[event][id]" => "00493:02"
					"[rsa][message][id1]" => "00493:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:06
		# line in RSA: <agent>[<process_id>]: Loading service file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Loading service file %{filename}" }
				id => "message-00493:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493:06"
					"[rsa][message][id1]" => "00493:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:08
		# line in RSA: <agent>[<process_id>]: New relevant interface <interface>.IPv4 for mDNS.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: New relevant interface %{interface}.IPv4 for mDNS." }
				id => "message-00493:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493:08"
					"[rsa][message][id1]" => "00493:08"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:04
		# line in RSA: <agent>[<process_id>]: Found user '<username>' (<uid>) and group '<group>' (<groupid>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Found user '%{username}' (%{uid}) and group '%{group}' (%{groupid})." }
				id => "message-00493:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493:04"
					"[rsa][message][id1]" => "00493:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:03
		# line in RSA: <agent>[<process_id>]: Service <service> successfully established.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Service %{service} successfully established." }
				id => "message-00493:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"ec_theme" => "ALM"
				"event_description" => "Server successfully established"
					"[event][id]" => "00493:03"
					"[rsa][message][id1]" => "00493:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493
		# line in RSA: <agent>[<process_id>]: <service> <version> starting up.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service} %{version} starting up." }
				id => "message-00493"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493"
					"[rsa][message][id1]" => "00493"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00493:01
		# line in RSA: <agent>[<process_id>]: { <severity>: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<severity>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-00493:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00493:01"
					"[rsa][message][id1]" => "00493:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "avrd" {
		# MESSAGE 00207
		# line in RSA: <agent>[<process_id>]: Unable to determine <fld1> name for <device>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to determine %{fld1} name for %{device}, %{info}" }
				id => "message-00207"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00207"
					"[rsa][message][id1]" => "00207"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002401
		# line in RSA: <agent>[<process_id>]: Pass-through path for <dhost> (<info>) is <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Pass-through path for %{dhost} (%{info}) is %{device}" }
				id => "message-002401"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Pass-through path designation"
					"[event][id]" => "002401"
					"[rsa][message][id1]" => "002401"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002402
		# line in RSA: <agent>[<process_id>]: ndmp_tape_open failed on device <device>, result is <resultcode> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ndmp_tape_open failed on device %{device}, result is %{resultcode} (%{result})" }
				id => "message-002402"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ndmp_tape_open failed on device"
					"[event][id]" => "002402"
					"[rsa][message][id1]" => "002402"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002403
		# line in RSA: <agent>[<process_id>]: Reservation Conflict status from <dhost> (device <device>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Reservation Conflict status from %{dhost} (device %{device})" }
				id => "message-002403"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Reservation Conflict status from host"
					"[event][id]" => "002403"
					"[rsa][message][id1]" => "002403"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002404
		# line in RSA: <agent>[<process_id>]: MTIOCGET failed on <dhost> (<info>) <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: MTIOCGET failed on %{dhost} (%{info}) %{result}" }
				id => "message-002404"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "MTIOCGET failed on device"
					"[event][id]" => "002404"
					"[rsa][message][id1]" => "002404"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002405
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002405"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002405"
					"[rsa][message][id1]" => "002405"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId283
	# line in RSA: <agent>[<process_id>]: server:<shost>
	else if [logstash][msgparser][id] == "msgParserId283" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: server:%{shost}" }
			id => "msgParserId283"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA: <agent>:<version>: #<event_type> <info>
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "%{agent}:%{version}: #%{event_type} %{info}" }
			id => "msgParserId284"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Broker Service activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA: <agent>: #<event_type> <info>
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "%{agent}: #%{event_type} %{info}" }
			id => "msgParserId285"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Broker Service Monitor activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId286
	# line in RSA: <agent>: <username>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "%{agent}: %{username}: %{event_description}" }
			id => "msgParserId286"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Server is unavailable"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId287
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId287" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId287"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "log in"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AXAEACD" {
		# MESSAGE 00461
		# line in RSA: <agent>: Audit file <filename> sent to Envision
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Audit file %{filename} sent to Envision" }
				id => "message-00461"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Audit file sent"
					"[event][id]" => "00461"
					"[rsa][message][id1]" => "00461"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00461:01
		# line in RSA: <agent>: Error with SCP sending audit file <filename> sent to Envision
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Error with SCP sending audit file %{filename} sent to Envision" }
				id => "message-00461:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error sending Audit file "
					"[event][id]" => "00461:01"
					"[rsa][message][id1]" => "00461:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00461:02
		# line in RSA: <agent>: Forcing switch of <filename> Audit file
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Forcing switch of %{filename} Audit file" }
				id => "message-00461:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "forced Audit file switch"
					"[event][id]" => "00461:02"
					"[rsa][message][id1]" => "00461:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId291
	# line in RSA: <agent>: { <action>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId291" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<action>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId291"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId292
	# line in RSA: { <agent>[<process_id>]: | <agent>: } [<event_type>]:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId292" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[(?<event_type>[^\]]*)\]:[\s]+(?<event_description>.*)$" }
			id => "msgParserId292"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA: <agent>: Shutting down Bacula service: <service> ...
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "%{agent}: Shutting down Bacula service: %{service} ..." }
			id => "msgParserId293"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Shutting down Bacula service"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_time_string> { INFO | WARN } <event_description>
	else if [logstash][msgparser][id] == "msgParserId294" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_time_string>[^\s]*)[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId294"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA: { <agent>[<process_id>]: | <agent>: } batchman, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId295" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+batchman,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId295"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <id> <event_description>
	else if [logstash][msgparser][id] == "msgParserId296" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<id>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId296"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA: <agent>: <space> <event_description>*** <process>: <result>: <info> ***
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "%{agent}: %{space} %{event_description}*** %{process}: %{result}: %{info} ***" }
			id => "msgParserId297"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId266
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
	else if [logstash][msgparser][id] == "msgParserId266" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId266"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA: <agent>[<process_id>]: <event_description>. Version expected: <change_old>, Version found: <change_new>
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}. Version expected: %{change_old}, Version found: %{change_new}" }
			id => "msgParserId298"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA: <agent>: <event_description> = <disposition>
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} = %{disposition}" }
			id => "msgParserId299"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bmserver" {
		# MESSAGE 002073
		# line in RSA: <agent>: [Brightmail] (<severity>:<info>): [<resultcode>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [Brightmail] (%{severity}:%{info}): [%{resultcode}] %{event_description}" }
				id => "message-002073"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002073"
					"[rsa][message][id1]" => "002073"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001437
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001437"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001437"
					"[rsa][message][id1]" => "001437"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>: <result>.
	else if [logstash][msgparser][id] == "msgParserId301" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^:]*):[\s]+(?<result>[^\.]*)\.$" }
			id => "msgParserId301"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "boe_fccached" {
		# MESSAGE 002004
		# line in RSA: <agent>[<process_id>]: Transport error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Transport error: %{result}" }
				id => "message-002004"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Transport error"
					"[event][id]" => "002004"
					"[rsa][message][id1]" => "002004"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002050
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-002050"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002050"
					"[rsa][message][id1]" => "002050"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId302
	# line in RSA: <agent>[<process_id>]: Transport error: <result>
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Transport error: %{result}" }
			id => "msgParserId302"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Transport error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "boks_sshd" {
		# MESSAGE 00841
		# line in RSA: <agent>[<process_id>]: Server listening on <hostip> port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server listening on %{hostip} port %{network_port}" }
				id => "message-00841"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Server listening on port"
					"[event][id]" => "00841"
					"[rsa][message][id1]" => "00841"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:01
		# line in RSA: <agent>[<process_id>]: Accepted { keyboard-interactive/boksauth | publickey | password } for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+([\s]*keyboard\-interactive/boksauth[\s]+|[\s]*publickey[\s]+|[\s]*password[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00841:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "password or public key accepted"
					"[event][id]" => "00841:01"
					"[rsa][message][id1]" => "00841:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:02
		# line in RSA: <agent>[<process_id>]: Failed unknown for illegal user <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed unknown for illegal user %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00841:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
				"result" => "illegal user"
					"[event][id]" => "00841:02"
					"[rsa][message][id1]" => "00841:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:04
		# line in RSA: <agent>[<process_id>]: <severity>: Timeout before authentication for <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Timeout before authentication for %{saddr}" }
				id => "message-00841:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "Timeout before authentication"
					"[event][id]" => "00841:04"
					"[rsa][message][id1]" => "00841:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:05
		# line in RSA: <agent>[<process_id>]: RESTART FAILED: <info>, error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: RESTART FAILED: %{info}, error: %{result}" }
				id => "message-00841:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Restart Failed"
					"[event][id]" => "00841:05"
					"[rsa][message][id1]" => "00841:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:06
		# line in RSA: <agent>[<process_id>]: Illegal user <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Illegal user %{username} from %{saddr}" }
				id => "message-00841:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
				"result" => "illegal user"
					"[event][id]" => "00841:06"
					"[rsa][message][id1]" => "00841:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00821:07
		# line in RSA: <agent>[<process_id>]: Did not receive { identification | ident } string { from ::ffff: | from } <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>.*)$" }
				id => "message-00821:07"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "00821:07"
					"[rsa][message][id1]" => "00821:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:09
		# line in RSA: <agent>[<process_id>]: subsystem request for <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: subsystem request for %{protocol}" }
				id => "message-00841:09"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "subsystem request"
					"[event][id]" => "00841:09"
					"[rsa][message][id1]" => "00841:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:03
		# line in RSA: <agent>[<process_id>]: <severity>: <action>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{action}: %{result}" }
				id => "message-00841:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00841:03"
					"[rsa][message][id1]" => "00841:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00841:08
		# line in RSA: <agent>[<process_id>]: <event_description> { ; | : } <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<action>.*)$" }
				id => "message-00841:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00841:08"
					"[rsa][message][id1]" => "00841:08"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId313
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId313" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId313"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed to access segment for data transfer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA: Boot video device is <fld1>
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "Boot video device is %{fld1}" }
			id => "msgParserId314"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA: Booting processor <fld1>
	else if [logstash][msgparser][id] == "msgParserId315" {
		dissect {
			mapping => { "message" => "Booting processor %{fld1}" }
			id => "msgParserId315"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bootsplash" {
		# MESSAGE 00783
		# line in RSA: <agent>: status on console <terminal> changed to <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: status on console %{terminal} changed to %{disposition}" }
				id => "message-00783"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "console status changed"
					"[event][id]" => "00783"
					"[rsa][message][id1]" => "00783"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00783:01
		# line in RSA: <agent>: Connect Failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Connect Failed" }
				id => "message-00783:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connect Failed"
					"[event][id]" => "00783:01"
					"[rsa][message][id1]" => "00783:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId318
	# line in RSA: <agent>: Inserting <obj_name>: <disposition>
	else if [logstash][msgparser][id] == "msgParserId318" {
		dissect {
			mapping => { "message" => "%{agent}: Inserting %{obj_name}: %{disposition}" }
			id => "msgParserId318"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Inserting object"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bott_process" {
		# MESSAGE bott_process
		# line in RSA: <agent>[<process_id>]:<fld1>:<event_description>:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{fld1}:%{event_description}:%{fld2}" }
				id => "message-bott_process"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "bott_process"
					"[rsa][message][id1]" => "bott_process"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE bott_process:01
		# line in RSA: <agent>[<process_id>]:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{event_description}" }
				id => "message-bott_process:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "bott_process:01"
					"[rsa][message][id1]" => "bott_process:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId321
	# line in RSA: <agent>[<process_id>]: TapeAlert Code: <fld1>, Type: <severity>, <info>
	else if [logstash][msgparser][id] == "msgParserId321" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: TapeAlert Code: %{fld1}, Type: %{severity}, %{info}" }
			id => "msgParserId321"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId322
	# line in RSA: Brought up <dclass_counter1> <dclass_counter1_string>
	else if [logstash][msgparser][id] == "msgParserId322" {
		dissect {
			mapping => { "message" => "Brought up %{dclass_counter1} %{dclass_counter1_string}" }
			id => "msgParserId322"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId323
	# line in RSA: <agent>: <event_description> (<dhost>) <space> (<resultcode>)
	else if [logstash][msgparser][id] == "msgParserId323" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} (%{dhost}) %{space} (%{resultcode})" }
			id => "msgParserId323"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bsmon" {
		# MESSAGE 00485
		# line in RSA: <agent>: RRD creation failed for graph <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: RRD creation failed for graph %{fld1}" }
				id => "message-00485"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "RRD creation failure"
					"[event][id]" => "00485"
					"[rsa][message][id1]" => "00485"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00485:01
		# line in RSA: <agent>: failed to send alarm: command <application> terminated with return code
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: failed to send alarm: command %{application} terminated with return code" }
				id => "message-00485:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed to send alarm"
					"[event][id]" => "00485:01"
					"[rsa][message][id1]" => "00485:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId326
	# line in RSA: btmp: <username> ssh:<terminal> <event_time_string> (<fld1>)
	else if [logstash][msgparser][id] == "msgParserId326" {
		dissect {
			mapping => { "message" => "btmp: %{username} ssh:%{terminal} %{event_time_string} (%{fld1})" }
			id => "msgParserId326"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA: <agent>[<process_id>]: User <username> (<user_fullname>) { attempting log | logged } in as <c_username>
	else if [logstash][msgparser][id] == "msgParserId327" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+User[\s]+(?<username>[^\s]*)[\s]+\((?<user_fullname>[^\)]*)\)[\s]+([\s]*attempting[\s]+log[\s]+|[\s]*logged[\s]+)[\s]+in[\s]+as[\s]+(?<c_username>.*)$" }
			id => "msgParserId327"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Unknown"
				"event_description" => "user login or attempting login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "businessobjects" {
		# MESSAGE 001967
		# line in RSA: <agent>[<process_id>]: Transport error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Transport error: %{result}" }
				id => "message-001967"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Transport error"
					"[event][id]" => "001967"
					"[rsa][message][id1]" => "001967"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001968
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001968"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001968"
					"[rsa][message][id1]" => "001968"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId328
	# line in RSA: <agent>: <event_description> LRF=<info>
	else if [logstash][msgparser][id] == "msgParserId328" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} LRF=%{info}" }
			id => "msgParserId328"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId329
	# line in RSA: <agent>[<process_id>]: CMDPHP: <fld1>: <event_type>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId329" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: CMDPHP: %{fld1}: %{event_type}: %{event_description}" }
			id => "msgParserId329"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId330
	# line in RSA: { <agent>[<process_id>]: | <agent>: } { <application>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId330" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId330"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId331
	# line in RSA: Calibrating delay using timer specific routine <fld1>
	else if [logstash][msgparser][id] == "msgParserId331" {
		dissect {
			mapping => { "message" => "Calibrating delay using timer specific routine %{fld1}" }
			id => "msgParserId331"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Calibrating delay using timer specific routine"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId332
	# line in RSA: <agent>: <event_description>:<disposition>
	else if [logstash][msgparser][id] == "msgParserId332" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}:%{disposition}" }
			id => "msgParserId332"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cbsalarmmond" {
		# MESSAGE 01030
		# line in RSA: <agent>[<process_id>]: [W] <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [W] %{event_description}: %{result}" }
				id => "message-01030"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01030"
					"[rsa][message][id1]" => "01030"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01030:01
		# line in RSA: <agent>: [W] <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [W] %{event_description}: %{result}" }
				id => "message-01030:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01030:01"
					"[rsa][message][id1]" => "01030:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 01030:02
		# line in RSA: <agent>: [<fld1>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld1}] %{event_description}" }
				id => "message-01030:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01030:02"
					"[rsa][message][id1]" => "01030:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "cbssysctrld" {
		# MESSAGE 01047:01
		# line in RSA: <agent>[<process_id>]: [I] Slot assignment: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [I] Slot assignment: %{info}" }
				id => "message-01047:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01047:01"
					"[rsa][message][id1]" => "01047:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01047
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01047"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01047"
					"[rsa][message][id1]" => "01047"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId337
	# line in RSA: <agent>: rcvd ntp response from [<saddr>]
	else if [logstash][msgparser][id] == "msgParserId337" {
		dissect {
			mapping => { "message" => "%{agent}: rcvd ntp response from [%{saddr}]" }
			id => "msgParserId337"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId338
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <<<action>> Device <event_computer>: <result>
	else if [logstash][msgparser][id] == "msgParserId338" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+<(?<action>[^>]*)>[\s]+Device[\s]+(?<event_computer>[^:]*):[\s]+(?<result>.*)$" }
			id => "msgParserId338"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "CCIRMTD" {
		# MESSAGE 00281
		# line in RSA: <agent>[<process_id>]: <fld1> Attempt to connect to host <dhost> failed, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Attempt to connect to host %{dhost} failed, %{result}" }
				id => "message-00281"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00281"
					"[rsa][message][id1]" => "00281"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002377
		# line in RSA: <agent>[<process_id>]: .<application> errno=<<<resultcode>>, Unable to connect to remote host <<<dhost>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: .%{application} errno=<%{resultcode}>, Unable to connect to remote host <%{dhost}>" }
				id => "message-002377"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to connect to remote host"
					"[event][id]" => "002377"
					"[rsa][message][id1]" => "002377"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CCIRMTD:03
		# line in RSA: <agent>[<process_id>]: .<application> {Startup from <hostname>|Connected to <<<hostname>> on} port <sport> at <event_time_string>#<fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\.(?<application>[^\s]*)[\s]+(Startup[\s]+from[\s]+(?<hostname>[^\s]*)|Connected[\s]+to[\s]+<(?<hostname>[^>]*)>[\s]+on)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+at[\s]+(?<event_time_string>[^#]*)#(?<fld1>.*)$" }
				id => "message-CCIRMTD:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "CCIRMTD:03"
					"[rsa][message][id1]" => "CCIRMTD:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE CCIRMTD:04
		# line in RSA: <agent>[<process_id>]: .<application> <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: .%{application} %{fld1}" }
				id => "message-CCIRMTD:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "CCIRMTD:04"
					"[rsa][message][id1]" => "CCIRMTD:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE CCIRMTD:05
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-CCIRMTD:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "CCIRMTD:05"
					"[rsa][message][id1]" => "CCIRMTD:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId344
	# line in RSA: <agent>: Host: <hostname> Channel: <fld1> Id: <id> Lun: <lun>
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "%{agent}: Host: %{hostname} Channel: %{fld1} Id: %{id} Lun: %{lun}" }
			id => "msgParserId344"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId345
	# line in RSA: <agent>[<process_id>]: ERROR: DirectAudit was unable move data between cdash and its subprocess as the <result>: <info> (<resultcode>)
	else if [logstash][msgparser][id] == "msgParserId345" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: ERROR: DirectAudit was unable move data between cdash and its subprocess as the %{result}: %{info} (%{resultcode})" }
			id => "msgParserId345"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "DirectAudit was unable move data between cdash and its subprocess"
				"severity" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId346
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description> "<filename>"
	else if [logstash][msgparser][id] == "msgParserId346" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^\s]*)[\s]+\"(?<filename>[^\"]*)\"$" }
			id => "msgParserId346"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cfengine" {
		# MESSAGE 00827:01
		# line in RSA: <agent>[<process_id>]: Cannot access file/directory <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Cannot access file/directory %{filename}" }
				id => "message-00827:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00827:01"
					"[rsa][message][id1]" => "00827:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00827
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00827"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00827"
					"[rsa][message][id1]" => "00827"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId348
	# line in RSA: <agent>[<process_id>]: <space> Received signal <resultcode> while doing <action>
	else if [logstash][msgparser][id] == "msgParserId348" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{space} Received signal %{resultcode} while doing %{action}" }
			id => "msgParserId348"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId349
	# line in RSA: { <agent>[<process_id>]: | <agent>: } cgen, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId349" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+cgen,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId349"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cgi_pam" {
		# MESSAGE 00886:04
		# line in RSA: <agent>: <process>[<process_id>]: authentication succeeds for '<username>' (<user_fullname>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: authentication succeeds for '%{username}' (%{user_fullname})" }
				id => "message-00886:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "authentication successful"
					"[event][id]" => "00886:04"
					"[rsa][message][id1]" => "00886:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00886:03
		# line in RSA: <agent>: authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00886:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00886:03"
					"[rsa][message][id1]" => "00886:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00886
		# line in RSA: <agent>[<process_id>]: <event_source>: authenticate error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}: authenticate error: %{result}" }
				id => "message-00886"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "authenticate error"
					"[event][id]" => "00886"
					"[rsa][message][id1]" => "00886"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00886:01
		# line in RSA: <agent>[<process_id>]: <event_source>: authentication fails for { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_source>[^:]*):[\s]+authentication[\s]+fails[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00886:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
					"[event][id]" => "00886:01"
					"[rsa][message][id1]" => "00886:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00886:02
		# line in RSA: <agent>[<process_id>]: <event_source>: pam_sm_authenticate returning <fld1> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}: pam_sm_authenticate returning %{fld1} (%{result})" }
				id => "message-00886:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
					"[event][id]" => "00886:02"
					"[rsa][message][id1]" => "00886:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "chage" {
		# MESSAGE 00041
		# line in RSA: <agent>[<process_id>]: changed password expiry for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: changed password expiry for %{username}" }
				id => "message-00041"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password expiry change"
					"[event][id]" => "00041"
					"[rsa][message][id1]" => "00041"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00041:02
		# line in RSA: <agent>[<process_id>]: password maximum age changed - account=<c_username>, uid=<uid>, max=<change_new>, old max=<change_old>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password maximum age changed - account=%{c_username}, uid=%{uid}, max=%{change_new}, old max=%{change_old}, by=%{username}" }
				id => "message-00041:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password maximum age changed"
					"[event][id]" => "00041:02"
					"[rsa][message][id1]" => "00041:02"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00041:01
		# line in RSA: <agent>[<process_id>]: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result}" }
				id => "message-00041:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "chage failure"
					"[event][id]" => "00041:01"
					"[rsa][message][id1]" => "00041:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Changing" {
		# MESSAGE 001504
		# line in RSA: <agent>[<process_id>]: [<fld1>] <username>: [<fld2>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{username}: [%{fld2}] %{event_description}" }
				id => "message-001504"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001504"
					"[rsa][message][id1]" => "001504"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001504:01
		# line in RSA: <event_description>:[<change_old>] to:[<change_new>] <dhost>, real server <fld1>, protocol <protocol>, proxied <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}:[%{change_old}] to:[%{change_new}] %{dhost}, real server %{fld1}, protocol %{protocol}, proxied %{fld2}" }
				id => "message-001504:01"
				add_field => {
				"change_attribute" => "Server"
					"[event][id]" => "001504:01"
					"[rsa][message][id1]" => "001504:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001504:02
		# line in RSA: <event_description>:[<change_old>] to:[<change_new>]<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}:[%{change_old}] to:[%{change_new}]%{fld1}" }
				id => "message-001504:02"
				add_field => {
				"change_attribute" => "Server"
					"[event][id]" => "001504:02"
					"[rsa][message][id1]" => "001504:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "check_radius" {
		# MESSAGE 00070:01
		# line in RSA: <agent>:<fld1>:<event_description>:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{fld1}:%{event_description}:%{info}" }
				id => "message-00070:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00070:01"
					"[rsa][message][id1]" => "00070:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00070"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00070"
					"[rsa][message][id1]" => "00070"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "check_user" {
		# MESSAGE 01103
		# line in RSA: <agent>(pam_unix)[<process_id>]: <space> authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(pam_unix)[%{process_id}]: %{space} authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-01103"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01103"
					"[rsa][message][id1]" => "01103"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01103:01
		# line in RSA: <agent>(pam_unix)[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(pam_unix)[%{process_id}]: check pass; user unknown" }
				id => "message-01103:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password"
					"[event][id]" => "01103:01"
					"[rsa][message][id1]" => "01103:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId363
	# line in RSA: { <agent>[<process_id>]: | <agent> } <event_description>
	else if [logstash][msgparser][id] == "msgParserId363" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\s]*)[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId363"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId364
	# line in RSA: Checking if this processor honours the WP bit even in supervisor mode <fld1> <disposition>
	else if [logstash][msgparser][id] == "msgParserId364" {
		dissect {
			mapping => { "message" => "Checking if this processor honours the WP bit even in supervisor mode %{fld1} %{disposition}" }
			id => "msgParserId364"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId365
	# line in RSA: checking TSC synchronization across <dclass_counter1> <dclass_counter1_string>: <disposition>
	else if [logstash][msgparser][id] == "msgParserId365" {
		dissect {
			mapping => { "message" => "checking TSC synchronization across %{dclass_counter1} %{dclass_counter1_string}: %{disposition}" }
			id => "msgParserId365"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId366
	# line in RSA: <agent>[<process_id>]: <application>: <event_description> '<filename>' - <result>
	else if [logstash][msgparser][id] == "msgParserId366" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{event_description} '%{filename}' - %{result}" }
			id => "msgParserId366"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "checkproc" {
		# MESSAGE 001257
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <service>: { Can not read | cannot stat } <filename>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<service>[^:]*):[\s]+([\s]*Can[\s]+not[\s]+read[\s]+|[\s]*cannot[\s]+stat[\s]+)[\s]+(?<filename>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-001257"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot read or stat file"
					"[event][id]" => "001257"
					"[rsa][message][id1]" => "001257"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001439
		# line in RSA: <agent>: checkproc: Empty pid file <filename> for <process>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: checkproc: Empty pid file %{filename} for %{process}" }
				id => "message-001439"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001439"
					"[rsa][message][id1]" => "001439"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId369
	# line in RSA: <agent>: Pam_Tally(<service>): Option <result> Allowed In Auth Phase Only
	else if [logstash][msgparser][id] == "msgParserId369" {
		dissect {
			mapping => { "message" => "%{agent}: Pam_Tally(%{service}): Option %{result} Allowed In Auth Phase Only" }
			id => "msgParserId369"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Option Allowed In Auth Phase Only"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "chsh" {
		# MESSAGE 00962
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00962"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00962"
					"[rsa][message][id1]" => "00962"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00962:01
		# line in RSA: <agent>[<process_id>]: <event_source>: authentication succeeds for { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_source>[^:]*):[\s]+authentication[\s]+succeeds[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00962:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful authentication"
					"[event][id]" => "00962:01"
					"[rsa][message][id1]" => "00962:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00962:03
		# line in RSA: <agent>[<process_id>]: password for user <username> will expire in <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password for user %{username} will expire in %{disposition}" }
				id => "message-00962:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"event_description" => "password for user will expire"
					"[event][id]" => "00962:03"
					"[rsa][message][id1]" => "00962:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00962:04
		# line in RSA: <agent>: pam_tally(<service>): unknown option: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): unknown option: %{result}" }
				id => "message-00962:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown option"
					"[event][id]" => "00962:04"
					"[rsa][message][id1]" => "00962:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00962:02
		# line in RSA: <agent>[<process_id>]: <event_source>: <event_description> (Success)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}: %{event_description} (Success)" }
				id => "message-00962:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
					"[event][id]" => "00962:02"
					"[rsa][message][id1]" => "00962:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId375
	# line in RSA: <agent>: [<process_id>]: <severity>: <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId375" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}]: %{severity}: %{process}: %{event_description}" }
			id => "msgParserId375"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cimserver" {
		# MESSAGE 00707:01
		# line in RSA: <agent>[<process_id>]: <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{directory}" }
				id => "message-00707:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00707:01"
					"[rsa][message][id1]" => "00707:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001985
		# line in RSA: <agent>:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:  %{event_description}" }
				id => "message-001985"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001985"
					"[rsa][message][id1]" => "001985"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cimservera" {
		# MESSAGE 01104
		# line in RSA: <agent>[<process_id>]: user "<username>" failed to authenticate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: user \"%{username}\" failed to authenticate" }
				id => "message-01104"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01104"
					"[rsa][message][id1]" => "01104"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01104:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01104:01"
					"[rsa][message][id1]" => "01104:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cimslp" {
		# MESSAGE 001461
		# line in RSA: <agent>: Found <dclass_counter1> profiles in namespace <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Found %{dclass_counter1} profiles in namespace %{filename}" }
				id => "message-001461"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Found profiles in namespace"
					"[event][id]" => "001461"
					"[rsa][message][id1]" => "001461"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001708
		# line in RSA: <agent>: --- Using <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: --- Using %{filename}" }
				id => "message-001708"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "using config"
					"[event][id]" => "001708"
					"[rsa][message][id1]" => "001708"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CiscoSecurityAgent" {
		# MESSAGE 01201:01
		# line in RSA: <agent>[<process_id>]: Event: <fld2>:<event_description> Reason: <result> ICMP: <saddr>-<fld1> type <event_type>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Event: %{fld2}:%{event_description} Reason: %{result} ICMP: %{saddr}-%{fld1} type %{event_type}. %{info}" }
				id => "message-01201:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01201:01"
					"[rsa][message][id1]" => "01201:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01201
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01201"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01201"
					"[rsa][message][id1]" => "01201"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cl_status" {
		# MESSAGE 00828
		# line in RSA: <agent>[<process_id>]: <severity>: <action>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{action}: %{event_description}" }
				id => "message-00828"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00828"
					"[rsa][message][id1]" => "00828"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00828:01
		# line in RSA: <agent>[<process_id>]: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}" }
				id => "message-00828:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00828:01"
					"[rsa][message][id1]" => "00828:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "clamsmtpd" {
		# MESSAGE 001772
		# line in RSA: <agent>: <process_id>: from=<shost>, to=<dhost>, status=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process_id}: from=%{shost}, to=%{dhost}, status=%{result}" }
				id => "message-001772"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection status"
					"[event][id]" => "001772"
					"[rsa][message][id1]" => "001772"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001771
		# line in RSA: <agent>: <process_id>: accepted connection from: <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process_id}: accepted connection from: %{saddr}" }
				id => "message-001771"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "accepted connection from remote"
					"[event][id]" => "001771"
					"[rsa][message][id1]" => "001771"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId385
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1> [<event_description>] <info>
	else if [logstash][msgparser][id] == "msgParserId385" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+\[(?<event_description>[^\]]*)\][\s]+(?<info>.*)$" }
			id => "msgParserId385"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cleanold" {
		# MESSAGE 00731:01
		# line in RSA: <agent>[<process_id>]: <action>: <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: %{obj_name}" }
				id => "message-00731:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00731:01"
					"[rsa][message][id1]" => "00731:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00731
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00731"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00731"
					"[rsa][message][id1]" => "00731"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "clish" {
		# MESSAGE 002285
		# line in RSA: <agent>[<process_id>]: User <username> logged in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} logged in %{info}" }
				id => "message-002285"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Successful login"
					"[event][id]" => "002285"
					"[rsa][message][id1]" => "002285"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002286
		# line in RSA: <agent>: User <username> logged out <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: User %{username} logged out %{info}" }
				id => "message-002286"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "Successful logout"
					"[event][id]" => "002286"
					"[rsa][message][id1]" => "002286"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002287
		# line in RSA: <agent>[<process_id>]: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002287"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002287"
					"[rsa][message][id1]" => "002287"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId390
	# line in RSA: <agent>[<process_id>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId390" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
			id => "msgParserId390"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId391
	# line in RSA: <agent>[<process_id>]: <fld1> Unable to read <filename>, error: <resultcode>, <action>
	else if [logstash][msgparser][id] == "msgParserId391" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Unable to read %{filename}, error: %{resultcode}, %{action}" }
			id => "msgParserId391"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId392
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <<debug> <event_description>
	else if [logstash][msgparser][id] == "msgParserId392" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+<debug>[\s]+(?<event_description>.*)$" }
			id => "msgParserId392"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "clupowerd" {
		# MESSAGE 001694
		# line in RSA: <agent>:  <event_description>: 'User Name : <username>' <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:  %{event_description}: 'User Name : %{username}' %{info}" }
				id => "message-001694"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001694"
					"[rsa][message][id1]" => "001694"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001695
		# line in RSA: <agent>:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:  %{event_description}" }
				id => "message-001695"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001695"
					"[rsa][message][id1]" => "001695"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cluquorumd" {
		# MESSAGE 001375
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <<debug> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+<debug>[\s]+(?<event_description>.*)$" }
				id => "message-001375"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001375"
					"[rsa][message][id1]" => "001375"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001494
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <<warning> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+<warning>[\s]+(?<event_description>.*)$" }
				id => "message-001494"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001494"
					"[rsa][message][id1]" => "001494"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "clurgmgrd" {
		# MESSAGE 002195
		# line in RSA: { <agent>: [<process_id>]: | <agent>[<process_id>]: } <<<severity>> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^:]*):[\s]+\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+)[\s]+<(?<severity>[^>]*)>[\s]+(?<event_description>.*)$" }
				id => "message-002195"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002195"
					"[rsa][message][id1]" => "002195"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00901
		# line in RSA: <agent>[<process_id>]: <fld1> Executing <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Executing %{action}" }
				id => "message-00901"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00901"
					"[rsa][message][id1]" => "00901"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId397
	# line in RSA: <agent>[<process_id>]: <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId397" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{result}" }
			id => "msgParserId397"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId398
	# line in RSA: ClusterIP Version <version> loaded successfully
	else if [logstash][msgparser][id] == "msgParserId398" {
		dissect {
			mapping => { "message" => "ClusterIP Version %{version} loaded successfully" }
			id => "msgParserId398"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "cm" {
		# MESSAGE 001448
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-001448"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "session opened"
					"[event][id]" => "001448"
					"[rsa][message][id1]" => "001448"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001449
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-001449"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed"
					"[event][id]" => "001449"
					"[rsa][message][id1]" => "001449"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId401
	# line in RSA: <agent>[<process_id>]: Request from <username> on node <shost> to start package
	else if [logstash][msgparser][id] == "msgParserId401" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Request from %{username} on node %{shost} to start package" }
			id => "msgParserId401"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA: <agent>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId402" {
		dissect {
			mapping => { "message" => "%{agent}]: %{event_description}" }
			id => "msgParserId402"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId403
	# line in RSA: { <agent>[<process_id>] | <agent> }: <event_description>
	else if [logstash][msgparser][id] == "msgParserId403" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+(?<event_description>.*)$" }
			id => "msgParserId403"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cmastor" {
		# MESSAGE 00220:01
		# line in RSA: <agent>: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: %{event_description}" }
				id => "message-00220:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00220:01"
					"[rsa][message][id1]" => "00220:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00220
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00220"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00220"
					"[rsa][message][id1]" => "00220"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId405
	# line in RSA: <agent>[<process_id>]: [cmcfc.<severity>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId405" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [cmcfc.%{severity}]: %{event_description}" }
			id => "msgParserId405"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cmclconfd" {
		# MESSAGE 03293:01
		# line in RSA: <action>: <event_description> for  <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: %{event_description} for  %{username}" }
				id => "message-03293:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "03293:01"
					"[rsa][message][id1]" => "03293:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03293
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03293"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03293"
					"[rsa][message][id1]" => "03293"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId407
	# line in RSA: <agent>: <obj_name> not set to <fld1> in <filename>, <action> <resultcode>
	else if [logstash][msgparser][id] == "msgParserId407" {
		dissect {
			mapping => { "message" => "%{agent}: %{obj_name} not set to %{fld1} in %{filename}, %{action} %{resultcode}" }
			id => "msgParserId407"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "CmdServer" {
		# MESSAGE 001572:01
		# line in RSA: <agent>[<process_id>]: VCS ERROR <version> <application> is exiting. <event_description> on port <network_port>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS ERROR %{version} %{application} is exiting. %{event_description} on port %{network_port}. %{info}" }
				id => "message-001572:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001572:01"
					"[rsa][message][id1]" => "001572:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001641
		# line in RSA: <agent>[<process_id>]: WARNING <version> <event_description>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARNING %{version} %{event_description}. %{info}" }
				id => "message-001641"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "WARNING"
					"[event][id]" => "001641"
					"[rsa][message][id1]" => "001641"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001572
		# line in RSA: <agent>[<process_id>]: VCS INFO <version> <application>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS INFO %{version} %{application}: %{event_description}" }
				id => "message-001572"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001572"
					"[rsa][message][id1]" => "001572"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cmfileassistd" {
		# MESSAGE 001714
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Updated file <filename> (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Updated[\s]+file[\s]+(?<filename>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-001714"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Updated file"
					"[event][id]" => "001714"
					"[rsa][message][id1]" => "001714"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001169
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Changed to working directory <directory>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Changed[\s]+to[\s]+working[\s]+directory[\s]+(?<directory>.*)$" }
				id => "message-001169"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Changed to working directory"
					"[event][id]" => "001169"
					"[rsa][message][id1]" => "001169"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId413
	# line in RSA: <agent>: <action>
	else if [logstash][msgparser][id] == "msgParserId413" {
		dissect {
			mapping => { "message" => "%{agent}: %{action}" }
			id => "msgParserId413"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId414
	# line in RSA: <agent>[<process_id>]: sysedge: <event_type>, <fld1>,'<severity>: <event_description>' <info>
	else if [logstash][msgparser][id] == "msgParserId414" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: sysedge: %{event_type}, %{fld1},'%{severity}: %{event_description}' %{info}" }
			id => "msgParserId414"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId415
	# line in RSA: <agent>: [Brightmail] (<severity>:<info>): [<resultcode>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId415" {
		dissect {
			mapping => { "message" => "%{agent}: [Brightmail] (%{severity}:%{info}): [%{resultcode}] %{event_description}" }
			id => "msgParserId415"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId416
	# line in RSA: <agent>:<space> :_<application>(<filename>)
	else if [logstash][msgparser][id] == "msgParserId416" {
		dissect {
			mapping => { "message" => "%{agent}:%{space} :_%{application}(%{filename})" }
			id => "msgParserId416"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId417
	# line in RSA: <agent>: <application> functions cannot open one of the Tivoli Storage Manager logs or a related file: <filename>. errno = <resultcode>, <result>
	else if [logstash][msgparser][id] == "msgParserId417" {
		dissect {
			mapping => { "message" => "%{agent}: %{application} functions cannot open one of the Tivoli Storage Manager logs or a related file: %{filename}. errno = %{resultcode}, %{result}" }
			id => "msgParserId417"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Initialization functions cannot open one of the Tivoli Storage Manager logs"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId418
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <<<action>> <event_description>
	else if [logstash][msgparser][id] == "msgParserId418" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+<(?<action>[^>]*)>[\s]+(?<event_description>.*)$" }
			id => "msgParserId418"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "configure_esm" {
		# MESSAGE 00916:01
		# line in RSA: <agent>: Sourcing local config file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Sourcing local config file %{filename}" }
				id => "message-00916:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00916:01"
					"[rsa][message][id1]" => "00916:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00916
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00916"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00916"
					"[rsa][message][id1]" => "00916"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Connect" {
		# MESSAGE 00463:01
		# line in RSA: <agent>[<process_id>]: <event_source>: rc=<fld1>  fdbk=<fld2>  msgid=<id>  stext=<event_description>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}: rc=%{fld1}  fdbk=%{fld2}  msgid=%{id}  stext=%{event_description}, %{info}" }
				id => "message-00463:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00463:01"
					"[rsa][message][id1]" => "00463:01"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00463
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00463"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00463"
					"[rsa][message][id1]" => "00463"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId421
	# line in RSA: <agent> event=<event_type>&loglevel=<severity>&msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId421" {
		dissect {
			mapping => { "message" => "%{agent} event=%{event_type}&loglevel=%{severity}&msg=%{event_description}" }
			id => "msgParserId421"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId422
	# line in RSA: <agent>[<process_id>]: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId422" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}" }
			id => "msgParserId422"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "controlm" {
		# MESSAGE 02555
		# line in RSA: <agent>: <service> startup { succeeded | failed }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<service>[^\s]*)[\s]+startup[\s]+([\s]*succeeded[\s]+|[\s]*failed[\s]+)$" }
				id => "message-02555"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "start-ag/shut-ag startup"
					"[event][id]" => "02555"
					"[rsa][message][id1]" => "02555"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02555:01
		# line in RSA: <agent>: Shutting down ControlM services:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Shutting down ControlM services:" }
				id => "message-02555:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Shutting down ControlM services"
					"[event][id]" => "02555:01"
					"[rsa][message][id1]" => "02555:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId425
	# line in RSA: <agent>: <application>: <action>
	else if [logstash][msgparser][id] == "msgParserId425" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}: %{action}" }
			id => "msgParserId425"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId426
	# line in RSA: <agent>: User <username> requested  addition of static_route <fld1> destination="<daddr>"   mask="<dmask>"   gateway="<gateway>"   metric="<fld2>"
	else if [logstash][msgparser][id] == "msgParserId426" {
		dissect {
			mapping => { "message" => "%{agent}: User %{username} requested  addition of static_route %{fld1} destination=\"%{daddr}\"   mask=\"%{dmask}\"   gateway=\"%{gateway}\"   metric=\"%{fld2}\"" }
			id => "msgParserId426"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId427
	# line in RSA: <agent>: <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId427" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{result}" }
			id => "msgParserId427"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId428
	# line in RSA: <agent>: { <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId428" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId428"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId429
	# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId429" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId429"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cpwmd" {
		# MESSAGE 03510
		# line in RSA: <agent>[<process_id>]: pam_radius_auth: packet from RADIUS server <saddr> fails verification: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_radius_auth: packet from RADIUS server %{saddr} fails verification: %{result}" }
				id => "message-03510"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Process"
				"ec_outcome" => "Failure"
					"[event][id]" => "03510"
					"[rsa][message][id1]" => "03510"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03510:01
		# line in RSA: <agent>[<process_id>]: pam_radius_auth: RADIUS server <saddr> failed to respond
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_radius_auth: RADIUS server %{saddr} failed to respond" }
				id => "message-03510:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
					"[event][id]" => "03510:01"
					"[rsa][message][id1]" => "03510:01"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03510:02
		# line in RSA: <agent>[<process_id>]: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}." }
				id => "message-03510:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
					"[event][id]" => "03510:02"
					"[rsa][message][id1]" => "03510:02"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03510:03
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-03510:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
					"[event][id]" => "03510:03"
					"[rsa][message][id1]" => "03510:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cracklib" {
		# MESSAGE 001764
		# line in RSA: <agent>: updated dictionary (<info>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: updated dictionary (%{info})." }
				id => "message-001764"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "updated dictionary"
					"[event][id]" => "001764"
					"[rsa][message][id1]" => "001764"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001765
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001765"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001765"
					"[rsa][message][id1]" => "001765"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId435
	# line in RSA: <severity>] <event_source> <fld1>: IpAddr = <saddr> another machine (<result>) macAddr = <smacaddr>
	else if [logstash][msgparser][id] == "msgParserId435" {
		dissect {
			mapping => { "message" => "%{severity}] %{event_source} %{fld1}: IpAddr = %{saddr} another machine (%{result}) macAddr = %{smacaddr}" }
			id => "msgParserId435"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Critical error detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId436
	# line in RSA: <agent>[<process_id>]: [<severity>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId436" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]: %{event_description}" }
			id => "msgParserId436"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "CRON" {
		# MESSAGE 00071:02
		# line in RSA: <agent>[<process_id>]: { pam_unix(<service>): | (pam_unix) } expired password for user <username>(<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+|[\s]*\(pam_unix\)[\s]+)[\s]+expired[\s]+password[\s]+for[\s]+user[\s]+(?<username>[^\(]*)\((?<result>[^\)]*)\)$" }
				id => "message-00071:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "expired password for user"
					"[event][id]" => "00071:02"
					"[rsa][message][id1]" => "00071:02"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:10
		# line in RSA: <agent>[<process_id>]: <service>: failed to bind to LDAP server ldap://<dhost>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: failed to bind to LDAP server ldap://%{dhost}: %{result}" }
				id => "message-00071:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed to bind to LDAP server"
					"[event][id]" => "00071:10"
					"[rsa][message][id1]" => "00071:10"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:11
		# line in RSA: <agent>[<process_id>]: <service>: could not connect to any LDAP server as <shost> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: could not connect to any LDAP server as %{shost} - %{result}" }
				id => "message-00071:11"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not connect to any LDAP server as this hostname"
					"[event][id]" => "00071:11"
					"[rsa][message][id1]" => "00071:11"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:12
		# line in RSA: <agent>[<process_id>]: nss_ldap: could not { search LDAP server | get LDAP result } - <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+nss_ldap:[\s]+could[\s]+not[\s]+([\s]*search[\s]+LDAP[\s]+server[\s]+|[\s]*get[\s]+LDAP[\s]+result[\s]+)[\s]+\-[\s]+(?<result>.*)$" }
				id => "message-00071:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not search LDAP server or get LDAP result"
				"service" => "nss_ldap"
					"[event][id]" => "00071:12"
					"[rsa][message][id1]" => "00071:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:13
		# line in RSA: <agent>[<process_id>]: <service>: reconnecting to LDAP server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: reconnecting to LDAP server" }
				id => "message-00071:13"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "reconnecting to LDAP server"
					"[event][id]" => "00071:13"
					"[rsa][message][id1]" => "00071:13"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:14
		# line in RSA: <agent>[<process_id>]: PAM adding faulty module: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM adding faulty module: %{filename}" }
				id => "message-00071:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM adding faulty module"
					"[event][id]" => "00071:14"
					"[rsa][message][id1]" => "00071:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071
		# line in RSA: <agent>[<process_id>]: { pam_unix(<service>): | (<service>) | <service> } session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+|[\s]*\((?<service>[^\)]*)\)[\s]+|[\s]*(?<service>[^\s]*)[\s]+)[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-00071"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened"
					"[event][id]" => "00071"
					"[rsa][message][id1]" => "00071"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:01
		# line in RSA: <agent>[<process_id>]: { pam_unix(<service>): | (<service>) | <service> } session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+|[\s]*\((?<service>[^\)]*)\)[\s]+|[\s]*(?<service>[^\s]*)[\s]+)[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-00071:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "00071:01"
					"[rsa][message][id1]" => "00071:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:03
		# line in RSA: <agent>[<process_id>]: Authentication token is no longer valid; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Authentication token is no longer valid; %{result}" }
				id => "message-00071:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Authentication token is no longer valid"
					"[event][id]" => "00071:03"
					"[rsa][message][id1]" => "00071:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:04
		# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-00071:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "CRON command"
					"[event][id]" => "00071:04"
					"[rsa][message][id1]" => "00071:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:05
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): user '<username>' { OK | granted access }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+user[\s]+'(?<username>[^']*)'[\s]+([\s]*OK[\s]+|[\s]*granted[\s]+access[\s]+)$" }
				id => "message-00071:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "00071:05"
					"[rsa][message][id1]" => "00071:05"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:06
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): User '<username>' is not known
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+User[\s]+'(?<username>[^']*)'[\s]+is[\s]+not[\s]+known$" }
				id => "message-00071:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User is not known"
					"[event][id]" => "00071:06"
					"[rsa][message][id1]" => "00071:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:07
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { <process>(<application>): account <username> has expired (<result>) | User account has expired }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+account[\s]+(?<username>[^\s]*)[\s]+has[\s]+expired[\s]+\((?<result>[^\)]*)\)[\s]+|[\s]*User[\s]+account[\s]+has[\s]+expired[\s]+)$" }
				id => "message-00071:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User account has expired"
					"[event][id]" => "00071:07"
					"[rsa][message][id1]" => "00071:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:08
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+(?<event_description>.*)$" }
				id => "message-00071:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00071:08"
					"[rsa][message][id1]" => "00071:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:09
		# line in RSA: <agent>[<process_id>]: (<username>) MAIL (<event_description>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) MAIL (%{event_description})" }
				id => "message-00071:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00071:09"
					"[rsa][message][id1]" => "00071:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cron" {
		# MESSAGE 00405
		# line in RSA: <agent>[<process_id>]: (<username>) { CMD | MAIL | STARTUP } (<action>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\((?<username>[^\)]*)\)[\s]+([\s]*CMD[\s]+|[\s]*MAIL[\s]+|[\s]*STARTUP[\s]+)[\s]+\((?<action>[^\)]*)\)$" }
				id => "message-00405"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cron event"
					"[event][id]" => "00405"
					"[rsa][message][id1]" => "00405"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00405:01
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<<result>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <fld1> Access Control Identifier(UPN):<<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <%{result}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: %{fld1} Access Control Identifier(UPN):<%{user_address}>" }
				id => "message-00405:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded passwordless"
					"[event][id]" => "00405:01"
					"[rsa][message][id1]" => "00405:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00405:02
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00405:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cron activity"
					"[event][id]" => "00405:02"
					"[rsa][message][id1]" => "00405:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CROND" {
		# MESSAGE 00091
		# line in RSA: <agent>[<process_id>]: (<username>) <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) %{action}" }
				id => "message-00091"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00091"
					"[rsa][message][id1]" => "00091"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000098
		# line in RSA: <agent>[<process_id>]: <username>(<sessionid>): <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username}(%{sessionid}): %{action}" }
				id => "message-000098"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "000098"
					"[rsa][message][id1]" => "000098"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE CROND:01
		# line in RSA: <process_id> <fld2> <fld3> (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} %{fld2} %{fld3} (%{username}) CMD (%{action})" }
				id => "message-CROND:01"
				add_field => {
				"hostname" => "%{hhost}"
				"agent" => "%{messageid}"
					"[event][id]" => "CROND:01"
					"[rsa][message][id1]" => "CROND:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy M d HHmms" ] }
			}
		}
		# MESSAGE 00091:01
		# line in RSA: <agent>[<process_id>]: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}" }
				id => "message-00091:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00091:01"
					"[rsa][message][id1]" => "00091:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "crond" {
		# MESSAGE 00003
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-00003"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00003"
					"[rsa][message][id1]" => "00003"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:04
		# line in RSA: <agent>[<process_id>]: CRON (<username>) ERROR: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: CRON (%{username}) ERROR: %{result}" }
				id => "message-00003:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "CRON ERROR"
					"[event][id]" => "00003:04"
					"[rsa][message][id1]" => "00003:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:05
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): expired password for user <username>(<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): expired password for user %{username}(%{result})" }
				id => "message-00003:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "expired password for user"
					"[event][id]" => "00003:05"
					"[rsa][message][id1]" => "00003:05"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:02
		# line in RSA: <agent>[<process_id>]: { (<username>) | <username>} { RELOAD | CMD } (<action>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\((?<username>[^\)]*)\)[\s]+|[\s]*(?<username>[^\s]*))[\s]+([\s]*RELOAD[\s]+|[\s]*CMD[\s]+)[\s]+\((?<action>[^\)]*)\)$" }
				id => "message-00003:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond comand"
					"[event][id]" => "00003:02"
					"[rsa][message][id1]" => "00003:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00003:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:01"
					"[rsa][message][id1]" => "00003:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "crontab" {
		# MESSAGE 00105
		# line in RSA: <agent>[<process_id>]: (<username>) <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) %{action}" }
				id => "message-00105"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00105"
					"[rsa][message][id1]" => "00105"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00105:01
		# line in RSA: { <agent> [ <process_id> ]: | <agent>: } pam_unix(<service>): expired password for user <username> (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\s]*)[\s]+\[[\s]+(?<process_id>[^\s]*)[\s]+\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_unix\((?<service>[^\)]*)\):[\s]+expired[\s]+password[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-00105:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00105:01"
					"[rsa][message][id1]" => "00105:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE crontab:01
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<<result>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <<<info>> Access Control Identifier(NT Name):<<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <%{result}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: <%{info}> Access Control Identifier(NT Name):<%{user_address}>" }
				id => "message-crontab:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "crontab:01"
					"[rsa][message][id1]" => "crontab:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE crontab:02
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): {account <username> has expired (<event_description>)|password for user <username> will expire in <dclass_counter1> days}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_unix\((?<service>[^\)]*)\):[\s]+(account[\s]+(?<username>[^\s]*)[\s]+has[\s]+expired[\s]+\((?<event_description>[^\)]*)\)|password[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+will[\s]+expire[\s]+in[\s]+(?<dclass_counter1>[^\s]*)[\s]+days)$" }
				id => "message-crontab:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "crontab:02"
					"[rsa][message][id1]" => "crontab:02"
					"[event][categoryid]" => "1402040200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00105:02
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<<result>> for <<Active Directory> user: <<<username>> account: <<<domain>\<fld2>> service: <<<service>> reason: <<<info>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <%{result}> for <Active Directory> user: <%{username}> account: <%{domain}\%{fld2}> service: <%{service}> reason: <%{info}>" }
				id => "message-00105:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00105:02"
					"[rsa][message][id1]" => "00105:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00105:03
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-00105:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user root"
					"[event][id]" => "00105:03"
					"[rsa][message][id1]" => "00105:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE crontab:04
		# line in RSA: <agent>[<fld1>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{event_description}" }
				id => "message-crontab:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "crontab:04"
					"[rsa][message][id1]" => "crontab:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId466
	# line in RSA: { <agent>[<process_id>]: | <agent>: } executing "<action>"
	else if [logstash][msgparser][id] == "msgParserId466" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+executing[\s]+\"(?<action>[^\"]*)\"$" }
			id => "msgParserId466"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "program execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cssd" {
		# MESSAGE 001579
		# line in RSA: <agent>[<process_id>]: <id>: Unable to transfer data to peer - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id}: Unable to transfer data to peer - %{result}" }
				id => "message-001579"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to transfer data to peer"
					"[event][id]" => "001579"
					"[rsa][message][id1]" => "001579"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001911
		# line in RSA: <agent>[<process_id>]: <id> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id} %{event_description}" }
				id => "message-001911"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001911"
					"[rsa][message][id1]" => "001911"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ctl_cyrusdb" {
		# MESSAGE 00728:01
		# line in RSA: <agent>[<process_id>]: <event_description>:<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}:%{filename}" }
				id => "message-00728:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00728:01"
					"[rsa][message][id1]" => "00728:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00728
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00728"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00728"
					"[rsa][message][id1]" => "00728"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ctl_mboxlist" {
		# MESSAGE 00228:01
		# line in RSA: <agent>[<process_id>]: <event_type>:<event_description>:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_type}:%{event_description}:%{result}" }
				id => "message-00228:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00228:01"
					"[rsa][message][id1]" => "00228:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00228
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00228"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00228"
					"[rsa][message][id1]" => "00228"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cupsd" {
		# MESSAGE 00497
		# line in RSA: <agent>: pam_unix(<service>): authentication failure; logname=<fld1> uid=<uid> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): authentication failure; logname=%{fld1} uid=%{uid} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00497"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00497"
					"[rsa][message][id1]" => "00497"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00497:01
		# line in RSA: <agent>: <severity>: can't get client address: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: can't get client address: %{result}" }
				id => "message-00497:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "can't get client address"
					"[event][id]" => "00497:01"
					"[rsa][message][id1]" => "00497:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00497:02
		# line in RSA: <agent>: <process>: Child exited with status <resultcode>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: Child exited with status %{resultcode}!" }
				id => "message-00497:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Child exited with status"
					"[event][id]" => "00497:02"
					"[rsa][message][id1]" => "00497:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00497:03
		# line in RSA: <agent>: <event_description> "<filename>" - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} \"%{filename}\" - %{result}" }
				id => "message-00497:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00497:03"
					"[rsa][message][id1]" => "00497:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId474
	# line in RSA: <agent>: Successfully configured <interface> with options <param>
	else if [logstash][msgparser][id] == "msgParserId474" {
		dissect {
			mapping => { "message" => "%{agent}: Successfully configured %{interface} with options %{param}" }
			id => "msgParserId474"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cvs" {
		# MESSAGE 00029
		# line in RSA: <agent>: login failure by <username> <fld1> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: login failure by %{username} %{fld1} (%{result})" }
				id => "message-00029"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "00029"
					"[rsa][message][id1]" => "00029"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00029:01
		# line in RSA: <agent>: login failure (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: login failure (%{result})" }
				id => "message-00029:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "00029:01"
					"[rsa][message][id1]" => "00029:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00029:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00029:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00029:02"
					"[rsa][message][id1]" => "00029:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cvsd" {
		# MESSAGE 001187
		# line in RSA: <agent>[<process_id>]: connection from <saddr> <sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection from %{saddr} %{sport}" }
				id => "message-001187"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"event_description" => "connection"
				"service" => "%{agent}"
					"[event][id]" => "001187"
					"[rsa][message][id1]" => "001187"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001715
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001715"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001715"
					"[rsa][message][id1]" => "001715"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dad" {
		# MESSAGE 001660
		# line in RSA: <agent>[<process_id>]: WARN  <<<process>> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARN  <%{process}> %{event_description}" }
				id => "message-001660"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "WARN"
					"[event][id]" => "001660"
					"[rsa][message][id1]" => "001660"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001762
		# line in RSA: <agent>[<process_id>]: INFO  <<<process>> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO  <%{process}> %{event_description}" }
				id => "message-001762"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001762"
					"[rsa][message][id1]" => "001762"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "daemonlogger" {
		# MESSAGE 001188_01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Caught SIGHUP, restarting...
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Caught[\s]+SIGHUP,[\s]+restarting\.\.\.$" }
				id => "message-001188_01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"event_description" => "Caught SIGHUP, restarting."
					"[event][id]" => "001188_01"
					"[rsa][message][id1]" => "001188_01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001188
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001188"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001188"
					"[rsa][message][id1]" => "001188"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId480
	# line in RSA: <agent>[<process_id>]: <severity> <process> <event_description>
	else if [logstash][msgparser][id] == "msgParserId480" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{process} %{event_description}" }
			id => "msgParserId480"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "date" {
		# MESSAGE 00140
		# line in RSA: <agent>: <fld1> <fld2> <fld3> <fld4> <timezone> <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{fld2} %{fld3} %{fld4} %{timezone} %{fld6}" }
				id => "message-00140"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00140"
					"[rsa][message][id1]" => "00140"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE date:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-date:02"
				add_field => {
					"[event][id]" => "date:02"
					"[rsa][message][id1]" => "date:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId73"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId482
	# line in RSA: <agent>[<process_id>]: <event_time_string> <event_description>
	else if [logstash][msgparser][id] == "msgParserId482" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} %{event_description}" }
			id => "msgParserId482"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId483
	# line in RSA: <agent>: Grid member at <hostip> <action>
	else if [logstash][msgparser][id] == "msgParserId483" {
		dissect {
			mapping => { "message" => "%{agent}: Grid member at %{hostip} %{action}" }
			id => "msgParserId483"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId484
	# line in RSA: <agent>[<process_id>]: Entered <filename>, <param>
	else if [logstash][msgparser][id] == "msgParserId484" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Entered %{filename}, %{param}" }
			id => "msgParserId484"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId485
	# line in RSA: <agent>[<process_id>]: Returning <resultcode> from <filename> (<param>)
	else if [logstash][msgparser][id] == "msgParserId485" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Returning %{resultcode} from %{filename} (%{param})" }
			id => "msgParserId485"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId486
	# line in RSA: <agent>: <severity> : { <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId486" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<severity>[^\s]*)[\s]+:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId486"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dbus" {
		# MESSAGE 00257:02
		# line in RSA: <agent>[<process_id>]: [system] <action><fld1>{service name=<service> unit=<fld1>| service name=<service> (<info>) | service <service> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 00257:01
		# line in RSA: <agent>:<event_source>:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{event_source}:%{event_description}" }
				id => "message-00257:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00257:01"
					"[rsa][message][id1]" => "00257:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:03
		# line in RSA: <agent>: [system] <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [system] %{action}" }
				id => "message-00257:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00257:03"
					"[rsa][message][id1]" => "00257:03"
					"[event][categoryid]" => "1602000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "dbus-daemon" {
		# MESSAGE 001330
		# line in RSA: <agent>: Reloaded configuration
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Reloaded configuration" }
				id => "message-001330"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Reloaded configuration"
					"[event][id]" => "001330"
					"[rsa][message][id1]" => "001330"
					"[event][categoryid]" => "1703020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001330:01
		# line in RSA: <agent>[<process_id>]: [system] <action> { service name=<service> (<info>) | service <service> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[system\][\s]+(?<action>[^\s]*)[\s]+([\s]*service[\s]+name=(?<service>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+|[\s]*service[\s]+(?<service>[^\s]*)[\s]+)$" }
				id => "message-001330:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001330:01"
					"[rsa][message][id1]" => "001330:01"
					"[event][categoryid]" => "1703020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001330:02
		# line in RSA: <agent>:<fld1>: <filename>: <event_description>(required by <fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{fld1}: %{filename}: %{event_description}(required by %{fld2})" }
				id => "message-001330:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001330:02"
					"[rsa][message][id1]" => "001330:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002520
		# line in RSA: {<agent>[<process_id>]: | <agent>: } [system] <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[system\][\s]+(?<action>.*)$" }
				id => "message-002520"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002520"
					"[rsa][message][id1]" => "002520"
					"[event][categoryid]" => "1703020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002579
		# line in RSA: <agent>: <directory>: stat <result>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{directory}: stat %{result}: %{event_description}" }
				id => "message-002579"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002579"
					"[rsa][message][id1]" => "002579"
					"[event][categoryid]" => "1703020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002580
		# line in RSA: <agent>: dbus[<fld1>]: avc:  <event_description> (seqno=<fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: dbus[%{fld1}]: avc:  %{event_description} (seqno=%{fld2})" }
				id => "message-002580"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002580"
					"[rsa][message][id1]" => "002580"
					"[event][categoryid]" => "1703020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002581
		# line in RSA: <agent>: Encountered error '<action> "<directory>": <result>' while parsing <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Encountered error '%{action} \"%{directory}\": %{result}' while parsing %{fld1}" }
				id => "message-002581"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002581"
					"[rsa][message][id1]" => "002581"
					"[event][categoryid]" => "1703020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId343
	# line in RSA: <agent>[<process_id>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId343" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
			id => "msgParserId343"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId497
	# line in RSA: <agent>: { <event_description>: <info> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId497" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId497"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId498
	# line in RSA: <agent>[<process_id>]: <event_description>: <filename>
	else if [logstash][msgparser][id] == "msgParserId498" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{filename}" }
			id => "msgParserId498"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId499
	# line in RSA: <agent>: <application>:session pid <sessionid> started from parent <parent_pid>
	else if [logstash][msgparser][id] == "msgParserId499" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}:session pid %{sessionid} started from parent %{parent_pid}" }
			id => "msgParserId499"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session started"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId500
	# line in RSA: <agent>[<process_id>]: connect(<application>) <action>: <result>
	else if [logstash][msgparser][id] == "msgParserId500" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect(%{application}) %{action}: %{result}" }
			id => "msgParserId500"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId501
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId501" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId501"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Modify"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId502
	# line in RSA: <agent>[<process_id>]: <fld1>: message-id=<id>
	else if [logstash][msgparser][id] == "msgParserId502" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: message-id=%{id}" }
			id => "msgParserId502"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId503
	# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, <fld2>
	else if [logstash][msgparser][id] == "msgParserId503" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: from=%{from}, size=%{bytes}, %{fld2}" }
			id => "msgParserId503"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "delivery-mta/smtp" {
		# MESSAGE 00863:01
		# line in RSA: <agent>[<process_id>]: <sessionid> audit_id=<id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid} audit_id=%{id}" }
				id => "message-00863:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00863:01"
					"[rsa][message][id1]" => "00863:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00863
		# line in RSA: <agent>[<process_id>]: <severity> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{event_description}" }
				id => "message-00863"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00863"
					"[rsa][message][id1]" => "00863"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId506
	# line in RSA: <agent>[<process_id>]: connect from <shost>[<saddr>]
	else if [logstash][msgparser][id] == "msgParserId506" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}[%{saddr}]" }
			id => "msgParserId506"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect from host"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId507
	# line in RSA: <agent>: Added the following hosts to <filename> - { <hostip>(<hostname>) | <hostname> }
	else if [logstash][msgparser][id] == "msgParserId507" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+Added[\s]+the[\s]+following[\s]+hosts[\s]+to[\s]+(?<filename>[^\s]*)[\s]+\-[\s]+([\s]*(?<hostip>[^\(]*)\((?<hostname>[^\)]*)\)[\s]+|[\s]*(?<hostname>[^\s]*)[\s]+)$" }
			id => "msgParserId507"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Added the following hosts deny file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId508
	# line in RSA: <agent>: { <process>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId508" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId508"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId509
	# line in RSA: <agent>: ELF file <filename> not a relocatable object
	else if [logstash][msgparser][id] == "msgParserId509" {
		dissect {
			mapping => { "message" => "%{agent}: ELF file %{filename} not a relocatable object" }
			id => "msgParserId509"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "device" {
		# MESSAGE 002419
		# line in RSA: device <device> entered promiscuous mode
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "device %{device} entered promiscuous mode" }
				id => "message-002419"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Enable"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_description" => "device entered promiscuous mode"
					"[event][id]" => "002419"
					"[rsa][message][id1]" => "002419"
					"[event][categoryid]" => "1701060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00620
		# line in RSA: device <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "device %{device}" }
				id => "message-00620"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00620"
					"[rsa][message][id1]" => "00620"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId512
	# line in RSA: <agent>: devlabel's temporary ignore list <filename> has been <action> due to <result>
	else if [logstash][msgparser][id] == "msgParserId512" {
		dissect {
			mapping => { "message" => "%{agent}: devlabel's temporary ignore list %{filename} has been %{action} due to %{result}" }
			id => "msgParserId512"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId513
	# line in RSA: { <agent>[<process_id>] | <agent> }: {<action> on <interface> to <saddr> port <sport> interval <fld44>|<action> on <interface> to <saddr> port <sport> (xid=<fld1>) |<action> on <interface> to <saddr> port <sport>| <action> from <saddr>|<event_description> }
	else if [logstash][msgparser][id] == "msgParserId513" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+((?<action>[^\s]*)[\s]+on[\s]+(?<interface>[^\s]*)[\s]+to[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+interval[\s]+(?<fld44>.*)|(?<action>[^\s]*)[\s]+on[\s]+(?<interface>[^\s]*)[\s]+to[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+\(xid=(?<fld1>[^\)]*)\)[\s]+|(?<action>[^\s]*)[\s]+on[\s]+(?<interface>[^\s]*)[\s]+to[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>.*)|[\s]*(?<action>[^\s]*)[\s]+from[\s]+(?<saddr>.*)|(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId513"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId514
	# line in RSA: <agent>: Skipping '<action>' call
	else if [logstash][msgparser][id] == "msgParserId514" {
		dissect {
			mapping => { "message" => "%{agent}: Skipping '%{action}' call" }
			id => "msgParserId514"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dhcpd" {
		# MESSAGE 00705:02
		# line in RSA: <agent>: <action> { on <saddr> to <dmacaddr> (<dhost>) | on <saddr> to <dmacaddr> } via <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<action>[^\s]*)[\s]+([\s]*on[\s]+(?<saddr>[^\s]*)[\s]+to[\s]+(?<dmacaddr>[^\s]*)[\s]+\((?<dhost>[^\)]*)\)[\s]+|[\s]*on[\s]+(?<saddr>[^\s]*)[\s]+to[\s]+(?<dmacaddr>[^\s]*)[\s]+)[\s]+via[\s]+(?<interface>.*)$" }
				id => "message-00705:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00705:02"
					"[rsa][message][id1]" => "00705:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00705:01
		# line in RSA: <agent>: <action> { for <saddr> from <dmacaddr> (<dhost>) | to <daddr> (<dmacaddr>) | from <saddr> } via <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<action>[^\s]*)[\s]+([\s]*for[\s]+(?<saddr>[^\s]*)[\s]+from[\s]+(?<dmacaddr>[^\s]*)[\s]+\((?<dhost>[^\)]*)\)[\s]+|[\s]*to[\s]+(?<daddr>[^\s]*)[\s]+\((?<dmacaddr>[^\)]*)\)[\s]+|[\s]*from[\s]+(?<saddr>[^\s]*)[\s]+)[\s]+via[\s]+(?<interface>.*)$" }
				id => "message-00705:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00705:01"
					"[rsa][message][id1]" => "00705:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00705
		# line in RSA: <agent>: Unable to add {forward|reverse} map from <shost> <space> <dhost>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+Unable[\s]+to[\s]+add[\s]+(forward|reverse)[\s]+map[\s]+from[\s]+(?<shost>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+(?<dhost>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-00705"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to add reverse/reverse map"
					"[event][id]" => "00705"
					"[rsa][message][id1]" => "00705"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00705:04
		# line in RSA: <agent>: Added new forward map from <shost> <space> <dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Added new forward map from %{shost} %{space} %{dhost}" }
				id => "message-00705:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Added new forward map from"
					"[event][id]" => "00705:04"
					"[rsa][message][id1]" => "00705:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00705:05
		# line in RSA: <agent>: Forward map from <shost> <space> <dhost> FAILED: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Forward map from %{shost} %{space} %{dhost} FAILED: %{result}" }
				id => "message-00705:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Forward map FAILED"
					"[event][id]" => "00705:05"
					"[rsa][message][id1]" => "00705:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00705:19
		# line in RSA: <agent>: { if <event_description> | <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*if[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>.*))$" }
				id => "message-00705:19"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00705:19"
					"[rsa][message][id1]" => "00705:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId521
	# line in RSA: <agent>: packet to bogus giaddr <daddr>
	else if [logstash][msgparser][id] == "msgParserId521" {
		dissect {
			mapping => { "message" => "%{agent}: packet to bogus giaddr %{daddr}" }
			id => "msgParserId521"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId522
	# line in RSA: <agent>: <event_type> <fqdn> <severity> Sev: <fld1>
	else if [logstash][msgparser][id] == "msgParserId522" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_type} %{fqdn} %{severity} Sev: %{fld1}" }
			id => "msgParserId522"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId523
	# line in RSA: <agent>[<process_id>]: :<action> <param>: RC=<resultcode>
	else if [logstash][msgparser][id] == "msgParserId523" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: :%{action} %{param}: RC=%{resultcode}" }
			id => "msgParserId523"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"event_description" => "disable user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId524
	# line in RSA: { <agent>[<process_id>]: | <agent>: } DLG: <application>: <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId524" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+DLG:[\s]+(?<application>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+(?<info>.*)$" }
			id => "msgParserId524"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dlm_controld" {
		# MESSAGE 002084
		# line in RSA: { <agent>[<process_id>]: | <agent>: } connect to ccs error <result>, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+connect[\s]+to[\s]+ccs[\s]+error[\s]+(?<result>[^,]*),[\s]+(?<info>.*)$" }
				id => "message-002084"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect to ccs error"
					"[event][id]" => "002084"
					"[rsa][message][id1]" => "002084"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001836
		# line in RSA: { <agent>[<process_id>]: | <agent>: } cluster is down, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+cluster[\s]+is[\s]+down,[\s]+(?<result>.*)$" }
				id => "message-001836"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cluster is down"
					"[event][id]" => "001836"
					"[rsa][message][id1]" => "001836"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId527
	# line in RSA: <agent>: <node> { <event_description>: <event_time_string> | <event_description>. }
	else if [logstash][msgparser][id] == "msgParserId527" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<node>[^\s]*)[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<event_time_string>[^\s]*)[\s]+|[\s]*(?<event_description>[^\.]*)\.[\s]+)$" }
			id => "msgParserId527"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId528
	# line in RSA: <agent>: <event_description>; client: <c_username>; mac: <smacaddr>; ssid: <sessionid>; <device>
	else if [logstash][msgparser][id] == "msgParserId528" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}; client: %{c_username}; mac: %{smacaddr}; ssid: %{sessionid}; %{device}" }
			id => "msgParserId528"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId529
	# line in RSA: <agent>: [<process_id>]: (<hostip>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId529" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}]: (%{hostip}) %{event_description}" }
			id => "msgParserId529"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId530
	# line in RSA: <agent>: SLOT: <fld1> SEVERITY: <severity> ENTITY/EVENT CODE: <resultcode> <event_description>
	else if [logstash][msgparser][id] == "msgParserId530" {
		dissect {
			mapping => { "message" => "%{agent}: SLOT: %{fld1} SEVERITY: %{severity} ENTITY/EVENT CODE: %{resultcode} %{event_description}" }
			id => "msgParserId530"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dropbear" {
		# MESSAGE 002129:01
		# line in RSA: <agent>[<process_id>]: Login failed for '<fld6>' from ::ffff:<saddr>:<sport> Server <daddr>, hostname <dhost>, real server <fld4>, protocol <protocol>, proxied <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login failed for '%{fld6}' from ::ffff:%{saddr}:%{sport} Server %{daddr}, hostname %{dhost}, real server %{fld4}, protocol %{protocol}, proxied %{fld5}" }
				id => "message-002129:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002129:01"
					"[rsa][message][id1]" => "002129:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002129
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002129"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002129"
					"[rsa][message][id1]" => "002129"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dropmon_1" {
		# MESSAGE 001208
		# line in RSA: { <agent>[<process_id>]: | <agent>: } dropmon, service '<service>' { with pid <fld1> <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+dropmon,[\s]+service[\s]+'(?<service>[^']*)'[\s]+([\s]*with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001208"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001208"
					"[rsa][message][id1]" => "001208"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001208:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001208:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001208:01"
					"[rsa][message][id1]" => "001208:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId533
	# line in RSA: <agent>: <url>|<sessionid>|<result>|<hostip>|<webpage>|<event_description>
	else if [logstash][msgparser][id] == "msgParserId533" {
		dissect {
			mapping => { "message" => "%{agent}: %{url}|%{sessionid}|%{result}|%{hostip}|%{webpage}|%{event_description}" }
			id => "msgParserId533"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ds_agent" {
		# MESSAGE 002322
		# line in RSA: <agent>[<process_id>]: <resultcode>|<url>|<saddr>|<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{resultcode}|%{url}|%{saddr}|%{event_description}" }
				id => "message-002322"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002322"
					"[rsa][message][id1]" => "002322"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002323
		# line in RSA: <agent>[<process_id>]: { <application>(<saddr>:<sport>) - <event_description> - <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<application>[^\(]*)\((?<saddr>[^:]*):(?<sport>[^\)]*)\)[\s]+\-[\s]+(?<event_description>[^\s]*)[\s]+\-[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002323"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002323"
					"[rsa][message][id1]" => "002323"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DSM" {
		# MESSAGE 001197
		# line in RSA: <agent>: Date = <event_time_string>, Time = <disposition>, MsgId = <id>, Event Source = <event_source>, Application = <application>, Level = <severity>, Category = <sessionid>, Node = <node>, User = <username>, Computer = <hostname>: { <info>; error message=<action> | <action> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+Date[\s]+=[\s]+(?<event_time_string>[^,]*),[\s]+Time[\s]+=[\s]+(?<disposition>[^,]*),[\s]+MsgId[\s]+=[\s]+(?<id>[^,]*),[\s]+Event[\s]+Source[\s]+=[\s]+(?<event_source>[^,]*),[\s]+Application[\s]+=[\s]+(?<application>[^,]*),[\s]+Level[\s]+=[\s]+(?<severity>[^,]*),[\s]+Category[\s]+=[\s]+(?<sessionid>[^,]*),[\s]+Node[\s]+=[\s]+(?<node>[^,]*),[\s]+User[\s]+=[\s]+(?<username>[^,]*),[\s]+Computer[\s]+=[\s]+(?<hostname>[^:]*):[\s]+([\s]*(?<info>[^;]*);[\s]+error[\s]+message=(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
				id => "message-001197"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001197"
					"[rsa][message][id1]" => "001197"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002447
		# line in RSA: <agent>: last message repeated <fld1> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: last message repeated %{fld1} times" }
				id => "message-002447"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002447"
					"[rsa][message][id1]" => "002447"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId538
	# line in RSA: <agent>: <event_description>: <filename> errno = <resultcode>, <result>
	else if [logstash][msgparser][id] == "msgParserId538" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{filename} errno = %{resultcode}, %{result}" }
			id => "msgParserId538"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dsmcad" {
		# MESSAGE 00711
		# line in RSA: <agent>: <event_description>: <filename> errno = <resultcode>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: %{filename} errno = %{resultcode}, %{result}" }
				id => "message-00711"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00711"
					"[rsa][message][id1]" => "00711"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dsmcad:02
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-dsmcad:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "dsmcad:02"
					"[rsa][message][id1]" => "dsmcad:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE dsmcad:03
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-dsmcad:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "dsmcad:03"
					"[rsa][message][id1]" => "dsmcad:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId540
	# line in RSA: { <agent>[<process_id>]: | <agent>: } dtmd, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId540" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+dtmd,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId540"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dxserver" {
		# MESSAGE 001161
		# line in RSA: <agent>: <action>: DSA '<hostname>' cannot be contacted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action}: DSA '%{hostname}' cannot be contacted" }
				id => "message-001161"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Server cannot be contacted"
					"[event][id]" => "001161"
					"[rsa][message][id1]" => "001161"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001162
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001162"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001162"
					"[rsa][message][id1]" => "001162"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dzdo" {
		# MESSAGE 002324
		# line in RSA: <agent>: <username>: TTY=<terminal>; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: TTY=%{terminal}; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-002324"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "002324"
					"[rsa][message][id1]" => "002324"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002318
		# line in RSA: <agent>[<process_id>]: INFO <application> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO %{application} %{event_description}" }
				id => "message-002318"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "002318"
					"[rsa][message][id1]" => "002318"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002325
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002325"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002325"
					"[rsa][message][id1]" => "002325"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId544
	# line in RSA: <agent>[<process_id>]: INFO <process> <event_description>
	else if [logstash][msgparser][id] == "msgParserId544" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: INFO %{process} %{event_description}" }
			id => "msgParserId544"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dzsh" {
		# MESSAGE 002278
		# line in RSA: <agent>[<process_id>]: <username>: TTY=<terminal>; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username}: TTY=%{terminal}; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-002278"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "002278"
					"[rsa][message][id1]" => "002278"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002279
		# line in RSA: <agent>[<process_id>]: INFO <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO %{event_description}" }
				id => "message-002279"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "002279"
					"[rsa][message][id1]" => "002279"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId547
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_time_string> - Info - <severity> - Logging into file <filename>
	else if [logstash][msgparser][id] == "msgParserId547" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_time_string>[^\s]*)[\s]+\-[\s]+Info[\s]+\-[\s]+(?<severity>[^\s]*)[\s]+\-[\s]+Logging[\s]+into[\s]+file[\s]+(?<filename>.*)$" }
			id => "msgParserId547"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Logging into file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "emcp_mond" {
		# MESSAGE 001345
		# line in RSA: <agent>: Missing PowerPath Management Daemon configuration file=<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Missing PowerPath Management Daemon configuration file=%{filename}" }
				id => "message-001345"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Missing PowerPath Management Daemon configuration file"
					"[event][id]" => "001345"
					"[rsa][message][id1]" => "001345"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001645
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001645"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001645"
					"[rsa][message][id1]" => "001645"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId549
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <action>: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId549" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<action>[^:]*):[\s]+(?<severity>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId549"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId550
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <application> : <action> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId550" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\s]*)[\s]+:[\s]+(?<action>[^\s]*)[\s]+\-[\s]+(?<event_description>.*)$" }
			id => "msgParserId550"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId551
	# line in RSA: <agent>: <username> <event_description>
	else if [logstash][msgparser][id] == "msgParserId551" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} %{event_description}" }
			id => "msgParserId551"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId552
	# line in RSA: <agent>: <username> <action> (<filename>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId552" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} %{action} (%{filename}) %{event_description}" }
			id => "msgParserId552"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId553
	# line in RSA: <agent>[<process_id>]: <hostname> - <username> ({ submit | no friends entry }) <action>
	else if [logstash][msgparser][id] == "msgParserId553" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+(?<username>[^\s]*)[\s]+\(([\s]*submit[\s]+|[\s]*no[\s]+friends[\s]+entry[\s]+)\)[\s]+(?<action>.*)$" }
			id => "msgParserId553"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId554
	# line in RSA: <username>:  <event_description> version <version>
	else if [logstash][msgparser][id] == "msgParserId554" {
		dissect {
			mapping => { "message" => "%{username}:  %{event_description} version %{version}" }
			id => "msgParserId554"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId555
	# line in RSA: <agent>: <event_type>, <device>, <info>
	else if [logstash][msgparser][id] == "msgParserId555" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_type}, %{device}, %{info}" }
			id => "msgParserId555"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId556
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <action>: Unable to check/set "<filename>"
	else if [logstash][msgparser][id] == "msgParserId556" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<action>[^:]*):[\s]+Unable[\s]+to[\s]+check/set[\s]+\"(?<filename>[^\"]*)\"$" }
			id => "msgParserId556"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to check/set file lock"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId557
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId557" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId557"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId558
	# line in RSA: <agent>: CPU utilization monitor: process <process> consumes <dclass_ratio1> % <dclass_ratio1_string>
	else if [logstash][msgparser][id] == "msgParserId558" {
		dissect {
			mapping => { "message" => "%{agent}: CPU utilization monitor: process %{process} consumes %{dclass_ratio1} % %{dclass_ratio1_string}" }
			id => "msgParserId558"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId559
	# line in RSA: <agent>:  <process>: { <event_description> - <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId559" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<process>[^:]*):[\s]+([\s]*(?<event_description>[^\s]*)[\s]+\-[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId559"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId560
	# line in RSA: <agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId560" {
		dissect {
			mapping => { "message" => "%{agent} %{event_description}" }
			id => "msgParserId560"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "err" {
		# MESSAGE 001743
		# line in RSA: <severity> { eid=<application>:<resultcode> <result>: <event_description> | eid=<application> status="<event_description>" }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<severity>[^\s]*)[\s]+([\s]*eid=(?<application>[^:]*):(?<resultcode>[^\s]*)[\s]+(?<result>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*eid=(?<application>[^\s]*)[\s]+status=\"(?<event_description>[^\"]*)\"[\s]+)$" }
				id => "message-001743"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001743"
					"[rsa][message][id1]" => "001743"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001796
		# line in RSA: <severity> mod=<application> sub=<action> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{severity} mod=%{application} sub=%{action} %{event_description}" }
				id => "message-001796"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001796"
					"[rsa][message][id1]" => "001796"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE err
		# line in RSA: <severity><agent>[<process_id>]: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{severity}%{agent}[%{process_id}]: %{fld2}" }
				id => "message-err"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "err"
					"[rsa][message][id1]" => "err"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ERROR" {
		# MESSAGE 002268
		# line in RSA: <action>: Failed to fetch data for USER <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: Failed to fetch data for USER %{username}" }
				id => "message-002268"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to fetch data for USER"
					"[event][id]" => "002268"
					"[rsa][message][id1]" => "002268"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ERROR
		# line in RSA: <fld1> <fld2> <severity> [<hostname>] [<fld3>] {<event_description> user:<username> | <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+\[(?<hostname>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\][\s]+((?<event_description>[^\s]*)[\s]+user:(?<username>[^\s]*)[\s]+|[\s]*(?<event_description>.*))$" }
				id => "message-ERROR"
				add_field => {
					"[event][id]" => "ERROR"
					"[rsa][message][id1]" => "ERROR"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SYNCSSH:02
		# line in RSA: <agent>]: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}]: %{severity}: %{event_description}" }
				id => "message-SYNCSSH:02"
				add_field => {
					"[event][id]" => "SYNCSSH:02"
					"[rsa][message][id1]" => "SYNCSSH:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId565
	# line in RSA: error getting update info: { Error making cache directory: <directory> error was: [Errno <resultcode>] <result> | [Errno <resultcode>] <result> | <result>: <disposition>. <info> }
	else if [logstash][msgparser][id] == "msgParserId565" {
		grok {
			match => { "message" => "^error[\s]+getting[\s]+update[\s]+info:[\s]+([\s]*Error[\s]+making[\s]+cache[\s]+directory:[\s]+(?<directory>[^\s]*)[\s]+error[\s]+was:[\s]+\[Errno[\s]+(?<resultcode>[^\]]*)\][\s]+(?<result>[^\s]*)[\s]+|[\s]*\[Errno[\s]+(?<resultcode>[^\]]*)\][\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<result>[^:]*):[\s]+(?<disposition>[^\.]*)\.[\s]+(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId565"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error getting update info"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "error_initializing" {
		# MESSAGE 002249
		# line in RSA: <action>: The SSL certificate <filename> failed verification.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: The SSL certificate %{filename} failed verification." }
				id => "message-002249"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "The SSL certificate failed verification"
					"[event][id]" => "002249"
					"[rsa][message][id1]" => "002249"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002250
		# line in RSA: <action>: can't set attribute
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: can't set attribute" }
				id => "message-002250"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "can't set attribute"
					"[event][id]" => "002250"
					"[rsa][message][id1]" => "002250"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId568
	# line in RSA: <agent>: <fld1> <fld2> <event_type> <obj_type> <obj_name> <event_description>
	else if [logstash][msgparser][id] == "msgParserId568" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} %{fld2} %{event_type} %{obj_type} %{obj_name} %{event_description}" }
			id => "msgParserId568"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId569
	# line in RSA: <agent>: Heartbeat Syslog Message
	else if [logstash][msgparser][id] == "msgParserId569" {
		dissect {
			mapping => { "message" => "%{agent}: Heartbeat Syslog Message" }
			id => "msgParserId569"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Heartbeat Syslog Message"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId570
	# line in RSA: <agent>: [<fld1> <fld2> <event_source> <severity>] Unable to restore uplink <interface> of virtual swtich <device>. <result>
	else if [logstash][msgparser][id] == "msgParserId570" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld1} %{fld2} %{event_source} %{severity}] Unable to restore uplink %{interface} of virtual swtich %{device}. %{result}" }
			id => "msgParserId570"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId571
	# line in RSA: <agent>: <application>: Missing PowerPath Management Daemon configuration file=<filename>
	else if [logstash][msgparser][id] == "msgParserId571" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}: Missing PowerPath Management Daemon configuration file=%{filename}" }
			id => "msgParserId571"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Missing PowerPath Management Daemon configuration file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId572
	# line in RSA: <agent>:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId572" {
		dissect {
			mapping => { "message" => "%{agent}:  %{event_description}" }
			id => "msgParserId572"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId573
	# line in RSA: <agent>[<process_id>]: <event_description> logname=<fld1> uid=<uid> euid=<fld2>tty=<terminal> ruser=<c_username> rhost=<shost>  user=<username>
	else if [logstash][msgparser][id] == "msgParserId573" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} logname=%{fld1} uid=%{uid} euid=%{fld2}tty=%{terminal} ruser=%{c_username} rhost=%{shost}  user=%{username}" }
			id => "msgParserId573"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId574
	# line in RSA: <agent>:[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId574" {
		dissect {
			mapping => { "message" => "%{agent}:[%{process_id}]: %{event_description}" }
			id => "msgParserId574"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId575
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <version>: Notification attempt to consumer id <id> FAILED with error <result>
	else if [logstash][msgparser][id] == "msgParserId575" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<version>[^:]*):[\s]+Notification[\s]+attempt[\s]+to[\s]+consumer[\s]+id[\s]+(?<id>[^\s]*)[\s]+FAILED[\s]+with[\s]+error[\s]+(?<result>.*)$" }
			id => "msgParserId575"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Notification attempt to consumer FAILED with error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId576
	# line in RSA: <agent>: [<application>] Unknown error <resultcode> occurred while pushing events
	else if [logstash][msgparser][id] == "msgParserId576" {
		dissect {
			mapping => { "message" => "%{agent}: [%{application}] Unknown error %{resultcode} occurred while pushing events" }
			id => "msgParserId576"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unknown error occurred while pushing events"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId577
	# line in RSA: <agent>[<process_id>]: { <event_description>. <result> | <event_description> [<result>] }
	else if [logstash][msgparser][id] == "msgParserId577" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^\.]*)\.[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+\[(?<result>[^\]]*)\][\s]+)$" }
			id => "msgParserId577"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId578
	# line in RSA: <agent> Mobile Unit <fld1> with MAC address <macaddr> was disassociated. [Reason Code <resultcode>]
	else if [logstash][msgparser][id] == "msgParserId578" {
		dissect {
			mapping => { "message" => "%{agent} Mobile Unit %{fld1} with MAC address %{macaddr} was disassociated. [Reason Code %{resultcode}]" }
			id => "msgParserId578"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId44
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId44" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId44"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "exim" {
		# MESSAGE 03450
		# line in RSA: <agent>(pam_unix)[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(pam_unix)[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-03450"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "03450"
					"[rsa][message][id1]" => "03450"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03451
		# line in RSA: <agent>: <fld1> <fld2> Exim configuration error:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{fld2} Exim configuration error:" }
				id => "message-03451"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Exim configuration error:"
					"[event][id]" => "03451"
					"[rsa][message][id1]" => "03451"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 03452
		# line in RSA: <agent>: exim { startup | shutdown } { succeeded | failed }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+exim[\s]+([\s]*startup[\s]+|[\s]*shutdown[\s]+)[\s]+([\s]*succeeded[\s]+|[\s]*failed[\s]+)$" }
				id => "message-03452"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "exim startup startup/shutdown"
					"[event][id]" => "03452"
					"[rsa][message][id1]" => "03452"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03486
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-03486"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03486"
					"[rsa][message][id1]" => "03486"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId582
	# line in RSA: <agent>: ALERT: <event_description>
	else if [logstash][msgparser][id] == "msgParserId582" {
		dissect {
			mapping => { "message" => "%{agent}: ALERT: %{event_description}" }
			id => "msgParserId582"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId583
	# line in RSA: exiting on <resultcode>
	else if [logstash][msgparser][id] == "msgParserId583" {
		dissect {
			mapping => { "message" => "exiting on %{resultcode}" }
			id => "msgParserId583"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId584
	# line in RSA: <agent>: { <event_description>: <filename> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId584" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<filename>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId584"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId585
	# line in RSA: <agent>[<process_id>]: [<severity>] <process>: server "<filename>" started (pid <parent_pid>)
	else if [logstash][msgparser][id] == "msgParserId585" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] %{process}: server \"%{filename}\" started (pid %{parent_pid})" }
			id => "msgParserId585"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "server started"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "fenced" {
		# MESSAGE 002089
		# line in RSA: { <agent>[<process_id>]: | <agent>: } cluster is down, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+cluster[\s]+is[\s]+down,[\s]+(?<result>.*)$" }
				id => "message-002089"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cluster is down"
					"[event][id]" => "002089"
					"[rsa][message][id1]" => "002089"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001833
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001833"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001833"
					"[rsa][message][id1]" => "001833"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId404
	# line in RSA: <agent>: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId404" {
		dissect {
			mapping => { "message" => "%{agent}: %{severity}: %{event_description}" }
			id => "msgParserId404"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId586
	# line in RSA: { <agent>[<process_id>]: | <agent>: } [<service>.<severity>] - {{- -} <event_description>
	else if [logstash][msgparser][id] == "msgParserId586" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[(?<service>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\-[\s]+\{\-[\s]+\-\}[\s]+(?<event_description>.*)$" }
			id => "msgParserId586"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId587
	# line in RSA: <agent>[<process_id>]: <event_time_string> INFO <event_description>
	else if [logstash][msgparser][id] == "msgParserId587" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} INFO %{event_description}" }
			id => "msgParserId587"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId588
	# line in RSA: <agent>: SID=<sessionid> MANDANT=<id> USER=<username> SPOOL=<group_object> { <shost>-<event_time_string> | <shost>} <c_username>
	else if [logstash][msgparser][id] == "msgParserId588" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+SID=(?<sessionid>[^\s]*)[\s]+MANDANT=(?<id>[^\s]*)[\s]+USER=(?<username>[^\s]*)[\s]+SPOOL=(?<group_object>[^\s]*)[\s]+([\s]*(?<shost>[^\-]*)\-(?<event_time_string>[^\s]*)[\s]+|[\s]*(?<shost>[^\s]*))[\s]+(?<c_username>.*)$" }
			id => "msgParserId588"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId589
	# line in RSA: <agent>[<process_id>]: <application> <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId589" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application} %{severity}: %{event_description}" }
			id => "msgParserId589"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId590
	# line in RSA: Floppy drive(s): <event_description>
	else if [logstash][msgparser][id] == "msgParserId590" {
		dissect {
			mapping => { "message" => "Floppy drive(s): %{event_description}" }
			id => "msgParserId590"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId591
	# line in RSA: Font Server[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId591" {
		dissect {
			mapping => { "message" => "Font Server[%{process_id}]: %{event_description}" }
			id => "msgParserId591"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId592
	# line in RSA: <agent>: <event_description>: <filename>
	else if [logstash][msgparser][id] == "msgParserId592" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{filename}" }
			id => "msgParserId592"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId593
	# line in RSA: <agent>[<process_id>]: <event_description> due to signal <resultcode>
	else if [logstash][msgparser][id] == "msgParserId593" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} due to signal %{resultcode}" }
			id => "msgParserId593"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Found" {
		# MESSAGE 02752
		# line in RSA: <agent> PCI device <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PCI device %{info}" }
				id => "message-02752"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Found PCI device"
					"[event][id]" => "02752"
					"[rsa][message][id1]" => "02752"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02752:01
		# line in RSA: Found <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Found %{event_description}: %{info}" }
				id => "message-02752:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02752:01"
					"[rsa][message][id1]" => "02752:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId596
	# line in RSA: <agent>[<process_id>]: [<severity>]: interface: <interface>, <info>
	else if [logstash][msgparser][id] == "msgParserId596" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]: interface: %{interface}, %{info}" }
			id => "msgParserId596"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId597
	# line in RSA: <agent>: SLOT: <fld1> SEVERITY: <severity> ENTITY/EVENT CODE: <resultcode> <info>
	else if [logstash][msgparser][id] == "msgParserId597" {
		dissect {
			mapping => { "message" => "%{agent}: SLOT: %{fld1} SEVERITY: %{severity} ENTITY/EVENT CODE: %{resultcode} %{info}" }
			id => "msgParserId597"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId598
	# line in RSA: Freeing SMP alternatives: <event_description>
	else if [logstash][msgparser][id] == "msgParserId598" {
		dissect {
			mapping => { "message" => "Freeing SMP alternatives: %{event_description}" }
			id => "msgParserId598"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId599
	# line in RSA: { <agent>[<process_id>]: | <agent>: } *** <event_description> *** <application>(): <result>
	else if [logstash][msgparser][id] == "msgParserId599" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\*\*\*[\s]+(?<event_description>[^\s]*)[\s]+\*\*\*[\s]+(?<application>[^\(]*)\(\):[\s]+(?<result>.*)$" }
			id => "msgParserId599"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId600
	# line in RSA: <agent>[<process_id>]: <event_description>. There was an error connecting <url> via <protocol> proxy <fld1> (<result>)
	else if [logstash][msgparser][id] == "msgParserId600" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}. There was an error connecting %{url} via %{protocol} proxy %{fld1} (%{result})" }
			id => "msgParserId600"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ftp" {
		# MESSAGE 00288
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00288"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password"
					"[event][id]" => "00288"
					"[rsa][message][id1]" => "00288"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00288:01
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld1> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld1} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00288:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00288:01"
					"[rsa][message][id1]" => "00288:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00288:02
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-00288:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "session opened"
					"[event][id]" => "00288:02"
					"[rsa][message][id1]" => "00288:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00288:03
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00288:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed"
					"[event][id]" => "00288:03"
					"[rsa][message][id1]" => "00288:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00288:04
		# line in RSA: <agent>[<process_id>]: ftp: <action> user <username>, host <hostname>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ftp: %{action} user %{username}, host %{hostname}, %{info}" }
				id => "message-00288:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00288:04"
					"[rsa][message][id1]" => "00288:04"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00288:05
		# line in RSA: <agent>[<process_id>]: Failed dlopen: <filename>: <info>. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed dlopen: %{filename}: %{info}. %{result}" }
				id => "message-00288:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed dlopen"
					"[event][id]" => "00288:05"
					"[rsa][message][id1]" => "00288:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03453
		# line in RSA: <agent>(pam_unix)[<process_id>]: could not identify user (from getpwnam(<fld1>))
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(pam_unix)[%{process_id}]: could not identify user (from getpwnam(%{fld1}))" }
				id => "message-03453"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not identify user"
					"[event][id]" => "03453"
					"[rsa][message][id1]" => "03453"
					"[event][categoryid]" => "1803030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ftpd" {
		# MESSAGE 00045
		# line in RSA: <agent>[<process_id>]: FTP LOGIN FROM { <shost> [<saddr>], <username> | <saddr>, <shost> (<username>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+FTP[\s]+LOGIN[\s]+FROM[\s]+([\s]*(?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\],[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<saddr>[^,]*),[\s]+(?<shost>[^\s]*)[\s]+\((?<username>[^\)]*)\)[\s]+)$" }
				id => "message-00045"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "FTP Login"
					"[event][id]" => "00045"
					"[rsa][message][id1]" => "00045"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00045:02
		# line in RSA: <agent>[<process_id>]: connection from {<saddr> (<shost>)|<shost>} at <event_time_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+connection[\s]+from[\s]+((?<saddr>[^\s]*)[\s]+\((?<shost>[^\)]*)\)|(?<shost>[^\s]*))[\s]+at[\s]+(?<event_time_string>.*)$" }
				id => "message-00045:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
					"[event][id]" => "00045:02"
					"[rsa][message][id1]" => "00045:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00045:05
		# line in RSA: <agent>[<process_id>]: FTP LOGIN FROM <shost>, <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{shost}, %{fld1}" }
				id => "message-00045:05"
				add_field => {
				"event_description" => "FTP LOGIN"
					"[event][id]" => "00045:05"
					"[rsa][message][id1]" => "00045:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00045:03
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-00045:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00045:03"
					"[rsa][message][id1]" => "00045:03"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00045:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): { session closed for user <username> | session closed }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+([\s]*session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*session[\s]+closed[\s]+)$" }
				id => "message-00045:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "00045:01"
					"[rsa][message][id1]" => "00045:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00045:04
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): Couldn't open <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+Couldn't[\s]+open[\s]+(?<filename>.*)$" }
				id => "message-00045:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot open file"
					"[event][id]" => "00045:04"
					"[rsa][message][id1]" => "00045:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00045:06
		# line in RSA: <agent>[<process_id>]: <fld1>: EXPORT file local <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: EXPORT file local %{filename}" }
				id => "message-00045:06"
				add_field => {
				"event_description" => "EXPORT file local"
					"[event][id]" => "00045:06"
					"[rsa][message][id1]" => "00045:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId613
	# line in RSA: <agent>: connect() failed to <daddr> on port <sport>: errno <resultcode>
	else if [logstash][msgparser][id] == "msgParserId613" {
		dissect {
			mapping => { "message" => "%{agent}: connect() failed to %{daddr} on port %{sport}: errno %{resultcode}" }
			id => "msgParserId613"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect failed on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gcstartup" {
		# MESSAGE 001323
		# line in RSA: <agent>: export <param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: export %{param}" }
				id => "message-001323"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "export config parameter"
					"[event][id]" => "001323"
					"[rsa][message][id1]" => "001323"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001324
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001324"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001324"
					"[rsa][message][id1]" => "001324"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId615
	# line in RSA: <agent>: <fld1> Failed to parse prefs: <filename>
	else if [logstash][msgparser][id] == "msgParserId615" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} Failed to parse prefs: %{filename}" }
			id => "msgParserId615"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gdm" {
		# MESSAGE 00006
		# line in RSA: <agent>[<process_id>]: session opened for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00006"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00006"
					"[rsa][message][id1]" => "00006"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:03
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00006:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00006:03"
					"[rsa][message][id1]" => "00006:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:02
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00006:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00006:02"
					"[rsa][message][id1]" => "00006:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00006:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00006:01"
					"[rsa][message][id1]" => "00006:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gdm-autologin" {
		# MESSAGE 00295
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00295"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00295"
					"[rsa][message][id1]" => "00295"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00295:01
		# line in RSA: <agent>[<process_id>]: session opened for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00295:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00295:01"
					"[rsa][message][id1]" => "00295:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId619
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId619" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId619"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gdm-session-worker" {
		# MESSAGE 001357
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): requirement "user ingroup nopasswdlogin" not met by user "<username>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+requirement[\s]+\"user[\s]+ingroup[\s]+nopasswdlogin\"[\s]+not[\s]+met[\s]+by[\s]+user[\s]+\"(?<username>[^\"]*)\"$" }
				id => "message-001357"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "user ingroup nopasswdlogin not met by user"
					"[event][id]" => "001357"
					"[rsa][message][id1]" => "001357"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001356
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): user '<username>' { OK | granted access }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+user[\s]+'(?<username>[^']*)'[\s]+([\s]*OK[\s]+|[\s]*granted[\s]+access[\s]+)$" }
				id => "message-001356"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "001356"
					"[rsa][message][id1]" => "001356"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001355
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-001355"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "001355"
					"[rsa][message][id1]" => "001355"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001354
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-001354"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "001354"
					"[rsa][message][id1]" => "001354"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001353
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-001353"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "001353"
					"[rsa][message][id1]" => "001353"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001358
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+(?<event_description>.*)$" }
				id => "message-001358"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001358"
					"[rsa][message][id1]" => "001358"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001359
		# line in RSA: <agent>: gkr-pam: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+gkr\-pam:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001359"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "gkr-pam error"
					"[event][id]" => "001359"
					"[rsa][message][id1]" => "001359"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001360
		# line in RSA: <agent>[<process_id>]: WARNING: Unable to load file '<filename>': <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARNING: Unable to load file '%{filename}': %{result}" }
				id => "message-001360"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to load file"
					"[event][id]" => "001360"
					"[rsa][message][id1]" => "001360"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001361
		# line in RSA: <agent>[<process_id>]: GLib-GObject-CRITICAL: g_value_get_boolean: assertion `<filename>' failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: GLib-GObject-CRITICAL: g_value_get_boolean: assertion `%{filename}' failed" }
				id => "message-001361"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "g_value_get_boolean assertion failed"
					"[event][id]" => "001361"
					"[rsa][message][id1]" => "001361"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001283
		# line in RSA: <agent>[<process_id>]: PAM pam_putenv: NULL pam handle passed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM pam_putenv: NULL pam handle passed" }
				id => "message-001283"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM pam_putenv: NULL pam handle passe"
					"[event][id]" => "001283"
					"[rsa][message][id1]" => "001283"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001284
		# line in RSA: <agent>[<process_id>]: <severity>: gdm_session_worker_process_pam_message: PAM_TEXT_INFO: <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: gdm_session_worker_process_pam_message: PAM_TEXT_INFO: %{action}." }
				id => "message-001284"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "001284"
					"[rsa][message][id1]" => "001284"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001505
		# line in RSA: <agent>[<process_id>]: last message repeated <dclass_counter1> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: last message repeated %{dclass_counter1} times" }
				id => "message-001505"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "last message repeated"
					"[event][id]" => "001505"
					"[rsa][message][id1]" => "001505"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gdm-simple-greeter" {
		# MESSAGE 001280
		# line in RSA: <agent>[<process_id>]: libglade-<severity>: Unexpected element <fld1> inside <fld2>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: libglade-%{severity}: Unexpected element %{fld1} inside %{fld2}." }
				id => "message-001280"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001280"
					"[rsa][message][id1]" => "001280"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001281
		# line in RSA: <agent>[<process_id>]: Gtk-<severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Gtk-%{severity}: %{event_description}" }
				id => "message-001281"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001281"
					"[rsa][message][id1]" => "001281"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gdm-simple-slave" {
		# MESSAGE 001282
		# line in RSA: <agent>[<process_id>]: GLib-GObject-<severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: GLib-GObject-%{severity}: %{event_description}" }
				id => "message-001282"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001282"
					"[rsa][message][id1]" => "001282"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001362
		# line in RSA: <agent>[<process_id>]: WARNING: Unable to load file '<filename>': <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARNING: Unable to load file '%{filename}': %{result}" }
				id => "message-001362"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to load file"
					"[event][id]" => "001362"
					"[rsa][message][id1]" => "001362"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gdmgreeter" {
		# MESSAGE 01315
		# line in RSA: <agent>[<process_id>]: Unexpected greeter command received: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unexpected greeter command received: %{fld1}" }
				id => "message-01315"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unexpected command"
					"[event][id]" => "01315"
					"[rsa][message][id1]" => "01315"
					"[event][categoryid]" => "1603050000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01315:01
		# line in RSA: <agent>[<process_id>]: WARNING: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARNING: %{event_description}: %{info}" }
				id => "message-01315:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01315:01"
					"[rsa][message][id1]" => "01315:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId633
	# line in RSA: <agent>: Mounting GFS filesystems: <disposition>
	else if [logstash][msgparser][id] == "msgParserId633" {
		dissect {
			mapping => { "message" => "%{agent}: Mounting GFS filesystems: %{disposition}" }
			id => "msgParserId633"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Mounting GFS filesystems"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gfs_controld" {
		# MESSAGE 002087
		# line in RSA: { <agent>[<process_id>]: | <agent>: } connect to ccs error <result>, <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+connect[\s]+to[\s]+ccs[\s]+error[\s]+(?<result>[^,]*),[\s]+(?<info>.*)$" }
				id => "message-002087"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect to ccs error"
					"[event][id]" => "002087"
					"[rsa][message][id1]" => "002087"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002088
		# line in RSA: { <agent>[<process_id>]: | <agent>: } cluster is down, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+cluster[\s]+is[\s]+down,[\s]+(?<result>.*)$" }
				id => "message-002088"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cluster is down"
					"[event][id]" => "002088"
					"[rsa][message][id1]" => "002088"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001837
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001837"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001837"
					"[rsa][message][id1]" => "001837"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId634
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
	else if [logstash][msgparser][id] == "msgParserId634" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId634"
			add_field => {
				"hostname" => "%{hhost}"
				"result" => "apache logs"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId635
	# line in RSA: <agent>: (<username>) <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId635" {
		dissect {
			mapping => { "message" => "%{agent}: (%{username}) %{event_description}: %{info}" }
			id => "msgParserId635"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gnome-screensaver-dialog" {
		# MESSAGE 001326
		# line in RSA: <agent>: couldn't connect to gnome-keyring-daemon socket at: <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: couldn't connect to gnome-keyring-daemon socket at: %{filename}: %{result}" }
				id => "message-001326"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "couldn't connect to gnome-keyring-daemon socket"
					"[event][id]" => "001326"
					"[rsa][message][id1]" => "001326"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001491
		# line in RSA: <agent>: <process>: couldn't unlock the login keyring
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: couldn't unlock the login keyring" }
				id => "message-001491"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "couldn't unlock the login keyring"
					"[event][id]" => "001491"
					"[rsa][message][id1]" => "001491"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001371
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-001371"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "001371"
					"[rsa][message][id1]" => "001371"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001627
		# line in RSA: <agent>: <process>[<process_id>]: authentication succeeds for '<username>' (<user_fullname>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: authentication succeeds for '%{username}' (%{user_fullname})" }
				id => "message-001627"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "authentication successful"
					"[event][id]" => "001627"
					"[rsa][message][id1]" => "001627"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001372
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): user '<username>' { OK | granted access }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+user[\s]+'(?<username>[^']*)'[\s]+([\s]*OK[\s]+|[\s]*granted[\s]+access[\s]+)$" }
				id => "message-001372"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "001372"
					"[rsa][message][id1]" => "001372"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001373
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+(?<event_description>.*)$" }
				id => "message-001373"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001373"
					"[rsa][message][id1]" => "001373"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gnome-session" {
		# MESSAGE 001363
		# line in RSA: { <agent>[<process_id>]: | <agent>: } WARNING: Could not launch application '<application>': Unable to start application: <info> (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+WARNING:[\s]+Could[\s]+not[\s]+launch[\s]+application[\s]+'(?<application>[^']*)':[\s]+Unable[\s]+to[\s]+start[\s]+application:[\s]+(?<info>[^\s]*)[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-001363"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not launch application"
					"[event][id]" => "001363"
					"[rsa][message][id1]" => "001363"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001363:01
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001363:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001363:01"
					"[rsa][message][id1]" => "001363:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "GoAgent" {
		# MESSAGE 001319
		# line in RSA: <agent>[<process_id>]: <interface>: <username> Password change (<fld1>) Failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: %{username} Password change (%{fld1}) Failed" }
				id => "message-001319"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "password change failure"
					"[event][id]" => "001319"
					"[rsa][message][id1]" => "001319"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001320
		# line in RSA: <agent>[<process_id>]: <interface>: <username> Password change (<fld1>) OK
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: %{username} Password change (%{fld1}) OK" }
				id => "message-001320"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password successfully changed"
					"[event][id]" => "001320"
					"[rsa][message][id1]" => "001320"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001321
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <interface>: Agent Registered ... <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<interface>[^:]*):[\s]+Agent[\s]+Registered[\s]+\.\.\.[\s]+(?<result>.*)$" }
				id => "message-001321"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Agent Registered"
					"[event][id]" => "001321"
					"[rsa][message][id1]" => "001321"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId642
	# line in RSA: <agent>: [<application>] Error at <filename>. Error code [<result>] (<info>)
	else if [logstash][msgparser][id] == "msgParserId642" {
		dissect {
			mapping => { "message" => "%{agent}: [%{application}] Error at %{filename}. Error code [%{result}] (%{info})" }
			id => "msgParserId642"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gpasswd" {
		# MESSAGE 000759
		# line in RSA: <agent>[<process_id>]: add member <username> to group <group> by <administrator>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: add member %{username} to group %{group} by %{administrator}" }
				id => "message-000759"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "add member to group"
					"[event][id]" => "000759"
					"[rsa][message][id1]" => "000759"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001379
		# line in RSA: <agent>[<process_id>]: user <username> added by <administrator> to group <group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: user %{username} added by %{administrator} to group %{group}" }
				id => "message-001379"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "add member to group"
					"[event][id]" => "001379"
					"[rsa][message][id1]" => "001379"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002189
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  cannot open <directory>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+cannot[\s]+open[\s]+(?<directory>.*)$" }
				id => "message-002189"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot open file or directory"
					"[event][id]" => "002189"
					"[rsa][message][id1]" => "002189"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "groupadd" {
		# MESSAGE 00149:01
		# line in RSA: <agent>[<process_id>]: new group: name=<event_description>, gid=91
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new group: name=%{event_description}, gid=91" }
				id => "message-00149:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "00149:01"
					"[rsa][message][id1]" => "00149:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE groupadd
		# line in RSA: <agent>[<process_id>]: new group: name=<group>, GID=<groupid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new group: name=%{group}, GID=%{groupid}" }
				id => "message-groupadd"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
					"[event][id]" => "groupadd"
					"[rsa][message][id1]" => "groupadd"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE groupadd:01
		# line in RSA: <agent>[<process_id>]: group added to <filename>: {name=<group>, GID=<groupid>|name=<group>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+group[\s]+added[\s]+to[\s]+(?<filename>[^:]*):[\s]+(name=(?<group>[^,]*),[\s]+GID=(?<groupid>.*)|name=(?<group>.*))$" }
				id => "message-groupadd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
					"[event][id]" => "groupadd:01"
					"[rsa][message][id1]" => "groupadd:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00149
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00149"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "00149"
					"[rsa][message][id1]" => "00149"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "groupdel" {
		# MESSAGE 00111:01
		# line in RSA: <agent>[<process_id>]: remove group { ` | ' } <group>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+remove[\s]+group[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)'$" }
				id => "message-00111:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "00111:01"
					"[rsa][message][id1]" => "00111:01"
					"[event][categoryid]" => "1402010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00111
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00111"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "00111"
					"[rsa][message][id1]" => "00111"
					"[event][categoryid]" => "1402010100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "groupmod" {
		# MESSAGE 000435
		# line in RSA: <agent>[<process_id>]: change group { ` | ' } <change_old>' to { ` | ' } <change_new>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+change[\s]+group[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_old>[^']*)'[\s]+to[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_new>[^']*)'$" }
				id => "message-000435"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"change_attribute" => "Group Name"
				"event_description" => "groupmod-change group username"
					"[event][id]" => "000435"
					"[rsa][message][id1]" => "000435"
					"[event][categoryid]" => "1402010300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000435:01
		# line in RSA: <agent>[<process_id>]: change { GID | gid } for { ` | ' } <change_old>' to <change_new>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+change[\s]+([\s]*GID[\s]+|[\s]*gid[\s]+)[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_old>[^']*)'[\s]+to[\s]+(?<change_new>.*)$" }
				id => "message-000435:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"change_attribute" => "Group ID"
					"[event][id]" => "000435:01"
					"[rsa][message][id1]" => "000435:01"
					"[event][categoryid]" => "1402010300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000435:02
		# line in RSA: <agent>[<process_id>]: group changed in <filename> (group <change_old>, new name: <change_new>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group changed in %{filename} (group %{change_old}, new name: %{change_new})" }
				id => "message-000435:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"change_attribute" => "Group Name"
				"event_description" => "groupmod-change group username"
					"[event][id]" => "000435:02"
					"[rsa][message][id1]" => "000435:02"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 000435:03
		# line in RSA: <agent>[<process_id>]: group changed in <filename> (group <change_old>, new gid: <change_new>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group changed in %{filename} (group %{change_old}, new gid: %{change_new})" }
				id => "message-000435:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"change_attribute" => "Group Name"
				"event_description" => "groupmod-change group username"
					"[event][id]" => "000435:03"
					"[rsa][message][id1]" => "000435:03"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 000435:04
		# line in RSA: <agent>[<process_id>]: group changed in <filename> (group <group>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group changed in %{filename} (group %{group})" }
				id => "message-000435:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"change_attribute" => "Group Name"
				"event_description" => "groupmod-group changed"
					"[event][id]" => "000435:04"
					"[rsa][message][id1]" => "000435:04"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 000435:05
		# line in RSA: <agent>[<process_id>]: failed to change /etc/group (group <group>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: failed to change /etc/group (group %{group})" }
				id => "message-000435:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"change_attribute" => "Group Name"
					"[event][id]" => "000435:05"
					"[rsa][message][id1]" => "000435:05"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "gssftp(pam_unix)" {
		# MESSAGE 001147
		# line in RSA: <agent>[<process_id>]: auth could not identify password for [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: auth could not identify password for [%{username}]" }
				id => "message-001147"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "001147"
					"[rsa][message][id1]" => "001147"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001148
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-001148"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "001148"
					"[rsa][message][id1]" => "001148"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "guard_tap" {
		# MESSAGE 01221
		# line in RSA: <agent>[<process_id>]: Opening pseudo device <device> <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Opening pseudo device %{device} %{disposition}" }
				id => "message-01221"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01221"
					"[rsa][message][id1]" => "01221"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002173
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  { <process>: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002173"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002173"
					"[rsa][message][id1]" => "002173"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId661
	# line in RSA: <action>[<shost>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId661" {
		dissect {
			mapping => { "message" => "%{action}[%{shost}] %{event_description}" }
			id => "msgParserId661"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gui_s_mgr" {
		# MESSAGE 001709
		# line in RSA: <agent>: (<process>) session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{process}) session opened for user %{username} by (uid=%{uid})" }
				id => "message-001709"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "session opened for user"
					"[event][id]" => "001709"
					"[rsa][message][id1]" => "001709"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001710
		# line in RSA: <agent>: (<process>) session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{process}) session closed for user %{username}" }
				id => "message-001710"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed"
					"[event][id]" => "001710"
					"[rsa][message][id1]" => "001710"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002074
		# line in RSA: <agent>: (<process>) authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{process}) authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-002074"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "002074"
					"[rsa][message][id1]" => "002074"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002075
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002075"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002075"
					"[rsa][message][id1]" => "002075"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId665
	# line in RSA: <agent>[<process_id>: User <username> : { Executing <action> | <action> }
	else if [logstash][msgparser][id] == "msgParserId665" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^:]*):[\s]+User[\s]+(?<username>[^\s]*)[\s]+:[\s]+([\s]*Executing[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
			id => "msgParserId665"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User executing command as admin"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gvea0556" {
		# MESSAGE 001940
		# line in RSA: <agent>[<process_id>: User <username> : { Executing <action> | <action> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^:]*):[\s]+User[\s]+(?<username>[^\s]*)[\s]+:[\s]+([\s]*Executing[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
				id => "message-001940"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User executing command as admin"
					"[event][id]" => "001940"
					"[rsa][message][id1]" => "001940"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001986
		# line in RSA: <agent>[<process_id>: Tripwire script : <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}: Tripwire script : %{action}" }
				id => "message-001986"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Tripwire script"
					"[event][id]" => "001986"
					"[rsa][message][id1]" => "001986"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "HMC" {
		# MESSAGE 03499
		# line in RSA: <agent>: SACM accepted connection from client H: /<saddr> P: <sport> LP: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SACM accepted connection from client H: /%{saddr} P: %{sport} LP: %{fld1}" }
				id => "message-03499"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03499"
					"[rsa][message][id1]" => "03499"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03499:02
		# line in RSA: <agent>:[EVENT <id>]:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:[EVENT %{id}]:%{event_description}" }
				id => "message-03499:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03499:02"
					"[rsa][message][id1]" => "03499:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03499:01
		# line in RSA: <agent>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-03499:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03499:01"
					"[rsa][message][id1]" => "03499:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Had" {
		# MESSAGE 00346
		# line in RSA: <agent>[<process_id>]: VCS ERROR <version> { [<event_type>] <event_description> | (<event_type>) <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+VCS[\s]+ERROR[\s]+(?<version>[^\s]*)[\s]+([\s]*\[(?<event_type>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*\((?<event_type>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-00346"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "00346"
					"[rsa][message][id1]" => "00346"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00346:01
		# line in RSA: <agent>[<process_id>]: VCS CRITICAL <version> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS CRITICAL %{version} %{event_description}" }
				id => "message-00346:01"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "CRITICAL"
					"[event][id]" => "00346:01"
					"[rsa][message][id1]" => "00346:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00346:02
		# line in RSA: <agent>[<process_id>]: VCS NOTICE <version> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS NOTICE %{version} %{event_description}" }
				id => "message-00346:02"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "NOTICE"
					"[event][id]" => "00346:02"
					"[rsa][message][id1]" => "00346:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00346:03
		# line in RSA: <agent>[<process_id>]: VCS INFO <version> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS INFO %{version} %{event_description}" }
				id => "message-00346:03"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "00346:03"
					"[rsa][message][id1]" => "00346:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "hcd" {
		# MESSAGE 02746
		# line in RSA: <agent>: <severity>: <fld1>: <process> exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: %{fld1}: %{process} exiting" }
				id => "message-02746"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "exiting"
					"[event][id]" => "02746"
					"[rsa][message][id1]" => "02746"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02746:01
		# line in RSA: <agent>: <process> shutdown succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process} shutdown succeeded" }
				id => "message-02746:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Shutdown succeded"
					"[event][id]" => "02746:01"
					"[rsa][message][id1]" => "02746:01"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02746:02
		# line in RSA: <agent>: <process> startup succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process} startup succeeded" }
				id => "message-02746:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Startup succeded"
					"[event][id]" => "02746:02"
					"[rsa][message][id1]" => "02746:02"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId677
	# line in RSA: <agent>: <application> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId677" {
		dissect {
			mapping => { "message" => "%{agent}: %{application} - %{event_description}" }
			id => "msgParserId677"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId678
	# line in RSA: <agent> bounce pool size: <filename_size>
	else if [logstash][msgparser][id] == "msgParserId678" {
		dissect {
			mapping => { "message" => "%{agent} bounce pool size: %{filename_size}" }
			id => "msgParserId678"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId679
	# line in RSA: <username>: [<event_type>] : <node> : <event_description>
	else if [logstash][msgparser][id] == "msgParserId679" {
		dissect {
			mapping => { "message" => "%{username}: [%{event_type}] : %{node} : %{event_description}" }
			id => "msgParserId679"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId680
	# line in RSA: <fld13>HOST: <hostname>; Comp: <fld1>; Sev: <severity>; Evt: <fld2>; Time: <fld3> <fld4> <timezone>; Msg: <event_description>
	else if [logstash][msgparser][id] == "msgParserId680" {
		dissect {
			mapping => { "message" => "%{fld13}HOST: %{hostname}; Comp: %{fld1}; Sev: %{severity}; Evt: %{fld2}; Time: %{fld3} %{fld4} %{timezone}; Msg: %{event_description}" }
			id => "msgParserId680"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Hostd" {
		# MESSAGE 002120
		# line in RSA: <agent>: [<info>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{info}] %{event_description}" }
				id => "message-002120"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002120"
					"[rsa][message][id1]" => "002120"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002613
		# line in RSA: <agent>: <fld1> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{event_description}" }
				id => "message-002613"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002613"
					"[rsa][message][id1]" => "002613"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "hp" {
		# MESSAGE 002091
		# line in RSA: <agent>: unable to open <filename>: <result>: <application>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: unable to open %{filename}: %{result}: %{application}" }
				id => "message-002091"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to open file"
					"[event][id]" => "002091"
					"[rsa][message][id1]" => "002091"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002092
		# line in RSA: <agent>: unable to connect <protocol> socket <sessionid>: <result>: <application>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: unable to connect %{protocol} socket %{sessionid}: %{result}: %{application}" }
				id => "message-002092"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to connect socket"
					"[event][id]" => "002092"
					"[rsa][message][id1]" => "002092"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId685
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId685" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId685"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "httpauth" {
		# MESSAGE 002288
		# line in RSA: <agent>: <process>: No RADIUS server found in configuration file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: No RADIUS server found in configuration file %{filename}" }
				id => "message-002288"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "No RADIUS server found in configuration file"
					"[event][id]" => "002288"
					"[rsa][message][id1]" => "002288"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002448
		# line in RSA: <agent>: <process>: <action>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: %{action}: %{result}" }
				id => "message-002448"
				add_field => {
					"[event][id]" => "002448"
					"[rsa][message][id1]" => "002448"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE httpauth:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-httpauth:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "httpauth:03"
					"[rsa][message][id1]" => "httpauth:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId688
	# line in RSA: <agent>: Incorrect password for user <username>
	else if [logstash][msgparser][id] == "msgParserId688" {
		dissect {
			mapping => { "message" => "%{agent}: Incorrect password for user %{username}" }
			id => "msgParserId688"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Incorrect password for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lighttpd" {
		# MESSAGE lighttpd_stop
		# line in RSA: <agent>[<process_id>] <fld35> server stopped by UID = 0 PID = 10772
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}] %{fld35} server stopped by UID = 0 PID = 10772" }
				id => "message-lighttpd_stop"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"event_description" => "Lighttpd server stopped"
				"service" => "lighttpd"
					"[event][id]" => "lighttpd_stop"
					"[rsa][message][id1]" => "lighttpd_stop"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE lighttpd_start
		# line in RSA: <agent>[<process_id>] <fld35> server started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}] %{fld35} server started" }
				id => "message-lighttpd_start"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"event_description" => "Lighttpd server started."
				"service" => "lighttpd"
					"[event][id]" => "lighttpd_start"
					"[rsa][message][id1]" => "lighttpd_start"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd" {
		# MESSAGE 00117_01
		# line in RSA: <agent>[<process_id>]: [<severity>] caught SIGTERM, shutting down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] caught SIGTERM, shutting down" }
				id => "message-00117_01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"event_description" => "Httpd server stopping"
				"service" => "httpd"
					"[event][id]" => "00117_01"
					"[rsa][message][id1]" => "00117_01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00117_02
		# line in RSA: <agent>[<process_id>]: [<severity>] <version> configured -- resuming normal operations
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] %{version} configured -- resuming normal operations" }
				id => "message-00117_02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"event_description" => "Httpd server starting"
				"service" => "httpd"
					"[event][id]" => "00117_02"
					"[rsa][message][id1]" => "00117_02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00117
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00117"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00117"
					"[rsa][message][id1]" => "00117"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId693
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId693" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId693"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Process"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd2" {
		# MESSAGE 002289
		# line in RSA: <agent>: HTTP login from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP login from %{saddr} as %{username}" }
				id => "message-002289"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "HTTP login"
					"[event][id]" => "002289"
					"[rsa][message][id1]" => "002289"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002413
		# line in RSA: <agent>: HTTP logout from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP logout from %{saddr} as %{username}" }
				id => "message-002413"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "HTTP logout"
					"[event][id]" => "002413"
					"[rsa][message][id1]" => "002413"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002449
		# line in RSA: <agent>: Cannot get pid
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Cannot get pid" }
				id => "message-002449"
				add_field => {
				"event_description" => "Cannot get pid"
					"[event][id]" => "002449"
					"[rsa][message][id1]" => "002449"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002535
		# line in RSA: <agent>: Received URL with out session information, Redirecting to login: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received URL with out session information, Redirecting to login: %{fld1}" }
				id => "message-002535"
				add_field => {
				"event_description" => "Received URL with out session information"
					"[event][id]" => "002535"
					"[rsa][message][id1]" => "002535"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002536
		# line in RSA: <agent>: Session had expired for user: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Session had expired for user: %{username}" }
				id => "message-002536"
				add_field => {
				"event_description" => "Session had expired for user"
					"[event][id]" => "002536"
					"[rsa][message][id1]" => "002536"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002537
		# line in RSA: <agent>: HTTP login denied from <saddr> for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: HTTP login denied from %{saddr} for %{username}" }
				id => "message-002537"
				add_field => {
				"event_description" => "HTTP login denied"
					"[event][id]" => "002537"
					"[rsa][message][id1]" => "002537"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId700
	# line in RSA: <agent>: <protocol>: <action> "<dn>" (<result>)
	else if [logstash][msgparser][id] == "msgParserId700" {
		dissect {
			mapping => { "message" => "%{agent}: %{protocol}: %{action} \"%{dn}\" (%{result})" }
			id => "msgParserId700"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "httpstkd" {
		# MESSAGE 01006:01
		# line in RSA: <agent>[<process_id>]: DATE=<fld1> <timezone> HOST=<hostname> PROG=<process> LVL=<fld2> SRC.IP="<saddr>" SRC.PORT=<sport> PROT="<protocol>" MSG=<event_description> STAT="<web_method>" CMD="<action>" DUR=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: DATE=%{fld1} %{timezone} HOST=%{hostname} PROG=%{process} LVL=%{fld2} SRC.IP=\"%{saddr}\" SRC.PORT=%{sport} PROT=\"%{protocol}\" MSG=%{event_description} STAT=\"%{web_method}\" CMD=\"%{action}\" DUR=%{fld3}" }
				id => "message-01006:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01006:01"
					"[rsa][message][id1]" => "01006:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMdHHms" ] }
			}
		}
		# MESSAGE 01006
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01006"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01006"
					"[rsa][message][id1]" => "01006"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "i2c-piix4.o" {
		# MESSAGE 02747
		# line in RSA: <agent>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{result}" }
				id => "message-02747"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02747"
					"[rsa][message][id1]" => "02747"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 02747:01
		# line in RSA: <agent> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} %{result}" }
				id => "message-02747:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02747:01"
					"[rsa][message][id1]" => "02747:01"
					"[event][categoryid]" => "1601000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId704
	# line in RSA: <agent> <info>
	else if [logstash][msgparser][id] == "msgParserId704" {
		dissect {
			mapping => { "message" => "%{agent} %{info}" }
			id => "msgParserId704"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "i2c-proc.o"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "IBM" {
		# MESSAGE 001237:01
		# line in RSA: <agent>[<process_id>]:<event_source>Processing dump event "<event_type>",<info>- please wait.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{event_source}Processing dump event \"%{event_type}\",%{info}- please wait." }
				id => "message-001237:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001237:01"
					"[rsa][message][id1]" => "001237:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03710
		# line in RSA: <agent>: Detected system support for IPMI and <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Detected system support for IPMI and %{result}" }
				id => "message-03710"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Detected system support for IPMI"
					"[event][id]" => "03710"
					"[rsa][message][id1]" => "03710"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001237
		# line in RSA: <agent>[<process_id>]: <event_source> JVM requested <event_type> using '<filename>' in response to an event
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source} JVM requested %{event_type} using '%{filename}' in response to an event" }
				id => "message-001237"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "JVM requested dump using file"
					"[event][id]" => "001237"
					"[rsa][message][id1]" => "001237"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001237:02
		# line in RSA: <agent>[<process_id>]: <event_source> <directory>setting "<fld1>"<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source} %{directory}setting \"%{fld1}\"%{info}" }
				id => "message-001237:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001237:02"
					"[rsa][message][id1]" => "001237:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001237:03
		# line in RSA: <agent>[<process_id>]: <event_source>Error in System dump: <fld1> pid = <fld9> was not found. <fld2> "<filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}Error in System dump: %{fld1} pid = %{fld9} was not found. %{fld2} \"%{filename}\"" }
				id => "message-001237:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error in System dump "
					"[event][id]" => "001237:03"
					"[rsa][message][id1]" => "001237:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId710
	# line in RSA: <agent>: <filename>: <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId710" {
		dissect {
			mapping => { "message" => "%{agent}: %{filename}: %{info}: %{event_description}" }
			id => "msgParserId710"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId711
	# line in RSA: <agent>): (<fld1>@<hostip>) [<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId711" {
		dissect {
			mapping => { "message" => "%{agent}): (%{fld1}@%{hostip}) [%{severity}] %{event_description}" }
			id => "msgParserId711"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId712
	# line in RSA: <agent>(<application>)[<process_id>]: <event_description>; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId712" {
		dissect {
			mapping => { "message" => "%{agent}(%{application})[%{process_id}]: %{event_description}; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId712"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId713
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId713" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId713"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId714
	# line in RSA: <agent>: <process> { startup succeeded | succeeded }
	else if [logstash][msgparser][id] == "msgParserId714" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<process>[^\s]*)[\s]+([\s]*startup[\s]+succeeded[\s]+|[\s]*succeeded[\s]+)$" }
			id => "msgParserId714"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "program startup successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId715
	# line in RSA: <agent>: <process> startup succeeded
	else if [logstash][msgparser][id] == "msgParserId715" {
		dissect {
			mapping => { "message" => "%{agent}: %{process} startup succeeded" }
			id => "msgParserId715"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "program startup successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "icinga" {
		# MESSAGE 002343
		# line in RSA: <agent>: Auto-save of retention data completed successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Auto-save of retention data completed successfully" }
				id => "message-002343"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Auto-save of retention data completed successfully"
					"[event][id]" => "002343"
					"[rsa][message][id1]" => "002343"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002344
		# line in RSA: <agent>: error executing command '<action>': <result>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: error executing command '%{action}': %{result}. %{info}" }
				id => "message-002344"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error executing command"
					"[event][id]" => "002344"
					"[rsa][message][id1]" => "002344"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002345
		# line in RSA: <agent>: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: %{info}" }
				id => "message-002345"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002345"
					"[rsa][message][id1]" => "002345"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId719
	# line in RSA: { <agent>[<process_id>]: | <agent>: } icmd, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId719" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+icmd,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId719"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId720
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId720" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId720"
			add_field => {
				"hostname" => "%{hhost}"
				"process" => "%{agent}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId721
	# line in RSA: <agent>: event=<event_type>&loglevel=<severity>&msg=<event_description>&
	else if [logstash][msgparser][id] == "msgParserId721" {
		dissect {
			mapping => { "message" => "%{agent}: event=%{event_type}&loglevel=%{severity}&msg=%{event_description}&" }
			id => "msgParserId721"
			add_field => {
				"hostname" => "%{hhost}"
				"process" => "%{agent}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "IDS_ALERT" {
		# MESSAGE 002122
		# line in RSA: <agent>: Adhoc client frame detected from <smacaddr>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Adhoc client frame detected from %{smacaddr}. %{info}" }
				id => "message-002122"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Adhoc client frame detected"
					"[event][id]" => "002122"
					"[rsa][message][id1]" => "002122"
					"[event][categoryid]" => "1001020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002123
		# line in RSA: <agent>: Wireless bridge detected with address <smacaddr>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Wireless bridge detected with address %{smacaddr}. %{info}" }
				id => "message-002123"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Wireless bridge detected"
					"[event][id]" => "002123"
					"[rsa][message][id1]" => "002123"
					"[event][categoryid]" => "1001020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002124
		# line in RSA: <agent>: AP <smacaddr> is sending null probe responses. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: AP %{smacaddr} is sending null probe responses. %{info}" }
				id => "message-002124"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "AP sending null probe responses"
					"[event][id]" => "002124"
					"[rsa][message][id1]" => "002124"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002125
		# line in RSA: <agent>: Client <smacaddr> is sending probe message flood.  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Client %{smacaddr} is sending probe message flood.  %{info}" }
				id => "message-002125"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Client sending probe message flood"
					"[event][id]" => "002125"
					"[rsa][message][id1]" => "002125"
					"[event][categoryid]" => "1002000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId726
	# line in RSA: <agent>: { tid <id> - sid <sessionid>: <event_description> "<hostname>" | <event_description> "<hostname>" was responded }
	else if [logstash][msgparser][id] == "msgParserId726" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*tid[\s]+(?<id>[^\s]*)[\s]+\-[\s]+sid[\s]+(?<sessionid>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\"(?<hostname>[^\"]*)\"[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+\"(?<hostname>[^\"]*)\"[\s]+was[\s]+responded[\s]+)$" }
			id => "msgParserId726"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId727
	# line in RSA: <agent>: <interface> <event_description>: <fld1> <result>
	else if [logstash][msgparser][id] == "msgParserId727" {
		dissect {
			mapping => { "message" => "%{agent}: %{interface} %{event_description}: %{fld1} %{result}" }
			id => "msgParserId727"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ifstatus" {
		# MESSAGE 00794:01
		# line in RSA: <agent>: <event_description> for <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} for %{interface}" }
				id => "message-00794:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00794:01"
					"[rsa][message][id1]" => "00794:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00794
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00794"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00794"
					"[rsa][message][id1]" => "00794"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ifstatus-dhcp" {
		# MESSAGE 100003:01
		# line in RSA: <agent>: <space> IPADDR=<hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} IPADDR=%{hostip}" }
				id => "message-100003:01"
				add_field => {
				"hostname" => "%{hhost}"
				"param" => "IPADDR"
					"[event][id]" => "100003:01"
					"[rsa][message][id1]" => "100003:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 100003:02
		# line in RSA: <agent>: <param>=<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{param}=%{fld1}" }
				id => "message-100003:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "100003:02"
					"[rsa][message][id1]" => "100003:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 100003:03
		# line in RSA: <agent>: <interface> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface} %{event_description}" }
				id => "message-100003:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "100003:03"
					"[rsa][message][id1]" => "100003:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId732
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId732" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId732"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId728
	# line in RSA: <agent>: <event_description> for <interface>
	else if [logstash][msgparser][id] == "msgParserId728" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} for %{interface}" }
			id => "msgParserId728"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ifup-dhcp" {
		# MESSAGE 100002:01
		# line in RSA: <agent>: <param>: <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{param}: %{hostip}" }
				id => "message-100002:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "100002:01"
					"[rsa][message][id1]" => "100002:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 100002:02
		# line in RSA: <agent>: <interface> (DHCP)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface} (DHCP)" }
				id => "message-100002:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "100002:02"
					"[rsa][message][id1]" => "100002:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 100002:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-100002:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "100002:03"
					"[rsa][message][id1]" => "100002:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId735
	# line in RSA: <agent>: { Starting | Stopping } <process>:
	else if [logstash][msgparser][id] == "msgParserId735" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*Starting[\s]+|[\s]*Stopping[\s]+)[\s]+(?<process>[^:]*):$" }
			id => "msgParserId735"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "program startup/shutdown"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "IMA_sms.postinstall" {
		# MESSAGE 00979:01
		# line in RSA: <agent>: Parsing <filename> for tokens
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Parsing %{filename} for tokens" }
				id => "message-00979:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00979:01"
					"[rsa][message][id1]" => "00979:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00979
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00979"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00979"
					"[rsa][message][id1]" => "00979"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "imap" {
		# MESSAGE 01218:01
		# line in RSA: <agent>[<process_id>]: open: user <username> opened  <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: open: user %{username} opened  %{obj_name}" }
				id => "message-01218:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01218:01"
					"[rsa][message][id1]" => "01218:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01218:02
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-01218:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
					"[event][id]" => "01218:02"
					"[rsa][message][id1]" => "01218:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01218
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01218"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01218"
					"[rsa][message][id1]" => "01218"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "imapd" {
		# MESSAGE 00626
		# line in RSA: <agent>: <event_description>, user=<username>, ip=[::ffff:<saddr>], <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}, user=%{username}, ip=[::ffff:%{saddr}], %{info}" }
				id => "message-00626"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
					"[event][id]" => "00626"
					"[rsa][message][id1]" => "00626"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00626:01
		# line in RSA: <agent>: <filename>: No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{filename}: No such file or directory" }
				id => "message-00626:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "file or directory not found"
					"[event][id]" => "00626:01"
					"[rsa][message][id1]" => "00626:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00626:03
		# line in RSA: <agent>: <event_type>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: %{event_description}" }
				id => "message-00626:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00626:03"
					"[rsa][message][id1]" => "00626:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00626:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00626:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00626:02"
					"[rsa][message][id1]" => "00626:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "imapd-ssl" {
		# MESSAGE 00630
		# line in RSA: <agent>: <event_description>, user=<username>, ip=[::ffff:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}, user=%{username}, ip=[::ffff:%{saddr}]" }
				id => "message-00630"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "00630"
					"[rsa][message][id1]" => "00630"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00630:01
		# line in RSA: <agent>: <event_description>, ip=[::ffff:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}, ip=[::ffff:%{saddr}]" }
				id => "message-00630:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00630:01"
					"[rsa][message][id1]" => "00630:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00630:02
		# line in RSA: <agent>: couriertls: <action>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: couriertls: %{action}: %{event_description}" }
				id => "message-00630:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00630:02"
					"[rsa][message][id1]" => "00630:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00630:03
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00630:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00630:03"
					"[rsa][message][id1]" => "00630:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "imaps" {
		# MESSAGE 03455:01
		# line in RSA: <agent>[<process_id>]: <space> open: user <username> opened <mail_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} open: user %{username} opened %{mail_id}" }
				id => "message-03455:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03455:01"
					"[rsa][message][id1]" => "03455:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03455
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-03455"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03455"
					"[rsa][message][id1]" => "03455"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId746
	# line in RSA: <agent>[<process_id>]: connect from <saddr>
	else if [logstash][msgparser][id] == "msgParserId746" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{saddr}" }
			id => "msgParserId746"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId747
	# line in RSA: <agent>[<process_id>]: LOGIN: '<username>' (<saddr>:<sport>) <fld1>
	else if [logstash][msgparser][id] == "msgParserId747" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: LOGIN: '%{username}' (%{saddr}:%{sport}) %{fld1}" }
			id => "msgParserId747"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId748
	# line in RSA: <agent>[<process_id>]: connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId748" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId748"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.rlogind" {
		# MESSAGE 00039
		# line in RSA: <agent>[<process_id>]: PAM authentication failed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM authentication failed for %{username}" }
				id => "message-00039"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00039"
					"[rsa][message][id1]" => "00039"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00039:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00039:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00039:01"
					"[rsa][message][id1]" => "00039:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId750
	# line in RSA: <agent>[<process_id>]: rsh denied to <username> <fld1>: <result>
	else if [logstash][msgparser][id] == "msgParserId750" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: rsh denied to %{username} %{fld1}: %{result}" }
			id => "msgParserId750"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.tftpd" {
		# MESSAGE 00102
		# line in RSA: <agent>[<process_id>]: RRQ from <saddr> filename <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: RRQ from %{saddr} filename %{filename}" }
				id => "message-00102"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00102"
					"[rsa][message][id1]" => "00102"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002384
		# line in RSA: <agent>[<process_id>]: <application>: read(ack): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: read(ack): %{result}" }
				id => "message-002384"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "read(ack)"
					"[event][id]" => "002384"
					"[rsa][message][id1]" => "002384"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002385
		# line in RSA: <agent>[<process_id>]: <application>: client does not accept options
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: client does not accept options" }
				id => "message-002385"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "client does not accept options"
					"[event][id]" => "002385"
					"[rsa][message][id1]" => "002385"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002457
		# line in RSA: <agent>[<process_id>]: Client <saddr> File not found <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Client %{saddr} File not found %{filename}" }
				id => "message-002457"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "client File not found"
					"[event][id]" => "002457"
					"[rsa][message][id1]" => "002457"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002458
		# line in RSA: <agent>[<process_id>]: <action> (<fld1>, File not found) to <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action} (%{fld1}, File not found) to %{saddr}" }
				id => "message-002458"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "File not found"
					"[event][id]" => "002458"
					"[rsa][message][id1]" => "002458"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE in.tftpd
		# line in RSA: <agent>[<process_id>]: Error code <error> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Error code %{error}" }
				id => "message-in.tftpd"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "client File not found"
					"[event][id]" => "in.tftpd"
					"[rsa][message][id1]" => "in.tftpd"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE in.tftpd:01
		# line in RSA: <agent>[<process_id>]: Client <saddr> timed out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Client %{saddr} timed out" }
				id => "message-in.tftpd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "client timed out"
					"[event][id]" => "in.tftpd:01"
					"[rsa][message][id1]" => "in.tftpd:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE in.tftpd:02
		# line in RSA: <agent>[<process_id>]: Client <saddr> finished <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Client %{saddr} finished %{filename}" }
				id => "message-in.tftpd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "in.tftpd:02"
					"[rsa][message][id1]" => "in.tftpd:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId759
	# line in RSA: <agent>[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId759" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
			id => "msgParserId759"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "inbound-mta/cleanup" {
		# MESSAGE 00966
		# line in RSA: <agent>[<process_id>]: <severity>: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}: %{info}" }
				id => "message-00966"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00966"
					"[rsa][message][id1]" => "00966"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00966:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00966:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00966:01"
					"[rsa][message][id1]" => "00966:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "inbound-mta/qmgr" {
		# MESSAGE 03671:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: from=%{from}, size=%{bytes}, %{fld2}" }
				id => "message-03671:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03671:01"
					"[rsa][message][id1]" => "03671:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03671
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-03671"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03671"
					"[rsa][message][id1]" => "03671"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "inbound-mta/smtp" {
		# MESSAGE 03672:01
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, relay=<saddr>[<fld2>], delay=<fld3>, status=<disposition> <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: to=%{to}, relay=%{saddr}[%{fld2}], delay=%{fld3}, status=%{disposition} %{fld4}" }
				id => "message-03672:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03672:01"
					"[rsa][message][id1]" => "03672:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03672
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-03672"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03672"
					"[rsa][message][id1]" => "03672"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "inbound-mta/smtpd" {
		# MESSAGE 00967
		# line in RSA: <agent>[<process_id>]: <severity>: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}: %{info}" }
				id => "message-00967"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00967"
					"[rsa][message][id1]" => "00967"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00967:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00967:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00967:01"
					"[rsa][message][id1]" => "00967:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId762
	# line in RSA: <agent>[<process_id>]:  { [<event_time_string>] <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId762" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\[(?<event_time_string>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId762"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "incrond" {
		# MESSAGE 002086
		# line in RSA: <agent>[<process_id>]: { (<username>) | <username>} CMD (<action>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\((?<username>[^\)]*)\)[\s]+|[\s]*(?<username>[^\s]*))[\s]+CMD[\s]+\((?<action>[^\)]*)\)$" }
				id => "message-002086"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "crond comand"
					"[event][id]" => "002086"
					"[rsa][message][id1]" => "002086"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002297
		# line in RSA: <agent>[<process_id>]: { <event_description>: (<resultcode>) <result> | <event_description> on <filename> - <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^:]*):[\s]+\((?<resultcode>[^\)]*)\)[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+on[\s]+(?<filename>[^\s]*)[\s]+\-[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-002297"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002297"
					"[rsa][message][id1]" => "002297"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002298
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002298"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002298"
					"[rsa][message][id1]" => "002298"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId765
	# line in RSA: <agent> s=<fld1> mod=<process> cmd=<action> value=<fqdn>
	else if [logstash][msgparser][id] == "msgParserId765" {
		dissect {
			mapping => { "message" => "%{agent} s=%{fld1} mod=%{process} cmd=%{action} value=%{fqdn}" }
			id => "msgParserId765"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId766
	# line in RSA: <agent>: Grid member at <hostip> is no longer connected.
	else if [logstash][msgparser][id] == "msgParserId766" {
		dissect {
			mapping => { "message" => "%{agent}: Grid member at %{hostip} is no longer connected." }
			id => "msgParserId766"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Grid member no longer connected"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "init" {
		# MESSAGE 00008:01
		# line in RSA: <agent>: tty (<terminal>) main process (<process_id>) killed by TERM signal
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: tty (%{terminal}) main process (%{process_id}) killed by TERM signal" }
				id => "message-00008:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00008:01"
					"[rsa][message][id1]" => "00008:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00008"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00008"
					"[rsa][message][id1]" => "00008"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Interceptor" {
		# MESSAGE 001699
		# line in RSA: <agent>[<process_id>]: <event_time_string> ERROR <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} ERROR %{event_description}" }
				id => "message-001699"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "001699"
					"[rsa][message][id1]" => "001699"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001665
		# line in RSA: <agent>[<process_id>]: <event_time_string> INFO <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} INFO %{event_description}" }
				id => "message-001665"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001665"
					"[rsa][message][id1]" => "001665"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "internal-sftp" {
		# MESSAGE 001958
		# line in RSA: <agent>[<process_id>]: session <action> for local user <username> from [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session %{action} for local user %{username} from [%{saddr}]" }
				id => "message-001958"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened/closed for local user"
					"[event][id]" => "001958"
					"[rsa][message][id1]" => "001958"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001959
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-001959"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001959"
					"[rsa][message][id1]" => "001959"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId770
	# line in RSA: IP route cache hash table entries: <info>
	else if [logstash][msgparser][id] == "msgParserId770" {
		dissect {
			mapping => { "message" => "IP route cache hash table entries: %{info}" }
			id => "msgParserId770"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ip-request-resp" {
		# MESSAGE 00664:01
		# line in RSA: <agent>[<process_id>]: received ip-request-resp <saddr> <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: received ip-request-resp %{saddr} %{disposition}" }
				id => "message-00664:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00664:01"
					"[rsa][message][id1]" => "00664:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00664
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00664"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00664"
					"[rsa][message][id1]" => "00664"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId772
	# line in RSA: <agent>[<process_id>]: <msg>
	else if [logstash][msgparser][id] == "msgParserId772" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{msg}" }
			id => "msgParserId772"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId773
	# line in RSA: <agent>[<process_id>]: Login user=<username> host=[<hostname>] nmsgs=<fld1>
	else if [logstash][msgparser][id] == "msgParserId773" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Login user=%{username} host=[%{hostname}] nmsgs=%{fld1}" }
			id => "msgParserId773"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId774
	# line in RSA: <agent>: <event_description> - <result>
	else if [logstash][msgparser][id] == "msgParserId774" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} - %{result}" }
			id => "msgParserId774"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "iptables" {
		# MESSAGE iptables:03
		# line in RSA: <agent>: iptables: Applying firewall rules: {[<event_state>]|<action> v<fld1>: <result>.|<result>.}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+iptables:[\s]+Applying[\s]+firewall[\s]+rules:[\s]+(\[(?<event_state>[^\]]*)\]|(?<action>[^\s]*)[\s]+v(?<fld1>[^:]*):[\s]+(?<result>[^\.]*)\.|(?<result>[^\.]*)\.)$" }
				id => "message-iptables:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Applying firewall rules"
					"[event][id]" => "iptables:03"
					"[rsa][message][id1]" => "iptables:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE iptables:02
		# line in RSA: <agent>: [<event_state>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{event_state}]" }
				id => "message-iptables:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "iptables:02"
					"[rsa][message][id1]" => "iptables:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE iptables:01
		# line in RSA: <agent>: Error occurred at line: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Error occurred at line: %{fld1}" }
				id => "message-iptables:01"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "Error occurred"
					"[event][id]" => "iptables:01"
					"[rsa][message][id1]" => "iptables:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE iptables
		# line in RSA: <agent>: Try `iptables-restore -h' or 'iptables-restore --help' for more information.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Try `iptables-restore -h' or 'iptables-restore --help' for more information." }
				id => "message-iptables"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "iptables"
					"[rsa][message][id1]" => "iptables"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00236
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00236"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00236"
					"[rsa][message][id1]" => "00236"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId779
	# line in RSA: <agent>: { <event_description>: | <event_description> } succeeded
	else if [logstash][msgparser][id] == "msgParserId779" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)[\s]+succeeded$" }
			id => "msgParserId779"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId780
	# line in RSA: <agent>: SLOT: <fld1> SEVERITY: <severity> ENTITY/EVENT CODE: <info>
	else if [logstash][msgparser][id] == "msgParserId780" {
		dissect {
			mapping => { "message" => "%{agent}: SLOT: %{fld1} SEVERITY: %{severity} ENTITY/EVENT CODE: %{info}" }
			id => "msgParserId780"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId781
	# line in RSA: <agent>[<process_id>]: id=<id> time="<event_time_string>" fw=<hostname> pri=<severity> { op=<result> issueid=<sessionid> | issueid=<sessionid> } name=<disposition> msg="<event_description>"
	else if [logstash][msgparser][id] == "msgParserId781" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+id=(?<id>[^\s]*)[\s]+time=\"(?<event_time_string>[^\"]*)\"[\s]+fw=(?<hostname>[^\s]*)[\s]+pri=(?<severity>[^\s]*)[\s]+([\s]*op=(?<result>[^\s]*)[\s]+issueid=(?<sessionid>[^\s]*)[\s]+|[\s]*issueid=(?<sessionid>[^\s]*)[\s]+)[\s]+name=(?<disposition>[^\s]*)[\s]+msg=\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId781"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Update Available"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId782
	# line in RSA: <agent>: <action>: DSA '<application>' cannot be contacted
	else if [logstash][msgparser][id] == "msgParserId782" {
		dissect {
			mapping => { "message" => "%{agent}: %{action}: DSA '%{application}' cannot be contacted" }
			id => "msgParserId782"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application cannot be contacted"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ITMAgents1" {
		# MESSAGE 001325
		# line in RSA: <agent>: <filename>: <info>: syntax error at <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{filename}: %{info}: syntax error at %{result}" }
				id => "message-001325"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "syntax error in config file"
					"[event][id]" => "001325"
					"[rsa][message][id1]" => "001325"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001834
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001834"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001834"
					"[rsa][message][id1]" => "001834"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId784
	# line in RSA: <agent>:  <space> INFO <event_description>
	else if [logstash][msgparser][id] == "msgParserId784" {
		dissect {
			mapping => { "message" => "%{agent}:  %{space} INFO %{event_description}" }
			id => "msgParserId784"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId785
	# line in RSA: <agent>[<process_id>]: { [<severity>] <event_description> | <event_description>: <info> }
	else if [logstash][msgparser][id] == "msgParserId785" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\[(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId785"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId786
	# line in RSA: <agent>[<process_id>]: [<severity>] - <group> - <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId786" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] - %{group} - %{event_description}: %{info}" }
			id => "msgParserId786"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId787
	# line in RSA: <agent>: <event_source>: error trying to bind as user "<dn>" (<result>)
	else if [logstash][msgparser][id] == "msgParserId787" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_source}: error trying to bind as user \"%{dn}\" (%{result})" }
			id => "msgParserId787"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId788
	# line in RSA: <agent>[<process_id>]: couldn't open <filename> for <action>: <result>
	else if [logstash][msgparser][id] == "msgParserId788" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: couldn't open %{filename} for %{action}: %{result}" }
			id => "msgParserId788"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "jabberd/s2s" {
		# MESSAGE 00177
		# line in RSA: <agent>[<process_id>]: couldn't open <filename> for <action>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: couldn't open %{filename} for %{action}: %{result}" }
				id => "message-00177"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00177"
					"[rsa][message][id1]" => "00177"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:01
		# line in RSA: <agent>[<process_id>]: shutting down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: shutting down" }
				id => "message-00177:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "shutting down"
					"[event][id]" => "00177:01"
					"[rsa][message][id1]" => "00177:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00177:02
		# line in RSA: <agent>[<process_id>]: connection to router closed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection to router closed" }
				id => "message-00177:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection to router closed"
					"[event][id]" => "00177:02"
					"[rsa][message][id1]" => "00177:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002362
		# line in RSA: <agent>[<process_id>]: [<fld1>] [<saddr>, port=<sport>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] [%{saddr}, port=%{sport}] %{event_description}" }
				id => "message-002362"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002362"
					"[rsa][message][id1]" => "002362"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002519
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002519"
				add_field => {
					"[event][id]" => "002519"
					"[rsa][message][id1]" => "002519"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "jabberd/sm" {
		# MESSAGE 00194
		# line in RSA: <agent>[<process_id>]: couldn't open <filename> for <action>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: couldn't open %{filename} for %{action}: %{result}" }
				id => "message-00194"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00194"
					"[rsa][message][id1]" => "00194"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00194:01
		# line in RSA: jabberd/sm[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "jabberd/sm[%{process_id}]: %{info}" }
				id => "message-00194:01"
				add_field => {
				"hostname" => "%{hhost}"
				"agent" => "jabberd/sm"
					"[event][id]" => "00194:01"
					"[rsa][message][id1]" => "00194:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId793
	# line in RSA: <agent>: <event_description> = <action>
	else if [logstash][msgparser][id] == "msgParserId793" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} = %{action}" }
			id => "msgParserId793"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId794
	# line in RSA: <agent>: <event_type> = <action>
	else if [logstash][msgparser][id] == "msgParserId794" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_type} = %{action}" }
			id => "msgParserId794"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId795
	# line in RSA: <agent>: [Brightmail] (<severity>:<result>): [<resultcode>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId795" {
		dissect {
			mapping => { "message" => "%{agent}: [Brightmail] (%{severity}:%{result}): [%{resultcode}] %{event_description}" }
			id => "msgParserId795"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId796
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <node> <event_description>. (host=<hostname>, service=<service>)
	else if [logstash][msgparser][id] == "msgParserId796" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<node>[^\s]*)[\s]+(?<event_description>[^\.]*)\.[\s]+\(host=(?<hostname>[^,]*),[\s]+service=(?<service>[^\)]*)\)$" }
			id => "msgParserId796"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId797
	# line in RSA: { <agent>[<process_id>]: | <agent>: } jsched, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId797" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+jsched,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId797"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "kcheckpass" {
		# MESSAGE 01039:03
		# line in RSA: <agent>: <process>[<process_id>]: authentication fails for '<username>' (<user_fullname>): Authentication failure (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: authentication fails for '%{username}' (%{user_fullname}): Authentication failure (%{result})" }
				id => "message-01039:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01039:03"
					"[rsa][message][id1]" => "01039:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01039:04
		# line in RSA: <agent>: <process>[<process_id>]: authentication succeeds for '<username>' (<user_fullname>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: authentication succeeds for '%{username}' (%{user_fullname})" }
				id => "message-01039:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful authentication"
					"[event][id]" => "01039:04"
					"[rsa][message][id1]" => "01039:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01039
		# line in RSA: <agent>[<process_id>]: { Authentication | authentication } failure for { user <username> | <username> } { [uid <uid>] | (invoked by uid <uid>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Authentication[\s]+|[\s]*authentication[\s]+)[\s]+failure[\s]+for[\s]+([\s]*user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+([\s]*\[uid[\s]+(?<uid>[^\]]*)\][\s]+|[\s]*\(invoked[\s]+by[\s]+uid[\s]+(?<uid>[^\)]*)\)[\s]+)$" }
				id => "message-01039"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01039"
					"[rsa][message][id1]" => "01039"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01039:01
		# line in RSA: <agent>: <event_source>: authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_source}: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-01039:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01039:01"
					"[rsa][message][id1]" => "01039:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01039:02
		# line in RSA: <agent>: <event_source>: error trying to bind as user "<username>" (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_source}: error trying to bind as user \"%{username}\" (%{result})" }
				id => "message-01039:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "bind error"
					"[event][id]" => "01039:02"
					"[rsa][message][id1]" => "01039:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "kdm" {
		# MESSAGE 00158
		# line in RSA: <agent>: <fld1>:  <event_source>: session started for user <username>, service <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}:  %{event_source}: session started for user %{username}, service %{service}" }
				id => "message-00158"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00158"
					"[rsa][message][id1]" => "00158"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:01
		# line in RSA: <agent>: <fld1>:  <event_source>: session finished for user <username>, service <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}:  %{event_source}: session finished for user %{username}, service %{service}" }
				id => "message-00158:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00158:01"
					"[rsa][message][id1]" => "00158:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00158:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00158:02"
					"[rsa][message][id1]" => "00158:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "kdm_config" {
		# MESSAGE 00404:01
		# line in RSA: <agent>[<process_id>]: Unrecognized key '<info>' in section [<fld1>] at <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unrecognized key '%{info}' in section [%{fld1}] at %{obj_name}" }
				id => "message-00404:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unrecognized key or Invalid option"
					"[event][id]" => "00404:01"
					"[rsa][message][id1]" => "00404:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00404
		# line in RSA: <agent>[<process_id>]: { Invalid option value | Unrecognized key } '<info>' at <obj_name>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Invalid[\s]+option[\s]+value[\s]+|[\s]*Unrecognized[\s]+key[\s]+)[\s]+'(?<info>[^']*)'[\s]+at[\s]+(?<obj_name>.*)$" }
				id => "message-00404"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unrecognized key or Invalid option"
					"[event][id]" => "00404"
					"[rsa][message][id1]" => "00404"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00404:02
		# line in RSA: <agent>[<process_id>]: Unrecognized section name [<fld1>] at <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unrecognized section name [%{fld1}] at %{obj_name}" }
				id => "message-00404:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unrecognized section name"
					"[event][id]" => "00404:02"
					"[rsa][message][id1]" => "00404:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId808
	# line in RSA: <agent>(<hostname>@<hostip>): <result>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId808" {
		dissect {
			mapping => { "message" => "%{agent}(%{hostname}@%{hostip}): %{result}. %{event_description}" }
			id => "msgParserId808"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId809
	# line in RSA: Kernel command line: root=<device> console=<terminal> <info>
	else if [logstash][msgparser][id] == "msgParserId809" {
		dissect {
			mapping => { "message" => "Kernel command line: root=%{device} console=%{terminal} %{info}" }
			id => "msgParserId809"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "kernel" {
		# MESSAGE 00009:12
		# line in RSA: <agent>: [<fld1>] type=<event_type> audit(<fld2>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{fld1}] type=%{event_type} audit(%{fld2}): %{event_description}" }
				id => "message-00009:12"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "audit"
					"[event][id]" => "00009:12"
					"[rsa][message][id1]" => "00009:12"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:06
		# line in RSA: <agent>: type=<event_type> audit(<fld1>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: type=%{event_type} audit(%{fld1}): %{event_description}" }
				id => "message-00009:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009:06"
					"[rsa][message][id1]" => "00009:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:02
		# line in RSA: <agent>: Kernel logging (proc) stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Kernel logging (proc) stopped." }
				id => "message-00009:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"event_description" => "Kernel logging stopped"
					"[event][id]" => "00009:02"
					"[rsa][message][id1]" => "00009:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:01
		# line in RSA: <agent>: <interface>: no IPv6 routers present
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{interface}: no IPv6 routers present" }
				id => "message-00009:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "no IPv6 routers present"
					"[event][id]" => "00009:01"
					"[rsa][message][id1]" => "00009:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:13
		# line in RSA: <agent>: Removing netfilter NETLINK layer.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Removing netfilter NETLINK layer." }
				id => "message-00009:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"service" => "iptables"
				"event_description" => "service iptables stop"
					"[event][id]" => "00009:13"
					"[rsa][message][id1]" => "00009:13"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:14
		# line in RSA: <agent>: ip_tables: (C) 2000-2006 Netfilter Core Team
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ip_tables: (C) 2000-2006 Netfilter Core Team" }
				id => "message-00009:14"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"service" => "iptables"
				"event_description" => "service iptables start"
					"[event][id]" => "00009:14"
					"[rsa][message][id1]" => "00009:14"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:15
		# line in RSA: <agent>: <fld1> version <version> (<fld2> buckets, <fld3> max) - <fld4> bytes per <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} version %{version} (%{fld2} buckets, %{fld3} max) - %{fld4} bytes per %{fld5}" }
				id => "message-00009:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"service" => "iptables"
				"event_description" => "service iptables start"
					"[event][id]" => "00009:15"
					"[rsa][message][id1]" => "00009:15"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:16
		# line in RSA: <agent>: <fld1> version <version> (<fld2> buckets, <fld3> max)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} version %{version} (%{fld2} buckets, %{fld3} max)" }
				id => "message-00009:16"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"service" => "iptables"
				"event_description" => "service iptables start"
					"[event][id]" => "00009:16"
					"[rsa][message][id1]" => "00009:16"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:07
		# line in RSA: <agent>: audit(<info>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: audit(%{info}): %{event_description}" }
				id => "message-00009:07"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "audit"
					"[event][id]" => "00009:07"
					"[rsa][message][id1]" => "00009:07"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009:17
		# line in RSA: <agent>: <event_description> Product:<product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} Product:%{product}" }
				id => "message-00009:17"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009:17"
					"[rsa][message][id1]" => "00009:17"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:18
		# line in RSA: <agent>: <event_description> Manufacturer:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} Manufacturer:%{info}" }
				id => "message-00009:18"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009:18"
					"[rsa][message][id1]" => "00009:18"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:19
		# line in RSA: <agent>: <event_description> SerialNumber:<serial_number>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} SerialNumber:%{serial_number}" }
				id => "message-00009:19"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009:19"
					"[rsa][message][id1]" => "00009:19"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:20
		# line in RSA: <agent>: <event_description>, idVendor=<operation_id>, idProduct=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}, idVendor=%{operation_id}, idProduct=%{info}" }
				id => "message-00009:20"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009:20"
					"[rsa][message][id1]" => "00009:20"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009:21
		# line in RSA: <agent>: <event_description>: Mfr=<info>, Product=<product>, SerialNumber=<serial_number>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: Mfr=%{info}, Product=%{product}, SerialNumber=%{serial_number}" }
				id => "message-00009:21"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009:21"
					"[rsa][message][id1]" => "00009:21"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00009
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00009"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00009"
					"[rsa][message][id1]" => "00009"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "kill" {
		# MESSAGE 001490
		# line in RSA: <username>: kill -9 <process_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: kill -9 %{process_id}" }
				id => "message-001490"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user killing process"
					"[event][id]" => "001490"
					"[rsa][message][id1]" => "001490"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002596
		# line in RSA:  kill: kill: cannot find process ""
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kill: kill: cannot find process \"\"" }
				id => "message-002596"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot find process"
					"[event][id]" => "002596"
					"[rsa][message][id1]" => "002596"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId826
	# line in RSA: <agent>: <event_source> <fld1>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId826" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_source} %{fld1}: %{event_description}" }
			id => "msgParserId826"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId827
	# line in RSA: <agent> - wrong magic number
	else if [logstash][msgparser][id] == "msgParserId827" {
		dissect {
			mapping => { "message" => "%{agent} - wrong magic number" }
			id => "msgParserId827"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "wrong magic number"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId828
	# line in RSA: <agent>; wrong magic number
	else if [logstash][msgparser][id] == "msgParserId828" {
		dissect {
			mapping => { "message" => "%{agent}; wrong magic number" }
			id => "msgParserId828"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "wrong magic number"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId829
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <id> <event_description>
	else if [logstash][msgparser][id] == "msgParserId829" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<id>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId829"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId830
	# line in RSA: <agent>[<process_id>]: [<fld1>.<severity>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId830" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}.%{severity}]: %{event_description}" }
			id => "msgParserId830"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId831
	# line in RSA: <agent>[<process_id>]: <event_source>: Connection from: <saddr> on port: <network_port>
	else if [logstash][msgparser][id] == "msgParserId831" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}: Connection from: %{saddr} on port: %{network_port}" }
			id => "msgParserId831"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId832
	# line in RSA: { last: | last } message repeated <dclass_counter1> times
	else if [logstash][msgparser][id] == "msgParserId832" {
		grok {
			match => { "message" => "^([\s]*last:[\s]+|[\s]*last[\s]+)[\s]+message[\s]+repeated[\s]+(?<dclass_counter1>[^\s]*)[\s]+times$" }
			id => "msgParserId832"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "last message repeated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId833
	# line in RSA: <agent>: <fld1> <username> <terminal> <saddr> <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId833" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} %{username} %{terminal} %{saddr} %{event_time_string}" }
			id => "msgParserId833"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lcagent" {
		# MESSAGE 001758
		# line in RSA: <agent>: [<event_time_string>][<process_id>][<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{event_time_string}][%{process_id}][%{severity}] %{event_description}" }
				id => "message-001758"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001758"
					"[rsa][message][id1]" => "001758"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001759
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001759"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001759"
					"[rsa][message][id1]" => "001759"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId835
	# line in RSA: <agent>: <interface> IP=[<saddr>] netmask=[<smask>] gateway=[<gateway>]  MAC=[<smacaddr>]
	else if [logstash][msgparser][id] == "msgParserId835" {
		dissect {
			mapping => { "message" => "%{agent}: %{interface} IP=[%{saddr}] netmask=[%{smask}] gateway=[%{gateway}]  MAC=[%{smacaddr}]" }
			id => "msgParserId835"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "libpostgres" {
		# MESSAGE 00366:01
		# line in RSA: <agent>[<process_id>]: opening database connection to <instance> @ <daddr> on port <dport> using login <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: opening database connection to %{instance} @ %{daddr} on port %{dport} using login %{username}" }
				id => "message-00366:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00366:01"
					"[rsa][message][id1]" => "00366:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00366
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00366"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00366"
					"[rsa][message][id1]" => "00366"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LinkProof" {
		# MESSAGE 01261:01
		# line in RSA: <agent>: <fld1> <fld2> <severity> Web access attempted through protected port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{fld2} %{severity} Web access attempted through protected port %{network_port}" }
				id => "message-01261:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01261:01"
					"[rsa][message][id1]" => "01261:01"
					"[event][categoryid]" => "1001000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-M-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 01261
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01261"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01261"
					"[rsa][message][id1]" => "01261"
					"[event][categoryid]" => "1001000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId838
	# line in RSA: <agent>: { [<result>] <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId838" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*\[(?<result>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId838"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId839
	# line in RSA: Linux Plug and Play Support <version> <fld1>
	else if [logstash][msgparser][id] == "msgParserId839" {
		dissect {
			mapping => { "message" => "Linux Plug and Play Support %{version} %{fld1}" }
			id => "msgParserId839"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId840
	# line in RSA: <agent> criticality,<severity> event,<action>, <context>
	else if [logstash][msgparser][id] == "msgParserId840" {
		dissect {
			mapping => { "message" => "%{agent} criticality,%{severity} event,%{action}, %{context}" }
			id => "msgParserId840"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LinuxKAudit event"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "load_ocfs" {
		# MESSAGE 00521
		# line in RSA: <agent>: load_ocfs: IP address "<hostip>" <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: load_ocfs: IP address \"%{hostip}\" %{event_description}" }
				id => "message-00521"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00521"
					"[rsa][message][id1]" => "00521"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00521:01
		# line in RSA: <agent>: load_ocfs: Parameter "<param>" is invalid
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: load_ocfs: Parameter \"%{param}\" is invalid" }
				id => "message-00521:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "invalid parameter"
					"[event][id]" => "00521:01"
					"[rsa][message][id1]" => "00521:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE 00010
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-00010"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00010"
					"[rsa][message][id1]" => "00010"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:11
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by { LOGIN | nasadmin | <shost> }(uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+([\s]*LOGIN[\s]+|[\s]*nasadmin[\s]+|[\s]*(?<shost>[^\s]*)[\s]+)\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-00010:11"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00010:11"
					"[rsa][message][id1]" => "00010:11"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:01
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00010:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00010:01"
					"[rsa][message][id1]" => "00010:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:02
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00010:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password"
					"[event][id]" => "00010:02"
					"[rsa][message][id1]" => "00010:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:03
		# line in RSA: <agent>[<process_id>]: <dclass_counter1> more authentication { failures | failure }; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<dclass_counter1>[^\s]*)[\s]+more[\s]+authentication[\s]+([\s]*failures[\s]+|[\s]*failure[\s]+);[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-00010:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure(s)"
					"[event][id]" => "00010:03"
					"[rsa][message][id1]" => "00010:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:04
		# line in RSA: <agent>[<process_id>]: <dclass_counter1> more authentication { failures | failure }; logname=<username> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<dclass_counter1>[^\s]*)[\s]+more[\s]+authentication[\s]+([\s]*failures[\s]+|[\s]*failure[\s]+);[\s]+logname=(?<username>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>.*)$" }
				id => "message-00010:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure(s)"
					"[event][id]" => "00010:04"
					"[rsa][message][id1]" => "00010:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:05
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00010:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00010:05"
					"[rsa][message][id1]" => "00010:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:06
		# line in RSA: <agent>[<process_id>]: auth could not identify password for [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: auth could not identify password for [%{username}]" }
				id => "message-00010:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "00010:06"
					"[rsa][message][id1]" => "00010:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:07
		# line in RSA: <agent>[<process_id>]: account <username> has expired (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account %{username} has expired (%{result})" }
				id => "message-00010:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "ALM"
				"event_description" => "account expired"
					"[event][id]" => "00010:07"
					"[rsa][message][id1]" => "00010:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:08
		# line in RSA: <agent>[<process_id>]: FAILED LOGIN <fld1> FROM <saddr> FOR <username>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FAILED LOGIN %{fld1} FROM %{saddr} FOR %{username}, %{result}" }
				id => "message-00010:08"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "00010:08"
					"[rsa][message][id1]" => "00010:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:09
		# line in RSA: <agent>[<process_id>]: User account has expired
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User account has expired" }
				id => "message-00010:09"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "login failure"
				"result" => "user account expired"
					"[event][id]" => "00010:09"
					"[rsa][message][id1]" => "00010:09"
					"[event][categoryid]" => "1402020400"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:10
		# line in RSA: <agent> -- <fld1>[<process_id>]: LOGIN ON <terminal> BY <username> FROM <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} -- %{fld1}[%{process_id}]: LOGIN ON %{terminal} BY %{username} FROM %{saddr}" }
				id => "message-00010:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00010:10"
					"[rsa][message][id1]" => "00010:10"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:12
		# line in RSA: <agent>: FAILED LOGIN SESSION FROM <shost> FOR <username>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FAILED LOGIN SESSION FROM %{shost} FOR %{username}, %{result}" }
				id => "message-00010:12"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "00010:12"
					"[rsa][message][id1]" => "00010:12"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:15
		# line in RSA: <agent>: FAILED LOGIN <fld1> FROM <shost> FOR <username>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FAILED LOGIN %{fld1} FROM %{shost} FOR %{username}, %{result}" }
				id => "message-00010:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "failed login"
					"[event][id]" => "00010:15"
					"[rsa][message][id1]" => "00010:15"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:13
		# line in RSA: <agent>[<process_id>]: ROOT LOGIN on '<terminal>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ROOT LOGIN on '%{terminal}'" }
				id => "message-00010:13"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00010:13"
					"[rsa][message][id1]" => "00010:13"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:14
		# line in RSA: <agent>: ROOT LOGIN ON <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN ON %{terminal}" }
				id => "message-00010:14"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00010:14"
					"[rsa][message][id1]" => "00010:14"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:16
		# line in RSA: <agent>: LOGIN ON <fld1> BY <username> FROM <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LOGIN ON %{fld1} BY %{username} FROM %{shost}" }
				id => "message-00010:16"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00010:16"
					"[rsa][message][id1]" => "00010:16"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:17
		# line in RSA: <agent>[<process_id>]: TOO MANY LOGIN TRIES (<fld1>) FROM <shost> FOR {<username>,<info>|<username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+TOO[\s]+MANY[\s]+LOGIN[\s]+TRIES[\s]+\((?<fld1>[^\)]*)\)[\s]+FROM[\s]+(?<shost>[^\s]*)[\s]+FOR[\s]+((?<username>[^,]*),(?<info>.*)|(?<username>.*))$" }
				id => "message-00010:17"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "too many login tries"
					"[event][id]" => "00010:17"
					"[rsa][message][id1]" => "00010:17"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:18
		# line in RSA: <agent> -- nasadmin[<process_id>]: <fld2> { AT | ON } <interface> BY <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+\-\-[\s]+nasadmin\[(?<process_id>[^\]]*)\]:[\s]+(?<fld2>[^\s]*)[\s]+([\s]*AT[\s]+|[\s]*ON[\s]+)[\s]+(?<interface>[^\s]*)[\s]+BY[\s]+(?<username>.*)$" }
				id => "message-00010:18"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00010:18"
					"[rsa][message][id1]" => "00010:18"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:19
		# line in RSA: <agent>[<process_id>]: bad username [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: bad username [%{username}]" }
				id => "message-00010:19"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"result" => "bad username"
				"event_description" => "failed login"
					"[event][id]" => "00010:19"
					"[rsa][message][id1]" => "00010:19"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:20
		# line in RSA: <agent>[<process_id>]: expired password for user <username> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: expired password for user %{username} (%{result})" }
				id => "message-00010:20"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password expired"
					"[event][id]" => "00010:20"
					"[rsa][message][id1]" => "00010:20"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00010:21
		# line in RSA: <agent>[<process_id>]: password changed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password changed for %{username}" }
				id => "message-00010:21"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password changed"
					"[event][id]" => "00010:21"
					"[rsa][message][id1]" => "00010:21"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE login
		# line in RSA: <agent>: pam_unix(<service>): authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-login"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "login"
					"[rsa][message][id1]" => "login"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE login:01
		# line in RSA: <agent>: pam_unix(<service>): session opened for user <username> by LOGIN(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session opened for user %{username} by LOGIN(uid=%{uid})" }
				id => "message-login:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "login:01"
					"[rsa][message][id1]" => "login:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE login:02
		# line in RSA: <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-login:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "login:02"
					"[rsa][message][id1]" => "login:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE login:03
		# line in RSA: <agent>: pam_succeed_if(<service>): requirement "uid >= <fld1>" not met by user "<username>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_succeed_if(%{service}): requirement \"uid >= %{fld1}\" not met by user \"%{username}\"" }
				id => "message-login:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "login:03"
					"[rsa][message][id1]" => "login:03"
					"[event][categoryid]" => "1303000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00010:22
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00010:22"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00010:22"
					"[rsa][message][id1]" => "00010:22"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "logmanager" {
		# MESSAGE 001402
		# line in RSA: <agent>: <process>:Login { attempt for | for } [<username>] { Sid [<sessionid>] <result> | <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<process>[^:]*):Login[\s]+([\s]*attempt[\s]+for[\s]+|[\s]*for[\s]+)[\s]+\[(?<username>[^\]]*)\][\s]+([\s]*Sid[\s]+\[(?<sessionid>[^\]]*)\][\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
				id => "message-001402"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
					"[event][id]" => "001402"
					"[rsa][message][id1]" => "001402"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001403
		# line in RSA: <agent>: SAT_auth:<application>: Login <username> { new session <sessionid> parent <parent_pid> | Sid <sessionid> Pid <process_id> <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+SAT_auth:(?<application>[^:]*):[\s]+Login[\s]+(?<username>[^\s]*)[\s]+([\s]*new[\s]+session[\s]+(?<sessionid>[^\s]*)[\s]+parent[\s]+(?<parent_pid>[^\s]*)[\s]+|[\s]*Sid[\s]+(?<sessionid>[^\s]*)[\s]+Pid[\s]+(?<process_id>[^\s]*)[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-001403"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
					"[event][id]" => "001403"
					"[rsa][message][id1]" => "001403"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001404
		# line in RSA: <agent>: pam[<process_id>]: Sid <sessionid> sat <dclass_counter1> <resultcode> <username> <c_username> <fld1> s <hostip> login
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam[%{process_id}]: Sid %{sessionid} sat %{dclass_counter1} %{resultcode} %{username} %{c_username} %{fld1} s %{hostip} login" }
				id => "message-001404"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
					"[event][id]" => "001404"
					"[rsa][message][id1]" => "001404"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001405
		# line in RSA: <agent>: pam[<process_id>]: Sid <sessionid> sat <dclass_counter1> <resultcode> <username> <c_username> <fld1> s <hostip> logoff
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam[%{process_id}]: Sid %{sessionid} sat %{dclass_counter1} %{resultcode} %{username} %{c_username} %{fld1} s %{hostip} logoff" }
				id => "message-001405"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "user logoff"
					"[event][id]" => "001405"
					"[rsa][message][id1]" => "001405"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001406
		# line in RSA: <agent>: Login migration: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Login migration: %{event_description}" }
				id => "message-001406"
				add_field => {
				"hostname" => "%{hhost}"
				"process" => "Login migration"
					"[event][id]" => "001406"
					"[rsa][message][id1]" => "001406"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001407
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001407"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001407"
					"[rsa][message][id1]" => "001407"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId871
	# line in RSA: <agent>: User:<username> Time:<event_time_string> Connection: <saddr> <sport> <daddr> <dport> tty:<terminal>
	else if [logstash][msgparser][id] == "msgParserId871" {
		dissect {
			mapping => { "message" => "%{agent}: User:%{username} Time:%{event_time_string} Connection: %{saddr} %{sport} %{daddr} %{dport} tty:%{terminal}" }
			id => "msgParserId871"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "User logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId872
	# line in RSA: <agent>: <event_description>: <result> (<info>)
	else if [logstash][msgparser][id] == "msgParserId872" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{result} (%{info})" }
			id => "msgParserId872"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lsassd" {
		# MESSAGE 002347
		# line in RSA: <agent>[<process_id>]: <fld1>:Failed to find user, group, or domain by sid (sid = '<id1>', searched host = '<hostname>') -> error = <resultcode>, symbol = <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Failed to find user, group, or domain by sid (sid = '%{id1}', searched host = '%{hostname}') -> error = %{resultcode}, symbol = %{result}" }
				id => "message-002347"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to find user, group, or domain by sid"
					"[event][id]" => "002347"
					"[rsa][message][id1]" => "002347"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002348
		# line in RSA: <agent>[<process_id>]: <fld1>:Failed to authenticate user (name = '<username>') -> error = <resultcode>, symbol = <result>, client pid = <child_pid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Failed to authenticate user (name = '%{username}') -> error = %{resultcode}, symbol = %{result}, client pid = %{child_pid}" }
				id => "message-002348"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to authenticate user"
					"[event][id]" => "002348"
					"[rsa][message][id1]" => "002348"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002349
		# line in RSA: <agent>[<process_id>]: <fld1>:Error code <resultcode> occurred during attempt <dclass_counter1> of a ldap search. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Error code %{resultcode} occurred during attempt %{dclass_counter1} of a ldap search. %{result}" }
				id => "message-002349"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error occurred during attempt of a ldap search"
					"[event][id]" => "002349"
					"[rsa][message][id1]" => "002349"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002350
		# line in RSA: <agent>[<process_id>]: <fld1>:ldap_gssapi_bind_s failed with error code <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:ldap_gssapi_bind_s failed with error code %{result}" }
				id => "message-002350"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ldap_gssapi_bind_s failed with error"
					"[event][id]" => "002350"
					"[rsa][message][id1]" => "002350"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002351
		# line in RSA: <agent>[<process_id>]: <fld1>:Failed to find group's members of objectSid=<id1>. [error code:<resultcode>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Failed to find group's members of objectSid=%{id1}. [error code:%{resultcode}]" }
				id => "message-002351"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to find group's members of object"
					"[event][id]" => "002351"
					"[rsa][message][id1]" => "002351"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002352
		# line in RSA: <agent>[<process_id>]: <fld1>:Unable to enumerate trusts for '<domain>' domain because <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Unable to enumerate trusts for '%{domain}' domain because %{result}" }
				id => "message-002352"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to enumerate trusts for domain"
					"[event][id]" => "002352"
					"[rsa][message][id1]" => "002352"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002364
		# line in RSA: <agent>[<process_id>]: <fld1>:Machine password sync thread exiting due to error [code: <resultcode>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Machine password sync thread exiting due to error [code: %{resultcode}]" }
				id => "message-002364"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Machine password sync thread exiting due to error"
					"[event][id]" => "002364"
					"[rsa][message][id1]" => "002364"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002353
		# line in RSA: <agent>[<process_id>]: <fld1>:Unable to read machine password for hostname
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}:Unable to read machine password for hostname" }
				id => "message-002353"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to read machine password for hostname"
					"[event][id]" => "002353"
					"[rsa][message][id1]" => "002353"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId881
	# line in RSA: { <agent>: <event_description> | <agent> <event_description>}
	else if [logstash][msgparser][id] == "msgParserId881" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<agent>[^\s]*)[\s]+(?<event_description>.*))$" }
			id => "msgParserId881"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId882
	# line in RSA: { <agent>[<process_id>]: | <agent>: } "<action>" executed by <username>
	else if [logstash][msgparser][id] == "msgParserId882" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\"(?<action>[^\"]*)\"[\s]+executed[\s]+by[\s]+(?<username>.*)$" }
			id => "msgParserId882"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "command executed by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId883
	# line in RSA: <agent>[<process_id>]: Mail for <to> (from <fld1>) delivered to <application>.
	else if [logstash][msgparser][id] == "msgParserId883" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Mail for %{to} (from %{fld1}) delivered to %{application}." }
			id => "msgParserId883"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Mail delivery"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "luci" {
		# MESSAGE 002196
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  Unable to retrieve batch <sessionid> status from <hostname>:<network_port>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+retrieve[\s]+batch[\s]+(?<sessionid>[^\s]*)[\s]+status[\s]+from[\s]+(?<hostname>[^:]*):(?<network_port>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-002196"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to retrieve batch status from server"
					"[event][id]" => "002196"
					"[rsa][message][id1]" => "002196"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002197
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002197"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002197"
					"[rsa][message][id1]" => "002197"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "lvm" {
		# MESSAGE 002170
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  No longer monitoring snapshot <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+No[\s]+longer[\s]+monitoring[\s]+snapshot[\s]+(?<result>.*)$" }
				id => "message-002170"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "No longer monitoring snapshot"
					"[event][id]" => "002170"
					"[rsa][message][id1]" => "002170"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002316
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <filename>: Multiple different specifications for <obj_name> (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<filename>[^:]*):[\s]+Multiple[\s]+different[\s]+specifications[\s]+for[\s]+(?<obj_name>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-002316"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Multiple different specifications for object in file"
					"[event][id]" => "002316"
					"[rsa][message][id1]" => "002316"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002361
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <filename>: Multiple same specifications for <directory>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<filename>[^:]*):[\s]+Multiple[\s]+same[\s]+specifications[\s]+for[\s]+(?<directory>.*)$" }
				id => "message-002361"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Multiple same specifications for directory"
					"[event][id]" => "002361"
					"[rsa][message][id1]" => "002361"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002582
		# line in RSA: <agent>: <severity>: lvmetad is being updated, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: lvmetad is being updated, %{info}" }
				id => "message-002582"
				add_field => {
				"event_description" => "lvmetad is being updated"
					"[event][id]" => "002582"
					"[rsa][message][id1]" => "002582"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002583
		# line in RSA: <agent>: <fld1> logical volume(s) in volume group <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} logical volume(s) in volume group %{info}" }
				id => "message-002583"
				add_field => {
					"[event][id]" => "002583"
					"[rsa][message][id1]" => "002583"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002479
		# line in RSA: <agent>: Device <fld1> not found. <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Device %{fld1} not found. %{event_description}" }
				id => "message-002479"
				add_field => {
					"[event][id]" => "002479"
					"[rsa][message][id1]" => "002479"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE lvm
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>.*)$" }
				id => "message-lvm"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "lvm"
					"[rsa][message][id1]" => "lvm"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId892
	# line in RSA: <agent>[<process_id>]: <event_description>: <fld1> ( { <result>. <info> | <result> } )
	else if [logstash][msgparser][id] == "msgParserId892" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_description>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+\([\s]+([\s]*(?<result>[^\.]*)\.[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)[\s]+\)$" }
			id => "msgParserId892"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mad" {
		# MESSAGE 00061
		# line in RSA: <agent>: Login Successful: Realm='<realm>' User='<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Login Successful: Realm='%{realm}' User='%{username}'" }
				id => "message-00061"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00061"
					"[rsa][message][id1]" => "00061"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00061:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00061:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00061:01"
					"[rsa][message][id1]" => "00061:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId894
	# line in RSA: <agent>: <event_time_string> ERROR [<action>] (<application>:) [MailGate Alert] <event_description>
	else if [logstash][msgparser][id] == "msgParserId894" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_time_string} ERROR [%{action}] (%{application}:) [MailGate Alert] %{event_description}" }
			id => "msgParserId894"
			add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "MailGate Alert"
				"severity" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId895
	# line in RSA: <agent>: { <application>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId895" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId895"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mcelog" {
		# MESSAGE 002154
		# line in RSA: <agent>: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: %{result}" }
				id => "message-002154"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002154"
					"[rsa][message][id1]" => "002154"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002154:01
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002154:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002154:01"
					"[rsa][message][id1]" => "002154:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId896
	# line in RSA: <agent>[<process_id>]: <fld1> Pool member <hostip>:<network_port> monitor status <disposition>
	else if [logstash][msgparser][id] == "msgParserId896" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Pool member %{hostip}:%{network_port} monitor status %{disposition}" }
			id => "msgParserId896"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId897
	# line in RSA: <agent>[<process_id>]:<fld1>
	else if [logstash][msgparser][id] == "msgParserId897" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:%{fld1}" }
			id => "msgParserId897"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId898
	# line in RSA: <agent>: { <severity>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId898" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<severity>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId898"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mdmtty" {
		# MESSAGE 001432
		# line in RSA: <agent>: <terminal> Connected to <device> at <hostip>:<network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{terminal} Connected to %{device} at %{hostip}:%{network_port}" }
				id => "message-001432"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connected"
					"[event][id]" => "001432"
					"[rsa][message][id1]" => "001432"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001433
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001433"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001433"
					"[rsa][message][id1]" => "001433"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mDNSResponder" {
		# MESSAGE 001476
		# line in RSA: <agent>: ERROR: <process>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ERROR: %{process}: %{result}" }
				id => "message-001476"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "mDNSResponder ERROR"
					"[event][id]" => "001476"
					"[rsa][message][id1]" => "001476"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001477
		# line in RSA: <agent>: { ERROR: <process>: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*ERROR:[\s]+(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001477"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001477"
					"[rsa][message][id1]" => "001477"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Men" {
		# MESSAGE 01018
		# line in RSA: <agent>[<process_id>]: Login request for user "<username>" from [<saddr>:<sport>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login request for user \"%{username}\" from [%{saddr}:%{sport}]." }
				id => "message-01018"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"event_description" => "Login request"
					"[event][id]" => "01018"
					"[rsa][message][id1]" => "01018"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:01
		# line in RSA: <agent>[<process_id>]: Login: user "<username>" verified using local authentication
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login: user \"%{username}\" verified using local authentication" }
				id => "message-01018:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "user verified"
					"[event][id]" => "01018:01"
					"[rsa][message][id1]" => "01018:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:02
		# line in RSA: <agent>[<process_id>]: User "<username>" logged in from [<saddr>:<sport>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User \"%{username}\" logged in from [%{saddr}:%{sport}]." }
				id => "message-01018:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user logged in"
					"[event][id]" => "01018:02"
					"[rsa][message][id1]" => "01018:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:03
		# line in RSA: <agent>[<process_id>]: Connection request from [<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection request from [%{saddr}]." }
				id => "message-01018:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection request"
					"[event][id]" => "01018:03"
					"[rsa][message][id1]" => "01018:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:04
		# line in RSA: <agent>[<process_id>]: Connection close from [<username>:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection close from [%{username}:%{saddr}]" }
				id => "message-01018:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection closed"
					"[event][id]" => "01018:04"
					"[rsa][message][id1]" => "01018:04"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:05
		# line in RSA: <agent>[<process_id>]: Address collection { started | finished }. <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Address[\s]+collection[\s]+([\s]*started[\s]+|[\s]*finished[\s]+)\.[\s]+(?<info>.*)$" }
				id => "message-01018:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Address collection started/finished"
					"[event][id]" => "01018:05"
					"[rsa][message][id1]" => "01018:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:06
		# line in RSA: <agent>[<process_id>]: Login: invalid password for user "<username>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login: invalid password for user \"%{username}\"" }
				id => "message-01018:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "invalid password"
					"[event][id]" => "01018:06"
					"[rsa][message][id1]" => "01018:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:07
		# line in RSA: <agent>[<process_id>]: AddEvent: Request from [<username>:<shost>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: AddEvent: Request from [%{username}:%{shost}]." }
				id => "message-01018:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "request from user"
					"[event][id]" => "01018:07"
					"[rsa][message][id1]" => "01018:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:08
		# line in RSA: <agent>[<process_id>]: Listening stopped on port [<network_port>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Listening stopped on port [%{network_port}]." }
				id => "message-01018:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01018:08"
					"[rsa][message][id1]" => "01018:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01018:09
		# line in RSA: <agent>[<process_id>]: User "<username>" { Logged Out From | logged out from } [<shost>:<saddr>(<sport>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+User[\s]+\"(?<username>[^\"]*)\"[\s]+([\s]*Logged[\s]+Out[\s]+From[\s]+|[\s]*logged[\s]+out[\s]+from[\s]+)[\s]+\[(?<shost>[^:]*):(?<saddr>[^\(]*)\((?<sport>[^\)]*)\)$" }
				id => "message-01018:09"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "user logout"
					"[event][id]" => "01018:09"
					"[rsa][message][id1]" => "01018:09"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId912
	# line in RSA: <agent>: <username> logged out
	else if [logstash][msgparser][id] == "msgParserId912" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} logged out" }
			id => "msgParserId912"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "user logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId913
	# line in RSA: message repeats <dclass_counter1> times
	else if [logstash][msgparser][id] == "msgParserId913" {
		dissect {
			mapping => { "message" => "message repeats %{dclass_counter1} times" }
			id => "msgParserId913"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "message repeated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId914
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>, <result>
	else if [logstash][msgparser][id] == "msgParserId914" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^,]*),[\s]+(?<result>.*)$" }
			id => "msgParserId914"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId915
	# line in RSA: <agent> Killing <fld2> process <process> <process_id> since it <result>
	else if [logstash][msgparser][id] == "msgParserId915" {
		dissect {
			mapping => { "message" => "%{agent} Killing %{fld2} process %{process} %{process_id} since it %{result}" }
			id => "msgParserId915"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Killing Process"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId916
	# line in RSA: <agent>: <event_description> (<info>)
	else if [logstash][msgparser][id] == "msgParserId916" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} (%{info})" }
			id => "msgParserId916"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId917
	# line in RSA: <agent>: <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId917" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}: %{event_description}" }
			id => "msgParserId917"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId918
	# line in RSA: <agent>[<process_id>]: <device>: can't exec <filename>: <result>
	else if [logstash][msgparser][id] == "msgParserId918" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{device}: can't exec %{filename}: %{result}" }
			id => "msgParserId918"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot exec file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId919
	# line in RSA: <agent>: Error=<result>, ID=<id>, Tag=<sessionid>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId919" {
		dissect {
			mapping => { "message" => "%{agent}: Error=%{result}, ID=%{id}, Tag=%{sessionid}: %{event_description}" }
			id => "msgParserId919"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId920
	# line in RSA: <agent>[<process_id>]: [<fld1>] <username>: [<fld2>]  <event_description>
	else if [logstash][msgparser][id] == "msgParserId920" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{username}: [%{fld2}]  %{event_description}" }
			id => "msgParserId920"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId921
	# line in RSA: <agent>: <service> startup { succeeded | failed }
	else if [logstash][msgparser][id] == "msgParserId921" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<service>[^\s]*)[\s]+startup[\s]+([\s]*succeeded[\s]+|[\s]*failed[\s]+)$" }
			id => "msgParserId921"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "mmremote startup"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId922
	# line in RSA: Mobile Unit <node> with MAC address <macaddr> <action>. [<result>]
	else if [logstash][msgparser][id] == "msgParserId922" {
		dissect {
			mapping => { "message" => "Mobile Unit %{node} with MAC address %{macaddr} %{action}. [%{result}]" }
			id => "msgParserId922"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "modem-manager" {
		# MESSAGE 001285
		# line in RSA: <agent>: (<terminal>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{terminal}): %{event_description}" }
				id => "message-001285"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001285"
					"[rsa][message][id1]" => "001285"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001286
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001286"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001286"
					"[rsa][message][id1]" => "001286"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId924
	# line in RSA: <agent>: error(<process_id>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId924" {
		dissect {
			mapping => { "message" => "%{agent}: error(%{process_id}): %{event_description}" }
			id => "msgParserId924"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId925
	# line in RSA: <agent>[<process_id>]: :<action> <param>: RC=<resultcode>
	else if [logstash][msgparser][id] == "msgParserId925" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: :%{action} %{param}: RC=%{resultcode}" }
			id => "msgParserId925"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "add new user or group"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mojosetup" {
		# MESSAGE 002394
		# line in RSA: <agent>[<process_id>]: Created { directory | file } '<filename>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Created[\s]+([\s]*directory[\s]+|[\s]*file[\s]+)[\s]+'(?<filename>[^']*)'$" }
				id => "message-002394"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Created file or directory"
					"[event][id]" => "002394"
					"[rsa][message][id1]" => "002394"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002395
		# line in RSA: <agent>[<process_id>]: Deleted '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Deleted '%{filename}'" }
				id => "message-002395"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Deleted filename"
					"[event][id]" => "002395"
					"[rsa][message][id1]" => "002395"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002396
		# line in RSA: <agent>[<process_id>]: { <application>: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002396"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002396"
					"[rsa][message][id1]" => "002396"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mount" {
		# MESSAGE 00152
		# line in RSA: <agent>: <fld1>: <hostname>: <directory> <disposition>, reason given by server: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}: %{hostname}: %{directory} %{disposition}, reason given by server: %{result}" }
				id => "message-00152"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00152"
					"[rsa][message][id1]" => "00152"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00152:01
		# line in RSA: <agent>[<process_id>]: mount to NFS server '<daddr>' {failed: System Error: |failed:} {<result>,|<result>} {(retrying)| retrying}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+mount[\s]+to[\s]+NFS[\s]+server[\s]+'(?<daddr>[^']*)'[\s]+(failed:[\s]+System[\s]+Error:[\s]+|failed:)[\s]+((?<result>[^,]*),|(?<result>[^\s]*))[\s]+(\(retrying\)|[\s]*retrying)$" }
				id => "message-00152:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "mount to NFS server failed"
					"[event][id]" => "00152:01"
					"[rsa][message][id1]" => "00152:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00152:02
		# line in RSA: <agent>: mount: <event_description> '<filetype>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: mount: %{event_description} '%{filetype}'" }
				id => "message-00152:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown filesystem type"
					"[event][id]" => "00152:02"
					"[rsa][message][id1]" => "00152:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "mountd" {
		# MESSAGE 00197
		# line in RSA: <agent>[<process_id>]: authenticated unmount request from <shost>:<sport> for <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authenticated unmount request from %{shost}:%{sport} for %{directory}" }
				id => "message-00197"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00197"
					"[rsa][message][id1]" => "00197"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002452
		# line in RSA: <agent>[<process_id>]: refused mount request from <shost> for <directory> (<fld12>): unmatched host
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: refused mount request from %{shost} for %{directory} (%{fld12}): unmatched host" }
				id => "message-002452"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002452"
					"[rsa][message][id1]" => "002452"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002453
		# line in RSA: <agent>[<process_id>]: last message repeated <fld1> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: last message repeated %{fld1} times" }
				id => "message-002453"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002453"
					"[rsa][message][id1]" => "002453"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002455
		# line in RSA: <agent>[<process_id>]: export request from <shost> failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: export request from %{shost} failed." }
				id => "message-002455"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "export request failed"
					"[event][id]" => "002455"
					"[rsa][message][id1]" => "002455"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002456
		# line in RSA: <agent>): indirect call not allowed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}): indirect call not allowed" }
				id => "message-002456"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "indirect call not allowed"
					"[event][id]" => "002456"
					"[rsa][message][id1]" => "002456"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "movefile" {
		# MESSAGE 002354
		# line in RSA: <agent>: Error deleting <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Error deleting %{filename}: %{result}" }
				id => "message-002354"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error deleting file"
					"[event][id]" => "002354"
					"[rsa][message][id1]" => "002354"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002355
		# line in RSA: <agent>: Error renaming <filename> <space> <change_new>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Error renaming %{filename} %{space} %{change_new}: %{result}" }
				id => "message-002355"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error renaming file"
					"[event][id]" => "002355"
					"[rsa][message][id1]" => "002355"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002356
		# line in RSA: <agent>: Can not open <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Can not open %{filename}: %{result}" }
				id => "message-002356"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Cannot open file"
					"[event][id]" => "002356"
					"[rsa][message][id1]" => "002356"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "MSM-A" {
		# MESSAGE 002128
		# line in RSA: <agent>: Login failed through SNMP<version> - <result> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Login failed through SNMP%{version} - %{result} (%{saddr})" }
				id => "message-002128"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Login failed through SNMP"
					"[event][id]" => "002128"
					"[rsa][message][id1]" => "002128"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002300
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002300"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002300"
					"[rsa][message][id1]" => "002300"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId941
	# line in RSA: { <agent>[<process_id>]: | <agent>: } mtrkmon, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId941" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+mtrkmon,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId941"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "multipathd" {
		# MESSAGE multipathd:15
		# line in RSA: <agent>:<hardware_id>: stop event checker thread (<process_id>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{hardware_id}: stop event checker thread (%{process_id})" }
				id => "message-multipathd:15"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "stop event checker thread"
					"[event][id]" => "multipathd:15"
					"[rsa][message][id1]" => "multipathd:15"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:14
		# line in RSA: <agent>:<device> [<fld1>]: path removed from map<hardware_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{device} [%{fld1}]: path removed from map%{hardware_id}" }
				id => "message-multipathd:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "path removed from map"
					"[event][id]" => "multipathd:14"
					"[rsa][message][id1]" => "multipathd:14"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:13
		# line in RSA: <agent>: <device>: mark as failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{device}: mark as failed" }
				id => "message-multipathd:13"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "mark as failed"
					"[event][id]" => "multipathd:13"
					"[rsa][message][id1]" => "multipathd:13"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:12
		# line in RSA: <agent>: <node>: devmap not registered, can't remove
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: devmap not registered, can't remove" }
				id => "message-multipathd:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "devmap not registered, can't remove"
					"[event][id]" => "multipathd:12"
					"[rsa][message][id1]" => "multipathd:12"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:11
		# line in RSA: <agent>: checker failed path<device> in map <hardware_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: checker failed path%{device} in map %{hardware_id}" }
				id => "message-multipathd:11"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "multipathd:11"
					"[rsa][message][id1]" => "multipathd:11"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:10
		# line in RSA: <agent>: <hardware_id>:<device> - tur checker reports path is down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{hardware_id}:%{device} - tur checker reports path is down" }
				id => "message-multipathd:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "tur checker reports path is down"
					"[event][id]" => "multipathd:10"
					"[rsa][message][id1]" => "multipathd:10"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:09
		# line in RSA: <agent>: <hardware_id>: load table <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{hardware_id}: load table %{fld1}" }
				id => "message-multipathd:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "multipathd:09"
					"[rsa][message][id1]" => "multipathd:09"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:08
		# line in RSA: <agent>: <hardware_id>: event checker started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{hardware_id}: event checker started" }
				id => "message-multipathd:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "event checker started"
					"[event][id]" => "multipathd:08"
					"[rsa][message][id1]" => "multipathd:08"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:07
		# line in RSA: <agent>: <device>: remove path (uevent)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{device}: remove path (uevent)" }
				id => "message-multipathd:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "remove path"
					"[event][id]" => "multipathd:07"
					"[rsa][message][id1]" => "multipathd:07"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:06
		# line in RSA: <agent>: <node>: remove map (uevent)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: remove map (uevent)" }
				id => "message-multipathd:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "remove map"
					"[event][id]" => "multipathd:06"
					"[rsa][message][id1]" => "multipathd:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:05
		# line in RSA: <agent>: <hardware_id>: remaining active paths:<dclass_counter1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{hardware_id}: remaining active paths:%{dclass_counter1}" }
				id => "message-multipathd:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "multipathd:05"
					"[rsa][message][id1]" => "multipathd:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:04
		# line in RSA: <agent>: <node>: mapname not found for <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{node}: mapname not found for %{device}" }
				id => "message-multipathd:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "mapname not found"
					"[event][id]" => "multipathd:04"
					"[rsa][message][id1]" => "multipathd:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:03
		# line in RSA: <agent>: can't get devname for <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: can't get devname for %{device}" }
				id => "message-multipathd:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "can't get devname"
					"[event][id]" => "multipathd:03"
					"[rsa][message][id1]" => "multipathd:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:02
		# line in RSA: <agent>: <hardware_id>: devmap <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{hardware_id}: devmap %{action}" }
				id => "message-multipathd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "multipathd:02"
					"[rsa][message][id1]" => "multipathd:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd:01
		# line in RSA: <agent>: <hardware_id>: <action> map <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{hardware_id}: %{action} map %{fld1}" }
				id => "message-multipathd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "multipathd:01"
					"[rsa][message][id1]" => "multipathd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE multipathd
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-multipathd"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "multipathd"
					"[rsa][message][id1]" => "multipathd"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03694
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03694"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03694"
					"[rsa][message][id1]" => "03694"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd" {
		# MESSAGE systemd:11
		# line in RSA: <agent>: <event_state> Device-Mapper Multipath Device Controller<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_state} Device-Mapper Multipath Device Controller%{fld1}" }
				id => "message-systemd:11"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"a" => " Device-Mapper Multipath Device Controller"
				"event_description" => "%{event_state}%{a}"
					"[event][id]" => "systemd:11"
					"[rsa][message][id1]" => "systemd:11"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002423
		# line in RSA: <agent>:<action> Session <sessionid> of user {<username>.|<username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):(?<action>[^\s]*)[\s]+Session[\s]+(?<sessionid>[^\s]*)[\s]+of[\s]+user[\s]+((?<username>[^\.]*)\.|(?<username>.*))$" }
				id => "message-002423"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "002423"
					"[rsa][message][id1]" => "002423"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002423:02
		# line in RSA: <agent>:<action> <service> Service...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{action} %{service} Service..." }
				id => "message-002423:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "002423:02"
					"[rsa][message][id1]" => "002423:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:12
		# line in RSA: <agent>: Created slice User Slice of {<username>.|<username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+Created[\s]+slice[\s]+User[\s]+Slice[\s]+of[\s]+((?<username>[^\.]*)\.|(?<username>.*))$" }
				id => "message-systemd:12"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"action" => " Created"
					"[event][id]" => "systemd:12"
					"[rsa][message][id1]" => "systemd:12"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:01
		# line in RSA: <process_id> <fld2> <fld3> <action>{slice User Slice of|User Slice of}<username>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process_id>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<action>[^sU]*)(slice[\s]+User[\s]+Slice[\s]+of|User[\s]+Slice[\s]+of)(?<username>[^\.]*)\.$" }
				id => "message-systemd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"agent" => "%{messageid}"
					"[event][id]" => "systemd:01"
					"[rsa][message][id1]" => "systemd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy M d HHmms" ] }
			}
		}
		# MESSAGE systemd:03
		# line in RSA: <process_id> <fld2> <fld3> <action>Session<sessionid>of user<username>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} %{fld2} %{fld3} %{action}Session%{sessionid}of user%{username}." }
				id => "message-systemd:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"agent" => "%{messageid}"
					"[event][id]" => "systemd:03"
					"[rsa][message][id1]" => "systemd:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hyear} %{hmonth} %{hday} %{hhour} %{hmin} %{hsec}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy M d HHmms" ] }
			}
		}
		# MESSAGE systemd
		# line in RSA: <agent>: <event_state> {Daily Cleanup|Cleanup} of Temporary Directories<fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_state>[^\s]*)[\s]+(Daily[\s]+Cleanup|Cleanup)[\s]+of[\s]+Temporary[\s]+Directories(?<fld1>.*)$" }
				id => "message-systemd"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"event_description" => " Cleanup of Temporary Directories"
					"[event][id]" => "systemd"
					"[rsa][message][id1]" => "systemd"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:04
		# line in RSA: <agent>: <event_state> IP sets for iptables<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_state} IP sets for iptables%{fld1}" }
				id => "message-systemd:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"a" => " IP sets for iptables"
				"event_description" => "%{event_state}%{a}"
					"[event][id]" => "systemd:04"
					"[rsa][message][id1]" => "systemd:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:05
		# line in RSA: <agent>: <event_state> IPv4 firewall with iptables<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_state} IPv4 firewall with iptables%{fld1}" }
				id => "message-systemd:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"a" => " IPv4 firewall with iptables"
				"event_description" => "%{event_state}%{a}"
					"[event][id]" => "systemd:05"
					"[rsa][message][id1]" => "systemd:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:06
		# line in RSA: <agent>: Unit <service> entered failed state<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Unit %{service} entered failed state%{fld1}" }
				id => "message-systemd:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"a" => " entered failed state"
				"event_description" => "%{service}%{a}"
					"[event][id]" => "systemd:06"
					"[rsa][message][id1]" => "systemd:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:07
		# line in RSA: <agent>: <service>.service failed<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service}.service failed%{fld1}" }
				id => "message-systemd:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"result" => "failed"
					"[event][id]" => "systemd:07"
					"[rsa][message][id1]" => "systemd:07"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:08
		# line in RSA: <agent>: <service> main process exited, code=<result>, status=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service} main process exited, code=%{result}, status=%{disposition}" }
				id => "message-systemd:08"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "systemd:08"
					"[rsa][message][id1]" => "systemd:08"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:09
		# line in RSA: <agent>: <action> User Slice of <username>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action} User Slice of %{username}." }
				id => "message-systemd:09"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "systemd:09"
					"[rsa][message][id1]" => "systemd:09"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:10
		# line in RSA: <agent>: <event_state> LVM2 PV scan on device <device>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_state} LVM2 PV scan on device %{device}." }
				id => "message-systemd:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "systemd:10"
					"[rsa][message][id1]" => "systemd:10"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:15
		# line in RSA: <agent>: Timed out waiting for device <device>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Timed out waiting for device %{device}." }
				id => "message-systemd:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"result" => "Timed out"
					"[event][id]" => "systemd:15"
					"[rsa][message][id1]" => "systemd:15"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:14
		# line in RSA: <agent>: Dependency failed for <device>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Dependency failed for %{device}." }
				id => "message-systemd:14"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"result" => "failed"
					"[event][id]" => "systemd:14"
					"[rsa][message][id1]" => "systemd:14"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd:13
		# line in RSA: <agent>: Job <action> {<result> with result '<disposition>'|<result>}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+Job[\s]+(?<action>[^\s]*)[\s]+((?<result>[^\s]*)[\s]+with[\s]+result[\s]+'(?<disposition>[^']*)'|(?<result>[^\.]*))\.$" }
				id => "message-systemd:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "systemd:13"
					"[rsa][message][id1]" => "systemd:13"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002423:03
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-002423:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "002423:03"
					"[rsa][message][id1]" => "002423:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "mydns" {
		# MESSAGE 02781
		# line in RSA: <agent>[<process_id>]: Error connecting to MySQL server at <hostname>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Error connecting to MySQL server at %{hostname}: %{result}" }
				id => "message-02781"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error connecting to MySQL server"
					"[event][id]" => "02781"
					"[rsa][message][id1]" => "02781"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02781:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02781:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02781:01"
					"[rsa][message][id1]" => "02781:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId959
	# line in RSA: <agent>[<process_id>]: <severity>: <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId959" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}: %{result}" }
			id => "msgParserId959"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId960
	# line in RSA: <agent>: <process>[<process_id>]: omc:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId960" {
		dissect {
			mapping => { "message" => "%{agent}: %{process}[%{process_id}]: omc:  %{event_description}" }
			id => "msgParserId960"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nable" {
		# MESSAGE 001149
		# line in RSA: <agent>[<process_id>]: <interface>::TaskUpdate: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}::TaskUpdate: %{event_description}: %{info}" }
				id => "message-001149"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001149"
					"[rsa][message][id1]" => "001149"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001150
		# line in RSA: <agent>[<process_id>]: WorkerManager::<event_description>:: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WorkerManager::%{event_description}:: %{info}" }
				id => "message-001150"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001150"
					"[rsa][message][id1]" => "001150"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001153
		# line in RSA: <agent>[<process_id>]: NACleanup::<info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: NACleanup::%{info}." }
				id => "message-001153"
				add_field => {
				"hostname" => "%{hhost}"
				"interface" => "NACleanup"
					"[event][id]" => "001153"
					"[rsa][message][id1]" => "001153"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001152
		# line in RSA: <agent>[<process_id>]: { ERROR: | WARNING: } { DMSInterface constructor: <event_description> | DMSInterface::Data: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*ERROR:[\s]+|[\s]*WARNING:[\s]+)[\s]+([\s]*DMSInterface[\s]+constructor:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*DMSInterface::Data:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001152"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001152"
					"[rsa][message][id1]" => "001152"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001151
		# line in RSA: <agent>[<process_id>]: <interface>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: %{event_description}" }
				id => "message-001151"
				add_field => {
				"hostname" => "%{hhost}"
				"application" => "DMSInterface constructor"
					"[event][id]" => "001151"
					"[rsa][message][id1]" => "001151"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId966
	# line in RSA: <agent>[<process_id>]: LogClient connect failed on <filename> fd=<fld1> <result>
	else if [logstash][msgparser][id] == "msgParserId966" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: LogClient connect failed on %{filename} fd=%{fld1} %{result}" }
			id => "msgParserId966"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LogClient connect failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "named" {
		# MESSAGE 00103:02
		# line in RSA: <agent>[<process_id>]: {queries: info: client|client} <saddr>{#<sport>/<fld2>(<fld1>)|#<sport>(<fld1>)|#<sport>}: query: <domain> {IN <fld3> (<hostip>)|IN <fld1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(queries:[\s]+info:[\s]+client|client)[\s]+(?<saddr>[^###]*)(#(?<sport>[^/]*)/(?<fld2>[^\(]*)\((?<fld1>[^\)]*)\)|#(?<sport>[^\(]*)\((?<fld1>[^\)]*)\)|#(?<sport>[^:]*)):[\s]+query:[\s]+(?<domain>[^\s]*)[\s]+(IN[\s]+(?<fld3>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)|IN[\s]+(?<fld1>.*))$" }
				id => "message-00103:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00103:02"
					"[rsa][message][id1]" => "00103:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00103:04
		# line in RSA: <agent>[<process_id>]: client <saddr>#<sport>: RFC 1918 response from Internet for <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: client %{saddr}#%{sport}: RFC 1918 response from Internet for %{daddr}" }
				id => "message-00103:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00103:04"
					"[rsa][message][id1]" => "00103:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00103:06
		# line in RSA: <agent>[<process_id>]: queries: info: client <saddr>#<sport> <info>: query: <domain> IN <fld3> (<hostip>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: queries: info: client %{saddr}#%{sport} %{info}: query: %{domain} IN %{fld3} (%{hostip})" }
				id => "message-00103:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00103:06"
					"[rsa][message][id1]" => "00103:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00103:03
		# line in RSA: <agent>[<process_id>]: queries: info: client <daddr>#<dport> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: queries: info: client %{daddr}#%{dport} %{info}" }
				id => "message-00103:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00103:03"
					"[rsa][message][id1]" => "00103:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00103:05
		# line in RSA: <process>[<process_id>]: <fld1>.<fld2> {client <obj_id> <saddr>#<sport> <fld3>:|client <saddr>#<sport> (<fld3>):|client <saddr>#<sport>:} query: <hostname> IN <terminal> +<fld5> (<fld4>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^\.]*)\.(?<fld2>[^\s]*)[\s]+(client[\s]+(?<obj_id>[^\s]*)[\s]+(?<saddr>[^#]*)#(?<sport>[^\s]*)[\s]+(?<fld3>[^:]*):|client[\s]+(?<saddr>[^#]*)#(?<sport>[^\s]*)[\s]+\((?<fld3>[^\)]*)\):|client[\s]+(?<saddr>[^#]*)#(?<sport>[^:]*):)[\s]+query:[\s]+(?<hostname>[^\s]*)[\s]+IN[\s]+(?<terminal>[^\s]*)[\s]+\+(?<fld5>[^\s]*)[\s]+\((?<fld4>[^\)]*)\)$" }
				id => "message-00103:05"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00103:05"
					"[rsa][message][id1]" => "00103:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d-MMM-yyyy H:m:s" ] }
			}
		}
		# MESSAGE 00103
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00103"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00103"
					"[rsa][message][id1]" => "00103"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nas" {
		# MESSAGE 03521
		# line in RSA: <agent>[<process_id>]: Init: Input <action>(<directory>) <disposition>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Init: Input %{action}(%{directory}) %{disposition}: %{result}" }
				id => "message-03521"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03521"
					"[rsa][message][id1]" => "03521"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03521:01
		# line in RSA: <agent>[<process_id>]: initMixer: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: initMixer: %{event_description}: %{result}" }
				id => "message-03521:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03521:01"
					"[rsa][message][id1]" => "03521:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03521:02
		# line in RSA: <agent>[<process_id>]: initMixer: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: initMixer: %{event_description}" }
				id => "message-03521:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03521:02"
					"[rsa][message][id1]" => "03521:02"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03521:03
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03521:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03521:03"
					"[rsa][message][id1]" => "03521:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "nbPolicyMgr" {
		# MESSAGE 00717:01
		# line in RSA: <agent>:<event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{event_description}: %{info}" }
				id => "message-00717:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00717:01"
					"[rsa][message][id1]" => "00717:01"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00717
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00717"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00717"
					"[rsa][message][id1]" => "00717"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nbSendEmailAlert" {
		# MESSAGE 00719:01
		# line in RSA: <agent>: Send to <to> <disposition>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Send to %{to} %{disposition}: %{info}" }
				id => "message-00719:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00719:01"
					"[rsa][message][id1]" => "00719:01"
					"[event][categoryid]" => "1207010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00719
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00719"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00719"
					"[rsa][message][id1]" => "00719"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nbSendEmailReport" {
		# MESSAGE 03514:01
		# line in RSA: <agent>: Send to <to> <disposition>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Send to %{to} %{disposition}: %{info}" }
				id => "message-03514:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03514:01"
					"[rsa][message][id1]" => "03514:01"
					"[event][categoryid]" => "1207010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03514
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03514"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03514"
					"[rsa][message][id1]" => "03514"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nbSMTP" {
		# MESSAGE 00406:01
		# line in RSA: <agent>[<process_id>]: Creating connection to host (<dhost>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Creating connection to host (%{dhost})" }
				id => "message-00406:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00406:01"
					"[rsa][message][id1]" => "00406:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00406
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00406"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00406"
					"[rsa][message][id1]" => "00406"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId979
	# line in RSA: <agent>: { <result> http<space>:<url>: HTTP code=<resultcode>, err=<disposition> | All URLs failed }
	else if [logstash][msgparser][id] == "msgParserId979" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<result>[^\s]*)[\s]+http(?<space>[^:]*):(?<url>[^:]*):[\s]+HTTP[\s]+code=(?<resultcode>[^,]*),[\s]+err=(?<disposition>[^\s]*)[\s]+|[\s]*All[\s]+URLs[\s]+failed[\s]+)$" }
			id => "msgParserId979"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Url(s) failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nco_objserv" {
		# MESSAGE 001230
		# line in RSA: { <agent>[<process_id>]: | <agent> } pam_vas: Authentication <<succeeded> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <result> Access Control Identifier(NT Name):<<<user_address>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\s]*)[\s]+)[\s]+pam_vas:[\s]+Authentication[\s]+<succeeded>[\s]+for[\s]+<(?<event_type>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<c_username>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+(?<result>[^\s]*)[\s]+Access[\s]+Control[\s]+Identifier\(NT[\s]+Name\):<(?<user_address>[^>]*)>$" }
				id => "message-001230"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "001230"
					"[rsa][message][id1]" => "001230"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001230:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } pam_vas: Authentication <<failed> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <result> Access Control Identifier(NT Name):<<<user_address>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_vas:[\s]+Authentication[\s]+<failed>[\s]+for[\s]+<(?<event_type>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<c_username>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+(?<result>[^\s]*)[\s]+Access[\s]+Control[\s]+Identifier\(NT[\s]+Name\):<(?<user_address>[^>]*)>$" }
				id => "message-001230:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failed"
					"[event][id]" => "001230:01"
					"[rsa][message][id1]" => "001230:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId982
	# line in RSA: <agent>: { INFO: <event_description>. <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId982" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*INFO:[\s]+(?<event_description>[^\.]*)\.[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId982"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId983
	# line in RSA: <agent>[<process_id>]: NetVault: Client: '<username>' Class: '<event_type>' Job: '<fld1>' Warnlevel: '<severity>' Msg: '<event_description>'
	else if [logstash][msgparser][id] == "msgParserId983" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: NetVault: Client: '%{username}' Class: '%{event_type}' Job: '%{fld1}' Warnlevel: '%{severity}' Msg: '%{event_description}'" }
			id => "msgParserId983"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NetworkManager" {
		# MESSAGE 00356:01
		# line in RSA: <agent>[<process_id>]: <<<severity>> bluez error getting default adapter: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{severity}> bluez error getting default adapter: %{info}" }
				id => "message-00356:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00356:01"
					"[rsa][message][id1]" => "00356:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE NetworkManager
		# line in RSA: <agent>:<interface>: lacp info state:<info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{interface}: lacp info state:%{info}." }
				id => "message-NetworkManager"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "NetworkManager"
					"[rsa][message][id1]" => "NetworkManager"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00356
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00356"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00356"
					"[rsa][message][id1]" => "00356"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "net-snmp" {
		# MESSAGE 00309:01
		# line in RSA: <agent>[<process_id>]: Connection from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr}" }
				id => "message-00309:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"service" => "%{agent}"
					"[event][id]" => "00309:01"
					"[rsa][message][id1]" => "00309:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00309
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00309"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00309"
					"[rsa][message][id1]" => "00309"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "netatalk" {
		# MESSAGE 00879
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00879"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "00879"
					"[rsa][message][id1]" => "00879"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00880
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{info})" }
				id => "message-00880"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened"
					"[event][id]" => "00880"
					"[rsa][message][id1]" => "00880"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId989
	# line in RSA: <agent>[<process_id>]: CRASH: <event_description>
	else if [logstash][msgparser][id] == "msgParserId989" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: CRASH: %{event_description}" }
			id => "msgParserId989"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId990
	# line in RSA: <agent>: <saddr>(<fld1>) Policy Installed. revision: <version> admin: { <administrator> gui: <hostip>| <administrator> }
	else if [logstash][msgparser][id] == "msgParserId990" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<saddr>[^\(]*)\((?<fld1>[^\)]*)\)[\s]+Policy[\s]+Installed\.[\s]+revision:[\s]+(?<version>[^\s]*)[\s]+admin:[\s]+([\s]*(?<administrator>[^\s]*)[\s]+gui:[\s]+(?<hostip>.*)|[\s]*(?<administrator>[^\s]*)[\s]+)$" }
			id => "msgParserId990"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Policy Installed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "network" {
		# MESSAGE 00011
		# line in RSA: <agent>: <event_description>:<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}:%{disposition}" }
				id => "message-00011"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00011"
					"[rsa][message][id1]" => "00011"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002592
		# line in RSA: <agent>: [  OK  ]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [  OK  ]" }
				id => "message-002592"
				add_field => {
					"[event][id]" => "002592"
					"[rsa][message][id1]" => "002592"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE network
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-network"
				add_field => {
					"[event][id]" => "network"
					"[rsa][message][id1]" => "network"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId991
	# line in RSA: <agent>: { <interface>: <event_description> | <event_description>, <result> }
	else if [logstash][msgparser][id] == "msgParserId991" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<interface>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^,]*),[\s]+(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId991"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId992
	# line in RSA: <agent>[<process_id>]: <process> executed by <username>
	else if [logstash][msgparser][id] == "msgParserId992" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process} executed by %{username}" }
			id => "msgParserId992"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId993
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  Network option <param> was set to the value <change_new>
	else if [logstash][msgparser][id] == "msgParserId993" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Network[\s]+option[\s]+(?<param>[^\s]*)[\s]+was[\s]+set[\s]+to[\s]+the[\s]+value[\s]+(?<change_new>.*)$" }
			id => "msgParserId993"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Network option set to value"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NORIDIAN-ACM-CUSTOM" {
		# MESSAGE 03435
		# line in RSA: <agent>[<process_id>]:   . Open fd=<fld1>, <saddr>:<sport> <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:   . Open fd=%{fld1}, %{saddr}:%{sport} %{fld2}" }
				id => "message-03435"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03435"
					"[rsa][message][id1]" => "03435"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03437
		# line in RSA: <agent>[<process_id>]: [<event_time_string>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{event_time_string}] %{event_description}" }
				id => "message-03437"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03437"
					"[rsa][message][id1]" => "03437"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03436
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-03436"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03436"
					"[rsa][message][id1]" => "03436"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId996
	# line in RSA: <severity> pid=<process_id> <action> <url>: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId996" {
		dissect {
			mapping => { "message" => "%{severity} pid=%{process_id} %{action} %{url}: %{resultcode}" }
			id => "msgParserId996"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId997
	# line in RSA: <agent>: event=<event_type>;site=<fqdn>;status=<disposition>;target=<fld1>;who=<uid>;who_ip=<saddr>
	else if [logstash][msgparser][id] == "msgParserId997" {
		dissect {
			mapping => { "message" => "%{agent}: event=%{event_type};site=%{fqdn};status=%{disposition};target=%{fld1};who=%{uid};who_ip=%{saddr}" }
			id => "msgParserId997"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ns-slapd" {
		# MESSAGE 001741
		# line in RSA: <agent>: unable to dlopen <filename>: <info>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: unable to dlopen %{filename}: %{info}: %{result}" }
				id => "message-001741"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to dlopen file"
					"[event][id]" => "001741"
					"[rsa][message][id1]" => "001741"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001544
		# line in RSA: <agent>: <action>, error <severity> (<event_description>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action}, error %{severity} (%{event_description}) %{info}" }
				id => "message-001544"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001544"
					"[rsa][message][id1]" => "001544"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1000
	# line in RSA: <agent>: nss_ldap: reconnecting to LDAP server { (<result>) | <space> }
	else if [logstash][msgparser][id] == "msgParserId1000" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+nss_ldap:[\s]+reconnecting[\s]+to[\s]+LDAP[\s]+server[\s]+([\s]*\((?<result>[^\)]*)\)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId1000"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "reconnecting to LDAP server"
				"service" => "nss_ldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1001
	# line in RSA: { <agent>[<process_id>] | <agent> }: nss_ldap: reconnected to LDAP server <dhost> <info>
	else if [logstash][msgparser][id] == "msgParserId1001" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+nss_ldap:[\s]+reconnected[\s]+to[\s]+LDAP[\s]+server[\s]+(?<dhost>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId1001"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "reconnected to LDAP server"
				"service" => "nss_ldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "failed" {
		# MESSAGE 001509
		# line in RSA: <agent>: nss_ldap: failed to bind to LDAP server { <dhost>/: | <dhost>: } <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+nss_ldap:[\s]+failed[\s]+to[\s]+bind[\s]+to[\s]+LDAP[\s]+server[\s]+([\s]*(?<dhost>[^/]*)/:[\s]+|[\s]*(?<dhost>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
				id => "message-001509"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed to bind to LDAP server"
				"service" => "nss_ldap"
					"[event][id]" => "001509"
					"[rsa][message][id1]" => "001509"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001509:01
		# line in RSA: failed> for <<Active Directory> user: <<<username>> account: <<<domain>\<fld2>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "failed> for <Active Directory> user: <%{username}> account: <%{domain}\%{fld2}> service: <%{service}> reason: <%{result}>" }
				id => "message-001509:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Kerberos error Failed to obtain credentials"
					"[event][id]" => "001509:01"
					"[rsa][message][id1]" => "001509:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "could" {
		# MESSAGE 001510
		# line in RSA: <agent>: nss_ldap: could not search LDAP server - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: nss_ldap: could not search LDAP server - %{result}" }
				id => "message-001510"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not search LDAP server"
				"service" => "nss_ldap"
					"[event][id]" => "001510"
					"[rsa][message][id1]" => "001510"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001511
		# line in RSA: <agent>: nss_ldap: could not get LDAP result - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: nss_ldap: could not get LDAP result - %{result}" }
				id => "message-001511"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not get LDAP result"
				"service" => "nss_ldap"
					"[event][id]" => "001511"
					"[rsa][message][id1]" => "001511"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nss_wins" {
		# MESSAGE 001288
		# line in RSA: <agent>[<process_id>]: [<event_time_string>, <fld1>] <filename>:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{event_time_string}, %{fld1}] %{filename}:%{info}" }
				id => "message-001288"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001288"
					"[rsa][message][id1]" => "001288"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001289
		# line in RSA: <agent>[<process_id>]: <fld1>: cli_nt_create failed on pipe \<service> to machine <hostname>.  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: cli_nt_create failed on pipe \%{service} to machine %{hostname}.  %{event_description}" }
				id => "message-001289"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
					"[event][id]" => "001289"
					"[rsa][message][id1]" => "001289"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001598
		# line in RSA: <agent>[<process_id>]: <application>: credentials { chain check | check } failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<application>[^:]*):[\s]+credentials[\s]+([\s]*chain[\s]+check[\s]+|[\s]*check[\s]+)[\s]+failed$" }
				id => "message-001598"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "credentials chain/check failed"
					"[event][id]" => "001598"
					"[rsa][message][id1]" => "001598"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001597
		# line in RSA: <agent>[<process_id>]: <application>: key "<obj_type>" not found in map.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: key \"%{obj_type}\" not found in map." }
				id => "message-001597"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "key not found in map"
					"[event][id]" => "001597"
					"[rsa][message][id1]" => "001597"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001596
		# line in RSA: <agent>[<process_id>]: <application>: exports lookup failed for <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: exports lookup failed for %{obj_type}" }
				id => "message-001596"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "exports lookup failed for key"
					"[event][id]" => "001596"
					"[rsa][message][id1]" => "001596"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001595
		# line in RSA: <agent>[<process_id>]: <application>: hostname lookup failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: hostname lookup failed: %{result}" }
				id => "message-001595"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "hostname lookup failed"
					"[event][id]" => "001595"
					"[rsa][message][id1]" => "001595"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002336
		# line in RSA: <agent>[<process_id>]: <result>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result}: %{event_description}" }
				id => "message-002336"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002336"
					"[rsa][message][id1]" => "002336"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nsu" {
		# MESSAGE 002071
		# line in RSA: <agent>: Password rejected for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Password rejected for user %{username}" }
				id => "message-002071"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "Password rejected for user"
					"[event][id]" => "002071"
					"[rsa][message][id1]" => "002071"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002070
		# line in RSA: <agent>: Password accepted for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Password accepted for user %{username}" }
				id => "message-002070"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "Password accepted for user"
					"[event][id]" => "002070"
					"[rsa][message][id1]" => "002070"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "NTP" {
		# MESSAGE 00932
		# line in RSA: <agent>: SLOT: <fld1> SEVERITY: <severity> ENTITY/EVENT CODE: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SLOT: %{fld1} SEVERITY: %{severity} ENTITY/EVENT CODE: %{info}" }
				id => "message-00932"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00932"
					"[rsa][message][id1]" => "00932"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00932:01
		# line in RSA: <agent>: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: %{event_description}" }
				id => "message-00932:01"
				add_field => {
					"[event][id]" => "00932:01"
					"[rsa][message][id1]" => "00932:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00932:02
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00932:02"
				add_field => {
					"[event][id]" => "00932:02"
					"[rsa][message][id1]" => "00932:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "NTPC" {
		# MESSAGE 00869
		# line in RSA: <agent>[<process_id>]: Unable to contact <protocol> server <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to contact %{protocol} server %{daddr}" }
				id => "message-00869"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to contact"
					"[event][id]" => "00869"
					"[rsa][message][id1]" => "00869"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00870
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00870"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00870"
					"[rsa][message][id1]" => "00870"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpd" {
		# MESSAGE 00043:01
		# line in RSA: <agent>[<process_id>]: sendto(<hostip>) (fd=<fld1>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sendto(%{hostip}) (fd=%{fld1}): %{result}" }
				id => "message-00043:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "send error"
					"[event][id]" => "00043:01"
					"[rsa][message][id1]" => "00043:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00043
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00043"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00043"
					"[rsa][message][id1]" => "00043"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpd_initres" {
		# MESSAGE 00353:01
		# line in RSA: <agent>[<process_id>]: couldn't resolve <dhost>, <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: couldn't resolve %{dhost}, %{disposition}" }
				id => "message-00353:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00353:01"
					"[rsa][message][id1]" => "00353:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00353
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00353"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00353"
					"[rsa][message][id1]" => "00353"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpdate" {
		# MESSAGE 00074:01
		# line in RSA: <agent>[<process_id>]: step time server <daddr> offset <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: step time server %{daddr} offset %{fld1}" }
				id => "message-00074:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00074:01"
					"[rsa][message][id1]" => "00074:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00074"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00074"
					"[rsa][message][id1]" => "00074"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1020
	# line in RSA: <agent>[<process_id>]: <severity> agent:<id> <result>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1020" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} agent:%{id} %{result}: %{event_description}" }
			id => "msgParserId1020"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1021
	# line in RSA: <agent>[<process_id>]: (<application>) Failed login for user=<username> from IP=<saddr>
	else if [logstash][msgparser][id] == "msgParserId1021" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{application}) Failed login for user=%{username} from IP=%{saddr}" }
			id => "msgParserId1021"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "failed login for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "OA" {
		# MESSAGE 001394
		# line in RSA: <agent>: <username> logged into the Onboard Administrator from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} logged into the Onboard Administrator from %{saddr}" }
				id => "message-001394"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user logged into the Onboard Administrator"
					"[event][id]" => "001394"
					"[rsa][message][id1]" => "001394"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001395
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001395"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001395"
					"[rsa][message][id1]" => "001395"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oam_login_service" {
		# MESSAGE 001427
		# line in RSA: { <agent>[<process_id>]: | <agent>: } session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-001427"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"event_description" => "session opened for user"
					"[event][id]" => "001427"
					"[rsa][message][id1]" => "001427"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001428
		# line in RSA: { <agent>[<process_id>]: | <agent>: } session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-001428"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"event_description" => "session opened for user"
					"[event][id]" => "001428"
					"[rsa][message][id1]" => "001428"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002105
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-002105"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "002105"
					"[rsa][message][id1]" => "002105"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1025
	# line in RSA: { <agent>[<process_id>]: | <agent>: } ocmd, service '<service>' with pid <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1025" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+ocmd,[\s]+service[\s]+'(?<service>[^']*)'[\s]+with[\s]+pid[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1025"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1026
	# line in RSA: <agent>: oddjobd <event_description>
	else if [logstash][msgparser][id] == "msgParserId1026" {
		dissect {
			mapping => { "message" => "%{agent}: oddjobd %{event_description}" }
			id => "msgParserId1026"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1027
	# line in RSA: <agent>:last message repeated <dclass_counter1> times
	else if [logstash][msgparser][id] == "msgParserId1027" {
		dissect {
			mapping => { "message" => "%{agent}:last message repeated %{dclass_counter1} times" }
			id => "msgParserId1027"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "last message repeated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1028
	# line in RSA: <agent>: <event_description> couldn't open <filename>
	else if [logstash][msgparser][id] == "msgParserId1028" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} couldn't open %{filename}" }
			id => "msgParserId1028"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1029
	# line in RSA: <agent>[<process_id>]: [<event_type>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1029" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{event_type}] %{event_description}" }
			id => "msgParserId1029"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1030
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId1030" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1030"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1031
	# line in RSA: <agent>[<process_id>]: <node>/<saddr> <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId1031" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{node}/%{saddr} %{event_description}: %{result}" }
			id => "msgParserId1031"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1032
	# line in RSA: <agent>: [<severity>][<process_id>: <application>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1032" {
		dissect {
			mapping => { "message" => "%{agent}: [%{severity}][%{process_id}: %{application}] %{event_description}" }
			id => "msgParserId1032"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Opsware" {
		# MESSAGE 001240
		# line in RSA: <agent>: ERROR: while writing to { '<filename>': | <filename> } [Errno <resultcode>] <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+ERROR:[\s]+while[\s]+writing[\s]+to[\s]+([\s]*'(?<filename>[^']*)':[\s]+|[\s]*(?<filename>[^\s]*)[\s]+)[\s]+\[Errno[\s]+(?<resultcode>[^\]]*)\][\s]+(?<result>.*)$" }
				id => "message-001240"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ERROR while writing file"
					"[event][id]" => "001240"
					"[rsa][message][id1]" => "001240"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001240:01
		# line in RSA: <agent> logging: <severity>: Lost <fld1> log messages for '<directory>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} logging: %{severity}: Lost %{fld1} log messages for '%{directory}'" }
				id => "message-001240:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Lost log messages for"
					"[event][id]" => "001240:01"
					"[rsa][message][id1]" => "001240:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001240:02
		# line in RSA: <agent> logging: <severity>: Lost <fld1> log messages for <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} logging: %{severity}: Lost %{fld1} log messages for %{info}" }
				id => "message-001240:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Lost log messages for"
					"[event][id]" => "001240:02"
					"[rsa][message][id1]" => "001240:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1036
	# line in RSA: <agent>[<process_id>]: <application>: <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1036" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{severity} %{event_description}" }
			id => "msgParserId1036"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1037
	# line in RSA: { <agent>[<process_id>]: | <agent>: } { <event_description>: '<filename>' | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1037" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<event_description>[^:]*):[\s]+'(?<filename>[^']*)'[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1037"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1038
	# line in RSA: [<agent>: <process>][<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1038" {
		dissect {
			mapping => { "message" => "[%{agent}: %{process}][%{process_id}]: %{event_description}" }
			id => "msgParserId1038"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "opswsshd" {
		# MESSAGE 001518
		# line in RSA: <agent>[<process_id>]: error: PAM: Authentication failure { for illegal user | for invalid user | for } <username> from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+error:[\s]+PAM:[\s]+Authentication[\s]+failure[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001518"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "001518"
					"[rsa][message][id1]" => "001518"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001530
		# line in RSA: <agent>[<process_id>]: <process>: logout() returned an error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: logout() returned an error" }
				id => "message-001530"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Failure"
				"event_description" => "logout returned an error"
					"[event][id]" => "001530"
					"[rsa][message][id1]" => "001530"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001529
		# line in RSA: <agent>[<process_id>]: Received signal <resultcode>; <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received signal %{resultcode}; %{action}." }
				id => "message-001529"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"service" => "%{agent}"
				"event_description" => "Received signal - terminating"
					"[event][id]" => "001529"
					"[rsa][message][id1]" => "001529"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001528
		# line in RSA: <agent>[<process_id>]: Bad protocol version identification '<version>' from <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Bad protocol version identification '%{version}' from %{hostip}" }
				id => "message-001528"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Bad protocol version identification"
					"[event][id]" => "001528"
					"[rsa][message][id1]" => "001528"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001527
		# line in RSA: <agent>[<process_id>]: Server listening on <hostip> port <network_port>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server listening on %{hostip} port %{network_port}." }
				id => "message-001527"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"event_description" => "Server listening"
					"[event][id]" => "001527"
					"[rsa][message][id1]" => "001527"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001526
		# line in RSA: <agent>[<process_id>]: User <username> not allowed because shell <action> does not exist
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} not allowed because shell %{action} does not exist" }
				id => "message-001526"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User not allowed"
				"result" => "shell  does not exist"
					"[event][id]" => "001526"
					"[rsa][message][id1]" => "001526"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001525
		# line in RSA: <agent>[<process_id>]: <process>: INFO  <username> authenticated { for an <protocol> login | for a <protocol> client tunnel }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<process>[^:]*):[\s]+INFO[\s]+(?<username>[^\s]*)[\s]+authenticated[\s]+([\s]*for[\s]+an[\s]+(?<protocol>[^\s]*)[\s]+login[\s]+|[\s]*for[\s]+a[\s]+(?<protocol>[^\s]*)[\s]+client[\s]+tunnel[\s]+)$" }
				id => "message-001525"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "User authenticated for client tunel"
					"[event][id]" => "001525"
					"[rsa][message][id1]" => "001525"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001524
		# line in RSA: <agent>[<process_id>]: Accepted keyboard-interactive/pam for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted keyboard-interactive/pam for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-001524"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted keyboard-interactive/pam"
					"[event][id]" => "001524"
					"[rsa][message][id1]" => "001524"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001523
		# line in RSA: <agent>[<process_id>]: Accepted password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-001523"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted password"
					"[event][id]" => "001523"
					"[rsa][message][id1]" => "001523"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001522
		# line in RSA: <agent>[<process_id>]: Failed none { for illegal user | for invalid user | for } <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+none[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-001522"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failed"
					"[event][id]" => "001522"
					"[rsa][message][id1]" => "001522"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001521
		# line in RSA: <agent>[<process_id>]: <process>: INFO <username> failed to authenticate for an <protocol>login
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: INFO %{username} failed to authenticate for an %{protocol}login" }
				id => "message-001521"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "User failed to authenticate for login"
					"[event][id]" => "001521"
					"[rsa][message][id1]" => "001521"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001520
		# line in RSA: <agent>[<process_id>]: { PAM <process>: | opsware_pam(<process>): <service>: } delete non-existent entry; <obj_name>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*PAM[\s]+(?<process>[^:]*):[\s]+|[\s]*opsware_pam\((?<process>[^\)]*)\):[\s]+(?<service>[^:]*):[\s]+)[\s]+delete[\s]+non\-existent[\s]+entry;[\s]+(?<obj_name>.*)$" }
				id => "message-001520"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM/opsware_pam delete non-existent entry"
					"[event][id]" => "001520"
					"[rsa][message][id1]" => "001520"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001519
		# line in RSA: <agent>[<process_id>]: Failed keyboard-interactive/pam { for illegal user | for invalid user | for } <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+keyboard\-interactive/pam[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-001519"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "001519"
					"[rsa][message][id1]" => "001519"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001517
		# line in RSA: <agent>[<process_id>]: Failed password { for illegal user | for invalid user | for } <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+password[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-001517"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "001517"
					"[rsa][message][id1]" => "001517"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001514
		# line in RSA: <agent>[<process_id>]: <application>: ERROR <space> Opsware user named '<username>' is not allowed to use the <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: ERROR %{space} Opsware user named '%{username}' is not allowed to use the %{service}" }
				id => "message-001514"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Opsware user is not allowed to use shell"
					"[event][id]" => "001514"
					"[rsa][message][id1]" => "001514"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001512
		# line in RSA: <agent>[<process_id>]: Did not receive identification string from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Did not receive identification string from %{saddr}" }
				id => "message-001512"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "no identification string"
				"event_description" => "Did not receive identification string from peer"
					"[event][id]" => "001512"
					"[rsa][message][id1]" => "001512"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001513
		# line in RSA: <agent>[<process_id>]: Protocol major versions differ for <saddr>: <change_old> vs. <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Protocol major versions differ for %{saddr}: %{change_old} vs. %{change_new}" }
				id => "message-001513"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Protocol major versions differ"
					"[event][id]" => "001513"
					"[rsa][message][id1]" => "001513"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001516
		# line in RSA: <agent>[<process_id>]: PAM <process>: no default config <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM %{process}: no default config %{filename}" }
				id => "message-001516"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM no default config"
					"[event][id]" => "001516"
					"[rsa][message][id1]" => "001516"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001515
		# line in RSA: <agent>[<process_id>]: { error: PAM: <process>(): <result> | <process>: ERROR <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*error:[\s]+PAM:[\s]+(?<process>[^\(]*)\(\):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<process>[^:]*):[\s]+ERROR[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-001515"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM error"
					"[event][id]" => "001515"
					"[rsa][message][id1]" => "001515"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001515:01
		# line in RSA: <agent>[<process_id>]: <event_description> by ::1 [<fld1>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} by ::1 [%{fld1}]" }
				id => "message-001515:01"
				add_field => {
				"hostname" => "%{hhost}"
				"service" => "%{agent}"
					"[event][id]" => "001515:01"
					"[rsa][message][id1]" => "001515:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001515:02
		# line in RSA: <agent>[<process_id>]: <event_description> user <username> {from ::1|from <saddr>} port <network_port> ssh2 [<fld2>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+user[\s]+(?<username>[^\s]*)[\s]+(from[\s]+::1|from[\s]+(?<saddr>[^\s]*))[\s]+port[\s]+(?<network_port>[^\s]*)[\s]+ssh2[\s]+\[(?<fld2>[^\]]*)\]$" }
				id => "message-001515:02"
				add_field => {
				"hostname" => "%{hhost}"
				"service" => "%{agent}"
					"[event][id]" => "001515:02"
					"[rsa][message][id1]" => "001515:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001515:03
		# line in RSA: <agent>[<process_id>]: <process>: {<fld1>: <event_description> |<event_description>}[<fld2>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<process>[^:]*):[\s]+((?<fld1>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|(?<event_description>[^\[]*))\[(?<fld2>[^\]]*)\][\s]+$" }
				id => "message-001515:03"
				add_field => {
				"hostname" => "%{hhost}"
				"service" => "%{agent}"
					"[event][id]" => "001515:03"
					"[rsa][message][id1]" => "001515:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Oracle" {
		# MESSAGE 002172
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_time_string> { ERROR | INFO | WARNING } <sessionid> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_time_string>[^\s]*)[\s]+([\s]*ERROR[\s]+|[\s]*INFO[\s]+|[\s]*WARNING[\s]+)[\s]+(?<sessionid>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-002172"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002172"
					"[rsa][message][id1]" => "002172"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00500:01
		# line in RSA:  <agent>: <fld1>:Oracle Clusterware  <process>  <fld2> process ID {<process_id> <fld3>|<process_id>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^:]*):Oracle[\s]+Clusterware[\s]+(?<process>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+process[\s]+ID[\s]+((?<process_id>[^\s]*)[\s]+(?<fld3>[^\s]*)|(?<process_id>[^\s]*))[\s]+$" }
				id => "message-00500:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00500:01"
					"[rsa][message][id1]" => "00500:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1063
	# line in RSA: <agent>: <event_description>: <filename> . errno = <resultcode>, <result>
	else if [logstash][msgparser][id] == "msgParserId1063" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{filename} . errno = %{resultcode}, %{result}" }
			id => "msgParserId1063"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1064
	# line in RSA: <agent>: <event_type>: peer name: <fqdn>; common name: <hostname>
	else if [logstash][msgparser][id] == "msgParserId1064" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_type}: peer name: %{fqdn}; common name: %{hostname}" }
			id => "msgParserId1064"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1065
	# line in RSA: <agent>]: <event_description> on <filename>
	else if [logstash][msgparser][id] == "msgParserId1065" {
		dissect {
			mapping => { "message" => "%{agent}]: %{event_description} on %{filename}" }
			id => "msgParserId1065"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1066
	# line in RSA: <agent>: <fld1>: exec <application> <disposition> (errno <resultcode>)
	else if [logstash][msgparser][id] == "msgParserId1066" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1}: exec %{application} %{disposition} (errno %{resultcode})" }
			id => "msgParserId1066"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ossec" {
		# MESSAGE 001218
		# line in RSA: <agent>: Alert Level: <severity>; Rule: <resultcode> - <result>; <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Alert Level: %{severity}; Rule: %{resultcode} - %{result}; %{event_description}" }
				id => "message-001218"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001218"
					"[rsa][message][id1]" => "001218"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002500
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002500"
				add_field => {
					"[event][id]" => "002500"
					"[rsa][message][id1]" => "002500"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "outbound-mta/smtpd" {
		# MESSAGE 00971
		# line in RSA: <agent>[<process_id>]: <severity>: <event_description> from <shost>[<saddr>] in <action> command: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description} from %{shost}[%{saddr}] in %{action} command: %{info}" }
				id => "message-00971"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00971"
					"[rsa][message][id1]" => "00971"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03662:01
		# line in RSA: <agent>[<process_id>]: <action> from <shost>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action} from %{shost}[%{saddr}]" }
				id => "message-03662:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03662:01"
					"[rsa][message][id1]" => "03662:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03662
		# line in RSA: <agent>[<process_id>]: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}" }
				id => "message-03662"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03662"
					"[rsa][message][id1]" => "03662"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1069
	# line in RSA: <agent>: <action>.
	else if [logstash][msgparser][id] == "msgParserId1069" {
		dissect {
			mapping => { "message" => "%{agent}: %{action}." }
			id => "msgParserId1069"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "outbound-mta/cleanup" {
		# MESSAGE 03665:01
		# line in RSA: <agent>[<process_id>]: <fld1>: message-id=<id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: message-id=%{id}" }
				id => "message-03665:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03665:01"
					"[rsa][message][id1]" => "03665:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03665
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-03665"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03665"
					"[rsa][message][id1]" => "03665"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "outbound-mta/qmgr" {
		# MESSAGE 03666:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: from=%{from}, size=%{bytes}, %{fld2}" }
				id => "message-03666:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03666:01"
					"[rsa][message][id1]" => "03666:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03666
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-03666"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03666"
					"[rsa][message][id1]" => "03666"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "outbound-mta/smtp" {
		# MESSAGE 03669:01
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, relay=<saddr>[<fld2>], delay=<fld3>, status=<disposition> <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: to=%{to}, relay=%{saddr}[%{fld2}], delay=%{fld3}, status=%{disposition} %{fld4}" }
				id => "message-03669:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03669:01"
					"[rsa][message][id1]" => "03669:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03669
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-03669"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03669"
					"[rsa][message][id1]" => "03669"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1072
	# line in RSA: <agent>: omc <action> (<application>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1072" {
		dissect {
			mapping => { "message" => "%{agent}: omc %{action} (%{application}) %{event_description}" }
			id => "msgParserId1072"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1073
	# line in RSA: <agent>[<process_id>]: [<parent_pid>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1073" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{parent_pid}] %{event_description}" }
			id => "msgParserId1073"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pam" {
		# MESSAGE 001290
		# line in RSA: <agent>: <process>[<process_id>]: pam_unix(<service>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: pam_unix(%{service}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-001290"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "001290"
					"[rsa][message][id1]" => "001290"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001291
		# line in RSA: <agent>: <process>[<process_id>]: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-001291"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
					"[event][id]" => "001291"
					"[rsa][message][id1]" => "001291"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001292
		# line in RSA: <agent>: <process>[<process_id>]: pam_unix(<service>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>  user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}[%{process_id}]: pam_unix(%{service}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}  user=%{username}" }
				id => "message-001292"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "001292"
					"[rsa][message][id1]" => "001292"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002614
		# line in RSA: <agent>][<process_id>]: {Starting <action> | Shutting <action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\]]*)\]\[(?<process_id>[^\]]*)\]:[\s]+(Starting[\s]+(?<action>[^\s]*)[\s]+|[\s]*Shutting[\s]+(?<action>.*))$" }
				id => "message-002614"
				add_field => {
					"[event][id]" => "002614"
					"[rsa][message][id1]" => "002614"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_access" {
		# MESSAGE 00368
		# line in RSA: <agent>[<process_id>]: access denied for user { ` | ' } <username>' from { ` | ' } <shost>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+access[\s]+denied[\s]+for[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+from[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<shost>[^']*)'$" }
				id => "message-00368"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "access denied for user"
					"[event][id]" => "00368"
					"[rsa][message][id1]" => "00368"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00368:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00368:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00368:01"
					"[rsa][message][id1]" => "00368:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_adp_ldap" {
		# MESSAGE 001923
		# line in RSA: <agent>[<process_id>]: user <username> not allowed to login to this host
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: user %{username} not allowed to login to this host" }
				id => "message-001923"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication denied"
					"[event][id]" => "001923"
					"[rsa][message][id1]" => "001923"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001922
		# line in RSA: <agent>[<process_id>]: user <username> succeeded netgroup test
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: user %{username} succeeded netgroup test" }
				id => "message-001922"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user succeeded netgroup test"
					"[event][id]" => "001922"
					"[rsa][message][id1]" => "001922"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001924
		# line in RSA: <agent>[<process_id>]: unable to connect to { host <hostip> | <shost> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+unable[\s]+to[\s]+connect[\s]+to[\s]+([\s]*host[\s]+(?<hostip>[^\s]*)[\s]+|[\s]*(?<shost>[^\s]*)[\s]+)$" }
				id => "message-001924"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to connect to host"
					"[event][id]" => "001924"
					"[rsa][message][id1]" => "001924"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001925
		# line in RSA: <agent>[<process_id>]: host <hostname> doesn't exist in any host netgroup
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: host %{hostname} doesn't exist in any host netgroup" }
				id => "message-001925"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "host doesn't exist in any host netgroup"
					"[event][id]" => "001925"
					"[rsa][message][id1]" => "001925"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_adp_passwdqc" {
		# MESSAGE 002034
		# line in RSA: <agent>[<process_id>]: pam_ldap: error trying to bind as user "<dn>" (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_ldap: error trying to bind as user \"%{dn}\" (%{result})" }
				id => "message-002034"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "pam_ldap bind error"
					"[event][id]" => "002034"
					"[rsa][message][id1]" => "002034"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002035
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-002035"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002035"
					"[rsa][message][id1]" => "002035"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_asg" {
		# MESSAGE 001444
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Login for [<username>] - rhost[<hostip>],tty[<terminal>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Login[\s]+for[\s]+\[(?<username>[^\]]*)\][\s]+\-[\s]+rhost\[(?<hostip>[^\]]*)\],tty\[(?<terminal>[^\]]*)\]$" }
				id => "message-001444"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
					"[event][id]" => "001444"
					"[rsa][message][id1]" => "001444"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001445
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Login <username> not an ASG login
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Login[\s]+(?<username>[^\s]*)[\s]+not[\s]+an[\s]+ASG[\s]+login$" }
				id => "message-001445"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User login not an ASG login"
					"[event][id]" => "001445"
					"[rsa][message][id1]" => "001445"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_auth" {
		# MESSAGE 00963
		# line in RSA: <agent>[<process_id>]: pam_sm_authenticate: { tty | user | pass } [<username>] obtained
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_sm_authenticate:[\s]+([\s]*tty[\s]+|[\s]*user[\s]+|[\s]*pass[\s]+)[\s]+\[(?<username>[^\]]*)\][\s]+obtained$" }
				id => "message-00963"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "attribute obtained"
					"[event][id]" => "00963"
					"[rsa][message][id1]" => "00963"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:01
		# line in RSA: <agent>[<process_id>]: pam_sm_authenticate: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_sm_authenticate: %{event_description}" }
				id => "message-00963:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00963:01"
					"[rsa][message][id1]" => "00963:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:02
		# line in RSA: { <agent>[<process_id>]: | <agent>: } pam_sm_acct_mgmt: user [<uid>] successfully authorized
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_sm_acct_mgmt:[\s]+user[\s]+\[(?<uid>[^\]]*)\][\s]+successfully[\s]+authorized$" }
				id => "message-00963:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "user successfully authorized"
					"[event][id]" => "00963:02"
					"[rsa][message][id1]" => "00963:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:03
		# line in RSA: <agent>[<process_id>]: pam_sm_acct_mgmt: { tty | username } obtained [<uid>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_sm_acct_mgmt:[\s]+([\s]*tty[\s]+|[\s]*username[\s]+)[\s]+obtained[\s]+\[(?<uid>[^\]]*)\]$" }
				id => "message-00963:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "attribute obtained"
					"[event][id]" => "00963:03"
					"[rsa][message][id1]" => "00963:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:04
		# line in RSA: { <agent>[<process_id>]: | <agent>: } pam_sm_acct_mgmt: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_sm_acct_mgmt:[\s]+(?<event_description>.*)$" }
				id => "message-00963:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00963:04"
					"[rsa][message][id1]" => "00963:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:05
		# line in RSA: { <agent>[<process_id>]: | <agent>: } tac_authen_pap_read: <event_description>, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+tac_authen_pap_read:[\s]+(?<event_description>[^,]*),[\s]+(?<result>.*)$" }
				id => "message-00963:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
					"[event][id]" => "00963:05"
					"[rsa][message][id1]" => "00963:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:06
		# line in RSA: <agent>[<process_id>]: tacacs_get_password: obtained password [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tacacs_get_password: obtained password [%{username}]" }
				id => "message-00963:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"agent" => "pam_auth"
				"event_description" => "obtained password"
					"[event][id]" => "00963:06"
					"[rsa][message][id1]" => "00963:06"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00963:07
		# line in RSA: <agent>[<process_id>]: tacacs_get_password: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tacacs_get_password: %{action}" }
				id => "message-00963:07"
				add_field => {
				"hostname" => "%{hhost}"
				"agent" => "pam_auth"
				"event_description" => "tacacs_get_password request"
					"[event][id]" => "00963:07"
					"[rsa][message][id1]" => "00963:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1094
	# line in RSA: <agent>[<process_id>]: <action> opening <process>
	else if [logstash][msgparser][id] == "msgParserId1094" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{action} opening %{process}" }
			id => "msgParserId1094"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1095
	# line in RSA: <agent>[<process_id>]: (<service>) unrecognized option '<result>'
	else if [logstash][msgparser][id] == "msgParserId1095" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{service}) unrecognized option '%{result}'" }
			id => "msgParserId1095"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unrecognized option"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_rhosts_auth" {
		# MESSAGE 00033
		# line in RSA: <agent>[<process_id>]: allowed to <fld1>@<dhost> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: allowed to %{fld1}@%{dhost} as %{username}" }
				id => "message-00033"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00033"
					"[rsa][message][id1]" => "00033"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00033:02
		# line in RSA: <agent>[<process_id>]: denied to <administrator>@<dhost> as <username>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: denied to %{administrator}@%{dhost} as %{username}: %{result}" }
				id => "message-00033:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication denied"
					"[event][id]" => "00033:02"
					"[rsa][message][id1]" => "00033:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00033:01
		# line in RSA: <agent>[<process_id>]: denied to <fld1>@<dhost> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: denied to %{fld1}@%{dhost} as %{username}" }
				id => "message-00033:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication denied"
					"[event][id]" => "00033:01"
					"[rsa][message][id1]" => "00033:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1099
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description> user name: <username>
	else if [logstash][msgparser][id] == "msgParserId1099" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^\s]*)[\s]+user[\s]+name:[\s]+(?<username>.*)$" }
			id => "msgParserId1099"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1100
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <application>() returned <resultcode> (Critical error - <result>)
	else if [logstash][msgparser][id] == "msgParserId1100" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^\(]*)\(\)[\s]+returned[\s]+(?<resultcode>[^\s]*)[\s]+\(Critical[\s]+error[\s]+\-[\s]+(?<result>[^\)]*)\)$" }
			id => "msgParserId1100"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "pam Critical error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_tally" {
		# MESSAGE 00349
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00349"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00349"
					"[rsa][message][id1]" => "00349"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pam_tally
		# line in RSA: pam_tally(<service>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_tally(%{service}): %{event_description}" }
				id => "message-pam_tally"
				add_field => {
					"[event][id]" => "pam_tally"
					"[rsa][message][id1]" => "pam_tally"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM_pwdb" {
		# MESSAGE 00062:04
		# line in RSA: <agent>[<process_id>]: password for (<username>/<uid>) changed by (<administrator>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password for (%{username}/%{uid}) changed by (%{administrator})" }
				id => "message-00062:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password for user changed"
					"[event][id]" => "00062:04"
					"[rsa][message][id1]" => "00062:04"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00062:05
		# line in RSA: <agent>[<process_id>]: <dclass_counter1> more authentication failures; <username>(uid=<uid>) -> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{dclass_counter1} more authentication failures; %{username}(uid=%{uid}) -> %{result}" }
				id => "message-00062:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failures"
					"[event][id]" => "00062:05"
					"[rsa][message][id1]" => "00062:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00062
		# line in RSA: <agent>[<process_id>]: authentication failure; <username>(uid=<uid>) <space> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; %{username}(uid=%{uid}) %{space} %{result}" }
				id => "message-00062"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00062"
					"[rsa][message][id1]" => "00062"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00062:01
		# line in RSA: <agent>[<process_id>]: (<protocol>) session opened for user <administrator> by <username> (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{protocol}) session opened for user %{administrator} by %{username} (uid=%{uid})" }
				id => "message-00062:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00062:01"
					"[rsa][message][id1]" => "00062:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00062:03
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00062:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password"
					"[event][id]" => "00062:03"
					"[rsa][message][id1]" => "00062:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00062:02
		# line in RSA: <agent>[<process_id>]: (<protocol>) session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{protocol}) session closed for user %{username}" }
				id => "message-00062:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00062:02"
					"[rsa][message][id1]" => "00062:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM_unix" {
		# MESSAGE 00154
		# line in RSA: <agent>[<process_id>]: (<fld1>) session closed for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{fld1}) session closed for user %{username} by (uid=%{uid})" }
				id => "message-00154"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "00154"
					"[rsa][message][id1]" => "00154"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00154:02
		# line in RSA: <agent>[<process_id>]: (<fld1>) session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{fld1}) session closed for user %{username}" }
				id => "message-00154:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "00154:02"
					"[rsa][message][id1]" => "00154:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00154:01
		# line in RSA: <agent>[<process_id>]: (<fld1>) session { opened | open } for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\((?<fld1>[^\)]*)\)[\s]+session[\s]+([\s]*opened[\s]+|[\s]*open[\s]+)[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-00154:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00154:01"
					"[rsa][message][id1]" => "00154:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM-rootok" {
		# MESSAGE 00455
		# line in RSA: <agent>[<process_id>]: authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failed" }
				id => "message-00455"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00455"
					"[rsa][message][id1]" => "00455"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00455:01
		# line in RSA: <agent>[<process_id>]: authentication succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication succeeded" }
				id => "message-00455:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "authentication succeeded"
					"[event][id]" => "00455:01"
					"[rsa][message][id1]" => "00455:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_winbind" {
		# MESSAGE 00724
		# line in RSA: <agent>[<process_id>]: user '<username>' granted access
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: user '%{username}' granted access" }
				id => "message-00724"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user granted access"
					"[event][id]" => "00724"
					"[rsa][message][id1]" => "00724"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00724:01
		# line in RSA: <agent>[<process_id>]: request failed: <result>, PAM error was <resultcode>, NT error was <event_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: request failed: %{result}, PAM error was %{resultcode}, NT error was %{event_type}" }
				id => "message-00724:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "request failure"
					"[event][id]" => "00724:01"
					"[rsa][message][id1]" => "00724:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00724:02
		# line in RSA: <agent>[<process_id>]: user { ` | ' } <username>' denied access (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+denied[\s]+access[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-00724:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "user denied access"
					"[event][id]" => "00724:02"
					"[rsa][message][id1]" => "00724:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00724:03
		# line in RSA: <agent>[<process_id>]: internal module error (<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: internal module error (%{info}" }
				id => "message-00724:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "internal module error"
					"[event][id]" => "00724:03"
					"[rsa][message][id1]" => "00724:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00724:04
		# line in RSA: <agent>[<process_id>]: write to socket failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: write to socket failed" }
				id => "message-00724:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "write to socket failed"
					"[event][id]" => "00724:04"
					"[rsa][message][id1]" => "00724:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00724:05
		# line in RSA: <agent>[<process_id>]: Could not retrieve user's password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not retrieve user's password" }
				id => "message-00724:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "Could not retrieve user's password"
					"[event][id]" => "00724:05"
					"[rsa][message][id1]" => "00724:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00724:06
		# line in RSA: <agent>[<process_id>]: user { ` | ' } <username>' password expired
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+password[\s]+expired$" }
				id => "message-00724:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user password expired"
					"[event][id]" => "00724:06"
					"[rsa][message][id1]" => "00724:06"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1112
	# line in RSA: <agent>[<process_id>]: Login for [<username>] - { from [<hostname>] on <terminal>[<protocol>] | <result> }
	else if [logstash][msgparser][id] == "msgParserId1112" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Login[\s]+for[\s]+\[(?<username>[^\]]*)\][\s]+\-[\s]+([\s]*from[\s]+\[(?<hostname>[^\]]*)\][\s]+on[\s]+(?<terminal>[^\[]*)\[(?<protocol>[^\]]*)\][\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId1112"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1119
	# line in RSA: <agent>[<process_id>]: opendir(<directory>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId1119" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: opendir(%{directory}): %{event_description}" }
			id => "msgParserId1119"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1120
	# line in RSA: <agent>[<process_id>]: unable to create directory <directory>
	else if [logstash][msgparser][id] == "msgParserId1120" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: unable to create directory %{directory}" }
			id => "msgParserId1120"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to create directory"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM-tacplus" {
		# MESSAGE 00964
		# line in RSA: <agent>[<process_id>]: auth failed: <result>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: auth failed: %{result}, %{info}" }
				id => "message-00964"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00964"
					"[rsa][message][id1]" => "00964"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00964:01
		# line in RSA: <agent>[<process_id>]: auth failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: auth failed: %{result}" }
				id => "message-00964:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00964:01"
					"[rsa][message][id1]" => "00964:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002357
		# line in RSA: <agent>[<process_id>]: connection failed srv <saddr>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection failed srv %{saddr}: %{result}" }
				id => "message-002357"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection failed"
					"[event][id]" => "002357"
					"[rsa][message][id1]" => "002357"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002358
		# line in RSA: <agent>[<process_id>]: no more servers to connect
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: no more servers to connect" }
				id => "message-002358"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "no more servers to connect"
					"[event][id]" => "002358"
					"[rsa][message][id1]" => "002358"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PAM-tacplus:05
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-PAM-tacplus:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "PAM-tacplus:05"
					"[rsa][message][id1]" => "PAM-tacplus:05"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pamauth" {
		# MESSAGE 03496
		# line in RSA: <agent>: pam_unix_auth(<service>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix_auth(%{service}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-03496"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "03496"
					"[rsa][message][id1]" => "03496"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03496:01
		# line in RSA: <agent>: pam_ldap: missing "<param>" in file "<filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_ldap: missing \"%{param}\" in file \"%{filename}\"" }
				id => "message-03496:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "missing parameter in conf file"
					"[event][id]" => "03496:01"
					"[rsa][message][id1]" => "03496:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03496:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03496:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03496:02"
					"[rsa][message][id1]" => "03496:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "passwd" {
		# MESSAGE 00044:27
		# line in RSA: <agent>: [module:pam_lsass]<event_description> { [login:patrol][error code: <resultcode>] |  [error code: <resultcode>] }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[module:pam_lsass\](?<event_description>[^\s]*)[\s]+([\s]*\[login:patrol\]\[error[\s]+code:[\s]+(?<resultcode>[^\]]*)\][\s]+|[\s]*\[error[\s]+code:[\s]+(?<resultcode>[^\]]*)\][\s]+)$" }
				id => "message-00044:27"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
					"[event][id]" => "00044:27"
					"[rsa][message][id1]" => "00044:27"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty= <terminal> ruser=<c_username> rhost=<shost>  user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty= %{terminal} ruser=%{c_username} rhost=%{shost}  user=%{username}" }
				id => "message-00044"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00044"
					"[rsa][message][id1]" => "00044"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:09
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty= <terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty= %{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00044:09"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00044:09"
					"[rsa][message][id1]" => "00044:09"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:10
		# line in RSA: { <agent>[<process_id>]: | <agent>: pam_unix(<service>): } user "<username>" does not exist in /etc/passwd { or NIS | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+pam_unix\((?<service>[^\)]*)\):[\s]+)[\s]+user[\s]+\"(?<username>[^\"]*)\"[\s]+does[\s]+not[\s]+exist[\s]+in[\s]+/etc/passwd[\s]+([\s]*or[\s]+NIS[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-00044:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "nonexistent user"
				"result" => "does not exist in /etc/passwd or NIS"
					"[event][id]" => "00044:10"
					"[rsa][message][id1]" => "00044:10"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:20
		# line in RSA: <agent>: pam_winbind(<service>): request <application> failed: <action>, PAM error: <result> (<resultcode>), NTSTATUS: <info>, Error message was: <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_winbind(%{service}): request %{application} failed: %{action}, PAM error: %{result} (%{resultcode}), NTSTATUS: %{info}, Error message was: %{disposition}" }
				id => "message-00044:20"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure - user password expired"
					"[event][id]" => "00044:20"
					"[rsa][message][id1]" => "00044:20"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:21
		# line in RSA: <agent>: pam_winbind(<service>): user { ` | ' } <username>' password expired
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+pam_winbind\((?<service>[^\)]*)\):[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+password[\s]+expired$" }
				id => "message-00044:21"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user password expired"
					"[event][id]" => "00044:21"
					"[rsa][message][id1]" => "00044:21"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:22
		# line in RSA: <agent>: pam_winbind(<service>): user { ` | ' } <username>' password changed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+pam_winbind\((?<service>[^\)]*)\):[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+password[\s]+changed$" }
				id => "message-00044:22"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user password changed"
					"[event][id]" => "00044:22"
					"[rsa][message][id1]" => "00044:22"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:23
		# line in RSA: <agent>: pam_winbind(<service>): user { ` | ' } <username>' { granted access | OK }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+pam_winbind\((?<service>[^\)]*)\):[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+([\s]*granted[\s]+access[\s]+|[\s]*OK[\s]+)$" }
				id => "message-00044:23"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "user granted access"
					"[event][id]" => "00044:23"
					"[rsa][message][id1]" => "00044:23"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:24
		# line in RSA: <agent>: pam_winbind(<service>): user { ` | ' } <username>' new password required
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+pam_winbind\((?<service>[^\)]*)\):[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+new[\s]+password[\s]+required$" }
				id => "message-00044:24"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "new password required for user"
					"[event][id]" => "00044:24"
					"[rsa][message][id1]" => "00044:24"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:25
		# line in RSA: <agent>: pam_winbind(<service>): internal module error (retval = <result>(<resultcode>), user = '<username>')
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_winbind(%{service}): internal module error (retval = %{result}(%{resultcode}), user = '%{username}')" }
				id => "message-00044:25"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "internal module error"
					"[event][id]" => "00044:25"
					"[rsa][message][id1]" => "00044:25"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:26
		# line in RSA: <agent>: pam_winbind(<service>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_winbind(%{service}): %{event_description}" }
				id => "message-00044:26"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
					"[event][id]" => "00044:26"
					"[rsa][message][id1]" => "00044:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  { pam_unix(<service>): | <space> } password changed for <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+password[\s]+changed[\s]+for[\s]+(?<username>.*)$" }
				id => "message-00044:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password change"
					"[event][id]" => "00044:01"
					"[rsa][message][id1]" => "00044:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:14
		# line in RSA: <agent>[<process_id>]: password changed - account=<c_username>, uid=<uid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password changed - account=%{c_username}, uid=%{uid}, by=%{username}" }
				id => "message-00044:14"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password changed by user"
					"[event][id]" => "00044:14"
					"[rsa][message][id1]" => "00044:14"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:02
		# line in RSA: <agent>[<process_id>]: new password not acceptable
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new password not acceptable" }
				id => "message-00044:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password not acceptable"
				"result" => "password not acceptable"
					"[event][id]" => "00044:02"
					"[rsa][message][id1]" => "00044:02"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:03
		# line in RSA: <agent>[<process_id>]: password - (old) token not obtained
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password - (old) token not obtained" }
				id => "message-00044:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password failure"
				"result" => "password token not obtained"
					"[event][id]" => "00044:03"
					"[rsa][message][id1]" => "00044:03"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:04
		# line in RSA: <agent>: LAuS error - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LAuS error - %{info}" }
				id => "message-00044:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00044:04"
					"[rsa][message][id1]" => "00044:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:05
		# line in RSA: <agent>[<process_id>]: <interface> can't change password for <username>: <fld1> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface} can't change password for %{username}: %{fld1} (%{result})" }
				id => "message-00044:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "could not change password for user"
					"[event][id]" => "00044:05"
					"[rsa][message][id1]" => "00044:05"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:06
		# line in RSA: <agent>[<process_id>]: password for user <username> will expire in <dclass_counter1> <dclass_counter1_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password for user %{username} will expire in %{dclass_counter1} %{dclass_counter1_string}" }
				id => "message-00044:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"event_description" => "password expiration warning"
					"[event][id]" => "00044:06"
					"[rsa][message][id1]" => "00044:06"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:07
		# line in RSA: <agent>[<process_id>]: expired password for user <username> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: expired password for user %{username} (%{result})" }
				id => "message-00044:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "expired password"
					"[event][id]" => "00044:07"
					"[rsa][message][id1]" => "00044:07"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:08
		# line in RSA: <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-00044:08"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "check password"
					"[event][id]" => "00044:08"
					"[rsa][message][id1]" => "00044:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:11
		# line in RSA: { <agent>[<process_id>]: | <agent>: } pam_ldap: error trying to bind as user "<fqdn>" (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_ldap:[\s]+error[\s]+trying[\s]+to[\s]+bind[\s]+as[\s]+user[\s]+\"(?<fqdn>[^\"]*)\"[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-00044:11"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "pam_ldap bind error"
					"[event][id]" => "00044:11"
					"[rsa][message][id1]" => "00044:11"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:12
		# line in RSA: <agent>[<process_id>]: user password changed by another process
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: user password changed by another process" }
				id => "message-00044:12"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password changed by another process"
					"[event][id]" => "00044:12"
					"[rsa][message][id1]" => "00044:12"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:13
		# line in RSA: <agent>[<process_id>]: <dclass_counter1> more authentication { failures | failure }; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<dclass_counter1>[^\s]*)[\s]+more[\s]+authentication[\s]+([\s]*failures[\s]+|[\s]*failure[\s]+);[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-00044:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure(s)"
					"[event][id]" => "00044:13"
					"[rsa][message][id1]" => "00044:13"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:15
		# line in RSA: <agent>[<process_id>]: User <username>: Authentication failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}: Authentication failure" }
				id => "message-00044:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure(s)"
					"[event][id]" => "00044:15"
					"[rsa][message][id1]" => "00044:15"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:16
		# line in RSA: <agent>[<process_id>]: <uid> cannot change shadow data for "<username>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{uid} cannot change shadow data for \"%{username}\"" }
				id => "message-00044:16"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot change shadow data for user"
					"[event][id]" => "00044:16"
					"[rsa][message][id1]" => "00044:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:17
		# line in RSA: <agent>[<process_id>]: User <username>: Have exhasted maximum number of retries for service.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}: Have exhasted maximum number of retries for service." }
				id => "message-00044:17"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"event_description" => "Have exhasted maximum number of retries for service"
					"[event][id]" => "00044:17"
					"[rsa][message][id1]" => "00044:17"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:18
		# line in RSA: <agent>[<process_id>]: password not changed for <username> on <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password not changed for %{username} on %{hostname}" }
				id => "message-00044:18"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Password"
				"event_description" => "user password not changed"
					"[event][id]" => "00044:18"
					"[rsa][message][id1]" => "00044:18"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:19
		# line in RSA: <agent>[<process_id>]: pam_ldap: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_ldap: %{event_description}" }
				id => "message-00044:19"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00044:19"
					"[rsa][message][id1]" => "00044:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:28
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  { pam_unix(<service>): | <space> } authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<fld3> rhost=<fld4>  user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+authentication[\s]+failure;[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<fld3>[^\s]*)[\s]+rhost=(?<fld4>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-00044:28"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"event_description" => "Authentication failure"
				"ec_outcome" => "Failure"
					"[event][id]" => "00044:28"
					"[rsa][message][id1]" => "00044:28"
					"[event][categoryid]" => "1402040100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00044:29
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  { pam_cracklib(<service>): | <space> } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*pam_cracklib\((?<service>[^\)]*)\):[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00044:29"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
					"[event][id]" => "00044:29"
					"[rsa][message][id1]" => "00044:29"
					"[event][categoryid]" => "1402040100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1157
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1157" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1157"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1158
	# line in RSA: <agent>: <fld1> Lost connection with <dhost>
	else if [logstash][msgparser][id] == "msgParserId1158" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} Lost connection with %{dhost}" }
			id => "msgParserId1158"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1159
	# line in RSA: <agent>: [<fld1>] Idle timeout reached (<duration>)
	else if [logstash][msgparser][id] == "msgParserId1159" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld1}] Idle timeout reached (%{duration})" }
			id => "msgParserId1159"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "Idle timeout reached"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1160
	# line in RSA: <agent>: accepted ksh from <from> to <to>
	else if [logstash][msgparser][id] == "msgParserId1160" {
		dissect {
			mapping => { "message" => "%{agent}: accepted ksh from %{from} to %{to}" }
			id => "msgParserId1160"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pbrun" {
		# MESSAGE 001564
		# line in RSA: <agent>: <application>(<process>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}(%{process}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-001564"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "001564"
					"[rsa][message][id1]" => "001564"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001565
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001565"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001565"
					"[rsa][message][id1]" => "001565"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1162
	# line in RSA: <agent>: <fld1> Exec of <application> <disposition>: <result>
	else if [logstash][msgparser][id] == "msgParserId1162" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} Exec of %{application} %{disposition}: %{result}" }
			id => "msgParserId1162"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1163
	# line in RSA: <agent>: [<fld1>] pbrun terminated: signal <resultcode> (<fld2>) kill, sigsend or raise by user <uid> pid <process_id>
	else if [logstash][msgparser][id] == "msgParserId1163" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld1}] pbrun terminated: signal %{resultcode} (%{fld2}) kill, sigsend or raise by user %{uid} pid %{process_id}" }
			id => "msgParserId1163"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "pbrun terminated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1164
	# line in RSA: <agent>: [<fld1>] <fld3> stat: <directory> - <result>
	else if [logstash][msgparser][id] == "msgParserId1164" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld1}] %{fld3} stat: %{directory} - %{result}" }
			id => "msgParserId1164"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "pbrun stat"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1165
	# line in RSA: <agent>: { [<process_id>] <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1165" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*\[(?<process_id>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1165"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1166
	# line in RSA: <agent>:  <service>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId1166" {
		dissect {
			mapping => { "message" => "%{agent}:  %{service}, %{event_description}" }
			id => "msgParserId1166"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1167
	# line in RSA: <agent>: nss-ldap: <process>: do_start_tls failed:<result>
	else if [logstash][msgparser][id] == "msgParserId1167" {
		dissect {
			mapping => { "message" => "%{agent}: nss-ldap: %{process}: do_start_tls failed:%{result}" }
			id => "msgParserId1167"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "do_start_tls failed"
				"service" => "nss-ldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1168
	# line in RSA: <agent>: <info>: <space> invalid context system_u:<result>
	else if [logstash][msgparser][id] == "msgParserId1168" {
		dissect {
			mapping => { "message" => "%{agent}: %{info}: %{space} invalid context system_u:%{result}" }
			id => "msgParserId1168"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "invalid context system_u"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1169
	# line in RSA: <agent>[<process_id>]: <event_description>; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>  user=<username>
	else if [logstash][msgparser][id] == "msgParserId1169" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}  user=%{username}" }
			id => "msgParserId1169"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1170
	# line in RSA: <username>: Arcsight Unix ping from <shost>
	else if [logstash][msgparser][id] == "msgParserId1170" {
		dissect {
			mapping => { "message" => "%{username}: Arcsight Unix ping from %{shost}" }
			id => "msgParserId1170"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Arcsight Unix ping"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pipelined" {
		# MESSAGE 001167
		# line in RSA: { <agent>[<process_id>]: | <agent>: } TCL notice: [<process>] Successfully closed socket <resultcode> (Host=<hostip> Id=<uid> Port=<network_port> Secure=<fld1>): <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+TCL[\s]+notice:[\s]+\[(?<process>[^\]]*)\][\s]+Successfully[\s]+closed[\s]+socket[\s]+(?<resultcode>[^\s]*)[\s]+\(Host=(?<hostip>[^\s]*)[\s]+Id=(?<uid>[^\s]*)[\s]+Port=(?<network_port>[^\s]*)[\s]+Secure=(?<fld1>[^\)]*)\):[\s]+(?<info>.*)$" }
				id => "message-001167"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "TCL notice - Successfully closed socket"
					"[event][id]" => "001167"
					"[rsa][message][id1]" => "001167"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001168
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001168"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001168"
					"[rsa][message][id1]" => "001168"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1172
	# line in RSA: <agent>: argument <param> is not supported by this module
	else if [logstash][msgparser][id] == "msgParserId1172" {
		dissect {
			mapping => { "message" => "%{agent}: argument %{param} is not supported by this module" }
			id => "msgParserId1172"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "argument is not supported by this module"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1173
	# line in RSA: <agent>:<space> INFO <event_description>
	else if [logstash][msgparser][id] == "msgParserId1173" {
		dissect {
			mapping => { "message" => "%{agent}:%{space} INFO %{event_description}" }
			id => "msgParserId1173"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1174
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_time_string> <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1174" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_time_string>[^\s]*)[\s]+(?<severity>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId1174"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "plogcli" {
		# MESSAGE 00809
		# line in RSA: <agent>: <fld1> Administrator logged in to console <space> Administrator:<username> Terminal:<terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Administrator logged in to console %{space} Administrator:%{username} Terminal:%{terminal}" }
				id => "message-00809"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Administrator logged in to console"
					"[event][id]" => "00809"
					"[rsa][message][id1]" => "00809"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00809:01
		# line in RSA: <agent>: <fld1> Administrator logged in <space> Administrator:<username> Privileges:<privilege> Source:<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Administrator logged in %{space} Administrator:%{username} Privileges:%{privilege} Source:%{saddr}" }
				id => "message-00809:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Administrator logged in"
					"[event][id]" => "00809:01"
					"[rsa][message][id1]" => "00809:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00809:02
		# line in RSA: <agent>: <fld1> Administrator logged out of console <space> Administrator:<username> Terminal:<terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Administrator logged out of console %{space} Administrator:%{username} Terminal:%{terminal}" }
				id => "message-00809:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "Administrator logged out of console"
					"[event][id]" => "00809:02"
					"[rsa][message][id1]" => "00809:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00809:03
		# line in RSA: <agent>: <fld1> Administrator logged out <space>  Administrator:<username> Reason:<result> Source:<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Administrator logged out %{space}  Administrator:%{username} Reason:%{result} Source:%{saddr}" }
				id => "message-00809:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "Administrator logged out"
					"[event][id]" => "00809:03"
					"[rsa][message][id1]" => "00809:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00809:04
		# line in RSA: <agent>: <fld1> Administrator authentication failure <space> Administrator:<username> Source:<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Administrator authentication failure %{space} Administrator:%{username} Source:%{saddr}" }
				id => "message-00809:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00809:04"
					"[rsa][message][id1]" => "00809:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00809:05
		# line in RSA: <agent>: <event_description> Administrator:<username> Source:<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} Administrator:%{username} Source:%{saddr}" }
				id => "message-00809:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00809:05"
					"[rsa][message][id1]" => "00809:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1181
	# line in RSA: <agent> (<fld1>) <disposition>; <result>
	else if [logstash][msgparser][id] == "msgParserId1181" {
		dissect {
			mapping => { "message" => "%{agent} (%{fld1}) %{disposition}; %{result}" }
			id => "msgParserId1181"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "service failure"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1182
	# line in RSA: <agent>: <event_description>, <result>
	else if [logstash][msgparser][id] == "msgParserId1182" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}, %{result}" }
			id => "msgParserId1182"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "polkit-agent-helper-1" {
		# MESSAGE 001385
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): user '<username>' { OK | granted access }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+user[\s]+'(?<username>[^']*)'[\s]+([\s]*OK[\s]+|[\s]*granted[\s]+access[\s]+)$" }
				id => "message-001385"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "001385"
					"[rsa][message][id1]" => "001385"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001386
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+authentication[\s]+failure;[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-001386"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "001386"
					"[rsa][message][id1]" => "001386"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001387
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(<application>): <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\((?<application>[^\)]*)\):[\s]+(?<event_description>.*)$" }
				id => "message-001387"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001387"
					"[rsa][message][id1]" => "001387"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "polkitd" {
		# MESSAGE 001293
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001293"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
					"[event][id]" => "001293"
					"[rsa][message][id1]" => "001293"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001294
		# line in RSA: <agent>(<fld1>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{fld1}): %{event_description}" }
				id => "message-001294"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001294"
					"[rsa][message][id1]" => "001294"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pop(pam_unix)" {
		# MESSAGE 01212:01
		# line in RSA: <agent>[<process_id>]: <event_description>; logname=<username> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}; logname=%{username} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-01212:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
					"[event][id]" => "01212:01"
					"[rsa][message][id1]" => "01212:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01212
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01212"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01212"
					"[rsa][message][id1]" => "01212"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pop3d" {
		# MESSAGE 00627
		# line in RSA: <agent>: <action>, user=<username>, ip=[::ffff:<saddr>], <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action}, user=%{username}, ip=[::ffff:%{saddr}], %{info}" }
				id => "message-00627"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00627"
					"[rsa][message][id1]" => "00627"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00627:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00627:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00627:01"
					"[rsa][message][id1]" => "00627:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1187
	# line in RSA: { <agent>[<process_id>]: | <agent>: } { <severity>: <event_description>: <result> | <event_description>: <result> | <event_description>}
	else if [logstash][msgparser][id] == "msgParserId1187" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<severity>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>.*))$" }
			id => "msgParserId1187"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1188
	# line in RSA: <agent>: [<process_id>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1188" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{event_description}" }
			id => "msgParserId1188"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix" {
		# MESSAGE 00835
		# line in RSA: <agent>[<process_id>]: fatal: <action>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal: %{action}: %{info}" }
				id => "message-00835"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00835"
					"[rsa][message][id1]" => "00835"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00835:01
		# line in RSA: <agent>:  succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:  succeeded" }
				id => "message-00835:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00835:01"
					"[rsa][message][id1]" => "00835:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00835:02
		# line in RSA: <agent>[<process_id>]: <fld1>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-00835:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00835:02"
					"[rsa][message][id1]" => "00835:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/bounce" {
		# MESSAGE postfix/bounce
		# line in RSA: <agent>[<process_id>]:<id1>: sender non-delivery notification:<id2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{id1}: sender non-delivery notification:%{id2}" }
				id => "message-postfix/bounce"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "postfix/bounce"
					"[rsa][message][id1]" => "postfix/bounce"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 01086
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01086"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01086"
					"[rsa][message][id1]" => "01086"
					"[event][categoryid]" => "1207010200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/cleanup" {
		# MESSAGE postfix/cleanup
		# line in RSA: <agent>[<process_id>]: <id1>: message-id=<<<fld2>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id1}: message-id=<%{fld2}>" }
				id => "message-postfix/cleanup"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "postfix/cleanup"
					"[rsa][message][id1]" => "postfix/cleanup"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00075
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00075"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00075"
					"[rsa][message][id1]" => "00075"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/pickup" {
		# MESSAGE postfix/pickup
		# line in RSA: <agent>[<process_id>]:<id1>: uid=<uid> from=<<<username>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{id1}: uid=%{uid} from=<%{username}>" }
				id => "message-postfix/pickup"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "postfix/pickup"
					"[rsa][message][id1]" => "postfix/pickup"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00078
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00078"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00078"
					"[rsa][message][id1]" => "00078"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/qmgr" {
		# MESSAGE postfix/qmgr
		# line in RSA:  <agent>[<process_id>]: <id1>: from=<<<from>>, size=<bytes> , nrcpt=<dclass_counter1> (<info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id1}: from=<%{from}>, size=%{bytes} , nrcpt=%{dclass_counter1} (%{info})" }
				id => "message-postfix/qmgr"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "postfix/qmgr"
					"[rsa][message][id1]" => "postfix/qmgr"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE postfix/qmgr:01
		# line in RSA:  <agent>[<process_id>]: <id1>: removed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id1}: removed" }
				id => "message-postfix/qmgr:01"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "removed"
					"[event][id]" => "postfix/qmgr:01"
					"[rsa][message][id1]" => "postfix/qmgr:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00080
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00080"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00080"
					"[rsa][message][id1]" => "00080"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtp" {
		# MESSAGE postfix/smtp
		# line in RSA: <agent>[<process_id>]:<id1>: to=<<<to>>,{orig_to=<<<username>>, relay=<shost>[<saddr>]:<sport>|relay=<shost>[<saddr>]:<sport>},{conn_use=<fld1>, delay=<duration_string>|delay=<duration_string>}, delays=<fld2>, dsn=<fld3>, status=<result><info>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 00121
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00121"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00121"
					"[rsa][message][id1]" => "00121"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtpd" {
		# MESSAGE postfix/smtpd:02
		# line in RSA:  <agent>[<process_id>]:<severity>: dict_nis_init:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity}: dict_nis_init:%{info}" }
				id => "message-postfix/smtpd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "postfix/smtpd:02"
					"[rsa][message][id1]" => "postfix/smtpd:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE postfix/smtpd:01
		# line in RSA:  <agent>[<process_id>]: connect from <shost>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}[%{saddr}]" }
				id => "message-postfix/smtpd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"a" => "connect from "
				"event_description" => "%{a}%{shost}"
					"[event][id]" => "postfix/smtpd:01"
					"[rsa][message][id1]" => "postfix/smtpd:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE postfix/smtpd:03
		# line in RSA:  <agent>[<process_id>]: lost connection after CONNECT from <shost>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: lost connection after CONNECT from %{shost}[%{saddr}]" }
				id => "message-postfix/smtpd:03"
				add_field => {
				"hostname" => "%{hhost}"
				"a" => "lost connection after CONNECT from "
				"event_description" => "%{a}%{shost}"
					"[event][id]" => "postfix/smtpd:03"
					"[rsa][message][id1]" => "postfix/smtpd:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE postfix/smtpd
		# line in RSA:  <agent>[<process_id>]: disconnect from <shost>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: disconnect from %{shost}[%{saddr}]" }
				id => "message-postfix/smtpd"
				add_field => {
				"hostname" => "%{hhost}"
				"a" => "disconnect from "
				"event_description" => "%{a}%{shost}"
					"[event][id]" => "postfix/smtpd"
					"[rsa][message][id1]" => "postfix/smtpd"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00122
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00122"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00122"
					"[rsa][message][id1]" => "00122"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId891
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1>
	else if [logstash][msgparser][id] == "msgParserId891" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>.*)$" }
			id => "msgParserId891"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1202
	# line in RSA: <agent>: {<administrator>: Info: <event_description> |<event_description> }
	else if [logstash][msgparser][id] == "msgParserId1202" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+((?<administrator>[^:]*):[\s]+Info:[\s]+(?<event_description>[^\s]*)[\s]+|(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1202"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1203
	# line in RSA: { <agent>[<process_id>]: | <agent>: } PPSAUDIT cmd='<action>' <info>
	else if [logstash][msgparser][id] == "msgParserId1203" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+PPSAUDIT[\s]+cmd='(?<action>[^']*)'[\s]+(?<info>.*)$" }
			id => "msgParserId1203"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PPSAUDIT"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1204
	# line in RSA: <agent>[<process_id>]: <application> cmd='<action>' sudo='<result>' uid='<uid>' user='<username>'
	else if [logstash][msgparser][id] == "msgParserId1204" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application} cmd='%{action}' sudo='%{result}' uid='%{uid}' user='%{username}'" }
			id => "msgParserId1204"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PPME" {
		# MESSAGE 001646
		# line in RSA: <agent>: <process>: Error: <event_description> rc = <fld1> errCode = <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: Error: %{event_description} rc = %{fld1} errCode = %{resultcode}" }
				id => "message-001646"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001646"
					"[rsa][message][id1]" => "001646"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001244
		# line in RSA: { <agent>[<process_id>]: | <agent>: } API: <severity>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+API:[\s]+(?<severity>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-001244"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001244"
					"[rsa][message][id1]" => "001244"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pppd" {
		# MESSAGE 00106:01
		# line in RSA: <agent>[<process_id>]: pppd <version> started by <username>, uid <uid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pppd %{version} started by %{username}, uid %{uid}" }
				id => "message-00106:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00106:01"
					"[rsa][message][id1]" => "00106:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00106
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00106"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00106"
					"[rsa][message][id1]" => "00106"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1208
	# line in RSA: <agent>: [<process_id>] <version> <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId1208" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{version} %{event_description}: %{result}" }
			id => "msgParserId1208"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1209
	# line in RSA: { <agent>[<process_id>]: | <agent>: } { [<event_type>]:  <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1209" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*\[(?<event_type>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1209"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1210
	# line in RSA: <agent>[<process_id>]: write() in socket_write() failed: <result>
	else if [logstash][msgparser][id] == "msgParserId1210" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: write() in socket_write() failed: %{result}" }
			id => "msgParserId1210"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "write in socket_write failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "proftpd" {
		# MESSAGE 00015:01
		# line in RSA: <agent>[<process_id>]: connect from <saddr> (<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{saddr} (%{fld1})" }
				id => "message-00015:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00015:01"
					"[rsa][message][id1]" => "00015:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE proftpd:01
		# line in RSA: <agent>: <application>(<process>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}(%{process}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-proftpd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "proftpd:01"
					"[rsa][message][id1]" => "proftpd:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00015
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00015"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00015"
					"[rsa][message][id1]" => "00015"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1213
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <process>(): Symbolic link src = <filename> to dest = <result> has been restored
	else if [logstash][msgparser][id] == "msgParserId1213" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<process>[^\(]*)\(\):[\s]+Symbolic[\s]+link[\s]+src[\s]+=[\s]+(?<filename>[^\s]*)[\s]+to[\s]+dest[\s]+=[\s]+(?<result>[^\s]*)[\s]+has[\s]+been[\s]+restored$" }
			id => "msgParserId1213"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Symbolic link has been restored"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1214
	# line in RSA: <agent>: <event_source>: Finally connected to <application> at <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId1214" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_source}: Finally connected to %{application} at %{daddr}:%{dport}" }
			id => "msgParserId1214"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1215
	# line in RSA: <agent>: [<process_id>]: <severity>: { <process>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1215" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+([\s]*(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1215"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ptymonitor" {
		# MESSAGE 002223
		# line in RSA: <agent>: pam_tally(<service>): unknown option: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): unknown option: %{result}" }
				id => "message-002223"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown option"
					"[event][id]" => "002223"
					"[rsa][message][id1]" => "002223"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ptymonitor:01
		# line in RSA: <agent>: <application>(<process>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}(%{process}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-ptymonitor:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "ptymonitor:01"
					"[rsa][message][id1]" => "ptymonitor:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ptymonitor:02
		# line in RSA: <agent>: <application>(<process>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}(%{process}): session closed for user %{username}" }
				id => "message-ptymonitor:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "ptymonitor:02"
					"[rsa][message][id1]" => "ptymonitor:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ptymonitor:03
		# line in RSA: {<agent>[<process_id>]|<agent>}: <application>(<action>): cannot determine display-device
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]|(?<agent>[^:]*)):[\s]+(?<application>[^\(]*)\((?<action>[^\)]*)\):[\s]+cannot[\s]+determine[\s]+display\-device$" }
				id => "message-ptymonitor:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot determine display-device"
					"[event][id]" => "ptymonitor:03"
					"[rsa][message][id1]" => "ptymonitor:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ptymonitor:04
		# line in RSA: <agent>[<process_id>]: <application>(<action>): unknown limit item '<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{action}): unknown limit item '%{fld1}'" }
				id => "message-ptymonitor:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown limit item"
					"[event][id]" => "ptymonitor:04"
					"[rsa][message][id1]" => "ptymonitor:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ptymonitor:05
		# line in RSA: <agent>[<process_id>]: <application>(<action>): option <info> allowed in auth phase only
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{action}): option %{info} allowed in auth phase only" }
				id => "message-ptymonitor:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "option per_user allowed in auth phase only"
					"[event][id]" => "ptymonitor:05"
					"[rsa][message][id1]" => "ptymonitor:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ptymonitor:06
		# line in RSA: <agent>[<process_id>]: <application>(<action>): invalid line '<info>' - skipped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{action}): invalid line '%{info}' - skipped" }
				id => "message-ptymonitor:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ptymonitor:06"
					"[rsa][message][id1]" => "ptymonitor:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ptymonitor:07
		# line in RSA: <agent>[<process_id>]:<application>(<action>):<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{application}(%{action}):%{event_description}" }
				id => "message-ptymonitor:07"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ptymonitor:07"
					"[rsa][message][id1]" => "ptymonitor:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1222
	# line in RSA: { <agent>[<fld1>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId1222" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1222"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "puppetmasterd" {
		# MESSAGE 002081
		# line in RSA: <agent>[<process_id>]: Compiled catalog for <application> <space> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Compiled catalog for %{application} %{space} %{result}" }
				id => "message-002081"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Compiled catalog for application"
					"[event][id]" => "002081"
					"[rsa][message][id1]" => "002081"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002082
		# line in RSA: <agent>[<process_id>]: Could not find default node or by name with '<application>' on node <node>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not find default node or by name with '%{application}' on node %{node}" }
				id => "message-002082"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not find default node or by name on node"
					"[event][id]" => "002082"
					"[rsa][message][id1]" => "002082"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pure-ftpd" {
		# MESSAGE 00453
		# line in RSA: <agent>: (<username>) [<severity>] New connection from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{username}) [%{severity}] New connection from %{shost}" }
				id => "message-00453"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection from host"
					"[event][id]" => "00453"
					"[rsa][message][id1]" => "00453"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00453:01
		# line in RSA: <agent>: pam_warn(<process>): function=[<application>] service=[<service>] terminal=[<terminal>] user=[<username>] ruser=[<c_username>] rhost=[<dhost>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_warn(%{process}): function=[%{application}] service=[%{service}] terminal=[%{terminal}] user=[%{username}] ruser=[%{c_username}] rhost=[%{dhost}]" }
				id => "message-00453:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00453:01"
					"[rsa][message][id1]" => "00453:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1227
	# line in RSA: <agent>[<process_id>]: Can't connect to database '<filename>': <result>
	else if [logstash][msgparser][id] == "msgParserId1227" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Can't connect to database '%{filename}': %{result}" }
			id => "msgParserId1227"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Can't connect to database"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1228
	# line in RSA: <agent>:  <event_description> (<resultcode>). { <result>, <info> | <result> }
	else if [logstash][msgparser][id] == "msgParserId1228" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\((?<resultcode>[^\)]*)\)\.[\s]+([\s]*(?<result>[^,]*),[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId1228"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1229
	# line in RSA: <agent>: { NOTE | INFO } <event_description>
	else if [logstash][msgparser][id] == "msgParserId1229" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*NOTE[\s]+|[\s]*INFO[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1229"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pyseekd" {
		# MESSAGE 02553
		# line in RSA: { <agent>[<fld1>]: | <agent>: } <severity>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<severity>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-02553"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02553"
					"[rsa][message][id1]" => "02553"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02553:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02553:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02553:02"
					"[rsa][message][id1]" => "02553:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1231
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <<<severity>> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1231" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+<(?<severity>[^>]*)>[\s]+(?<event_description>.*)$" }
			id => "msgParserId1231"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "qip-msgd" {
		# MESSAGE 03606
		# line in RSA: <agent>[<process_id>]: Accepting connections on port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepting connections on port %{network_port}" }
				id => "message-03606"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03606"
					"[rsa][message][id1]" => "03606"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001212
		# line in RSA: <agent>[<process_id>]: Can not connect to <service> - DNSUPdateObject
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Can not connect to %{service} - DNSUPdateObject" }
				id => "message-001212"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Can not connect to service"
					"[event][id]" => "001212"
					"[rsa][message][id1]" => "001212"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1234
	# line in RSA: { <agent>[<process_id>]: | <agent>: } smservsh, <event_description>
	else if [logstash][msgparser][id] == "msgParserId1234" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+smservsh,[\s]+(?<event_description>.*)$" }
			id => "msgParserId1234"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "QuickDNS" {
		# MESSAGE 02534
		# line in RSA: <agent> Remote[<process_id>]: Connection close from [<username>:<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{process_id}]: Connection close from [%{username}:%{saddr}]." }
				id => "message-02534"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connection close "
					"[event][id]" => "02534"
					"[rsa][message][id1]" => "02534"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02534:01
		# line in RSA: <agent> Remote[<process_id>]: Connection request from [<saddr>]. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{process_id}]: Connection request from [%{saddr}]. %{info}" }
				id => "message-02534:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02534:01"
					"[rsa][message][id1]" => "02534:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02534:02
		# line in RSA: <agent> Remote[<process_id>]: Login request for user "<username>" as "<administrator>" from [<saddr>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{process_id}]: Login request for user \"%{username}\" as \"%{administrator}\" from [%{saddr}]." }
				id => "message-02534:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Login requst as QuickDNS Central"
					"[event][id]" => "02534:02"
					"[rsa][message][id1]" => "02534:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02534:03
		# line in RSA: <agent> Remote[<process_id>]: { Update | Reloading | Disable } zone "<zone>" request from [<username>:<saddr>].
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+Remote\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Update[\s]+|[\s]*Reloading[\s]+|[\s]*Disable[\s]+)[\s]+zone[\s]+\"(?<zone>[^\"]*)\"[\s]+request[\s]+from[\s]+\[(?<username>[^:]*):(?<saddr>[^\]]*)\]\.$" }
				id => "message-02534:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Update zone request"
					"[event][id]" => "02534:03"
					"[rsa][message][id1]" => "02534:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02534:04
		# line in RSA: <agent> Remote[<process_id>]: User "<username>" as "<administrator>" logged in from [<saddr>:<sport>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} Remote[%{process_id}]: User \"%{username}\" as \"%{administrator}\" logged in from [%{saddr}:%{sport}]." }
				id => "message-02534:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Login requst as QuickDNS Central"
					"[event][id]" => "02534:04"
					"[rsa][message][id1]" => "02534:04"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02534:05
		# line in RSA: <agent> Remote[<process_id>]: Zone "<url>"{ changed | updated | reloaded | disabled } by [<username>:<saddr>].
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+Remote\[(?<process_id>[^\]]*)\]:[\s]+Zone[\s]+\"(?<url>[^\"]*)\"([\s]*changed[\s]+|[\s]*updated[\s]+|[\s]*reloaded[\s]+|[\s]*disabled[\s]+)[\s]+by[\s]+\[(?<username>[^:]*):(?<saddr>[^\]]*)\]\.$" }
				id => "message-02534:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Update zone"
					"[event][id]" => "02534:05"
					"[rsa][message][id1]" => "02534:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "radiusd" {
		# MESSAGE 00016
		# line in RSA: <agent>[<process_id>]: Authentication: <interface> '<username>' from <saddr> <fld1> - FAILED Authentication failure <fld50>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Authentication: %{interface} '%{username}' from %{saddr} %{fld1} - FAILED Authentication failure %{fld50}" }
				id => "message-00016"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00016"
					"[rsa][message][id1]" => "00016"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:01
		# line in RSA: <agent>[<process_id>]: { Received-Authentication | Authentication }: <interface> '<username>' from <saddr> <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Received\-Authentication[\s]+|[\s]*Authentication[\s]+):[\s]+(?<interface>[^\s]*)[\s]+'(?<username>[^']*)'[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+(?<fld50>.*)$" }
				id => "message-00016:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00016:01"
					"[rsa][message][id1]" => "00016:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:02
		# line in RSA: <agent>[<process_id>]: parse_password: No password found in request <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: parse_password: No password found in request %{interface}" }
				id => "message-00016:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"event_description" => "parse_password"
				"result" => "no password found in request"
					"[event][id]" => "00016:02"
					"[rsa][message][id1]" => "00016:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:03
		# line in RSA: <agent>[<process_id>]: rad_recv: Request from unknown client <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rad_recv: Request from unknown client %{saddr}" }
				id => "message-00016:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "request from unknown client"
					"[event][id]" => "00016:03"
					"[rsa][message][id1]" => "00016:03"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:04
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00016:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00016:04"
					"[rsa][message][id1]" => "00016:04"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1245
	# line in RSA: <agent>[<process_id>]: Raid status nominal.
	else if [logstash][msgparser][id] == "msgParserId1245" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Raid status nominal." }
			id => "msgParserId1245"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Raid status nominal"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1246
	# line in RSA: <agent>[<process_id>]: id=<id> <disposition> '<action> <url>' <info>
	else if [logstash][msgparser][id] == "msgParserId1246" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: id=%{id} %{disposition} '%{action} %{url}' %{info}" }
			id => "msgParserId1246"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1247
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <result> (<action>)
	else if [logstash][msgparser][id] == "msgParserId1247" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<result>[^\s]*)[\s]+\((?<action>[^\)]*)\)$" }
			id => "msgParserId1247"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1248
	# line in RSA: <agent>: rdisc <event_description>
	else if [logstash][msgparser][id] == "msgParserId1248" {
		dissect {
			mapping => { "message" => "%{agent}: rdisc %{event_description}" }
			id => "msgParserId1248"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "reactor" {
		# MESSAGE 01188
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1> [reactor <info>] Accepted HTTP connection; <disposition>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+\[reactor[\s]+(?<info>[^\]]*)\][\s]+Accepted[\s]+HTTP[\s]+connection;[\s]+(?<disposition>[^\.]*)\.$" }
				id => "message-01188"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Accepted HTTP connection"
					"[event][id]" => "01188"
					"[rsa][message][id1]" => "01188"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01189
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1> [reactor <info>] HTTP connection closed with no request
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+\[reactor[\s]+(?<info>[^\]]*)\][\s]+HTTP[\s]+connection[\s]+closed[\s]+with[\s]+no[\s]+request$" }
				id => "message-01189"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "HTTP connection closed with no request"
					"[event][id]" => "01189"
					"[rsa][message][id1]" => "01189"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01190
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1> [reactor <info>] Finished message exchange
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+\[reactor[\s]+(?<info>[^\]]*)\][\s]+Finished[\s]+message[\s]+exchange$" }
				id => "message-01190"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Finished message exchange"
					"[event][id]" => "01190"
					"[rsa][message][id1]" => "01190"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "reassd" {
		# MESSAGE 001295
		# line in RSA: <agent>[<process_id>]: <saddr>:<sport> <<-> <daddr>:<dport>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{saddr}:%{sport} <-> %{daddr}:%{dport}: %{event_description}" }
				id => "message-001295"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "001295"
					"[rsa][message][id1]" => "001295"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001181
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Loaded key file: <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Loaded[\s]+key[\s]+file:[\s]+(?<filename>.*)$" }
				id => "message-001181"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Loaded key file"
					"[event][id]" => "001181"
					"[rsa][message][id1]" => "001181"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001182
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001182"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001182"
					"[rsa][message][id1]" => "001182"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1254
	# line in RSA: <agent>: rebooted by <username>
	else if [logstash][msgparser][id] == "msgParserId1254" {
		dissect {
			mapping => { "message" => "%{agent}: rebooted by %{username}" }
			id => "msgParserId1254"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1255
	# line in RSA: <agent>[<process_id>]: auth could not identify password for [<username>]
	else if [logstash][msgparser][id] == "msgParserId1255" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: auth could not identify password for [%{username}]" }
			id => "msgParserId1255"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "could not identify password"
				"result" => "could not identify password"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1256
	# line in RSA: <agent>: Unable to open enclosure configuration file. <result>.
	else if [logstash][msgparser][id] == "msgParserId1256" {
		dissect {
			mapping => { "message" => "%{agent}: Unable to open enclosure configuration file. %{result}." }
			id => "msgParserId1256"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open enclosure configuration file"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "remote" {
		# MESSAGE 01063
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by <disposition>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by %{disposition}(uid=%{uid})" }
				id => "message-01063"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01063"
					"[rsa][message][id1]" => "01063"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:05
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-01063:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01063:05"
					"[rsa][message][id1]" => "01063:05"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:01
		# line in RSA: <agent>[<process_id>]: <dclass_counter1> more authentication { failures | failure }; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<dclass_counter1>[^\s]*)[\s]+more[\s]+authentication[\s]+([\s]*failures[\s]+|[\s]*failure[\s]+);[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-01063:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure(s)"
					"[event][id]" => "01063:01"
					"[rsa][message][id1]" => "01063:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:02
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-01063:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01063:02"
					"[rsa][message][id1]" => "01063:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:03
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-01063:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01063:03"
					"[rsa][message][id1]" => "01063:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:04
		# line in RSA: <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-01063:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "check password"
					"[event][id]" => "01063:04"
					"[rsa][message][id1]" => "01063:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:07
		# line in RSA: <agent>[<process_id>]: password changed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password changed for %{username}" }
				id => "message-01063:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password changed"
					"[event][id]" => "01063:07"
					"[rsa][message][id1]" => "01063:07"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:06
		# line in RSA: <agent>[<process_id>]: service(remote) <action>; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: service(remote) %{action}; %{info}" }
				id => "message-01063:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01063:06"
					"[rsa][message][id1]" => "01063:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ResourceManager" {
		# MESSAGE 00654:01
		# line in RSA: <agent>: <severity>: Acquiring resource group: <group> <saddr> drbddisk::<device> Filesystem::<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: Acquiring resource group: %{group} %{saddr} drbddisk::%{device} Filesystem::%{info}" }
				id => "message-00654:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00654:01"
					"[rsa][message][id1]" => "00654:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00654
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00654"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00654"
					"[rsa][message][id1]" => "00654"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "restorecond" {
		# MESSAGE 00854
		# line in RSA: <agent>: <event_description> (<filename>) <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} (%{filename}) %{result}" }
				id => "message-00854"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00854"
					"[rsa][message][id1]" => "00854"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE restorecond:01
		# line in RSA: <id>: Reset file context <filename>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: Reset file context %{filename}: %{fld1}" }
				id => "message-restorecond:01"
				add_field => {
				"event_description" => "Reset file context"
					"[event][id]" => "restorecond:01"
					"[rsa][message][id1]" => "restorecond:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE restorecond
		# line in RSA: <id>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: %{event_description}" }
				id => "message-restorecond"
				add_field => {
					"[event][id]" => "restorecond"
					"[rsa][message][id1]" => "restorecond"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rexec" {
		# MESSAGE 00525:02
		# line in RSA: <agent>[<process_id>]: could not identify user (from getpwnam(<username>))
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: could not identify user (from getpwnam(%{username}))" }
				id => "message-00525:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "could not identify user from getpwnam"
					"[event][id]" => "00525:02"
					"[rsa][message][id1]" => "00525:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00525:01
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00525:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password"
					"[event][id]" => "00525:01"
					"[rsa][message][id1]" => "00525:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00525
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00525"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00525"
					"[rsa][message][id1]" => "00525"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1267
	# line in RSA: <agent>: { [<process_id>]: <<<severity>> <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1267" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*\[(?<process_id>[^\]]*)\]:[\s]+<(?<severity>[^>]*)>[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1267"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rhsmd" {
		# MESSAGE 002151
		# line in RSA: <agent>: This system is missing one or more valid entitlement certificates. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: This system is missing one or more valid entitlement certificates. %{info}" }
				id => "message-002151"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "System is missing one or more valid entitlement certificates"
					"[event][id]" => "002151"
					"[rsa][message][id1]" => "002151"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002426
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002426"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002426"
					"[rsa][message][id1]" => "002426"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rids" {
		# MESSAGE rids
		# line in RSA: <process>:<agent><severity>:<event_description>:<fld1><filename><dhost>:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}:%{agent}%{severity}:%{event_description}:%{fld1}%{filename}%{dhost}:%{fld2}" }
				id => "message-rids"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "rids"
					"[rsa][message][id1]" => "rids"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE rids:02
		# line in RSA: <process>:<agent>: <event_description>(see <fld1>:<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process}:%{agent}: %{event_description}(see %{fld1}:%{filename}" }
				id => "message-rids:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "rids:02"
					"[rsa][message][id1]" => "rids:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rlogin" {
		# MESSAGE 00038
		# line in RSA: <agent>[<process_id>]: bad username [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: bad username [%{username}]" }
				id => "message-00038"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"result" => "bad username"
				"event_description" => "rlogin failure"
					"[event][id]" => "00038"
					"[rsa][message][id1]" => "00038"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00038:01
		# line in RSA: <agent>[<process_id>]: authentication failure; logname= <fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname= %{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00038:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00038:01"
					"[rsa][message][id1]" => "00038:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00038:02
		# line in RSA: <agent>[<process_id>]: authentication failure; logname= <username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname= %{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00038:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00038:02"
					"[rsa][message][id1]" => "00038:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00038:03
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00038:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password"
					"[event][id]" => "00038:03"
					"[rsa][message][id1]" => "00038:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rlogind" {
		# MESSAGE 00036
		# line in RSA: <agent>[<process_id>]: Connection from <saddr> on illegal port
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr} on illegal port" }
				id => "message-00036"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "illegal port"
				"event_description" => "connection failure"
					"[event][id]" => "00036"
					"[rsa][message][id1]" => "00036"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00036:01
		# line in RSA: <agent>[<process_id>]: <event_source>:<event_description> [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}:%{event_description} [%{username}]" }
				id => "message-00036:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00036:01"
					"[rsa][message][id1]" => "00036:01"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00036:02
		# line in RSA: <agent>[<process_id>]: <result>: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result}: %{event_description}." }
				id => "message-00036:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00036:02"
					"[rsa][message][id1]" => "00036:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1278
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>. <info>
	else if [logstash][msgparser][id] == "msgParserId1278" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^\.]*)\.[\s]+(?<info>.*)$" }
			id => "msgParserId1278"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1279
	# line in RSA: <agent>: Client Mac <smacaddr> (Rogue AP Mac <macaddr>) is seen on the wired network by Switch <daddr> on port <dport> vlan <device> tag <fld1>. <result>
	else if [logstash][msgparser][id] == "msgParserId1279" {
		dissect {
			mapping => { "message" => "%{agent}: Client Mac %{smacaddr} (Rogue AP Mac %{macaddr}) is seen on the wired network by Switch %{daddr} on port %{dport} vlan %{device} tag %{fld1}. %{result}" }
			id => "msgParserId1279"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Rogue AP Mac seen on the wired network by Switch detected by listener"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "routed" {
		# MESSAGE 002299
		# line in RSA: <agent>[<process_id>]: <process>(<child_pid>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}(%{child_pid}): %{event_description}" }
				id => "message-002299"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002299"
					"[rsa][message][id1]" => "002299"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002299:01
		# line in RSA: <agent>[<process_id>]: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
				id => "message-002299:01"
				add_field => {
					"[event][id]" => "002299:01"
					"[rsa][message][id1]" => "002299:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002299:02
		# line in RSA: <agent>[<process_id>]:<event_description>from<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{event_description}from%{filename}" }
				id => "message-002299:02"
				add_field => {
					"[event][id]" => "002299:02"
					"[rsa][message][id1]" => "002299:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 009199
		# line in RSA: <agent>[<process_id>]: <process>(<child_pid>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}(%{child_pid}) %{info}" }
				id => "message-009199"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "009199"
					"[rsa][message][id1]" => "009199"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE routed:01
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-routed:01"
				add_field => {
					"[event][id]" => "routed:01"
					"[rsa][message][id1]" => "routed:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1284
	# line in RSA: <agent>: error <fld1> connecting to server <dhost>
	else if [logstash][msgparser][id] == "msgParserId1284" {
		dissect {
			mapping => { "message" => "%{agent}: error %{fld1} connecting to server %{dhost}" }
			id => "msgParserId1284"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error connecting to server"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rpc.gssd" {
		# MESSAGE 001656
		# line in RSA: <agent>[<process_id>]: ERROR: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ERROR: %{event_description}: %{result}" }
				id => "message-001656"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "001656"
					"[rsa][message][id1]" => "001656"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001657
		# line in RSA: <agent>[<process_id>]: destroying client <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: destroying client %{obj_name}" }
				id => "message-001657"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "destroying client"
					"[event][id]" => "001657"
					"[rsa][message][id1]" => "001657"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001658
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001658"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001658"
					"[rsa][message][id1]" => "001658"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rpc.idmapd" {
		# MESSAGE 002093
		# line in RSA: <agent>[<process_id>]: nss_ldap: failed to bind to LDAP server { <dhost>/: | <dhost>: } <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+nss_ldap:[\s]+failed[\s]+to[\s]+bind[\s]+to[\s]+LDAP[\s]+server[\s]+([\s]*(?<dhost>[^/]*)/:[\s]+|[\s]*(?<dhost>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
				id => "message-002093"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed to bind to LDAP server"
				"service" => "nss_ldap"
					"[event][id]" => "002093"
					"[rsa][message][id1]" => "002093"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002094
		# line in RSA: <agent>[<process_id>]: nss_ldap: could not search LDAP server - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: nss_ldap: could not search LDAP server - %{result}" }
				id => "message-002094"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not search LDAP server"
				"service" => "nss_ldap"
					"[event][id]" => "002094"
					"[rsa][message][id1]" => "002094"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03518
		# line in RSA: <agent>[<process_id>]: <application>: open(<filename>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: open(%{filename}): %{result}" }
				id => "message-03518"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "open file or directory failed"
					"[event][id]" => "03518"
					"[rsa][message][id1]" => "03518"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002083
		# line in RSA: <agent>[<process_id>]: <application>: name '<username>' does not map into domain '<domain>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: name '%{username}' does not map into domain '%{domain}'" }
				id => "message-002083"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "name does not map into domain"
					"[event][id]" => "002083"
					"[rsa][message][id1]" => "002083"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE rpc.idmapd:01
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-rpc.idmapd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "name does not map into domain"
					"[event][id]" => "rpc.idmapd:01"
					"[rsa][message][id1]" => "rpc.idmapd:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rpc.mountd" {
		# MESSAGE 00052
		# line in RSA: <agent>: refused mount request from <shost> for <directory>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: refused mount request from %{shost} for %{directory}: %{result}" }
				id => "message-00052"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00052"
					"[rsa][message][id1]" => "00052"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002454
		# line in RSA: <agent>[<process_id>]: last message repeated <fld1> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: last message repeated %{fld1} times" }
				id => "message-002454"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002454"
					"[rsa][message][id1]" => "002454"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002590
		# line in RSA: <agent>[<process_id>]: {Caught signal 15, un-registering and exiting. | Version <version> starting}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Caught[\s]+signal[\s]+15,[\s]+un\-registering[\s]+and[\s]+exiting\.[\s]+|[\s]*Version[\s]+(?<version>[^\s]*)[\s]+starting)$" }
				id => "message-002590"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002590"
					"[rsa][message][id1]" => "002590"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE rpc.mountd:01
		# line in RSA: <agent>[<process_id>]: authenticated {mount|unmount} request from <shost>:<sport> for <directory> (<fld1>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+authenticated[\s]+(mount|unmount)[\s]+request[\s]+from[\s]+(?<shost>[^:]*):(?<sport>[^\s]*)[\s]+for[\s]+(?<directory>[^\s]*)[\s]+\((?<fld1>[^\)]*)\)$" }
				id => "message-rpc.mountd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "rpc.mountd:01"
					"[rsa][message][id1]" => "rpc.mountd:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE rpc.mountd:02
		# line in RSA: <agent>[<fld1>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{event_description}" }
				id => "message-rpc.mountd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "rpc.mountd:02"
					"[rsa][message][id1]" => "rpc.mountd:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rpc.yppasswdd" {
		# MESSAGE 01062
		# line in RSA: <agent>[<process_id>]: update <username> (<uid>) from host <shost> { failed | rejected }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+update[\s]+(?<username>[^\s]*)[\s]+\((?<uid>[^\)]*)\)[\s]+from[\s]+host[\s]+(?<shost>[^\s]*)[\s]+([\s]*failed[\s]+|[\s]*rejected[\s]+)$" }
				id => "message-01062"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "update user rejected"
					"[event][id]" => "01062"
					"[rsa][message][id1]" => "01062"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01062:01
		# line in RSA: <agent>[<process_id>]: Invalid password.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Invalid password." }
				id => "message-01062:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "Invalid password"
					"[event][id]" => "01062:01"
					"[rsa][message][id1]" => "01062:01"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01062:02
		# line in RSA: <agent>[<process_id>]: <result> for { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<result>[^\s]*)[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-01062:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "Invalid password age"
					"[event][id]" => "01062:02"
					"[rsa][message][id1]" => "01062:02"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01062:03
		# line in RSA: <agent>[<process_id>]: update <username> (<uid>) from host <shost> successful
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: update %{username} (%{uid}) from host %{shost} successful" }
				id => "message-01062:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "update user successful"
					"[event][id]" => "01062:03"
					"[rsa][message][id1]" => "01062:03"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rsh" {
		# MESSAGE 00032
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-00032"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00032"
					"[rsa][message][id1]" => "00032"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00032:01
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00032:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00032:01"
					"[rsa][message][id1]" => "00032:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rshd" {
		# MESSAGE 00037
		# line in RSA: <agent>[<process_id>]: Connection from <saddr> on illegal port
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr} on illegal port" }
				id => "message-00037"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "illegal port"
				"event_description" => "connection failure"
					"[event][id]" => "00037"
					"[rsa][message][id1]" => "00037"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:01
		# line in RSA: <agent>[<process_id>]: rsh denied to <daddr> as <username>: <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rsh denied to %{daddr} as %{username}: %{result}." }
				id => "message-00037:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "rsh denied"
					"[event][id]" => "00037:01"
					"[rsa][message][id1]" => "00037:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:02
		# line in RSA: <agent>[<process_id>]: Failed rsh authentication from <shost> for local user <username> via remote user <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed rsh authentication from %{shost} for local user %{username} via remote user %{c_username}" }
				id => "message-00037:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "rsh authentication failure"
					"[event][id]" => "00037:02"
					"[rsa][message][id1]" => "00037:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:03
		# line in RSA: <agent>[<process_id>]: rshd: <fld1> Cannot get a reserved port for standard error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rshd: %{fld1} Cannot get a reserved port for standard error: %{result}" }
				id => "message-00037:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Cannot get a reserved port for standard error"
					"[event][id]" => "00037:03"
					"[rsa][message][id1]" => "00037:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:04
		# line in RSA: <agent>[<process_id>]: rshd: <fld1> The from address is not valid
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rshd: %{fld1} The from address is not valid" }
				id => "message-00037:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00037:04"
					"[rsa][message][id1]" => "00037:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:05
		# line in RSA: <agent>[<process_id>]: rsh command was '<action>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rsh command was '%{action}'" }
				id => "message-00037:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "rsh command"
					"[event][id]" => "00037:05"
					"[rsa][message][id1]" => "00037:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:06
		# line in RSA: <agent>[<process_id>]: <application>(<process>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{process}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-00037:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00037:06"
					"[rsa][message][id1]" => "00037:06"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:07
		# line in RSA: <agent>[<process_id>]: <application>(<process>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{process}): session closed for user %{username}" }
				id => "message-00037:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00037:07"
					"[rsa][message][id1]" => "00037:07"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:08
		# line in RSA: <agent>[<process_id>]: <application>(<process>): { allowed access to | allowed to } <profile> as <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<application>[^\(]*)\((?<process>[^\)]*)\):[\s]+([\s]*allowed[\s]+access[\s]+to[\s]+|[\s]*allowed[\s]+to[\s]+)[\s]+(?<profile>[^\s]*)[\s]+as[\s]+(?<username>.*)$" }
				id => "message-00037:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "allowed access to user account"
					"[event][id]" => "00037:08"
					"[rsa][message][id1]" => "00037:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:09
		# line in RSA: <agent>[<process_id>]: connect second port <network_port>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect second port %{network_port}: %{result}" }
				id => "message-00037:09"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect second port failure"
					"[event][id]" => "00037:09"
					"[rsa][message][id1]" => "00037:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:10
		# line in RSA: <agent>[<process_id>]: <process>: updated timestamp file `<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: updated timestamp file `%{filename}'" }
				id => "message-00037:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "updated timestamp file"
					"[event][id]" => "00037:10"
					"[rsa][message][id1]" => "00037:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1310
	# line in RSA: <agent>: <severity>: Some files and/or directories in <directory> vanished during rsync operation
	else if [logstash][msgparser][id] == "msgParserId1310" {
		dissect {
			mapping => { "message" => "%{agent}: %{severity}: Some files and/or directories in %{directory} vanished during rsync operation" }
			id => "msgParserId1310"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1311
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  new session for <username>, UID=<uid>
	else if [logstash][msgparser][id] == "msgParserId1311" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+new[\s]+session[\s]+for[\s]+(?<username>[^,]*),[\s]+UID=(?<uid>.*)$" }
			id => "msgParserId1311"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1312
	# line in RSA: <agent>: <application> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1312" {
		dissect {
			mapping => { "message" => "%{agent}: %{application} %{event_description}" }
			id => "msgParserId1312"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1313
	# line in RSA: <agent>[<process_id>]: [<event_source>.<severity>]:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1313" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{event_source}.%{severity}]:%{event_description}" }
			id => "msgParserId1313"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "rsyslogd" {
		# MESSAGE 002421
		# line in RSA: <agent>: [origin software=<fld1> swVersion=<version> x-pid="<process_id>" x-info=<url>] exiting on signal 15.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [origin software=%{fld1} swVersion=%{version} x-pid=\"%{process_id}\" x-info=%{url}] exiting on signal 15." }
				id => "message-002421"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"event_description" => "rsyslogd shutting down"
					"[event][id]" => "002421"
					"[rsa][message][id1]" => "002421"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 02739
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-02739"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02739"
					"[rsa][message][id1]" => "02739"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rsyslogd-2177" {
		# MESSAGE 002416
		# line in RSA: <agent>: <application> { begins to drop messages | lost <dclass_counter1> messages } from pid <child_pid> <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<application>[^\s]*)[\s]+([\s]*begins[\s]+to[\s]+drop[\s]+messages[\s]+|[\s]*lost[\s]+(?<dclass_counter1>[^\s]*)[\s]+messages[\s]+)[\s]+from[\s]+pid[\s]+(?<child_pid>[^\s]*)[\s]+(?<result>.*)$" }
				id => "message-002416"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application dropping or dropped packets"
					"[event][id]" => "002416"
					"[rsa][message][id1]" => "002416"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002531
		# line in RSA: <agent>: <application> begin to drop messages due to rate-limiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application} begin to drop messages due to rate-limiting" }
				id => "message-002531"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "begin to drop messages due to rate-limiting"
					"[event][id]" => "002531"
					"[rsa][message][id1]" => "002531"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002532
		# line in RSA: <agent>: <application> <dclass_counter1> messages lost due to rate-limiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application} %{dclass_counter1} messages lost due to rate-limiting" }
				id => "message-002532"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "messages lost due to rate-limiting"
					"[event][id]" => "002532"
					"[rsa][message][id1]" => "002532"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1316
	# line in RSA: <agent>: <fld1> [try <url> ]
	else if [logstash][msgparser][id] == "msgParserId1316" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} [try %{url} ]" }
			id => "msgParserId1316"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "RT" {
		# MESSAGE 001184
		# line in RSA: <agent>: Successful login for <username> from <saddr> (<application>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Successful login for %{username} from %{saddr} (%{application})" }
				id => "message-001184"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "001184"
					"[rsa][message][id1]" => "001184"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001185
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001185"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001185"
					"[rsa][message][id1]" => "001185"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1320
	# line in RSA: <agent> <fld1> DENY IN=<interface> OUT=<fld2> { MAC=<smacaddr> SRC=<saddr> | SRC=<saddr> } DST=<daddr> <info>
	else if [logstash][msgparser][id] == "msgParserId1320" {
		grok {
			match => { "message" => "^(?<agent>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+DENY[\s]+IN=(?<interface>[^\s]*)[\s]+OUT=(?<fld2>[^\s]*)[\s]+([\s]*MAC=(?<smacaddr>[^\s]*)[\s]+SRC=(?<saddr>[^\s]*)[\s]+|[\s]*SRC=(?<saddr>[^\s]*)[\s]+)[\s]+DST=(?<daddr>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId1320"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Deny by RULE"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1321
	# line in RSA: <agent>(<filename>) {[<process_id>]:<event_description>| [<process_id>] <event_description>|[<process_id> <event_description>|[<event_description>}
	else if [logstash][msgparser][id] == "msgParserId1321" {
		grok {
			match => { "message" => "^(?<agent>[^\(]*)\((?<filename>[^\)]*)\)[\s]+(\[(?<process_id>[^\]]*)\]:(?<event_description>.*)|[\s]*\[(?<process_id>[^\]]*)\][\s]+(?<event_description>.*)|\[(?<process_id>[^\s]*)[\s]+(?<event_description>.*)|\[(?<event_description>.*))$" }
			id => "msgParserId1321"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "runuser" {
		# MESSAGE 00897:01
		# line in RSA: <agent>: pam_unix(<service>): session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session opened for user %{username} by (uid=%{uid})" }
				id => "message-00897:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00897:01"
					"[rsa][message][id1]" => "00897:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00897:02
		# line in RSA: <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-00897:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00897:02"
					"[rsa][message][id1]" => "00897:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00897
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00897"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00897"
					"[rsa][message][id1]" => "00897"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1324
	# line in RSA: <agent>: <event_description> (<result>)
	else if [logstash][msgparser][id] == "msgParserId1324" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} (%{result})" }
			id => "msgParserId1324"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "S-1vlan" {
		# MESSAGE 001760
		# line in RSA: <agent>: WARNING: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: WARNING: %{event_description}" }
				id => "message-001760"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001760"
					"[rsa][message][id1]" => "001760"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001761
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001761"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001761"
					"[rsa][message][id1]" => "001761"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S10.u1202" {
		# MESSAGE 00444
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00444"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00444"
					"[rsa][message][id1]" => "00444"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00444:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00444:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00444:01"
					"[rsa][message][id1]" => "00444:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S11.u1805" {
		# MESSAGE 00442
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00442"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00442"
					"[rsa][message][id1]" => "00442"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00442:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00442:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00442:01"
					"[rsa][message][id1]" => "00442:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S15.u1210" {
		# MESSAGE 00447
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00447"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00447"
					"[rsa][message][id1]" => "00447"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00447:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00447:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00447:01"
					"[rsa][message][id1]" => "00447:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1328
	# line in RSA: <agent>: Socket-ssh[<fld1>] { exit | stopped } on port <network_port> (<terminal>)
	else if [logstash][msgparser][id] == "msgParserId1328" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+Socket\-ssh\[(?<fld1>[^\]]*)\][\s]+([\s]*exit[\s]+|[\s]*stopped[\s]+)[\s]+on[\s]+port[\s]+(?<network_port>[^\s]*)[\s]+\((?<terminal>[^\)]*)\)$" }
			id => "msgParserId1328"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stopped on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "S17.u1517" {
		# MESSAGE 00486
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00486"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00486"
					"[rsa][message][id1]" => "00486"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00486:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00486:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00486:01"
					"[rsa][message][id1]" => "00486:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S18.u1518" {
		# MESSAGE 00395
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00395"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00395"
					"[rsa][message][id1]" => "00395"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00395:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00395:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00395:01"
					"[rsa][message][id1]" => "00395:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S19.u1904" {
		# MESSAGE 00443
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00443"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00443"
					"[rsa][message][id1]" => "00443"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00443:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00443:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00443:01"
					"[rsa][message][id1]" => "00443:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S20.u1903" {
		# MESSAGE 00487
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00487"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00487"
					"[rsa][message][id1]" => "00487"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00487:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00487:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00487:01"
					"[rsa][message][id1]" => "00487:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S21.u1208" {
		# MESSAGE 00423
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00423"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00423"
					"[rsa][message][id1]" => "00423"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00423:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00423:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00423:01"
					"[rsa][message][id1]" => "00423:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S29.ttyS29" {
		# MESSAGE 00441
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00441"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00441"
					"[rsa][message][id1]" => "00441"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00441:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00441:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00441:01"
					"[rsa][message][id1]" => "00441:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S4.u1205" {
		# MESSAGE 00445
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00445"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00445"
					"[rsa][message][id1]" => "00445"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00445:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00445:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00445:01"
					"[rsa][message][id1]" => "00445:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S5.u1211" {
		# MESSAGE 00446
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00446"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00446"
					"[rsa][message][id1]" => "00446"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00446:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00446:01"
					"[rsa][message][id1]" => "00446:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:02
		# line in RSA: <agent>: Client sent a break to <terminal> (interval=<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Client sent a break to %{terminal} (interval=%{fld1})" }
				id => "message-00446:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Break sent by Client"
					"[event][id]" => "00446:02"
					"[rsa][message][id1]" => "00446:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:03
		# line in RSA: <agent>: pam_authenticate : Authentication failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_authenticate : Authentication failure" }
				id => "message-00446:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure - socket connection"
					"[event][id]" => "00446:03"
					"[rsa][message][id1]" => "00446:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S5.u1705" {
		# MESSAGE 00424
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00424"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00424"
					"[rsa][message][id1]" => "00424"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00424:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00424:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00424:01"
					"[rsa][message][id1]" => "00424:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S6.u1427" {
		# MESSAGE 00396
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00396"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00396"
					"[rsa][message][id1]" => "00396"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00396:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00396:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00396:01"
					"[rsa][message][id1]" => "00396:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S7.u1704" {
		# MESSAGE 00440
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00440"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00440"
					"[rsa][message][id1]" => "00440"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00440:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00440:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00440:01"
					"[rsa][message][id1]" => "00440:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00440:02
		# line in RSA: <agent>: Client sent a break to <terminal> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Client sent a break to %{terminal} (%{info})" }
				id => "message-00440:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Client sent break"
					"[event][id]" => "00440:02"
					"[rsa][message][id1]" => "00440:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S8.u1428" {
		# MESSAGE 00397
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00397"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00397"
					"[rsa][message][id1]" => "00397"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00397:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00397:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00397:01"
					"[rsa][message][id1]" => "00397:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "S9.u1212" {
		# MESSAGE 00398
		# line in RSA: <agent>: Socket-ssh started on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh started on port %{network_port} (%{terminal})" }
				id => "message-00398"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection started on port"
					"[event][id]" => "00398"
					"[rsa][message][id1]" => "00398"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00398:01
		# line in RSA: <agent>: Socket-ssh[<fld1>] stopped on port <network_port> (<terminal>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Socket-ssh[%{fld1}] stopped on port %{network_port} (%{terminal})" }
				id => "message-00398:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh socket connection stooped on port"
					"[event][id]" => "00398:01"
					"[rsa][message][id1]" => "00398:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "samba" {
		# MESSAGE 00096
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-00096"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "session opened"
					"[event][id]" => "00096"
					"[rsa][message][id1]" => "00096"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00096:01
		# line in RSA: <agent>[<process_id>]: session closed for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username} by (uid=%{uid})" }
				id => "message-00096:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed"
					"[event][id]" => "00096:01"
					"[rsa][message][id1]" => "00096:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Samhain" {
		# MESSAGE 001851
		# line in RSA: <agent>[<process_id>]: <severity>: <space> [<event_time_string>] msg=<<<event_description>>, interface=<<<interface>>, { userid=<<<uid>>, | group=<<<group>>, } path=<<<directory>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+(?<space>[^\s]*)[\s]+\[(?<event_time_string>[^\]]*)\][\s]+msg=<(?<event_description>[^>]*)>,[\s]+interface=<(?<interface>[^>]*)>,[\s]+([\s]*userid=<(?<uid>[^>]*)>,[\s]+|[\s]*group=<(?<group>[^>]*)>,[\s]+)[\s]+path=<(?<directory>[^>]*)>$" }
				id => "message-001851"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001851"
					"[rsa][message][id1]" => "001851"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001917
		# line in RSA: <agent>[<process_id>]: <severity>: <space> [<event_time_string>] msg=<<<event_description>>, path=<<<directory>>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{space} [%{event_time_string}] msg=<%{event_description}>, path=<%{directory}>, %{info}" }
				id => "message-001917"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001917"
					"[rsa][message][id1]" => "001917"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "saned" {
		# MESSAGE 03525
		# line in RSA: <agent>[<process_id>]: check_host: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check_host: %{event_description}: %{result}" }
				id => "message-03525"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03525"
					"[rsa][message][id1]" => "03525"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03525:01
		# line in RSA: <agent>[<process_id>]: init: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: init: %{event_description}" }
				id => "message-03525:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03525:01"
					"[rsa][message][id1]" => "03525:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03525:02
		# line in RSA: <agent>[<process_id>]: quit: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: quit: %{event_description}" }
				id => "message-03525:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03525:02"
					"[rsa][message][id1]" => "03525:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03525:03
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-03525:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03525:03"
					"[rsa][message][id1]" => "03525:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1338
	# line in RSA: <agent>: <action> was run by <username> <terminal> <event_time_string> (<hostname>) <info>
	else if [logstash][msgparser][id] == "msgParserId1338" {
		dissect {
			mapping => { "message" => "%{agent}: %{action} was run by %{username} %{terminal} %{event_time_string} (%{hostname}) %{info}" }
			id => "msgParserId1338"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sapd" {
		# MESSAGE 002372
		# line in RSA: <agent>[<process_id>]: <<<sessionid>> <<<severity>> |AP <shost>@<saddr> sapd| <space> AM: Tag (<dmacaddr>) <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{sessionid}> <%{severity}> |AP %{shost}@%{saddr} sapd| %{space} AM: Tag (%{dmacaddr}) %{event_description}" }
				id => "message-002372"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002372"
					"[rsa][message][id1]" => "002372"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002382
		# line in RSA: <agent>[<process_id>]: <<<sessionid>> <<<severity>> |AP <shost>@<saddr> sapd| <space> AM <dmacaddr>: ARM - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{sessionid}> <%{severity}> |AP %{shost}@%{saddr} sapd| %{space} AM %{dmacaddr}: ARM - %{event_description}" }
				id => "message-002382"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002382"
					"[rsa][message][id1]" => "002382"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPESM_29" {
		# MESSAGE 002023
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Unable to open trace file <filename>. (<result>) [<application>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+open[\s]+trace[\s]+file[\s]+(?<filename>[^\.]*)\.[\s]+\((?<result>[^\)]*)\)[\s]+\[(?<application>[^\]]*)\]$" }
				id => "message-002023"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open trace file"
					"[event][id]" => "002023"
					"[rsa][message][id1]" => "002023"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002024
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-002024"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002024"
					"[rsa][message][id1]" => "002024"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1342
	# line in RSA: <agent>: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1342" {
		dissect {
			mapping => { "message" => "%{agent}: %{severity}: %{event_description}" }
			id => "msgParserId1342"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1341
	# line in RSA: { <agent>[<process_id>]: | <agent>: } Unable to open trace file <filename>. (<result>) [<application>]
	else if [logstash][msgparser][id] == "msgParserId1341" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+open[\s]+trace[\s]+file[\s]+(?<filename>[^\.]*)\.[\s]+\((?<result>[^\)]*)\)[\s]+\[(?<application>[^\]]*)\]$" }
			id => "msgParserId1341"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open trace file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPLP1_00" {
		# MESSAGE 001996
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Unable to open trace file <filename>. (<result>) [<application>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+open[\s]+trace[\s]+file[\s]+(?<filename>[^\.]*)\.[\s]+\((?<result>[^\)]*)\)[\s]+\[(?<application>[^\]]*)\]$" }
				id => "message-001996"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open trace file"
					"[event][id]" => "001996"
					"[rsa][message][id1]" => "001996"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001997
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-001997"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001997"
					"[rsa][message][id1]" => "001997"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPLP1_01" {
		# MESSAGE 001998
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Unable to open trace file <filename>. (<result>) [<application>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+open[\s]+trace[\s]+file[\s]+(?<filename>[^\.]*)\.[\s]+\((?<result>[^\)]*)\)[\s]+\[(?<application>[^\]]*)\]$" }
				id => "message-001998"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open trace file"
					"[event][id]" => "001998"
					"[rsa][message][id1]" => "001998"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001999
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-001999"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001999"
					"[rsa][message][id1]" => "001999"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SAPLP1_09" {
		# MESSAGE 002000
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Unable to open trace file <filename>. (<result>) [<application>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+open[\s]+trace[\s]+file[\s]+(?<filename>[^\.]*)\.[\s]+\((?<result>[^\)]*)\)[\s]+\[(?<application>[^\]]*)\]$" }
				id => "message-002000"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open trace file"
					"[event][id]" => "002000"
					"[rsa][message][id1]" => "002000"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002001
		# line in RSA: <agent>[<process_id>]:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{event_description}" }
				id => "message-002001"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002001"
					"[rsa][message][id1]" => "002001"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sapuxuserchk" {
		# MESSAGE 001961
		# line in RSA: <agent>: pam_warn(<process>): function=[<action>] service=[<service>] terminal=[<terminal>] user=[<username>] ruser=[<c_username>] rhost=[<shost>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_warn(%{process}): function=[%{action}] service=[%{service}] terminal=[%{terminal}] user=[%{username}] ruser=[%{c_username}] rhost=[%{shost}]" }
				id => "message-001961"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " SAP User check"
					"[event][id]" => "001961"
					"[rsa][message][id1]" => "001961"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001962
		# line in RSA: <agent>: <service>(<process>): authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<dhost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service}(%{process}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{dhost} user=%{username}" }
				id => "message-001962"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure"
					"[event][id]" => "001962"
					"[rsa][message][id1]" => "001962"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "savd" {
		# MESSAGE 001838
		# line in RSA: <agent>: <process>: Sophos Anti-Virus update failed on computer '<hostname>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: Sophos Anti-Virus update failed on computer '%{hostname}'" }
				id => "message-001838"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Sophos Anti-Virus update failed on computer"
					"[event][id]" => "001838"
					"[rsa][message][id1]" => "001838"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001384
		# line in RSA: <agent>: <process>: Successfully updated Sophos Anti-Virus from <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: Successfully updated Sophos Anti-Virus from %{url}" }
				id => "message-001384"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Successfully updated Sophos Anti-Virus from url"
					"[event][id]" => "001384"
					"[rsa][message][id1]" => "001384"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001839
		# line in RSA: <agent>: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: %{event_description}" }
				id => "message-001839"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001839"
					"[rsa][message][id1]" => "001839"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002431
		# line in RSA: <agent>: Sophos Anti-Virus uninstalled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Sophos Anti-Virus uninstalled" }
				id => "message-002431"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Sophos Anti-Virus uninstalled"
					"[event][id]" => "002431"
					"[rsa][message][id1]" => "002431"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1349
	# line in RSA: <agent>[<process_id>]: [<application>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1349" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{application}] %{event_description}" }
			id => "msgParserId1349"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1350
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <fld1> HAL stats not found for <device>
	else if [logstash][msgparser][id] == "msgParserId1350" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+HAL[\s]+stats[\s]+not[\s]+found[\s]+for[\s]+(?<device>.*)$" }
			id => "msgParserId1350"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "HAL stats not found for device"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1351
	# line in RSA: <agent>: <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1351" {
		dissect {
			mapping => { "message" => "%{agent}: %{info}: %{event_description}" }
			id => "msgParserId1351"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1352
	# line in RSA: <agent>: <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId1352" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_time_string}" }
			id => "msgParserId1352"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1353
	# line in RSA: <agent>[<process_id>]: Backup to LOCAL was successful - Backup file <filename>
	else if [logstash][msgparser][id] == "msgParserId1353" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Backup to LOCAL was successful - Backup file %{filename}" }
			id => "msgParserId1353"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Scheduled backup to LOCAL was successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1354
	# line in RSA: { <agent>[<process_id>]: | <agent>: } Scheduled backup to the FTP server was successful - Backup file <filename>
	else if [logstash][msgparser][id] == "msgParserId1354" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Scheduled[\s]+backup[\s]+to[\s]+the[\s]+FTP[\s]+server[\s]+was[\s]+successful[\s]+\-[\s]+Backup[\s]+file[\s]+(?<filename>.*)$" }
			id => "msgParserId1354"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Scheduled backup to the FTP server was successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1355
	# line in RSA: { <agent>[<process_id>]: | <agent>: } Scheduled backup to the SCP server was successful - Backup file <filename>
	else if [logstash][msgparser][id] == "msgParserId1355" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Scheduled[\s]+backup[\s]+to[\s]+the[\s]+SCP[\s]+server[\s]+was[\s]+successful[\s]+\-[\s]+Backup[\s]+file[\s]+(?<filename>.*)$" }
			id => "msgParserId1355"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Scheduled backup to the SCP server was successful"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1356
	# line in RSA: <agent>: PAM { <application>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1356" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+PAM[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1356"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1357
	# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId1357" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId1357"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1358
	# line in RSA: sd <event_description>
	else if [logstash][msgparser][id] == "msgParserId1358" {
		dissect {
			mapping => { "message" => "sd %{event_description}" }
			id => "msgParserId1358"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SEAGENT" {
		# MESSAGE 00290
		# line in RSA: <agent>[<process_id>]: connection from <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection from %{saddr}:%{sport}" }
				id => "message-00290"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
					"[event][id]" => "00290"
					"[rsa][message][id1]" => "00290"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002163
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-002163"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002163"
					"[rsa][message][id1]" => "002163"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "secldapclntd" {
		# MESSAGE 00438
		# line in RSA: <agent>: LDAP failed to bind to server <dhost>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LDAP failed to bind to server %{dhost}." }
				id => "message-00438"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LDAP bind failure"
					"[event][id]" => "00438"
					"[rsa][message][id1]" => "00438"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002182
		# line in RSA: <agent>: Failed to search (<param>) from the LDAP server.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Failed to search (%{param}) from the LDAP server." }
				id => "message-002182"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to search from the LDAP server"
					"[event][id]" => "002182"
					"[rsa][message][id1]" => "002182"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "seload" {
		# MESSAGE 002165
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Executing [<event_type>] command: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Executing[\s]+\[(?<event_type>[^\]]*)\][\s]+command:[\s]+(?<action>.*)$" }
				id => "message-002165"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Executing command"
					"[event][id]" => "002165"
					"[rsa][message][id1]" => "002165"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002213
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-002213"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002213"
					"[rsa][message][id1]" => "002213"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1363
	# line in RSA: <agent>[<process_id>]: { <event_description> [<dhost>:<service>:<disposition>] | <event_description>. <result>. }
	else if [logstash][msgparser][id] == "msgParserId1363" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<event_description>[^\s]*)[\s]+\[(?<dhost>[^:]*):(?<service>[^:]*):(?<disposition>[^\]]*)\][\s]+|[\s]*(?<event_description>[^\.]*)\.[\s]+(?<result>[^\.]*)\.[\s]+)$" }
			id => "msgParserId1363"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1364
	# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, <info> (<event_description>)
	else if [logstash][msgparser][id] == "msgParserId1364" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: to=%{to}, %{info} (%{event_description})" }
			id => "msgParserId1364"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail" {
		# MESSAGE 00019:01
		# line in RSA: <agent>[<process_id>]: <id1>: from=<<<from>>, size=<bytes>, <info> msgid=<id>, proto=<protocol>, daemon=<process>, relay=<shost> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id1}: from=<%{from}>, size=%{bytes}, %{info} msgid=%{id}, proto=%{protocol}, daemon=%{process}, relay=%{shost} [%{saddr}]" }
				id => "message-00019:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "00019:01"
					"[rsa][message][id1]" => "00019:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:02
		# line in RSA: <agent>[<process_id>]: <id1>: from=<from>, size=<bytes>, class=<fld45>, nrcpts=<fld46>, msgid=<id>, relay=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{id1}: from=%{from}, size=%{bytes}, class=%{fld45}, nrcpts=%{fld46}, msgid=%{id}, relay=%{shost}" }
				id => "message-00019:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "00019:02"
					"[rsa][message][id1]" => "00019:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00019:03
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, ctladdr=<fld37>, delay=<fld36>, xdelay=<fld35>, mailer=<fld34>, pri=<fld33>, relay=[<fld44>] [<fld43>], dsn=<fld45>, stat=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: to=%{to}, ctladdr=%{fld37}, delay=%{fld36}, xdelay=%{fld35}, mailer=%{fld34}, pri=%{fld33}, relay=[%{fld44}] [%{fld43}], dsn=%{fld45}, stat=%{info}" }
				id => "message-00019:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
					"[event][id]" => "00019:03"
					"[rsa][message][id1]" => "00019:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sendmail
		# line in RSA: <agent>[<process_id>]: <id1>: to=<<<to>>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, relay={<shost> [<saddr>]|<shost>}, dsn=<fld1>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<id1>[^:]*):[\s]+to=<(?<to>[^>]*)>,[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+relay=((?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]|(?<shost>[^,]*)),[\s]+dsn=(?<fld1>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-sendmail"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sendmail"
					"[rsa][message][id1]" => "sendmail"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sendmail:01
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, relay={<shost>[<saddr>]|<shost>}, version=<version>, verify=<fld57>, cipher=<s_cipher>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+relay=((?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]|(?<shost>[^,]*)),[\s]+version=(?<version>[^,]*),[\s]+verify=(?<fld57>[^,]*),[\s]+cipher=(?<s_cipher>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-sendmail:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sendmail:01"
					"[rsa][message][id1]" => "sendmail:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sendmail:02
		# line in RSA: <agent>[<process_id>]: <id1>: {<shost>[<saddr>]|[<saddr>]|<shost>} did not issue <action> during connection to MTA 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<id1>[^:]*):[\s]+((?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]|\[(?<saddr>[^\]]*)\]|(?<shost>[^\s]*))[\s]+did[\s]+not[\s]+issue[\s]+(?<action>[^\s]*)[\s]+during[\s]+connection[\s]+to[\s]+MTA[\s]+$" }
				id => "message-sendmail:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "did not issue MAIL/EXPN/VRFY/ETRN "
					"[event][id]" => "sendmail:02"
					"[rsa][message][id1]" => "sendmail:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sendmail:03
		# line in RSA: <agent>[<process_id>]: <id1>: ruleset=<fld54>, arg1=<<<to>>, relay={<shost> [<saddr>] (<info>)|<shost> [<saddr>]|<shost>}, reject=<error>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<id1>[^:]*):[\s]+ruleset=(?<fld54>[^,]*),[\s]+arg1=<(?<to>[^>]*)>,[\s]+relay=((?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\][\s]+\((?<info>[^\)]*)\)|(?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]|(?<shost>[^,]*)),[\s]+reject=(?<error>.*)$" }
				id => "message-sendmail:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sendmail:03"
					"[rsa][message][id1]" => "sendmail:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00019
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00019"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00019"
					"[rsa][message][id1]" => "00019"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail-client" {
		# MESSAGE 002415
		# line in RSA: <agent>[<process_id>]: starting daemon (<version>): {queueing@<event_time_string>|persistent-queueing@<event_time_string>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+starting[\s]+daemon[\s]+\((?<version>[^\)]*)\):[\s]+(queueing@(?<event_time_string>.*)|persistent\-queueing@(?<event_time_string>.*))$" }
				id => "message-002415"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "starting daemon"
					"[event][id]" => "002415"
					"[rsa][message][id1]" => "002415"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00781
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, <info> stat=<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: to=%{to}, %{info} stat=%{disposition}" }
				id => "message-00781"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00781"
					"[rsa][message][id1]" => "00781"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Sensage" {
		# MESSAGE 001648
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_type>|<event_time_string>|<sessionid>|<id>|<application>|<process>|<fld1>|<service>|<severity>|<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_type>[^\|]*)\|(?<event_time_string>[^\|]*)\|(?<sessionid>[^\|]*)\|(?<id>[^\|]*)\|(?<application>[^\|]*)\|(?<process>[^\|]*)\|(?<fld1>[^\|]*)\|(?<service>[^\|]*)\|(?<severity>[^\|]*)\|(?<event_description>.*)$" }
				id => "message-001648"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001648"
					"[rsa][message][id1]" => "001648"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001669
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001669"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001669"
					"[rsa][message][id1]" => "001669"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SensorService" {
		# MESSAGE 001698
		# line in RSA: <agent>[<process_id>]: <event_time_string> ERROR <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} ERROR %{event_description}" }
				id => "message-001698"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "001698"
					"[rsa][message][id1]" => "001698"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001666
		# line in RSA: <agent>[<process_id>]: <event_time_string> INFO <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} INFO %{event_description}" }
				id => "message-001666"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001666"
					"[rsa][message][id1]" => "001666"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "seoswd" {
		# MESSAGE 002162
		# line in RSA: <agent>: Watchdog <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Watchdog %{action}." }
				id => "message-002162"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Watchdog application activity"
					"[event][id]" => "002162"
					"[rsa][message][id1]" => "002162"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002114
		# line in RSA: <agent>: { <event_description>, Error = <result>. | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^,]*),[\s]+Error[\s]+=[\s]+(?<result>[^\.]*)\.[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002114"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002114"
					"[rsa][message][id1]" => "002114"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1377
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  ERROR: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1377" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+ERROR:[\s]+(?<event_description>.*)$" }
			id => "msgParserId1377"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1378
	# line in RSA: <agent>: <event_time_string> [<username>]: Logout - - Ip=<saddr> Group=<group> Trigger_Event= <action>
	else if [logstash][msgparser][id] == "msgParserId1378" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_time_string} [%{username}]: Logout - - Ip=%{saddr} Group=%{group} Trigger_Event= %{action}" }
			id => "msgParserId1378"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "User logged out"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "serial_console" {
		# MESSAGE 01095:01
		# line in RSA: <agent>: [<event_time_string>] [USER <username>]: logged in through <device> using <user_role>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{event_time_string}] [USER %{username}]: logged in through %{device} using %{user_role}" }
				id => "message-01095:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user logged in"
					"[event][id]" => "01095:01"
					"[rsa][message][id1]" => "01095:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01095:02
		# line in RSA: <agent>: <event_time_string> [<username>]: { Login_Allowed - - | Login - allowed } to=<device> apparently_via=<protocol> { ip=<saddr> auth=<user_role> | auth=<user_role> } group=<group>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_time_string>[^\s]*)[\s]+\[(?<username>[^\]]*)\]:[\s]+([\s]*Login_Allowed[\s]+\-[\s]+\-[\s]+|[\s]*Login[\s]+\-[\s]+allowed[\s]+)[\s]+to=(?<device>[^\s]*)[\s]+apparently_via=(?<protocol>[^\s]*)[\s]+([\s]*ip=(?<saddr>[^\s]*)[\s]+auth=(?<user_role>[^\s]*)[\s]+|[\s]*auth=(?<user_role>[^\s]*)[\s]+)[\s]+group=(?<group>.*)$" }
				id => "message-01095:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login allowed"
					"[event][id]" => "01095:02"
					"[rsa][message][id1]" => "01095:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 01095
		# line in RSA: <agent>: <event_time_string> [<username>]: Login_Denied <space> to=<dhost> apparently_via=Remote ip=<daddr> error=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_time_string} [%{username}]: Login_Denied %{space} to=%{dhost} apparently_via=Remote ip=%{daddr} error=%{result}" }
				id => "message-01095"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Login Denied"
					"[event][id]" => "01095"
					"[rsa][message][id1]" => "01095"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE 001926
		# line in RSA: <agent>: nss_ldap: Server might have closed connection. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: nss_ldap: Server might have closed connection. %{result}" }
				id => "message-001926"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Server might have closed connection"
				"service" => "nss_ldap"
					"[event][id]" => "001926"
					"[rsa][message][id1]" => "001926"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00337
		# line in RSA: Server Administrator: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Administrator: %{event_description}" }
				id => "message-00337"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00337"
					"[rsa][message][id1]" => "00337"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00337:01
		# line in RSA:  <fld1> connected to SpectraGuard Server <daddr>, hostname <dhost>, real server <fld2>, protocol <protocol>, proxied <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} connected to SpectraGuard Server %{daddr}, hostname %{dhost}, real server %{fld2}, protocol %{protocol}, proxied %{fld3}" }
				id => "message-00337:01"
				add_field => {
					"[event][id]" => "00337:01"
					"[rsa][message][id1]" => "00337:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00337:02
		# line in RSA: <fld1> with ip address[<hostip>] upgrading from SpectraGuard Server [<daddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} with ip address[%{hostip}] upgrading from SpectraGuard Server [%{daddr}]" }
				id => "message-00337:02"
				add_field => {
					"[event][id]" => "00337:02"
					"[rsa][message][id1]" => "00337:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00337:03
		# line in RSA: <fld1>, posting PMAC reinit for Spectraguard Sensor [<smacaddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}, posting PMAC reinit for Spectraguard Sensor [%{smacaddr}]" }
				id => "message-00337:03"
				add_field => {
					"[event][id]" => "00337:03"
					"[rsa][message][id1]" => "00337:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00337:04
		# line in RSA: <fld1>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{result}" }
				id => "message-00337:04"
				add_field => {
					"[event][id]" => "00337:04"
					"[rsa][message][id1]" => "00337:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ServeRAID" {
		# MESSAGE 01004
		# line in RSA: <agent>: <event_description>: controller <fld1>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: controller %{fld1}, %{info}" }
				id => "message-01004"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01004"
					"[rsa][message][id1]" => "01004"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01004:01
		# line in RSA: <agent>: <event_description>: controller <fld1>. <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: controller %{fld1}. %{action}" }
				id => "message-01004:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01004:01"
					"[rsa][message][id1]" => "01004:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03699
		# line in RSA: ServeRAID Manager Agent: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ServeRAID Manager Agent: %{event_description}" }
				id => "message-03699"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03699"
					"[rsa][message][id1]" => "03699"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1391
	# line in RSA: <agent>: <result>
	else if [logstash][msgparser][id] == "msgParserId1391" {
		dissect {
			mapping => { "message" => "%{agent}: %{result}" }
			id => "msgParserId1391"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1392
	# line in RSA: <agent>.<user_agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1392" {
		dissect {
			mapping => { "message" => "%{agent}.%{user_agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId1392"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1393
	# line in RSA: <agent> <space> (<hostname>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1393" {
		dissect {
			mapping => { "message" => "%{agent} %{space} (%{hostname}) %{event_description}" }
			id => "msgParserId1393"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "sesu" {
		# MESSAGE 002263
		# line in RSA: <agent>: FAILED password attempt for user <username> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FAILED password attempt for user %{username} on %{terminal}" }
				id => "message-002263"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"action" => "failed password attempt for user"
					"[event][id]" => "002263"
					"[rsa][message][id1]" => "002263"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002264
		# line in RSA: <agent>: <username> to <administrator> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} to %{administrator} on %{terminal}" }
				id => "message-002264"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful login by user as administrator"
					"[event][id]" => "002264"
					"[rsa][message][id1]" => "002264"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1396
	# line in RSA: { <agent>[<process_id>]: | <agent>: }  <application>: <result>
	else if [logstash][msgparser][id] == "msgParserId1396" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+(?<result>.*)$" }
			id => "msgParserId1396"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application parameter error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "setroubleshoot" {
		# MESSAGE 01037:01
		# line in RSA: <agent>: <space> [<event_type>] audit event host=<hostname> type=<category> msg=audit(<fld20>.<fld21>:<id>): <space> avc: <action> {{<privilege>} for  pid=<process_id> comm="<process>" { path | name }="<obj_name>" dev=<device> ino=<inode> scontext=<s_context> tcontext=<t_context> tclass=<obj_type> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<space>[^\s]*)[\s]+\[(?<event_type>[^\]]*)\][\s]+audit[\s]+event[\s]+host=(?<hostname>[^\s]*)[\s]+type=(?<category>[^\s]*)[\s]+msg=audit\((?<fld20>[^\.]*)\.(?<fld21>[^:]*):(?<id>[^\)]*)\):[\s]+(?<space>[^\s]*)[\s]+avc:[\s]+(?<action>[^\s]*)[\s]+\{(?<privilege>[^\}]*)\}[\s]+for[\s]+pid=(?<process_id>[^\s]*)[\s]+comm=\"(?<process>[^\"]*)\"[\s]+([\s]*path[\s]+|[\s]*name[\s]+)=\"(?<obj_name>[^\"]*)\"[\s]+dev=(?<device>[^\s]*)[\s]+ino=(?<inode>[^\s]*)[\s]+scontext=(?<s_context>[^\s]*)[\s]+tcontext=(?<t_context>[^\s]*)[\s]+tclass=(?<obj_type>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-01037:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01037:01"
					"[rsa][message][id1]" => "01037:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01037:02
		# line in RSA: <agent>: <space> [<event_type>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} [%{event_type}] %{event_description}" }
				id => "message-01037:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01037:02"
					"[rsa][message][id1]" => "01037:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01037
		# line in RSA: {<agent>: <event_description> | <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>.*))$" }
				id => "message-01037"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01037"
					"[rsa][message][id1]" => "01037"
					"[event][categoryid]" => "1502010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1400
	# line in RSA: Setting up standard PCI resources
	else if [logstash][msgparser][id] == "msgParserId1400" {
		dissect {
			mapping => { "message" => "Setting up standard PCI resources" }
			id => "msgParserId1400"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1401
	# line in RSA: { <agent>[<process_id>]: | <agent>: } { <disposition>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1401" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*(?<disposition>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1401"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sft-server-g3" {
		# MESSAGE 002259
		# line in RSA: <agent>: pam_unix(<service>): session opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session opened for user %{username} by %{c_username}(uid=%{uid})" }
				id => "message-002259"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session opened"
					"[event][id]" => "002259"
					"[rsa][message][id1]" => "002259"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002260
		# line in RSA: <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-002260"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed for user"
					"[event][id]" => "002260"
					"[rsa][message][id1]" => "002260"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002220
		# line in RSA: <agent>: pam_tally(<service>): option <result> allowed in auth phase only
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): option %{result} allowed in auth phase only" }
				id => "message-002220"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "option allowed in auth phase only"
					"[event][id]" => "002220"
					"[rsa][message][id1]" => "002220"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002221
		# line in RSA: <agent>: pam_tally(<service>): unknown option: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): unknown option: %{result}" }
				id => "message-002221"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown option"
					"[event][id]" => "002221"
					"[rsa][message][id1]" => "002221"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002225
		# line in RSA: <agent>: Deprecated pam_stack module called from service "<service>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Deprecated pam_stack module called from service \"%{service}\"" }
				id => "message-002225"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Deprecated pam_stack module called from service"
					"[event][id]" => "002225"
					"[rsa][message][id1]" => "002225"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002228
		# line in RSA: <agent>: pam_limits(<service>): unknown limit item '<result>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_limits(%{service}): unknown limit item '%{result}'" }
				id => "message-002228"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown limit item"
					"[event][id]" => "002228"
					"[rsa][message][id1]" => "002228"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002231
		# line in RSA: <agent>: <resultcode> Sft_server_no_virtual_folder_dir, "<result>", Directory name: <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{resultcode} Sft_server_no_virtual_folder_dir, \"%{result}\", Directory name: %{directory}" }
				id => "message-002231"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Sft_server_no_virtual_folder_dir"
					"[event][id]" => "002231"
					"[rsa][message][id1]" => "002231"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sftp-server" {
		# MESSAGE 002062
		# line in RSA: <agent>[<process_id>]: session opened for local user <username> from [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for local user %{username} from [%{saddr}]" }
				id => "message-002062"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for local user"
					"[event][id]" => "002062"
					"[rsa][message][id1]" => "002062"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002062:01
		# line in RSA: <agent>[<process_id>]: error: Unknown extended request "<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error: Unknown extended request \"%{info}\"" }
				id => "message-002062:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unknown extended request"
					"[event][id]" => "002062:01"
					"[rsa][message][id1]" => "002062:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002063
		# line in RSA: <agent>[<process_id>]: session closed for local user <username> from [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for local user %{username} from [%{saddr}]" }
				id => "message-002063"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for local user"
					"[event][id]" => "002063"
					"[rsa][message][id1]" => "002063"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002064
		# line in RSA: <agent>[<process_id>]: opendir {""<directory>"|"<directory>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+opendir[\s]+(\"\"(?<directory>[^\"]*)\"|\"(?<directory>[^\"]*)\")$" }
				id => "message-002064"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "opendir"
					"[event][id]" => "002064"
					"[rsa][message][id1]" => "002064"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002065
		# line in RSA: <agent>[<process_id>]: {forced closedir |closedir} {""<directory>"|"<directory>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(forced[\s]+closedir[\s]+|closedir)[\s]+(\"\"(?<directory>[^\"]*)\"|\"(?<directory>[^\"]*)\")$" }
				id => "message-002065"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "closedir"
					"[event][id]" => "002065"
					"[rsa][message][id1]" => "002065"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002066
		# line in RSA: <agent>[<process_id>]: open {""<filename>"" |"<filename>"} flags <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+open[\s]+(\"\"(?<filename>[^\"]*)\"\"[\s]+|\"(?<filename>[^\"]*)\")[\s]+flags[\s]+(?<info>.*)$" }
				id => "message-002066"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "open file with flags"
					"[event][id]" => "002066"
					"[rsa][message][id1]" => "002066"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002067
		# line in RSA: <agent>[<process_id>]: close {""<filename>""|"<filename>"} bytes read <rbytes> written <sbytes>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+close[\s]+(\"\"(?<filename>[^\"]*)\"\"|\"(?<filename>[^\"]*)\")[\s]+bytes[\s]+read[\s]+(?<rbytes>[^\s]*)[\s]+written[\s]+(?<sbytes>.*)$" }
				id => "message-002067"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "close file"
					"[event][id]" => "002067"
					"[rsa][message][id1]" => "002067"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002067:01
		# line in RSA: <agent>[<process_id>]: rename old "<change_old>" new "<filename>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rename old \"%{change_old}\" new \"%{filename}\"" }
				id => "message-002067:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "rename old"
					"[event][id]" => "002067:01"
					"[rsa][message][id1]" => "002067:01"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002326
		# line in RSA: <agent>[<process_id>]: error: <process>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error: %{process}: %{result}" }
				id => "message-002326"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error"
					"[event][id]" => "002326"
					"[rsa][message][id1]" => "002326"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002067:02
		# line in RSA: <agent>[<process_id>]: remove name "<filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: remove name \"%{filename}\"" }
				id => "message-002067:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "remove name"
					"[event][id]" => "002067:02"
					"[rsa][message][id1]" => "002067:02"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002067:03
		# line in RSA: <agent>[<process_id>]: set "<filename>" {modtime|mode} <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+set[\s]+\"(?<filename>[^\"]*)\"[\s]+(modtime|mode)[\s]+(?<fld1>.*)$" }
				id => "message-002067:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "set"
					"[event][id]" => "002067:03"
					"[rsa][message][id1]" => "002067:03"
					"[event][categoryid]" => "1206000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002067:04
		# line in RSA: {<agent>[<process_id>]: <event_description>|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_description>.*)|(?<event_description>.*))$" }
				id => "message-002067:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002067:04"
					"[rsa][message][id1]" => "002067:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1420
	# line in RSA: Simple Boot Flag at <fld1> set to <fld2>
	else if [logstash][msgparser][id] == "msgParserId1420" {
		dissect {
			mapping => { "message" => "Simple Boot Flag at %{fld1} set to %{fld2}" }
			id => "msgParserId1420"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "shadow" {
		# MESSAGE 100000:01
		# line in RSA: <agent>[<process_id>]: new group added - group=<group>, gid=<groupid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new group added - group=%{group}, gid=%{groupid}, by=%{username}" }
				id => "message-100000:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "new group added"
					"[event][id]" => "100000:01"
					"[rsa][message][id1]" => "100000:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:02
		# line in RSA: <agent>[<process_id>]: GID { ` | ' } <groupid>' is primary group of { ` | ' } <c_username>' - by=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+GID[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<groupid>[^']*)'[\s]+is[\s]+primary[\s]+group[\s]+of[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<c_username>[^']*)'[\s]+\-[\s]+by=(?<username>.*)$" }
				id => "message-100000:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "changing primary group"
					"[event][id]" => "100000:02"
					"[rsa][message][id1]" => "100000:02"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:03
		# line in RSA: <agent>[<process_id>]: cannot remove user's primary group - group=<group>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: cannot remove user's primary group - group=%{group}, by=%{username}" }
				id => "message-100000:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "cannot remove user's primary group"
					"[event][id]" => "100000:03"
					"[rsa][message][id1]" => "100000:03"
					"[event][categoryid]" => "1402010302"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:04
		# line in RSA: <agent>[<process_id>]: group deleted - group=<group>, gid=<groupid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group deleted - group=%{group}, gid=%{groupid}, by=%{username}" }
				id => "message-100000:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "group deleted"
					"[event][id]" => "100000:04"
					"[rsa][message][id1]" => "100000:04"
					"[event][categoryid]" => "1402010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:05
		# line in RSA: <agent>[<process_id>]: account added to group - account=<c_username>, group=<group>, gid=<groupid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account added to group - account=%{c_username}, group=%{group}, gid=%{groupid}, by=%{username}" }
				id => "message-100000:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "account added to group"
					"[event][id]" => "100000:05"
					"[rsa][message][id1]" => "100000:05"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:06
		# line in RSA: <agent>[<process_id>]: account removed from group - account=<c_username>, group=<group>, gid=<groupid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account removed from group - account=%{c_username}, group=%{group}, gid=%{groupid}, by=%{username}" }
				id => "message-100000:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "account removed from group"
					"[event][id]" => "100000:06"
					"[rsa][message][id1]" => "100000:06"
					"[event][categoryid]" => "1402010302"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:07
		# line in RSA: <agent>[<process_id>]: group name changed  - group=<group>, old group=<change_old>, gid=<groupid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group name changed  - group=%{group}, old group=%{change_old}, gid=%{groupid}, by=%{username}" }
				id => "message-100000:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "group name changed"
					"[event][id]" => "100000:07"
					"[rsa][message][id1]" => "100000:07"
					"[event][categoryid]" => "1402010300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:08
		# line in RSA: <agent>[<process_id>]: account GECOS changed - account=<c_username>, uid=<uid>, GECOS='<change_new>', old GECOS='<change_old>', by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account GECOS changed - account=%{c_username}, uid=%{uid}, GECOS='%{change_new}', old GECOS='%{change_old}', by=%{username}" }
				id => "message-100000:08"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "account GECOS changed"
					"[event][id]" => "100000:08"
					"[rsa][message][id1]" => "100000:08"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:09
		# line in RSA: <agent>[<process_id>]: running <action> command - script=<process>, account=<c_username>, uid=<uid>, gid=<groupid>, home=<directory>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: running %{action} command - script=%{process}, account=%{c_username}, uid=%{uid}, gid=%{groupid}, home=%{directory}, by=%{username}" }
				id => "message-100000:09"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"event_description" => "shadow process - running script"
					"[event][id]" => "100000:09"
					"[rsa][message][id1]" => "100000:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:10
		# line in RSA: <agent>[<process_id>]: account deleted - account=<c_username>, uid=<uid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account deleted - account=%{c_username}, uid=%{uid}, by=%{username}" }
				id => "message-100000:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"event_description" => "account deleted"
					"[event][id]" => "100000:10"
					"[rsa][message][id1]" => "100000:10"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:11
		# line in RSA: <agent>[<process_id>]: group gid changed - group=<group>, gid=<groupid>, old gid=<change_old>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group gid changed - group=%{group}, gid=%{groupid}, old gid=%{change_old}, by=%{username}" }
				id => "message-100000:11"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "group gid changed"
					"[event][id]" => "100000:11"
					"[rsa][message][id1]" => "100000:11"
					"[event][categoryid]" => "1402010300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:12
		# line in RSA: <agent>[<process_id>]: UID changed - account=<c_username>, new id=<change_new>, old id=<change_old>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: UID changed - account=%{c_username}, new id=%{change_new}, old id=%{change_old}, by=%{username}" }
				id => "message-100000:12"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "UID changed"
					"[event][id]" => "100000:12"
					"[rsa][message][id1]" => "100000:12"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:13
		# line in RSA: <agent>[<process_id>]: group is unknown - group=<group>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group is unknown - group=%{group}, by=%{username}" }
				id => "message-100000:13"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unkown group"
					"[event][id]" => "100000:13"
					"[rsa][message][id1]" => "100000:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:14
		# line in RSA: <agent>[<process_id>]: group already exists - group=<group>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: group already exists - group=%{group}, by=%{username}" }
				id => "message-100000:14"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "group creation failure"
					"[event][id]" => "100000:14"
					"[rsa][message][id1]" => "100000:14"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:15
		# line in RSA: <agent>[<process_id>]: default group changed - account=<c_username>, uid=<uid>, gid=<groupid>, old gid=<change_old>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: default group changed - account=%{c_username}, uid=%{uid}, gid=%{groupid}, old gid=%{change_old}, by=%{username}" }
				id => "message-100000:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "default group changed"
					"[event][id]" => "100000:15"
					"[rsa][message][id1]" => "100000:15"
					"[event][categoryid]" => "1402010300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:16
		# line in RSA: <agent>[<process_id>]: shell changed - account=<c_username>, uid=<uid>, shell=<change_new>, old shell=<change_old>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: shell changed - account=%{c_username}, uid=%{uid}, shell=%{change_new}, old shell=%{change_old}, by=%{username}" }
				id => "message-100000:16"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "shell changed"
					"[event][id]" => "100000:16"
					"[rsa][message][id1]" => "100000:16"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:17
		# line in RSA: <agent>[<process_id>]: home directory deleted - account=<c_username>, uid=<uid>, home=<directory>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: home directory deleted - account=%{c_username}, uid=%{uid}, home=%{directory}, by=%{username}" }
				id => "message-100000:17"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "home directory deleted"
					"[event][id]" => "100000:17"
					"[rsa][message][id1]" => "100000:17"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:18
		# line in RSA: <agent>[<process_id>]: account is unknown - account=<c_username>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account is unknown - account=%{c_username}, by=%{username}" }
				id => "message-100000:18"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "account is unknown"
					"[event][id]" => "100000:18"
					"[rsa][message][id1]" => "100000:18"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 100000:19
		# line in RSA: <agent>[<process_id>]: account name {renamed in group|changed} - new=<change_new>, old=<change_old>, {uid=<uid>, group=<group>, gid=<groupid>|uid=<uid>}, by=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+account[\s]+name[\s]+(renamed[\s]+in[\s]+group|changed)[\s]+\-[\s]+new=(?<change_new>[^,]*),[\s]+old=(?<change_old>[^,]*),[\s]+(uid=(?<uid>[^,]*),[\s]+group=(?<group>[^,]*),[\s]+gid=(?<groupid>[^,]*)|uid=(?<uid>[^,]*)),[\s]+by=(?<username>.*)$" }
				id => "message-100000:19"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "account name changed"
				"change_attribute" => "account name"
					"[event][id]" => "100000:19"
					"[rsa][message][id1]" => "100000:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002047
		# line in RSA: <agent>[<process_id>]: home directory changed - account=<c_username>, uid=<uid>, home=<directory>, old home=<change_old>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: home directory changed - account=%{c_username}, uid=%{uid}, home=%{directory}, old home=%{change_old}, by=%{username}" }
				id => "message-002047"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "home directory changed"
					"[event][id]" => "002047"
					"[rsa][message][id1]" => "002047"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002048
		# line in RSA: <agent>[<process_id>]: account is currently in use - account=<c_username>, uid=<uid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account is currently in use - account=%{c_username}, uid=%{uid}, by=%{username}" }
				id => "message-002048"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "account currently in use"
					"[event][id]" => "002048"
					"[rsa][message][id1]" => "002048"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002049
		# line in RSA: <agent>[<process_id>]: GID <groupid> is not unique - by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: GID %{groupid} is not unique - by=%{username}" }
				id => "message-002049"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "GID is not unique"
					"[event][id]" => "002049"
					"[rsa][message][id1]" => "002049"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE shadow:01
		# line in RSA: <agent>[<process_id>]: removed shadow group {'<group>'|<group>} owned by {'<username>'|<username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+removed[\s]+shadow[\s]+group[\s]+('(?<group>[^']*)'|(?<group>[^\s]*))[\s]+owned[\s]+by[\s]+('(?<username>[^']*)'|(?<username>.*))$" }
				id => "message-shadow:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "removed shadow group"
					"[event][id]" => "shadow:01"
					"[rsa][message][id1]" => "shadow:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1444
	# line in RSA: <agent>: <application>: CONFIG: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1444" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}: CONFIG: %{event_description}" }
			id => "msgParserId1444"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "shut-ag" {
		# MESSAGE 02508
		# line in RSA: <agent>: Killing Control-M/Agent <service> pid: <process_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Killing Control-M/Agent %{service} pid: %{process_id}" }
				id => "message-02508"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Killing Control-M/Agent"
					"[event][id]" => "02508"
					"[rsa][message][id1]" => "02508"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02508:01
		# line in RSA: <agent>: <duration> - <process_id> is still alive
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{duration} - %{process_id} is still alive" }
				id => "message-02508:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Killing Control-M/Agent"
					"[event][id]" => "02508:01"
					"[rsa][message][id1]" => "02508:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02508:02
		# line in RSA: <agent>: Unable to validate Tracker shutdown, please check your system
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Unable to validate Tracker shutdown, please check your system" }
				id => "message-02508:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to validate Tracker shutdown"
					"[event][id]" => "02508:02"
					"[rsa][message][id1]" => "02508:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "si_ora_backpl" {
		# MESSAGE 00858
		# line in RSA: <agent>[<process_id>]: - WARNING - Subject: <subject> - Message: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - WARNING - Subject: %{subject} - Message: %{event_description}" }
				id => "message-00858"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00858"
					"[rsa][message][id1]" => "00858"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00858:01
		# line in RSA: <agent>[<process_id>]: - WARNING - Oracle error in module <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - WARNING - Oracle error in module %{info}" }
				id => "message-00858:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Oracle error in module"
					"[event][id]" => "00858:01"
					"[rsa][message][id1]" => "00858:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00858:02
		# line in RSA: <agent>[<process_id>]: - WARNING - In <filename>: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - WARNING - In %{filename}: %{event_description}: %{info}" }
				id => "message-00858:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00858:02"
					"[rsa][message][id1]" => "00858:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00858:03
		# line in RSA: <agent>[<process_id>]: - WARNING - Problem with export of SID. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - WARNING - Problem with export of SID. %{info}" }
				id => "message-00858:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Oracle Warning - Problem with export of SID"
					"[event][id]" => "00858:03"
					"[rsa][message][id1]" => "00858:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00858:04
		# line in RSA: <agent>[<process_id>]: - WARNING - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - WARNING - %{info}" }
				id => "message-00858:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Oracle Warning"
					"[event][id]" => "00858:04"
					"[rsa][message][id1]" => "00858:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00858:05
		# line in RSA: <agent>[<process_id>]: - ERROR - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - ERROR - %{info}" }
				id => "message-00858:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00858:05"
					"[rsa][message][id1]" => "00858:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1454
	# line in RSA: { <agent>[<process_id>]: | <agent>: } Process: <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1454" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Process:[\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId1454"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "siemens" {
		# MESSAGE 001460
		# line in RSA: <agent>: MU Session Manager Client <action> (<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: MU Session Manager Client %{action} (%{event_description}" }
				id => "message-001460"
				add_field => {
				"hostname" => "%{hhost}"
				"application" => "MU Session Manager Client"
					"[event][id]" => "001460"
					"[rsa][message][id1]" => "001460"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001713
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001713"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001713"
					"[rsa][message][id1]" => "001713"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1456
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <service>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1456" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<service>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId1456"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sm_adapter" {
		# MESSAGE 03464
		# line in RSA: <agent>[<process_id>]: <service>-<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}-%{event_description}" }
				id => "message-03464"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03464"
					"[rsa][message][id1]" => "03464"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03465
		# line in RSA: <agent>: <resultcode> received, <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{resultcode} received, %{disposition}" }
				id => "message-03465"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03465"
					"[rsa][message][id1]" => "03465"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "smartd" {
		# MESSAGE smartd:05
		# line in RSA: <agent>[<process_id>]: Try '<action> on <device>' to turn on SMART features
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Try '%{action} on %{device}' to turn on SMART features" }
				id => "message-smartd:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "smartd:05"
					"[rsa][message][id1]" => "smartd:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE smartd:04
		# line in RSA: <agent>[<process_id>]: Device:<device>, IE (SMART) not enabled, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Device:%{device}, IE (SMART) not enabled, %{info}" }
				id => "message-smartd:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "smartd:04"
					"[rsa][message][id1]" => "smartd:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE smartd:03
		# line in RSA: <agent>[<process_id>]: Device:<device>, is SMART capable.<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Device:%{device}, is SMART capable.%{info}" }
				id => "message-smartd:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Device is SMART capable"
					"[event][id]" => "smartd:03"
					"[rsa][message][id1]" => "smartd:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE smartd:02
		# line in RSA: <agent>[<process_id>]: Device:<device>, opened
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Device:%{device}, opened" }
				id => "message-smartd:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Device opened"
					"[event][id]" => "smartd:02"
					"[rsa][message][id1]" => "smartd:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE smartd:01
		# line in RSA: <agent>[<process_id>]: Configuration file <filename> was parsed,<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Configuration file %{filename} was parsed,%{info}" }
				id => "message-smartd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Configuration file parsed"
					"[event][id]" => "smartd:01"
					"[rsa][message][id1]" => "smartd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE smartd
		# line in RSA: <agent>[<process_id>]: Opened configuration file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Opened configuration file %{filename}" }
				id => "message-smartd"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Opened configuration file"
					"[event][id]" => "smartd"
					"[rsa][message][id1]" => "smartd"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00187
		# line in RSA: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}" }
				id => "message-00187"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00187"
					"[rsa][message][id1]" => "00187"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "smhstart" {
		# MESSAGE 00426
		# line in RSA: <agent>: hpsmhd: <event_description>, <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: hpsmhd: %{event_description}, %{action}" }
				id => "message-00426"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00426"
					"[rsa][message][id1]" => "00426"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00426:01
		# line in RSA: <agent>: chown: { ` | ' } <group>': <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+chown:[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)':[\s]+(?<event_description>.*)$" }
				id => "message-00426:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00426:01"
					"[rsa][message][id1]" => "00426:01"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00426:02
		# line in RSA: <agent>: <info>: bad group name <group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}: bad group name %{group}" }
				id => "message-00426:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "bad group name"
					"[event][id]" => "00426:02"
					"[rsa][message][id1]" => "00426:02"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00426:03
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00426:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00426:03"
					"[rsa][message][id1]" => "00426:03"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1469
	# line in RSA: <agent>: EventID: <id>, Category: <category>, Description: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1469" {
		dissect {
			mapping => { "message" => "%{agent}: EventID: %{id}, Category: %{category}, Description: %{event_description}" }
			id => "msgParserId1469"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1470
	# line in RSA: <agent>:<event_description>: <disposition>
	else if [logstash][msgparser][id] == "msgParserId1470" {
		dissect {
			mapping => { "message" => "%{agent}:%{event_description}: %{disposition}" }
			id => "msgParserId1470"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "smtpsrvr" {
		# MESSAGE 001213
		# line in RSA: { <agent>[<process_id>]: | <agent>: } F-IOevent-IOerror Error occurred on connection in poll; <service> <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+F\-IOevent\-IOerror[\s]+Error[\s]+occurred[\s]+on[\s]+connection[\s]+in[\s]+poll;[\s]+(?<service>[^\s]*)[\s]+(?<result>.*)$" }
				id => "message-001213"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "F-IOevent-IOerror Error occurred on connection in poll"
					"[event][id]" => "001213"
					"[rsa][message][id1]" => "001213"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001213:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001213:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001213:01"
					"[rsa][message][id1]" => "001213:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1472
	# line in RSA: <agent>: <username> SNAPSHOT operation { succeded | started. }
	else if [logstash][msgparser][id] == "msgParserId1472" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+SNAPSHOT[\s]+operation[\s]+([\s]*succeded[\s]+|[\s]*started\.[\s]+)$" }
			id => "msgParserId1472"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SNAPSHOT operation succeded/started"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1473
	# line in RSA: <agent>: Login failed through <protocol> - <result> (<saddr>)
	else if [logstash][msgparser][id] == "msgParserId1473" {
		dissect {
			mapping => { "message" => "%{agent}: Login failed through %{protocol} - %{result} (%{saddr})" }
			id => "msgParserId1473"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Login failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "snmpd" {
		# MESSAGE 002068
		# line in RSA: <agent>[<process_id>]: Connection from <protocol>: { [<saddr>]:<sport>->[<daddr>] | [<saddr>]:<sport> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Connection[\s]+from[\s]+(?<protocol>[^:]*):[\s]+([\s]*\[(?<saddr>[^\]]*)\]:(?<sport>[^\-]*)\->\[(?<daddr>[^\]]*)\][\s]+|[\s]*\[(?<saddr>[^\]]*)\]:(?<sport>[^\s]*)[\s]+)$" }
				id => "message-002068"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connection"
					"[event][id]" => "002068"
					"[rsa][message][id1]" => "002068"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002103
		# line in RSA: <agent>[<process_id>]: truncating integer value > 32 bits
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: truncating integer value > 32 bits" }
				id => "message-002103"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "truncating integer value greater than 32 bits"
					"[event][id]" => "002103"
					"[rsa][message][id1]" => "002103"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00065
		# line in RSA: <agent>[<process_id>]: Received SNMP packet(s) from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received SNMP packet(s) from %{saddr}" }
				id => "message-00065"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Received SNMP packet(s)"
					"[event][id]" => "00065"
					"[rsa][message][id1]" => "00065"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002069
		# line in RSA: <agent>[<process_id>]: last message repeated <dclass_counter1> times
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: last message repeated %{dclass_counter1} times" }
				id => "message-002069"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "last message repeated"
					"[event][id]" => "002069"
					"[rsa][message][id1]" => "002069"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002177
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-002177"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002177"
					"[rsa][message][id1]" => "002177"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1477
	# line in RSA: <agent>[<process_id>]: <saddr> [<fld1>]: Trap <info>
	else if [logstash][msgparser][id] == "msgParserId1477" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{saddr} [%{fld1}]: Trap %{info}" }
			id => "msgParserId1477"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1478
	# line in RSA: <agent>: <action> on <hostname>
	else if [logstash][msgparser][id] == "msgParserId1478" {
		dissect {
			mapping => { "message" => "%{agent}: %{action} on %{hostname}" }
			id => "msgParserId1478"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1479
	# line in RSA: <agent>: <action> - <info>
	else if [logstash][msgparser][id] == "msgParserId1479" {
		dissect {
			mapping => { "message" => "%{agent}: %{action} - %{info}" }
			id => "msgParserId1479"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "snort" {
		# MESSAGE 00298:03
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { snort shutdown succeeded | succeeded }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*snort[\s]+shutdown[\s]+succeeded[\s]+|[\s]*succeeded[\s]+)$" }
				id => "message-00298:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "snort startup/shutdown successful"
					"[event][id]" => "00298:03"
					"[rsa][message][id1]" => "00298:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00298:01
		# line in RSA: { <agent>[<process_id>]: | <agent>: } database: mysql_error: <severity>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+database:[\s]+mysql_error:[\s]+(?<severity>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-00298:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00298:01"
					"[rsa][message][id1]" => "00298:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00298:02
		# line in RSA: { <agent>[<process_id>]: | <agent>: } database: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+database:[\s]+(?<event_description>.*)$" }
				id => "message-00298:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00298:02"
					"[rsa][message][id1]" => "00298:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00298
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Snort exiting
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Snort[\s]+exiting$" }
				id => "message-00298"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Snort exiting"
					"[event][id]" => "00298"
					"[rsa][message][id1]" => "00298"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1484
	# line in RSA: <agent> { Snort | snort } <action>
	else if [logstash][msgparser][id] == "msgParserId1484" {
		grok {
			match => { "message" => "^(?<agent>[^\s]*)[\s]+([\s]*Snort[\s]+|[\s]*snort[\s]+)[\s]+(?<action>.*)$" }
			id => "msgParserId1484"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "snvctl" {
		# MESSAGE 001107
		# line in RSA: <agent>[<process_id>]: License '<info>' { desw | does } not exist
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+License[\s]+'(?<info>[^']*)'[\s]+([\s]*desw[\s]+|[\s]*does[\s]+)[\s]+not[\s]+exist$" }
				id => "message-001107"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "License does not exist"
					"[event][id]" => "001107"
					"[rsa][message][id1]" => "001107"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001107:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001107:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001107:01"
					"[rsa][message][id1]" => "001107:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "soap" {
		# MESSAGE 002290
		# line in RSA: <agent>[<process_id>]: Unable to open file "<filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to open file \"%{filename}\"" }
				id => "message-002290"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to open file"
					"[event][id]" => "002290"
					"[rsa][message][id1]" => "002290"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002291
		# line in RSA: <agent>[<process_id>]: <result> "<param>" in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result} \"%{param}\" in %{filename}" }
				id => "message-002291"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "parameter error in file"
					"[event][id]" => "002291"
					"[rsa][message][id1]" => "002291"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002292
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002292"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002292"
					"[rsa][message][id1]" => "002292"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1488
	# line in RSA: Software Update[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1488" {
		dissect {
			mapping => { "message" => "Software Update[%{process_id}]: %{event_description}" }
			id => "msgParserId1488"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1489
	# line in RSA: <agent>: Sending: <saddr> MAC[<smacaddr>] SPU[<device>]
	else if [logstash][msgparser][id] == "msgParserId1489" {
		dissect {
			mapping => { "message" => "%{agent}: Sending: %{saddr} MAC[%{smacaddr}] SPU[%{device}]" }
			id => "msgParserId1489"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Sending"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1490
	# line in RSA: <agent>: [<event_source>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1490" {
		dissect {
			mapping => { "message" => "%{agent}: [%{event_source}] %{event_description}" }
			id => "msgParserId1490"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1491
	# line in RSA: <agent>[<process_id>]: [<application>.<severity>] <fld1> {{<info>} { <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1491" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[(?<application>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+\{(?<info>[^\}]*)\}[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1491"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SPS" {
		# MESSAGE 00891
		# line in RSA: <agent>: <username> Successful login.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} Successful login." }
				id => "message-00891"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Successful login"
					"[event][id]" => "00891"
					"[rsa][message][id1]" => "00891"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00891:01
		# line in RSA: <agent>: <username> Successful logout.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} Successful logout." }
				id => "message-00891:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "Successful logout"
					"[event][id]" => "00891:01"
					"[rsa][message][id1]" => "00891:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00891:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00891:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00891:02"
					"[rsa][message][id1]" => "00891:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "clsecho" {
		# MESSAGE 00892
		# line in RSA: clsecho: <filename>: Writing <fld1> to oracle-ohasd tasks
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clsecho: %{filename}: Writing %{fld1} to oracle-ohasd tasks" }
				id => "message-00892"
				add_field => {
				"hostname" => "%{hhost}"
				"process" => "init.ohasd"
				"event_description" => "Writing to oracle-ohasd tasks"
					"[event][id]" => "00892"
					"[rsa][message][id1]" => "00892"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00892:01
		# line in RSA: clsecho: <filename>: <process> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clsecho: %{filename}: %{process} %{event_description}" }
				id => "message-00892:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "calling ohasd stop"
					"[event][id]" => "00892:01"
					"[rsa][message][id1]" => "00892:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1496
	# line in RSA: <agent>[<process_id>]: Package Release ID=<id> Package Description=<info> Support Log path=<filename> Exit code = <resultcode> (<result>)
	else if [logstash][msgparser][id] == "msgParserId1496" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Package Release ID=%{id} Package Description=%{info} Support Log path=%{filename} Exit code = %{resultcode} (%{result})" }
			id => "msgParserId1496"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Package Info"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SQLAnywhere" {
		# MESSAGE 001317
		# line in RSA: <agent> (<username>): <action> checkpoint of "<filename>" (<instance>) at <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}): %{action} checkpoint of \"%{filename}\" (%{instance}) at %{event_time_string}" }
				id => "message-001317"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting/Finishing checkpoint of DB"
					"[event][id]" => "001317"
					"[rsa][message][id1]" => "001317"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001496
		# line in RSA: <agent> (<username>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}): %{event_description}" }
				id => "message-001496"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001496"
					"[rsa][message][id1]" => "001496"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sSMTP" {
		# MESSAGE 00407:01
		# line in RSA: <agent>[<process_id>]: Sent mail for <from> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Sent mail for %{from} (%{info})" }
				id => "message-00407:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00407:01"
					"[rsa][message][id1]" => "00407:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00407
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00407"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00407"
					"[rsa][message][id1]" => "00407"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1500
	# line in RSA: <agent>[<process_id>]: LOGIN ON <terminal> BY <username> FROM <saddr>
	else if [logstash][msgparser][id] == "msgParserId1500" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: LOGIN ON %{terminal} BY %{username} FROM %{saddr}" }
			id => "msgParserId1500"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LOGIN"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh" {
		# MESSAGE 001664
		# line in RSA: <agent>: ERROR: <service>: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ERROR: %{service}: %{event_description}: %{result}" }
				id => "message-001664"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "001664"
					"[rsa][message][id1]" => "001664"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ssh
		# line in RSA: <agent>: failed login attempt for <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: failed login attempt for %{username} from %{saddr}" }
				id => "message-ssh"
				add_field => {
				"event_description" => "failed login attempt"
					"[event][id]" => "ssh"
					"[rsa][message][id1]" => "ssh"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002138
		# line in RSA: <agent>: <info>: <space> invalid context system_u:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}: %{space} invalid context system_u:%{result}" }
				id => "message-002138"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "invalid context system_u"
					"[event][id]" => "002138"
					"[rsa][message][id1]" => "002138"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-broker-g3" {
		# MESSAGE 00351
		# line in RSA: <agent>: <fld1> <event_description>, Local username: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{event_description}, Local username: %{username}" }
				id => "message-00351"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00351"
					"[rsa][message][id1]" => "00351"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00351:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00351:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00351:01"
					"[rsa][message][id1]" => "00351:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-certd" {
		# MESSAGE 02541
		# line in RSA: <agent>[<fld2>]: Opening listener at <directory> succeeded.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld2}]: Opening listener at %{directory} succeeded." }
				id => "message-02541"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Opening listener succeeded"
					"[event][id]" => "02541"
					"[rsa][message][id1]" => "02541"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02541:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02541:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02541:01"
					"[rsa][message][id1]" => "02541:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-mgmt-agent" {
		# MESSAGE 02543
		# line in RSA: <agent>[<process_id>]: Child <child_pid> (<child_process>) exited with status <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Child %{child_pid} (%{child_process}) exited with status %{disposition}" }
				id => "message-02543"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " ssh-mgmt-router exited"
					"[event][id]" => "02543"
					"[rsa][message][id1]" => "02543"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02543:01
		# line in RSA: <agent>[<process_id>]: Management Agent <daddr> restarted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Management Agent %{daddr} restarted" }
				id => "message-02543:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Management agent restarted"
					"[event][id]" => "02543:01"
					"[rsa][message][id1]" => "02543:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02543:02
		# line in RSA: <agent>[<process_id>]: Started <child_process> (pid <child_pid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Started %{child_process} (pid %{child_pid})" }
				id => "message-02543:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Started"
					"[event][id]" => "02543:02"
					"[rsa][message][id1]" => "02543:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02543:03
		# line in RSA: <agent>[<process_id>]: Sending <resultcode> to child process <child_pid> (<child_process>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Sending %{resultcode} to child process %{child_pid} (%{child_process})" }
				id => "message-02543:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Sending SIGTERM to child process"
					"[event][id]" => "02543:03"
					"[rsa][message][id1]" => "02543:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02543:04
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02543:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02543:04"
					"[rsa][message][id1]" => "02543:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-mgmt-engine" {
		# MESSAGE 03512
		# line in RSA: <agent>[<process_id>]: SSH Tectia Server <version> disappeared on <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSH Tectia Server %{version} disappeared on %{hostname}" }
				id => "message-03512"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " SSH Tectia Server disappeared"
					"[event][id]" => "03512"
					"[rsa][message][id1]" => "03512"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03512:01
		# line in RSA: <agent>[<process_id>]: SSH Tectia Server <version> detected on <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSH Tectia Server %{version} detected on %{hostname}" }
				id => "message-03512:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " SSH Tectia Server detected"
					"[event][id]" => "03512:01"
					"[rsa][message][id1]" => "03512:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03512:02
		# line in RSA: <agent>[<process_id>]: Disconnecting link <daddr> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting link %{daddr} (%{result})" }
				id => "message-03512:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Disconnecting link"
					"[event][id]" => "03512:02"
					"[rsa][message][id1]" => "03512:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03512:03
		# line in RSA: <agent>[<process_id>]: Host key update failed on <hostname> (SSH Tectia { Server | Client } <version>): <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Host[\s]+key[\s]+update[\s]+failed[\s]+on[\s]+(?<hostname>[^\s]*)[\s]+\(SSH[\s]+Tectia[\s]+([\s]*Server[\s]+|[\s]*Client[\s]+)[\s]+(?<version>[^\)]*)\):[\s]+(?<result>.*)$" }
				id => "message-03512:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " Host key update failed"
					"[event][id]" => "03512:03"
					"[rsa][message][id1]" => "03512:03"
					"[event][categoryid]" => "1613040200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Ssh-Pam-Proxy" {
		# MESSAGE 002232
		# line in RSA: <agent>: <fld1>(<service>): Access Denied: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}(%{service}): Access Denied: %{result}" }
				id => "message-002232"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Access Denied"
					"[event][id]" => "002232"
					"[rsa][message][id1]" => "002232"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002233
		# line in RSA: <agent>: Pam_Unix(<service>): Authentication Failure; Logname=<fld1> Uid=<uid> Euid=<fld3> Tty=<terminal> Ruser=<c_username> Rhost=<shost> User=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam_Unix(%{service}): Authentication Failure; Logname=%{fld1} Uid=%{uid} Euid=%{fld3} Tty=%{terminal} Ruser=%{c_username} Rhost=%{shost} User=%{username}" }
				id => "message-002233"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "002233"
					"[rsa][message][id1]" => "002233"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002234
		# line in RSA: <agent>: Pam_Unix(<service>): Auth Could Not Identify Password For [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam_Unix(%{service}): Auth Could Not Identify Password For [%{username}]" }
				id => "message-002234"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "Auth Could Not Identify Password For User"
					"[event][id]" => "002234"
					"[rsa][message][id1]" => "002234"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002235
		# line in RSA: <agent>: Pam_Unix(<service>): Check Pass; User Unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam_Unix(%{service}): Check Pass; User Unknown" }
				id => "message-002235"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check pass"
					"[event][id]" => "002235"
					"[rsa][message][id1]" => "002235"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002236
		# line in RSA: <agent>: Pam_Unix(<service>): Password For User <username> Will Expire In <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam_Unix(%{service}): Password For User %{username} Will Expire In %{disposition}" }
				id => "message-002236"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"event_description" => "password for user will expire"
					"[event][id]" => "002236"
					"[rsa][message][id1]" => "002236"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002237
		# line in RSA: <agent>: Pam_Tally(<service>): Pam_Get_Uid; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam_Tally(%{service}): Pam_Get_Uid; %{result}" }
				id => "message-002237"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "pam_get_uid error"
					"[event][id]" => "002237"
					"[rsa][message][id1]" => "002237"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002238
		# line in RSA: <agent>: Pam_Console(<service>): Getpwnam Failed For <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Pam_Console(%{service}): Getpwnam Failed For %{username}" }
				id => "message-002238"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Getpwnam Failed For User"
					"[event][id]" => "002238"
					"[rsa][message][id1]" => "002238"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002239
		# line in RSA: <agent>: <application>(<service>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}(%{service}): %{event_description}" }
				id => "message-002239"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002239"
					"[rsa][message][id1]" => "002239"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-pam-proxy" {
		# MESSAGE 002261
		# line in RSA: <agent>: pam_unix(<service>): session opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session opened for user %{username} by %{c_username}(uid=%{uid})" }
				id => "message-002261"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session opened"
					"[event][id]" => "002261"
					"[rsa][message][id1]" => "002261"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002262
		# line in RSA: <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-002262"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed for user"
					"[event][id]" => "002262"
					"[rsa][message][id1]" => "002262"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002219
		# line in RSA: <agent>: pam_tally(<service>): option <result> allowed in auth phase only
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): option %{result} allowed in auth phase only" }
				id => "message-002219"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "option allowed in auth phase only"
					"[event][id]" => "002219"
					"[rsa][message][id1]" => "002219"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002222
		# line in RSA: <agent>: pam_tally(<service>): unknown option: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): unknown option: %{result}" }
				id => "message-002222"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown option"
					"[event][id]" => "002222"
					"[rsa][message][id1]" => "002222"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002226
		# line in RSA: <agent>: Deprecated pam_stack module called from service "<service>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Deprecated pam_stack module called from service \"%{service}\"" }
				id => "message-002226"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Deprecated pam_stack module called from service"
					"[event][id]" => "002226"
					"[rsa][message][id1]" => "002226"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-server-g3" {
		# MESSAGE 00350
		# line in RSA: <agent>[<process_id>]: ssh-user-exec: <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ssh-user-exec: %{event_description}: %{result}" }
				id => "message-00350"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00350"
					"[rsa][message][id1]" => "00350"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00350:01
		# line in RSA: <agent>: <fld1> <event_description>, Username: <username>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{event_description}, Username: %{username}, Session-Id: %{sessionid}" }
				id => "message-00350:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00350:01"
					"[rsa][message][id1]" => "00350:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00350:02
		# line in RSA: <agent>: <fld1> <event_type>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{event_type}, %{event_description}" }
				id => "message-00350:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00350:02"
					"[rsa][message][id1]" => "00350:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00350:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00350:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00350:03"
					"[rsa][message][id1]" => "00350:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-user-exec" {
		# MESSAGE 002215
		# line in RSA: <agent>: pam_unix(<service>): session opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session opened for user %{username} by %{c_username}(uid=%{uid})" }
				id => "message-002215"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session opened"
					"[event][id]" => "002215"
					"[rsa][message][id1]" => "002215"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002216
		# line in RSA: <agent>: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-002216"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "session closed for user"
					"[event][id]" => "002216"
					"[rsa][message][id1]" => "002216"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002217
		# line in RSA: <agent>: pam_tally(<service>): option <result> allowed in auth phase only
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): option %{result} allowed in auth phase only" }
				id => "message-002217"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "option allowed in auth phase only"
					"[event][id]" => "002217"
					"[rsa][message][id1]" => "002217"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002218
		# line in RSA: <agent>: pam_tally(<service>): unknown option: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(%{service}): unknown option: %{result}" }
				id => "message-002218"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown option"
					"[event][id]" => "002218"
					"[rsa][message][id1]" => "002218"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002224
		# line in RSA: <agent>: Deprecated pam_stack module called from service "<service>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Deprecated pam_stack module called from service \"%{service}\"" }
				id => "message-002224"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Deprecated pam_stack module called from service"
					"[event][id]" => "002224"
					"[rsa][message][id1]" => "002224"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002227
		# line in RSA: <agent>: pam_limits(<service>): unknown limit item '<result>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_limits(%{service}): unknown limit item '%{result}'" }
				id => "message-002227"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown limit item"
					"[event][id]" => "002227"
					"[rsa][message][id1]" => "002227"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002229
		# line in RSA: <agent>: pam_unix(<service>): password for user <username> will expire in <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): password for user %{username} will expire in %{disposition}" }
				id => "message-002229"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"event_description" => "password for user will expire"
					"[event][id]" => "002229"
					"[rsa][message][id1]" => "002229"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002230
		# line in RSA: <agent>: pam_unix(<service>): expired password for <username> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{service}): expired password for %{username} (%{result})" }
				id => "message-002230"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "user password expired"
					"[event][id]" => "002230"
					"[rsa][message][id1]" => "002230"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1347
	# line in RSA: <agent>: <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1347" {
		dissect {
			mapping => { "message" => "%{agent}: %{process}: %{event_description}" }
			id => "msgParserId1347"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd" {
		# MESSAGE 00020:08
		# line in RSA: { <agent>(pam_unix)[<process_id>]: | <agent>[<process_id>]: } { pam_unix(<service>): session | session } opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+)[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+session[\s]+|[\s]*session[\s]+)[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+(?<c_username>[^\(]*)\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-00020:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session opened"
					"[event][id]" => "00020:08"
					"[rsa][message][id1]" => "00020:08"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:15
		# line in RSA: { <agent>(pam_unix)[<process_id>]: | <agent>[<process_id>]: } { pam_unix(<service>): authentication | authentication } failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+)[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+authentication[\s]+|[\s]*authentication[\s]+)[\s]+failure;[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld3>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-00020:15"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00020:15"
					"[rsa][message][id1]" => "00020:15"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:27
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<failed> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <result> Access Control Identifier(NT Name):<<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <failed> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: %{result} Access Control Identifier(NT Name):<%{user_address}>" }
				id => "message-00020:27"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"event_description" => "Authentication failed"
					"[event][id]" => "00020:27"
					"[rsa][message][id1]" => "00020:27"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:25
		# line in RSA: <agent>[<process_id>]: Failed keyboard-interactive/pam { for illegal user | for invalid user | for } <username> { from ::ffff: | from } <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+keyboard\-interactive/pam[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00020:25"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Failed keyboard-interactive/pam"
					"[event][id]" => "00020:25"
					"[rsa][message][id1]" => "00020:25"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020
		# line in RSA: <agent>[<process_id>]: { Illegal | Invalid } user <username> { from ::ffff: | from } {<saddr> <fld1>| <saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Illegal[\s]+|[\s]*Invalid[\s]+)[\s]+user[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+((?<saddr>[^\s]*)[\s]+(?<fld1>.*)|[\s]*(?<saddr>.*))$" }
				id => "message-00020"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00020"
					"[rsa][message][id1]" => "00020"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:01
		# line in RSA: <agent>[<process_id>]: fatal: Timeout before authentication for <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal: Timeout before authentication for %{daddr}" }
				id => "message-00020:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "timeout before authentication"
				"event_description" => "authentication failure"
					"[event][id]" => "00020:01"
					"[rsa][message][id1]" => "00020:01"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:02
		# line in RSA: <agent>[<process_id>]: fatal: PAM pam_chauthtok failed[<fld1>]: Authentication token manipulation error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal: PAM pam_chauthtok failed[%{fld1}]: Authentication token manipulation error" }
				id => "message-00020:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "Authentication token error"
				"event_description" => "pam_chauthok failure"
					"[event][id]" => "00020:02"
					"[rsa][message][id1]" => "00020:02"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:03
		# line in RSA: <agent>[<process_id>]: Failed password { for illegal user | for invalid user | for } <username> { from ::ffff: | from } <saddr> port <sport> {<protocol> <fld1> |<protocol>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+password[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+((?<protocol>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+|(?<protocol>.*))$" }
				id => "message-00020:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00020:03"
					"[rsa][message][id1]" => "00020:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:19
		# line in RSA: <agent>[<process_id>]: Failed none { for illegal user | for invalid user | for } <username> { from ::ffff: | from } <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+none[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00020:19"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00020:19"
					"[rsa][message][id1]" => "00020:19"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:26
		# line in RSA: <agent>[<process_id>]: error: PAM: Authentication failure { for illegal user | for invalid user | for } <username> { from ::ffff: | from } <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+error:[\s]+PAM:[\s]+Authentication[\s]+failure[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+invalid[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>.*)$" }
				id => "message-00020:26"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failure"
					"[event][id]" => "00020:26"
					"[rsa][message][id1]" => "00020:26"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:04
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00020:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check pass"
					"[event][id]" => "00020:04"
					"[rsa][message][id1]" => "00020:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:05
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00020:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00020:05"
					"[rsa][message][id1]" => "00020:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:06
		# line in RSA: <agent>[<process_id>]: {PAM <dclass_counter1>|<dclass_counter1>} more authentication { failures; | failure; } logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(PAM[\s]+(?<dclass_counter1>[^\s]*)|(?<dclass_counter1>[^\s]*))[\s]+more[\s]+authentication[\s]+([\s]*failures;[\s]+|[\s]*failure;[\s]+)[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)$" }
				id => "message-00020:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00020:06"
					"[rsa][message][id1]" => "00020:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:07
		# line in RSA: <agent>[<process_id>]:{PAM<dclass_counter1>|<dclass_counter1>}more authentication{failures;|failure;}logname=<username>uid=<uid>euid=<fld3>tty=<terminal>ruser=<c_username>rhost=<shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:(PAM(?<dclass_counter1>[^m]*)|(?<dclass_counter1>[^m]*))more[\s]+authentication(failures;|failure;)logname=(?<username>[^u]*)uid=(?<uid>[^e]*)euid=(?<fld3>[^t]*)tty=(?<terminal>[^r]*)ruser=(?<c_username>[^r]*)rhost=(?<shost>.*)$" }
				id => "message-00020:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00020:07"
					"[rsa][message][id1]" => "00020:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:37
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): authentication failure; logname=<username> uid=<uid> euid=<fld1> tty=<terminal> ruser=<c_username> rhost=<shost> <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): authentication failure; logname=%{username} uid=%{uid} euid=%{fld1} tty=%{terminal} ruser=%{c_username} rhost=%{shost} %{fld2}" }
				id => "message-00020:37"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00020:37"
					"[rsa][message][id1]" => "00020:37"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:09
		# line in RSA: <agent>[<process_id>]: session opened for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00020:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00020:09"
					"[rsa][message][id1]" => "00020:09"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:13
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00020:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "su session closed for user"
					"[event][id]" => "00020:13"
					"[rsa][message][id1]" => "00020:13"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:10
		# line in RSA: <agent>[<process_id>]: Accepted password for <username> { from ::ffff: | from } <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+password[\s]+for[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00020:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted password"
					"[event][id]" => "00020:10"
					"[rsa][message][id1]" => "00020:10"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:18
		# line in RSA: <agent>[<process_id>]: Accepted keyboard-interactive/pam for <username> from { ::ffff:<saddr> | <saddr> }  port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+keyboard\-interactive/pam[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+([\s]*::ffff:(?<saddr>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00020:18"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted keyboard-interactive/pam"
					"[event][id]" => "00020:18"
					"[rsa][message][id1]" => "00020:18"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:11
		# line in RSA: <agent>[<process_id>]: log: Closing connection to <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: log: Closing connection to %{daddr}" }
				id => "message-00020:11"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00020:11"
					"[rsa][message][id1]" => "00020:11"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:14
		# line in RSA: <agent>[<process_id>]: Accepted publickey for <username> { from ::ffff: | from } <saddr> port <sport> {<protocol>: RSA SHA256:<checksum>|<protocol>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+publickey[\s]+for[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+((?<protocol>[^:]*):[\s]+RSA[\s]+SHA256:(?<checksum>.*)|(?<protocol>.*))$" }
				id => "message-00020:14"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted publickey"
					"[event][id]" => "00020:14"
					"[rsa][message][id1]" => "00020:14"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:16
		# line in RSA: <agent>[<process_id>]: Received disconnect from {<shost> port <sport>|<shost>}: <fld1>: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Received[\s]+disconnect[\s]+from[\s]+((?<shost>[^\s]*)[\s]+port[\s]+(?<sport>[^:]*)|(?<shost>[^:]*)):[\s]+(?<fld1>[^:]*):[\s]+(?<action>.*)$" }
				id => "message-00020:16"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Received disconnect"
					"[event][id]" => "00020:16"
					"[rsa][message][id1]" => "00020:16"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:38
		# line in RSA: <agent>[<process_id>]: <fld1>(<info>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}(%{info}): session closed for user %{username}" }
				id => "message-00020:38"
				add_field => {
				"event_description" => "session closed for user"
					"[event][id]" => "00020:38"
					"[rsa][message][id1]" => "00020:38"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:01
		# line in RSA:  <agent>[<process_id>]: Accepted <authmethod> for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted %{authmethod} for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-sshd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sshd:01"
					"[rsa][message][id1]" => "sshd:01"
					"[event][categoryid]" => "1302010200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:17
		# line in RSA: <agent>[<process_id>]: <event_description> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} - %{result}" }
				id => "message-00020:17"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00020:17"
					"[rsa][message][id1]" => "00020:17"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:20
		# line in RSA: <agent>[<process_id>]: PAM unable to dlopen(<filename>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM unable to dlopen(%{filename})" }
				id => "message-00020:20"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM dlopen error"
					"[event][id]" => "00020:20"
					"[rsa][message][id1]" => "00020:20"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:21
		# line in RSA: <agent>[<process_id>]: PAM [dlerror: <filename>: <event_description>: <result>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM [dlerror: %{filename}: %{event_description}: %{result}]" }
				id => "message-00020:21"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00020:21"
					"[rsa][message][id1]" => "00020:21"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:22
		# line in RSA: <agent>[<process_id>]: PAM adding faulty module: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM adding faulty module: %{filename}" }
				id => "message-00020:22"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM adding faulty module"
					"[event][id]" => "00020:22"
					"[rsa][message][id1]" => "00020:22"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:23
		# line in RSA: <agent>[<process_id>]: error: Bind to port <network_port> on <saddr> failed: <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error: Bind to port %{network_port} on %{saddr} failed: %{result}." }
				id => "message-00020:23"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Bind failure"
					"[event][id]" => "00020:23"
					"[rsa][message][id1]" => "00020:23"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:24
		# line in RSA: <agent>[<process_id>]: Server listening on <hostip> port <network_port>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server listening on %{hostip} port %{network_port}." }
				id => "message-00020:24"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"event_description" => "Server listening"
				"service" => "%{agent}"
					"[event][id]" => "00020:24"
					"[rsa][message][id1]" => "00020:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:28
		# line in RSA: <agent>[<process_id>]: Received signal <resultcode>; <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received signal %{resultcode}; %{action}." }
				id => "message-00020:28"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"event_description" => "Received signal - terminating"
				"service" => "%{agent}"
					"[event][id]" => "00020:28"
					"[rsa][message][id1]" => "00020:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00020:29
		# line in RSA: <agent>[<process_id>]: subsystem request for sftp
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: subsystem request for sftp" }
				id => "message-00020:29"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "subsystem request for sftp"
					"[event][id]" => "00020:29"
					"[rsa][message][id1]" => "00020:29"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:30
		# line in RSA: <agent>[<process_id>]:<fld1> publickey for <username> from <saddr> port <sport> <network_service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{fld1} publickey for %{username} from %{saddr} port %{sport} %{network_service}" }
				id => "message-00020:30"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00020:30"
					"[rsa][message][id1]" => "00020:30"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sshd
		# line in RSA: <agent>[<process_id>]: Connection closed {by invalid user <username>|by authenticating user <username>|by} <saddr> port <sport> [<fld1> ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Connection[\s]+closed[\s]+(by[\s]+invalid[\s]+user[\s]+(?<username>[^\s]*)|by[\s]+authenticating[\s]+user[\s]+(?<username>[^\s]*)|by)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+\[(?<fld1>[^\s]*)[\s]+\]$" }
				id => "message-sshd"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "Connection closed"
					"[event][id]" => "sshd"
					"[rsa][message][id1]" => "sshd"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sshd:03
		# line in RSA: <agent>[<process_id>]: Disconnected from {authenticating user|user} <username>{<saddr> port<sport>[<fld1>]|<saddr> port<sport>|<saddr>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
		# MESSAGE sshd:02
		# line in RSA: <agent>[<process_id>]: Disconnected from {<saddr> port<sport>[<fld1>]|<saddr> port<sport>|<saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Disconnected[\s]+from[\s]+((?<saddr>[^\s]*)[\s]+port(?<sport>[^\[]*)\[(?<fld1>[^\]]*)\]|(?<saddr>[^\s]*)[\s]+port(?<sport>.*)|(?<saddr>.*))$" }
				id => "message-sshd:02"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "Disconnected"
					"[event][id]" => "sshd:02"
					"[rsa][message][id1]" => "sshd:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00020:12
		# line in RSA: {<agent>[<process_id>]:<fld1> |<agent>[<process_id>]<fld1>:|<agent>[<process_id>]: | <agent>: } {invalid user <username> <fld2>|<event_description> deny <dclass_counter1> | <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:(?<fld1>[^\s]*)[\s]+|(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\](?<fld1>[^:]*):|(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+(?<fld2>.*)|(?<event_description>[^\s]*)[\s]+deny[\s]+(?<dclass_counter1>[^\s]*)[\s]+|[\s]*(?<event_description>.*))$" }
				id => "message-00020:12"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00020:12"
					"[rsa][message][id1]" => "00020:12"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd2" {
		# MESSAGE 00040
		# line in RSA: <agent>[<process_id>]: { connection | Connection } from { "<saddr>" | <shost> port <sport> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*connection[\s]+|[\s]*Connection[\s]+)[\s]+from[\s]+([\s]*\"(?<saddr>[^\"]*)\"[\s]+|[\s]*(?<shost>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+)$" }
				id => "message-00040"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"service" => "%{agent}"
					"[event][id]" => "00040"
					"[rsa][message][id1]" => "00040"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:01
		# line in RSA: <agent>[<process_id>]: { Public key | Password } authentication for user <username> accepted
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Public[\s]+key[\s]+|[\s]*Password[\s]+)[\s]+authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+accepted$" }
				id => "message-00040:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00040:01"
					"[rsa][message][id1]" => "00040:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:02
		# line in RSA: <agent>[<process_id>]: User <username>, coming from <shost>, authenticated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}, coming from %{shost}, authenticated" }
				id => "message-00040:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00040:02"
					"[rsa][message][id1]" => "00040:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:03
		# line in RSA: <agent>[<process_id>]: Wrong password given for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Wrong password given for user '%{username}'" }
				id => "message-00040:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"result" => "incorrect passsword"
				"event_description" => "connection failure"
					"[event][id]" => "00040:03"
					"[rsa][message][id1]" => "00040:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:04
		# line in RSA: <agent>[<process_id>]: User <username>'s local password accepted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}'s local password accepted" }
				id => "message-00040:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00040:04"
					"[rsa][message][id1]" => "00040:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:05
		# line in RSA: <agent>[<process_id>]: User <username> forced to change password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} forced to change password" }
				id => "message-00040:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_description" => "forced password change"
					"[event][id]" => "00040:05"
					"[rsa][message][id1]" => "00040:05"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:06
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00040:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00040:06"
					"[rsa][message][id1]" => "00040:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1569
	# line in RSA: { <agent>[<process_id>]: | <agent>: } failed connection or query to sql database securetrack; query: <action>
	else if [logstash][msgparser][id] == "msgParserId1569" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+failed[\s]+connection[\s]+or[\s]+query[\s]+to[\s]+sql[\s]+database[\s]+securetrack;[\s]+query:[\s]+(?<action>.*)$" }
			id => "msgParserId1569"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed connection or query to sql database securetrack"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Start" {
		# MESSAGE 001696
		# line in RSA: <username>:  <event_description> version <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}:  %{event_description} version %{version}" }
				id => "message-001696"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001696"
					"[rsa][message][id1]" => "001696"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001489
		# line in RSA: <agent>[<process_id>]: [<fld1>] <username>: [<fld2>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{username}: [%{fld2}] %{event_description}" }
				id => "message-001489"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001489"
					"[rsa][message][id1]" => "001489"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Starting" {
		# MESSAGE 001453
		# line in RSA: <agent>[<process_id>]: [<fld1>] <username>: [<fld2>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{username}: [%{fld2}] %{event_description}" }
				id => "message-001453"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001453"
					"[rsa][message][id1]" => "001453"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001453:01
		# line in RSA: <agent>[<process_id>]: tid <fld2>: [<fld3>.<severity>]: <event_description> - <hostname>, WorkerID - <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld2}: [%{fld3}.%{severity}]: %{event_description} - %{hostname}, WorkerID - %{fld5}" }
				id => "message-001453:01"
				add_field => {
					"[event][id]" => "001453:01"
					"[rsa][message][id1]" => "001453:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 001453:02
		# line in RSA:  Starting new child process
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Starting new child process" }
				id => "message-001453:02"
				add_field => {
				"event_description" => "Starting new child process"
					"[event][id]" => "001453:02"
					"[rsa][message][id1]" => "001453:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001483
		# line in RSA: {<username>: Starting|Starting}<service>...
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<username>[^:]*):[\s]+Starting|Starting)(?<service>[^\.]*)\.\.\.$" }
				id => "message-001483"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user Starting service"
					"[event][id]" => "001483"
					"[rsa][message][id1]" => "001483"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Starting:01
		# line in RSA: Starting Session <sessionid> of user <username>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Starting Session %{sessionid} of user %{username}." }
				id => "message-Starting:01"
				add_field => {
				"event_description" => "starting session of user"
					"[event][id]" => "Starting:01"
					"[rsa][message][id1]" => "Starting:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Starting:02
		# line in RSA: Starting graveyard sweep
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Starting graveyard sweep" }
				id => "message-Starting:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting graveyard sweep"
					"[event][id]" => "Starting:02"
					"[rsa][message][id1]" => "Starting:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002529
		# line in RSA: <agent>[<process_id>]: [ID <id> <fld1>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{fld1}] %{event_description}" }
				id => "message-002529"
				add_field => {
					"[event][id]" => "002529"
					"[rsa][message][id1]" => "002529"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002549
		# line in RSA: <agent>: cma
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: cma" }
				id => "message-002549"
				add_field => {
					"[event][id]" => "002549"
					"[rsa][message][id1]" => "002549"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1570
	# line in RSA: <agent>[<process_id>]: tid <fld2>: [<fld3>.<severity>]: <event_description> - <hostname>, WorkerID - <fld5>
	else if [logstash][msgparser][id] == "msgParserId1570" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld2}: [%{fld3}.%{severity}]: %{event_description} - %{hostname}, WorkerID - %{fld5}" }
			id => "msgParserId1570"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1573
	# line in RSA: Completed graveyard sweep
	else if [logstash][msgparser][id] == "msgParserId1573" {
		dissect {
			mapping => { "message" => "Completed graveyard sweep" }
			id => "msgParserId1573"
			add_field => {
				"event_description" => "Completed graveyard sweep"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "curl" {
		# MESSAGE curl:03
		# line in RSA: <agent>: { <fld1>: [ <fld2>:| <fld1>:} SSL connecting {<hostip>]|<hostip>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<fld1>[^:]*):[\s]+\[[\s]+(?<fld2>[^:]*):|[\s]*(?<fld1>[^:]*):)[\s]+SSL[\s]+connecting[\s]+((?<hostip>[^\]]*)\]|(?<hostip>.*))$" }
				id => "message-curl:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => " SSL connecting"
					"[event][id]" => "curl:03"
					"[rsa][message][id1]" => "curl:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE curl:02
		# line in RSA: <agent>: { <fld1>: [ <fld2>:| <fld1>:} An SSL connection is closed {<hostip>]|<hostip>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<fld1>[^:]*):[\s]+\[[\s]+(?<fld2>[^:]*):|[\s]*(?<fld1>[^:]*):)[\s]+An[\s]+SSL[\s]+connection[\s]+is[\s]+closed[\s]+((?<hostip>[^\]]*)\]|(?<hostip>.*))$" }
				id => "message-curl:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SSL connection is closed"
					"[event][id]" => "curl:02"
					"[rsa][message][id1]" => "curl:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE curl:01
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-curl:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "curl:01"
					"[rsa][message][id1]" => "curl:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "memorywatch" {
		# MESSAGE memorywatch:01
		# line in RSA: <agent>: Output from host : <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Output from host : %{hostip}" }
				id => "message-memorywatch:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Output from host"
					"[event][id]" => "memorywatch:01"
					"[rsa][message][id1]" => "memorywatch:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE memorywatch
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-memorywatch"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "memorywatch"
					"[rsa][message][id1]" => "memorywatch"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1577
	# line in RSA: <agent>[<fld1>[<fld2>]: <fld3>
	else if [logstash][msgparser][id] == "msgParserId1577" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld1}[%{fld2}]: %{fld3}" }
			id => "msgParserId1577"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1578
	# line in RSA: <agent>[<fld2>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId1578" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld2}]: %{fld1}" }
			id => "msgParserId1578"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1579
	# line in RSA: <agent>[<fld2>]: <fld3>
	else if [logstash][msgparser][id] == "msgParserId1579" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld2}]: %{fld3}" }
			id => "msgParserId1579"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1580
	# line in RSA: <agent>[<fld3>]: <fld1> node '<node>' <fld2>
	else if [logstash][msgparser][id] == "msgParserId1580" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld3}]: %{fld1} node '%{node}' %{fld2}" }
			id => "msgParserId1580"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1581
	# line in RSA: { <agent>[<process_id>]: | <agent>: } statd: host <hostname> is not responding
	else if [logstash][msgparser][id] == "msgParserId1581" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+statd:[\s]+host[\s]+(?<hostname>[^\s]*)[\s]+is[\s]+not[\s]+responding$" }
			id => "msgParserId1581"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "host is not responding"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1582
	# line in RSA: <agent>: stingray_status(): <event_description>
	else if [logstash][msgparser][id] == "msgParserId1582" {
		dissect {
			mapping => { "message" => "%{agent}: stingray_status(): %{event_description}" }
			id => "msgParserId1582"
			add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "stingray status"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "stm" {
		# MESSAGE 002369
		# line in RSA: <agent>[<process_id>]: <<<sessionid>> <<<severity>> |AP <shost>@<saddr> stm| <event_description> @ <event_time_string> <macaddr> { (SN <dclass_counter1>): AP | : AP } <daddr>-<dmacaddr>-<dhost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<sessionid>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|AP[\s]+(?<shost>[^@]*)@(?<saddr>[^\s]*)[\s]+stm\|[\s]+(?<event_description>[^\s]*)[\s]+@[\s]+(?<event_time_string>[^\s]*)[\s]+(?<macaddr>[^\s]*)[\s]+([\s]*\(SN[\s]+(?<dclass_counter1>[^\)]*)\):[\s]+AP[\s]+|[\s]*:[\s]+AP[\s]+)[\s]+(?<daddr>[^\-]*)\-(?<dmacaddr>[^\-]*)\-(?<dhost>.*)$" }
				id => "message-002369"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002369"
					"[rsa][message][id1]" => "002369"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002370
		# line in RSA: <agent>[<process_id>]: <<<sessionid>> <<<severity>> |AP <shost>@<saddr> stm| <event_description>: <macaddr>: AP <daddr>-<dmacaddr>-<dhost> { Reason <result> | <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<sessionid>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|AP[\s]+(?<shost>[^@]*)@(?<saddr>[^\s]*)[\s]+stm\|[\s]+(?<event_description>[^:]*):[\s]+(?<macaddr>[^:]*):[\s]+AP[\s]+(?<daddr>[^\-]*)\-(?<dmacaddr>[^\-]*)\-(?<dhost>[^\s]*)[\s]+([\s]*Reason[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<info>.*))$" }
				id => "message-002370"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002370"
					"[rsa][message][id1]" => "002370"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002371
		# line in RSA: <agent>[<process_id>]: <<<sessionid>> <<<severity>> |AP <shost>@<saddr> stm| <event_description>: <macaddr>: Ageout AP <daddr>-<dmacaddr>-<dhost> { Reason <result> | <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+<(?<sessionid>[^>]*)>[\s]+<(?<severity>[^>]*)>[\s]+\|AP[\s]+(?<shost>[^@]*)@(?<saddr>[^\s]*)[\s]+stm\|[\s]+(?<event_description>[^:]*):[\s]+(?<macaddr>[^:]*):[\s]+Ageout[\s]+AP[\s]+(?<daddr>[^\-]*)\-(?<dmacaddr>[^\-]*)\-(?<dhost>[^\s]*)[\s]+([\s]*Reason[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<info>.*))$" }
				id => "message-002371"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002371"
					"[rsa][message][id1]" => "002371"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1588
	# line in RSA: {<username>: Stopping|Stopping}<service>...
	else if [logstash][msgparser][id] == "msgParserId1588" {
		grok {
			match => { "message" => "^((?<username>[^:]*):[\s]+Stopping|Stopping)(?<service>[^\.]*)\.\.\.$" }
			id => "msgParserId1588"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user Stopping service"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1589
	# line in RSA: <agent>[<process_id>]: <id> <application>() <event_description>
	else if [logstash][msgparser][id] == "msgParserId1589" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{id} %{application}() %{event_description}" }
			id => "msgParserId1589"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "stransport" {
		# MESSAGE 00389
		# line in RSA: <agent>: <event_description>: <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}: %{directory}" }
				id => "message-00389"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00389"
					"[rsa][message][id1]" => "00389"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00389:01
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00389:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00389:01"
					"[rsa][message][id1]" => "00389:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "stunnel" {
		# MESSAGE 00926
		# line in RSA: <agent> {[<process_id>:<fld2>]|[<process_id>]}: <fld1> connected from <saddr>:<sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+(\[(?<process_id>[^:]*):(?<fld2>[^\]]*)\]|\[(?<process_id>[^\]]*)\]):[\s]+(?<fld1>[^\s]*)[\s]+connected[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>.*)$" }
				id => "message-00926"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
					"[event][id]" => "00926"
					"[rsa][message][id1]" => "00926"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00926:01
		# line in RSA: <agent> {[<process_id>:<fld2>]|[<process_id>]}: Connection closed: <bytes> bytes sent to SSL, <fld2> bytes sent to socket
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+(\[(?<process_id>[^:]*):(?<fld2>[^\]]*)\]|\[(?<process_id>[^\]]*)\]):[\s]+Connection[\s]+closed:[\s]+(?<bytes>[^\s]*)[\s]+bytes[\s]+sent[\s]+to[\s]+SSL,[\s]+(?<fld2>[^\s]*)[\s]+bytes[\s]+sent[\s]+to[\s]+socket$" }
				id => "message-00926:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection closed"
					"[event][id]" => "00926:01"
					"[rsa][message][id1]" => "00926:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00926:02
		# line in RSA: <agent>{[<process_id>:<fld2>]|[<process_id>]}: VERIFY OK: depth=<fld1>, <location_desc>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[\[]*)(\[(?<process_id>[^:]*):(?<fld2>[^\]]*)\]|\[(?<process_id>[^\]]*)\]):[\s]+VERIFY[\s]+OK:[\s]+depth=(?<fld1>[^,]*),[\s]+(?<location_desc>.*)$" }
				id => "message-00926:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "VERIFY OK"
					"[event][id]" => "00926:02"
					"[rsa][message][id1]" => "00926:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00926:03
		# line in RSA: <agent> {[<process_id>:<fld2>]|[<process_id>]}: Received signal <resultcode>; <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+(\[(?<process_id>[^:]*):(?<fld2>[^\]]*)\]|\[(?<process_id>[^\]]*)\]):[\s]+Received[\s]+signal[\s]+(?<resultcode>[^;]*);[\s]+(?<action>.*)$" }
				id => "message-00926:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00926:03"
					"[rsa][message][id1]" => "00926:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00926:04
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00926:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00926:04"
					"[rsa][message][id1]" => "00926:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "su" {
		# MESSAGE 00021
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty= <terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty= %{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00021"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"administrator" => "%{c_username}"
				"event_description" => "su failure"
					"[event][id]" => "00021"
					"[rsa][message][id1]" => "00021"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:06
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty= <terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty= %{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00021:06"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"administrator" => "%{c_username}"
				"event_description" => "su failure"
					"[event][id]" => "00021:06"
					"[rsa][message][id1]" => "00021:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:37
		# line in RSA: <agent>[<process_id>]: session opened for user <c_username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{c_username} by (uid=%{uid})" }
				id => "message-00021:37"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
					"[event][id]" => "00021:37"
					"[rsa][message][id1]" => "00021:37"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:01
		# line in RSA: <agent>[<process_id>]: session opened for user <c_username> by <username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{c_username} by %{username}(uid=%{uid})" }
				id => "message-00021:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
				"administrator" => "%{username}"
					"[event][id]" => "00021:01"
					"[rsa][message][id1]" => "00021:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:02
		# line in RSA: <agent>[<process_id>]: session opened for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00021:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
					"[event][id]" => "00021:02"
					"[rsa][message][id1]" => "00021:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:11
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00021:11"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "su session closed for user"
					"[event][id]" => "00021:11"
					"[rsa][message][id1]" => "00021:11"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:03
		# line in RSA: <agent>: '<action>' succeeded for <username> on <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: '%{action}' succeeded for %{username} on %{device}" }
				id => "message-00021:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su"
					"[event][id]" => "00021:03"
					"[rsa][message][id1]" => "00021:03"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:04
		# line in RSA: <agent>: FAILED SU (to <c_username>) <username> <fld2> <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FAILED SU (to %{c_username}) %{username} %{fld2} %{device}" }
				id => "message-00021:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
					"[event][id]" => "00021:04"
					"[rsa][message][id1]" => "00021:04"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:05
		# line in RSA: <agent>: (to <c_username>) <username> on <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (to %{c_username}) %{username} on %{device}" }
				id => "message-00021:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su"
					"[event][id]" => "00021:05"
					"[rsa][message][id1]" => "00021:05"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:07
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00021:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
				"result" => "password check - user unknown"
					"[event][id]" => "00021:07"
					"[rsa][message][id1]" => "00021:07"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:08
		# line in RSA: <agent>[<process_id>]: password - (old) token not obtained
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password - (old) token not obtained" }
				id => "message-00021:08"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "password failure - token not obtained"
				"event_description" => "su failure"
					"[event][id]" => "00021:08"
					"[rsa][message][id1]" => "00021:08"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:09
		# line in RSA: <agent>[<process_id>]: account <username> has expired (account expired)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account %{username} has expired (account expired)" }
				id => "message-00021:09"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "account expired"
				"event_description" => "su failure"
					"[event][id]" => "00021:09"
					"[rsa][message][id1]" => "00021:09"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:12
		# line in RSA: <agent>[<process_id>]: expired password for user <username> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: expired password for user %{username} (%{result})" }
				id => "message-00021:12"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"result" => "password expired"
				"event_description" => "su failure"
					"[event][id]" => "00021:12"
					"[rsa][message][id1]" => "00021:12"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:13
		# line in RSA: <agent>: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00021:13"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"administrator" => "%{c_username}"
				"event_description" => "su failure"
					"[event][id]" => "00021:13"
					"[rsa][message][id1]" => "00021:13"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:10
		# line in RSA: <agent>[<process_id>]: + <fld1> <username>:<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: + %{fld1} %{username}:%{c_username}" }
				id => "message-00021:10"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su"
				"administrator" => "%{c_username}"
					"[event][id]" => "00021:10"
					"[rsa][message][id1]" => "00021:10"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:14
		# line in RSA: <agent>[<process_id>]: - <fld1> <username>:<c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: - %{fld1} %{username}:%{c_username}" }
				id => "message-00021:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
				"administrator" => "%{c_username}"
					"[event][id]" => "00021:14"
					"[rsa][message][id1]" => "00021:14"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:15
		# line in RSA: <agent>: Using { CATALINA_BASE: | CATALINA_HOME: | CATALINA_TMPDIR: | JRE_HOME: } <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+Using[\s]+([\s]*CATALINA_BASE:[\s]+|[\s]*CATALINA_HOME:[\s]+|[\s]*CATALINA_TMPDIR:[\s]+|[\s]*JRE_HOME:[\s]+)[\s]+(?<info>.*)$" }
				id => "message-00021:15"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su info"
					"[event][id]" => "00021:15"
					"[rsa][message][id1]" => "00021:15"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00021:16
		# line in RSA: <agent>[<process_id>]: <info>: Refused user <username> for service su
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}: Refused user %{username} for service su" }
				id => "message-00021:16"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "refused user for su"
					"[event][id]" => "00021:16"
					"[rsa][message][id1]" => "00021:16"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00021:38
		# line in RSA: <agent>: pam_unix(<info>): session opened for user <c_username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{info}): session opened for user %{c_username} by (uid=%{uid})" }
				id => "message-00021:38"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
					"[event][id]" => "00021:38"
					"[rsa][message][id1]" => "00021:38"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:17
		# line in RSA: <agent>: pam_unix(<info>): session opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{info}): session opened for user %{username} by %{c_username}(uid=%{uid})" }
				id => "message-00021:17"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
				"administrator" => "%{username}"
					"[event][id]" => "00021:17"
					"[rsa][message][id1]" => "00021:17"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:18
		# line in RSA: <agent>: pam_unix(<info>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{info}): session closed for user %{username}" }
				id => "message-00021:18"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "su session closed for user"
					"[event][id]" => "00021:18"
					"[rsa][message][id1]" => "00021:18"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:19
		# line in RSA: <agent>[<process_id>]: Warning!  <event_description> with <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Warning!  %{event_description} with %{device}" }
				id => "message-00021:19"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su could not relabel device"
					"[event][id]" => "00021:19"
					"[rsa][message][id1]" => "00021:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:20
		# line in RSA: <agent>(pam_unix)[<process_id>]: password changed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(pam_unix)[%{process_id}]: password changed for %{username}" }
				id => "message-00021:20"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su"
					"[event][id]" => "00021:20"
					"[rsa][message][id1]" => "00021:20"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:21
		# line in RSA: <agent>(pam_unix)[<process_id>]: password for user <username> will expire in <dclass_counter1> days
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(pam_unix)[%{process_id}]: password for user %{username} will expire in %{dclass_counter1} days" }
				id => "message-00021:21"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"event_description" => "su info"
					"[event][id]" => "00021:21"
					"[rsa][message][id1]" => "00021:21"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:22
		# line in RSA: <agent>[<process_id>]: pam_krb5[<fld1>]: authentication fails for '<username>' <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_krb5[%{fld1}]: authentication fails for '%{username}' %{fld2}" }
				id => "message-00021:22"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "su authentication fails"
					"[event][id]" => "00021:22"
					"[rsa][message][id1]" => "00021:22"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:23
		# line in RSA: <agent>[<process_id>]: pam_krb5[<fld1>]: no v5 creds for user '<username>', skipping session { cleanup | setup }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_krb5\[(?<fld1>[^\]]*)\]:[\s]+no[\s]+v5[\s]+creds[\s]+for[\s]+user[\s]+'(?<username>[^']*)',[\s]+skipping[\s]+session[\s]+([\s]*cleanup[\s]+|[\s]*setup[\s]+)$" }
				id => "message-00021:23"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"event_description" => "su skipping session"
					"[event][id]" => "00021:23"
					"[rsa][message][id1]" => "00021:23"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:24
		# line in RSA: <agent>: <event_type>: authentication fails for { ` | ' } <username>' (<shost>): <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_type>[^:]*):[\s]+authentication[\s]+fails[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+\((?<shost>[^\)]*)\):[\s]+(?<result>.*)$" }
				id => "message-00021:24"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
					"[event][id]" => "00021:24"
					"[rsa][message][id1]" => "00021:24"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:25
		# line in RSA: <agent>: <event_type>: Unable to change <param> to <fld1> temporarily
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: Unable to change %{param} to %{fld1} temporarily" }
				id => "message-00021:25"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
					"[event][id]" => "00021:25"
					"[rsa][message][id1]" => "00021:25"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:26
		# line in RSA: <agent>: PAM adding faulty module: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM adding faulty module: %{filename}" }
				id => "message-00021:26"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM adding faulty module"
					"[event][id]" => "00021:26"
					"[rsa][message][id1]" => "00021:26"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:27
		# line in RSA: <agent>: PAM [dlerror: <filename>: <event_description>: <result>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM [dlerror: %{filename}: %{event_description}: %{result}]" }
				id => "message-00021:27"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00021:27"
					"[rsa][message][id1]" => "00021:27"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:28
		# line in RSA: <agent>: PAM unable to dlopen(<filename>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM unable to dlopen(%{filename})" }
				id => "message-00021:28"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM dlopen error"
					"[event][id]" => "00021:28"
					"[rsa][message][id1]" => "00021:28"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:33
		# line in RSA: <agent>: error trying to bind as user "cn=<username>,ou=<group>,o=<domain>,c=<location_desc>" (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: error trying to bind as user \"cn=%{username},ou=%{group},o=%{domain},c=%{location_desc}\" (%{result})" }
				id => "message-00021:33"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00021:33"
					"[rsa][message][id1]" => "00021:33"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:34
		# line in RSA: <agent>: pam_ldap: <service> Can't contact LDAP server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_ldap: %{service} Can't contact LDAP server" }
				id => "message-00021:34"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "can not connect to LDAP server "
					"[event][id]" => "00021:34"
					"[rsa][message][id1]" => "00021:34"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:36
		# line in RSA: <agent>[<process_id>]: Successful su for <username> by <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Successful su for %{username} by %{c_username}" }
				id => "message-00021:36"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su"
					"[event][id]" => "00021:36"
					"[rsa][message][id1]" => "00021:36"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00021:39
		# line in RSA: { <agent>[<process_id>]: | <agent>: } LCC{batch_usertest |batch_|usertest pgrp=<group>}--> <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+LCC(batch_usertest[\s]+|batch_|usertest[\s]+pgrp=(?<group>[^\-]*))\-\->[\s]+(?<username>.*)$" }
				id => "message-00021:39"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00021:39"
					"[rsa][message][id1]" => "00021:39"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00021:35
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00021:35"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00021:35"
					"[rsa][message][id1]" => "00021:35"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1629
	# line in RSA: Subscriber <fld1> is not marked as unavailable in policy model <policyname>
	else if [logstash][msgparser][id] == "msgParserId1629" {
		dissect {
			mapping => { "message" => "Subscriber %{fld1} is not marked as unavailable in policy model %{policyname}" }
			id => "msgParserId1629"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sudo" {
		# MESSAGE 00034
		# line in RSA: <agent>: :PTY=<terminal>:PWD=<directory>:PID=<process_id>:USER=<username>:COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: :PTY=%{terminal}:PWD=%{directory}:PID=%{process_id}:USER=%{username}:COMMAND=%{action}" }
				id => "message-00034"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
					"[event][id]" => "00034"
					"[rsa][message][id1]" => "00034"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:02
		# line in RSA: <agent>[<process_id>]:  <username>: pam_authenticate: Authentication failure <space>; TTY=<terminal> ; PWD=<directory> ; USER=<c_username> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  %{username}: pam_authenticate: Authentication failure %{space}; TTY=%{terminal} ; PWD=%{directory} ; USER=%{c_username} ; COMMAND=%{action}" }
				id => "message-00034:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Authentication failure"
				"administrator" => "%{c_username}"
					"[event][id]" => "00034:02"
					"[rsa][message][id1]" => "00034:02"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:10
		# line in RSA: <agent>: <username>: successful su ; <space> TTY=<terminal> { ; | <space> } PWD= <directory> { ; | <space> }  { USER= | RUNAS= }<c_username> { ; |  <space> } COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+successful[\s]+su[\s]+;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+PWD=[\s]+(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+([\s]*USER=[\s]+|[\s]*RUNAS=[\s]+)(?<c_username>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00034:10"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "successful sudo"
					"[event][id]" => "00034:10"
					"[rsa][message][id1]" => "00034:10"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:28
		# line in RSA: <agent>: <username>: command not allowed ; <space> TTY=<terminal> { ; | <space> } PWD= <directory> { ; | <space> }  { USER= | RUNAS= }<c_username> { ; |  <space> } COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+command[\s]+not[\s]+allowed[\s]+;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+PWD=[\s]+(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+([\s]*USER=[\s]+|[\s]*RUNAS=[\s]+)(?<c_username>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00034:28"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "sudo command failed"
					"[event][id]" => "00034:28"
					"[rsa][message][id1]" => "00034:28"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00034:29
		# line in RSA: <agent>: <username>: user NOT in sudoers ; <space> TTY=<terminal> { ; | <space> } PWD= <directory> { ; | <space> }  { USER= | RUNAS= }<c_username> { ; |  <space> } COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+user[\s]+NOT[\s]+in[\s]+sudoers[\s]+;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+PWD=[\s]+(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+([\s]*USER=[\s]+|[\s]*RUNAS=[\s]+)(?<c_username>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00034:29"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "sudo command failed"
				"result" => "user NOT in sudoers"
					"[event][id]" => "00034:29"
					"[rsa][message][id1]" => "00034:29"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:30
		# line in RSA: <agent>: <username>: <dclass_counter1> incorrect password { attempts | attempt }; <space> TTY=<terminal> { ; | <space> } PWD= <directory> { ; | <space> }  { USER= | RUNAS= }<c_username> { ; |  <space> } COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+(?<dclass_counter1>[^\s]*)[\s]+incorrect[\s]+password[\s]+([\s]*attempts[\s]+|[\s]*attempt[\s]+);[\s]+(?<space>[^\s]*)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+PWD=[\s]+(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+([\s]*USER=[\s]+|[\s]*RUNAS=[\s]+)(?<c_username>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00034:30"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo command failed"
				"administrator" => "%{c_username}"
				"result" => "too many incorrect password attempts"
					"[event][id]" => "00034:30"
					"[rsa][message][id1]" => "00034:30"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:31
		# line in RSA: <agent>: <username>: <service>: Conversation error ; <space> TTY=<terminal> ; PWD= <directory>; USER=<c_username>; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: %{service}: Conversation error ; %{space} TTY=%{terminal} ; PWD= %{directory}; USER=%{c_username}; COMMAND=%{action}" }
				id => "message-00034:31"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "sudo command failed"
				"result" => "Conversation error"
					"[event][id]" => "00034:31"
					"[rsa][message][id1]" => "00034:31"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00034:03
		# line in RSA: <agent>: <username>: <space> TTY=<terminal> { ; | <space> } PWD= <directory> { ; | <space> }  { USER= | RUNAS= }<c_username> { ; |  <space> } COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+PWD=[\s]+(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+([\s]*USER=[\s]+|[\s]*RUNAS=[\s]+)(?<c_username>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-00034:03"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "successful sudo"
					"[event][id]" => "00034:03"
					"[rsa][message][id1]" => "00034:03"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:01
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00034:01"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "sudo failure"
					"[event][id]" => "00034:01"
					"[rsa][message][id1]" => "00034:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:17
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00034:17"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "sudo failure"
					"[event][id]" => "00034:17"
					"[rsa][message][id1]" => "00034:17"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:09
		# line in RSA: <agent>: pam_unix(<protocol>): authentication failure; logname=<info> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix(%{protocol}): authentication failure; logname=%{info} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00034:09"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "authentication failure"
					"[event][id]" => "00034:09"
					"[rsa][message][id1]" => "00034:09"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:04
		# line in RSA: <agent>: <username>: no passwd entry for <c_username>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: no passwd entry for %{c_username}!" }
				id => "message-00034:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
				"administrator" => "%{c_username}"
					"[event][id]" => "00034:04"
					"[rsa][message][id1]" => "00034:04"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:05
		# line in RSA: <agent>[<process_id>]: <interface>: authenticate error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: authenticate error: %{result}" }
				id => "message-00034:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
					"[event][id]" => "00034:05"
					"[rsa][message][id1]" => "00034:05"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:23
		# line in RSA: <agent>: <interface>: authentication fails for { ` | ' } <username>' (<shost>) <result> (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<interface>[^:]*):[\s]+authentication[\s]+fails[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+\((?<shost>[^\)]*)\)[\s]+(?<result>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-00034:23"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
					"[event][id]" => "00034:23"
					"[rsa][message][id1]" => "00034:23"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:06
		# line in RSA: <agent>[<process_id>]: <interface>: authentication fails for { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<interface>[^:]*):[\s]+authentication[\s]+fails[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00034:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "su failure"
					"[event][id]" => "00034:06"
					"[rsa][message][id1]" => "00034:06"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:07
		# line in RSA: <agent>[<process_id>]: <interface>: account checks fail for { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<interface>[^:]*):[\s]+account[\s]+checks[\s]+fail[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00034:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo failure"
					"[event][id]" => "00034:07"
					"[rsa][message][id1]" => "00034:07"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:08
		# line in RSA: <agent>[<process_id>]: <interface>: pam_sm_authenticate returning <info> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface}: pam_sm_authenticate returning %{info} (%{result})" }
				id => "message-00034:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo failure"
					"[event][id]" => "00034:08"
					"[rsa][message][id1]" => "00034:08"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:11
		# line in RSA: <agent>[<process_id>]: <interface>: authentication succeeds for { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<interface>[^:]*):[\s]+authentication[\s]+succeeds[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00034:11"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful sudo"
					"[event][id]" => "00034:11"
					"[rsa][message][id1]" => "00034:11"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:22
		# line in RSA: sudo: <agent>[<process_id>]: authentication succeeds for { ` | ' } <username>' (<info>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^sudo:[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+authentication[\s]+succeeds[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+\((?<info>[^\)]*)\)$" }
				id => "message-00034:22"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful sudo"
					"[event][id]" => "00034:22"
					"[rsa][message][id1]" => "00034:22"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:12
		# line in RSA: <agent>[<process_id>]: session opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by %{c_username}(uid=%{uid})" }
				id => "message-00034:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful sudo"
				"administrator" => "%{c_username}"
					"[event][id]" => "00034:12"
					"[rsa][message][id1]" => "00034:12"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:13
		# line in RSA: <agent>[<process_id>]: session opened for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00034:13"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful sudo"
					"[event][id]" => "00034:13"
					"[rsa][message][id1]" => "00034:13"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:14
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00034:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00034:14"
					"[rsa][message][id1]" => "00034:14"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:15
		# line in RSA: <agent>[<process_id>]: pam_seos: pam_get_item[<info>] failed (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_seos: pam_get_item[%{info}] failed (%{result})" }
				id => "message-00034:15"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "pam_get_item failure"
					"[event][id]" => "00034:15"
					"[rsa][message][id1]" => "00034:15"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:16
		# line in RSA: <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-00034:16"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "check password"
					"[event][id]" => "00034:16"
					"[rsa][message][id1]" => "00034:16"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:18
		# line in RSA: <agent>[<process_id>]: pam_ldap: error trying to bind as user "<username>" (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_ldap: error trying to bind as user \"%{username}\" (%{result})" }
				id => "message-00034:18"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error trying to bind as user"
					"[event][id]" => "00034:18"
					"[rsa][message][id1]" => "00034:18"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:21
		# line in RSA: <agent>[<process_id>]: pam_krb5[<fld1>]: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_krb5[%{fld1}]: %{action}" }
				id => "message-00034:21"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00034:21"
					"[rsa][message][id1]" => "00034:21"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:20
		# line in RSA: <agent>: pam_unix2: <protocol> (<fld1>) failed: <username>: <info>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_unix2: %{protocol} (%{fld1}) failed: %{username}: %{info}: %{result}" }
				id => "message-00034:20"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo command failure"
					"[event][id]" => "00034:20"
					"[rsa][message][id1]" => "00034:20"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:19
		# line in RSA: <agent>: <username>: (command continued) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: (command continued) %{info}" }
				id => "message-00034:19"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo command continuation"
					"[event][id]" => "00034:19"
					"[rsa][message][id1]" => "00034:19"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:24
		# line in RSA: <agent>: (pam_unix) auth could not identify password for [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (pam_unix) auth could not identify password for [%{username}]" }
				id => "message-00034:24"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "00034:24"
					"[rsa][message][id1]" => "00034:24"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:33
		# line in RSA: <agent>: pam_tally(sudo:<process>): Tally underflowed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(sudo:%{process}): Tally underflowed for user %{username}" }
				id => "message-00034:33"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Tally underflowed for user"
					"[event][id]" => "00034:33"
					"[rsa][message][id1]" => "00034:33"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:25
		# line in RSA: <agent>: pam_tally(sudo:<process>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally(sudo:%{process}): %{event_description}" }
				id => "message-00034:25"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "pam_tally activity"
					"[event][id]" => "00034:25"
					"[rsa][message][id1]" => "00034:25"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:26
		# line in RSA: <agent>: PAM unable to dlopen(<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM unable to dlopen(%{info})" }
				id => "message-00034:26"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM dlopen error"
					"[event][id]" => "00034:26"
					"[rsa][message][id1]" => "00034:26"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:27
		# line in RSA: <agent>: PAM [dlerror: <info>: <action>: <result>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM [dlerror: %{info}: %{action}: %{result}]" }
				id => "message-00034:27"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00034:27"
					"[rsa][message][id1]" => "00034:27"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:32
		# line in RSA: <agent>: PAM adding faulty module: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM adding faulty module: %{info}" }
				id => "message-00034:32"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM adding faulty module"
					"[event][id]" => "00034:32"
					"[rsa][message][id1]" => "00034:32"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:101
		# line in RSA: { <agent>[<process_id>]: | <agent>: } pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_unix\((?<service>[^\)]*)\):[\s]+session[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-00034:101"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed"
					"[event][id]" => "00034:101"
					"[rsa][message][id1]" => "00034:101"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:100
		# line in RSA: { <agent>[<process_id>]: | <agent>: } pam_unix(<service>): session opened for user <username> by { (uid=<uid>) | <c_username>(uid=<uid>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+pam_unix\((?<service>[^\)]*)\):[\s]+session[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+([\s]*\(uid=(?<uid>[^\)]*)\)[\s]+|[\s]*(?<c_username>[^\(]*)\(uid=(?<uid>[^\)]*)\)[\s]+)$" }
				id => "message-00034:100"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened"
					"[event][id]" => "00034:100"
					"[rsa][message][id1]" => "00034:100"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:99
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00034:99"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00034:99"
					"[rsa][message][id1]" => "00034:99"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SUDO" {
		# MESSAGE 00283
		# line in RSA: <agent>: <fld1>:<fld2>:<fld3> : <username> : <fld4> TTY=<terminal> ; <fld5> USER=<c_username> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}:%{fld2}:%{fld3} : %{username} : %{fld4} TTY=%{terminal} ; %{fld5} USER=%{c_username} ; COMMAND=%{action}" }
				id => "message-00283"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
					"[event][id]" => "00283"
					"[rsa][message][id1]" => "00283"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00283:01
		# line in RSA: <agent>: <fld1>:<fld2>:<fld3> : <username> : <fld4> TTY=<terminal> ; <fld5> USER=<c_username> ;
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}:%{fld2}:%{fld3} : %{username} : %{fld4} TTY=%{terminal} ; %{fld5} USER=%{c_username} ;" }
				id => "message-00283:01"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
					"[event][id]" => "00283:01"
					"[rsa][message][id1]" => "00283:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00283:04
		# line in RSA: <agent>: <fld1> USER=<username> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} USER=%{username} ; COMMAND=%{action}" }
				id => "message-00283:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00283:04"
					"[rsa][message][id1]" => "00283:04"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00283:02
		# line in RSA: <agent>: <fld1> COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} COMMAND=%{action}" }
				id => "message-00283:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00283:02"
					"[rsa][message][id1]" => "00283:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00283:03
		# line in RSA: <agent>: <fld1>:<fld2>:<fld3> : <username> : <fld4> TTY=<terminal> ; <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}:%{fld2}:%{fld3} : %{username} : %{fld4} TTY=%{terminal} ; %{fld5}" }
				id => "message-00283:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00283:03"
					"[rsa][message][id1]" => "00283:03"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudosh" {
		# MESSAGE 00516
		# line in RSA: <agent>: starting session for <username> as <c_username>,<terminal> (<directory>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: starting session for %{username} as %{c_username},%{terminal} (%{directory})" }
				id => "message-00516"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "starting sudo session"
					"[event][id]" => "00516"
					"[rsa][message][id1]" => "00516"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00516:01
		# line in RSA: <agent>: stopping session for <username> as <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: stopping session for %{username} as %{c_username}" }
				id => "message-00516:01"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "stopping sudo session"
					"[event][id]" => "00516:01"
					"[rsa][message][id1]" => "00516:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1672
	# line in RSA: { <agent>[<process_id>]: | <agent>: } Startup Configuration file set to <filename>
	else if [logstash][msgparser][id] == "msgParserId1672" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Startup[\s]+Configuration[\s]+file[\s]+set[\s]+to[\s]+(?<filename>.*)$" }
			id => "msgParserId1672"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Startup Configuration file set"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1673
	# line in RSA: <agent>: <event_source>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1673" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_source}: %{event_description}" }
			id => "msgParserId1673"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1674
	# line in RSA: <agent>: no lock file found for <filename>. <result>.
	else if [logstash][msgparser][id] == "msgParserId1674" {
		dissect {
			mapping => { "message" => "%{agent}: no lock file found for %{filename}. %{result}." }
			id => "msgParserId1674"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "no lock file found for file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1675
	# line in RSA: <agent>: { SAN Error: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1675" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*SAN[\s]+Error:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1675"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1676
	# line in RSA: <agent> <version>: <severity>: <event_source>: <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId1676" {
		dissect {
			mapping => { "message" => "%{agent} %{version}: %{severity}: %{event_source}: %{event_description}: %{result}" }
			id => "msgParserId1676"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1677
	# line in RSA: <agent> <fld1> <process>[<process_id>]: <application>: successful authentication for user <<<username>>
	else if [logstash][msgparser][id] == "msgParserId1677" {
		dissect {
			mapping => { "message" => "%{agent} %{fld1} %{process}[%{process_id}]: %{application}: successful authentication for user <%{username}>" }
			id => "msgParserId1677"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "successful authentication for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1678
	# line in RSA: <agent>: {last message repeated <dclass_counter1> times |<event_description>}
	else if [logstash][msgparser][id] == "msgParserId1678" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(last[\s]+message[\s]+repeated[\s]+(?<dclass_counter1>[^\s]*)[\s]+times[\s]+|(?<event_description>.*))$" }
			id => "msgParserId1678"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog-ng" {
		# MESSAGE 002420
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <fld1> shutting down; version=<version>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+shutting[\s]+down;[\s]+version=(?<version>.*)$" }
				id => "message-002420"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"event_description" => "syslog-ng shutting down"
					"[event][id]" => "002420"
					"[rsa][message][id1]" => "002420"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00084
		# line in RSA: { <agent>[<process_id>]: | <agent>: }  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00084"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00084"
					"[rsa][message][id1]" => "00084"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "syslogd" {
		# MESSAGE 00023:05
		# line in RSA: syslogd: <action>: Connection refused
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "syslogd: %{action}: Connection refused" }
				id => "message-00023:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connection refused"
				"agent" => "syslogd"
					"[event][id]" => "00023:05"
					"[rsa][message][id1]" => "00023:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00023:04
		# line in RSA: syslogd: <param>: Invalid argument
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "syslogd: %{param}: Invalid argument" }
				id => "message-00023:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Invalid argument"
				"agent" => "syslogd"
					"[event][id]" => "00023:04"
					"[rsa][message][id1]" => "00023:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00023:03
		# line in RSA: <agent>:  { going down on signal <dclass_counter1> | Good Bye }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*going[\s]+down[\s]+on[\s]+signal[\s]+(?<dclass_counter1>[^\s]*)[\s]+|[\s]*Good[\s]+Bye[\s]+)$" }
				id => "message-00023:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "going down on signal"
					"[event][id]" => "00023:03"
					"[rsa][message][id1]" => "00023:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00023:01
		# line in RSA: <agent> <version>: restart <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} %{version}: restart %{info}" }
				id => "message-00023:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "syslogd restarted"
					"[event][id]" => "00023:01"
					"[rsa][message][id1]" => "00023:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00023:02
		# line in RSA: <agent>:  { configuration restart| restart }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*configuration[\s]+restart|[\s]*restart[\s]+)$" }
				id => "message-00023:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "configuration restart"
					"[event][id]" => "00023:02"
					"[rsa][message][id1]" => "00023:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00023
		# line in RSA: syslogd: <device>: No space left on device
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "syslogd: %{device}: No space left on device" }
				id => "message-00023"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "system device error"
				"result" => "No space left on device"
				"agent" => "syslogd"
					"[event][id]" => "00023"
					"[rsa][message][id1]" => "00023"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00023:07
		# line in RSA: syslogd: <device>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "syslogd: %{device}: %{result}" }
				id => "message-00023:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "system device error"
				"agent" => "syslogd"
					"[event][id]" => "00023:07"
					"[rsa][message][id1]" => "00023:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1687
	# line in RSA: <agent>: exiting on signal <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId1687" {
		dissect {
			mapping => { "message" => "%{agent}: exiting on signal %{dclass_counter1}" }
			id => "msgParserId1687"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "exiting on signal"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId618
	# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId618" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId618"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1688
	# line in RSA: <agent>: SysMSG <hostname> <network_service> <process> INFO: <event_description>.
	else if [logstash][msgparser][id] == "msgParserId1688" {
		dissect {
			mapping => { "message" => "%{agent}: SysMSG %{hostname} %{network_service} %{process} INFO: %{event_description}." }
			id => "msgParserId1688"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Sysmon heartbeat"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE 00690
		# line in RSA: <agent>: Detected an unauthorized user attempting to access the SNMP interface from <saddr> . <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Detected an unauthorized user attempting to access the SNMP interface from %{saddr} . %{fld1}" }
				id => "message-00690"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "unauthorized user attempting to access the SNMP interface"
					"[event][id]" => "00690"
					"[rsa][message][id1]" => "00690"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00690:01
		# line in RSA: <agent>: Detected an unauthorized user attempting to access the Web interface from <saddr> . <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Detected an unauthorized user attempting to access the Web interface from %{saddr} . %{fld1}" }
				id => "message-00690:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "unauthorized user attempting to access the Web interface"
					"[event][id]" => "00690:01"
					"[rsa][message][id1]" => "00690:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00690:02
		# line in RSA: <agent>: Warmstart. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Warmstart. %{info}" }
				id => "message-00690:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Warmstart"
					"[event][id]" => "00690:02"
					"[rsa][message][id1]" => "00690:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00690:03
		# line in RSA: <agent>: Detected an unauthorized user attempting to access the Control Console interface from <saddr> . 0x<resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Detected an unauthorized user attempting to access the Control Console interface from %{saddr} . 0x%{resultcode}" }
				id => "message-00690:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "Detected an unauthorized user attempting to access the Control Console interface"
					"[event][id]" => "00690:03"
					"[rsa][message][id1]" => "00690:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00690:04
		# line in RSA: <agent>: Detected an unauthorized user attempting to access the FTP interface from <saddr> . <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Detected an unauthorized user attempting to access the FTP interface from %{saddr} . %{fld1}" }
				id => "message-00690:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "unauthorized user attempting to access the FTP interface"
					"[event][id]" => "00690:04"
					"[rsa][message][id1]" => "00690:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1694
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1694" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId1694"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1651
	# line in RSA: <agent>[<process_id>]: session closed for user <username>
	else if [logstash][msgparser][id] == "msgParserId1651" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
			id => "msgParserId1651"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "system-config-authentication" {
		# MESSAGE 01070
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-01070"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01070"
					"[rsa][message][id1]" => "01070"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01070:01
		# line in RSA: <agent>: auth could not identify password for [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: auth could not identify password for [%{username}]" }
				id => "message-01070:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "01070:01"
					"[rsa][message][id1]" => "01070:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId657
	# line in RSA: <agent>[<process_id>]: auth could not identify password for [<username>]
	else if [logstash][msgparser][id] == "msgParserId657" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: auth could not identify password for [%{username}]" }
			id => "msgParserId657"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sxfftpd" {
		# MESSAGE 03477
		# line in RSA: <agent>: connection from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: connection from %{saddr}" }
				id => "message-03477"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
					"[event][id]" => "03477"
					"[rsa][message][id1]" => "03477"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002143
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002143"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002143"
					"[rsa][message][id1]" => "002143"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sysconfig" {
		# MESSAGE 03478
		# line in RSA: <agent>: <username>: { Added | Removed } DNS server <daddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^:]*):[\s]+([\s]*Added[\s]+|[\s]*Removed[\s]+)[\s]+DNS[\s]+server[\s]+(?<daddr>.*)$" }
				id => "message-03478"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "added/removed DNS server"
					"[event][id]" => "03478"
					"[rsa][message][id1]" => "03478"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03478:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03478:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03478:01"
					"[rsa][message][id1]" => "03478:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1698
	# line in RSA: <agent>[<process_id>]:<severity> <saddr>: <result>
	else if [logstash][msgparser][id] == "msgParserId1698" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:%{severity} %{saddr}: %{result}" }
			id => "msgParserId1698"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1699
	# line in RSA: <agent>[<process_id>]: unknown robot <dhost>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId1699" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: unknown robot %{dhost}, %{event_description}" }
			id => "msgParserId1699"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1700
	# line in RSA: TCP bind hash table entries: <info>
	else if [logstash][msgparser][id] == "msgParserId1700" {
		dissect {
			mapping => { "message" => "TCP bind hash table entries: %{info}" }
			id => "msgParserId1700"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "tcsh" {
		# MESSAGE 02566
		# line in RSA: <agent>[<process_id>]: interactive shell started by username: <username> UID: <uid> EUID: <fld3> GID: <fld4> EGID: <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: interactive shell started by username: %{username} UID: %{uid} EUID: %{fld3} GID: %{fld4} EGID: %{fld5}" }
				id => "message-02566"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "interactive shell started"
					"[event][id]" => "02566"
					"[rsa][message][id1]" => "02566"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02566:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02566:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02566:01"
					"[rsa][message][id1]" => "02566:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1702
	# line in RSA: <agent>: <fld1> shutdown failed
	else if [logstash][msgparser][id] == "msgParserId1702" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} shutdown failed" }
			id => "msgParserId1702"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "shutdown failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1703
	# line in RSA: <agent>: <application>: error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1703" {
		dissect {
			mapping => { "message" => "%{agent}: %{application}: error: %{event_description}" }
			id => "msgParserId1703"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application program error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1704
	# line in RSA: <agent>: <process>: invalid context <info>
	else if [logstash][msgparser][id] == "msgParserId1704" {
		dissect {
			mapping => { "message" => "%{agent}: %{process}: invalid context %{info}" }
			id => "msgParserId1704"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "invalid context"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1705
	# line in RSA: <fld1>[<process_id>]: <event_time_string> GGS <severity> <fld2> Oracle GoldenGate Manager for Teradata, <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1705" {
		dissect {
			mapping => { "message" => "%{fld1}[%{process_id}]: %{event_time_string} GGS %{severity} %{fld2} Oracle GoldenGate Manager for Teradata, %{process}: %{event_description}" }
			id => "msgParserId1705"
			add_field => {
				"hostname" => "%{hhost}"
				"agent" => "Oracle GoldenGate Manager for Teradata"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "The" {
		# MESSAGE 001456
		# line in RSA: <agent>[<process_id>]: [<fld1>] <username>: [<fld2>] The <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{username}: [%{fld2}] The %{event_description}" }
				id => "message-001456"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001456"
					"[rsa][message][id1]" => "001456"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001456:01
		# line in RSA: The station data in local base = <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The station data in local base = %{fld1}" }
				id => "message-001456:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "The station data in local base"
					"[event][id]" => "001456:01"
					"[rsa][message][id1]" => "001456:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001456:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-001456:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001456:02"
					"[rsa][message][id1]" => "001456:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1708
	# line in RSA: Time Navigator Enterprise Edition[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1708" {
		dissect {
			mapping => { "message" => "Time Navigator Enterprise Edition[%{process_id}]: %{event_description}" }
			id => "msgParserId1708"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1709
	# line in RSA: <agent>: <process> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1709" {
		dissect {
			mapping => { "message" => "%{agent}: %{process} %{event_description}" }
			id => "msgParserId1709"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tmm" {
		# MESSAGE 001305
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <id> No members available for pool <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<id>[^\s]*)[\s]+No[\s]+members[\s]+available[\s]+for[\s]+pool[\s]+(?<filename>.*)$" }
				id => "message-001305"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "No members available for pool"
					"[event][id]" => "001305"
					"[rsa][message][id1]" => "001305"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001306
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <id> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<id>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-001306"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001306"
					"[rsa][message][id1]" => "001306"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1711
	# line in RSA: <agent>[<process_id>]: <version> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1711" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{version} %{event_description}" }
			id => "msgParserId1711"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tomcat8-wrapper" {
		# MESSAGE tomcat8-wrapper
		# line in RSA: <agent>: Starting tomcat8 Instance <obj_name>: [<event_state>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Starting tomcat8 Instance %{obj_name}: [%{event_state}]" }
				id => "message-tomcat8-wrapper"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting tomcat8 Instance"
				"obj_type" => "instance"
					"[event][id]" => "tomcat8-wrapper"
					"[rsa][message][id1]" => "tomcat8-wrapper"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE tomcat8-wrapper:01
		# line in RSA: <agent>: Stopping tomcat8 Instance <obj_name>: [<event_state>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Stopping tomcat8 Instance %{obj_name}: [%{event_state}]" }
				id => "message-tomcat8-wrapper:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Stopping tomcat8 Instance"
				"obj_type" => "instance"
					"[event][id]" => "tomcat8-wrapper:01"
					"[rsa][message][id1]" => "tomcat8-wrapper:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE tomcat8-wrapper:02
		# line in RSA: <agent>: [<event_state>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{event_state}]" }
				id => "message-tomcat8-wrapper:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "client File not found"
					"[event][id]" => "tomcat8-wrapper:02"
					"[rsa][message][id1]" => "tomcat8-wrapper:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE tomcat8-wrapper:03
		# line in RSA: <agent>:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{info}" }
				id => "message-tomcat8-wrapper:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "client File not found"
					"[event][id]" => "tomcat8-wrapper:03"
					"[rsa][message][id1]" => "tomcat8-wrapper:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "opennms" {
		# MESSAGE opennms
		# line in RSA: <agent>: Starting OpenNMS: (<result>) [<event_state>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Starting OpenNMS: (%{result}) [%{event_state}]" }
				id => "message-opennms"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting OpenNMS"
					"[event][id]" => "opennms"
					"[rsa][message][id1]" => "opennms"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE opennms:01
		# line in RSA: <agent>: Stopping OpenNMS: [<event_state>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Stopping OpenNMS: [%{event_state}]" }
				id => "message-opennms:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Stopping OpenNMS"
					"[event][id]" => "opennms:01"
					"[rsa][message][id1]" => "opennms:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1718
	# line in RSA: Total of <dclass_counter1> processors activated <info>
	else if [logstash][msgparser][id] == "msgParserId1718" {
		dissect {
			mapping => { "message" => "Total of %{dclass_counter1} processors activated %{info}" }
			id => "msgParserId1718"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1719
	# line in RSA: <agent>: { CMD_START = <action> | <application> : (start) }
	else if [logstash][msgparser][id] == "msgParserId1719" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*CMD_START[\s]+=[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<application>[^\s]*)[\s]+:[\s]+\(start\)[\s]+)$" }
			id => "msgParserId1719"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application start"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId768
	# line in RSA: <agent>[<process_id>]: <event_time_string> ERROR <event_description>
	else if [logstash][msgparser][id] == "msgParserId768" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} ERROR %{event_description}" }
			id => "msgParserId768"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1720
	# line in RSA: <agent>[<process_id>]: <application>: <event_type>: <action>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1720" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{event_type}: %{action}: %{event_description}" }
			id => "msgParserId1720"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1721
	# line in RSA: <agent>/<node>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1721" {
		dissect {
			mapping => { "message" => "%{agent}/%{node}[%{process_id}]: %{event_description}" }
			id => "msgParserId1721"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1722
	# line in RSA: <process_id>]: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1722" {
		dissect {
			mapping => { "message" => "%{process_id}]: %{agent}: %{event_description}" }
			id => "msgParserId1722"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tripwire" {
		# MESSAGE 001389
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Database Update Complete: <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Database[\s]+Update[\s]+Complete:[\s]+(?<filename>.*)$" }
				id => "message-001389"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Database Update Check Complete"
					"[event][id]" => "001389"
					"[rsa][message][id1]" => "001389"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001388
		# line in RSA: { <agent>[<process_id>]: | <agent>: } Integrity Check Complete: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Integrity[\s]+Check[\s]+Complete:[\s]+(?<info>.*)$" }
				id => "message-001388"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Integrity Check Complete"
					"[event][id]" => "001388"
					"[rsa][message][id1]" => "001388"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002134
		# line in RSA: <agent>: <space> succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} succeeded" }
				id => "message-002134"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "succeeded"
					"[event][id]" => "002134"
					"[rsa][message][id1]" => "002134"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tsm" {
		# MESSAGE 00513
		# line in RSA: <agent>: <terminal>: <fld1> Password read timed out -- <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{terminal}: %{fld1} Password read timed out -- %{result}" }
				id => "message-00513"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Process"
				"ec_outcome" => "Success"
				"event_description" => "Password read timed out"
					"[event][id]" => "00513"
					"[rsa][message][id1]" => "00513"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03480
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03480"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03480"
					"[rsa][message][id1]" => "03480"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1727
	# line in RSA: { <agent>[<process_id>]: | <agent>: } Filename: <filename> <event_description> [<result>]
	else if [logstash][msgparser][id] == "msgParserId1727" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Filename:[\s]+(?<filename>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<result>[^\]]*)\]$" }
			id => "msgParserId1727"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1728
	# line in RSA: <agent>: <username>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1728" {
		dissect {
			mapping => { "message" => "%{agent}: %{username}: %{event_description}" }
			id => "msgParserId1728"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "shut down component"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Tx" {
		# MESSAGE 002240
		# line in RSA: <agent>[<process_id>]: <event_description>; <result> [<resultcode>]<disposition>; C:<group>, { CN: | Cn: } <dhost>, { IP: | Ip: } <daddr>, L:<location_desc>, { <info>, PORT: | <info>, Port: } <dport>, { SN: | Sn: } <fld2>, { SSL: | Ssl } <fld3>, { ST: | St: } <fld4>, { TIME: | Time: } <event_time_string>, { Vsextension: | vsExtension: } <fld5> { ID = | Id = } <id>; License Certificate = <fld9>; License Number = <fld8>; Product = <product>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_description>[^;]*);[\s]+(?<result>[^\s]*)[\s]+\[(?<resultcode>[^\]]*)\](?<disposition>[^;]*);[\s]+C:(?<group>[^,]*),[\s]+([\s]*CN:[\s]+|[\s]*Cn:[\s]+)[\s]+(?<dhost>[^,]*),[\s]+([\s]*IP:[\s]+|[\s]*Ip:[\s]+)[\s]+(?<daddr>[^,]*),[\s]+L:(?<location_desc>[^,]*),[\s]+([\s]*(?<info>[^,]*),[\s]+PORT:[\s]+|[\s]*(?<info>[^,]*),[\s]+Port:[\s]+)[\s]+(?<dport>[^,]*),[\s]+([\s]*SN:[\s]+|[\s]*Sn:[\s]+)[\s]+(?<fld2>[^,]*),[\s]+([\s]*SSL:[\s]+|[\s]*Ssl[\s]+)[\s]+(?<fld3>[^,]*),[\s]+([\s]*ST:[\s]+|[\s]*St:[\s]+)[\s]+(?<fld4>[^,]*),[\s]+([\s]*TIME:[\s]+|[\s]*Time:[\s]+)[\s]+(?<event_time_string>[^,]*),[\s]+([\s]*Vsextension:[\s]+|[\s]*vsExtension:[\s]+)[\s]+(?<fld5>[^\s]*)[\s]+([\s]*ID[\s]+=[\s]+|[\s]*Id[\s]+=[\s]+)[\s]+(?<id>[^;]*);[\s]+License[\s]+Certificate[\s]+=[\s]+(?<fld9>[^;]*);[\s]+License[\s]+Number[\s]+=[\s]+(?<fld8>[^;]*);[\s]+Product[\s]+=[\s]+(?<product>.*)$" }
				id => "message-002240"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002240"
					"[rsa][message][id1]" => "002240"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002241
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002241"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002241"
					"[rsa][message][id1]" => "002241"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tx" {
		# MESSAGE 002242
		# line in RSA: <agent>[<process_id>]: <event_description>; <result> [<resultcode>]<disposition>; C:<group>, { CN: | Cn: } <dhost>, { IP: | Ip: } <daddr>, L:<location_desc>, { <info>, PORT: | <info>, Port: } <dport>, { SN: | Sn: } <fld2>, { SSL: | Ssl } <fld3>, { ST: | St: } <fld4>, { TIME: | Time: } <event_time_string>, { Vsextension: | vsExtension: } <fld5> { ID = | Id = } <id>; License Certificate = <fld9>; License Number = <fld8>; Product = <product>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<event_description>[^;]*);[\s]+(?<result>[^\s]*)[\s]+\[(?<resultcode>[^\]]*)\](?<disposition>[^;]*);[\s]+C:(?<group>[^,]*),[\s]+([\s]*CN:[\s]+|[\s]*Cn:[\s]+)[\s]+(?<dhost>[^,]*),[\s]+([\s]*IP:[\s]+|[\s]*Ip:[\s]+)[\s]+(?<daddr>[^,]*),[\s]+L:(?<location_desc>[^,]*),[\s]+([\s]*(?<info>[^,]*),[\s]+PORT:[\s]+|[\s]*(?<info>[^,]*),[\s]+Port:[\s]+)[\s]+(?<dport>[^,]*),[\s]+([\s]*SN:[\s]+|[\s]*Sn:[\s]+)[\s]+(?<fld2>[^,]*),[\s]+([\s]*SSL:[\s]+|[\s]*Ssl[\s]+)[\s]+(?<fld3>[^,]*),[\s]+([\s]*ST:[\s]+|[\s]*St:[\s]+)[\s]+(?<fld4>[^,]*),[\s]+([\s]*TIME:[\s]+|[\s]*Time:[\s]+)[\s]+(?<event_time_string>[^,]*),[\s]+([\s]*Vsextension:[\s]+|[\s]*vsExtension:[\s]+)[\s]+(?<fld5>[^\s]*)[\s]+([\s]*ID[\s]+=[\s]+|[\s]*Id[\s]+=[\s]+)[\s]+(?<id>[^;]*);[\s]+License[\s]+Certificate[\s]+=[\s]+(?<fld9>[^;]*);[\s]+License[\s]+Number[\s]+=[\s]+(?<fld8>[^;]*);[\s]+Product[\s]+=[\s]+(?<product>.*)$" }
				id => "message-002242"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002242"
					"[rsa][message][id1]" => "002242"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002243
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002243"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002243"
					"[rsa][message][id1]" => "002243"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1730
	# line in RSA: <agent>: <filename> does not exist or is not executable
	else if [logstash][msgparser][id] == "msgParserId1730" {
		dissect {
			mapping => { "message" => "%{agent}: %{filename} does not exist or is not executable" }
			id => "msgParserId1730"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "nonexistent file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1731
	# line in RSA: <agent>[<process_id>]: <action>
	else if [logstash][msgparser][id] == "msgParserId1731" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{action}" }
			id => "msgParserId1731"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unicode tar activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "unix_chkpwd" {
		# MESSAGE 00496:05
		# line in RSA: <agent>[<process_id>]: could not identify user (from getpwnam(<username>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: could not identify user (from getpwnam(%{username})" }
				id => "message-00496:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "could not identify user from getpwnam"
					"[event][id]" => "00496:05"
					"[rsa][message][id1]" => "00496:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00496:04
		# line in RSA: <agent>[<process_id>]: could not get username from shadow (<username>))
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: could not get username from shadow (%{username}))" }
				id => "message-00496:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "could not get username from shadow"
					"[event][id]" => "00496:04"
					"[rsa][message][id1]" => "00496:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00496
		# line in RSA: <agent>[<process_id>]: password check failed for user (<username>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password check failed for user (%{username})" }
				id => "message-00496"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "00496"
					"[rsa][message][id1]" => "00496"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00496:02
		# line in RSA: <agent>[<process_id>]: could not obtain user info (<username>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: could not obtain user info (%{username})" }
				id => "message-00496:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "could not obtain user info"
					"[event][id]" => "00496:02"
					"[rsa][message][id1]" => "00496:02"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00496:01
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-00496:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "00496:01"
					"[rsa][message][id1]" => "00496:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00496:03
		# line in RSA: <agent>[<process_id>]: inappropriate use of Unix helper binary [UID=<uid>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: inappropriate use of Unix helper binary [UID=%{uid}]" }
				id => "message-00496:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "inappropriate use of Unix helper binary"
					"[event][id]" => "00496:03"
					"[rsa][message][id1]" => "00496:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "unix2_chkpwd" {
		# MESSAGE 001301
		# line in RSA: <agent>[<process_id>]: pam_authenticate(<fld1>, <username>): Authentication failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_authenticate(%{fld1}, %{username}): Authentication failure" }
				id => "message-001301"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"result" => "could not identify password"
					"[event][id]" => "001301"
					"[rsa][message][id1]" => "001301"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002632
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<succeeded> for <fld1> user: <<<username>> account: <fld2> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <succeeded> for %{fld1} user: <%{username}> account: %{fld2} service: <%{service}> reason: <%{result}>" }
				id => "message-002632"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "authentication success"
					"[event][id]" => "002632"
					"[rsa][message][id1]" => "002632"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002633
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<failed> for <fld1> user: <<<username>> account: <fld2> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <failed> for %{fld1} user: <%{username}> account: %{fld2} service: <%{service}> reason: <%{result}>" }
				id => "message-002633"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "002633"
					"[rsa][message][id1]" => "002633"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "umount" {
		# MESSAGE 00509:01
		# line in RSA: <agent>: <fld1>:<device>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}:%{device}: %{event_description}" }
				id => "message-00509:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00509:01"
					"[rsa][message][id1]" => "00509:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00509
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00509"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00509"
					"[rsa][message][id1]" => "00509"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1742
	# line in RSA: <agent> v1.0. <event_description>
	else if [logstash][msgparser][id] == "msgParserId1742" {
		dissect {
			mapping => { "message" => "%{agent} v1.0. %{event_description}" }
			id => "msgParserId1742"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1743
	# line in RSA: <agent>: <filename>: <info>: <action>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1743" {
		dissect {
			mapping => { "message" => "%{agent}: %{filename}: %{info}: %{action}: %{event_description}" }
			id => "msgParserId1743"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1744
	# line in RSA: <agent>[<process_id>]: [<fld1>] Receive from client fd <fld2> failed: <result>
	else if [logstash][msgparser][id] == "msgParserId1744" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] Receive from client fd %{fld2} failed: %{result}" }
			id => "msgParserId1744"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Receive from client fd failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "useradd" {
		# MESSAGE 00046:12
		# line in RSA: <agent>[<process_id>]: <service>: failed to bind to LDAP server ldap://<dhost>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: failed to bind to LDAP server ldap://%{dhost}: %{result}" }
				id => "message-00046:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed to bind to LDAP server"
					"[event][id]" => "00046:12"
					"[rsa][message][id1]" => "00046:12"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:13
		# line in RSA: <agent>[<process_id>]: <service>: could not connect to any LDAP server as <shost> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: could not connect to any LDAP server as %{shost} - %{result}" }
				id => "message-00046:13"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not connect to any LDAP server as this hostname"
					"[event][id]" => "00046:13"
					"[rsa][message][id1]" => "00046:13"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:14
		# line in RSA: <agent>[<process_id>]: nss_ldap: could not { search LDAP server | get LDAP result } - <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+nss_ldap:[\s]+could[\s]+not[\s]+([\s]*search[\s]+LDAP[\s]+server[\s]+|[\s]*get[\s]+LDAP[\s]+result[\s]+)[\s]+\-[\s]+(?<result>.*)$" }
				id => "message-00046:14"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "could not search LDAP server or get LDAP result"
				"service" => "nss_ldap"
					"[event][id]" => "00046:14"
					"[rsa][message][id1]" => "00046:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:15
		# line in RSA: <agent>[<process_id>]: <service>: reconnecting to LDAP server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: reconnecting to LDAP server" }
				id => "message-00046:15"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "reconnecting to LDAP server"
					"[event][id]" => "00046:15"
					"[rsa][message][id1]" => "00046:15"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046
		# line in RSA: { <agent>[<process_id>]: | <agent>: } new <fld55>: name=<username>, { gid=<groupid> | <fld1> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+new[\s]+(?<fld55>[^:]*):[\s]+name=(?<username>[^,]*),[\s]+([\s]*gid=(?<groupid>[^\s]*)[\s]+|[\s]*(?<fld1>[^\s]*)[\s]+)$" }
				id => "message-00046"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "add new user or group"
					"[event][id]" => "00046"
					"[rsa][message][id1]" => "00046"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:01
		# line in RSA: <agent>[<process_id>]: new <fld55> { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+new[\s]+(?<fld55>[^\s]*)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00046:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "useradd"
					"[event][id]" => "00046:01"
					"[rsa][message][id1]" => "00046:01"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:02
		# line in RSA: <agent>[<process_id>]: add { ` | ' } <username>' to { shadow group | group } { ` | ' } <group>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+add[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+to[\s]+([\s]*shadow[\s]+group[\s]+|[\s]*group[\s]+)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)'$" }
				id => "message-00046:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "add user to group or shadow group"
					"[event][id]" => "00046:02"
					"[rsa][message][id1]" => "00046:02"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:03
		# line in RSA: <agent>[<process_id>]: failed adding user { ` | ' } <username>', data deleted
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+failed[\s]+adding[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)',[\s]+data[\s]+deleted$" }
				id => "message-00046:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Failure"
				"event_description" => "failed adding user, data deleted"
					"[event][id]" => "00046:03"
					"[rsa][message][id1]" => "00046:03"
					"[event][categoryid]" => "1402000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:04
		# line in RSA: <agent>[<process_id>]: new account added - account=<c_username>, uid=<uid>, gid=<groupid>, home=<directory>, shell=<terminal>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: new account added - account=%{c_username}, uid=%{uid}, gid=%{groupid}, home=%{directory}, shell=%{terminal}, by=%{username}" }
				id => "message-00046:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "new account added"
					"[event][id]" => "00046:04"
					"[rsa][message][id1]" => "00046:04"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:05
		# line in RSA: <agent>[<process_id>]: account added to group - account=<c_username>, group=<group>, gid=<groupid>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account added to group - account=%{c_username}, group=%{group}, gid=%{groupid}, by=%{username}" }
				id => "message-00046:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "account added to group"
					"[event][id]" => "00046:05"
					"[rsa][message][id1]" => "00046:05"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:06
		# line in RSA: <agent>[<process_id>]: running <action> command - script=<filename>, account=<info>, uid=<uid>, gid=<groupid>, home=<directory>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: running %{action} command - script=%{filename}, account=%{info}, uid=%{uid}, gid=%{groupid}, home=%{directory}, by=%{username}" }
				id => "message-00046:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "useradd process - running script"
					"[event][id]" => "00046:06"
					"[rsa][message][id1]" => "00046:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:07
		# line in RSA: <agent>[<process_id>]: home directory created - account=<info>, uid=<uid>, home=<directory>, by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: home directory created - account=%{info}, uid=%{uid}, home=%{directory}, by=%{username}" }
				id => "message-00046:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "useradd process"
				"ec_activity" => "Create"
					"[event][id]" => "00046:07"
					"[rsa][message][id1]" => "00046:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:08
		# line in RSA: <agent>[<process_id>]: account already exists - account=<username>, by=<uid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account already exists - account=%{username}, by=%{uid}" }
				id => "message-00046:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "account already exists"
					"[event][id]" => "00046:08"
					"[rsa][message][id1]" => "00046:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:11
		# line in RSA: <agent>[<process_id>]: unknown configuration item `<param>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: unknown configuration item `%{param}'" }
				id => "message-00046:11"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown configuration item"
					"[event][id]" => "00046:11"
					"[rsa][message][id1]" => "00046:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:09
		# line in RSA: <agent>[<process_id>]: UID <uid> is not unique - by=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: UID %{uid} is not unique - by=%{username}" }
				id => "message-00046:09"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "UID is not unique"
					"[event][id]" => "00046:09"
					"[rsa][message][id1]" => "00046:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:10
		# line in RSA: <agent>[<process_id>]: LAuS error - <application> - laus_log: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: LAuS error - %{application} - laus_log: %{info}" }
				id => "message-00046:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LAuS error"
					"[event][id]" => "00046:10"
					"[rsa][message][id1]" => "00046:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00046:16
		# line in RSA: <agent>[<process_id>]: failed adding user '<username>', exit code: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: failed adding user '%{username}', exit code: %{fld1}" }
				id => "message-00046:16"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed adding user"
					"[event][id]" => "00046:16"
					"[rsa][message][id1]" => "00046:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "userdel" {
		# MESSAGE 00028:01
		# line in RSA: <agent>[<process_id>]: delete { ` | ' } <username>' from { shadow group | group } { ` | ' } <group>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+delete[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+from[\s]+([\s]*shadow[\s]+group[\s]+|[\s]*group[\s]+)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)'$" }
				id => "message-00028:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "delete user from group"
					"[event][id]" => "00028:01"
					"[rsa][message][id1]" => "00028:01"
					"[event][categoryid]" => "1402010302"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:02
		# line in RSA: <agent>[<process_id>]: removed {shadow group | group } { ` | ' } <group>' owned by { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+removed[\s]+(shadow[\s]+group[\s]+|[\s]*group[\s]+)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)'[\s]+owned[\s]+by[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00028:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "remove owned group"
					"[event][id]" => "00028:02"
					"[rsa][message][id1]" => "00028:02"
					"[event][categoryid]" => "1402010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028
		# line in RSA: <agent>[<process_id>]: { delete | remove } <fld55> { ` | ' } <username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*delete[\s]+|[\s]*remove[\s]+)[\s]+(?<fld55>[^\s]*)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'$" }
				id => "message-00028"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "delete user from group"
					"[event][id]" => "00028"
					"[rsa][message][id1]" => "00028"
					"[event][categoryid]" => "1402010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:03
		# line in RSA: <agent>[<process_id>]: LAuS error - <application> - laus_log: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: LAuS error - %{application} - laus_log: %{info}" }
				id => "message-00028:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LAuS error"
					"[event][id]" => "00028:03"
					"[rsa][message][id1]" => "00028:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00028:04
		# line in RSA: <agent>[<process_id>]: <username> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} %{event_description}" }
				id => "message-00028:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_outcome" => "Failure"
					"[event][id]" => "00028:04"
					"[rsa][message][id1]" => "00028:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1761
	# line in RSA: <agent>: Permissions of <filename> changed to <privilege> by <username>
	else if [logstash][msgparser][id] == "msgParserId1761" {
		dissect {
			mapping => { "message" => "%{agent}: Permissions of %{filename} changed to %{privilege} by %{username}" }
			id => "msgParserId1761"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "file permissions change"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "userhelper" {
		# MESSAGE 00119:01
		# line in RSA: <agent>: <event_type>: updated timestamp file { ` | ' } <filename>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_type>[^:]*):[\s]+updated[\s]+timestamp[\s]+file[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<filename>[^']*)'$" }
				id => "message-00119:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00119:01"
					"[rsa][message][id1]" => "00119:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00119:02
		# line in RSA: <agent>[<process_id>]: <event_type>(<fld1>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_type}(%{fld1}): %{event_description}" }
				id => "message-00119:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00119:02"
					"[rsa][message][id1]" => "00119:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE userhelper:03
		# line in RSA: <agent>[<process_id>]: running '<fld1>' with root privileges on behalf of '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: running '%{fld1}' with root privileges on behalf of '%{username}'" }
				id => "message-userhelper:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "running with root privileges"
					"[event][id]" => "userhelper:03"
					"[rsa][message][id1]" => "userhelper:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "usermod" {
		# MESSAGE 000190
		# line in RSA: <agent>[<process_id>]: add { ` | ' } <username>' to { shadow group | group } { ` | ' } <group>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+add[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+to[\s]+([\s]*shadow[\s]+group[\s]+|[\s]*group[\s]+)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)'$" }
				id => "message-000190"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "usermod-add user to group"
					"[event][id]" => "000190"
					"[rsa][message][id1]" => "000190"
					"[event][categoryid]" => "1402010301"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000190:01
		# line in RSA: <agent>[<process_id>]: change user { ` | ' } <username>' <change_attribute> from { ` | ' } <change_old>' to { ` | ' } <change_new>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+change[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+(?<change_attribute>[^\s]*)[\s]+from[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_old>[^']*)'[\s]+to[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_new>[^']*)'$" }
				id => "message-000190:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "usermod-change user properties"
					"[event][id]" => "000190:01"
					"[rsa][message][id1]" => "000190:01"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000190:02
		# line in RSA: <agent>[<process_id>]: lock user { ` | ' } <username>' password
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+lock[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+password$" }
				id => "message-000190:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "usermod - lock user password"
					"[event][id]" => "000190:02"
					"[rsa][message][id1]" => "000190:02"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000190:07
		# line in RSA: <agent>[<process_id>]: unlock user { ` | ' } <username>' password
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+unlock[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+password$" }
				id => "message-000190:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "usermod - unlock user password"
					"[event][id]" => "000190:07"
					"[rsa][message][id1]" => "000190:07"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000190:03
		# line in RSA: <agent>[<process_id>]: change user name { ` | ' } <change_old>' to { ` | ' } <change_new>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+change[\s]+user[\s]+name[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_old>[^']*)'[\s]+to[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<change_new>[^']*)'$" }
				id => "message-000190:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "usermod-change user name"
					"[event][id]" => "000190:03"
					"[rsa][message][id1]" => "000190:03"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000190:04
		# line in RSA: <agent>[<process_id>]: delete { ` | ' } <username>' from { shadow group | group } { ` | ' } <group>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+delete[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+from[\s]+([\s]*shadow[\s]+group[\s]+|[\s]*group[\s]+)[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<group>[^']*)'$" }
				id => "message-000190:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "usermod-delete user from group"
					"[event][id]" => "000190:04"
					"[rsa][message][id1]" => "000190:04"
					"[event][categoryid]" => "1402010302"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00190:05
		# line in RSA: <agent>[<process_id>]: change user { ` | ' } <username>' password
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+change[\s]+user[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<username>[^']*)'[\s]+password$" }
				id => "message-00190:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "change user password"
					"[event][id]" => "00190:05"
					"[rsa][message][id1]" => "00190:05"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00190:06
		# line in RSA: <agent>[<process_id>]: LAuS error - <application> - laus_log: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: LAuS error - %{application} - laus_log: %{info}" }
				id => "message-00190:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LAuS error"
					"[event][id]" => "00190:06"
					"[rsa][message][id1]" => "00190:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE usermod:07
		# line in RSA: <agent>[<process_id>]: change '<change_old>' to '<change_new>' in {group|shadow group} '<group>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+change[\s]+'(?<change_old>[^']*)'[\s]+to[\s]+'(?<change_new>[^']*)'[\s]+in[\s]+(group|shadow[\s]+group)[\s]+'(?<group>[^']*)'$" }
				id => "message-usermod:07"
				add_field => {
				"hostname" => "%{hhost}"
				"change_attribute" => "Username"
					"[event][id]" => "usermod:07"
					"[rsa][message][id1]" => "usermod:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "uvservd" {
		# MESSAGE 03503
		# line in RSA: <agent>[<process_id>]: Received connection from <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received connection from %{saddr}:%{sport}" }
				id => "message-03503"
				add_field => {
				"hostname" => "%{hhost}"
				"info" => "Received connection"
					"[event][id]" => "03503"
					"[rsa][message][id1]" => "03503"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03503:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03503:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03503:01"
					"[rsa][message][id1]" => "03503:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vascd" {
		# MESSAGE 00410
		# line in RSA: <agent>[<process_id>]: The license limit of <dclass_counter1> <dclass_counter1_string> has been reached -- <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: The license limit of %{dclass_counter1} %{dclass_counter1_string} has been reached -- %{info}" }
				id => "message-00410"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "license limit reached"
					"[event][id]" => "00410"
					"[rsa][message][id1]" => "00410"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00410:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00410:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00410:01"
					"[rsa][message][id1]" => "00410:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vasproxyd" {
		# MESSAGE 001620
		# line in RSA: <agent>[<process_id>]: Proxy "<policyname>" LDAP error. <result>. <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Proxy \"%{policyname}\" LDAP error. %{result}. %{info}." }
				id => "message-001620"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Proxy LDAP error"
					"[event][id]" => "001620"
					"[rsa][message][id1]" => "001620"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001621
		# line in RSA: <agent>[<process_id>]: ERROR: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ERROR: %{info}" }
				id => "message-001621"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "vasproxyd ERROR"
					"[event][id]" => "001621"
					"[rsa][message][id1]" => "001621"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001728
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-001728"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "vasproxyd start/restart"
					"[event][id]" => "001728"
					"[rsa][message][id1]" => "001728"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1778
	# line in RSA: <agent>[<process_id>]: VCS ERROR <version> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1778" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: VCS ERROR %{version} %{event_description}" }
			id => "msgParserId1778"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1779
	# line in RSA: <agent>: <info>
	else if [logstash][msgparser][id] == "msgParserId1779" {
		dissect {
			mapping => { "message" => "%{agent}: %{info}" }
			id => "msgParserId1779"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "vi notification"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1780
	# line in RSA: <agent>: *** glibc detected *** double free or corruption (<result>): <fld1> ***
	else if [logstash][msgparser][id] == "msgParserId1780" {
		dissect {
			mapping => { "message" => "%{agent}: *** glibc detected *** double free or corruption (%{result}): %{fld1} ***" }
			id => "msgParserId1780"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "glibc detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1781
	# line in RSA: <agent>: *** glibc detected *** double free or corruption (!prev): <fld1> ***
	else if [logstash][msgparser][id] == "msgParserId1781" {
		dissect {
			mapping => { "message" => "%{agent}: *** glibc detected *** double free or corruption (!prev): %{fld1} ***" }
			id => "msgParserId1781"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "glibc detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1782
	# line in RSA: <agent>: Device IP <daddr> Port <interface>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1782" {
		dissect {
			mapping => { "message" => "%{agent}: Device IP %{daddr} Port %{interface}: %{event_description}" }
			id => "msgParserId1782"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vmkernel" {
		# MESSAGE 00390:01
		# line in RSA: <agent>: <fld3>:<fld4><<<severity>><fld5>[<interface>]: <event_description>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld3}:%{fld4}<%{severity}>%{fld5}[%{interface}]: %{event_description}. %{info}" }
				id => "message-00390:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00390:01"
					"[rsa][message][id1]" => "00390:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00390
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00390"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00390"
					"[rsa][message][id1]" => "00390"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1784
	# line in RSA: <agent>(<fld1>)[<process_id>]:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1784" {
		dissect {
			mapping => { "message" => "%{agent}(%{fld1})[%{process_id}]:  %{event_description}" }
			id => "msgParserId1784"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vmum-ga" {
		# MESSAGE 001154
		# line in RSA: { <agent>[<process_id>]: | <agent>: } [<fld1> <fld2> <fld3> <fld4> <severity>] <space> [<action>, <fld5>] Product = <product>, Version = <version>, Build = <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<action>[^,]*),[\s]+(?<fld5>[^\]]*)\][\s]+Product[\s]+=[\s]+(?<product>[^,]*),[\s]+Version[\s]+=[\s]+(?<version>[^,]*),[\s]+Build[\s]+=[\s]+(?<info>.*)$" }
				id => "message-001154"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001154"
					"[rsa][message][id1]" => "001154"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001155
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001155"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001155"
					"[rsa][message][id1]" => "001155"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1786
	# line in RSA: <agent>:  <filename> not found. <result>
	else if [logstash][msgparser][id] == "msgParserId1786" {
		dissect {
			mapping => { "message" => "%{agent}:  %{filename} not found. %{result}" }
			id => "msgParserId1786"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "File not found"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vmware-authd" {
		# MESSAGE 00391
		# line in RSA: <agent>[<process_id>]: login from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: login from %{saddr} as %{username}" }
				id => "message-00391"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
					"[event][id]" => "00391"
					"[rsa][message][id1]" => "00391"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:01
		# line in RSA: <agent>[<process_id>]: <space> authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00391:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00391:01"
					"[rsa][message][id1]" => "00391:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:02
		# line in RSA: <agent>[<process_id>]: <space> authentication failure; logname=<username> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00391:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00391:02"
					"[rsa][message][id1]" => "00391:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:03
		# line in RSA: <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-00391:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "check password"
					"[event][id]" => "00391:03"
					"[rsa][message][id1]" => "00391:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:04
		# line in RSA: <agent>[<process_id>]: Unable to acquire lock for <process>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to acquire lock for %{process}: %{result}" }
				id => "message-00391:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to acquire lock for device"
					"[event][id]" => "00391:04"
					"[rsa][message][id1]" => "00391:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:05
		# line in RSA: <agent>[<process_id>]: Found vmkauthd: <process>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Found vmkauthd: %{process}" }
				id => "message-00391:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "found daemon"
					"[event][id]" => "00391:05"
					"[rsa][message][id1]" => "00391:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:06
		# line in RSA: <agent>[<process_id>]: Redirected <interface> to <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Redirected %{interface} to %{daddr}:%{dport}" }
				id => "message-00391:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "redirection"
					"[event][id]" => "00391:06"
					"[rsa][message][id1]" => "00391:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:07
		# line in RSA: <agent>[<process_id>]: pam_smb: Incorrect NT password for username : <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_smb: Incorrect NT password for username : %{username}" }
				id => "message-00391:07"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "incorrect password"
					"[event][id]" => "00391:07"
					"[rsa][message][id1]" => "00391:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00391:08
		# line in RSA: <agent>[<process_id>]: PAM-listfile: getpwnam(<username>) failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM-listfile: getpwnam(%{username}) failed" }
				id => "message-00391:08"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "getpwname failure"
					"[event][id]" => "00391:08"
					"[rsa][message][id1]" => "00391:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:09
		# line in RSA: <agent>[<process_id>]: could not identify user (from getpwnam(<username>))
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: could not identify user (from getpwnam(%{username}))" }
				id => "message-00391:09"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "could not identify user"
					"[event][id]" => "00391:09"
					"[rsa][message][id1]" => "00391:09"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:10
		# line in RSA: <agent>[<process_id>]: The "<process>" process did not start properly.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: The \"%{process}\" process did not start properly." }
				id => "message-00391:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "process did not start properly"
					"[event][id]" => "00391:10"
					"[rsa][message][id1]" => "00391:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:11
		# line in RSA: <agent>[<process_id>]: <event_source>: Refused user <username> for service <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}: Refused user %{username} for service %{service}" }
				id => "message-00391:11"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user refused service"
					"[event][id]" => "00391:11"
					"[rsa][message][id1]" => "00391:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:12
		# line in RSA: <agent>[<process_id>]: PANIC: getpeername failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PANIC: getpeername failed: %{result}" }
				id => "message-00391:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "getpeername failed"
					"[event][id]" => "00391:12"
					"[rsa][message][id1]" => "00391:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00391:13
		# line in RSA: <agent>[<process_id>]: pam_unix2: <event_description>: { ` | ' } <param>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_unix2:[\s]+(?<event_description>[^:]*):[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<param>[^']*)'$" }
				id => "message-00391:13"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00391:13"
					"[rsa][message][id1]" => "00391:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00883
		# line in RSA: <agent>[<process_id>]: serverd connection to <dhost>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: serverd connection to %{dhost}." }
				id => "message-00883"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "conection succes"
					"[event][id]" => "00883"
					"[rsa][message][id1]" => "00883"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00884
		# line in RSA: <agent>[<process_id>]: Local connection for <shost> established.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Local connection for %{shost} established." }
				id => "message-00884"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Local connection established"
					"[event][id]" => "00884"
					"[rsa][message][id1]" => "00884"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002052
		# line in RSA: <agent>[<process_id>]: Could not execute <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not execute %{action}" }
				id => "message-002052"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not execute command"
					"[event][id]" => "002052"
					"[rsa][message][id1]" => "002052"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002036
		# line in RSA: <agent>[<process_id>]:  { <service>: <application>: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<service>[^:]*):[\s]+(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002036"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002036"
					"[rsa][message][id1]" => "002036"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vmware-hostd" {
		# MESSAGE 00740
		# line in RSA: <agent>[<process_id>]: Accepted password for <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted password for %{username} from %{saddr}" }
				id => "message-00740"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted password"
					"[event][id]" => "00740"
					"[rsa][message][id1]" => "00740"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00740:01
		# line in RSA: <agent>[<process_id>]: Rejected password for user <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Rejected password for user %{username} from %{saddr}" }
				id => "message-00740:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Rejected password"
					"[event][id]" => "00740:01"
					"[rsa][message][id1]" => "00740:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02322:01
		# line in RSA: <agent>: <event_source>: authentication succeeds for { ` | ' } <event_description>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_source>[^:]*):[\s]+authentication[\s]+succeeds[\s]+for[\s]+([\s]*`[\s]+|[\s]*'[\s]+)[\s]+(?<event_description>[^']*)'$" }
				id => "message-02322:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "02322:01"
					"[rsa][message][id1]" => "02322:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02322
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02322"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02322"
					"[rsa][message][id1]" => "02322"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1806
	# line in RSA: <agent>: <event_time_string>: <sessionid>: [<event_description>] <info>
	else if [logstash][msgparser][id] == "msgParserId1806" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_time_string}: %{sessionid}: [%{event_description}] %{info}" }
			id => "msgParserId1806"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1807
	# line in RSA: { <agent>[<process_id>]: | <agent>: } { [<event_time_string>] <event_description> |  <event_description>: [<application>] | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1807" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*\[(?<event_time_string>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+\[(?<application>[^\]]*)\][\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1807"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vormetric" {
		# MESSAGE 00933
		# line in RSA: <agent>: <event_type>: HOST[<hostname>]:AUDIT:<policyname>: User[<username>] Process[<process>] Access <privilege>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: HOST[%{hostname}]:AUDIT:%{policyname}: User[%{username}] Process[%{process}] Access %{privilege}" }
				id => "message-00933"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00933"
					"[rsa][message][id1]" => "00933"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00933:01
		# line in RSA: <agent>: <event_type>: Host (<hostname>) link is up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: Host (%{hostname}) link is up" }
				id => "message-00933:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00933:01"
					"[rsa][message][id1]" => "00933:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00933:02
		# line in RSA: <agent>: <event_type>: User "<username>" fails to verify password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: User \"%{username}\" fails to verify password" }
				id => "message-00933:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"result" => "user failed to verify password"
					"[event][id]" => "00933:02"
					"[rsa][message][id1]" => "00933:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00933:03
		# line in RSA: <agent>: <event_type>: [<username>] <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: [%{username}] %{action}" }
				id => "message-00933:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Policy"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "00933:03"
					"[rsa][message][id1]" => "00933:03"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00933:05
		# line in RSA: <agent>: <event_type>: User <username> had been added.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_type}: User %{username} had been added." }
				id => "message-00933:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Policy"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "00933:05"
					"[rsa][message][id1]" => "00933:05"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vsftpd" {
		# MESSAGE 00024
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty= <terminal> ruser=<c_username> rhost=<shost>  user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty= %{terminal} ruser=%{c_username} rhost=%{shost}  user=%{username}" }
				id => "message-00024"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00024"
					"[rsa][message][id1]" => "00024"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:01
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<username> uid=<uid> euid=<fld3> tty= <terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{username} uid=%{uid} euid=%{fld3} tty= %{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00024:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "00024:01"
					"[rsa][message][id1]" => "00024:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:02
		# line in RSA: <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-00024:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "check password"
					"[event][id]" => "00024:02"
					"[rsa][message][id1]" => "00024:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:05
		# line in RSA: <agent>[<process_id>]: PAM-listfile: Refused user <username> for service <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: PAM-listfile: Refused user %{username} for service %{service}" }
				id => "message-00024:05"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "user denied"
					"[event][id]" => "00024:05"
					"[rsa][message][id1]" => "00024:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:04
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00024:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00024:04"
					"[rsa][message][id1]" => "00024:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vshelld" {
		# MESSAGE 03656
		# line in RSA: <agent>[<process_id>]: <fld1>: Connection accepted from <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: Connection accepted from %{saddr}:%{sport}" }
				id => "message-03656"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03656"
					"[rsa][message][id1]" => "03656"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE vshelld
		# line in RSA: <agent>[<fld21>]:<severity>:<info>|<product>|<application>|<version>|<fld1>|<result>|5|user=<username>pid=<fld2>utc=<fld3>status=<disposition>service=<service>tty=(<terminal>) client=<fld4>reason=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld21}]:%{severity}:%{info}|%{product}|%{application}|%{version}|%{fld1}|%{result}|5|user=%{username}pid=%{fld2}utc=%{fld3}status=%{disposition}service=%{service}tty=(%{terminal}) client=%{fld4}reason=%{event_description}" }
				id => "message-vshelld"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "vshelld"
					"[rsa][message][id1]" => "vshelld"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1817
	# line in RSA: <agent>: <process>(<application>): authentication failure; logname=<fld1> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
	else if [logstash][msgparser][id] == "msgParserId1817" {
		dissect {
			mapping => { "message" => "%{agent}: %{process}(%{application}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
			id => "msgParserId1817"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vxvm-udev" {
		# MESSAGE 002397
		# line in RSA: <agent>: device <device> with devno <id> has been added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: device %{device} with devno %{id} has been added" }
				id => "message-002397"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "device added"
					"[event][id]" => "002397"
					"[rsa][message][id1]" => "002397"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002397:01
		# line in RSA: <agent>{::|:} device <device> with devno <id> has been removed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^::]*)(::|:)[\s]+device[\s]+(?<device>[^\s]*)[\s]+with[\s]+devno[\s]+(?<id>[^\s]*)[\s]+has[\s]+been[\s]+removed$" }
				id => "message-002397:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "device removed"
					"[event][id]" => "002397:01"
					"[rsa][message][id1]" => "002397:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1820
	# line in RSA: <agent>: NOTE:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1820" {
		dissect {
			mapping => { "message" => "%{agent}: NOTE:%{event_description}" }
			id => "msgParserId1820"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vxvm" {
		# MESSAGE 001854
		# line in RSA: <agent>:<process>:  Volume <device> remapped from <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}:  Volume %{device} remapped from %{result}" }
				id => "message-001854"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "volume remapped"
					"[event][id]" => "001854"
					"[rsa][message][id1]" => "001854"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001640
		# line in RSA: <agent>:<process>: WARNING <version> <event_description>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}: WARNING %{version} %{event_description}. %{info}" }
				id => "message-001640"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "WARNING"
					"[event][id]" => "001640"
					"[rsa][message][id1]" => "001640"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001637
		# line in RSA: <agent>:<process>: <version> join completed for node <node> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}: %{version} join completed for node %{node} %{info}" }
				id => "message-001637"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "join completed for node"
					"[event][id]" => "001637"
					"[rsa][message][id1]" => "001637"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001638
		# line in RSA: <agent>:<process>: <version> cluster established successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}: %{version} cluster established successfully" }
				id => "message-001638"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cluster established successfully"
					"[event][id]" => "001638"
					"[rsa][message][id1]" => "001638"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001639
		# line in RSA: <agent>:<process>: <version> node <node>: vxconfigd not ready
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}: %{version} node %{node}: vxconfigd not ready" }
				id => "message-001639"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "vxconfigd not ready on node"
					"[event][id]" => "001639"
					"[rsa][message][id1]" => "001639"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001472
		# line in RSA: <agent>:<process>: <version> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}: %{version} %{event_description}" }
				id => "message-001472"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001472"
					"[rsa][message][id1]" => "001472"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 009175
		# line in RSA: <agent>:<process>:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{process}:%{event_description}" }
				id => "message-009175"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "009175"
					"[rsa][message][id1]" => "009175"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1828
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1828" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId1828"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1829
	# line in RSA: <agent>[<process_id>]: <fld1>: user <username> broadcasted <info>
	else if [logstash][msgparser][id] == "msgParserId1829" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: user %{username} broadcasted %{info}" }
			id => "msgParserId1829"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1830
	# line in RSA: <severity> eid=<application> { status= | Module= } "<event_description>"
	else if [logstash][msgparser][id] == "msgParserId1830" {
		grok {
			match => { "message" => "^(?<severity>[^\s]*)[\s]+eid=(?<application>[^\s]*)[\s]+([\s]*status=[\s]+|[\s]*Module=[\s]+)[\s]+\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId1830"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1831
	# line in RSA: <agent>: <application>: service <service> is { <result>, <action> | <result> }
	else if [logstash][msgparser][id] == "msgParserId1831" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<application>[^:]*):[\s]+service[\s]+(?<service>[^\s]*)[\s]+is[\s]+([\s]*(?<result>[^,]*),[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId1831"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "service status"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "wbem" {
		# MESSAGE 01105:02
		# line in RSA: <agent>[<process_id>]: <space> authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-01105:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01105:02"
					"[rsa][message][id1]" => "01105:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01105
		# line in RSA: <agent>[<process_id>]: <space> authentication failure; logname=<username> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} authentication failure; logname=%{username} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-01105"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "01105"
					"[rsa][message][id1]" => "01105"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01105:01
		# line in RSA: <agent>[<process_id>]: check pass; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; user unknown" }
				id => "message-01105:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"result" => "user unknown"
				"event_description" => "check password, user unknown"
					"[event][id]" => "01105:01"
					"[rsa][message][id1]" => "01105:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1835
	# line in RSA: <agent>: { <event_description>', <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1835" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<event_description>[^']*)',[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1835"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1836
	# line in RSA: <agent>[<process_id>]: [<severity>]: [<device>] <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId1836" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]: [%{device}] %{event_description}: %{info}" }
			id => "msgParserId1836"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1837
	# line in RSA: <agent>: USER: <username>, COMMAND: <action>
	else if [logstash][msgparser][id] == "msgParserId1837" {
		dissect {
			mapping => { "message" => "%{agent}: USER: %{username}, COMMAND: %{action}" }
			id => "msgParserId1837"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "WEB command"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "web" {
		# MESSAGE 00430
		# line in RSA: <agent>: [<daddr>] FAILED_LOGIN (<username>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{daddr}] FAILED_LOGIN (%{username})" }
				id => "message-00430"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "00430"
					"[rsa][message][id1]" => "00430"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00430:01
		# line in RSA: <agent>: [<daddr>] LOGIN (<username>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{daddr}] LOGIN (%{username})" }
				id => "message-00430:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "user login"
					"[event][id]" => "00430:01"
					"[rsa][message][id1]" => "00430:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00430:02
		# line in RSA: <agent>: [<daddr>] global CHANGE <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{daddr}] global CHANGE %{info}" }
				id => "message-00430:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "global change"
					"[event][id]" => "00430:02"
					"[rsa][message][id1]" => "00430:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00430:03
		# line in RSA: <agent>: [<daddr>] <action> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{daddr}] %{action} %{info}" }
				id => "message-00430:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00430:03"
					"[rsa][message][id1]" => "00430:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "webmin" {
		# MESSAGE 00082:01
		# line in RSA: <agent>[<process_id>]: Successful login as <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Successful login as %{username} from %{saddr}" }
				id => "message-00082:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "00082:01"
					"[rsa][message][id1]" => "00082:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:02
		# line in RSA: <agent>[<process_id>]: Logout by <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Logout by %{username} from %{saddr}" }
				id => "message-00082:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "user logout"
					"[event][id]" => "00082:02"
					"[rsa][message][id1]" => "00082:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00082"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00082"
					"[rsa][message][id1]" => "00082"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1844
	# line in RSA: <agent>[<process_id>]: (<application>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1844" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{application}) %{event_description}" }
			id => "msgParserId1844"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1845
	# line in RSA: <agent>: <username>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1845" {
		dissect {
			mapping => { "message" => "%{agent}: %{username}: %{event_description}" }
			id => "msgParserId1845"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "WebUI activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1846
	# line in RSA: <agent> event=<event_type>&loglevel=<severity>&obj=<obj_type>&ipaddr=<saddr>&msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId1846" {
		dissect {
			mapping => { "message" => "%{agent} event=%{event_type}&loglevel=%{severity}&obj=%{obj_type}&ipaddr=%{saddr}&msg=%{event_description}" }
			id => "msgParserId1846"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1847
	# line in RSA: <agent>: event=<action>&loglevel=<severity>warning&ipaddr=<hostip>&msg=<event_description>
	else if [logstash][msgparser][id] == "msgParserId1847" {
		dissect {
			mapping => { "message" => "%{agent}: event=%{action}&loglevel=%{severity}warning&ipaddr=%{hostip}&msg=%{event_description}" }
			id => "msgParserId1847"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "WTMP" {
		# MESSAGE 001263
		# line in RSA: WTMP: <username> <terminal> <saddr> <fld2> <fld3> <fld4> <fld5> still logged in
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WTMP: %{username} %{terminal} %{saddr} %{fld2} %{fld3} %{fld4} %{fld5} still logged in" }
				id => "message-001263"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "still logged in"
					"[event][id]" => "001263"
					"[rsa][message][id1]" => "001263"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001264
		# line in RSA: WTMP: <username> system boot <saddr> <event_time_string> (<duration_string>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WTMP: %{username} system boot %{saddr} %{event_time_string} (%{duration_string})" }
				id => "message-001264"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001264"
					"[rsa][message][id1]" => "001264"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001265
		# line in RSA: <agent>: <username> <terminal> <saddr> <event_time_string> (<duration_string>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} %{terminal} %{saddr} %{event_time_string} (%{duration_string})" }
				id => "message-001265"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "successful user login"
					"[event][id]" => "001265"
					"[rsa][message][id1]" => "001265"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001266
		# line in RSA: WTMP: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WTMP: %{event_description}" }
				id => "message-001266"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001266"
					"[rsa][message][id1]" => "001266"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1852
	# line in RSA: { WTMP | wtmp }: <username> <terminal> <saddr> <fld2> <fld3> <fld4> <fld5> still logged in
	else if [logstash][msgparser][id] == "msgParserId1852" {
		grok {
			match => { "message" => "^([\s]*WTMP[\s]+|[\s]*wtmp[\s]+):[\s]+(?<username>[^\s]*)[\s]+(?<terminal>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\s]*)[\s]+still[\s]+logged[\s]+in$" }
			id => "msgParserId1852"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "still logged in"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1853
	# line in RSA: <agent>[<process_id>]: [robot <dhost>] [client <saddr>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1853" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [robot %{dhost}] [client %{saddr}] %{event_description}" }
			id => "msgParserId1853"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1854
	# line in RSA: { <agent>[<process_id>]: | <agent>: } WARNING: <application>: <result>
	else if [logstash][msgparser][id] == "msgParserId1854" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+WARNING:[\s]+(?<application>[^:]*):[\s]+(?<result>.*)$" }
			id => "msgParserId1854"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "x-session-manager WARNING"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1855
	# line in RSA: <agent>[<process_id>]:  <event_time_string> [<severity>] <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1855" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:  %{event_time_string} [%{severity}] %{process}: %{event_description}" }
			id => "msgParserId1855"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1856
	# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_time_string> [<severity>] <application>:<fld1>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1856" {
		grok {
			match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_time_string>[^\s]*)[\s]+\[(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):(?<fld1>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId1856"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "xinetd" {
		# MESSAGE 00026
		# line in RSA: <agent>[<process_id>]: START: <protocol> pid=<child_pid> { from=::ffff: | from=}<saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+START:[\s]+(?<protocol>[^\s]*)[\s]+pid=(?<child_pid>[^\s]*)[\s]+([\s]*from=::ffff:[\s]+|[\s]*from=)(?<saddr>.*)$" }
				id => "message-00026"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00026"
					"[rsa][message][id1]" => "00026"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00026:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00026:01"
					"[rsa][message][id1]" => "00026:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1857
	# line in RSA: <agent>[<process_id>]: START: <protocol> pid=<child_pid> { from=::ffff: | from=}<saddr>
	else if [logstash][msgparser][id] == "msgParserId1857" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+START:[\s]+(?<protocol>[^\s]*)[\s]+pid=(?<child_pid>[^\s]*)[\s]+([\s]*from=::ffff:[\s]+|[\s]*from=)(?<saddr>.*)$" }
			id => "msgParserId1857"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1858
	# line in RSA: <agent>[<process_id>]: <action> failed for <filename> with errno of <resultcode>
	else if [logstash][msgparser][id] == "msgParserId1858" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{action} failed for %{filename} with errno of %{resultcode}" }
			id => "msgParserId1858"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1859
	# line in RSA: <agent>[<process_id>]: { <service>: <event_description> | <event_description>, <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1859" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<service>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^,]*),[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1859"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1860
	# line in RSA: <agent>: <event_source> <fld1>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1860" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_source} %{fld1}: %{event_description}" }
			id => "msgParserId1860"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to read"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "xscreensaver" {
		# MESSAGE 000261
		# line in RSA: <agent>[<process_id>]: authentication failure; logname=<fld1> uid=<uid> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication failure; logname=%{fld1} uid=%{uid} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-000261"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
					"[event][id]" => "000261"
					"[rsa][message][id1]" => "000261"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000261:01
		# line in RSA: <agent>[<process_id>]: FAILED LOGIN <fld1> ON DISPLAY <terminal>, FOR "<username>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FAILED LOGIN %{fld1} ON DISPLAY %{terminal}, FOR \"%{username}\"" }
				id => "message-000261:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
					"[event][id]" => "000261:01"
					"[rsa][message][id1]" => "000261:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000261:02
		# line in RSA: <agent>[<process_id>]: <event_source>[<fld1>]: authentication succeeds for '<username>' (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_source}[%{fld1}]: authentication succeeds for '%{username}' (%{info})" }
				id => "message-000261:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "authentication successful"
					"[event][id]" => "000261:02"
					"[rsa][message][id1]" => "000261:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1864
	# line in RSA: <agent>: Unable to Initialize trace log: <filename>. <info>
	else if [logstash][msgparser][id] == "msgParserId1864" {
		dissect {
			mapping => { "message" => "%{agent}: Unable to Initialize trace log: %{filename}. %{info}" }
			id => "msgParserId1864"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to Initialize trace log"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ypserv" {
		# MESSAGE 01019
		# line in RSA: <agent>[<process_id>]: refused connect from <saddr>:<sport> to procedure <application> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: refused connect from %{saddr}:%{sport} to procedure %{application} (%{info})" }
				id => "message-01019"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection refused"
					"[event][id]" => "01019"
					"[rsa][message][id1]" => "01019"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01019:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-01019:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01019:01"
					"[rsa][message][id1]" => "01019:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "yum" {
		# MESSAGE yum
		# line in RSA: <agent>[<process_id>]: <action>:<obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}:%{obj_name}" }
				id => "message-yum"
				add_field => {
				"hostname" => "%{hhost}"
				"obj_type" => "Package"
					"[event][id]" => "yum"
					"[rsa][message][id1]" => "yum"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00191
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00191"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00191"
					"[rsa][message][id1]" => "00191"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "server" {
		# MESSAGE server:01
		# line in RSA: server: <fld1> <fld2>, <fld3> <fld4> { AM | PM} <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^server:[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^,]*),[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+([\s]*AM[\s]+|[\s]*PM)[\s]+(?<event_description>.*)$" }
				id => "message-server:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "server:01"
					"[rsa][message][id1]" => "server:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE server
		# line in RSA: server: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "server: %{severity}: %{event_description}" }
				id => "message-server"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "server"
					"[rsa][message][id1]" => "server"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rtvscand" {
		# MESSAGE 02319
		# line in RSA: <event_description>: New virus definition file loaded. <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}: New virus definition file loaded. %{fld1}" }
				id => "message-02319"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "New virus definition file loaded."
					"[event][id]" => "02319"
					"[rsa][message][id1]" => "02319"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 02320
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-02320"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "02320"
					"[rsa][message][id1]" => "02320"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1872
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1872" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId1872"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1873
	# line in RSA: <agent>: Starting ciscosec: <disposition>
	else if [logstash][msgparser][id] == "msgParserId1873" {
		dissect {
			mapping => { "message" => "%{agent}: Starting ciscosec: %{disposition}" }
			id => "msgParserId1873"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting ciscosec"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "csaadapt" {
		# MESSAGE 03443
		# line in RSA: <agent>: <filename> was compiled for kernel version <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{filename} was compiled for kernel version %{version}" }
				id => "message-03443"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03443"
					"[rsa][message][id1]" => "03443"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03444
		# line in RSA: <agent>: Module <obj_name> loaded, with warnings
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Module %{obj_name} loaded, with warnings" }
				id => "message-03444"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "module loaded"
					"[event][id]" => "03444"
					"[rsa][message][id1]" => "03444"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03445
		# line in RSA: <agent>: <severity>: kernel-module version mismatch
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: kernel-module version mismatch" }
				id => "message-03445"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "module version mismatch"
					"[event][id]" => "03445"
					"[rsa][message][id1]" => "03445"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03446
		# line in RSA: <agent>: <severity> loading <filename> will taint the kernel: <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity} loading %{filename} will taint the kernel: %{disposition}" }
				id => "message-03446"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03446"
					"[rsa][message][id1]" => "03446"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03447
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03447"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03447"
					"[rsa][message][id1]" => "03447"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1878
	# line in RSA: <agent>: <service> { startup | shutdown } { succeeded | failed }
	else if [logstash][msgparser][id] == "msgParserId1878" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<service>[^\s]*)[\s]+([\s]*startup[\s]+|[\s]*shutdown[\s]+)[\s]+([\s]*succeeded[\s]+|[\s]*failed[\s]+)$" }
			id => "msgParserId1878"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cyrus-imapd startup/shutdown"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ldirectord" {
		# MESSAGE 03609:01
		# line in RSA: <agent>[<process_id>]: <event_description>: <daddr>:<dport> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{daddr}:%{dport} (%{info})" }
				id => "message-03609:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03609:01"
					"[rsa][message][id1]" => "03609:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 03609
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03609"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03609"
					"[rsa][message][id1]" => "03609"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ATC_ASD_Query_Manager.exe" {
		# MESSAGE 03703:01
		# line in RSA: <agent>: (Oracle Errno:-<resultcode>) <fld1> Failures to connect as <username> to db,will retry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (Oracle Errno:-%{resultcode}) %{fld1} Failures to connect as %{username} to db,will retry" }
				id => "message-03703:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03703:01"
					"[rsa][message][id1]" => "03703:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 03703
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-03703"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "03703"
					"[rsa][message][id1]" => "03703"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1881
	# line in RSA: <agent>[<process_id>]: client <saddr>#<sport>: query: <domain> {IN <fld3> (<hostip>) | IN <fld1>}
	else if [logstash][msgparser][id] == "msgParserId1881" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+client[\s]+(?<saddr>[^#]*)#(?<sport>[^:]*):[\s]+query:[\s]+(?<domain>[^\s]*)[\s]+(IN[\s]+(?<fld3>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)[\s]+|[\s]*IN[\s]+(?<fld1>.*))$" }
			id => "msgParserId1881"
			add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1883
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1883" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId1883"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-logind" {
		# MESSAGE 002424
		# line in RSA: <agent>: New session <sessionid> of user {<username>.|<username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+New[\s]+session[\s]+(?<sessionid>[^\s]*)[\s]+of[\s]+user[\s]+((?<username>[^\.]*)\.|(?<username>.*))$" }
				id => "message-002424"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "002424"
					"[rsa][message][id1]" => "002424"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002425
		# line in RSA: <agent>: <action> session <sessionid>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action} session %{sessionid}." }
				id => "message-002425"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "002425"
					"[rsa][message][id1]" => "002425"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002467
		# line in RSA: <agent>[<process_id>]: <event_description> type=<event_type> sender=<fld1> destination=<fld2> object=<directory> interface=<interface> member=<fld3> cookie=<fld4> reply_cookie=<fld5> error=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} type=%{event_type} sender=%{fld1} destination=%{fld2} object=%{directory} interface=%{interface} member=%{fld3} cookie=%{fld4} reply_cookie=%{fld5} error=%{result}" }
				id => "message-002467"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "002467"
					"[rsa][message][id1]" => "002467"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002468
		# line in RSA: <agent>[<process_id>]: User <username> logged out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} logged out." }
				id => "message-002468"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "User logged out"
					"[event][id]" => "002468"
					"[rsa][message][id1]" => "002468"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002469
		# line in RSA: <agent>[<process_id>]: New user <username> logged in.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: New user %{username} logged in." }
				id => "message-002469"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"event_description" => "New user logged in"
					"[event][id]" => "002469"
					"[rsa][message][id1]" => "002469"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002573
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-002573"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002573"
					"[rsa][message][id1]" => "002573"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002584
		# line in RSA: <agent>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-002584"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002584"
					"[rsa][message][id1]" => "002584"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId682
	# line in RSA: <agent>: <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId682" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} %{event_description}" }
			id => "msgParserId682"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SEARCH" {
		# MESSAGE SEARCH
		# line in RSA: <id> RESULT conn=<fld1> op=<fld2> msgID=<fld3> requesterIP="<saddr>" base="ou=<fld4>,o=<fld5>" scope=<fld6> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id} RESULT conn=%{fld1} op=%{fld2} msgID=%{fld3} requesterIP=\"%{saddr}\" base=\"ou=%{fld4},o=%{fld5}\" scope=%{fld6} %{event_description}" }
				id => "message-SEARCH"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "SEARCH"
					"[rsa][message][id1]" => "SEARCH"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE SEARCH:01
		# line in RSA: <id> RESULT conn=<fld1> op=<fld2> msgID=<fld3> requesterIP="<saddr>" base="cn=<fld7>,ou=<fld4>,ou=<fld8>,o=<fld5>" scope=<fld6> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id} RESULT conn=%{fld1} op=%{fld2} msgID=%{fld3} requesterIP=\"%{saddr}\" base=\"cn=%{fld7},ou=%{fld4},ou=%{fld8},o=%{fld5}\" scope=%{fld6} %{event_description}" }
				id => "message-SEARCH:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "SEARCH:01"
					"[rsa][message][id1]" => "SEARCH:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE SEARCH:02
		# line in RSA: <id> RESULT conn=<fld1> op=<fld2> msgID=<fld3> requesterIP="<saddr>" base="cn=<fld7>,ou=<fld4>,o=<fld8>" scope=<fld6> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id} RESULT conn=%{fld1} op=%{fld2} msgID=%{fld3} requesterIP=\"%{saddr}\" base=\"cn=%{fld7},ou=%{fld4},o=%{fld8}\" scope=%{fld6} %{event_description}" }
				id => "message-SEARCH:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "SEARCH:02"
					"[rsa][message][id1]" => "SEARCH:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1908
	# line in RSA: <id> RESULT conn=<fld1> op=<fld2> msgID=<id1> requesterIP="<saddr>" dn="cn=<fld7>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId1908" {
		dissect {
			mapping => { "message" => "%{id} RESULT conn=%{fld1} op=%{fld2} msgID=%{id1} requesterIP=\"%{saddr}\" dn=\"cn=%{fld7},%{event_description}" }
			id => "msgParserId1908"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1909
	# line in RSA: <id> RESULT conn=<fld1> op=<fld2> msgID=<fld3> requesterIP="<saddr>" version="<fld4>" <event_description>
	else if [logstash][msgparser][id] == "msgParserId1909" {
		dissect {
			mapping => { "message" => "%{id} RESULT conn=%{fld1} op=%{fld2} msgID=%{fld3} requesterIP=\"%{saddr}\" version=\"%{fld4}\" %{event_description}" }
			id => "msgParserId1909"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1910
	# line in RSA: <id>: INFO: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1910" {
		dissect {
			mapping => { "message" => "%{id}: INFO: %{event_description}" }
			id => "msgParserId1910"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SuperInventor" {
		# MESSAGE SuperInventor
		# line in RSA: <id>: WARNING: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: WARNING: %{event_description}" }
				id => "message-SuperInventor"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "SuperInventor"
					"[rsa][message][id1]" => "SuperInventor"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE SuperInventor:01
		# line in RSA: <id>: INFO: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: INFO: %{event_description}" }
				id => "message-SuperInventor:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "SuperInventor:01"
					"[rsa][message][id1]" => "SuperInventor:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1912
	# line in RSA: <id>: WARNING: <event_description> md5sum and logfile is: <info>  <filename>
	else if [logstash][msgparser][id] == "msgParserId1912" {
		dissect {
			mapping => { "message" => "%{id}: WARNING: %{event_description} md5sum and logfile is: %{info}  %{filename}" }
			id => "msgParserId1912"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "error" {
		# MESSAGE error
		# line in RSA: File does not exist: <filename>, referer: <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "File does not exist: %{filename}, referer: %{url}" }
				id => "message-error"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "File does not exist"
					"[event][id]" => "error"
					"[rsa][message][id1]" => "error"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE error:01
		# line in RSA: File does not exist: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "File does not exist: %{filename}" }
				id => "message-error:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "File does not exist"
					"[event][id]" => "error:01"
					"[rsa][message][id1]" => "error:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE error:02
		# line in RSA: error on network returned <fld1> on write of <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "error on network returned %{fld1} on write of %{fld2}" }
				id => "message-error:02"
				add_field => {
				"event_description" => "error on network returned"
					"[event][id]" => "error:02"
					"[rsa][message][id1]" => "error:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE error:03
		# line in RSA: <fld3>(<fld4>): error retrieving information about user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3}(%{fld4}): error retrieving information about user %{username}" }
				id => "message-error:03"
				add_field => {
				"event_description" => "error retrieving information about user"
					"[event][id]" => "error:03"
					"[rsa][message][id1]" => "error:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE error:04
		# line in RSA: <agent>[<process_id>]: [<fld4>]<fld5> error [login:<username>][error code:<result>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld4}]%{fld5} error [login:%{username}][error code:%{result}]" }
				id => "message-error:04"
				add_field => {
				"event_description" => "pam_sm_authenticate error"
					"[event][id]" => "error:04"
					"[rsa][message][id1]" => "error:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1915
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1915" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId1915"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lundqham" {
		# MESSAGE lundqham
		# line in RSA: <id>: { Warning | WARNING }: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<id>[^:]*):[\s]+([\s]*Warning[\s]+|[\s]*WARNING[\s]+):[\s]+(?<event_description>.*)$" }
				id => "message-lundqham"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "lundqham"
					"[rsa][message][id1]" => "lundqham"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE lundqham:01
		# line in RSA: <id>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: %{event_description}" }
				id => "message-lundqham:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "lundqham:01"
					"[rsa][message][id1]" => "lundqham:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1918
	# line in RSA: <agent>[<process_id>]: file <filename> edited
	else if [logstash][msgparser][id] == "msgParserId1918" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: file %{filename} edited" }
			id => "msgParserId1918"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "file edited"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "main" {
		# MESSAGE main:01
		# line in RSA: <id>: <action> from <saddr> (<info>) <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: %{action} from %{saddr} (%{info}) %{fld1}" }
				id => "message-main:01"
				add_field => {
					"[event][id]" => "main:01"
					"[rsa][message][id1]" => "main:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE main:02
		# line in RSA: <id>: <action> from '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: %{action} from '%{saddr}'" }
				id => "message-main:02"
				add_field => {
					"[event][id]" => "main:02"
					"[rsa][message][id1]" => "main:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1921
	# line in RSA: <id>: <fld1>
	else if [logstash][msgparser][id] == "msgParserId1921" {
		dissect {
			mapping => { "message" => "%{id}: %{fld1}" }
			id => "msgParserId1921"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ods-enforcerd" {
		# MESSAGE ods-enforcerd
		# line in RSA: <id>: <fld1>: <fld2>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: %{fld1}: %{fld2}: %{event_description}" }
				id => "message-ods-enforcerd"
				add_field => {
					"[event][id]" => "ods-enforcerd"
					"[rsa][message][id1]" => "ods-enforcerd"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ods-enforcerd:01
		# line in RSA: <id>: Key remove successful: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: Key remove successful: %{info}" }
				id => "message-ods-enforcerd:01"
				add_field => {
					"[event][id]" => "ods-enforcerd:01"
					"[rsa][message][id1]" => "ods-enforcerd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ods-enforcerd:02
		# line in RSA: <id>: Zone <zone> found.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: Zone %{zone} found." }
				id => "message-ods-enforcerd:02"
				add_field => {
					"[event][id]" => "ods-enforcerd:02"
					"[rsa][message][id1]" => "ods-enforcerd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ods-enforcerd:03
		# line in RSA: <id>: [<agent>] <zone>: Policy for <fld1> set to default.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: [%{agent}] %{zone}: Policy for %{fld1} set to default." }
				id => "message-ods-enforcerd:03"
				add_field => {
					"[event][id]" => "ods-enforcerd:03"
					"[rsa][message][id1]" => "ods-enforcerd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ods-enforcerd:04
		# line in RSA: <id>: [<agent>] <zone>: Config will be output to <filename>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: [%{agent}] %{zone}: Config will be output to %{filename}." }
				id => "message-ods-enforcerd:04"
				add_field => {
					"[event][id]" => "ods-enforcerd:04"
					"[rsa][message][id1]" => "ods-enforcerd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ods-enforcerd:05
		# line in RSA: <id>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id}: %{event_description}" }
				id => "message-ods-enforcerd:05"
				add_field => {
					"[event][id]" => "ods-enforcerd:05"
					"[rsa][message][id1]" => "ods-enforcerd:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1929
	# line in RSA: <id>: <event_type> (Failed to connect to socket <filename>: No such file or directory): <result>
	else if [logstash][msgparser][id] == "msgParserId1929" {
		dissect {
			mapping => { "message" => "%{id}: %{event_type} (Failed to connect to socket %{filename}: No such file or directory): %{result}" }
			id => "msgParserId1929"
			add_field => {
				"event_description" => "Failed to connect to socket"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1930
	# line in RSA: <fld1> <fld2> <severity> [<hostname>] [<fld3>] User: <username> <info> IP: <saddr> on <fld4>
	else if [logstash][msgparser][id] == "msgParserId1930" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{severity} [%{hostname}] [%{fld3}] User: %{username} %{info} IP: %{saddr} on %{fld4}" }
			id => "msgParserId1930"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "/usr/local/bin/sr" {
		# MESSAGE 007192
		# line in RSA: <agent>: <fld1> : TTY=<interface> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} : TTY=%{interface} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-007192"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "007192"
					"[rsa][message][id1]" => "007192"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 008192
		# line in RSA: <agent>: <username>: (command continued) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: (command continued) %{info}" }
				id => "message-008192"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "008192"
					"[rsa][message][id1]" => "008192"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sr" {
		# MESSAGE 007193
		# line in RSA: <agent>: <fld1> : TTY=<interface> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} : TTY=%{interface} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-007193"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "007193"
					"[rsa][message][id1]" => "007193"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 008193
		# line in RSA: <agent>: pam_vas: Authentication <<<result>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <fld1> Access Control Identifier(NT Name):<<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_vas: Authentication <%{result}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: %{fld1} Access Control Identifier(NT Name):<%{user_address}>" }
				id => "message-008193"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "008193"
					"[rsa][message][id1]" => "008193"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002615
		# line in RSA: <agent>[<process_id>]: pam_unix(sudo:auth): auth could not identify password for [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(sudo:auth): auth could not identify password for [%{username}]" }
				id => "message-002615"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "002615"
					"[rsa][message][id1]" => "002615"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sr:03
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): authentication failure; logname=<info> uid=<uid> euid=<fld3> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): authentication failure; logname=%{info} uid=%{uid} euid=%{fld3} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-sr:03"
				add_field => {
				"hostname" => "%{hhost}"
				"administrator" => "%{c_username}"
				"event_description" => "authentication failure"
					"[event][id]" => "sr:03"
					"[rsa][message][id1]" => "sr:03"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sr:04
		# line in RSA: <agent>[<process_id>]: pam_tally2(<service>): user <username> (<fld1>) tally <fld2>, deny <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_tally2(%{service}): user %{username} (%{fld1}) tally %{fld2}, deny %{fld3}" }
				id => "message-sr:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sr:04"
					"[rsa][message][id1]" => "sr:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sr:05
		# line in RSA: <agent>: pam_tally2(<service>): user <username> (<fld1>) tally <fld2>, deny <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally2(%{service}): user %{username} (%{fld1}) tally %{fld2}, deny %{fld3}" }
				id => "message-sr:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sr:05"
					"[rsa][message][id1]" => "sr:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sr
		# line in RSA: <agent>[<process_id>]: <application>(<process>): unknown limit item '<event_state>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{process}): unknown limit item '%{event_state}'" }
				id => "message-sr"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown limit item"
					"[event][id]" => "sr"
					"[rsa][message][id1]" => "sr"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sr:01
		# line in RSA: sr: <fld3> : <fld1>; TTY=<fld2> ; PWD=<directory> ; USER=<username> ; COMMAND=<param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "sr: %{fld3} : %{fld1}; TTY=%{fld2} ; PWD=%{directory} ; USER=%{username} ; COMMAND=%{param}" }
				id => "message-sr:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "incorrect password attempts"
					"[event][id]" => "sr:01"
					"[rsa][message][id1]" => "sr:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sr:02
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<<result>> for <<<fld1>> user: <<<username>> account: <<<fld2>> service: <<<service>> reason: <<<fld3>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <%{result}> for <%{fld1}> user: <%{username}> account: <%{fld2}> service: <%{service}> reason: <%{fld3}>" }
				id => "message-sr:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhost}"
					"[event][id]" => "sr:02"
					"[rsa][message][id1]" => "sr:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1941
	# line in RSA: <agent>: Password change succeeded for <username>.
	else if [logstash][msgparser][id] == "msgParserId1941" {
		dissect {
			mapping => { "message" => "%{agent}: Password change succeeded for %{username}." }
			id => "msgParserId1941"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_description" => "Successful password change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1942
	# line in RSA: <agent>: error initializing: [Errno <resultcode>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1942" {
		dissect {
			mapping => { "message" => "%{agent}: error initializing: [Errno %{resultcode}] %{event_description}" }
			id => "msgParserId1942"
			add_field => {
				"ec_outcome" => "Error"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1943
	# line in RSA: <agent>[<process_id>]: <fld1> interface <interface> state is changed to <event_state>
	else if [logstash][msgparser][id] == "msgParserId1943" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} interface %{interface} state is changed to %{event_state}" }
			id => "msgParserId1943"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "pam_vas" {
		# MESSAGE 000100
		# line in RSA: <fld1>[<process_id>]: pam_vas: Authentication <<succeeded> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}[%{process_id}]: pam_vas: Authentication <succeeded> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: %{result}" }
				id => "message-000100"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "000100"
					"[rsa][message][id1]" => "000100"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE pam_vas:01
		# line in RSA: pam_vas: Authentication <<succeeded> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_vas: Authentication <succeeded> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: <%{result}>" }
				id => "message-pam_vas:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "pam_vas:01"
					"[rsa][message][id1]" => "pam_vas:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pam_vas:02
		# line in RSA: pam_vas: Authentication <<failed> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_vas: Authentication <failed> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: <%{result}>" }
				id => "message-pam_vas:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failed"
					"[event][id]" => "pam_vas:02"
					"[rsa][message][id1]" => "pam_vas:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002634
		# line in RSA: <fld1>[<process_id>]: pam_vas: Authentication <<failed> for <fld2>user: <<<username>> account: <<<fld3>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}[%{process_id}]: pam_vas: Authentication <failed> for %{fld2}user: <%{username}> account: <%{fld3}> service: <%{service}> reason: <%{result}>" }
				id => "message-002634"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failed"
					"[event][id]" => "002634"
					"[rsa][message][id1]" => "002634"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "vmsvc" {
		# MESSAGE 002432
		# line in RSA: <agent>[<process>]: [ <result>] [<fld1>] Setting <change_attribute> server capability failed!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process}]: [ %{result}] [%{fld1}] Setting %{change_attribute} server capability failed!" }
				id => "message-002432"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "server capability failed"
					"[event][id]" => "002432"
					"[rsa][message][id1]" => "002432"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002512
		# line in RSA: <agent>: [ <severity>] [<fld1>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ %{severity}] [%{fld1}] %{event_description}" }
				id => "message-002512"
				add_field => {
					"[event][id]" => "002512"
					"[rsa][message][id1]" => "002512"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "abrt-server" {
		# MESSAGE abrt-server
		# line in RSA: <action> of pid <parent_pid> to <filepath>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action} of pid %{parent_pid} to %{filepath}" }
				id => "message-abrt-server"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Saved Python crash dump"
					"[event][id]" => "abrt-server"
					"[rsa][message][id1]" => "abrt-server"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE abrt-server:01
		# line in RSA: <agent>[<process_id>]: Not saving repeating crash in '<directory>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Not saving repeating crash in '%{directory}'" }
				id => "message-abrt-server:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Not saving repeating crash in"
					"[event][id]" => "abrt-server:01"
					"[rsa][message][id1]" => "abrt-server:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002606
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002606"
				add_field => {
					"[event][id]" => "002606"
					"[rsa][message][id1]" => "002606"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_unix" {
		# MESSAGE pam_unix
		# line in RSA: pam_unix(<service>): <event_description>; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_unix(%{service}): %{event_description}; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-pam_unix"
				add_field => {
					"[event][id]" => "pam_unix"
					"[rsa][message][id1]" => "pam_unix"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE pam_unix:01
		# line in RSA: <fld3>[<process_id>]: pam_unix(<service>): <event_description>; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3}[%{process_id}]: pam_unix(%{service}): %{event_description}; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-pam_unix:01"
				add_field => {
					"[event][id]" => "pam_unix:01"
					"[rsa][message][id1]" => "pam_unix:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1957
	# line in RSA: <agent>[<process_id>]: [<severity>]: <info>
	else if [logstash][msgparser][id] == "msgParserId1957" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]: %{info}" }
			id => "msgParserId1957"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "avc" {
		# MESSAGE avc
		# line in RSA: <agent>[<process_id>]: tid <fld1>: [<event_source>.<severity>]: [job_id=<fld2>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld1}: [%{event_source}.%{severity}]: [job_id=%{fld2}]: %{info}" }
				id => "message-avc"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "avc"
					"[rsa][message][id1]" => "avc"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE avc:01
		# line in RSA: <agent>[<process_id>]: tid <fld1>: [<event_source>.<severity>]: <fld2>[sub_id=<fld3>, ao_id=<fld4>, job_id=<fld5>, vmid=<fld6>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld1}: [%{event_source}.%{severity}]: %{fld2}[sub_id=%{fld3}, ao_id=%{fld4}, job_id=%{fld5}, vmid=%{fld6}]: %{info}" }
				id => "message-avc:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "avc:01"
					"[rsa][message][id1]" => "avc:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE avc:02
		# line in RSA: <agent>[<process_id>]: tid <fld1>: [<event_source>.<severity>]:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld1}: [%{event_source}.%{severity}]:%{event_description}" }
				id => "message-avc:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "avc:02"
					"[rsa][message][id1]" => "avc:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE avc:03
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-avc:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "avc:03"
					"[rsa][message][id1]" => "avc:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1961
	# line in RSA: <agent>[<process_id>]:{<fld1> tid <fld2>:| tid <fld1>:} [<event_source>.<severity>]: {<info>]|<info>}
	else if [logstash][msgparser][id] == "msgParserId1961" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:((?<fld1>[^\s]*)[\s]+tid[\s]+(?<fld2>[^:]*):|[\s]*tid[\s]+(?<fld1>[^:]*):)[\s]+\[(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\]:[\s]+((?<info>[^\]]*)\]|(?<info>.*))$" }
			id => "msgParserId1961"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1934
	# line in RSA: <agent>: <fld1> : TTY=<interface> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
	else if [logstash][msgparser][id] == "msgParserId1934" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} : TTY=%{interface} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
			id => "msgParserId1934"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "srno" {
		# MESSAGE srno
		# line in RSA: <agent>: <fld1> : TTY=<interface> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} : TTY=%{interface} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-srno"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "srno"
					"[rsa][message][id1]" => "srno"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE srno:01
		# line in RSA: <agent>[<process_id>]: <application>(<action>): unknown limit item '<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}(%{action}): unknown limit item '%{fld1}'" }
				id => "message-srno:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unknown limit item"
					"[event][id]" => "srno:01"
					"[rsa][message][id1]" => "srno:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "sbatchd" {
		# MESSAGE sbatchd
		# line in RSA: <agent>[<process_id>]: {<fld1>: <fld2> :|<fld1>}  <result> error code <resultcode> for file <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+((?<fld1>[^:]*):[\s]+(?<fld2>[^\s]*)[\s]+:|(?<fld1>[^\s]*))[\s]+(?<result>[^\s]*)[\s]+error[\s]+code[\s]+(?<resultcode>[^\s]*)[\s]+for[\s]+file[\s]+(?<filename>.*)$" }
				id => "message-sbatchd"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sbatchd"
					"[rsa][message][id1]" => "sbatchd"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sbatchd:01
		# line in RSA: <agent>[<process_id>]: <fld1>: execvp(<fld2>) <result>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: execvp(%{fld2}) %{result}, %{event_description}" }
				id => "message-sbatchd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Permission denied."
					"[event][id]" => "sbatchd:01"
					"[rsa][message][id1]" => "sbatchd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "krbrenewd" {
		# MESSAGE krbrenewd
		# line in RSA: <agent>[<process_id>]: <fld1>: <fld2> : <result> error code <resultcode> for file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: %{fld2} : %{result} error code %{resultcode} for file %{filename}" }
				id => "message-krbrenewd"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "krbrenewd"
					"[rsa][message][id1]" => "krbrenewd"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE krbrenewd:01
		# line in RSA: <agent>[<process_id>]: <fld1>: <result> error code -<resultcode> for file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: %{result} error code -%{resultcode} for file %{filename}" }
				id => "message-krbrenewd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "krbrenewd:01"
					"[rsa][message][id1]" => "krbrenewd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1967
	# line in RSA: <daddr>
	else if [logstash][msgparser][id] == "msgParserId1967" {
		dissect {
			mapping => { "message" => "%{daddr}" }
			id => "msgParserId1967"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1968
	# line in RSA: <agent>:{[ID <id> <event_source>.<severity>] <info> | <info> }
	else if [logstash][msgparser][id] == "msgParserId1968" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):(\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId1968"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId669
	# line in RSA: <agent>: <info>
	else if [logstash][msgparser][id] == "msgParserId669" {
		dissect {
			mapping => { "message" => "%{agent}: %{info}" }
			id => "msgParserId669"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1969
	# line in RSA: <agent> [<process_id>]: [<fld1>.<severity>] <info>
	else if [logstash][msgparser][id] == "msgParserId1969" {
		dissect {
			mapping => { "message" => "%{agent} [%{process_id}]: [%{fld1}.%{severity}] %{info}" }
			id => "msgParserId1969"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1970
	# line in RSA: <agent> [<process_id>]: [<event_source>.<severity>]: { <info> with exit code <resultcode> (<result>) | <info>}
	else if [logstash][msgparser][id] == "msgParserId1970" {
		grok {
			match => { "message" => "^(?<agent>[^\s]*)[\s]+\[(?<process_id>[^\]]*)\]:[\s]+\[(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\]:[\s]+([\s]*(?<info>[^\s]*)[\s]+with[\s]+exit[\s]+code[\s]+(?<resultcode>[^\s]*)[\s]+\((?<result>[^\)]*)\)[\s]+|[\s]*(?<info>.*))$" }
			id => "msgParserId1970"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "sasauth" {
		# MESSAGE sasauth
		# line in RSA: <agent> [<process_id>]: pam_vas: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} [%{process_id}]: pam_vas: %{info}" }
				id => "message-sasauth"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sasauth"
					"[rsa][message][id1]" => "sasauth"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sasauth:01
		# line in RSA: <agent>[<process_id>]: pam_unix(<network_service>):<event_description>; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> {rhost=<shost> user=<username>|rhost=<shost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_unix\((?<network_service>[^\)]*)\):(?<event_description>[^;]*);[\s]+logname=(?<fld1>[^\s]*)[\s]+uid=(?<uid>[^\s]*)[\s]+euid=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<c_username>[^\s]*)[\s]+(rhost=(?<shost>[^\s]*)[\s]+user=(?<username>.*)|rhost=(?<shost>.*))$" }
				id => "message-sasauth:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sasauth:01"
					"[rsa][message][id1]" => "sasauth:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sasauth:02
		# line in RSA: <agent> [<process_id>]: pam_unix(<service>): <fld1>; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} [%{process_id}]: pam_unix(%{service}): %{fld1}; user unknown" }
				id => "message-sasauth:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sasauth:02"
					"[rsa][message][id1]" => "sasauth:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sasauth:03
		# line in RSA: <agent> [<process_id>]: {pam_tally2|pam_tally}(<service>): <fld1>; no such user
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\s]*)[\s]+\[(?<process_id>[^\]]*)\]:[\s]+(pam_tally2|pam_tally)\((?<service>[^\)]*)\):[\s]+(?<fld1>[^;]*);[\s]+no[\s]+such[\s]+user$" }
				id => "message-sasauth:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sasauth:03"
					"[rsa][message][id1]" => "sasauth:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002530
		# line in RSA: <agent>[<process_id>]: pam_tally2(sasauth:auth): user <username> (<fld1>) tally <fld2>, deny <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_tally2(sasauth:auth): user %{username} (%{fld1}) tally %{fld2}, deny %{fld3}" }
				id => "message-002530"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002530"
					"[rsa][message][id1]" => "002530"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sasauth:04
		# line in RSA: <agent>: pam_tally2(<service>): <fld1> no such user
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally2(%{service}): %{fld1} no such user" }
				id => "message-sasauth:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sasauth:04"
					"[rsa][message][id1]" => "sasauth:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1976
	# line in RSA: <fld4>[<process_id>]: pam_tally2(<service>): user <username> (<fld1>) tally <fld2>, deny <fld3>
	else if [logstash][msgparser][id] == "msgParserId1976" {
		dissect {
			mapping => { "message" => "%{fld4}[%{process_id}]: pam_tally2(%{service}): user %{username} (%{fld1}) tally %{fld2}, deny %{fld3}" }
			id => "msgParserId1976"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "check" {
		# MESSAGE 002433
		# line in RSA: <agent>[<process_id>]: main exit, Interrupted system call
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: main exit, Interrupted system call" }
				id => "message-002433"
				add_field => {
				"event_description" => "Interrupted system call"
					"[event][id]" => "002433"
					"[rsa][message][id1]" => "002433"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002533
		# line in RSA: <agent>: Install Prefix = <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Install Prefix = %{directory}" }
				id => "message-002533"
				add_field => {
				"event_description" => "Install Prefix"
					"[event][id]" => "002533"
					"[rsa][message][id1]" => "002533"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002534
		# line in RSA: <agent>: check CWD = <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: check CWD = %{directory}" }
				id => "message-002534"
				add_field => {
				"event_description" => "check CWD"
					"[event][id]" => "002534"
					"[rsa][message][id1]" => "002534"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002433:01
		# line in RSA: <agent>[<process_id>]: fopen(<filename>) failed, error (No such file or directory)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fopen(%{filename}) failed, error (No such file or directory)" }
				id => "message-002433:01"
				add_field => {
				"event_description" => "No such file or directory"
					"[event][id]" => "002433:01"
					"[rsa][message][id1]" => "002433:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002514
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002514"
				add_field => {
					"[event][id]" => "002514"
					"[rsa][message][id1]" => "002514"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "goferd" {
		# MESSAGE 002434
		# line in RSA: <agent>: [<severity>][<fld1>] <username>:<fld2> - connecting to <hostname>:<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity}][%{fld1}] %{username}:%{fld2} - connecting to %{hostname}:%{fld3}" }
				id => "message-002434"
				add_field => {
					"[event][id]" => "002434"
					"[rsa][message][id1]" => "002434"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002434:01
		# line in RSA: <agent>: [<severity>][<fld1>] <fld2> - receiver <fld3> from <fld4> closed due to: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity}][%{fld1}] %{fld2} - receiver %{fld3} from %{fld4} closed due to: %{event_description}" }
				id => "message-002434:01"
				add_field => {
					"[event][id]" => "002434:01"
					"[rsa][message][id1]" => "002434:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002434:02
		# line in RSA: <agent>: [<severity>][<fld1>] <username>:<fld2> - connected to <hostname>:<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity}][%{fld1}] %{username}:%{fld2} - connected to %{hostname}:%{fld3}" }
				id => "message-002434:02"
				add_field => {
					"[event][id]" => "002434:02"
					"[rsa][message][id1]" => "002434:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002434:03
		# line in RSA: <agent>: [<severity>][<fld1>] <fld2> - { connecting | connected | open}: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+\[(?<severity>[^\]]*)\]\[(?<fld1>[^\]]*)\][\s]+(?<fld2>[^\s]*)[\s]+\-[\s]+([\s]*connecting[\s]+|[\s]*connected[\s]+|[\s]*open):[\s]+(?<info>.*)$" }
				id => "message-002434:03"
				add_field => {
					"[event][id]" => "002434:03"
					"[rsa][message][id1]" => "002434:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002434:04
		# line in RSA: <agent>: [<severity>][<fld1>] <fld2> - opened: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity}][%{fld1}] %{fld2} - opened: %{info}" }
				id => "message-002434:04"
				add_field => {
					"[event][id]" => "002434:04"
					"[rsa][message][id1]" => "002434:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE goferd:01
		# line in RSA: <agent>: [<severity>][<fld1>] <fld2> - connect: proton+amqps://<dhost>:<dport>, <result>: Connection <fld3> <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity}][%{fld1}] %{fld2} - connect: proton+amqps://%{dhost}:%{dport}, %{result}: Connection %{fld3} %{disposition}" }
				id => "message-goferd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "goferd:01"
					"[rsa][message][id1]" => "goferd:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE goferd:02
		# line in RSA: <agent>: [<severity>][<fld1>] <username>:<fld2> - <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity}][%{fld1}] %{username}:%{fld2} - %{disposition}" }
				id => "message-goferd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "goferd:02"
					"[rsa][message][id1]" => "goferd:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE goferd:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-goferd:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "goferd:03"
					"[rsa][message][id1]" => "goferd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "docker-current" {
		# MESSAGE 002435
		# line in RSA: <agent>[<process_id>]: time="<fld1>" level=<severity> msg="<fld2>Action=<action>, ID=<fld3>, LoginUID=<uid>, PID=<fld4>}"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: time=\"%{fld1}\" level=%{severity} msg=\"%{fld2}Action=%{action}, ID=%{fld3}, LoginUID=%{uid}, PID=%{fld4}}\"" }
				id => "message-002435"
				add_field => {
					"[event][id]" => "002435"
					"[rsa][message][id1]" => "002435"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002435:01
		# line in RSA: <agent>[<process_id>]: time="<fld1>" level=<severity> msg="<fld2>Action=<action>, LoginUID=<uid>, PID=<fld4>}"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: time=\"%{fld1}\" level=%{severity} msg=\"%{fld2}Action=%{action}, LoginUID=%{uid}, PID=%{fld4}}\"" }
				id => "message-002435:01"
				add_field => {
					"[event][id]" => "002435:01"
					"[rsa][message][id1]" => "002435:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002435:02
		# line in RSA: <agent>[<process_id>]: time="<fld1>" level=<severity> msg="<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: time=\"%{fld1}\" level=%{severity} msg=\"%{info}\"" }
				id => "message-002435:02"
				add_field => {
					"[event][id]" => "002435:02"
					"[rsa][message][id1]" => "002435:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "atomic-openshift-node" {
		# MESSAGE 002436
		# line in RSA: <agent>[<process_id>]: I<fld1>] <web_method> <fld2>: (<fld3>) <fld4> [[<fld5>] <daddr>:<dport>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: I%{fld1}] %{web_method} %{fld2}: (%{fld3}) %{fld4} [[%{fld5}] %{daddr}:%{dport}]" }
				id => "message-002436"
				add_field => {
					"[event][id]" => "002436"
					"[rsa][message][id1]" => "002436"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002436:01
		# line in RSA: <agent>[<process_id>]: I<fld1>] Node request attributes: namespace=, user=&user.DefaultInfo<fld2>Name:"<info>", UID:"<uid>", Groups:<fld3>, Extra:<fld4>, attrs=<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: I%{fld1}] Node request attributes: namespace=, user=&user.DefaultInfo%{fld2}Name:\"%{info}\", UID:\"%{uid}\", Groups:%{fld3}, Extra:%{fld4}, attrs=%{fld5}" }
				id => "message-002436:01"
				add_field => {
				"event_description" => "Node request attributes"
					"[event][id]" => "002436:01"
					"[rsa][message][id1]" => "002436:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002436:02
		# line in RSA: <agent>[<process_id>]: I<fld1>] MountVolume operation started for volume "<fld2>" (<fld3>) to pod <fld4> (UID: "<uid>"). Volume is already mounted to pod, but remount was requested.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: I%{fld1}] MountVolume operation started for volume \"%{fld2}\" (%{fld3}) to pod %{fld4} (UID: \"%{uid}\"). Volume is already mounted to pod, but remount was requested." }
				id => "message-002436:02"
				add_field => {
				"event_description" => "MountVolume operation started for volume"
					"[event][id]" => "002436:02"
					"[rsa][message][id1]" => "002436:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002436:03
		# line in RSA: <agent>[<process_id>]: <fld1>] Failed to remove dead container <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}] Failed to remove dead container %{info}" }
				id => "message-002436:03"
				add_field => {
				"event_description" => "Failed to remove dead container"
					"[event][id]" => "002436:03"
					"[rsa][message][id1]" => "002436:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002436:04
		# line in RSA: <agent>[<process_id>]: <fld1>] MountVolume.SetUp succeeded for volume <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}] MountVolume.SetUp succeeded for volume %{info}" }
				id => "message-002436:04"
				add_field => {
				"event_description" => "MountVolume.SetUp succeeded for volume"
					"[event][id]" => "002436:04"
					"[rsa][message][id1]" => "002436:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002436:05
		# line in RSA: <agent>[<process_id>]: <fld1>] Discovered runtime cgroups name: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}] Discovered runtime cgroups name: %{info}" }
				id => "message-002436:05"
				add_field => {
				"event_description" => "Discovered runtime cgroups name"
					"[event][id]" => "002436:05"
					"[rsa][message][id1]" => "002436:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002436:06
		# line in RSA: <agent>[<process_id>]: <fld1>] allowed=<result>, reason=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}] allowed=%{result}, reason=%{event_description}" }
				id => "message-002436:06"
				add_field => {
					"[event][id]" => "002436:06"
					"[rsa][message][id1]" => "002436:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "dbupdate" {
		# MESSAGE 002437
		# line in RSA: <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
				id => "message-002437"
				add_field => {
					"[event][id]" => "002437"
					"[rsa][message][id1]" => "002437"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002518
		# line in RSA: <agent>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-002518"
				add_field => {
					"[event][id]" => "002518"
					"[rsa][message][id1]" => "002518"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2001
	# line in RSA: <agent>: Could not write to log file. Disk may be full
	else if [logstash][msgparser][id] == "msgParserId2001" {
		dissect {
			mapping => { "message" => "%{agent}: Could not write to log file. Disk may be full" }
			id => "msgParserId2001"
			add_field => {
				"event_description" => "Could not write to log file. Disk may be full"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1015
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1015" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId1015"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nslcd" {
		# MESSAGE 002441
		# line in RSA: <agent>[<process_id>]: [<fld1>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{event_description}" }
				id => "message-002441"
				add_field => {
					"[event][id]" => "002441"
					"[rsa][message][id1]" => "002441"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002461
		# line in RSA: <agent>[<process_id>]: version <version> starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: version %{version} starting" }
				id => "message-002461"
				add_field => {
				"event_description" => "version starting"
					"[event][id]" => "002461"
					"[rsa][message][id1]" => "002461"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002463
		# line in RSA: <agent>[<process_id>]: accepting connections
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: accepting connections" }
				id => "message-002463"
				add_field => {
				"event_description" => "accepting connections"
					"[event][id]" => "002463"
					"[rsa][message][id1]" => "002463"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002465
		# line in RSA: <agent>[<process_id>]: version <version> bailing out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: version %{version} bailing out" }
				id => "message-002465"
				add_field => {
				"event_description" => "version bailing out"
					"[event][id]" => "002465"
					"[rsa][message][id1]" => "002465"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002466
		# line in RSA: <agent>[<process_id>]: caught signal SIGTERM <fld1>, shutting down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: caught signal SIGTERM %{fld1}, shutting down" }
				id => "message-002466"
				add_field => {
				"event_description" => "caught signal shutting down"
					"[event][id]" => "002466"
					"[rsa][message][id1]" => "002466"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2007
	# line in RSA: <agent>: SQL error <fld1>: <result>
	else if [logstash][msgparser][id] == "msgParserId2007" {
		dissect {
			mapping => { "message" => "%{agent}: SQL error %{fld1}: %{result}" }
			id => "msgParserId2007"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "sssd" {
		# MESSAGE 002444
		# line in RSA: <agent>[<process>]: Shutting down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process}]: Shutting down" }
				id => "message-002444"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Shutting down"
					"[event][id]" => "002444"
					"[rsa][message][id1]" => "002444"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002445
		# line in RSA: <agent>[<process>]: Starting up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process}]: Starting up" }
				id => "message-002445"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting up"
					"[event][id]" => "002445"
					"[rsa][message][id1]" => "002445"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002446
		# line in RSA: <agent>: Starting up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Starting up" }
				id => "message-002446"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting up"
					"[event][id]" => "002446"
					"[rsa][message][id1]" => "002446"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2011
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2011" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId2011"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting up"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "hourly" {
		# MESSAGE 002450
		# line in RSA: <fld1>: <process>: psz_out_adp <fld2> database is locked
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{process}: psz_out_adp %{fld2} database is locked" }
				id => "message-002450"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "database is locked"
					"[event][id]" => "002450"
					"[rsa][message][id1]" => "002450"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE hourly:02
		# line in RSA: <fld1>: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{process}: %{event_description}" }
				id => "message-hourly:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "hourly:02"
					"[rsa][message][id1]" => "hourly:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2013
	# line in RSA: <agent>[<process_id>]: [ID <fld1> <fld2>] refused connect from <hostname> (<result>)
	else if [logstash][msgparser][id] == "msgParserId2013" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{fld1} %{fld2}] refused connect from %{hostname} (%{result})" }
			id => "msgParserId2013"
			add_field => {
				"event_description" => "refused connect"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "vastool" {
		# MESSAGE 002459
		# line in RSA: <agent>[<process_id>]: <directory> flush from uid <<<uid>>, result <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{directory} flush from uid <%{uid}>, result <%{result}>" }
				id => "message-002459"
				add_field => {
					"[event][id]" => "002459"
					"[rsa][message][id1]" => "002459"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE vastool
		# line in RSA: <agent>[<process_id>]: <fld1> flush <fld2> from uid <<<uid>>, result <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} flush %{fld2} from uid <%{uid}>, result <%{result}>" }
				id => "message-vastool"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "vastool"
					"[rsa][message][id1]" => "vastool"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "nails-ods" {
		# MESSAGE 002460
		# line in RSA: <agent>[<fld1>]: <result> - <fld2> No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{result} - %{fld2} No such file or directory" }
				id => "message-002460"
				add_field => {
				"event_description" => "No such file or directory"
					"[event][id]" => "002460"
					"[rsa][message][id1]" => "002460"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002464
		# line in RSA: <agent>[<process_id>]: <result> - <fld1> Stale file handle
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result} - %{fld1} Stale file handle" }
				id => "message-002464"
				add_field => {
				"event_description" => "Stale file handle"
					"[event][id]" => "002464"
					"[rsa][message][id1]" => "002464"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE nails-ods:01
		# line in RSA: <agent>[<fld1>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{info}" }
				id => "message-nails-ods:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "nails-ods:01"
					"[rsa][message][id1]" => "nails-ods:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "chronyd" {
		# MESSAGE 002462
		# line in RSA: <agent>[<process_id>]: Source <change_old> replaced with <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Source %{change_old} replaced with %{saddr}" }
				id => "message-002462"
				add_field => {
				"change_attribute" => "Source Address"
				"event_description" => "Source replaced"
					"[event][id]" => "002462"
					"[rsa][message][id1]" => "002462"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002506
		# line in RSA: <agent>[<process_id>]: chronyd exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: chronyd exiting" }
				id => "message-002506"
				add_field => {
				"event_description" => "chronyd exiting"
					"[event][id]" => "002506"
					"[rsa][message][id1]" => "002506"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002507
		# line in RSA: <agent>[<process_id>]: chronyd version <version> starting <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: chronyd version %{version} starting %{info}" }
				id => "message-002507"
				add_field => {
				"event_description" => "chronyd version starting"
					"[event][id]" => "002507"
					"[rsa][message][id1]" => "002507"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002508
		# line in RSA: <agent>[<process_id>]: Frequency <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Frequency %{info}" }
				id => "message-002508"
				add_field => {
					"[event][id]" => "002508"
					"[rsa][message][id1]" => "002508"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002508:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-002508:01"
				add_field => {
				"event_description" => "Forward time jump detected!"
					"[event][id]" => "002508:01"
					"[rsa][message][id1]" => "002508:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-tmpfiles" {
		# MESSAGE 002470
		# line in RSA: <agent>[<process_id>]: Reading config file "<directory>".
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Reading config file \"%{directory}\"." }
				id => "message-002470"
				add_field => {
				"event_description" => "Reading config file"
					"[event][id]" => "002470"
					"[rsa][message][id1]" => "002470"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002471
		# line in RSA: <agent>[<process_id>]: Ignoring entry <fld1> "<directory>" because <fld2>boot is not specified.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Ignoring entry %{fld1} \"%{directory}\" because %{fld2}boot is not specified." }
				id => "message-002471"
				add_field => {
				"event_description" => "Ignoring entry because boot is not specified."
					"[event][id]" => "002471"
					"[rsa][message][id1]" => "002471"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002472
		# line in RSA: <agent>[<process_id>]: Running clean action for entry <fld1> <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Running clean action for entry %{fld1} %{directory}" }
				id => "message-002472"
				add_field => {
				"event_description" => "Running clean action for entry"
					"[event][id]" => "002472"
					"[rsa][message][id1]" => "002472"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002473
		# line in RSA: <agent>[<process_id>]: File "<directory>": modify time <fld1> is too new.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: File \"%{directory}\": modify time %{fld1} is too new." }
				id => "message-002473"
				add_field => {
				"event_description" => "File modify time is too new"
					"[event][id]" => "002473"
					"[rsa][message][id1]" => "002473"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002474
		# line in RSA: <agent>[<process_id>]: Directory "<directory>": access time <fld1> is too new.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Directory \"%{directory}\": access time %{fld1} is too new." }
				id => "message-002474"
				add_field => {
				"event_description" => "Directory modify time is too new"
					"[event][id]" => "002474"
					"[rsa][message][id1]" => "002474"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002475
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002475"
				add_field => {
					"[event][id]" => "002475"
					"[rsa][message][id1]" => "002475"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-udevd" {
		# MESSAGE 002477
		# line in RSA: <agent>: Network interface NamePolicy= <action> on kernel command line, <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Network interface NamePolicy= %{action} on kernel command line, %{result}." }
				id => "message-002477"
				add_field => {
					"[event][id]" => "002477"
					"[rsa][message][id1]" => "002477"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002505
		# line in RSA: <agent>: starting version <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: starting version %{version}" }
				id => "message-002505"
				add_field => {
				"event_description" => "starting version"
					"[event][id]" => "002505"
					"[rsa][message][id1]" => "002505"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002572
		# line in RSA: {<agent>[<process_id>] | <agent>}: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^:]*)):[\s]+(?<info>.*)$" }
				id => "message-002572"
				add_field => {
					"[event][id]" => "002572"
					"[rsa][message][id1]" => "002572"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002572:01
		# line in RSA: <agent>: <process> [<process_id>] terminated by <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process} [%{process_id}] terminated by %{info}" }
				id => "message-002572:01"
				add_field => {
				"event_state" => "terminated"
					"[event][id]" => "002572:01"
					"[rsa][message][id1]" => "002572:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002572:02
		# line in RSA: <agent>: <process> [<process_id>] <device> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process} [%{process_id}] %{device} %{info}" }
				id => "message-002572:02"
				add_field => {
					"[event][id]" => "002572:02"
					"[rsa][message][id1]" => "002572:02"
					"[event][categoryid]" => "1603090000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "journal" {
		# MESSAGE journal
		# line in RSA: <agent>: Suppressed <dclass_counter1> messages from <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Suppressed %{dclass_counter1} messages from %{service}" }
				id => "message-journal"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "journal"
					"[rsa][message][id1]" => "journal"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE journal:01
		# line in RSA: <agent>:<fld1> [INFO][<fld2>]<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:%{fld1} [INFO][%{fld2}]%{info}" }
				id => "message-journal:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "journal:01"
					"[rsa][message][id1]" => "journal:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002478
		# line in RSA: <agent>: <application> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application} %{event_description}" }
				id => "message-002478"
				add_field => {
					"[event][id]" => "002478"
					"[rsa][message][id1]" => "002478"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2032
	# line in RSA: <agent>: <action>, <result> or <fld1>.
	else if [logstash][msgparser][id] == "msgParserId2032" {
		dissect {
			mapping => { "message" => "%{agent}: %{action}, %{result} or %{fld1}." }
			id => "msgParserId2032"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2033
	# line in RSA: <agent>[<process_id>]: VCS ERROR <result>. <action>
	else if [logstash][msgparser][id] == "msgParserId2033" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: VCS ERROR %{result}. %{action}" }
			id => "msgParserId2033"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ModemManager" {
		# MESSAGE 002501
		# line in RSA: <agent>[<process_id>]: <<<severity>>  Caught signal, <result>...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{severity}>  Caught signal, %{result}..." }
				id => "message-002501"
				add_field => {
					"[event][id]" => "002501"
					"[rsa][message][id1]" => "002501"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002502
		# line in RSA: <agent>[<process_id>]: <<<severity>>  ModemManager is <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: <%{severity}>  ModemManager is %{result}" }
				id => "message-002502"
				add_field => {
					"[event][id]" => "002502"
					"[rsa][message][id1]" => "002502"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2036
	# line in RSA: <agent>: daemon start
	else if [logstash][msgparser][id] == "msgParserId2036" {
		dissect {
			mapping => { "message" => "%{agent}: daemon start" }
			id => "msgParserId2036"
			add_field => {
				"event_description" => "daemon start"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-shutdownd" {
		# MESSAGE 002509
		# line in RSA: <agent>: Shutting down <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Shutting down %{fld1}" }
				id => "message-002509"
				add_field => {
				"event_description" => "Shutting down"
					"[event][id]" => "002509"
					"[rsa][message][id1]" => "002509"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002510
		# line in RSA: <agent>: Creating <directory>, <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Creating %{directory}, %{fld1}" }
				id => "message-002510"
				add_field => {
					"[event][id]" => "002510"
					"[rsa][message][id1]" => "002510"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2043
	# line in RSA: <agent>: calling: <action>
	else if [logstash][msgparser][id] == "msgParserId2043" {
		dissect {
			mapping => { "message" => "%{agent}: calling: %{action}" }
			id => "msgParserId2043"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "journalctl" {
		# MESSAGE 002521
		# line in RSA: <agent>[<process_id>]: Failed to determine peer security context: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed to determine peer security context: %{result}" }
				id => "message-002521"
				add_field => {
				"event_description" => "Failed to determine peer security context"
					"[event][id]" => "002521"
					"[rsa][message][id1]" => "002521"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002522
		# line in RSA: <agent>[<process_id>]: Got unexpected auxiliary data with <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Got unexpected auxiliary data with %{fld1}" }
				id => "message-002522"
				add_field => {
				"event_description" => "Got unexpected auxiliary data"
					"[event][id]" => "002522"
					"[rsa][message][id1]" => "002522"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002523
		# line in RSA: <agent>[<process_id>]: Found <fld1>, language <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Found %{fld1}, language %{fld2}" }
				id => "message-002523"
				add_field => {
				"event_description" => "Found language"
					"[event][id]" => "002523"
					"[rsa][message][id1]" => "002523"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002524
		# line in RSA: <agent>[<process_id>]: Sent message type=<action> sender=<fld1> destination=<fld2> object=<directory> interface=<interface> member=<fld3> cookie=<fld4> reply_cookie=<fld5> error=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Sent message type=%{action} sender=%{fld1} destination=%{fld2} object=%{directory} interface=%{interface} member=%{fld3} cookie=%{fld4} reply_cookie=%{fld5} error=%{fld6}" }
				id => "message-002524"
				add_field => {
					"[event][id]" => "002524"
					"[rsa][message][id1]" => "002524"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002525
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002525"
				add_field => {
					"[event][id]" => "002525"
					"[rsa][message][id1]" => "002525"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "systemctl" {
		# MESSAGE 002526
		# line in RSA: <agent>[<process_id>]: Sent message type=<action> sender=<fld1> destination=<fld2> object=<directory> interface=<interface> member=<fld3> cookie=<fld4> reply_cookie=<fld5> error=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Sent message type=%{action} sender=%{fld1} destination=%{fld2} object=%{directory} interface=%{interface} member=%{fld3} cookie=%{fld4} reply_cookie=%{fld5} error=%{fld6}" }
				id => "message-002526"
				add_field => {
					"[event][id]" => "002526"
					"[rsa][message][id1]" => "002526"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002527
		# line in RSA: <agent>[<process_id>]: Got unexpected auxiliary data with <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Got unexpected auxiliary data with %{fld1}" }
				id => "message-002527"
				add_field => {
				"event_description" => "Got unexpected auxiliary data"
					"[event][id]" => "002527"
					"[rsa][message][id1]" => "002527"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002528
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-002528"
				add_field => {
					"[event][id]" => "002528"
					"[rsa][message][id1]" => "002528"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2055
	# line in RSA: <agent>[<process_id>]: Clear flag is set for <info> table
	else if [logstash][msgparser][id] == "msgParserId2055" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Clear flag is set for %{info} table" }
			id => "msgParserId2055"
			add_field => {
				"event_description" => "Clear flag is set"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2056
	# line in RSA: <agent>[<process_id>]: [W] <fld1> invalid certificates (<fld2> invalid issuers, <fld3> invalid signatures, <fld4> revoked, <fld5> self-signed)
	else if [logstash][msgparser][id] == "msgParserId2056" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [W] %{fld1} invalid certificates (%{fld2} invalid issuers, %{fld3} invalid signatures, %{fld4} revoked, %{fld5} self-signed)" }
			id => "msgParserId2056"
			add_field => {
				"event_description" => "invalid certificates"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0-PPE-2" {
		# MESSAGE 002542
		# line in RSA: <agent> : default SNMP TRAP_SENT <fld1> :  haNoHeartbeats (partition id = default, haNicsMonitorFailed = <fld2>, haLastNicMonitorFailed = <fld3>, sysIpAddress = <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} : default SNMP TRAP_SENT %{fld1} :  haNoHeartbeats (partition id = default, haNicsMonitorFailed = %{fld2}, haLastNicMonitorFailed = %{fld3}, sysIpAddress = %{saddr})" }
				id => "message-002542"
				add_field => {
					"[event][id]" => "002542"
					"[rsa][message][id1]" => "002542"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002542:01
		# line in RSA: <agent> : default SNMP TRAP_SENT <fld1> :  entityNameChanged (partition id = <fld30>, entityName = "<obj_name>", entityOldName = "<change_old>", entityNewName = "<change_new>", svcServiceFullName.<fld4> = "<service>", sysIpAddress =<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} : default SNMP TRAP_SENT %{fld1} :  entityNameChanged (partition id = %{fld30}, entityName = \"%{obj_name}\", entityOldName = \"%{change_old}\", entityNewName = \"%{change_new}\", svcServiceFullName.%{fld4} = \"%{service}\", sysIpAddress =%{saddr})" }
				id => "message-002542:01"
				add_field => {
				"change_attribute" => "Entity Name"
				"hostname" => "%{hhost}"
					"[event][id]" => "002542:01"
					"[rsa][message][id1]" => "002542:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2059
	# line in RSA: <agent>: CSV import error [<action>]: Import ended with the following status: "<result>", processed <fld1>, skipped <fld2>, ignored <fld3>. <info>
	else if [logstash][msgparser][id] == "msgParserId2059" {
		dissect {
			mapping => { "message" => "%{agent}: CSV import error [%{action}]: Import ended with the following status: \"%{result}\", processed %{fld1}, skipped %{fld2}, ignored %{fld3}. %{info}" }
			id => "msgParserId2059"
			add_field => {
				"event_description" => "CSV import error"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "sensord" {
		# MESSAGE 002544
		# line in RSA: <agent>: SpectraGuard Sensor[<smacaddr>] connected to SpectraGuard Server <daddr>, hostname <dhost>, real server <fld1>, protocol <protocol>, proxied <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SpectraGuard Sensor[%{smacaddr}] connected to SpectraGuard Server %{daddr}, hostname %{dhost}, real server %{fld1}, protocol %{protocol}, proxied %{fld2}" }
				id => "message-002544"
				add_field => {
					"[event][id]" => "002544"
					"[rsa][message][id1]" => "002544"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002544:01
		# line in RSA: <agent>: SpectraGuard Sensor[<smacaddr>] disconnected from SpectraGuard Server <daddr>, hostname <dhost>, real server <fld1>, protocol <protocol>, proxied <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SpectraGuard Sensor[%{smacaddr}] disconnected from SpectraGuard Server %{daddr}, hostname %{dhost}, real server %{fld1}, protocol %{protocol}, proxied %{fld2}" }
				id => "message-002544:01"
				add_field => {
					"[event][id]" => "002544:01"
					"[rsa][message][id1]" => "002544:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002544:02
		# line in RSA: <agent>: SpectraGuard Sensor[<smacaddr>] with ip address[<hostip>] upgrading from SpectraGuard Server {[<daddr>] <dhost>, real server <fld1>, protocol <protocol>, proxied <fld2>|[<daddr>] <dhost>,protocol <protocol>, proxied <fld2>|[<daddr>] ,protocol <protocol>, proxied <fld2>|[<daddr>]}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+SpectraGuard[\s]+Sensor\[(?<smacaddr>[^\]]*)\][\s]+with[\s]+ip[\s]+address\[(?<hostip>[^\]]*)\][\s]+upgrading[\s]+from[\s]+SpectraGuard[\s]+Server[\s]+(\[(?<daddr>[^\]]*)\][\s]+(?<dhost>[^,]*),[\s]+real[\s]+server[\s]+(?<fld1>[^,]*),[\s]+protocol[\s]+(?<protocol>[^,]*),[\s]+proxied[\s]+(?<fld2>.*)|\[(?<daddr>[^\]]*)\][\s]+(?<dhost>[^,]*),protocol[\s]+(?<protocol>[^,]*),[\s]+proxied[\s]+(?<fld2>.*)|\[(?<daddr>[^\]]*)\][\s]+,protocol[\s]+(?<protocol>[^,]*),[\s]+proxied[\s]+(?<fld2>.*)|\[(?<daddr>[^\]]*)\])$" }
				id => "message-002544:02"
				add_field => {
					"[event][id]" => "002544:02"
					"[rsa][message][id1]" => "002544:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002545
		# line in RSA: <agent>: Keepalive thread timed out, posting PMAC reinit for Spectraguard Sensor [<smacaddr>] name <dhost>, real server <fld1>, protocol <protocol>, proxied <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Keepalive thread timed out, posting PMAC reinit for Spectraguard Sensor [%{smacaddr}] name %{dhost}, real server %{fld1}, protocol %{protocol}, proxied %{fld2}" }
				id => "message-002545"
				add_field => {
				"event_description" => "Keepalive thread timed out"
					"[event][id]" => "002545"
					"[rsa][message][id1]" => "002545"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002546
		# line in RSA: <agent>: Keepalive thread timed out, posting PMAC reinit for Spectraguard Sensor [<smacaddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Keepalive thread timed out, posting PMAC reinit for Spectraguard Sensor [%{smacaddr}]" }
				id => "message-002546"
				add_field => {
				"event_description" => "Keepalive thread timed out"
					"[event][id]" => "002546"
					"[rsa][message][id1]" => "002546"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002544:03
		# line in RSA: <agent>: <event_description> {[<smacaddr>] <dhost>, real server <fld1>, protocol <protocol>, proxied <fld2>|[<smacaddr>] <fld2> [<daddr>]|[<smacaddr>] <fld2>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+(\[(?<smacaddr>[^\]]*)\][\s]+(?<dhost>[^,]*),[\s]+real[\s]+server[\s]+(?<fld1>[^,]*),[\s]+protocol[\s]+(?<protocol>[^,]*),[\s]+proxied[\s]+(?<fld2>.*)|\[(?<smacaddr>[^\]]*)\][\s]+(?<fld2>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|\[(?<smacaddr>[^\]]*)\][\s]+(?<fld2>.*))$" }
				id => "message-002544:03"
				add_field => {
					"[event][id]" => "002544:03"
					"[rsa][message][id1]" => "002544:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2066
	# line in RSA: <agent>[<process_id>]: LogClient connect failed on <directory> fd=<fld1> <result>
	else if [logstash][msgparser][id] == "msgParserId2066" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: LogClient connect failed on %{directory} fd=%{fld1} %{result}" }
			id => "msgParserId2066"
			add_field => {
				"event_description" => "LogClient connect failed"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2067
	# line in RSA: <agent>[<process_id>]: sendMessage <bytes> bytes write to fd <fld1> error n=<fld2> <fld3> Broken pipe version=<version>
	else if [logstash][msgparser][id] == "msgParserId2067" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: sendMessage %{bytes} bytes write to fd %{fld1} error n=%{fld2} %{fld3} Broken pipe version=%{version}" }
			id => "msgParserId2067"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "systemd-fsck" {
		# MESSAGE 002550
		# line in RSA: <agent>: <directory>: clean, <fld1> files, <fld2> blocks
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{directory}: clean, %{fld1} files, %{fld2} blocks" }
				id => "message-002550"
				add_field => {
					"[event][id]" => "002550"
					"[rsa][message][id1]" => "002550"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd-fsck
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-systemd-fsck"
				add_field => {
					"[event][id]" => "systemd-fsck"
					"[rsa][message][id1]" => "systemd-fsck"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "rngd" {
		# MESSAGE 002551
		# line in RSA: <agent>: Unable to open file: <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Unable to open file: %{directory}" }
				id => "message-002551"
				add_field => {
				"event_description" => "Unable to open file"
					"[event][id]" => "002551"
					"[rsa][message][id1]" => "002551"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002552
		# line in RSA: <agent>: can't open any entropy source
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: can't open any entropy source" }
				id => "message-002552"
				add_field => {
				"event_description" => "can't open any entropy source"
					"[event][id]" => "002552"
					"[rsa][message][id1]" => "002552"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002553
		# line in RSA: <agent>: Maybe RNG device modules are not loaded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Maybe RNG device modules are not loaded" }
				id => "message-002553"
				add_field => {
				"event_description" => "Maybe RNG device modules are not loaded"
					"[event][id]" => "002553"
					"[rsa][message][id1]" => "002553"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE rngd:04
		# line in RSA: <agent>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1}" }
				id => "message-rngd:04"
				add_field => {
				"event_description" => "read error"
					"[event][id]" => "rngd:04"
					"[rsa][message][id1]" => "rngd:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2074
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2074" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId2074"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "cma" {
		# MESSAGE 002555
		# line in RSA: <agent>: Starting McAfee Agent services... <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Starting McAfee Agent services... %{fld1}" }
				id => "message-002555"
				add_field => {
				"event_description" => "Starting McAfee Agent services"
					"[event][id]" => "002555"
					"[rsa][message][id1]" => "002555"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE cma:01
		# line in RSA: <agent>: McAfee agent needs the file <filename> and server keys
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: McAfee agent needs the file %{filename} and server keys" }
				id => "message-cma:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "cma:01"
					"[rsa][message][id1]" => "cma:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE cma
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-cma"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "cma"
					"[rsa][message][id1]" => "cma"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-fstab-generator" {
		# MESSAGE 002556
		# line in RSA: <agent>[<process_id>]: Found entry what=<directory> where=<fld1> type=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Found entry what=%{directory} where=%{fld1} type=%{fld2}" }
				id => "message-002556"
				add_field => {
					"[event][id]" => "002556"
					"[rsa][message][id1]" => "002556"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002557
		# line in RSA: <agent>[<process_id>]: Creating <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Creating %{directory}" }
				id => "message-002557"
				add_field => {
					"[event][id]" => "002557"
					"[rsa][message][id1]" => "002557"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002558
		# line in RSA: <agent>[<process_id>]: Parsing <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Parsing %{directory}" }
				id => "message-002558"
				add_field => {
					"[event][id]" => "002558"
					"[rsa][message][id1]" => "002558"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-sysctl" {
		# MESSAGE 002559
		# line in RSA: <agent>[<process_id>]: Parsing <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Parsing %{directory}" }
				id => "message-002559"
				add_field => {
					"[event][id]" => "002559"
					"[rsa][message][id1]" => "002559"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002560
		# line in RSA: <agent>[<process_id>]: Setting <fld1> to <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Setting %{fld1} to %{fld2}" }
				id => "message-002560"
				add_field => {
					"[event][id]" => "002560"
					"[rsa][message][id1]" => "002560"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002561
		# line in RSA: <agent>[<process_id>]: Failed to write <fld1> to '<directory>': <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed to write %{fld1} to '%{directory}': %{result}" }
				id => "message-002561"
				add_field => {
					"[event][id]" => "002561"
					"[rsa][message][id1]" => "002561"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2082
	# line in RSA: <agent>[<process_id>]: <directory> succeeded.
	else if [logstash][msgparser][id] == "msgParserId2082" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{directory} succeeded." }
			id => "msgParserId2082"
			add_field => {
				"result" => "succeeded"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "imfd" {
		# MESSAGE 002563
		# line in RSA: <agent>[<process_id>]: IMFD NOTICE <fld1> Diagnostics directory moved to <directory>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: IMFD NOTICE %{fld1} Diagnostics directory moved to %{directory}, %{info}" }
				id => "message-002563"
				add_field => {
				"event_description" => "Diagnostics directory moved"
					"[event][id]" => "002563"
					"[rsa][message][id1]" => "002563"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002598
		# line in RSA: <agent>[<process_id>]: [ID <fld1> daemon.notice] IMFD ERROR V-292-2-3030 <fld2> from <fld3> failed with error:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{fld1} daemon.notice] IMFD ERROR V-292-2-3030 %{fld2} from %{fld3} failed with error:%{result}" }
				id => "message-002598"
				add_field => {
					"[event][id]" => "002598"
					"[rsa][message][id1]" => "002598"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-update-utmp" {
		# MESSAGE 002564
		# line in RSA: <agent>[<process_id>]: Sent message type=<action> sender=<fld1> destination=<fld2> object=<directory> interface=<interface> member=<fld3> cookie=<fld4> reply_cookie=<fld5> error=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Sent message type=%{action} sender=%{fld1} destination=%{fld2} object=%{directory} interface=%{interface} member=%{fld3} cookie=%{fld4} reply_cookie=%{fld5} error=%{fld6}" }
				id => "message-002564"
				add_field => {
					"[event][id]" => "002564"
					"[rsa][message][id1]" => "002564"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002565
		# line in RSA: <agent>[<process_id>]: Got unexpected auxiliary data with <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Got unexpected auxiliary data with %{fld1}" }
				id => "message-002565"
				add_field => {
				"event_description" => "Got unexpected auxiliary data"
					"[event][id]" => "002565"
					"[rsa][message][id1]" => "002565"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002566
		# line in RSA: <agent>[<process_id>]: Failed to determine peer security context: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed to determine peer security context: %{result}" }
				id => "message-002566"
				add_field => {
				"event_description" => "Failed to determine peer security context"
					"[event][id]" => "002566"
					"[rsa][message][id1]" => "002566"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002567
		# line in RSA: <agent>[<process_id>]: systemd-update-utmp <result> as pid <parent_pid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: systemd-update-utmp %{result} as pid %{parent_pid}" }
				id => "message-002567"
				add_field => {
					"[event][id]" => "002567"
					"[rsa][message][id1]" => "002567"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "systemd-journald" {
		# MESSAGE 002568
		# line in RSA: <agent>[<process_id>]: Received <fld1> from PID <parent_pid> (<fld2>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received %{fld1} from PID %{parent_pid} (%{fld2})." }
				id => "message-002568"
				add_field => {
					"[event][id]" => "002568"
					"[rsa][message][id1]" => "002568"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002569
		# line in RSA: <agent>[<process_id>]: systemd-journald <result> as pid <parent_pid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: systemd-journald %{result} as pid %{parent_pid}" }
				id => "message-002569"
				add_field => {
					"[event][id]" => "002569"
					"[rsa][message][id1]" => "002569"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE systemd-journald
		# line in RSA: {<agent>[<process_id>]|<agent>}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]|(?<agent>[^:]*)):[\s]+(?<event_description>.*)$" }
				id => "message-systemd-journald"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "systemd-journald"
					"[rsa][message][id1]" => "systemd-journald"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2089
	# line in RSA: <agent>[<process_id>]: Not an EFI boot, exiting.
	else if [logstash][msgparser][id] == "msgParserId2089" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Not an EFI boot, exiting." }
			id => "msgParserId2089"
			add_field => {
				"event_description" => "Not an EFI boot"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2090
	# line in RSA: <agent>[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId2090" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
			id => "msgParserId2090"
			add_field => {
				"event_description" => "Not an EFI boot"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2091
	# line in RSA: [<process_id>]: [ID <id> <fld1>] <fld2> inside alarmHandler <info>
	else if [logstash][msgparser][id] == "msgParserId2091" {
		dissect {
			mapping => { "message" => "[%{process_id}]: [ID %{id} %{fld1}] %{fld2} inside alarmHandler %{info}" }
			id => "msgParserId2091"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2092
	# line in RSA: <agent>: Server Intelligence Agent: server <hostname> is being recycled.
	else if [logstash][msgparser][id] == "msgParserId2092" {
		dissect {
			mapping => { "message" => "%{agent}: Server Intelligence Agent: server %{hostname} is being recycled." }
			id => "msgParserId2092"
			add_field => {
				"event_description" => "server is being recycled"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "subscription-manager" {
		# MESSAGE 002575
		# line in RSA: <agent>: Unregistered machine with identity: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Unregistered machine with identity: %{info}" }
				id => "message-002575"
				add_field => {
				"event_description" => "Unregistered machine with identity"
					"[event][id]" => "002575"
					"[rsa][message][id1]" => "002575"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002576
		# line in RSA: <agent>: Registered system with identity: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Registered system with identity: %{info}" }
				id => "message-002576"
				add_field => {
				"event_description" => "Registered system with identity"
					"[event][id]" => "002576"
					"[rsa][message][id1]" => "002576"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002577
		# line in RSA: <agent>: Added subscription for <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Added subscription for %{info}" }
				id => "message-002577"
				add_field => {
				"event_description" => "Added subscription"
					"[event][id]" => "002577"
					"[rsa][message][id1]" => "002577"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002578
		# line in RSA: <agent>: Removed subscription for <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Removed subscription for %{info}" }
				id => "message-002578"
				add_field => {
				"event_description" => "Removed subscription"
					"[event][id]" => "002578"
					"[rsa][message][id1]" => "002578"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "nm-dispatcher" {
		# MESSAGE nm-dispatcher:03
		# line in RSA: <agent>: req:<fld1> '<action>' [<interface>], "<filename>": complete: failed with <error>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: req:%{fld1} '%{action}' [%{interface}], \"%{filename}\": complete: failed with %{error}" }
				id => "message-nm-dispatcher:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "nm-dispatcher:03"
					"[rsa][message][id1]" => "nm-dispatcher:03"
					"[event][categoryid]" => "1601000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE nm-dispatcher:02
		# line in RSA: <agent>: RTNETLINK answers: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: RTNETLINK answers: %{info}" }
				id => "message-nm-dispatcher:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "nm-dispatcher:02"
					"[rsa][message][id1]" => "nm-dispatcher:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE nm-dispatcher:01
		# line in RSA: <agent>: req:<fld1> {'<action>' [<interface>]|'<action>'}: new request (<dclass_counter1> scripts)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+req:(?<fld1>[^\s]*)[\s]+('(?<action>[^']*)'[\s]+\[(?<interface>[^\]]*)\]|'(?<action>[^']*)'):[\s]+new[\s]+request[\s]+\((?<dclass_counter1>[^\s]*)[\s]+scripts\)$" }
				id => "message-nm-dispatcher:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "nm-dispatcher:01"
					"[rsa][message][id1]" => "nm-dispatcher:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE nm-dispatcher
		# line in RSA: <agent>: req:<fld1> {'<action>' [<interface>]|'<action>'}: start running ordered scripts...
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+req:(?<fld1>[^\s]*)[\s]+('(?<action>[^']*)'[\s]+\[(?<interface>[^\]]*)\]|'(?<action>[^']*)'):[\s]+start[\s]+running[\s]+ordered[\s]+scripts\.\.\.$" }
				id => "message-nm-dispatcher"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "nm-dispatcher"
					"[rsa][message][id1]" => "nm-dispatcher"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002585
		# line in RSA: <agent>: <fld1>: {<event_description> (<fld2>) | <event_description>...}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<fld1>[^:]*):[\s]+((?<event_description>[^\s]*)[\s]+\((?<fld2>[^\)]*)\)[\s]+|[\s]*(?<event_description>[^\.]*)\.\.\.)$" }
				id => "message-002585"
				add_field => {
					"[event][id]" => "002585"
					"[rsa][message][id1]" => "002585"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2102
	# line in RSA: <agent>: {McAfee <service> service is already running. | <action> McAfee <service><fld1>}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId2103
	# line in RSA: <agent>[<process_id>]: Initializing CommAmqpListener
	else if [logstash][msgparser][id] == "msgParserId2103" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Initializing CommAmqpListener" }
			id => "msgParserId2103"
			add_field => {
				"event_description" => "Initializing CommAmqpListener"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2104
	# line in RSA: <agent>[<process_id>]: Initializing ManagementAgentHost
	else if [logstash][msgparser][id] == "msgParserId2104" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Initializing ManagementAgentHost" }
			id => "msgParserId2104"
			add_field => {
				"event_description" => "Initializing ManagementAgentHost"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "abrt-harvest-vmcore" {
		# MESSAGE 002589
		# line in RSA: <agent>: VMCore dir '<directory>' not accessible.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: VMCore dir '%{directory}' not accessible." }
				id => "message-002589"
				add_field => {
				"event_description" => "VMCore dir not accessible"
					"[event][id]" => "002589"
					"[rsa][message][id1]" => "002589"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE abrt-harvest-vmcore:01
		# line in RSA: <agent>: VMCore dir '<directory>' doesn't contain 'vmcore' file.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: VMCore dir '%{directory}' doesn't contain 'vmcore' file." }
				id => "message-abrt-harvest-vmcore:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "abrt-harvest-vmcore:01"
					"[rsa][message][id1]" => "abrt-harvest-vmcore:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2107
	# line in RSA: <agent>: <fld1>: No matching sessions found
	else if [logstash][msgparser][id] == "msgParserId2107" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1}: No matching sessions found" }
			id => "msgParserId2107"
			add_field => {
				"event_description" => "No matching sessions found"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2109
	# line in RSA: <agent>[<process_id>]: Sending SIGTERM to remaining processes...
	else if [logstash][msgparser][id] == "msgParserId2109" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Sending SIGTERM to remaining processes..." }
			id => "msgParserId2109"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2110
	# line in RSA: <agent>[<process_id>]: Failed to accept connection errno <fld1>.
	else if [logstash][msgparser][id] == "msgParserId2110" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Failed to accept connection errno %{fld1}." }
			id => "msgParserId2110"
			add_field => {
				"event_description" => "Failed to accept connection"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2111
	# line in RSA: <agent>: <info>
	else if [logstash][msgparser][id] == "msgParserId2111" {
		dissect {
			mapping => { "message" => "%{agent}: %{info}" }
			id => "msgParserId2111"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2112
	# line in RSA:  reason: user initiated stop
	else if [logstash][msgparser][id] == "msgParserId2112" {
		dissect {
			mapping => { "message" => "reason: user initiated stop" }
			id => "msgParserId2112"
			add_field => {
				"result" => "user initiated stop"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2113
	# line in RSA: <agent>: [ID <fld1> kern.<severity>] ACPI: <info>
	else if [logstash][msgparser][id] == "msgParserId2113" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{fld1} kern.%{severity}] ACPI: %{info}" }
			id => "msgParserId2113"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2114
	# line in RSA: <agent>: [ID <fld1> kern.<severity>] NOTICE: apic: <info>
	else if [logstash][msgparser][id] == "msgParserId2114" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{fld1} kern.%{severity}] NOTICE: apic: %{info}" }
			id => "msgParserId2114"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2115
	# line in RSA: <agent>: [ID <fld1> kern.<severity>] NOTICE: ahci0: <info>
	else if [logstash][msgparser][id] == "msgParserId2115" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{fld1} kern.%{severity}] NOTICE: ahci0: %{info}" }
			id => "msgParserId2115"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2116
	# line in RSA: <agent>: [ID <fld1> kern.<severity>] <info>
	else if [logstash][msgparser][id] == "msgParserId2116" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{fld1} kern.%{severity}] %{info}" }
			id => "msgParserId2116"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2117
	# line in RSA: <agent>: [ID <fld1> kern.<severity>] NOTICE: fcsm(<fld2>): <info>
	else if [logstash][msgparser][id] == "msgParserId2117" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{fld1} kern.%{severity}] NOTICE: fcsm(%{fld2}): %{info}" }
			id => "msgParserId2117"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Authentication" {
		# MESSAGE 002604
		# line in RSA: Authentication: [ID <fld1> auth.<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication: [ID %{fld1} auth.%{severity}] %{info}" }
				id => "message-002604"
				add_field => {
					"[event][id]" => "002604"
					"[rsa][message][id1]" => "002604"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE Authentication:01
		# line in RSA: <agent>[<fld21>]: <fld22> Authentication Agent for unix-process:<process_id>:<fld1>({system bus name :<fld2>[<action>]|system bus name :<fld2>}, object path<directory>, {locale<fld3>) <info>|locale<fld3>)}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<fld21>[^\]]*)\]:[\s]+(?<fld22>[^\s]*)[\s]+Authentication[\s]+Agent[\s]+for[\s]+unix\-process:(?<process_id>[^:]*):(?<fld1>[^\(]*)\((system[\s]+bus[\s]+name[\s]+:(?<fld2>[^\[]*)\[(?<action>[^\]]*)\]|system[\s]+bus[\s]+name[\s]+:(?<fld2>[^,]*)),[\s]+object[\s]+path(?<directory>[^,]*),[\s]+(locale(?<fld3>[^\)]*)\)[\s]+(?<info>.*)|locale(?<fld3>[^\)]*)\))$" }
				id => "message-Authentication:01"
				add_field => {
					"[event][id]" => "Authentication:01"
					"[rsa][message][id1]" => "Authentication:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2120
	# line in RSA: <agent>[<process_id>]: sqlite_query_reclaiming: unable to prepare select statement: no such column: has_session
	else if [logstash][msgparser][id] == "msgParserId2120" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: sqlite_query_reclaiming: unable to prepare select statement: no such column: has_session" }
			id => "msgParserId2120"
			add_field => {
				"event_description" => "unable to prepare select statement"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "nailsd-f" {
		# MESSAGE 002608
		# line in RSA: <agent>[<process_id>]: sendMessage <bytes> bytes write to fd <fld1> error <fld2> <fld3> Broken pipe version=<version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sendMessage %{bytes} bytes write to fd %{fld1} error %{fld2} %{fld3} Broken pipe version=%{version}" }
				id => "message-002608"
				add_field => {
					"[event][id]" => "002608"
					"[rsa][message][id1]" => "002608"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002609
		# line in RSA: <agent>[<process_id>]: failed to send response to <fld1> ecode=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: failed to send response to %{fld1} ecode=%{result}" }
				id => "message-002609"
				add_field => {
					"[event][id]" => "002609"
					"[rsa][message][id1]" => "002609"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2123
	# line in RSA: <agent>[<process_id>]: <fld1> backup job for database <fld2> has completed
	else if [logstash][msgparser][id] == "msgParserId2123" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} backup job for database %{fld2} has completed" }
			id => "msgParserId2123"
			add_field => {
				"event_description" => "backup job for database has completed"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "abrt-hook-ccpp" {
		# MESSAGE 002611
		# line in RSA: <agent>: Process <process_id> (<fld2>) of user <username> killed by <fld1> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Process %{process_id} (%{fld2}) of user %{username} killed by %{fld1} - %{result}" }
				id => "message-002611"
				add_field => {
					"[event][id]" => "002611"
					"[rsa][message][id1]" => "002611"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002611:01
		# line in RSA: <agent>: Saved core dump of pid <process_id> to <fld1>at <fld2> (<bytes> bytes) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Saved core dump of pid %{process_id} to %{fld1}at %{fld2} (%{bytes} bytes)" }
				id => "message-002611:01"
				add_field => {
					"[event][id]" => "002611:01"
					"[rsa][message][id1]" => "002611:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002612
		# line in RSA: <agent>: Failed to create <fld1>: <fld2> failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Failed to create %{fld1}: %{fld2} failed: %{result}" }
				id => "message-002612"
				add_field => {
					"[event][id]" => "002612"
					"[rsa][message][id1]" => "002612"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2127
	# line in RSA: <agent>: imfile warning: directory '<directory>': No such file or directory [<fld1>]
	else if [logstash][msgparser][id] == "msgParserId2127" {
		dissect {
			mapping => { "message" => "%{agent}: imfile warning: directory '%{directory}': No such file or directory [%{fld1}]" }
			id => "msgParserId2127"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2128
	# line in RSA: <agent>[<process_id>]: <product> version <version> AgentX subagent connected
	else if [logstash][msgparser][id] == "msgParserId2128" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{product} version %{version} AgentX subagent connected" }
			id => "msgParserId2128"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "AgentX subagent connected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "discagent" {
		# MESSAGE 002619:02
		# line in RSA: <agent>[<process_id>]: error: <resultcode>:SSL routines:<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: error: %{resultcode}:SSL routines:%{info}\"" }
				id => "message-002619:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SSL auth error"
					"[event][id]" => "002619:02"
					"[rsa][message][id1]" => "002619:02"
					"[event][categoryid]" => "1303000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002619:03
		# line in RSA: <agent>[<process_id>]: Detail: SSL_accept() failed in soap_ssl_accept()
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Detail: SSL_accept() failed in soap_ssl_accept()" }
				id => "message-002619:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SSL_accept() failed in soap_ssl_accept()"
					"[event][id]" => "002619:03"
					"[rsa][message][id1]" => "002619:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002619:04
		# line in RSA: <agent>[<process_id>]: SSL request failed, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SSL request failed, %{info}" }
				id => "message-002619:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SSL request failed"
					"[event][id]" => "002619:04"
					"[rsa][message][id1]" => "002619:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002619:05
		# line in RSA: <agent>[<process_id>]: "SSL_ERROR_SSL
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: \"SSL_ERROR_SSL" }
				id => "message-002619:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SSL error"
					"[event][id]" => "002619:05"
					"[rsa][message][id1]" => "002619:05"
					"[event][categoryid]" => "1303000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002619:06
		# line in RSA: <agent>[<process_id>]: SOAP 1.1 fault: SOAP-ENV:<fld1> [<fld2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SOAP 1.1 fault: SOAP-ENV:%{fld1} [%{fld2}]" }
				id => "message-002619:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SOAP 1.1 fault"
					"[event][id]" => "002619:06"
					"[rsa][message][id1]" => "002619:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 002619:07
		# line in RSA: <agent>[<process_id>]: "Error observed by underlying BIO: <event_state>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: \"Error observed by underlying BIO: %{event_state}\"" }
				id => "message-002619:07"
				add_field => {
				"hostname" => "%{hhost}"
				"info" => "Error observed by underlying BIO"
					"[event][id]" => "002619:07"
					"[rsa][message][id1]" => "002619:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2135
	# line in RSA: <agent>:<fld1>
	else if [logstash][msgparser][id] == "msgParserId2135" {
		dissect {
			mapping => { "message" => "%{agent}:%{fld1}" }
			id => "msgParserId2135"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2137
	# line in RSA: <agent> <fld1>
	else if [logstash][msgparser][id] == "msgParserId2137" {
		dissect {
			mapping => { "message" => "%{agent} %{fld1}" }
			id => "msgParserId2137"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "vmmd" {
		# MESSAGE vmmd
		# line in RSA: <agent>[<process_id>]: tid <fld1>: [<severity>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld1}: [%{severity}]: %{event_description}" }
				id => "message-vmmd"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "vmmd"
					"[rsa][message][id1]" => "vmmd"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE vmmd:02
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-vmmd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "vmmd:02"
					"[rsa][message][id1]" => "vmmd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "notifyd" {
		# MESSAGE notifyd:01
		# line in RSA: <agent>[<process_id>]: [<severity>]-security content version is:<content_version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]-security content version is:%{content_version}" }
				id => "message-notifyd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "notifyd:01"
					"[rsa][message][id1]" => "notifyd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE notifyd:02
		# line in RSA: <agent>[<process_id>]: tid<fld2>: [<severity>]: [<fld1>]unexpected condition, exiting:[<fld3>] mgmtd has re-launched since last time. previous id:<fld4>current id:<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: tid%{fld2}: [%{severity}]: [%{fld1}]unexpected condition, exiting:[%{fld3}] mgmtd has re-launched since last time. previous id:%{fld4}current id:%{fld5}" }
				id => "message-notifyd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "notifyd:02"
					"[rsa][message][id1]" => "notifyd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE notifyd:03
		# line in RSA: <agent>[<fld1>]: tid <fld2>: [<severity>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: tid %{fld2}: [%{severity}]: %{info}" }
				id => "message-notifyd:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "notifyd:03"
					"[rsa][message][id1]" => "notifyd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE notifyd:04
		# line in RSA: <agent>[<fld1>]: <fld2> end_time:<fld3> time_cost:<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{fld1}]: %{fld2} end_time:%{fld3} time_cost:%{fld4}" }
				id => "message-notifyd:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "notifyd:04"
					"[rsa][message][id1]" => "notifyd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2144
	# line in RSA: <agent>[<process_id>]: { [<severity>]: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId2144" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\[(?<severity>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId2144"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2145
	# line in RSA: <agent>[<process_id>]: tid <fld2>: [<severity>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2145" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: tid %{fld2}: [%{severity}]: %{event_description}" }
			id => "msgParserId2145"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2146
	# line in RSA: <agent>[<process_id>]: [<severity>]: <event_type>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2146" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}]: %{event_type}: %{event_description}" }
			id => "msgParserId2146"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1988
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1988" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId1988"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ndmcmgr" {
		# MESSAGE ndmcmgr
		# line in RSA: <agent>: pam_securetty(<service>):<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_securetty(%{service}):%{event_description}" }
				id => "message-ndmcmgr"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ndmcmgr"
					"[rsa][message][id1]" => "ndmcmgr"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ndmcmgr:01
		# line in RSA: <agent>: pam_tally2(<service>):<fld1> ; no such user
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally2(%{service}):%{fld1} ; no such user" }
				id => "message-ndmcmgr:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ndmcmgr:01"
					"[rsa][message][id1]" => "ndmcmgr:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ndmcmgr:02
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>):<fld1> ; user unknown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}):%{fld1} ; user unknown" }
				id => "message-ndmcmgr:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ndmcmgr:02"
					"[rsa][message][id1]" => "ndmcmgr:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ndmcmgr:03
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): authentication failure; logname=<fld1> uid=<uid> euid=<fld2> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): authentication failure; logname=%{fld1} uid=%{uid} euid=%{fld2} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-ndmcmgr:03"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "ndmcmgr:03"
					"[rsa][message][id1]" => "ndmcmgr:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ndmcmgr:04
		# line in RSA: <agent>[<process_id>]: pam_namespace(<service>): user unknown '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_namespace(%{service}): user unknown '%{username}'" }
				id => "message-ndmcmgr:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ndmcmgr:04"
					"[rsa][message][id1]" => "ndmcmgr:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ndmcmgr:05
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-ndmcmgr:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "ndmcmgr:05"
					"[rsa][message][id1]" => "ndmcmgr:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2155
	# line in RSA: <agent>]: ADcheck[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2155" {
		dissect {
			mapping => { "message" => "%{agent}]: ADcheck[%{process_id}]: %{event_description}" }
			id => "msgParserId2155"
			add_field => {
				"process" => "ADcheck"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2156
	# line in RSA: <agent>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2156" {
		dissect {
			mapping => { "message" => "%{agent}]: %{event_description}" }
			id => "msgParserId2156"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SYNCSSH" {
		# MESSAGE Get_Keys
		# line in RSA: <agent>]: Get_Keys <event_state> {(delay <fld1>)|- <action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\]]*)\]:[\s]+Get_Keys[\s]+(?<event_state>[^\s]*)[\s]+(\(delay[\s]+(?<fld1>[^\)]*)\)|\-[\s]+(?<action>.*))$" }
				id => "message-Get_Keys"
				add_field => {
				"event_description" => "Get_Keys"
					"[event][id]" => "Get_Keys"
					"[rsa][message][id1]" => "Get_Keys"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Connected
		# line in RSA: <agent>]: Connected to <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}]: Connected to %{url}" }
				id => "message-Connected"
				add_field => {
				"event_description" => "connected"
					"[event][id]" => "Connected"
					"[rsa][message][id1]" => "Connected"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SYNCSSH
		# line in RSA: <agent>]: Not found: <filename> <process>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}]: Not found: %{filename} %{process}" }
				id => "message-SYNCSSH"
				add_field => {
				"result" => "Not found"
					"[event][id]" => "SYNCSSH"
					"[rsa][message][id1]" => "SYNCSSH"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SYNCSSH:01
		# line in RSA: <agent>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}]: %{event_description}" }
				id => "message-SYNCSSH:01"
				add_field => {
					"[event][id]" => "SYNCSSH:01"
					"[rsa][message][id1]" => "SYNCSSH:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2161
	# line in RSA: <agent>]: <disposition>
	else if [logstash][msgparser][id] == "msgParserId2161" {
		dissect {
			mapping => { "message" => "%{agent}]: %{disposition}" }
			id => "msgParserId2161"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2162
	# line in RSA: <product>: <agent>: <filename> is safe
	else if [logstash][msgparser][id] == "msgParserId2162" {
		dissect {
			mapping => { "message" => "%{product}: %{agent}: %{filename} is safe" }
			id => "msgParserId2162"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2163
	# line in RSA: <product>: Script <process> version <version> <event_state> by <username> from PID <process_id> on <fld1>_<fld2>
	else if [logstash][msgparser][id] == "msgParserId2163" {
		dissect {
			mapping => { "message" => "%{product}: Script %{process} version %{version} %{event_state} by %{username} from PID %{process_id} on %{fld1}_%{fld2}" }
			id => "msgParserId2163"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2164
	# line in RSA: {<agent>[<process_id>]|<agent>}: <event_description>
	else if [logstash][msgparser][id] == "msgParserId2164" {
		grok {
			match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]|(?<agent>[^:]*)):[\s]+(?<event_description>.*)$" }
			id => "msgParserId2164"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "udcs" {
		# MESSAGE udcs:01
		# line in RSA: <agent>: PAM unable to dlopen(<filename>): <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM unable to dlopen(%{filename}): %{fld1}" }
				id => "message-udcs:01"
				add_field => {
				"event_description" => "PAM unable to dlopen"
					"[event][id]" => "udcs:01"
					"[rsa][message][id1]" => "udcs:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE udcs:02
		# line in RSA: <agent>: PAM adding faulty module: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM adding faulty module: %{filename}" }
				id => "message-udcs:02"
				add_field => {
				"event_description" => "PAM adding faulty module"
					"[event][id]" => "udcs:02"
					"[rsa][message][id1]" => "udcs:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE udcs
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<<fld2>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <%{fld2}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: <%{result}>" }
				id => "message-udcs"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "udcs"
					"[rsa][message][id1]" => "udcs"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "defcs" {
		# MESSAGE defcs:01
		# line in RSA: <agent>: PAM unable to dlopen(<filename>): <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM unable to dlopen(%{filename}): %{fld1}" }
				id => "message-defcs:01"
				add_field => {
				"event_description" => "PAM unable to dlopen"
					"[event][id]" => "defcs:01"
					"[rsa][message][id1]" => "defcs:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE defcs:02
		# line in RSA: <agent>: PAM adding faulty module: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM adding faulty module: %{filename}" }
				id => "message-defcs:02"
				add_field => {
				"event_description" => "PAM adding faulty module"
					"[event][id]" => "defcs:02"
					"[rsa][message][id1]" => "defcs:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE defcs
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<<fld2>> for <<<event_type>> user: <<<username>> account: <<<c_username>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_vas: Authentication <%{fld2}> for <%{event_type}> user: <%{username}> account: <%{c_username}> service: <%{service}> reason: <%{result}>" }
				id => "message-defcs"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "defcs"
					"[rsa][message][id1]" => "defcs"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2069
	# line in RSA: <agent>: <fld1>
	else if [logstash][msgparser][id] == "msgParserId2069" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1}" }
			id => "msgParserId2069"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "NwBroker" {
		# MESSAGE NwBroker:01
		# line in RSA: <agent>[<process_id>]: pam_krb5[<fld1>]: authentication succeeds for '<username>' (<mail_id>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_krb5[%{fld1}]: authentication succeeds for '%{username}' (%{mail_id})" }
				id => "message-NwBroker:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "authentication successful"
					"[event][id]" => "NwBroker:01"
					"[rsa][message][id1]" => "NwBroker:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE NwBroker
		# line in RSA: <agent>[<process_id>]: pam_krb5[<fld1>]:{<event_description>(<mail_id>)|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_krb5\[(?<fld1>[^\]]*)\]:((?<event_description>[^\(]*)\((?<mail_id>[^\)]*)\)|(?<event_description>.*))$" }
				id => "message-NwBroker"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "NwBroker"
					"[rsa][message][id1]" => "NwBroker"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2170
	# line in RSA: <agent>[<process_id>]: {{"deviceVendor":"<fld1>","deviceProduct":"<product>","deviceService":"<service>","deviceVersion":"<version>","identity":"<id>","sourceAddress":"<saddr>:<sport>","sessionId":<sessionid>,"category":"<category>","operation":"<fld2>","outcome":"<fld3>"}
	else if [logstash][msgparser][id] == "msgParserId2170" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\{\"deviceVendor\":\"(?<fld1>[^\"]*)\",\"deviceProduct\":\"(?<product>[^\"]*)\",\"deviceService\":\"(?<service>[^\"]*)\",\"deviceVersion\":\"(?<version>[^\"]*)\",\"identity\":\"(?<id>[^\"]*)\",\"sourceAddress\":\"(?<saddr>[^:]*):(?<sport>[^\"]*)\",\"sessionId\":(?<sessionid>[^,]*),\"category\":\"(?<category>[^\"]*)\",\"operation\":\"(?<fld2>[^\"]*)\",\"outcome\":\"(?<fld3>[^\"]*)\"\}$" }
			id => "msgParserId2170"
			add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "usaclean" {
		# MESSAGE usaclean
		# line in RSA: <agent>[<process_id>]:<fld1>:<space> db_op=<fld2>,<space>userID=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{fld1}:%{space} db_op=%{fld2},%{space}userID=%{username}" }
				id => "message-usaclean"
				add_field => {
					"[event][id]" => "usaclean"
					"[rsa][message][id1]" => "usaclean"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE usaclean:01
		# line in RSA: <agent>[<process_id>]: User is <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User is %{username}" }
				id => "message-usaclean:01"
				add_field => {
					"[event][id]" => "usaclean:01"
					"[rsa][message][id1]" => "usaclean:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE usaclean:02
		# line in RSA: {<agent>[<process_id>]|<agent>}:<fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]|(?<agent>[^:]*)):(?<fld1>.*)$" }
				id => "message-usaclean:02"
				add_field => {
					"[event][id]" => "usaclean:02"
					"[rsa][message][id1]" => "usaclean:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId539
	# line in RSA: <agent>: <fld1>
	else if [logstash][msgparser][id] == "msgParserId539" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1}" }
			id => "msgParserId539"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2176
	# line in RSA: <agent>[<fld21>]: {[ID<id>auth.notice] <fld1>|<fld1>}(service=<service>, terminal=<terminal>, user=<username>, ruser=<c_username>, rhost=<shost>)
	else if [logstash][msgparser][id] == "msgParserId2176" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<fld21>[^\]]*)\]:[\s]+(\[ID(?<id>[^a]*)auth\.notice\][\s]+(?<fld1>[^\(]*)|(?<fld1>[^\(]*))\(service=(?<service>[^,]*),[\s]+terminal=(?<terminal>[^,]*),[\s]+user=(?<username>[^,]*),[\s]+ruser=(?<c_username>[^,]*),[\s]+rhost=(?<shost>[^\)]*)\)$" }
			id => "msgParserId2176"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2177
	# line in RSA: <agent>[<fld21>]: run command: [<action>]
	else if [logstash][msgparser][id] == "msgParserId2177" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld21}]: run command: [%{action}]" }
			id => "msgParserId2177"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2178
	# line in RSA: <agent>[<process_id>]: <fld1>
	else if [logstash][msgparser][id] == "msgParserId2178" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
			id => "msgParserId2178"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2179
	# line in RSA: <agent>: { <severity>: You have modified <filename> <fld1> | You can find my version in <filename> }
	else if [logstash][msgparser][id] == "msgParserId2179" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+([\s]*(?<severity>[^:]*):[\s]+You[\s]+have[\s]+modified[\s]+(?<filename>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+|[\s]*You[\s]+can[\s]+find[\s]+my[\s]+version[\s]+in[\s]+(?<filename>[^\s]*)[\s]+)$" }
			id => "msgParserId2179"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2180
	# line in RSA: <agent>[<process_id>]: <interface><disposition>
	else if [logstash][msgparser][id] == "msgParserId2180" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface}%{disposition}" }
			id => "msgParserId2180"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "wickedd" {
		# MESSAGE wickedd:01
		# line in RSA: <agent>[<process_id>]: route <hostip> via <saddr> dev <interface> <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: route %{hostip} via %{saddr} dev %{interface} %{fld1}" }
				id => "message-wickedd:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "wickedd:01"
					"[rsa][message][id1]" => "wickedd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE wickedd:02
		# line in RSA: <agent>[<process_id>]: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}" }
				id => "message-wickedd:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "wickedd:02"
					"[rsa][message][id1]" => "wickedd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "dscs" {
		# MESSAGE dscs:01
		# line in RSA: <agent>: pam_tally2(<service>): user <username> (<fld1>) tally <fld2>, deny <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pam_tally2(%{service}): user %{username} (%{fld1}) tally %{fld2}, deny %{fld3}" }
				id => "message-dscs:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "dscs:01"
					"[rsa][message][id1]" => "dscs:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE dscs:02
		# line in RSA: <agent>[<process_id>]: pam_vas: Authentication <<succeeded> for <<<event_type>> user: <<<username>> account: {<<<domain>\<c_username>>|<<<c_username>>} service: <<<service>> reason: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+pam_vas:[\s]+Authentication[\s]+<succeeded>[\s]+for[\s]+<(?<event_type>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+(<(?<domain>[^\\]*)\\(?<c_username>[^>]*)>|<(?<c_username>[^>]*)>)[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+(?<result>.*)$" }
				id => "message-dscs:02"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "dscs:02"
					"[rsa][message][id1]" => "dscs:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2183
	# line in RSA: <agent> {[<fld1>] [<severity>] [<process>] <event_description> for <protocol>/<hostname>|<fld2>} 
	else if [logstash][msgparser][id] == "msgParserId2183" {
		grok {
			match => { "message" => "^(?<agent>[^\s]*)[\s]+(\[(?<fld1>[^\]]*)\][\s]+\[(?<severity>[^\]]*)\][\s]+\[(?<process>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+for[\s]+(?<protocol>[^/]*)/(?<hostname>[^\s]*)|(?<fld2>[^\s]*))[\s]+$" }
			id => "msgParserId2183"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2184
	# line in RSA: <fld1>
	else if [logstash][msgparser][id] == "msgParserId2184" {
		dissect {
			mapping => { "message" => "%{fld1}" }
			id => "msgParserId2184"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "RESTORE_MSG" {
		# MESSAGE RESTORE_MSG:01
		# line in RSA: {FAIL_GATE|MasterObjectServer} running as <fld1> has been restored on <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(FAIL_GATE|MasterObjectServer)[\s]+running[\s]+as[\s]+(?<fld1>[^\s]*)[\s]+has[\s]+been[\s]+restored[\s]+on[\s]+(?<hostname>.*)$" }
				id => "message-RESTORE_MSG:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "RESTORE_MSG:01"
					"[rsa][message][id1]" => "RESTORE_MSG:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE RESTORE_MSG:02
		# line in RSA: {<fld1> running as <fld2> has been restored on <hostname>|<fld3>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld1>[^\s]*)[\s]+running[\s]+as[\s]+(?<fld2>[^\s]*)[\s]+has[\s]+been[\s]+restored[\s]+on[\s]+(?<hostname>.*)|(?<fld3>.*))$" }
				id => "message-RESTORE_MSG:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "RESTORE_MSG:02"
					"[rsa][message][id1]" => "RESTORE_MSG:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId2187
	# line in RSA: <agent>[<fld4>]: {[<fld2>]: ping_probe running as <fld1> has been restored on <hostip>|[<fld2>]: <fld5>|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId2187" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<fld4>[^\]]*)\]:[\s]+(\[(?<fld2>[^\]]*)\]:[\s]+ping_probe[\s]+running[\s]+as[\s]+(?<fld1>[^\s]*)[\s]+has[\s]+been[\s]+restored[\s]+on[\s]+(?<hostip>.*)|\[(?<fld2>[^\]]*)\]:[\s]+(?<fld5>.*)|(?<event_description>.*))$" }
			id => "msgParserId2187"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2188
	# line in RSA: <agent>[<fld4>]:<event_description>
	else if [logstash][msgparser][id] == "msgParserId2188" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld4}]:%{event_description}" }
			id => "msgParserId2188"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2189
	# line in RSA: <agent>{: <fld1>|<fld2>}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
	else if [logstash][msgparser][id] == "ipsrd" {
		# MESSAGE ipsrd:01
		# line in RSA: <agent>[<process_id>]: <service>: {discarded packet from <hostip> attempting to take over interface <interface>, VRID <fld1> while local router is master | interface <interface>, VRID <fld2>: state=<fld3>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<service>[^:]*):[\s]+(discarded[\s]+packet[\s]+from[\s]+(?<hostip>[^\s]*)[\s]+attempting[\s]+to[\s]+take[\s]+over[\s]+interface[\s]+(?<interface>[^,]*),[\s]+VRID[\s]+(?<fld1>[^\s]*)[\s]+while[\s]+local[\s]+router[\s]+is[\s]+master[\s]+|[\s]*interface[\s]+(?<interface>[^,]*),[\s]+VRID[\s]+(?<fld2>[^:]*):[\s]+state=(?<fld3>.*))$" }
				id => "message-ipsrd:01"
				add_field => {
					"[event][id]" => "ipsrd:01"
					"[rsa][message][id1]" => "ipsrd:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ipsrd:04
		# line in RSA: <agent>[<process_id>]: {Exit|Start} <fld1>[<fld2>] <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Exit|Start)[\s]+(?<fld1>[^\[]*)\[(?<fld2>[^\]]*)\][\s]+(?<info>.*)$" }
				id => "message-ipsrd:04"
				add_field => {
					"[event][id]" => "ipsrd:04"
					"[rsa][message][id1]" => "ipsrd:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ipsrd:02
		# line in RSA: <agent>[<process_id>]: <service>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: %{event_description}" }
				id => "message-ipsrd:02"
				add_field => {
					"[event][id]" => "ipsrd:02"
					"[rsa][message][id1]" => "ipsrd:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ipsrd:03
		# line in RSA: <agent>[<process_id>]: {task_reconfigure re-initializing from <filename>|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(task_reconfigure[\s]+re\-initializing[\s]+from[\s]+(?<filename>.*)|(?<info>.*))$" }
				id => "message-ipsrd:03"
				add_field => {
					"[event][id]" => "ipsrd:03"
					"[rsa][message][id1]" => "ipsrd:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd-x" {
		# MESSAGE sshd-x:01
		# line in RSA: <agent>[<process_id>]: Accepted keyboard-interactive/pam for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted keyboard-interactive/pam for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-sshd-x:01"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "sshd-x:01"
					"[rsa][message][id1]" => "sshd-x:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sshd-x:02
		# line in RSA: <agent>[<process_id>]: in <fld1>: (<process>) session {opened|closed} for {user <username> by <c_username>(uid=<uid>)|user <username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+in[\s]+(?<fld1>[^:]*):[\s]+\((?<process>[^\)]*)\)[\s]+session[\s]+(opened|closed)[\s]+for[\s]+(user[\s]+(?<username>[^\s]*)[\s]+by[\s]+(?<c_username>[^\(]*)\(uid=(?<uid>[^\)]*)\)|user[\s]+(?<username>.*))$" }
				id => "message-sshd-x:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "sshd-x:02"
					"[rsa][message][id1]" => "sshd-x:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2197
	# line in RSA: <agent>: <fld1>: User <username> pressed button {apply|save} on page <fld2> 
	else if [logstash][msgparser][id] == "msgParserId2197" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<fld1>[^:]*):[\s]+User[\s]+(?<username>[^\s]*)[\s]+pressed[\s]+button[\s]+(apply|save)[\s]+on[\s]+page[\s]+(?<fld2>[^\s]*)[\s]+$" }
			id => "msgParserId2197"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "clusterd" {
		# MESSAGE clusterd:01
		# line in RSA: <agent>[<process_id>]: Member(<hostip>) member id(<fld1>) left cluster(<fld2>):
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Member(%{hostip}) member id(%{fld1}) left cluster(%{fld2}):" }
				id => "message-clusterd:01"
				add_field => {
					"[event][id]" => "clusterd:01"
					"[rsa][message][id1]" => "clusterd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE clusterd:02
		# line in RSA: <agent>[<process_id>]: New member(<hostip>) joined cluster(<fld1>) with member id(<fld2>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: New member(%{hostip}) joined cluster(%{fld1}) with member id(%{fld2})." }
				id => "message-clusterd:02"
				add_field => {
					"[event][id]" => "clusterd:02"
					"[rsa][message][id1]" => "clusterd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2202
	# line in RSA: <agent>[<fld1>]: <fld2>
	else if [logstash][msgparser][id] == "msgParserId2202" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld1}]: %{fld2}" }
			id => "msgParserId2202"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2203
	# line in RSA: <agent>: <fld1>
	else if [logstash][msgparser][id] == "msgParserId2203" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1}" }
			id => "msgParserId2203"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2204
	# line in RSA: {-<fld1>-<agent>|<agent>}: <fld1> IP:<saddr> Socket:<fld2> DeviceType:<info>
	else if [logstash][msgparser][id] == "msgParserId2204" {
		grok {
			match => { "message" => "^(\-(?<fld1>[^\-]*)\-(?<agent>[^:]*)|(?<agent>[^:]*)):[\s]+(?<fld1>[^\s]*)[\s]+IP:(?<saddr>[^\s]*)[\s]+Socket:(?<fld2>[^\s]*)[\s]+DeviceType:(?<info>.*)$" }
			id => "msgParserId2204"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2205
	# line in RSA: <agent>: <info>
	else if [logstash][msgparser][id] == "msgParserId2205" {
		dissect {
			mapping => { "message" => "%{agent}: %{info}" }
			id => "msgParserId2205"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2206
	# line in RSA: <fld1>: <info>
	else if [logstash][msgparser][id] == "msgParserId2206" {
		dissect {
			mapping => { "message" => "%{fld1}: %{info}" }
			id => "msgParserId2206"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2207
	# line in RSA: <agent>[<fld1>]: <info>
	else if [logstash][msgparser][id] == "msgParserId2207" {
		dissect {
			mapping => { "message" => "%{agent}[%{fld1}]: %{info}" }
			id => "msgParserId2207"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2208
	# line in RSA: <agent>(<service>): <fld1>
	else if [logstash][msgparser][id] == "msgParserId2208" {
		dissect {
			mapping => { "message" => "%{agent}(%{service}): %{fld1}" }
			id => "msgParserId2208"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2209
	# line in RSA: <agent>: time="<fld1>" level=<severity> msg="<info>"
	else if [logstash][msgparser][id] == "msgParserId2209" {
		dissect {
			mapping => { "message" => "%{agent}: time=\"%{fld1}\" level=%{severity} msg=\"%{info}\"" }
			id => "msgParserId2209"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2210
	# line in RSA: <agent>: time=<fld1> level=<severity> msg="<info>"
	else if [logstash][msgparser][id] == "msgParserId2210" {
		dissect {
			mapping => { "message" => "%{agent}: time=%{fld1} level=%{severity} msg=\"%{info}\"" }
			id => "msgParserId2210"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2211
	# line in RSA: <agent>[<process_id>]: <application>: name '<username>' does not map into domain '<domain>'
	else if [logstash][msgparser][id] == "msgParserId2211" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: name '%{username}' does not map into domain '%{domain}'" }
			id => "msgParserId2211"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2212
	# line in RSA: <fld1>[<fld2>]: host name not found: <shost>
	else if [logstash][msgparser][id] == "msgParserId2212" {
		dissect {
			mapping => { "message" => "%{fld1}[%{fld2}]: host name not found: %{shost}" }
			id => "msgParserId2212"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "host name not found"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2213
	# line in RSA: <agent>:<fld1>
	else if [logstash][msgparser][id] == "msgParserId2213" {
		dissect {
			mapping => { "message" => "%{agent}:%{fld1}" }
			id => "msgParserId2213"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2214
	# line in RSA: {<fld1>/<fld2> Mobile|<fld2> Mobile} Safari/<version>" "<fld3>"
	else if [logstash][msgparser][id] == "msgParserId2214" {
		grok {
			match => { "message" => "^((?<fld1>[^/]*)/(?<fld2>[^\s]*)[\s]+Mobile|(?<fld2>[^\s]*)[\s]+Mobile)[\s]+Safari/(?<version>[^\"]*)\"[\s]+\"(?<fld3>[^\"]*)\"$" }
			id => "msgParserId2214"
			add_field => {
				"hostname" => "%{hhost}"
				"application" => "Mobile Safari"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2215
	# line in RSA: <agent>: Runing the script as '<filename>' at <fld1> as user <username> 
	else if [logstash][msgparser][id] == "msgParserId2215" {
		dissect {
			mapping => { "message" => "%{agent}: Runing the script as '%{filename}' at %{fld1} as user %{username}" }
			id => "msgParserId2215"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2216
	# line in RSA: <event_type> msg=<agent>(<info>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId2216" {
		dissect {
			mapping => { "message" => "%{event_type} msg=%{agent}(%{info}): %{event_description}" }
			id => "msgParserId2216"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2} %{hfld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "uxauthd" {
		# MESSAGE uxauthd
		# line in RSA: <agent>[<process_id>]:{[ID<info>] Looking|Looking}for user '<username>' in '<fld1>' as<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:(\[ID(?<info>[^\]]*)\][\s]+Looking|Looking)for[\s]+user[\s]+'(?<username>[^']*)'[\s]+in[\s]+'(?<fld1>[^']*)'[\s]+as(?<fld2>.*)$" }
				id => "message-uxauthd"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "uxauthd"
					"[rsa][message][id1]" => "uxauthd"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE uxauthd:01
		# line in RSA: <agent>[<process_id>]: User<username>log in denied based on local exception list.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User%{username}log in denied based on local exception list." }
				id => "message-uxauthd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User log in denied based on local exception list"
					"[event][id]" => "uxauthd:01"
					"[rsa][message][id1]" => "uxauthd:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2219
	# line in RSA: <agent>:<info>
	else if [logstash][msgparser][id] == "msgParserId2219" {
		dissect {
			mapping => { "message" => "%{agent}:%{info}" }
			id => "msgParserId2219"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "runcap" {
		# MESSAGE runcap
		# line in RSA: <agent>: Child (PID:<process_id>) sent a certain kill.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Child (PID:%{process_id}) sent a certain kill." }
				id => "message-runcap"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "runcap"
					"[rsa][message][id1]" => "runcap"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE runcap:01
		# line in RSA: <agent>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-runcap:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "runcap:01"
					"[rsa][message][id1]" => "runcap:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2222
	# line in RSA: <agent>:<info>
	else if [logstash][msgparser][id] == "msgParserId2222" {
		dissect {
			mapping => { "message" => "%{agent}:%{info}" }
			id => "msgParserId2222"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2223
	# line in RSA: <agent>[<process_id>]:<info>
	else if [logstash][msgparser][id] == "msgParserId2223" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:%{info}" }
			id => "msgParserId2223"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "hp-ams" {
		# MESSAGE hp-ams:03
		# line in RSA: <agent>[<process_id>]:<severity>: Network Adapter Link Down (Slot <fld1>, Port <network_port>) has been repaired 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity}: Network Adapter Link Down (Slot %{fld1}, Port %{network_port}) has been repaired" }
				id => "message-hp-ams:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Network Adapter Link Down has been repaired"
					"[event][id]" => "hp-ams:03"
					"[rsa][message][id1]" => "hp-ams:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE hp-ams:02
		# line in RSA: <agent>[<process_id>]:<severity>: Network Adapter Link Down (Slot <fld1>, Port <network_port>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity}: Network Adapter Link Down (Slot %{fld1}, Port %{network_port})" }
				id => "message-hp-ams:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Network Adapter Link Down"
					"[event][id]" => "hp-ams:02"
					"[rsa][message][id1]" => "hp-ams:02"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE hp-ams:01
		# line in RSA: <agent>[<process_id>]:<severity>: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{severity}: %{info}" }
				id => "message-hp-ams:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "hp-ams:01"
					"[rsa][message][id1]" => "hp-ams:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE hp-ams
		# line in RSA: <agent>[<process_id>]:<event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:%{event_description}" }
				id => "message-hp-ams"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "hp-ams"
					"[rsa][message][id1]" => "hp-ams"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2228
	# line in RSA: <agent>: [<severity> ] <result> 
	else if [logstash][msgparser][id] == "msgParserId2228" {
		dissect {
			mapping => { "message" => "%{agent}: [%{severity} ] %{result}" }
			id => "msgParserId2228"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "salt-minion" {
		# MESSAGE salt-minion:02
		# line in RSA: <agent>: record = self.<action>(<param>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: record = self.%{action}(%{param})" }
				id => "message-salt-minion:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "salt-minion:02"
					"[rsa][message][id1]" => "salt-minion:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE salt-minion:01
		# line in RSA: <agent>: [<severity> ] Command '<action>' failed with return code: <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{severity} ] Command '%{action}' failed with return code: %{resultcode}" }
				id => "message-salt-minion:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "salt-minion:01"
					"[rsa][message][id1]" => "salt-minion:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE salt-minion:03
		# line in RSA: <agent>: [ERROR ]<error> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ERROR ]%{error}" }
				id => "message-salt-minion:03"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "salt-minion:03"
					"[rsa][message][id1]" => "salt-minion:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE salt-minion
		# line in RSA: <agent>: /etc/salt/pki/minion/minion_master.pub
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: /etc/salt/pki/minion/minion_master.pub" }
				id => "message-salt-minion"
				add_field => {
				"hostname" => "%{hhost}"
				"filename" => "/etc/salt/pki/minion/minion_master.pub"
					"[event][id]" => "salt-minion"
					"[rsa][message][id1]" => "salt-minion"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE salt-minion:04
		# line in RSA: <agent>: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-salt-minion:04"
				add_field => {
				"hostname" => "%{hhost}"
				"filename" => "/etc/salt/pki/minion/minion_master.pub"
					"[event][id]" => "salt-minion:04"
					"[rsa][message][id1]" => "salt-minion:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2234
	# line in RSA: <agent>: Can't call method "<action>" on an undefined value at <filename> line <info> 
	else if [logstash][msgparser][id] == "msgParserId2234" {
		dissect {
			mapping => { "message" => "%{agent}: Can't call method \"%{action}\" on an undefined value at %{filename} line %{info}" }
			id => "msgParserId2234"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2235
	# line in RSA: {gssproxy: gssproxy[<process_id>]|gssproxy[<fld1>]}: (OID:<fld2>)<info> 
	else if [logstash][msgparser][id] == "msgParserId2235" {
		grok {
			match => { "message" => "^(gssproxy:[\s]+gssproxy\[(?<process_id>[^\]]*)\]|gssproxy\[(?<fld1>[^\]]*)\]):[\s]+\(OID:(?<fld2>[^\)]*)\)(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId2235"
			add_field => {
				"hostname" => "%{hhost}"
				"agent" => "gssproxy"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2236
	# line in RSA: <agent>: rpc.nfsd: address family AF_INET6 not supported by protocol <protocol> 
	else if [logstash][msgparser][id] == "msgParserId2236" {
		dissect {
			mapping => { "message" => "%{agent}: rpc.nfsd: address family AF_INET6 not supported by protocol %{protocol}" }
			id => "msgParserId2236"
			add_field => {
				"hostname" => "%{hhost}"
				"error" => "address family AF_INET6 not supported by protocol"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2237
	# line in RSA: <agent>[<process_id>]: {Run|run} {command using system|command using pipe|command: <param>}
	else if [logstash][msgparser][id] == "msgParserId2237" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Run|run)[\s]+(command[\s]+using[\s]+system|command[\s]+using[\s]+pipe|command:[\s]+(?<param>.*))$" }
			id => "msgParserId2237"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "syncpass.pl" {
		# MESSAGE syncpass.pl
		# line in RSA: <agent>[<process_id>]: {Run|run} {command using system|command using pipe|command: <param>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Run|run)[\s]+(command[\s]+using[\s]+system|command[\s]+using[\s]+pipe|command:[\s]+(?<param>.*))$" }
				id => "message-syncpass.pl"
				add_field => {
					"[event][id]" => "syncpass.pl"
					"[rsa][message][id1]" => "syncpass.pl"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE syncpass.pl:01
		# line in RSA: <agent>[<process_id>]: No user need to sync password.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: No user need to sync password." }
				id => "message-syncpass.pl:01"
				add_field => {
				"event_description" => "No user need to sync password."
					"[event][id]" => "syncpass.pl:01"
					"[rsa][message][id1]" => "syncpass.pl:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2239
	# line in RSA: <agent>[<process_id>]: Read [<filename>]: file not exist. return undef
	else if [logstash][msgparser][id] == "msgParserId2239" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Read [%{filename}]: file not exist. return undef" }
			id => "msgParserId2239"
			add_field => {
				"event_description" => "file not exist. return undef"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "sshd.pl" {
		# MESSAGE sshd.pl
		# line in RSA: <agent>[<process_id>]: run command: <param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: run command: %{param}" }
				id => "message-sshd.pl"
				add_field => {
					"[event][id]" => "sshd.pl"
					"[rsa][message][id1]" => "sshd.pl"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sshd.pl:01
		# line in RSA: <agent>[<process_id>]: ServiceAuthLocation does not meet requirement (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ServiceAuthLocation does not meet requirement (%{info})" }
				id => "message-sshd.pl:01"
				add_field => {
				"event_description" => "ServiceAuthLocation does not meet requirement"
					"[event][id]" => "sshd.pl:01"
					"[rsa][message][id1]" => "sshd.pl:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2242
	# line in RSA: <agent>[<process_id>]:<fld1>:<fld2>[<fld3>] <fld4> ***Warning: <info>
	else if [logstash][msgparser][id] == "msgParserId2242" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:%{fld1}:%{fld2}[%{fld3}] %{fld4} ***Warning: %{info}" }
			id => "msgParserId2242"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2243
	# line in RSA: <agent>[<process_id>]: No sudoers registry setting. No need to update sudoers file.
	else if [logstash][msgparser][id] == "msgParserId2243" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: No sudoers registry setting. No need to update sudoers file." }
			id => "msgParserId2243"
			add_field => {
				"event_description" => "No sudoers registry setting. No need to update sudoers file."
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2244
	# line in RSA: <agent>[<process_id>]: Removing <filename>
	else if [logstash][msgparser][id] == "msgParserId2244" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Removing %{filename}" }
			id => "msgParserId2244"
			add_field => {
				"event_description" => "Removing"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId2245
	# line in RSA: Non-local user '<username>' given role '<user_role>'
	else if [logstash][msgparser][id] == "msgParserId2245" {
		dissect {
			mapping => { "message" => "Non-local user '%{username}' given role '%{user_role}'" }
			id => "msgParserId2245"
			add_field => {
				"event_description" => "given role to user"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1303000000" => "Auth.Errors"
			"1304000000" => "Auth.General"
			"1701010000" => "Config.Changes.Add"
			"1701020000" => "Config.Changes.Modify"
			"1701030000" => "Config.Changes.Delete"
		}
		fallback => "Other.Default"
		override => true
	}
}
filter {
	translate {
		field => "[action]"
		destination => "[event_cat]"
		dictionary => {
			"Failed" => "1303000000"
			"Postponed" => "1304000000"
			"Installed" => "1701010000"
			"Updated" => "1701020000"
			"Erased" => "1701030000"
		}
		fallback => "1901000000"
		override => true
	}
}
filter {
	translate {
		field => "[fld55]"
		destination => "[ec_subject]"
		dictionary => {
			"user" => "User"
			"group" => "Group"
		}
		fallback => ""
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_rhlinuxmsg.json"
#			template_name => "rhlinux_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
