# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "emcnetworker"
			"[observer][name]" => "EMC NetWorker"
			"[observer][type]" => "Storage"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %emcnetworker-4: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <hfld6> <hfld7> <hfld8> <hostname> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%emcnetworker\-4:[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %emcnetworker-4: <hfld1> <hfld2> <hfld3> <hostname> NetWorker <messageid>: <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%emcnetworker\-4:[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+NetWorker[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %emcnetworker-4: <hfld1> <hfld2> <hfld3> <hostname>: <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%emcnetworker\-4:[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hostname>[^:]*):[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %emcnetworker-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%emcnetworker-%{messageid}: %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-emcnetworkermsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <service> <event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{service} %{event_description}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> started
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} started" }
			id => "msgParserId1"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "index" {
		# MESSAGE index:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> checking index for <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} checking index for %{fld4}" }
				id => "message-index:01"
				add_field => {
					"[event][id]" => "index:01"
					"[rsa][message][id1]" => "index:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE index:02
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <filename> contains <fld4> records occupying <fld5> KB
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{filename} contains %{fld4} records occupying %{fld5} KB" }
				id => "message-index:02"
				add_field => {
					"[event][id]" => "index:02"
					"[rsa][message][id1]" => "index:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE index:03
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> Completed checking <fld4> client(s)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} Completed checking %{fld4} client(s)" }
				id => "message-index:03"
				add_field => {
					"[event][id]" => "index:03"
					"[rsa][message][id1]" => "index:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE index:04
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{event_description}" }
				id => "message-index:04"
				add_field => {
					"[event][id]" => "index:04"
					"[rsa][message][id1]" => "index:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{event_description}" }
			id => "msgParserId5"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "media" {
		# MESSAGE media:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> Searching for NetWorker <fld4> devices on <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} Searching for NetWorker %{fld4} devices on %{fld5}" }
				id => "message-media:01"
				add_field => {
					"[event][id]" => "media:01"
					"[rsa][message][id1]" => "media:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE media:02
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <event_state> dvdetect process on host <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{event_state} dvdetect process on host %{fld4}" }
				id => "message-media:02"
				add_field => {
					"[event][id]" => "media:02"
					"[rsa][message][id1]" => "media:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE media:03
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> No configured libraries detected on storage node  <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} No configured libraries detected on storage node  %{fld4}" }
				id => "message-media:03"
				add_field => {
					"[event][id]" => "media:03"
					"[rsa][message][id1]" => "media:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE media:04
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> no matching devices for save of client <node>; check storage nodes, devices or pools
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} no matching devices for save of client %{node}; check storage nodes, devices or pools" }
				id => "message-media:04"
				add_field => {
					"[event][id]" => "media:04"
					"[rsa][message][id1]" => "media:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE media:05
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> save set bootstrap for client <node> was aborted and removed from volume <disk_volume>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} save set bootstrap for client %{node} was aborted and removed from volume %{disk_volume}" }
				id => "message-media:05"
				add_field => {
					"[event][id]" => "media:05"
					"[rsa][message][id1]" => "media:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE media:06
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{event_description}" }
				id => "message-media:06"
				add_field => {
					"[event][id]" => "media:06"
					"[rsa][message][id1]" => "media:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "savegroup" {
		# MESSAGE savegroup:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> Inactive files in saveset <filename> on host <fld4> occupy <dclass_counter1> percent of the used space, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} Inactive files in saveset %{filename} on host %{fld4} occupy %{dclass_counter1} percent of the used space, %{info}" }
				id => "message-savegroup:01"
				add_field => {
					"[event][id]" => "savegroup:01"
					"[rsa][message][id1]" => "savegroup:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:02
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <node>:<filename>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{node}:%{filename}: %{info}" }
				id => "message-savegroup:02"
				add_field => {
					"[event][id]" => "savegroup:02"
					"[rsa][message][id1]" => "savegroup:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:03
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> starting <group_object> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} starting %{group_object} %{info}" }
				id => "message-savegroup:03"
				add_field => {
					"[event][id]" => "savegroup:03"
					"[rsa][message][id1]" => "savegroup:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:04
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <group_object> completed, Total <dclass_counter1> client(s), <fld4> Failed. <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{group_object} completed, Total %{dclass_counter1} client(s), %{fld4} Failed. %{event_description}" }
				id => "message-savegroup:04"
				add_field => {
				"action" => "count of Total clients"
					"[event][id]" => "savegroup:04"
					"[rsa][message][id1]" => "savegroup:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:05
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <group_object> completed, Total <dclass_counter1> client(s), <fld4> Succeeded with warning(s). <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{group_object} completed, Total %{dclass_counter1} client(s), %{fld4} Succeeded with warning(s). %{event_description}" }
				id => "message-savegroup:05"
				add_field => {
				"action" => "count of Total clients"
					"[event][id]" => "savegroup:05"
					"[rsa][message][id1]" => "savegroup:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:06
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> Inactive files in group <group_object> occupy <dclass_counter1> percent of the used space, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} Inactive files in group %{group_object} occupy %{dclass_counter1} percent of the used space, %{info}" }
				id => "message-savegroup:06"
				add_field => {
				"action" => "count percent of occupy used space"
					"[event][id]" => "savegroup:06"
					"[rsa][message][id1]" => "savegroup:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:07
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> Group <group_object> aborted, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} Group %{group_object} aborted, %{info}" }
				id => "message-savegroup:07"
				add_field => {
					"[event][id]" => "savegroup:07"
					"[rsa][message][id1]" => "savegroup:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:08
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <group_object> waiting for <dclass_counter1> job(s) to complete 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{group_object} waiting for %{dclass_counter1} job(s) to complete" }
				id => "message-savegroup:08"
				add_field => {
				"action" => "count jobs to complete"
					"[event][id]" => "savegroup:08"
					"[rsa][message][id1]" => "savegroup:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE savegroup:09
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: NetWorker <event_type>: <severity> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: NetWorker %{event_type}: %{severity} %{info}" }
				id => "message-savegroup:09"
				add_field => {
					"[event][id]" => "savegroup:09"
					"[rsa][message][id1]" => "savegroup:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA: <fld1> <fld2> <fld3> <hostname>: saveset <node>:<event_type>: percentage of inactive files by count: <dclass_counter1>, by space: <fld4>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: saveset %{node}:%{event_type}: percentage of inactive files by count: %{dclass_counter1}, by space: %{fld4}" }
			id => "msgParserId20"
			add_field => {
				"action" => "count percent of inactive files"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "*" {
		# MESSAGE 0011*01
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<directory> savegrp: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{directory} savegrp: %{event_description}" }
				id => "message-0011*01"
				add_field => {
					"[event][id]" => "0011*01"
					"[rsa][message][id1]" => "0011*01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*02
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<event_type> <fld4> <fld5> <fld6>  <fld7> bootstrap information Page 1
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{event_type} %{fld4} %{fld5} %{fld6}  %{fld7} bootstrap information Page 1" }
				id => "message-0011*02"
				add_field => {
					"[event][id]" => "0011*02"
					"[rsa][message][id1]" => "0011*02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*03
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<event_type> <fld4> <fld5> 2 0 0 <fld6> <fld7> 0 <fld8> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{event_type} %{fld4} %{fld5} 2 0 0 %{fld6} %{fld7} 0 %{fld8} %{event_description}" }
				id => "message-0011*03"
				add_field => {
					"[event][id]" => "0011*03"
					"[rsa][message][id1]" => "0011*03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*04
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<fld4> savefs <fld5>: succeeded.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{fld4} savefs %{fld5}: succeeded." }
				id => "message-0011*04"
				add_field => {
					"[event][id]" => "0011*04"
					"[rsa][message][id1]" => "0011*04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*05
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<directory> <fld4>:save: <fld5> <fld6> parsed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{directory} %{fld4}:save: %{fld5} %{fld6} parsed" }
				id => "message-0011*05"
				add_field => {
					"[event][id]" => "0011*05"
					"[rsa][message][id1]" => "0011*05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*06
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<directory> stat failed: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{directory} stat failed: %{event_description}" }
				id => "message-0011*06"
				add_field => {
					"[event][id]" => "0011*06"
					"[rsa][message][id1]" => "0011*06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*07
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<event_type>:\ <fld5>:save:<fld6>:\ <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{event_type}:\ %{fld5}:save:%{fld6}:\ %{event_description}" }
				id => "message-0011*07"
				add_field => {
					"[event][id]" => "0011*07"
					"[rsa][message][id1]" => "0011*07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*08
		# line in RSA: <fld1> <fld2> <fld3> <hostname>: * <node>:<event_type>     <fld4> <fld5> <fld6>   <fld7> <fld8>     <fld9>     <fld10>   <disk_volume>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}: * %{node}:%{event_type}     %{fld4} %{fld5} %{fld6}   %{fld7} %{fld8}     %{fld9}     %{fld10}   %{disk_volume}" }
				id => "message-0011*08"
				add_field => {
					"[event][id]" => "0011*08"
					"[rsa][message][id1]" => "0011*08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*09
		# line in RSA: <fld1> <fld2> <fld3> <hostname>:      * <severity> :  File <filename> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}:      * %{severity} :  File %{filename} %{event_description}" }
				id => "message-0011*09"
				add_field => {
					"[event][id]" => "0011*09"
					"[rsa][message][id1]" => "0011*09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 0011*10
		# line in RSA: <fld1> <fld2> <fld3> <hostname>:      * <severity> :  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}:      * %{severity} :  %{event_description}" }
				id => "message-0011*10"
				add_field => {
					"[event][id]" => "0011*10"
					"[rsa][message][id1]" => "0011*10"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "winworkr" {
		# MESSAGE winworkr:01
		# line in RSA: winworkr 2 %s 1 0 <fld1> <fld2>:winworkr: <filename> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "winworkr 2 %s 1 0 %{fld1} %{fld2}:winworkr: %{filename} %{info}" }
				id => "message-winworkr:01"
				add_field => {
					"[event][id]" => "winworkr:01"
					"[rsa][message][id1]" => "winworkr:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE winworkr:02
		# line in RSA: winworkr 2 %s 1 0 <fld1> Received <dclass_counter1> file(s) from NSR server <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "winworkr 2 %s 1 0 %{fld1} Received %{dclass_counter1} file(s) from NSR server %{hostname}" }
				id => "message-winworkr:02"
				add_field => {
				"action" => "count of Received files"
					"[event][id]" => "winworkr:02"
					"[rsa][message][id1]" => "winworkr:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE winworkr:03
		# line in RSA: winworkr 2 %s 1 0 <fld1> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "winworkr 2 %s 1 0 %{fld1} %{event_description}" }
				id => "message-winworkr:03"
				add_field => {
					"[event][id]" => "winworkr:03"
					"[rsa][message][id1]" => "winworkr:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "4" {
		# MESSAGE 4:01
		# line in RSA: <fld1>:dvdetect: Jukebox error: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:dvdetect: Jukebox error: %{event_description}" }
				id => "message-4:01"
				add_field => {
					"[event][id]" => "4:01"
					"[rsa][message][id1]" => "4:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 4:02
		# line in RSA: <fld1> <fld2> <fld3> <hostname>:   <node>: <fld4>        level=<fld5>,    <fld6> KB <fld7>   <fld8> files
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname}:   %{node}: %{fld4}        level=%{fld5},    %{fld6} KB %{fld7}   %{fld8} files" }
				id => "message-4:02"
				add_field => {
					"[event][id]" => "4:02"
					"[rsa][message][id1]" => "4:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 4:03
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{event_description}" }
				id => "message-4:03"
				add_field => {
					"[event][id]" => "4:03"
					"[rsa][message][id1]" => "4:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-emcnetworkermsg.json"
#			template_name => "emcnetworker_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
