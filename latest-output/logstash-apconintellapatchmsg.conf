# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "apconintellapatch"
			"[observer][name]" => "Apcon Intellapatch"
			"[observer][type]" => "Switch"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld1> <hfld2> <hfld3> <hhostname> <messageid>: <hfld4>| <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3} %{hhostname} %{messageid}: %{hfld4}| %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-apconintellapatchmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "apcond/web" {
		# MESSAGE 000001
		# line in RSA:         b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> FAILED login <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} FAILED login %{fld2}" }
				id => "message-000001"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "FAILED login"
					"[event][id]" => "000001"
					"[rsa][message][id1]" => "000001"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000002
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set segment <fld2> ports='<fld3>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set segment %{fld2} ports='%{fld3}'" }
				id => "message-000002"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set segment"
					"[event][id]" => "000002"
					"[rsa][message][id1]" => "000002"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000003
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set syslog facility to <fld2> and severity to <severity>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set syslog facility to %{fld2} and severity to %{severity}" }
				id => "message-000003"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set syslog facility"
					"[event][id]" => "000003"
					"[rsa][message][id1]" => "000003"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000004
		# line in RSA:         b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set login source to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set login source to %{change_new}" }
				id => "message-000004"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set login source"
				"change_attribute" => "login source"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000005
		# line in RSA:         b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set login requirement to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set login requirement to %{change_new}" }
				id => "message-000005"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "AccessControl"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set login requirement"
				"change_attribute" => "login requirement"
					"[event][id]" => "000005"
					"[rsa][message][id1]" => "000005"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000006
		# line in RSA:         b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Login <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Login %{fld2}" }
				id => "message-000006"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Authentication"
				"ec_activity" => "Logon"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "Login"
					"[event][id]" => "000006"
					"[rsa][message][id1]" => "000006"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000007
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set permissions for group <group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set permissions for group %{group}" }
				id => "message-000007"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "AccessControl"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set permissions"
					"[event][id]" => "000007"
					"[rsa][message][id1]" => "000007"
					"[event][categoryid]" => "1501020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000008
		# line in RSA:         b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set <network_service> service to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set %{network_service} service to %{change_new}" }
				id => "message-000008"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "AccessControl"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set service"
				"change_attribute" => "service"
					"[event][id]" => "000008"
					"[rsa][message][id1]" => "000008"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000009
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP public community string <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP public community string %{fld2}" }
				id => "message-000009"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP public community string"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000010
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> RPC and SRPC are disabled. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} RPC and SRPC are disabled. %{info}" }
				id => "message-000010"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "RPC and SRPC are disabled"
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000011
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP public network restriction <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP public network restriction %{fld2}" }
				id => "message-000011"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP public network restriction"
					"[event][id]" => "000011"
					"[rsa][message][id1]" => "000011"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000012
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared backpatch ports
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared backpatch ports" }
				id => "message-000012"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared backpatch ports"
					"[event][id]" => "000012"
					"[rsa][message][id1]" => "000012"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000013
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP trap address <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP trap address %{daddr}" }
				id => "message-000013"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP trap address"
					"[event][id]" => "000013"
					"[rsa][message][id1]" => "000013"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000014
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP trap community <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP trap community %{fld2}" }
				id => "message-000014"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP trap community"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000015
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP trap port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP trap port %{network_port}" }
				id => "message-000015"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP trap port"
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000016
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP notify address <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP notify address %{daddr}" }
				id => "message-000016"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP notify address"
					"[event][id]" => "000016"
					"[rsa][message][id1]" => "000016"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000017
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP notify community <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP notify community %{fld2}" }
				id => "message-000017"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP notify community"
					"[event][id]" => "000017"
					"[rsa][message][id1]" => "000017"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000018
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP notify port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP notify port %{network_port}" }
				id => "message-000018"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP notify port"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000019
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP location
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP location" }
				id => "message-000019"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP location"
					"[event][id]" => "000019"
					"[rsa][message][id1]" => "000019"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000020
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared SNMP contact
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared SNMP contact" }
				id => "message-000020"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared SNMP contact"
					"[event][id]" => "000020"
					"[rsa][message][id1]" => "000020"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000021
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Updated filter
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Updated filter" }
				id => "message-000021"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Updated filter"
					"[event][id]" => "000021"
					"[rsa][message][id1]" => "000021"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000022
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Removed filter <filter> from library
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Removed filter %{filter} from library" }
				id => "message-000022"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Removed filter"
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000023
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Connected blade <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Connected blade %{fld2}" }
				id => "message-000023"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Connected blade"
					"[event][id]" => "000023"
					"[rsa][message][id1]" => "000023"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000024
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> <event_state> Multi Stage Filter <filter>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} %{event_state} Multi Stage Filter %{filter}" }
				id => "message-000024"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Multi Stage Filter"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000025
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> IntellaFlex service is ready
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} IntellaFlex service is ready" }
				id => "message-000025"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "IntellaFlex service is ready"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000026
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> {Reset IntellaFlex service on controller and blades| Reset IntellaFlex service on controller|Reset IntellaFlex service on blade}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*b:(?<fld5>[^\s]*)[\s]+p:(?<fld6>[^\s]*)[\s]+u:(?<username>[^/]*)/(?<saddr>[^@]*)@(?<hostip>[^\s]*)[\s]+(Reset[\s]+IntellaFlex[\s]+service[\s]+on[\s]+controller[\s]+and[\s]+blades|[\s]*Reset[\s]+IntellaFlex[\s]+service[\s]+on[\s]+controller|Reset[\s]+IntellaFlex[\s]+service[\s]+on[\s]+blade)$" }
				id => "message-000026"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Reset IntellaFlex service"
					"[event][id]" => "000026"
					"[rsa][message][id1]" => "000026"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000027
		# line in RSA:         b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set simple LCD home screen to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set simple LCD home screen to %{change_new}" }
				id => "message-000027"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"change_attribute" => "simple LCD home screen"
				"event_description" => "Set simple LCD home screen"
					"[event][id]" => "000027"
					"[rsa][message][id1]" => "000027"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000028
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set CLI global timeout to <fld7> minutes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set CLI global timeout to %{fld7} minutes" }
				id => "message-000028"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set CLI global timeout"
					"[event][id]" => "000028"
					"[rsa][message][id1]" => "000028"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000029
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP public community string <fld7> to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP public community string %{fld7} to %{info}" }
				id => "message-000029"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP public community string"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000030
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP public network restriction <fld7> to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP public network restriction %{fld7} to %{info}" }
				id => "message-000030"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP public network restriction"
					"[event][id]" => "000030"
					"[rsa][message][id1]" => "000030"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000031
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP location to <location_desc>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP location to %{location_desc}" }
				id => "message-000031"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP location"
					"[event][id]" => "000031"
					"[rsa][message][id1]" => "000031"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000032
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP contact to <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP contact to %{fld7}" }
				id => "message-000032"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP contact"
					"[event][id]" => "000032"
					"[rsa][message][id1]" => "000032"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000033
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP notify community <fld7> to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP notify community %{fld7} to %{info}" }
				id => "message-000033"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP notify community"
					"[event][id]" => "000033"
					"[rsa][message][id1]" => "000033"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000034
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP trap address <fld7> to <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP trap address %{fld7} to %{daddr}" }
				id => "message-000034"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP trap address"
					"[event][id]" => "000034"
					"[rsa][message][id1]" => "000034"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000035
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP trap community <fld7> to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP trap community %{fld7} to %{info}" }
				id => "message-000035"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP trap community"
					"[event][id]" => "000035"
					"[rsa][message][id1]" => "000035"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000036
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SNMP notify address <fld7> to <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set SNMP notify address %{fld7} to %{daddr}" }
				id => "message-000036"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SNMP notify address"
					"[event][id]" => "000036"
					"[rsa][message][id1]" => "000036"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000037
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Generated SSH key
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Generated SSH key" }
				id => "message-000037"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Generated SSH key"
					"[event][id]" => "000037"
					"[rsa][message][id1]" => "000037"
					"[event][categoryid]" => "1613040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000038
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Created segment <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Created segment %{fld7}" }
				id => "message-000038"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Created segment"
					"[event][id]" => "000038"
					"[rsa][message][id1]" => "000038"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000039
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set SYSLOG address to {"<daddr>"|<daddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*b:(?<fld5>[^\s]*)[\s]+p:(?<fld6>[^\s]*)[\s]+u:(?<username>[^/]*)/(?<saddr>[^@]*)@(?<hostip>[^\s]*)[\s]+Set[\s]+SYSLOG[\s]+address[\s]+to[\s]+(\"(?<daddr>[^\"]*)\"|(?<daddr>.*))$" }
				id => "message-000039"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set SYSLOG address"
					"[event][id]" => "000039"
					"[rsa][message][id1]" => "000039"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000040
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared <fld7> address
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared %{fld7} address" }
				id => "message-000040"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Cleared SYSLOG address"
					"[event][id]" => "000040"
					"[rsa][message][id1]" => "000040"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000041
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Set global bandwidth thresholds to <fld7>,<fld8>,<fld9>,<fld10>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Set global bandwidth thresholds to %{fld7},%{fld8},%{fld9},%{fld10}, %{info}" }
				id => "message-000041"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Set global bandwidth thresholds"
					"[event][id]" => "000041"
					"[rsa][message][id1]" => "000041"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000042
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Added SNMP user <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Added SNMP user %{c_username}" }
				id => "message-000042"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "ALM"
				"ec_activity" => "Modify"
				"ec_subject" => "User"
				"event_description" => "Added SNMP user"
					"[event][id]" => "000042"
					"[rsa][message][id1]" => "000042"
					"[event][categoryid]" => "1402020200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000043
		# line in RSA:        b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Removed SNMP user <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Removed SNMP user %{c_username}" }
				id => "message-000043"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"ec_theme" => "ALM"
				"ec_activity" => "Delete"
				"ec_subject" => "User"
				"event_description" => "Removed SNMP user"
					"[event][id]" => "000043"
					"[rsa][message][id1]" => "000043"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000044
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Generated SSL certificates
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Generated SSL certificates" }
				id => "message-000044"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Generated SSL certificates"
					"[event][id]" => "000044"
					"[rsa][message][id1]" => "000044"
					"[event][categoryid]" => "1613040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000046
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Configured backpatch ports
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Configured backpatch ports" }
				id => "message-000046"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Configured backpatch ports"
					"[event][id]" => "000046"
					"[rsa][message][id1]" => "000046"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000047
		# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> Cleared port name
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} Cleared port name" }
				id => "message-000047"
				add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "Cleared port name"
					"[event][id]" => "000047"
					"[rsa][message][id1]" => "000047"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:     b:<fld5> p:<fld6> u:<username>/<saddr>@<hostip> External SSH key installed
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "b:%{fld5} p:%{fld6} u:%{username}/%{saddr}@%{hostip} External SSH key installed" }
			id => "msgParserId44"
			add_field => {
				"action" => "%{hfld4}"
				"hostname" => "%{hhostname}"
				"event_description" => "External SSH key installed"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-apconintellapatchmsg.json"
#			template_name => "apconintellapatch_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
