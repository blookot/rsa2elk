# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "hytrust"
			"[observer][name]" => "HyTrust"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld1> <hfld2> <hfld3>:<hfld4>:<hfld5> <hhost> <hlevel>: <hseverity> : <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3}:%{hfld4}:%{hfld5} %{hhost} %{hlevel}: %{hseverity} : %{messageid} %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <messageid>[<hfld5>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld5>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hfld1> <hfld2> <hfld3> <hhost> <hfacility>:CEF:0|HyTrust|<hproduct>|<hversion>|<hcategory>|<messageid>|<hseverity>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3} %{hhost} %{hfacility}:CEF:0|HyTrust|%{hproduct}|%{hversion}|%{hcategory}|%{messageid}|%{hseverity}|%{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hfld1> <hfld2> <hfld3> <hhost> <hfacility>:<hseverity> msgid=<messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3} %{hhost} %{hfacility}:%{hseverity} msgid=%{messageid} %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hseverity> msgid=<messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hseverity} msgid=%{messageid} %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: HyTrust <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^HyTrust[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-hytrustmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: act=<disposition> app=<application> cat=<action> dst=<daddr> src=<saddr> suser=<username> suid={{<fld1> {{<group>}} deviceExternalId=<obj_name> deviceFacility=<obj_type> cs1=<rule> cs1Label=<rulename> cn1=<dclass_counter1> cn1Label=<dclass_counter1_string> msg=<fld2> The request by {{<fld3> {{<fld4>}} from Client:<fld5> to perform Operation:<fld6> on Target:<fld7> Labeled:[<fld8>] is <result>. In the policy protecting the target, the user does not have the needed [<privilege>] privileges or constraints. <fld9>
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^act=(?<disposition>[^\s]*)[\s]+app=(?<application>[^\s]*)[\s]+cat=(?<action>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+suid=\{(?<fld1>[^\s]*)[\s]+\{(?<group>[^\}]*)\}\}[\s]+deviceExternalId=(?<obj_name>[^\s]*)[\s]+deviceFacility=(?<obj_type>[^\s]*)[\s]+cs1=(?<rule>[^\s]*)[\s]+cs1Label=(?<rulename>[^\s]*)[\s]+cn1=(?<dclass_counter1>[^\s]*)[\s]+cn1Label=(?<dclass_counter1_string>[^\s]*)[\s]+msg=(?<fld2>[^\s]*)[\s]+The[\s]+request[\s]+by[\s]+\{(?<fld3>[^\s]*)[\s]+\{(?<fld4>[^\}]*)\}\}[\s]+from[\s]+Client:(?<fld5>[^\s]*)[\s]+to[\s]+perform[\s]+Operation:(?<fld6>[^\s]*)[\s]+on[\s]+Target:(?<fld7>[^\s]*)[\s]+Labeled:\[(?<fld8>[^\]]*)\][\s]+is[\s]+(?<result>[^\.]*)\.[\s]+In[\s]+the[\s]+policy[\s]+protecting[\s]+the[\s]+target,[\s]+the[\s]+user[\s]+does[\s]+not[\s]+have[\s]+the[\s]+needed[\s]+\[(?<privilege>[^\]]*)\][\s]+privileges[\s]+or[\s]+constraints\.[\s]+(?<fld9>.*)$" }
			id => "msgParserId0"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Deny"
				"ec_theme" => "Policy"
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AUN0001I" {
		# MESSAGE AUN0001I:0001
		# line in RSA: The request for {{<username> {{<group> }} from client <saddr> to perform <action> on <obj_type> : <obj_name> is authorized.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+request[\s]+for[\s]+\{(?<username>[^\s]*)[\s]+\{(?<group>[^\s]*)[\s]+\}\}[\s]+from[\s]+client[\s]+(?<saddr>[^\s]*)[\s]+to[\s]+perform[\s]+(?<action>[^\s]*)[\s]+on[\s]+(?<obj_type>[^\s]*)[\s]+:[\s]+(?<obj_name>[^\s]*)[\s]+is[\s]+authorized\.$" }
				id => "message-AUN0001I:0001"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "AUN0001I:0001"
					"[rsa][message][id1]" => "AUN0001I:0001"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AUN0001I
		# line in RSA: The request for <username> from client <saddr> to perform <action> on <obj_type> : <obj_name> is authorized.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The request for %{username} from client %{saddr} to perform %{action} on %{obj_type} : %{obj_name} is authorized." }
				id => "message-AUN0001I"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "AUN0001I"
					"[rsa][message][id1]" => "AUN0001I"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: The request for <username> to perform <action> on <obj_type> is declined. None of the protected object id, operation and user id can be null.
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "The request for %{username} to perform %{action} on %{obj_type} is declined. None of the protected object id, operation and user id can be null." }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AUN0003I" {
		# MESSAGE AUN0003I
		# line in RSA: The authentication for <username> is successful.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The authentication for %{username} is successful." }
				id => "message-AUN0003I"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "AUN0003I"
					"[rsa][message][id1]" => "AUN0003I"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AUN0003I:01
		# line in RSA: Source: <saddr> User <username> authenticated successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Source: %{saddr} User %{username} authenticated successfully." }
				id => "message-AUN0003I:01"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "AUN0003I:01"
					"[rsa][message][id1]" => "AUN0003I:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA: The authentication for <username> is declined.
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "The authentication for %{username} is declined." }
			id => "msgParserId6"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA: Source:  <saddr> The authentication for <username> is declined.
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "Source:  %{saddr} The authentication for %{username} is declined." }
			id => "msgParserId7"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: The authentication failed because no user id is provided.
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "The authentication failed because no user id is provided." }
			id => "msgParserId8"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA: The object <obj_name> is not protected. The authorization failed.
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "The object %{obj_name} is not protected. The authorization failed." }
			id => "msgParserId9"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: The operation: <fld12> for authorization can't be recognized.
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "The operation: %{fld12} for authorization can't be recognized." }
			id => "msgParserId10"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: Getting apache ds context failed. Please check your configuration or make sure apache ds is running.
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "Getting apache ds context failed. Please check your configuration or make sure apache ds is running." }
			id => "msgParserId11"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: User <username> is in the following groups: <group>.
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "User %{username} is in the following groups: %{group}." }
			id => "msgParserId12"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: The request for <username> from client <saddr> to perform <action> on <daddr> is declined.
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "The request for %{username} from client %{saddr} to perform %{action} on %{daddr} is declined." }
			id => "msgParserId13"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: Loading data from apache ds for policy evaluation failed. Please check to make sure apache ds is running.
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "Loading data from apache ds for policy evaluation failed. Please check to make sure apache ds is running." }
			id => "msgParserId14"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: Loading configuration file <filename> failed. Please check if the configuration file is missing.
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "Loading configuration file %{filename} failed. Please check if the configuration file is missing." }
			id => "msgParserId15"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: Getting AD context failed. Please check your configuration or make sure your Active Directory is running.
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "Getting AD context failed. Please check your configuration or make sure your Active Directory is running." }
			id => "msgParserId16"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: Authorization service failed because an XML response document could not be created.
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "Authorization service failed because an XML response document could not be created." }
			id => "msgParserId17"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: Authorization service failed because the XML request could not be parsed correctly.
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "Authorization service failed because the XML request could not be parsed correctly." }
			id => "msgParserId18"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA: Authentication service failed because an XML response document could not be created.
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "Authentication service failed because an XML response document could not be created." }
			id => "msgParserId19"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA: Authentication service failed because the XML request could not be parsed correctly.
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "Authentication service failed because the XML request could not be parsed correctly." }
			id => "msgParserId20"
			add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA: Writing the response context for <info> failed.
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "Writing the response context for %{info} failed." }
			id => "msgParserId21"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: Apache ds is not responding. Please check your configuration or make sure your apache ds is running.
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "Apache ds is not responding. Please check your configuration or make sure your apache ds is running." }
			id => "msgParserId22"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA: Database error occurred while retrieving super user. Please make sure the super user exists or check your configuration and make sure your database is running.
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "Database error occurred while retrieving super user. Please make sure the super user exists or check your configuration and make sure your database is running." }
			id => "msgParserId23"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: AD is not responding while retrieving group information for user. Please check your configuration or make sure your Active Directory Server is running.
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "AD is not responding while retrieving group information for user. Please check your configuration or make sure your Active Directory Server is running." }
			id => "msgParserId24"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA: Unable to communicate to directory service <service>. Please check the network and directory service configuration.
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "Unable to communicate to directory service %{service}. Please check the network and directory service configuration." }
			id => "msgParserId25"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA: AD could not find user: <username> while doing authentication.
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "AD could not find user: %{username} while doing authentication." }
			id => "msgParserId26"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA: An database error occurred while trying to get the super user credential for target <info>. Please make sure the super user exists or check your configuration and make sure the database is running.
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "An database error occurred while trying to get the super user credential for target %{info}. Please make sure the super user exists or check your configuration and make sure the database is running." }
			id => "msgParserId27"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA: The request has been processed successfully.
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "The request has been processed successfully." }
			id => "msgParserId28"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: Error occurred while retrieving user's group ids.
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "Error occurred while retrieving user's group ids." }
			id => "msgParserId29"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA: The property type <obj_type> for the property <obj_name> is not supported.
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "The property type %{obj_type} for the property %{obj_name} is not supported." }
			id => "msgParserId30"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: The property with name <info> is not supported.
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "The property with name %{info} is not supported." }
			id => "msgParserId31"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: The value <fld14> of property <obj_type> has a type that is not supported.
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "The value %{fld14} of property %{obj_type} has a type that is not supported." }
			id => "msgParserId32"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: AD could not find the user groups while doing authorization.
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "AD could not find the user groups while doing authorization." }
			id => "msgParserId33"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: Getting apache ds context for retrieving user group information failed. Please check your configuration and make sure your database is running.
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "Getting apache ds context for retrieving user group information failed. Please check your configuration and make sure your database is running." }
			id => "msgParserId34"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: Failed to retrieve user group data from the apache ds. Please check if your apache ds is running.
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "Failed to retrieve user group data from the apache ds. Please check if your apache ds is running." }
			id => "msgParserId35"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: User with userId: <username> and type: <logon_type> does not exist;
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "User with userId: %{username} and type: %{logon_type} does not exist;" }
			id => "msgParserId36"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: User: <username> failed to login. Access is denied.
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "User: %{username} failed to login. Access is denied." }
			id => "msgParserId37"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: Failed to change password for user: <username> because the old password does not match.
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "Failed to change password for user: %{username} because the old password does not match." }
			id => "msgParserId38"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: UI passed an incorrect number of the parameters for authentication and authorization configuration update.
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "UI passed an incorrect number of the parameters for authentication and authorization configuration update." }
			id => "msgParserId39"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: Null value encountered while updating AD configuration.
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "Null value encountered while updating AD configuration." }
			id => "msgParserId40"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: Changing mode from AD to apache ds is not supported.
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "Changing mode from AD to apache ds is not supported." }
			id => "msgParserId41"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: Update AD configuration is not allowed in demo mode.
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Update AD configuration is not allowed in demo mode." }
			id => "msgParserId42"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: The application is already in release mode. Changing mode is not allowed.
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "The application is already in release mode. Changing mode is not allowed." }
			id => "msgParserId43"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: Enter a valid host name or ip address.
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "Enter a valid host name or ip address." }
			id => "msgParserId44"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: The system failed to configure hta log to send messages to remote syslog server.
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "The system failed to configure hta log to send messages to remote syslog server." }
			id => "msgParserId45"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: There is no message file for download.
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "There is no message file for download." }
			id => "msgParserId46"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: The system failed to configure hta log to send messages to local syslog server only.
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "The system failed to configure hta log to send messages to local syslog server only." }
			id => "msgParserId47"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: Cannot choose Local for HTA Logging Aggregation and Same as HTA for Default Logging Aggregation.
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "Cannot choose Local for HTA Logging Aggregation and Same as HTA for Default Logging Aggregation." }
			id => "msgParserId48"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: Changing configuration to send messages to remote syslog server failed because of the null server domain name.
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "Changing configuration to send messages to remote syslog server failed because of the null server domain name." }
			id => "msgParserId49"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: Changing configuration to send messages to remote syslog server succeeded.
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "Changing configuration to send messages to remote syslog server succeeded." }
			id => "msgParserId50"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA: Changing configuration to send messages to only local syslog server succeeded.
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "Changing configuration to send messages to only local syslog server succeeded." }
			id => "msgParserId51"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA: The messages have been downloaded successfully.
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "The messages have been downloaded successfully." }
			id => "msgParserId52"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: The messages have been purged successfully.
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "The messages have been purged successfully." }
			id => "msgParserId53"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA: The operation is not supported.
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "The operation is not supported." }
			id => "msgParserId54"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA: Please make sure your user name and password are correct. 
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "Please make sure your user name and password are correct." }
			id => "msgParserId55"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: The user's password has expired.
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "The user's password has expired." }
			id => "msgParserId56"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId57
	# line in RSA: Failed to get the configuration property <param>.
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "Failed to get the configuration property %{param}." }
			id => "msgParserId57"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA: Password must contain at least one small letter, one capital letter, one digit and one special letter.
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "Password must contain at least one small letter, one capital letter, one digit and one special letter." }
			id => "msgParserId58"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA: The log level is invalid.
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "The log level is invalid." }
			id => "msgParserId59"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: Reading license data failed. License is needed to use the software.
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "Reading license data failed. License is needed to use the software." }
			id => "msgParserId60"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: The license has expired. Please contact hytrust to renew your license.
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "The license has expired. Please contact hytrust to renew your license." }
			id => "msgParserId61"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId62
	# line in RSA: Retrieving all users from Active Directory server failed.
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "Retrieving all users from Active Directory server failed." }
			id => "msgParserId62"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId63
	# line in RSA: Retrieving all user groups from Active Directory server failed.
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "Retrieving all user groups from Active Directory server failed." }
			id => "msgParserId63"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA: There are no enough license to support more target.
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "There are no enough license to support more target." }
			id => "msgParserId64"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA: Account has been locked because of too many failed login attempts.
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "Account has been locked because of too many failed login attempts." }
			id => "msgParserId65"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA: Too many login attempts. Account has been locked.
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "Too many login attempts. Account has been locked." }
			id => "msgParserId66"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA: Target <fld11> does not exist.
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "Target %{fld11} does not exist." }
			id => "msgParserId67"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA: Failed to retrieve target <fld11> while trying to serve an authentication request.
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "Failed to retrieve target %{fld11} while trying to serve an authentication request." }
			id => "msgParserId68"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: Failed to add the user group because the user group has already existed.
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "Failed to add the user group because the user group has already existed." }
			id => "msgParserId69"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: Failed to count the number of protected targets.
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "Failed to count the number of protected targets." }
			id => "msgParserId70"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId71
	# line in RSA: User <username> does not exist.
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "User %{username} does not exist." }
			id => "msgParserId71"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA: Failed to properly create support log file for download.
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "Failed to properly create support log file for download." }
			id => "msgParserId72"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA: System error: <info>
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "System error: %{info}" }
			id => "msgParserId73"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA: Failed to retrieve server's private key from the key store. 
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "Failed to retrieve server's private key from the key store." }
			id => "msgParserId74"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId75
	# line in RSA: Failed to retrieve server's public key from the key store.
	else if [logstash][msgparser][id] == "msgParserId75" {
		dissect {
			mapping => { "message" => "Failed to retrieve server's public key from the key store." }
			id => "msgParserId75"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId76
	# line in RSA: Encryption or decryption using an asymmetric key failed.
	else if [logstash][msgparser][id] == "msgParserId76" {
		dissect {
			mapping => { "message" => "Encryption or decryption using an asymmetric key failed." }
			id => "msgParserId76"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA: User group <group> is added during mode switch.
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "User group %{group} is added during mode switch." }
			id => "msgParserId77"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA: Successfully switched to Active Directory mode
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "Successfully switched to Active Directory mode" }
			id => "msgParserId78"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: The system failed to retrieve symmetric key from key store.
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "The system failed to retrieve symmetric key from key store." }
			id => "msgParserId79"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: Active authorization policy had been updated in place.  New version <version>.
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "Active authorization policy had been updated in place.  New version %{version}." }
			id => "msgParserId80"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: The system failed to retrieve the password for the key store.
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "The system failed to retrieve the password for the key store." }
			id => "msgParserId81"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA: Can not add another target. The number of targets has reached the maximum number of targets the license supports.
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "Can not add another target. The number of targets has reached the maximum number of targets the license supports." }
			id => "msgParserId82"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: Your service account does not have enough privileges to modify group. Please add the service account to HT_SuperAdmin group in AD manually.
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "Your service account does not have enough privileges to modify group. Please add the service account to HT_SuperAdmin group in AD manually." }
			id => "msgParserId83"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA: Failed to grant privileges to the service account for HTA access. Your service account do not have enough privileges in AD. See user manual for how to grant privileges in AD to the service account.
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "Failed to grant privileges to the service account for HTA access. Your service account do not have enough privileges in AD. See user manual for how to grant privileges in AD to the service account." }
			id => "msgParserId84"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId85
	# line in RSA: The active directory configuration update has finished successfully.
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "The active directory configuration update has finished successfully." }
			id => "msgParserId85"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId86
	# line in RSA: The new password and old password have to be different to change password.
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "The new password and old password have to be different to change password." }
			id => "msgParserId86"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA: Failed to add user groups to the AD. Your service account does not have enough privileges in AD. Please grant the needed privileges to the service account and rerun the mode switch operation.
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "Failed to add user groups to the AD. Your service account does not have enough privileges in AD. Please grant the needed privileges to the service account and rerun the mode switch operation." }
			id => "msgParserId87"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId88
	# line in RSA: The login for user <username> failed. Either the password is not correct or it has been expired.
	else if [logstash][msgparser][id] == "msgParserId88" {
		dissect {
			mapping => { "message" => "The login for user %{username} failed. Either the password is not correct or it has been expired." }
			id => "msgParserId88"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId89
	# line in RSA: The login for user <username> failed. Please make sure the user is an existing user in the AD.
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "The login for user %{username} failed. Please make sure the user is an existing user in the AD." }
			id => "msgParserId89"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId90
	# line in RSA: <group> is not a fully qualified user group name. Example: "cn=mygroup,..."
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "%{group} is not a fully qualified user group name. Example: \"cn=mygroup,...\"" }
			id => "msgParserId90"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId91
	# line in RSA: Failed to create the user group: <group> because the service account does not have enough privileges. You can either add the group to AD manually or grant the service account the needed privileges, and try again.
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "Failed to create the user group: %{group} because the service account does not have enough privileges. You can either add the group to AD manually or grant the service account the needed privileges, and try again." }
			id => "msgParserId91"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId92
	# line in RSA: Failed to initialize authentication agent. Please check if the rsa api configuration file <filename> is missing.
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "Failed to initialize authentication agent. Please check if the rsa api configuration file %{filename} is missing." }
			id => "msgParserId92"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA: New pin is required. Please talk to your administrator to reset your pin.
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "New pin is required. Please talk to your administrator to reset your pin." }
			id => "msgParserId93"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA: You are entering next code mode because of your login failures. Please talk to your administrator on how to get out of this mode.
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "You are entering next code mode because of your login failures. Please talk to your administrator on how to get out of this mode." }
			id => "msgParserId94"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId95
	# line in RSA: Authentication manager returned an unrecognized status <info>. This should never happen. 
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "Authentication manager returned an unrecognized status %{info}. This should never happen." }
			id => "msgParserId95"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA: The system failed to create a user session. This can happen for different reasons. Please see your administrator or the user manual for details.
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "The system failed to create a user session. This can happen for different reasons. Please see your administrator or the user manual for details." }
			id => "msgParserId96"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId97
	# line in RSA: Failed to retrieve the RSA API configuration file path or the agent configuration file path. Please check if the database is running.
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "Failed to retrieve the RSA API configuration file path or the agent configuration file path. Please check if the database is running." }
			id => "msgParserId97"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId98
	# line in RSA: Failed to lock user account for <username>.
	else if [logstash][msgparser][id] == "msgParserId98" {
		dissect {
			mapping => { "message" => "Failed to lock user account for %{username}." }
			id => "msgParserId98"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA: RSA Authentication manager failed to perform the authentication for <username>.
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "RSA Authentication manager failed to perform the authentication for %{username}." }
			id => "msgParserId99"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId100
	# line in RSA: Failed to update RSA SecurId agent configuration file.
	else if [logstash][msgparser][id] == "msgParserId100" {
		dissect {
			mapping => { "message" => "Failed to update RSA SecurId agent configuration file." }
			id => "msgParserId100"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA: Invalid RSA Agent configuration file for initiating or updating agent configuration.
	else if [logstash][msgparser][id] == "msgParserId101" {
		dissect {
			mapping => { "message" => "Invalid RSA Agent configuration file for initiating or updating agent configuration." }
			id => "msgParserId101"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: Invalid flag for enabling or disabling rsa securId.
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "Invalid flag for enabling or disabling rsa securId." }
			id => "msgParserId102"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId103
	# line in RSA: Invalid action for configuring rsa secureId.
	else if [logstash][msgparser][id] == "msgParserId103" {
		dissect {
			mapping => { "message" => "Invalid action for configuring rsa secureId." }
			id => "msgParserId103"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId104
	# line in RSA: To perform the mode switch to active directory mode, a flag is needed to indicate if it is in advanced mode or not.
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "To perform the mode switch to active directory mode, a flag is needed to indicate if it is in advanced mode or not." }
			id => "msgParserId104"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId105
	# line in RSA: The system failed to retrieve the common name for user <username>. Please make sure your ldap server is running.
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "The system failed to retrieve the common name for user %{username}. Please make sure your ldap server is running." }
			id => "msgParserId105"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA: The token code is not correct.
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "The token code is not correct." }
			id => "msgParserId106"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId107
	# line in RSA: Pin initialization failed.
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "Pin initialization failed." }
			id => "msgParserId107"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId108
	# line in RSA: Failed to check next token code. Please make sure you entered right token code.
	else if [logstash][msgparser][id] == "msgParserId108" {
		dissect {
			mapping => { "message" => "Failed to check next token code. Please make sure you entered right token code." }
			id => "msgParserId108"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA: Failed to retrieve the data of users or user group who manage the computer.
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "Failed to retrieve the data of users or user group who manage the computer." }
			id => "msgParserId109"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId110
	# line in RSA: The system is performing update while performing authorization. Please try again. 
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "The system is performing update while performing authorization. Please try again." }
			id => "msgParserId110"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId111
	# line in RSA: The group name <group> have already been bound. If it is in the group location, it is fine. Otherwise please remove it and try again.
	else if [logstash][msgparser][id] == "msgParserId111" {
		dissect {
			mapping => { "message" => "The group name %{group} have already been bound. If it is in the group location, it is fine. Otherwise please remove it and try again." }
			id => "msgParserId111"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId112
	# line in RSA: The super admin group does not exist in the User Group Location. Your AD might contain this group in some other location. Please remove those HTA created groups in that location and add HT_SuperAdmin group to the group location. Then add the service account to the group.
	else if [logstash][msgparser][id] == "msgParserId112" {
		dissect {
			mapping => { "message" => "The super admin group does not exist in the User Group Location. Your AD might contain this group in some other location. Please remove those HTA created groups in that location and add HT_SuperAdmin group to the group location. Then add the service account to the group." }
			id => "msgParserId112"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA: Failed to close RSA session.
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "Failed to close RSA session." }
			id => "msgParserId113"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA: The file <filename> is not a valid RSA agent configuration file.
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "The file %{filename} is not a valid RSA agent configuration file." }
			id => "msgParserId114"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA: The service account is not in the user location. Add an AD user into one of the specified user locations. Then add the user to HT_SuperAdmin group before login. 
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "The service account is not in the user location. Add an AD user into one of the specified user locations. Then add the user to HT_SuperAdmin group before login." }
			id => "msgParserId115"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId116
	# line in RSA: The user location or the user group location does not exist in the specified Active Directory.
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "The user location or the user group location does not exist in the specified Active Directory." }
			id => "msgParserId116"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId117
	# line in RSA: The root password management is not licensed.
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "The root password management is not licensed." }
			id => "msgParserId117"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId118
	# line in RSA: Symmetric key encryption failed. The algorithm is not supported.
	else if [logstash][msgparser][id] == "msgParserId118" {
		dissect {
			mapping => { "message" => "Symmetric key encryption failed. The algorithm is not supported." }
			id => "msgParserId118"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId119
	# line in RSA: Symmetric key encryption failed because of the invalid padding.
	else if [logstash][msgparser][id] == "msgParserId119" {
		dissect {
			mapping => { "message" => "Symmetric key encryption failed because of the invalid padding." }
			id => "msgParserId119"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA: Symmetric key encryption failed. The secret key is not valid.
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "Symmetric key encryption failed. The secret key is not valid." }
			id => "msgParserId120"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId121
	# line in RSA: Symmetric key encryption failed because of the bad data block size.
	else if [logstash][msgparser][id] == "msgParserId121" {
		dissect {
			mapping => { "message" => "Symmetric key encryption failed because of the bad data block size." }
			id => "msgParserId121"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId122
	# line in RSA: The authentication for <username> is declined because the license evaluation period has expired.
	else if [logstash][msgparser][id] == "msgParserId122" {
		dissect {
			mapping => { "message" => "The authentication for %{username} is declined because the license evaluation period has expired." }
			id => "msgParserId122"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId123
	# line in RSA: The request for <username> from client <saddr> to perform <action> on <daddr> is authorized. The command is <info>.
	else if [logstash][msgparser][id] == "msgParserId123" {
		dissect {
			mapping => { "message" => "The request for %{username} from client %{saddr} to perform %{action} on %{daddr} is authorized. The command is %{info}." }
			id => "msgParserId123"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA: The request for <username>from client <saddr> to perform <action> on <daddr> is declined. The command is <info>.
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "The request for %{username}from client %{saddr} to perform %{action} on %{daddr} is declined. The command is %{info}." }
			id => "msgParserId124"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA: The authorization failed because of invalid user: <username>. Please make sure your directory server is running.
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "The authorization failed because of invalid user: %{username}. Please make sure your directory server is running." }
			id => "msgParserId125"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId126
	# line in RSA: <directory> is an invalid path for a user group location.
	else if [logstash][msgparser][id] == "msgParserId126" {
		dissect {
			mapping => { "message" => "%{directory} is an invalid path for a user group location." }
			id => "msgParserId126"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId127
	# line in RSA: Adding group <group> to nondefault location is not allowed. 
	else if [logstash][msgparser][id] == "msgParserId127" {
		dissect {
			mapping => { "message" => "Adding group %{group} to nondefault location is not allowed." }
			id => "msgParserId127"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA: Authorization manager initialization failed to load the operations that are allowed after evaluation license expired.
	else if [logstash][msgparser][id] == "msgParserId128" {
		dissect {
			mapping => { "message" => "Authorization manager initialization failed to load the operations that are allowed after evaluation license expired." }
			id => "msgParserId128"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId129
	# line in RSA: Rapi is not licensed.
	else if [logstash][msgparser][id] == "msgParserId129" {
		dissect {
			mapping => { "message" => "Rapi is not licensed." }
			id => "msgParserId129"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId130
	# line in RSA: Failed to initialize the authentication agent. Please check if the rsa agent configuration file <filename> is missing.
	else if [logstash][msgparser][id] == "msgParserId130" {
		dissect {
			mapping => { "message" => "Failed to initialize the authentication agent. Please check if the rsa agent configuration file %{filename} is missing." }
			id => "msgParserId130"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId131
	# line in RSA: Failed to initialize the rsa authentication agent. Please make sure you have a valid agent configuration file and your rsa authentication server is running.
	else if [logstash][msgparser][id] == "msgParserId131" {
		dissect {
			mapping => { "message" => "Failed to initialize the rsa authentication agent. Please make sure you have a valid agent configuration file and your rsa authentication server is running." }
			id => "msgParserId131"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId132
	# line in RSA: Federation is not licensed.
	else if [logstash][msgparser][id] == "msgParserId132" {
		dissect {
			mapping => { "message" => "Federation is not licensed." }
			id => "msgParserId132"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId133
	# line in RSA: Missing the Import Domain VMs flag.
	else if [logstash][msgparser][id] == "msgParserId133" {
		dissect {
			mapping => { "message" => "Missing the Import Domain VMs flag." }
			id => "msgParserId133"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId134
	# line in RSA: Failed to reach the ad server. This could be caused by the wrong server url, the server not running, or your domain name server not being able to find the domain name.
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "Failed to reach the ad server. This could be caused by the wrong server url, the server not running, or your domain name server not being able to find the domain name." }
			id => "msgParserId134"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA: The entered user or group location: <directory> is not valid.
	else if [logstash][msgparser][id] == "msgParserId135" {
		dissect {
			mapping => { "message" => "The entered user or group location: %{directory} is not valid." }
			id => "msgParserId135"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA: Mode switch is not allowed for nodes that have already joined the federation.
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "Mode switch is not allowed for nodes that have already joined the federation." }
			id => "msgParserId136"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId137
	# line in RSA: Failed to retrieve group location while creating a default rule for rule set.
	else if [logstash][msgparser][id] == "msgParserId137" {
		dissect {
			mapping => { "message" => "Failed to retrieve group location while creating a default rule for rule set." }
			id => "msgParserId137"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA: The request for {{<username> {{<group> }} from client <saddr> to perform <action> on <obj_type> : <obj_name> is declined. In the policy protecting the target, the user does not have the needed privileges: [<privilege>].
	else if [logstash][msgparser][id] == "msgParserId138" {
		grok {
			match => { "message" => "^The[\s]+request[\s]+for[\s]+\{(?<username>[^\s]*)[\s]+\{(?<group>[^\s]*)[\s]+\}\}[\s]+from[\s]+client[\s]+(?<saddr>[^\s]*)[\s]+to[\s]+perform[\s]+(?<action>[^\s]*)[\s]+on[\s]+(?<obj_type>[^\s]*)[\s]+:[\s]+(?<obj_name>[^\s]*)[\s]+is[\s]+declined\.[\s]+In[\s]+the[\s]+policy[\s]+protecting[\s]+the[\s]+target,[\s]+the[\s]+user[\s]+does[\s]+not[\s]+have[\s]+the[\s]+needed[\s]+privileges:[\s]+\[(?<privilege>[^\]]*)\]\.$" }
			id => "msgParserId138"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId139
	# line in RSA: Database error: attempt to add duplicated directory service.
	else if [logstash][msgparser][id] == "msgParserId139" {
		dissect {
			mapping => { "message" => "Database error: attempt to add duplicated directory service." }
			id => "msgParserId139"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId140
	# line in RSA: Database error: directory service not found.
	else if [logstash][msgparser][id] == "msgParserId140" {
		dissect {
			mapping => { "message" => "Database error: directory service not found." }
			id => "msgParserId140"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA: Database error: forest not found.
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "Database error: forest not found." }
			id => "msgParserId141"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId142
	# line in RSA: Database error: attempt to add duplicated domain controller.
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "Database error: attempt to add duplicated domain controller." }
			id => "msgParserId142"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId143
	# line in RSA: Database error: attempt to add duplicated forest.
	else if [logstash][msgparser][id] == "msgParserId143" {
		dissect {
			mapping => { "message" => "Database error: attempt to add duplicated forest." }
			id => "msgParserId143"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA: Database error: attempt to add duplicated global catalog.
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "Database error: attempt to add duplicated global catalog." }
			id => "msgParserId144"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId145
	# line in RSA: Database error: domain controller not found.
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "Database error: domain controller not found." }
			id => "msgParserId145"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId146
	# line in RSA: Database error: global catalog not found.
	else if [logstash][msgparser][id] == "msgParserId146" {
		dissect {
			mapping => { "message" => "Database error: global catalog not found." }
			id => "msgParserId146"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId147
	# line in RSA: Failed to discover primary domain controllers.
	else if [logstash][msgparser][id] == "msgParserId147" {
		dissect {
			mapping => { "message" => "Failed to discover primary domain controllers." }
			id => "msgParserId147"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA: Failed to execute scheduled discovery.
	else if [logstash][msgparser][id] == "msgParserId148" {
		dissect {
			mapping => { "message" => "Failed to execute scheduled discovery." }
			id => "msgParserId148"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId149
	# line in RSA: Authentication service provider is not initialized. Please contact Hytrust support.
	else if [logstash][msgparser][id] == "msgParserId149" {
		dissect {
			mapping => { "message" => "Authentication service provider is not initialized. Please contact Hytrust support." }
			id => "msgParserId149"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId150
	# line in RSA: Directory service configuration error.
	else if [logstash][msgparser][id] == "msgParserId150" {
		dissect {
			mapping => { "message" => "Directory service configuration error." }
			id => "msgParserId150"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId151
	# line in RSA: User <username> does not have permission to perform this operation.
	else if [logstash][msgparser][id] == "msgParserId151" {
		dissect {
			mapping => { "message" => "User %{username} does not have permission to perform this operation." }
			id => "msgParserId151"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId152
	# line in RSA: Directory service <service> is not available.
	else if [logstash][msgparser][id] == "msgParserId152" {
		dissect {
			mapping => { "message" => "Directory service %{service} is not available." }
			id => "msgParserId152"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AUN0150E" {
		# MESSAGE AUN0150E
		# line in RSA: Directory service general problem. Please contact Hytrust support.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Directory service general problem. Please contact Hytrust support." }
				id => "message-AUN0150E"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "AUN0150E"
					"[rsa][message][id1]" => "AUN0150E"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AUN0150E:01
		# line in RSA: Directory service <fld1> general problem: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Directory service %{fld1} general problem: %{info}" }
				id => "message-AUN0150E:01"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "AUN0150E:01"
					"[rsa][message][id1]" => "AUN0150E:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId155
	# line in RSA: Authentication failed for service account <service_account>.
	else if [logstash][msgparser][id] == "msgParserId155" {
		dissect {
			mapping => { "message" => "Authentication failed for service account %{service_account}." }
			id => "msgParserId155"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA: No global catalog is identified for forest with domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "No global catalog is identified for forest with domain %{domain}." }
			id => "msgParserId156"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId157
	# line in RSA: Failed to resolve directory service name <service>.
	else if [logstash][msgparser][id] == "msgParserId157" {
		dissect {
			mapping => { "message" => "Failed to resolve directory service name %{service}." }
			id => "msgParserId157"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId158
	# line in RSA: Group role mapping is invalid, group <group>.
	else if [logstash][msgparser][id] == "msgParserId158" {
		dissect {
			mapping => { "message" => "Group role mapping is invalid, group %{group}." }
			id => "msgParserId158"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId159
	# line in RSA: Group <group> does not exist in domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId159" {
		dissect {
			mapping => { "message" => "Group %{group} does not exist in domain %{domain}." }
			id => "msgParserId159"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId160
	# line in RSA: Failed to discover any global catalogs and/or domain controllers for domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "Failed to discover any global catalogs and/or domain controllers for domain %{domain}." }
			id => "msgParserId160"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId161
	# line in RSA: Domain and/or group name is not specified.
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "Domain and/or group name is not specified." }
			id => "msgParserId161"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId162
	# line in RSA: DNS server(s) not set.
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "DNS server(s) not set." }
			id => "msgParserId162"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId163
	# line in RSA: Authentication failed for service account <service_account>, host <hostname>.
	else if [logstash][msgparser][id] == "msgParserId163" {
		dissect {
			mapping => { "message" => "Authentication failed for service account %{service_account}, host %{hostname}." }
			id => "msgParserId163"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA: Global catalogs could not be accessed for domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "Global catalogs could not be accessed for domain %{domain}." }
			id => "msgParserId164"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId165
	# line in RSA: Domain controllers could not be accessed for domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId165" {
		dissect {
			mapping => { "message" => "Domain controllers could not be accessed for domain %{domain}." }
			id => "msgParserId165"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId166
	# line in RSA: Preferred global catalog is not set for domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId166" {
		dissect {
			mapping => { "message" => "Preferred global catalog is not set for domain %{domain}." }
			id => "msgParserId166"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId167
	# line in RSA: No domain controllers were specified.
	else if [logstash][msgparser][id] == "msgParserId167" {
		dissect {
			mapping => { "message" => "No domain controllers were specified." }
			id => "msgParserId167"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId168
	# line in RSA: Changing mode is not allowed. Current mode <change_old>, proposed mode <change_new>.
	else if [logstash][msgparser][id] == "msgParserId168" {
		dissect {
			mapping => { "message" => "Changing mode is not allowed. Current mode %{change_old}, proposed mode %{change_new}." }
			id => "msgParserId168"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId169
	# line in RSA: Failed to retrieve a group membership information for user <username>.
	else if [logstash][msgparser][id] == "msgParserId169" {
		dissect {
			mapping => { "message" => "Failed to retrieve a group membership information for user %{username}." }
			id => "msgParserId169"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId170
	# line in RSA: Failed to process DNS query <info>.
	else if [logstash][msgparser][id] == "msgParserId170" {
		dissect {
			mapping => { "message" => "Failed to process DNS query %{info}." }
			id => "msgParserId170"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId171
	# line in RSA: Failed to retrieve sub domains for domain <domain>.
	else if [logstash][msgparser][id] == "msgParserId171" {
		dissect {
			mapping => { "message" => "Failed to retrieve sub domains for domain %{domain}." }
			id => "msgParserId171"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId172
	# line in RSA: Authentication for <username> is declined by server <info>.
	else if [logstash][msgparser][id] == "msgParserId172" {
		dissect {
			mapping => { "message" => "Authentication for %{username} is declined by server %{info}." }
			id => "msgParserId172"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId173
	# line in RSA: Authentication for <username> is declined by TrendMicro Deep Security Server <info>.
	else if [logstash][msgparser][id] == "msgParserId173" {
		dissect {
			mapping => { "message" => "Authentication for %{username} is declined by TrendMicro Deep Security Server %{info}." }
			id => "msgParserId173"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId174
	# line in RSA: Domain <domain> is unreachable.
	else if [logstash][msgparser][id] == "msgParserId174" {
		dissect {
			mapping => { "message" => "Domain %{domain} is unreachable." }
			id => "msgParserId174"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId175
	# line in RSA: Opertaion <fld12> is authorized as part of sequence <fld13>.
	else if [logstash][msgparser][id] == "msgParserId175" {
		dissect {
			mapping => { "message" => "Opertaion %{fld12} is authorized as part of sequence %{fld13}." }
			id => "msgParserId175"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA: No operations found in script <fld12>.
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "No operations found in script %{fld12}." }
			id => "msgParserId176"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId177
	# line in RSA: Job scheduled to run <fld1> <fld2>, <fld3> <fld4> <fld5> on <hostname> is done at <fld6> <fld7>, <fld8> <fld9> <fld10>.
	else if [logstash][msgparser][id] == "msgParserId177" {
		dissect {
			mapping => { "message" => "Job scheduled to run %{fld1} %{fld2}, %{fld3} %{fld4} %{fld5} on %{hostname} is done at %{fld6} %{fld7}, %{fld8} %{fld9} %{fld10}." }
			id => "msgParserId177"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId178
	# line in RSA: Job scheduled to run <fld1> <fld2>, <fld3> <fld4> <fld5> on <hostname> has queue exception <result>.
	else if [logstash][msgparser][id] == "msgParserId178" {
		dissect {
			mapping => { "message" => "Job scheduled to run %{fld1} %{fld2}, %{fld3} %{fld4} %{fld5} on %{hostname} has queue exception %{result}." }
			id => "msgParserId178"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId179
	# line in RSA: Job scheduled to run <fld1> <fld2>, <fld3> <fld4> <fld5> on <hostname> has run exception <result>.
	else if [logstash][msgparser][id] == "msgParserId179" {
		dissect {
			mapping => { "message" => "Job scheduled to run %{fld1} %{fld2}, %{fld3} %{fld4} %{fld5} on %{hostname} has run exception %{result}." }
			id => "msgParserId179"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId180
	# line in RSA: Job scheduled to run <fld1> <fld2>, <fld3> <fld4> <fld5> on <hostname> is started at <fld6> <fld7>, <fld8> <fld9> <fld10>.
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "Job scheduled to run %{fld1} %{fld2}, %{fld3} %{fld4} %{fld5} on %{hostname} is started at %{fld6} %{fld7}, %{fld8} %{fld9} %{fld10}." }
			id => "msgParserId180"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId181
	# line in RSA: Invalid operation <fld12> for target <fld11>.
	else if [logstash][msgparser][id] == "msgParserId181" {
		dissect {
			mapping => { "message" => "Invalid operation %{fld12} for target %{fld11}." }
			id => "msgParserId181"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId182
	# line in RSA: No files for Perl operation <fld12> on target <fld11>.
	else if [logstash][msgparser][id] == "msgParserId182" {
		dissect {
			mapping => { "message" => "No files for Perl operation %{fld12} on target %{fld11}." }
			id => "msgParserId182"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId183
	# line in RSA: File remove error for Perl operation <fld12> on target <fld11>.
	else if [logstash][msgparser][id] == "msgParserId183" {
		dissect {
			mapping => { "message" => "File remove error for Perl operation %{fld12} on target %{fld11}." }
			id => "msgParserId183"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId184
	# line in RSA: No executable files for Perl operation <fld12> on target <fld11>.
	else if [logstash][msgparser][id] == "msgParserId184" {
		dissect {
			mapping => { "message" => "No executable files for Perl operation %{fld12} on target %{fld11}." }
			id => "msgParserId184"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId185
	# line in RSA: Invalid target requested.
	else if [logstash][msgparser][id] == "msgParserId185" {
		dissect {
			mapping => { "message" => "Invalid target requested." }
			id => "msgParserId185"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId186
	# line in RSA: Open exception <result> on target <fld11>.
	else if [logstash][msgparser][id] == "msgParserId186" {
		dissect {
			mapping => { "message" => "Open exception %{result} on target %{fld11}." }
			id => "msgParserId186"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId187
	# line in RSA: Copy file exception <result> to directory <directory>.
	else if [logstash][msgparser][id] == "msgParserId187" {
		dissect {
			mapping => { "message" => "Copy file exception %{result} to directory %{directory}." }
			id => "msgParserId187"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId188
	# line in RSA: Execute command <info> exception <result>.
	else if [logstash][msgparser][id] == "msgParserId188" {
		dissect {
			mapping => { "message" => "Execute command %{info} exception %{result}." }
			id => "msgParserId188"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA: Open session exception <result>.
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "Open session exception %{result}." }
			id => "msgParserId189"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId190
	# line in RSA: Read results exception <result>.
	else if [logstash][msgparser][id] == "msgParserId190" {
		dissect {
			mapping => { "message" => "Read results exception %{result}." }
			id => "msgParserId190"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId191
	# line in RSA: Read errors exception <result>.
	else if [logstash][msgparser][id] == "msgParserId191" {
		dissect {
			mapping => { "message" => "Read errors exception %{result}." }
			id => "msgParserId191"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId192
	# line in RSA: Database query exception <result>.
	else if [logstash][msgparser][id] == "msgParserId192" {
		dissect {
			mapping => { "message" => "Database query exception %{result}." }
			id => "msgParserId192"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId193
	# line in RSA: Property file read exception <result>.
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "Property file read exception %{result}." }
			id => "msgParserId193"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId194
	# line in RSA: Database save exception <result>.
	else if [logstash][msgparser][id] == "msgParserId194" {
		dissect {
			mapping => { "message" => "Database save exception %{result}." }
			id => "msgParserId194"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId195
	# line in RSA: Database update exception <result>.
	else if [logstash][msgparser][id] == "msgParserId195" {
		dissect {
			mapping => { "message" => "Database update exception %{result}." }
			id => "msgParserId195"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId196
	# line in RSA: TargetCatalog size is <fld16>.
	else if [logstash][msgparser][id] == "msgParserId196" {
		dissect {
			mapping => { "message" => "TargetCatalog size is %{fld16}." }
			id => "msgParserId196"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId197
	# line in RSA: Unable to authorize id.
	else if [logstash][msgparser][id] == "msgParserId197" {
		dissect {
			mapping => { "message" => "Unable to authorize id." }
			id => "msgParserId197"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId198
	# line in RSA: Source configuration read error.
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "Source configuration read error." }
			id => "msgParserId198"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId199
	# line in RSA: <fld15> exception importing hosts from VC <change_old> for <change_new>.
	else if [logstash][msgparser][id] == "msgParserId199" {
		dissect {
			mapping => { "message" => "%{fld15} exception importing hosts from VC %{change_old} for %{change_new}." }
			id => "msgParserId199"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId200
	# line in RSA: Invalid ip address syntax.
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "Invalid ip address syntax." }
			id => "msgParserId200"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId201
	# line in RSA: Database remove exception <result>.
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "Database remove exception %{result}." }
			id => "msgParserId201"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ARC0027I" {
		# MESSAGE ARC0027I:0001
		# line in RSA: <service> performed operation: {{Setting managed host location for <obj_type> : <obj_name>}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<service>[^\s]*)[\s]+performed[\s]+operation:[\s]+\{Setting[\s]+managed[\s]+host[\s]+location[\s]+for[\s]+(?<obj_type>[^\s]*)[\s]+:[\s]+(?<obj_name>[^\}]*)\}\.$" }
				id => "message-ARC0027I:0001"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0027I:0001"
					"[rsa][message][id1]" => "ARC0027I:0001"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ARC0027I:0002
		# line in RSA: <service> performed operation: {{logged in : <url> <username>}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<service>[^\s]*)[\s]+performed[\s]+operation:[\s]+\{logged[\s]+in[\s]+:[\s]+(?<url>[^\s]*)[\s]+(?<username>[^\}]*)\}\.$" }
				id => "message-ARC0027I:0002"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0027I:0002"
					"[rsa][message][id1]" => "ARC0027I:0002"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ARC0027I
		# line in RSA: <service> performed operation: <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{service} performed operation: %{action}." }
				id => "message-ARC0027I"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0027I"
					"[rsa][message][id1]" => "ARC0027I"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId205
	# line in RSA: File <filename> write exception <result>.
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "File %{filename} write exception %{result}." }
			id => "msgParserId205"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId206
	# line in RSA:  <fld15> remediate error  <result> on host  <hostname> reverting to previous.
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "%{fld15} remediate error  %{result} on host  %{hostname} reverting to previous." }
			id => "msgParserId206"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId207
	# line in RSA: <fld15>  exception setting iSCSI properties on host <info>.
	else if [logstash][msgparser][id] == "msgParserId207" {
		dissect {
			mapping => { "message" => "%{fld15}  exception setting iSCSI properties on host %{info}." }
			id => "msgParserId207"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId208
	# line in RSA: Template operation <action> error <fld15> on host <hostname>
	else if [logstash][msgparser][id] == "msgParserId208" {
		dissect {
			mapping => { "message" => "Template operation %{action} error %{fld15} on host %{hostname}" }
			id => "msgParserId208"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId209
	# line in RSA: Update root account: host <info>.
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "Update root account: host %{info}." }
			id => "msgParserId209"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId210
	# line in RSA: Operation <action> of template <info> failed on host <hostname> in job <operation_id>.
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "Operation %{action} of template %{info} failed on host %{hostname} in job %{operation_id}." }
			id => "msgParserId210"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId211
	# line in RSA: Invalid query parameters: <param>.
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "Invalid query parameters: %{param}." }
			id => "msgParserId211"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ARC0035I" {
		# MESSAGE ARC0035I:0001
		# line in RSA: VC: <fld1> <fld2> [<hostip>] User <username> logged out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] User %{username} logged out" }
				id => "message-ARC0035I:0001"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0001"
					"[rsa][message][id1]" => "ARC0035I:0001"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0002
		# line in RSA: VC: <fld1> <fld2> [<hostip>] User <username> logged in
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] User %{username} logged in" }
				id => "message-ARC0035I:0002"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0002"
					"[rsa][message][id1]" => "ARC0035I:0002"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0003
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Task: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Task: %{action}" }
				id => "message-ARC0035I:0003"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0003"
					"[rsa][message][id1]" => "ARC0035I:0003"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0004
		# line in RSA: VC: <fld1> <fld2> [<hostip>] <vsys> on host <hostname> in <group_object> is starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] %{vsys} on host %{hostname} in %{group_object} is starting" }
				id => "message-ARC0035I:0004"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0004"
					"[rsa][message][id1]" => "ARC0035I:0004"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0005
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Cannot power On <vsys> on <hostname> in <group_object>. The licensing limit on the number of running virtual machines has been reached.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Cannot power On %{vsys} on %{hostname} in %{group_object}. The licensing limit on the number of running virtual machines has been reached." }
				id => "message-ARC0035I:0005"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0005"
					"[rsa][message][id1]" => "ARC0035I:0005"
					"[event][categoryid]" => "1608010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0006
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Created datacenter <group_object> in folder <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Created datacenter %{group_object} in folder %{directory}" }
				id => "message-ARC0035I:0006"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0006"
					"[rsa][message][id1]" => "ARC0035I:0006"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0007
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Cannot connect <hostname> in <group_object>: incorrect user name or password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Cannot connect %{hostname} in %{group_object}: incorrect user name or password" }
				id => "message-ARC0035I:0007"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0007"
					"[rsa][message][id1]" => "ARC0035I:0007"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0008
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Cannot reconnect to <hostname> in <group_object>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Cannot reconnect to %{hostname} in %{group_object}" }
				id => "message-ARC0035I:0008"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0008"
					"[rsa][message][id1]" => "ARC0035I:0008"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0009
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Renamed datacenter from <change_old> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Renamed datacenter from %{change_old} to %{change_new}" }
				id => "message-ARC0035I:0009"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0009"
					"[rsa][message][id1]" => "ARC0035I:0009"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0010
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Alarm '<info>' on <hostname> changed from <change_old> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Alarm '%{info}' on %{hostname} changed from %{change_old} to %{change_new}" }
				id => "message-ARC0035I:0010"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0010"
					"[rsa][message][id1]" => "ARC0035I:0010"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0011
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Added host <hostname> to datacenter <group_object>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Added host %{hostname} to datacenter %{group_object}" }
				id => "message-ARC0035I:0011"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0011"
					"[rsa][message][id1]" => "ARC0035I:0011"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
		# MESSAGE ARC0035I:0012
		# line in RSA: VC: <fld1> <fld2> [<hostip>] Renamed datastore from <change_old> to <change_new> in <group_object>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VC: %{fld1} %{fld2} [%{hostip}] Renamed datastore from %{change_old} to %{change_new} in %{group_object}" }
				id => "message-ARC0035I:0012"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0035I:0012"
					"[rsa][message][id1]" => "ARC0035I:0012"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId224
	# line in RSA: Host <hostname> trust status is <result>.
	else if [logstash][msgparser][id] == "msgParserId224" {
		dissect {
			mapping => { "message" => "Host %{hostname} trust status is %{result}." }
			id => "msgParserId224"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId225
	# line in RSA: Host <hostname> trust status is <result>
	else if [logstash][msgparser][id] == "msgParserId225" {
		dissect {
			mapping => { "message" => "Host %{hostname} trust status is %{result}" }
			id => "msgParserId225"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId226
	# line in RSA: Invalid operation.
	else if [logstash][msgparser][id] == "msgParserId226" {
		dissect {
			mapping => { "message" => "Invalid operation." }
			id => "msgParserId226"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId227
	# line in RSA: VAL VMware exception <result>.
	else if [logstash][msgparser][id] == "msgParserId227" {
		dissect {
			mapping => { "message" => "VAL VMware exception %{result}." }
			id => "msgParserId227"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId228
	# line in RSA: <result> exception session management on host <hostname> for <info>.
	else if [logstash][msgparser][id] == "msgParserId228" {
		dissect {
			mapping => { "message" => "%{result} exception session management on host %{hostname} for %{info}." }
			id => "msgParserId228"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId229
	# line in RSA: Error occurred getting static routes.
	else if [logstash][msgparser][id] == "msgParserId229" {
		dissect {
			mapping => { "message" => "Error occurred getting static routes." }
			id => "msgParserId229"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId230
	# line in RSA: Static route already exists.
	else if [logstash][msgparser][id] == "msgParserId230" {
		dissect {
			mapping => { "message" => "Static route already exists." }
			id => "msgParserId230"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId231
	# line in RSA: Gateway is unreachable.
	else if [logstash][msgparser][id] == "msgParserId231" {
		dissect {
			mapping => { "message" => "Gateway is unreachable." }
			id => "msgParserId231"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId232
	# line in RSA: Error occurred.
	else if [logstash][msgparser][id] == "msgParserId232" {
		dissect {
			mapping => { "message" => "Error occurred." }
			id => "msgParserId232"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId233
	# line in RSA: DNS resolution error: Could not resolve DNS name <hostname>
	else if [logstash][msgparser][id] == "msgParserId233" {
		dissect {
			mapping => { "message" => "DNS resolution error: Could not resolve DNS name %{hostname}" }
			id => "msgParserId233"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId234
	# line in RSA: Policy import host exception <result>
	else if [logstash][msgparser][id] == "msgParserId234" {
		dissect {
			mapping => { "message" => "Policy import host exception %{result}" }
			id => "msgParserId234"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId235
	# line in RSA: Policy delete host exception <result>
	else if [logstash][msgparser][id] == "msgParserId235" {
		dissect {
			mapping => { "message" => "Policy delete host exception %{result}" }
			id => "msgParserId235"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId236
	# line in RSA: Policy refresh host exception <result>
	else if [logstash][msgparser][id] == "msgParserId236" {
		dissect {
			mapping => { "message" => "Policy refresh host exception %{result}" }
			id => "msgParserId236"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId237
	# line in RSA: Policy refresh all hosts exception <result>
	else if [logstash][msgparser][id] == "msgParserId237" {
		dissect {
			mapping => { "message" => "Policy refresh all hosts exception %{result}" }
			id => "msgParserId237"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId238
	# line in RSA: Cannot delete role. It may be used in existing rules.
	else if [logstash][msgparser][id] == "msgParserId238" {
		dissect {
			mapping => { "message" => "Cannot delete role. It may be used in existing rules." }
			id => "msgParserId238"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId239
	# line in RSA: Cannot delete ruleset. Ruleset is in use. Please remove all rules from the ruleset, and make sure the ruleset is not assigned to any policy resources.
	else if [logstash][msgparser][id] == "msgParserId239" {
		dissect {
			mapping => { "message" => "Cannot delete ruleset. Ruleset is in use. Please remove all rules from the ruleset, and make sure the ruleset is not assigned to any policy resources." }
			id => "msgParserId239"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId240
	# line in RSA: Policy loading error
	else if [logstash][msgparser][id] == "msgParserId240" {
		dissect {
			mapping => { "message" => "Policy loading error" }
			id => "msgParserId240"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId241
	# line in RSA: Removing label <fld16> not included in update
	else if [logstash][msgparser][id] == "msgParserId241" {
		dissect {
			mapping => { "message" => "Removing label %{fld16} not included in update" }
			id => "msgParserId241"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId242
	# line in RSA: Forwarding GET request exception <result>.
	else if [logstash][msgparser][id] == "msgParserId242" {
		dissect {
			mapping => { "message" => "Forwarding GET request exception %{result}." }
			id => "msgParserId242"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId243
	# line in RSA: Received POST request from <fld17>.
	else if [logstash][msgparser][id] == "msgParserId243" {
		dissect {
			mapping => { "message" => "Received POST request from %{fld17}." }
			id => "msgParserId243"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId244
	# line in RSA: Received GET request from <fld17>.
	else if [logstash][msgparser][id] == "msgParserId244" {
		dissect {
			mapping => { "message" => "Received GET request from %{fld17}." }
			id => "msgParserId244"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId245
	# line in RSA: Forwarding POST request exception <result>.
	else if [logstash][msgparser][id] == "msgParserId245" {
		dissect {
			mapping => { "message" => "Forwarding POST request exception %{result}." }
			id => "msgParserId245"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId246
	# line in RSA: I/O Exception <result>.
	else if [logstash][msgparser][id] == "msgParserId246" {
		dissect {
			mapping => { "message" => "I/O Exception %{result}." }
			id => "msgParserId246"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId247
	# line in RSA: Runtime Exception <result>.
	else if [logstash][msgparser][id] == "msgParserId247" {
		dissect {
			mapping => { "message" => "Runtime Exception %{result}." }
			id => "msgParserId247"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId248
	# line in RSA: Unable to instantiate parser class <info>
	else if [logstash][msgparser][id] == "msgParserId248" {
		dissect {
			mapping => { "message" => "Unable to instantiate parser class %{info}" }
			id => "msgParserId248"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId249
	# line in RSA: Security exception while attempting to create service endpoint for <info>.
	else if [logstash][msgparser][id] == "msgParserId249" {
		dissect {
			mapping => { "message" => "Security exception while attempting to create service endpoint for %{info}." }
			id => "msgParserId249"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId250
	# line in RSA: Source: <saddr> Destination: <daddr> User: <username> Operation: <action>, Parameters: <info>.
	else if [logstash][msgparser][id] == "msgParserId250" {
		dissect {
			mapping => { "message" => "Source: %{saddr} Destination: %{daddr} User: %{username} Operation: %{action}, Parameters: %{info}." }
			id => "msgParserId250"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId251
	# line in RSA: Source: <saddr> Destination: <daddr> Operation: <action>, Parameters: <info>.
	else if [logstash][msgparser][id] == "msgParserId251" {
		dissect {
			mapping => { "message" => "Source: %{saddr} Destination: %{daddr} Operation: %{action}, Parameters: %{info}." }
			id => "msgParserId251"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId252
	# line in RSA: The authentication for <username> failed. Please check your user name and password.
	else if [logstash][msgparser][id] == "msgParserId252" {
		dissect {
			mapping => { "message" => "The authentication for %{username} failed. Please check your user name and password." }
			id => "msgParserId252"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId253
	# line in RSA: The authentication for <username> failed. Please check your username and password.
	else if [logstash][msgparser][id] == "msgParserId253" {
		dissect {
			mapping => { "message" => "The authentication for %{username} failed. Please check your username and password." }
			id => "msgParserId253"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId254
	# line in RSA: Request to perform operation <action> is denied. User <username> does not have a privilege to perform this operation on <hostname>.
	else if [logstash][msgparser][id] == "msgParserId254" {
		dissect {
			mapping => { "message" => "Request to perform operation %{action} is denied. User %{username} does not have a privilege to perform this operation on %{hostname}." }
			id => "msgParserId254"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId255
	# line in RSA: Request to perform operation <action> is denied. User  <username> does not have a privilege to perform this operation on <hostname>.
	else if [logstash][msgparser][id] == "msgParserId255" {
		dissect {
			mapping => { "message" => "Request to perform operation %{action} is denied. User  %{username} does not have a privilege to perform this operation on %{hostname}." }
			id => "msgParserId255"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Request"
				"ec_outcome" => "Failure"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId256
	# line in RSA: Deployment type is set incorrectly.
	else if [logstash][msgparser][id] == "msgParserId256" {
		dissect {
			mapping => { "message" => "Deployment type is set incorrectly." }
			id => "msgParserId256"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId257
	# line in RSA: Either control plane or management VLAN(s) not set.
	else if [logstash][msgparser][id] == "msgParserId257" {
		dissect {
			mapping => { "message" => "Either control plane or management VLAN(s) not set." }
			id => "msgParserId257"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId258
	# line in RSA: Either control plane or management VLAN(s) are set when deployment type is not VLAN based.
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "Either control plane or management VLAN(s) are set when deployment type is not VLAN based." }
			id => "msgParserId258"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId259
	# line in RSA: Target and/or target user credentials are not set.
	else if [logstash][msgparser][id] == "msgParserId259" {
		dissect {
			mapping => { "message" => "Target and/or target user credentials are not set." }
			id => "msgParserId259"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId260
	# line in RSA: Target is not accessible.
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "Target is not accessible." }
			id => "msgParserId260"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId261
	# line in RSA: Deployment type does not allow setting up this interface.
	else if [logstash][msgparser][id] == "msgParserId261" {
		dissect {
			mapping => { "message" => "Deployment type does not allow setting up this interface." }
			id => "msgParserId261"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId262
	# line in RSA: Physical interface is not available.
	else if [logstash][msgparser][id] == "msgParserId262" {
		dissect {
			mapping => { "message" => "Physical interface is not available." }
			id => "msgParserId262"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId263
	# line in RSA: VLAN range is invalid.
	else if [logstash][msgparser][id] == "msgParserId263" {
		dissect {
			mapping => { "message" => "VLAN range is invalid." }
			id => "msgParserId263"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId264
	# line in RSA: VLAN is not set.
	else if [logstash][msgparser][id] == "msgParserId264" {
		dissect {
			mapping => { "message" => "VLAN is not set." }
			id => "msgParserId264"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId265
	# line in RSA: IP address and/or subnet mask is set when DHCP is enabled.
	else if [logstash][msgparser][id] == "msgParserId265" {
		dissect {
			mapping => { "message" => "IP address and/or subnet mask is set when DHCP is enabled." }
			id => "msgParserId265"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId266
	# line in RSA: IP address is invalid.
	else if [logstash][msgparser][id] == "msgParserId266" {
		dissect {
			mapping => { "message" => "IP address is invalid." }
			id => "msgParserId266"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId267
	# line in RSA: Subnet mask is invalid.
	else if [logstash][msgparser][id] == "msgParserId267" {
		dissect {
			mapping => { "message" => "Subnet mask is invalid." }
			id => "msgParserId267"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId268
	# line in RSA: DNS is set when DHCP is enabled.
	else if [logstash][msgparser][id] == "msgParserId268" {
		dissect {
			mapping => { "message" => "DNS is set when DHCP is enabled." }
			id => "msgParserId268"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId269
	# line in RSA: DNS server(s) is invalid.
	else if [logstash][msgparser][id] == "msgParserId269" {
		dissect {
			mapping => { "message" => "DNS server(s) is invalid." }
			id => "msgParserId269"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId270
	# line in RSA: Invalid FullY Qualified Domain Name.
	else if [logstash][msgparser][id] == "msgParserId270" {
		dissect {
			mapping => { "message" => "Invalid FullY Qualified Domain Name." }
			id => "msgParserId270"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId271
	# line in RSA: Time server(s) are not specified.
	else if [logstash][msgparser][id] == "msgParserId271" {
		dissect {
			mapping => { "message" => "Time server(s) are not specified." }
			id => "msgParserId271"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId272
	# line in RSA: VLAN is set when physical deployment is chosen.
	else if [logstash][msgparser][id] == "msgParserId272" {
		dissect {
			mapping => { "message" => "VLAN is set when physical deployment is chosen." }
			id => "msgParserId272"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId273
	# line in RSA: HTA host configuration is not set.
	else if [logstash][msgparser][id] == "msgParserId273" {
		dissect {
			mapping => { "message" => "HTA host configuration is not set." }
			id => "msgParserId273"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId274
	# line in RSA: Virtual infrastructure resources are not available. Please configure them manually.
	else if [logstash][msgparser][id] == "msgParserId274" {
		dissect {
			mapping => { "message" => "Virtual infrastructure resources are not available. Please configure them manually." }
			id => "msgParserId274"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId275
	# line in RSA: SNMP community string was expected.
	else if [logstash][msgparser][id] == "msgParserId275" {
		dissect {
			mapping => { "message" => "SNMP community string was expected." }
			id => "msgParserId275"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId276
	# line in RSA: A valid email address was expected.
	else if [logstash][msgparser][id] == "msgParserId276" {
		dissect {
			mapping => { "message" => "A valid email address was expected." }
			id => "msgParserId276"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId277
	# line in RSA: A valid URL was expected.
	else if [logstash][msgparser][id] == "msgParserId277" {
		dissect {
			mapping => { "message" => "A valid URL was expected." }
			id => "msgParserId277"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId278
	# line in RSA: Unable to update shadow password.
	else if [logstash][msgparser][id] == "msgParserId278" {
		dissect {
			mapping => { "message" => "Unable to update shadow password." }
			id => "msgParserId278"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId279
	# line in RSA: Installing PRMs failed <result>.
	else if [logstash][msgparser][id] == "msgParserId279" {
		dissect {
			mapping => { "message" => "Installing PRMs failed %{result}." }
			id => "msgParserId279"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId280
	# line in RSA: Install RPMs failed <result>.
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "Install RPMs failed %{result}." }
			id => "msgParserId280"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId281
	# line in RSA: License signature failed with exception: <result>.
	else if [logstash][msgparser][id] == "msgParserId281" {
		dissect {
			mapping => { "message" => "License signature failed with exception: %{result}." }
			id => "msgParserId281"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId282
	# line in RSA: No license file found: <result>.
	else if [logstash][msgparser][id] == "msgParserId282" {
		dissect {
			mapping => { "message" => "No license file found: %{result}." }
			id => "msgParserId282"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId283
	# line in RSA: New license downloaded from: <info>.
	else if [logstash][msgparser][id] == "msgParserId283" {
		dissect {
			mapping => { "message" => "New license downloaded from: %{info}." }
			id => "msgParserId283"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA: Called entitlement server for list of updates: <info>.
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "Called entitlement server for list of updates: %{info}." }
			id => "msgParserId284"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA: Did not get proper response from entitlement server.
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "Did not get proper response from entitlement server." }
			id => "msgParserId285"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId286
	# line in RSA: No update check file found: <info>.
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "No update check file found: %{info}." }
			id => "msgParserId286"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId287
	# line in RSA: UpdateCheck signature failed with exception: <info>.
	else if [logstash][msgparser][id] == "msgParserId287" {
		dissect {
			mapping => { "message" => "UpdateCheck signature failed with exception: %{info}." }
			id => "msgParserId287"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId288
	# line in RSA: License XML parsing  <info>.
	else if [logstash][msgparser][id] == "msgParserId288" {
		dissect {
			mapping => { "message" => "License XML parsing  %{info}." }
			id => "msgParserId288"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId289
	# line in RSA: Cannot find license public key.
	else if [logstash][msgparser][id] == "msgParserId289" {
		dissect {
			mapping => { "message" => "Cannot find license public key." }
			id => "msgParserId289"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId290
	# line in RSA: The license does not have any appliance serial number.
	else if [logstash][msgparser][id] == "msgParserId290" {
		dissect {
			mapping => { "message" => "The license does not have any appliance serial number." }
			id => "msgParserId290"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId291
	# line in RSA: The license evaluation period has been expired.
	else if [logstash][msgparser][id] == "msgParserId291" {
		dissect {
			mapping => { "message" => "The license evaluation period has been expired." }
			id => "msgParserId291"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId292
	# line in RSA: connectToEntitlementDB - <result>.
	else if [logstash][msgparser][id] == "msgParserId292" {
		dissect {
			mapping => { "message" => "connectToEntitlementDB - %{result}." }
			id => "msgParserId292"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA: Failed to generate license signature: <info>.
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "Failed to generate license signature: %{info}." }
			id => "msgParserId293"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA: Invalid input data
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "Invalid input data" }
			id => "msgParserId294"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA: Invalid URL, or Virtual Center was unreachable
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "Invalid URL, or Virtual Center was unreachable" }
			id => "msgParserId295"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA: Unable to register plugin
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "Unable to register plugin" }
			id => "msgParserId296"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA: Unable to unregister plugin
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "Unable to unregister plugin" }
			id => "msgParserId297"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA: Unable to update plugin
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "Unable to update plugin" }
			id => "msgParserId298"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA: Unable to list plugin
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "Unable to list plugin" }
			id => "msgParserId299"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA: Unable to lookup plugin 
	else if [logstash][msgparser][id] == "msgParserId300" {
		dissect {
			mapping => { "message" => "Unable to lookup plugin" }
			id => "msgParserId300"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA: Plugin not found
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "Plugin not found" }
			id => "msgParserId301"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId302
	# line in RSA: Plugin already registered
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "Plugin already registered" }
			id => "msgParserId302"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId303
	# line in RSA: VCenter credentials are incorrect
	else if [logstash][msgparser][id] == "msgParserId303" {
		dissect {
			mapping => { "message" => "VCenter credentials are incorrect" }
			id => "msgParserId303"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId304
	# line in RSA: The IP address for the provided host name could not be resolved.
	else if [logstash][msgparser][id] == "msgParserId304" {
		dissect {
			mapping => { "message" => "The IP address for the provided host name could not be resolved." }
			id => "msgParserId304"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId305
	# line in RSA: Attributes cannot be empty and cannot contain the pipe character '|'.
	else if [logstash][msgparser][id] == "msgParserId305" {
		dissect {
			mapping => { "message" => "Attributes cannot be empty and cannot contain the pipe character '|'." }
			id => "msgParserId305"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId306
	# line in RSA: Could not purge logs. Please contact HyTrust Support.
	else if [logstash][msgparser][id] == "msgParserId306" {
		dissect {
			mapping => { "message" => "Could not purge logs. Please contact HyTrust Support." }
			id => "msgParserId306"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId307
	# line in RSA: You must accept the license agreement to continue.
	else if [logstash][msgparser][id] == "msgParserId307" {
		dissect {
			mapping => { "message" => "You must accept the license agreement to continue." }
			id => "msgParserId307"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId308
	# line in RSA: Could not execute script
	else if [logstash][msgparser][id] == "msgParserId308" {
		dissect {
			mapping => { "message" => "Could not execute script" }
			id => "msgParserId308"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId309
	# line in RSA: Update failed
	else if [logstash][msgparser][id] == "msgParserId309" {
		dissect {
			mapping => { "message" => "Update failed" }
			id => "msgParserId309"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA: Update server is unreachable
	else if [logstash][msgparser][id] == "msgParserId310" {
		dissect {
			mapping => { "message" => "Update server is unreachable" }
			id => "msgParserId310"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId311
	# line in RSA: Job Runner failure
	else if [logstash][msgparser][id] == "msgParserId311" {
		dissect {
			mapping => { "message" => "Job Runner failure" }
			id => "msgParserId311"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA: Failed to obtain certificates
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "Failed to obtain certificates" }
			id => "msgParserId312"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId313
	# line in RSA: Error processing a certificate
	else if [logstash][msgparser][id] == "msgParserId313" {
		dissect {
			mapping => { "message" => "Error processing a certificate" }
			id => "msgParserId313"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA: <info>
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId314"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA: Added or edited custom template <rule_template>.
	else if [logstash][msgparser][id] == "msgParserId315" {
		dissect {
			mapping => { "message" => "Added or edited custom template %{rule_template}." }
			id => "msgParserId315"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId316
	# line in RSA: Deleted custom template <rule_template>.
	else if [logstash][msgparser][id] == "msgParserId316" {
		dissect {
			mapping => { "message" => "Deleted custom template %{rule_template}." }
			id => "msgParserId316"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId317
	# line in RSA: User <username> requested a temporary password for host <hostname> for reason <info>. Password expires on <fld1> <fld2> <fld3>.
	else if [logstash][msgparser][id] == "msgParserId317" {
		dissect {
			mapping => { "message" => "User %{username} requested a temporary password for host %{hostname} for reason %{info}. Password expires on %{fld1} %{fld2} %{fld3}." }
			id => "msgParserId317"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MM/dd/yyyy HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId318
	# line in RSA: The <param> was set by <username>.
	else if [logstash][msgparser][id] == "msgParserId318" {
		dissect {
			mapping => { "message" => "The %{param} was set by %{username}." }
			id => "msgParserId318"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA: <info> root password for host <hostname> from  <saddr>
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "%{info} root password for host %{hostname} from  %{saddr}" }
			id => "msgParserId319"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId320
	# line in RSA: <info> failed to authorize when requesting root password for host <hostname> from  <saddr>
	else if [logstash][msgparser][id] == "msgParserId320" {
		dissect {
			mapping => { "message" => "%{info} failed to authorize when requesting root password for host %{hostname} from  %{saddr}" }
			id => "msgParserId320"
			add_field => {
				"severity" => "%{hseverity}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId321
	# line in RSA: <info> host <hostname> from  <saddr>
	else if [logstash][msgparser][id] == "msgParserId321" {
		dissect {
			mapping => { "message" => "%{info} host %{hostname} from  %{saddr}" }
			id => "msgParserId321"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId322
	# line in RSA: <username> has updated the privileges for role <user_role>
	else if [logstash][msgparser][id] == "msgParserId322" {
		dissect {
			mapping => { "message" => "%{username} has updated the privileges for role %{user_role}" }
			id => "msgParserId322"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId323
	# line in RSA: Assigned ruleset <rule_group> to <obj_type> <obj_name>
	else if [logstash][msgparser][id] == "msgParserId323" {
		dissect {
			mapping => { "message" => "Assigned ruleset %{rule_group} to %{obj_type} %{obj_name}" }
			id => "msgParserId323"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId324
	# line in RSA: Assigned rule <rulename> to <obj_type> <obj_name>
	else if [logstash][msgparser][id] == "msgParserId324" {
		dissect {
			mapping => { "message" => "Assigned rule %{rulename} to %{obj_type} %{obj_name}" }
			id => "msgParserId324"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId325
	# line in RSA: Unassigned rule  <rulename> from resource <obj_name>
	else if [logstash][msgparser][id] == "msgParserId325" {
		dissect {
			mapping => { "message" => "Unassigned rule  %{rulename} from resource %{obj_name}" }
			id => "msgParserId325"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId326
	# line in RSA: Assigned rule <rulename> to ruleset <rule_group>
	else if [logstash][msgparser][id] == "msgParserId326" {
		dissect {
			mapping => { "message" => "Assigned rule %{rulename} to ruleset %{rule_group}" }
			id => "msgParserId326"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA: Unassigned rule <rulename> from ruleset <rule_group>
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "Unassigned rule %{rulename} from ruleset %{rule_group}" }
			id => "msgParserId327"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId328
	# line in RSA: Added or edited custom template <rule_template>
	else if [logstash][msgparser][id] == "msgParserId328" {
		dissect {
			mapping => { "message" => "Added or edited custom template %{rule_template}" }
			id => "msgParserId328"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId329
	# line in RSA: Unassigned ruleset <rule_group> from resource <obj_name>
	else if [logstash][msgparser][id] == "msgParserId329" {
		dissect {
			mapping => { "message" => "Unassigned ruleset %{rule_group} from resource %{obj_name}" }
			id => "msgParserId329"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId330
	# line in RSA:  <username> deployed the draft policy
	else if [logstash][msgparser][id] == "msgParserId330" {
		dissect {
			mapping => { "message" => "%{username} deployed the draft policy" }
			id => "msgParserId330"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId331
	# line in RSA:  <username> discarded the draft policy
	else if [logstash][msgparser][id] == "msgParserId331" {
		dissect {
			mapping => { "message" => "%{username} discarded the draft policy" }
			id => "msgParserId331"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId332
	# line in RSA: Edited ruleset <rule_group>
	else if [logstash][msgparser][id] == "msgParserId332" {
		dissect {
			mapping => { "message" => "Edited ruleset %{rule_group}" }
			id => "msgParserId332"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId333
	# line in RSA: Created rule <rulename>
	else if [logstash][msgparser][id] == "msgParserId333" {
		dissect {
			mapping => { "message" => "Created rule %{rulename}" }
			id => "msgParserId333"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId334
	# line in RSA: Edited rule <rulename>
	else if [logstash][msgparser][id] == "msgParserId334" {
		dissect {
			mapping => { "message" => "Edited rule %{rulename}" }
			id => "msgParserId334"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId335
	# line in RSA: Deleted rule <rulename>
	else if [logstash][msgparser][id] == "msgParserId335" {
		dissect {
			mapping => { "message" => "Deleted rule %{rulename}" }
			id => "msgParserId335"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId336
	# line in RSA: Deleted ruleset <rule_group>
	else if [logstash][msgparser][id] == "msgParserId336" {
		dissect {
			mapping => { "message" => "Deleted ruleset %{rule_group}" }
			id => "msgParserId336"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId337
	# line in RSA: Unused, available
	else if [logstash][msgparser][id] == "msgParserId337" {
		dissect {
			mapping => { "message" => "Unused, available" }
			id => "msgParserId337"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId338
	# line in RSA: Updated third party host: <dhost>
	else if [logstash][msgparser][id] == "msgParserId338" {
		dissect {
			mapping => { "message" => "Updated third party host: %{dhost}" }
			id => "msgParserId338"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId339
	# line in RSA: Created ruleset <rule_group>
	else if [logstash][msgparser][id] == "msgParserId339" {
		dissect {
			mapping => { "message" => "Created ruleset %{rule_group}" }
			id => "msgParserId339"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId340
	# line in RSA: Reindexing logs succeeded
	else if [logstash][msgparser][id] == "msgParserId340" {
		dissect {
			mapping => { "message" => "Reindexing logs succeeded" }
			id => "msgParserId340"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId341
	# line in RSA: Reindexing logs failed
	else if [logstash][msgparser][id] == "msgParserId341" {
		dissect {
			mapping => { "message" => "Reindexing logs failed" }
			id => "msgParserId341"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId342
	# line in RSA: Reindexing policy succeeded
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "Reindexing policy succeeded" }
			id => "msgParserId342"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId343
	# line in RSA: Reindexing policy failed
	else if [logstash][msgparser][id] == "msgParserId343" {
		dissect {
			mapping => { "message" => "Reindexing policy failed" }
			id => "msgParserId343"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId344
	# line in RSA: Failed to write server type to federation configuration file.
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "Failed to write server type to federation configuration file." }
			id => "msgParserId344"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId345
	# line in RSA: Failed to read server type from federation configuration file.
	else if [logstash][msgparser][id] == "msgParserId345" {
		dissect {
			mapping => { "message" => "Failed to read server type from federation configuration file." }
			id => "msgParserId345"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId346
	# line in RSA: This is not a hub. Configuring it as a hub is not allowed.
	else if [logstash][msgparser][id] == "msgParserId346" {
		dissect {
			mapping => { "message" => "This is not a hub. Configuring it as a hub is not allowed." }
			id => "msgParserId346"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId347
	# line in RSA: This is not a node. Configuring it as a node is not allowed.
	else if [logstash][msgparser][id] == "msgParserId347" {
		dissect {
			mapping => { "message" => "This is not a node. Configuring it as a node is not allowed." }
			id => "msgParserId347"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId348
	# line in RSA: JMS receive error <info>.
	else if [logstash][msgparser][id] == "msgParserId348" {
		dissect {
			mapping => { "message" => "JMS receive error %{info}." }
			id => "msgParserId348"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId349
	# line in RSA: JMS message received with no listener.
	else if [logstash][msgparser][id] == "msgParserId349" {
		dissect {
			mapping => { "message" => "JMS message received with no listener." }
			id => "msgParserId349"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId350
	# line in RSA: Node registration failed. Either the temp password is expired or the temp password for the node does not match the temp password in the hub.
	else if [logstash][msgparser][id] == "msgParserId350" {
		dissect {
			mapping => { "message" => "Node registration failed. Either the temp password is expired or the temp password for the node does not match the temp password in the hub." }
			id => "msgParserId350"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId351
	# line in RSA: The url for web service: <url> is not valid or the service is not running.
	else if [logstash][msgparser][id] == "msgParserId351" {
		dissect {
			mapping => { "message" => "The url for web service: %{url} is not valid or the service is not running." }
			id => "msgParserId351"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId352
	# line in RSA: Adding node <node> to the federation is not permitted. The temp password is not valid.
	else if [logstash][msgparser][id] == "msgParserId352" {
		dissect {
			mapping => { "message" => "Adding node %{node} to the federation is not permitted. The temp password is not valid." }
			id => "msgParserId352"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId353
	# line in RSA: Removing node <node> from the federation is not permitted. The temp password is not valid.
	else if [logstash][msgparser][id] == "msgParserId353" {
		dissect {
			mapping => { "message" => "Removing node %{node} from the federation is not permitted. The temp password is not valid." }
			id => "msgParserId353"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId354
	# line in RSA: The web service on the hub failed to remove node because of <info>.
	else if [logstash][msgparser][id] == "msgParserId354" {
		dissect {
			mapping => { "message" => "The web service on the hub failed to remove node because of %{info}." }
			id => "msgParserId354"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId355
	# line in RSA: Unregistering the node failed. This node is not part of the federation.
	else if [logstash][msgparser][id] == "msgParserId355" {
		dissect {
			mapping => { "message" => "Unregistering the node failed. This node is not part of the federation." }
			id => "msgParserId355"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId356
	# line in RSA: Failed to retrieve the hub's full qualified host name.
	else if [logstash][msgparser][id] == "msgParserId356" {
		dissect {
			mapping => { "message" => "Failed to retrieve the hub's full qualified host name." }
			id => "msgParserId356"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId357
	# line in RSA: The node <node> has already been registered as part of the federation.
	else if [logstash][msgparser][id] == "msgParserId357" {
		dissect {
			mapping => { "message" => "The node %{node} has already been registered as part of the federation." }
			id => "msgParserId357"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId358
	# line in RSA: The node <node> is not a registered node.
	else if [logstash][msgparser][id] == "msgParserId358" {
		dissect {
			mapping => { "message" => "The node %{node} is not a registered node." }
			id => "msgParserId358"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId359
	# line in RSA: Database operation failed.
	else if [logstash][msgparser][id] == "msgParserId359" {
		dissect {
			mapping => { "message" => "Database operation failed." }
			id => "msgParserId359"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId360
	# line in RSA: The node has already been initialized.
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "The node has already been initialized." }
			id => "msgParserId360"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId361
	# line in RSA: Updating status failed. There is no synchronization data record with the sequence number <operation_id>.
	else if [logstash][msgparser][id] == "msgParserId361" {
		dissect {
			mapping => { "message" => "Updating status failed. There is no synchronization data record with the sequence number %{operation_id}." }
			id => "msgParserId361"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId362
	# line in RSA: Creating registration client failed.
	else if [logstash][msgparser][id] == "msgParserId362" {
		dissect {
			mapping => { "message" => "Creating registration client failed." }
			id => "msgParserId362"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId363
	# line in RSA: The port <network_port> is in an invalid format.
	else if [logstash][msgparser][id] == "msgParserId363" {
		dissect {
			mapping => { "message" => "The port %{network_port} is in an invalid format." }
			id => "msgParserId363"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId364
	# line in RSA: Failed to reach the hub while deregistering the node <node>. Please remove the node from the hub manually.
	else if [logstash][msgparser][id] == "msgParserId364" {
		dissect {
			mapping => { "message" => "Failed to reach the hub while deregistering the node %{node}. Please remove the node from the hub manually." }
			id => "msgParserId364"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId365
	# line in RSA: There is no hub for this hta. This hta is not a member of any federation.
	else if [logstash][msgparser][id] == "msgParserId365" {
		dissect {
			mapping => { "message" => "There is no hub for this hta. This hta is not a member of any federation." }
			id => "msgParserId365"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId366
	# line in RSA: Node <node> has been registered successfully.
	else if [logstash][msgparser][id] == "msgParserId366" {
		dissect {
			mapping => { "message" => "Node %{node} has been registered successfully." }
			id => "msgParserId366"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId367
	# line in RSA: Node <node> has been removed from the federation successfully.
	else if [logstash][msgparser][id] == "msgParserId367" {
		dissect {
			mapping => { "message" => "Node %{node} has been removed from the federation successfully." }
			id => "msgParserId367"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId368
	# line in RSA: The registration for node <node> failed.
	else if [logstash][msgparser][id] == "msgParserId368" {
		dissect {
			mapping => { "message" => "The registration for node %{node} failed." }
			id => "msgParserId368"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId369
	# line in RSA: The registration for node <node> failed, but it has been added to the hub. Please remove it from the hub manually.
	else if [logstash][msgparser][id] == "msgParserId369" {
		dissect {
			mapping => { "message" => "The registration for node %{node} failed, but it has been added to the hub. Please remove it from the hub manually." }
			id => "msgParserId369"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId370
	# line in RSA: The node <node> has been removed from the hub, but you need to remove the node from the hub manually since hub is down right now.
	else if [logstash][msgparser][id] == "msgParserId370" {
		dissect {
			mapping => { "message" => "The node %{node} has been removed from the hub, but you need to remove the node from the hub manually since hub is down right now." }
			id => "msgParserId370"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId371
	# line in RSA: The hub has been initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId371" {
		dissect {
			mapping => { "message" => "The hub has been initialized successfully." }
			id => "msgParserId371"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId372
	# line in RSA: The node <node> has been added to the hub successfully.
	else if [logstash][msgparser][id] == "msgParserId372" {
		dissect {
			mapping => { "message" => "The node %{node} has been added to the hub successfully." }
			id => "msgParserId372"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId373
	# line in RSA: The node <node> has been removed from the hub successfully.
	else if [logstash][msgparser][id] == "msgParserId373" {
		dissect {
			mapping => { "message" => "The node %{node} has been removed from the hub successfully." }
			id => "msgParserId373"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId374
	# line in RSA: Node registration failed because of database operation errors.
	else if [logstash][msgparser][id] == "msgParserId374" {
		dissect {
			mapping => { "message" => "Node registration failed because of database operation errors." }
			id => "msgParserId374"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId375
	# line in RSA: Node registration failed. The hub is not available.
	else if [logstash][msgparser][id] == "msgParserId375" {
		dissect {
			mapping => { "message" => "Node registration failed. The hub is not available." }
			id => "msgParserId375"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId376
	# line in RSA: Failed to restart message server.
	else if [logstash][msgparser][id] == "msgParserId376" {
		dissect {
			mapping => { "message" => "Failed to restart message server." }
			id => "msgParserId376"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId377
	# line in RSA: Node deregistration requested from the hub failed.
	else if [logstash][msgparser][id] == "msgParserId377" {
		dissect {
			mapping => { "message" => "Node deregistration requested from the hub failed." }
			id => "msgParserId377"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId378
	# line in RSA: The authentication modes of the node and the hub are incompatible. They must both be in Active Directory mode.
	else if [logstash][msgparser][id] == "msgParserId378" {
		dissect {
			mapping => { "message" => "The authentication modes of the node and the hub are incompatible. They must both be in Active Directory mode." }
			id => "msgParserId378"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId379
	# line in RSA: Invalid root domain. Please contact the Active Directory administrator.
	else if [logstash][msgparser][id] == "msgParserId379" {
		dissect {
			mapping => { "message" => "Invalid root domain. Please contact the Active Directory administrator." }
			id => "msgParserId379"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId380
	# line in RSA: Failed to connect to hub <info>, error <result>
	else if [logstash][msgparser][id] == "msgParserId380" {
		dissect {
			mapping => { "message" => "Failed to connect to hub %{info}, error %{result}" }
			id => "msgParserId380"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId381
	# line in RSA: Failed to initialized the hub data sync manager, error <result>
	else if [logstash][msgparser][id] == "msgParserId381" {
		dissect {
			mapping => { "message" => "Failed to initialized the hub data sync manager, error %{result}" }
			id => "msgParserId381"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId382
	# line in RSA: Hub (<info>) is not initialized but received the message
	else if [logstash][msgparser][id] == "msgParserId382" {
		dissect {
			mapping => { "message" => "Hub (%{info}) is not initialized but received the message" }
			id => "msgParserId382"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId383
	# line in RSA: Hub (<info>) received empty message
	else if [logstash][msgparser][id] == "msgParserId383" {
		dissect {
			mapping => { "message" => "Hub (%{info}) received empty message" }
			id => "msgParserId383"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId384
	# line in RSA: Hub (<info>) received unsupported subject <context> from node (<node>)
	else if [logstash][msgparser][id] == "msgParserId384" {
		dissect {
			mapping => { "message" => "Hub (%{info}) received unsupported subject %{context} from node (%{node})" }
			id => "msgParserId384"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId385
	# line in RSA: Failed to initialize data store: template add/update error <result>
	else if [logstash][msgparser][id] == "msgParserId385" {
		dissect {
			mapping => { "message" => "Failed to initialize data store: template add/update error %{result}" }
			id => "msgParserId385"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId386
	# line in RSA: Failed to update data store: template add error <result>
	else if [logstash][msgparser][id] == "msgParserId386" {
		dissect {
			mapping => { "message" => "Failed to update data store: template add error %{result}" }
			id => "msgParserId386"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId387
	# line in RSA: Failed to update data store: template update error <result>
	else if [logstash][msgparser][id] == "msgParserId387" {
		dissect {
			mapping => { "message" => "Failed to update data store: template update error %{result}" }
			id => "msgParserId387"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId388
	# line in RSA: Failed to update data store: template delete error <result>
	else if [logstash][msgparser][id] == "msgParserId388" {
		dissect {
			mapping => { "message" => "Failed to update data store: template delete error %{result}" }
			id => "msgParserId388"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId389
	# line in RSA: Node (<node>) failed to process update
	else if [logstash][msgparser][id] == "msgParserId389" {
		dissect {
			mapping => { "message" => "Node (%{node}) failed to process update" }
			id => "msgParserId389"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId390
	# line in RSA: RAPI <fld19> exception: <result>
	else if [logstash][msgparser][id] == "msgParserId390" {
		dissect {
			mapping => { "message" => "RAPI %{fld19} exception: %{result}" }
			id => "msgParserId390"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId391
	# line in RSA: Failed to initialize LDAP SSL: <info>.
	else if [logstash][msgparser][id] == "msgParserId391" {
		dissect {
			mapping => { "message" => "Failed to initialize LDAP SSL: %{info}." }
			id => "msgParserId391"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId392
	# line in RSA: Certificate issued by <info> is invalid: <result>.
	else if [logstash][msgparser][id] == "msgParserId392" {
		dissect {
			mapping => { "message" => "Certificate issued by %{info} is invalid: %{result}." }
			id => "msgParserId392"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId393
	# line in RSA: Failed to construct message for message id <id>. Please make sure it is a valid message id or valid argument is passed.
	else if [logstash][msgparser][id] == "msgParserId393" {
		dissect {
			mapping => { "message" => "Failed to construct message for message id %{id}. Please make sure it is a valid message id or valid argument is passed." }
			id => "msgParserId393"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId394
	# line in RSA: Failed to retrieve user credentials for TrendMicro Deep Securit server <info> 
	else if [logstash][msgparser][id] == "msgParserId394" {
		dissect {
			mapping => { "message" => "Failed to retrieve user credentials for TrendMicro Deep Securit server %{info}" }
			id => "msgParserId394"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId395
	# line in RSA: Communication error for user <username> on TrendMicro Deep Security server <info> 
	else if [logstash][msgparser][id] == "msgParserId395" {
		dissect {
			mapping => { "message" => "Communication error for user %{username} on TrendMicro Deep Security server %{info}" }
			id => "msgParserId395"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId396
	# line in RSA: User <username> maxed out the number of session on TrendMicro Deep Security server <info> 
	else if [logstash][msgparser][id] == "msgParserId396" {
		dissect {
			mapping => { "message" => "User %{username} maxed out the number of session on TrendMicro Deep Security server %{info}" }
			id => "msgParserId396"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId397
	# line in RSA: A PCI report was emailed to <username> 
	else if [logstash][msgparser][id] == "msgParserId397" {
		dissect {
			mapping => { "message" => "A PCI report was emailed to %{username}" }
			id => "msgParserId397"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId398
	# line in RSA: <info> 
	else if [logstash][msgparser][id] == "msgParserId398" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId398"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId399
	# line in RSA:  <info> 
	else if [logstash][msgparser][id] == "msgParserId399" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId399"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId400
	# line in RSA: Unexpected null pointer received, returning: <result> 
	else if [logstash][msgparser][id] == "msgParserId400" {
		dissect {
			mapping => { "message" => "Unexpected null pointer received, returning: %{result}" }
			id => "msgParserId400"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId401
	# line in RSA: Expected host system not found for mounted datastore: <info> 
	else if [logstash][msgparser][id] == "msgParserId401" {
		dissect {
			mapping => { "message" => "Expected host system not found for mounted datastore: %{info}" }
			id => "msgParserId401"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA: Expected host storage system not found for mounted datastore: <info> 
	else if [logstash][msgparser][id] == "msgParserId402" {
		dissect {
			mapping => { "message" => "Expected host storage system not found for mounted datastore: %{info}" }
			id => "msgParserId402"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId403
	# line in RSA: Cound not import <obj_type>: <obj_name> 
	else if [logstash][msgparser][id] == "msgParserId403" {
		dissect {
			mapping => { "message" => "Cound not import %{obj_type}: %{obj_name}" }
			id => "msgParserId403"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId404
	# line in RSA: Dynamic update was unsuccessful, updating the full tree: <info> 
	else if [logstash][msgparser][id] == "msgParserId404" {
		dissect {
			mapping => { "message" => "Dynamic update was unsuccessful, updating the full tree: %{info}" }
			id => "msgParserId404"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId405
	# line in RSA: Generic Import,Refresh error: <result> 
	else if [logstash][msgparser][id] == "msgParserId405" {
		dissect {
			mapping => { "message" => "Generic Import,Refresh error: %{result}" }
			id => "msgParserId405"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId406
	# line in RSA: Generic DynamicUpdate error: <result> 
	else if [logstash][msgparser][id] == "msgParserId406" {
		dissect {
			mapping => { "message" => "Generic DynamicUpdate error: %{result}" }
			id => "msgParserId406"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId407
	# line in RSA: Add <obj_type>: <obj_name> 
	else if [logstash][msgparser][id] == "msgParserId407" {
		dissect {
			mapping => { "message" => "Add %{obj_type}: %{obj_name}" }
			id => "msgParserId407"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId408
	# line in RSA: crond[<process_id>]: (<username>) CMD (<action>)
	else if [logstash][msgparser][id] == "msgParserId408" {
		dissect {
			mapping => { "message" => "crond[%{process_id}]: (%{username}) CMD (%{action})" }
			id => "msgParserId408"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId409
	# line in RSA: proxy-ssh[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId409" {
		dissect {
			mapping => { "message" => "proxy-ssh[%{process_id}]: %{info}" }
			id => "msgParserId409"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId410
	# line in RSA: xinetd[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId410" {
		dissect {
			mapping => { "message" => "xinetd[%{process_id}]: %{info}" }
			id => "msgParserId410"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId411
	# line in RSA: postfix/postdrop[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId411" {
		dissect {
			mapping => { "message" => "postfix/postdrop[%{process_id}]: %{info}" }
			id => "msgParserId411"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId412
	# line in RSA: MON0001[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId412" {
		dissect {
			mapping => { "message" => "MON0001[%{process_id}]: %{info}" }
			id => "msgParserId412"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Authorizing" {
		# MESSAGE Authorizing
		# line in RSA: operation QueryServiceEndpointList <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "operation QueryServiceEndpointList %{info}" }
				id => "message-Authorizing"
				add_field => {
				"severity" => "%{hseverity}"
				"action" => "QueryServiceEndpointList"
					"[event][id]" => "Authorizing"
					"[rsa][message][id1]" => "Authorizing"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Authorizing:01
		# line in RSA: operation CreatePropertyCollector required privileges: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "operation CreatePropertyCollector required privileges: %{info}" }
				id => "message-Authorizing:01"
				add_field => {
				"severity" => "%{hseverity}"
				"action" => "CreatePropertyCollector required privileges"
					"[event][id]" => "Authorizing:01"
					"[rsa][message][id1]" => "Authorizing:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Authorizing:02
		# line in RSA: operation Login required privileges: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "operation Login required privileges: %{info}" }
				id => "message-Authorizing:02"
				add_field => {
				"severity" => "%{hseverity}"
				"action" => "Login required privileges"
					"[event][id]" => "Authorizing:02"
					"[rsa][message][id1]" => "Authorizing:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Authorizing:03
		# line in RSA: operation RetrieveServiceContent required privileges: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "operation RetrieveServiceContent required privileges: %{info}" }
				id => "message-Authorizing:03"
				add_field => {
				"severity" => "%{hseverity}"
				"action" => "RetrieveServiceContent required privileges"
					"[event][id]" => "Authorizing:03"
					"[rsa][message][id1]" => "Authorizing:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Authorizing:04
		# line in RSA: operation QueryModules required privileges: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "operation QueryModules required privileges: %{info}" }
				id => "message-Authorizing:04"
				add_field => {
				"severity" => "%{hseverity}"
				"action" => "QueryModules required privileges"
					"[event][id]" => "Authorizing:04"
					"[rsa][message][id1]" => "Authorizing:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Authorizing:05
		# line in RSA: operation QueryHostPatch_Task required privileges: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "operation QueryHostPatch_Task required privileges: %{info}" }
				id => "message-Authorizing:05"
				add_field => {
				"severity" => "%{hseverity}"
				"action" => "QueryHostPatch_Task required privileges"
					"[event][id]" => "Authorizing:05"
					"[rsa][message][id1]" => "Authorizing:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId419
	# line in RSA:  Networking changed status to <change_old> from <change_new>
	else if [logstash][msgparser][id] == "msgParserId419" {
		dissect {
			mapping => { "message" => "Networking changed status to %{change_old} from %{change_new}" }
			id => "msgParserId419"
			add_field => {
				"event_description" => "HyTrust Networking changes status"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId420
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId420" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId420"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId421
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId421" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId421"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId422
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId422" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId422"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ARC0027" {
		# MESSAGE ARC0027
		# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12}" }
				id => "message-ARC0027"
				add_field => {
				"severity" => "%{hseverity}"
					"[event][id]" => "ARC0027"
					"[rsa][message][id1]" => "ARC0027"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ARC0027:0001
		# line in RSA: act=<disposition> dst=<daddr> dhost=<info> src=<saddr> suser=<username> msg=<event_description>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "act=%{disposition} dst=%{daddr} dhost=%{info} src=%{saddr} suser=%{username} msg=%{event_description}: %{fld1}" }
				id => "message-ARC0027:0001"
				add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
					"[event][id]" => "ARC0027:0001"
					"[rsa][message][id1]" => "ARC0027:0001"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId423
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> Type:<fld5>
	else if [logstash][msgparser][id] == "msgParserId423" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} Type:%{fld5}" }
			id => "msgParserId423"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId424
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId424" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId424"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId425
	# line in RSA: dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId425" {
		dissect {
			mapping => { "message" => "dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId425"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId426
	# line in RSA: act=<disposition> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> URL: <url>
	else if [logstash][msgparser][id] == "msgParserId426" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} URL: %{url}" }
			id => "msgParserId426"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId427
	# line in RSA: act=<disposition> {dst=<daddr>|dhost=<info>} src=<saddr> suser=<username> msg=Template operation <event_description>
	else if [logstash][msgparser][id] == "msgParserId427" {
		grok {
			match => { "message" => "^act=(?<disposition>[^\s]*)[\s]+(dst=(?<daddr>[^\s]*)|dhost=(?<info>[^\s]*))[\s]+src=(?<saddr>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+msg=Template[\s]+operation[\s]+(?<event_description>.*)$" }
			id => "msgParserId427"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId428
	# line in RSA: act=<disposition> dhost=<info> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId428" {
		dissect {
			mapping => { "message" => "act=%{disposition} dhost=%{info} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId428"
			add_field => {
				"severity" => "%{hseverity}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AUN0184" {
		# MESSAGE AUN0184:0001
		# line in RSA: act=<disposition> app=<application> cat=<action> dst=<daddr> src=<saddr> suser=<username> suid={{<fld1> {{<group>}} deviceExternalId=<obj_name> deviceFacility=<obj_type> cs1=<fld4> rule=<rule> result=<result> constraints=<fld2> cs1Label=<rulename> cn1=<dclass_counter1> cn1Label=<dclass_counter1_string> msg=<fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^act=(?<disposition>[^\s]*)[\s]+app=(?<application>[^\s]*)[\s]+cat=(?<action>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+suid=\{(?<fld1>[^\s]*)[\s]+\{(?<group>[^\}]*)\}\}[\s]+deviceExternalId=(?<obj_name>[^\s]*)[\s]+deviceFacility=(?<obj_type>[^\s]*)[\s]+cs1=(?<fld4>[^\s]*)[\s]+rule=(?<rule>[^\s]*)[\s]+result=(?<result>[^\s]*)[\s]+constraints=(?<fld2>[^\s]*)[\s]+cs1Label=(?<rulename>[^\s]*)[\s]+cn1=(?<dclass_counter1>[^\s]*)[\s]+cn1Label=(?<dclass_counter1_string>[^\s]*)[\s]+msg=(?<fld3>.*)$" }
				id => "message-AUN0184:0001"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Permit"
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_theme" => "AccessControl"
					"[event][id]" => "AUN0184:0001"
					"[rsa][message][id1]" => "AUN0184:0001"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AUN0184:0002
		# line in RSA: act=<disposition> app=<application> cat=<action> dst=<daddr> src=<saddr> suser=<username> suid={{<fld1> {{<group>}} deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^act=(?<disposition>[^\s]*)[\s]+app=(?<application>[^\s]*)[\s]+cat=(?<action>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+suid=\{(?<fld1>[^\s]*)[\s]+\{(?<group>[^\}]*)\}\}[\s]+deviceExternalId=(?<obj_name>[^\s]*)[\s]+deviceFacility=(?<obj_type>[^\s]*)[\s]+msg=(?<event_description>.*)$" }
				id => "message-AUN0184:0002"
				add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
					"[event][id]" => "AUN0184:0002"
					"[rsa][message][id1]" => "AUN0184:0002"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId431
	# line in RSA: act=<disposition> dst=<daddr> dhost=<info> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId431" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} dhost=%{info} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId431"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId432
	# line in RSA: act=<disposition> dst=<daddr> dhost=<info> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> cs1=<rule> cs1Label=<rulename> cs2=<fld13> cs2Label=<fld14> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId432" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} dhost=%{info} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} cs1=%{rule} cs1Label=%{rulename} cs2=%{fld13} cs2Label=%{fld14} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId432"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Enable"
				"ec_theme" => "AccessControl"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId433
	# line in RSA: act=<disposition> app=<application> dhost=<info> dst=<daddr> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId433" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dhost=%{info} dst=%{daddr} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId433"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId434
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId434" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId434"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId435
	# line in RSA: act=<disposition> app=<application> dst=<daddr> dhost=<info> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId435" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} dhost=%{info} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId435"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "AccessControl"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId436
	# line in RSA: act=<disposition> dst=<daddr> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId436" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId436"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "AccessControl"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId437
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId437" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId437"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId438
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId438" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId438"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId439
	# line in RSA: act=<disposition> app=<application> dhost=<info> src=<saddr> suser=<username> deviceExternalId=<obj_name> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId439" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dhost=%{info} src=%{saddr} suser=%{username} deviceExternalId=%{obj_name} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId439"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId440
	# line in RSA: act=<disposition> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId440" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId440"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId442
	# line in RSA: act=<disposition> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId442" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId442"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId443
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId443" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId443"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId444
	# line in RSA: dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId444" {
		dissect {
			mapping => { "message" => "dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId444"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId445
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId445" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId445"
			add_field => {
				"category" => "%{hcategory}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Communication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId446
	# line in RSA: <fld3> HyTrust Memory Usage changed status to warning (<fld1>) from healthy (<fld2>)
	else if [logstash][msgparser][id] == "msgParserId446" {
		dissect {
			mapping => { "message" => "%{fld3} HyTrust Memory Usage changed status to warning (%{fld1}) from healthy (%{fld2})" }
			id => "msgParserId446"
			add_field => {
				"category" => "%{hcategory}"
				"hostname" => "%{hhost}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId447
	# line in RSA: <fld3> fatal: Cannot bind any address.
	else if [logstash][msgparser][id] == "msgParserId447" {
		dissect {
			mapping => { "message" => "%{fld3} fatal: Cannot bind any address." }
			id => "msgParserId447"
			add_field => {
				"category" => "%{hcategory}"
				"hostname" => "%{hhost}"
				"severity" => "%{hseverity}"
				"product" => "%{hproduct}"
				"version" => "%{hversion}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId448
	# line in RSA: dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId448" {
		dissect {
			mapping => { "message" => "dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId448"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId449
	# line in RSA: act=<disposition> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId449" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId449"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId450
	# line in RSA: act=<disposition> app=<application> dhost=<info> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId450" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dhost=%{info} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId450"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId451
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId451" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId451"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId452
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId452" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId452"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId453
	# line in RSA: app=<application> dst=<daddr> src=<saddr> suser=<username> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId453" {
		dissect {
			mapping => { "message" => "app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId453"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId454
	# line in RSA: act=<disposition> dst=<daddr> src=<saddr> suser=<username> msg=<event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId454" {
		dissect {
			mapping => { "message" => "act=%{disposition} dst=%{daddr} src=%{saddr} suser=%{username} msg=%{event_description}: %{info}" }
			id => "msgParserId454"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId455
	# line in RSA: <fld1>[<fld2>]: Purged policy history older than <info>
	else if [logstash][msgparser][id] == "msgParserId455" {
		dissect {
			mapping => { "message" => "%{fld1}[%{fld2}]: Purged policy history older than %{info}" }
			id => "msgParserId455"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId456
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId456" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId456"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId457
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId457" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId457"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId458
	# line in RSA: startup completed
	else if [logstash][msgparser][id] == "msgParserId458" {
		dissect {
			mapping => { "message" => "startup completed" }
			id => "msgParserId458"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"event_description" => "Appliance startup completed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId459
	# line in RSA: act=<disposition> app=<application> dhost=<info> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId459" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dhost=%{info} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId459"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"ec_subject" => "User"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId460
	# line in RSA: act=<disposition> app=<application> dhost=<info> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> priorstate=<fld11> privilege=<fld12>
	else if [logstash][msgparser][id] == "msgParserId460" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dhost=%{info} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} priorstate=%{fld11} privilege=%{fld12}" }
			id => "msgParserId460"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId461
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12> currentstate=<fld13>
	else if [logstash][msgparser][id] == "msgParserId461" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12} currentstate=%{fld13}" }
			id => "msgParserId461"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId462
	# line in RSA: act=<disposition> app=<application> dst=<daddr> src=<saddr> suser=<username> deviceFacility=<obj_type> msg=<event_description> cat=<action> dhost=<info> deviceExternalId=<obj_name> priorstate=<fld11> privilege=<fld12> currentstate=<fld13> batchAuthzStatus=<fld13>
	else if [logstash][msgparser][id] == "msgParserId462" {
		dissect {
			mapping => { "message" => "act=%{disposition} app=%{application} dst=%{daddr} src=%{saddr} suser=%{username} deviceFacility=%{obj_type} msg=%{event_description} cat=%{action} dhost=%{info} deviceExternalId=%{obj_name} priorstate=%{fld11} privilege=%{fld12} currentstate=%{fld13} batchAuthzStatus=%{fld13}" }
			id => "msgParserId462"
			add_field => {
				"severity" => "%{hseverity}"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-hytrustmsg.json"
#			template_name => "hytrust_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
