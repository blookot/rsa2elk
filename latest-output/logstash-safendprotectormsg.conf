# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "safendprotector"
			"[observer][name]" => "Safend Protector"
			"[observer][type]" => "Configuration Management"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: [Safend Protector] <messageid> Alert details: Action: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "[Safend Protector] %{messageid} Alert details: Action: %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: [Safend Protector] <messageid> Logging Alert details: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "[Safend Protector] %{messageid} Logging Alert details: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-safendprotectormsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Client" {
		# MESSAGE Client:01
		# line in RSA: Device Or Port Are Allowed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device Or Port Are Allowed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:01"
				add_field => {
				"event_type" => "Device Or Port Are Allowed"
					"[event][id]" => "Client:01"
					"[rsa][message][id1]" => "Client:01"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:02
		# line in RSA: Device Encrypted, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device Encrypted, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:02"
				add_field => {
				"event_type" => "Device Encrypted"
					"[event][id]" => "Client:02"
					"[rsa][message][id1]" => "Client:02"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:03
		# line in RSA: Device Is Set To<fld7>, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device Is Set To%{fld7}, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:03"
				add_field => {
				"event_type" => "Device Is Set To Read Only"
					"[event][id]" => "Client:03"
					"[rsa][message][id1]" => "Client:03"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:04
		# line in RSA: Physical Port Restricted, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Physical Port Restricted, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:04"
				add_field => {
				"event_type" => "Physical Port Restricted"
					"[event][id]" => "Client:04"
					"[rsa][message][id1]" => "Client:04"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:05
		# line in RSA: Device Or Port Blocked, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device Or Port Blocked, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:05"
				add_field => {
				"event_type" => "Device Or Port Blocked"
					"[event][id]" => "Client:05"
					"[rsa][message][id1]" => "Client:05"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:06
		# line in RSA: Device Is Removed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Device Is Removed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:06"
				add_field => {
				"event_type" => "Device Is Removed"
					"[event][id]" => "Client:06"
					"[rsa][message][id1]" => "Client:06"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:07
		# line in RSA: Policy Updated, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy Updated, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:07"
				add_field => {
				"event_type" => "Policy Updated"
					"[event][id]" => "Client:07"
					"[rsa][message][id1]" => "Client:07"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:08
		# line in RSA: Policy Update Failed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy Update Failed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:08"
				add_field => {
				"event_type" => "Policy Update Failed"
					"[event][id]" => "Client:08"
					"[rsa][message][id1]" => "Client:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:09
		# line in RSA: Client Internal Error, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Internal Error, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:09"
				add_field => {
				"event_type" => "Client Internal Error"
					"[event][id]" => "Client:09"
					"[rsa][message][id1]" => "Client:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:10
		# line in RSA: Suspension Code Was Generated, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Suspension Code Was Generated, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:10"
				add_field => {
				"event_type" => "Suspension Code Was Generated"
					"[event][id]" => "Client:10"
					"[rsa][message][id1]" => "Client:10"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:11
		# line in RSA: Suspension Failed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Suspension Failed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:11"
				add_field => {
				"event_type" => "Suspension Failed"
					"[event][id]" => "Client:11"
					"[rsa][message][id1]" => "Client:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:12
		# line in RSA: Client Suspended, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Suspended, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:12"
				add_field => {
				"event_type" => "Client Suspended"
					"[event][id]" => "Client:12"
					"[rsa][message][id1]" => "Client:12"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:13
		# line in RSA: Client Resumed From Suspension, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Resumed From Suspension, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:13"
				add_field => {
				"event_type" => "Client Resumed From Suspension"
					"[event][id]" => "Client:13"
					"[rsa][message][id1]" => "Client:13"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:14
		# line in RSA: Client Was Installed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Was Installed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:14"
				add_field => {
				"event_type" => "Client Was Installed"
					"[event][id]" => "Client:14"
					"[rsa][message][id1]" => "Client:14"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:15
		# line in RSA: Client Was Uninstalled, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Was Uninstalled, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:15"
				add_field => {
				"event_type" => "Client Was Uninstalled"
					"[event][id]" => "Client:15"
					"[rsa][message][id1]" => "Client:15"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:16
		# line in RSA: Attempt To Uninstall Client Failed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Attempt To Uninstall Client Failed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:16"
				add_field => {
				"event_type" => "Attempt To Uninstall Client Failed"
					"[event][id]" => "Client:16"
					"[rsa][message][id1]" => "Client:16"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:17
		# line in RSA: Wrong Admin Password, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Wrong Admin Password, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:17"
				add_field => {
				"event_type" => "Wrong Admin Password"
					"[event][id]" => "Client:17"
					"[rsa][message][id1]" => "Client:17"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:18
		# line in RSA: Tampering Attempt, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Tampering Attempt, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:18"
				add_field => {
				"event_type" => "Tampering Attempt"
					"[event][id]" => "Client:18"
					"[rsa][message][id1]" => "Client:18"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:19
		# line in RSA: Content Inspection Warning Was Received, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Content Inspection Warning Was Received, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:19"
				add_field => {
				"event_type" => "Content Inspection Warning Was Received "
					"[event][id]" => "Client:19"
					"[rsa][message][id1]" => "Client:19"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:20
		# line in RSA: File Too Big For Inspection Or Shadowing, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "File Too Big For Inspection Or Shadowing, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:20"
				add_field => {
				"event_type" => "File Too Big For Inspection Or Shadowing"
					"[event][id]" => "Client:20"
					"[rsa][message][id1]" => "Client:20"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:21
		# line in RSA: Not Enough Disk Space, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Not Enough Disk Space, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:21"
				add_field => {
				"event_type" => "Not Enough Disk Space"
					"[event][id]" => "Client:21"
					"[rsa][message][id1]" => "Client:21"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:22
		# line in RSA: Removable Media Encryption Started, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Removable Media Encryption Started, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:22"
				add_field => {
				"event_type" => "Removable Media Encryption Started"
					"[event][id]" => "Client:22"
					"[rsa][message][id1]" => "Client:22"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:23
		# line in RSA: Hd Encryption Started, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Encryption Started, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:23"
				add_field => {
				"event_type" => "Hd Encryption Started "
					"[event][id]" => "Client:23"
					"[rsa][message][id1]" => "Client:23"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:24
		# line in RSA: Hd Encryption Finished, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Encryption Finished, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:24"
				add_field => {
				"event_type" => "Hd Encryption Finished"
					"[event][id]" => "Client:24"
					"[rsa][message][id1]" => "Client:24"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:25
		# line in RSA: Hd Decryption Started, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Decryption Started, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:25"
				add_field => {
				"event_type" => "Hd Decryption Started"
					"[event][id]" => "Client:25"
					"[rsa][message][id1]" => "Client:25"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:26
		# line in RSA: Hd Decryption Finished, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Decryption Finished, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:26"
				add_field => {
				"event_type" => "Hd Decryption Finished"
					"[event][id]" => "Client:26"
					"[rsa][message][id1]" => "Client:26"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:27
		# line in RSA: Hd Encryption Password Was Changed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Encryption Password Was Changed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:27"
				add_field => {
				"event_type" => "Hd Encryption Password Was Changed"
					"[event][id]" => "Client:27"
					"[rsa][message][id1]" => "Client:27"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:28
		# line in RSA: Wrong Hd Encryption Password Was Entered, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Wrong Hd Encryption Password Was Entered, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:28"
				add_field => {
				"event_type" => "Wrong Hd Encryption Password Was Entered"
					"[event][id]" => "Client:28"
					"[rsa][message][id1]" => "Client:28"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:29
		# line in RSA: Not Authenticated Access To An Encrypted Machine, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Not Authenticated Access To An Encrypted Machine, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:29"
				add_field => {
				"event_type" => "Not Authenticated Access To An Encrypted Machine"
					"[event][id]" => "Client:29"
					"[rsa][message][id1]" => "Client:29"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:30
		# line in RSA: An Encrypted Hd Reset Code Was Used, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "An Encrypted Hd Reset Code Was Used, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:30"
				add_field => {
				"event_type" => "An Encrypted Hd Reset Code Was Used"
					"[event][id]" => "Client:30"
					"[rsa][message][id1]" => "Client:30"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:31
		# line in RSA: An Encrypted Hd One Time Access Code Was Used, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "An Encrypted Hd One Time Access Code Was Used, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:31"
				add_field => {
				"event_type" => "An Encrypted Hd One Time Access Code Was Used"
					"[event][id]" => "Client:31"
					"[rsa][message][id1]" => "Client:31"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:32
		# line in RSA: Allowed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, { Details: <info>, Encryption = <scheme> | Details: <info> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Allowed,[\s]+Scope:[\s]+(?<event_source>[^,]*),[\s]+User:[\s]+(?<username>[^,]*),[\s]+Computer:[\s]+(?<fqdn>[^,]*),[\s]+Client[\s]+GMT:[\s]+(?<fld4>[^,]*),[\s]+Client[\s]+Local[\s]+Time:[\s]+(?<fld5>[^,]*),[\s]+Server[\s]+Time:[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^,]*),[\s]+Group:[\s]+(?<group>[^,]*),[\s]+Policy:[\s]+(?<policyname>[^,]*),[\s]+Device[\s]+Description:[\s]+(?<obj_name>[^,]*),[\s]+Device[\s]+Info:[\s]+(?<event_description>[^,]*),[\s]+Port:[\s]+(?<context>[^,]*),[\s]+Device[\s]+Type:[\s]+(?<obj_type>[^,]*),[\s]+Vendor:[\s]+(?<fld6>[^,]*),[\s]+Model:[\s]+(?<version>[^,]*),[\s]+Distinct[\s]+ID:[\s]+(?<id>[^,]*),[\s]+([\s]*Details:[\s]+(?<info>[^,]*),[\s]+Encryption[\s]+=[\s]+(?<scheme>[^\s]*)[\s]+|[\s]*Details:[\s]+(?<info>[^\s]*)[\s]+)$" }
				id => "message-Client:32"
				add_field => {
				"event_type" => "Allowed"
					"[event][id]" => "Client:32"
					"[rsa][message][id1]" => "Client:32"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:33
		# line in RSA: Disconnected, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, { Details: <info>, Encryption = <scheme> | Details: <info> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Disconnected,[\s]+Scope:[\s]+(?<event_source>[^,]*),[\s]+User:[\s]+(?<username>[^,]*),[\s]+Computer:[\s]+(?<fqdn>[^,]*),[\s]+Client[\s]+GMT:[\s]+(?<fld4>[^,]*),[\s]+Client[\s]+Local[\s]+Time:[\s]+(?<fld5>[^,]*),[\s]+Server[\s]+Time:[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^,]*),[\s]+Group:[\s]+(?<group>[^,]*),[\s]+Policy:[\s]+(?<policyname>[^,]*),[\s]+Device[\s]+Description:[\s]+(?<obj_name>[^,]*),[\s]+Device[\s]+Info:[\s]+(?<event_description>[^,]*),[\s]+Port:[\s]+(?<context>[^,]*),[\s]+Device[\s]+Type:[\s]+(?<obj_type>[^,]*),[\s]+Vendor:[\s]+(?<fld6>[^,]*),[\s]+Model:[\s]+(?<version>[^,]*),[\s]+Distinct[\s]+ID:[\s]+(?<id>[^,]*),[\s]+([\s]*Details:[\s]+(?<info>[^,]*),[\s]+Encryption[\s]+=[\s]+(?<scheme>[^\s]*)[\s]+|[\s]*Details:[\s]+(?<info>[^\s]*)[\s]+)$" }
				id => "message-Client:33"
				add_field => {
				"event_type" => "Disconnected"
					"[event][id]" => "Client:33"
					"[rsa][message][id1]" => "Client:33"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:34
		# line in RSA: Suspension Password Generated, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2> <fld3>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Suspension Password Generated, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2} %{fld3}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:34"
				add_field => {
				"event_type" => "Suspension Password Generated"
					"[event][id]" => "Client:34"
					"[rsa][message][id1]" => "Client:34"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:35
		# line in RSA: Port Restricted, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Port Restricted, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:35"
				add_field => {
				"event_type" => "Port Restricted"
					"[event][id]" => "Client:35"
					"[rsa][message][id1]" => "Client:35"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:36
		# line in RSA: Blocked, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Blocked, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:36"
				add_field => {
				"event_type" => "Blocked"
					"[event][id]" => "Client:36"
					"[rsa][message][id1]" => "Client:36"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:37
		# line in RSA: Read Only, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Read Only, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:37"
				add_field => {
				"event_type" => "Read Only"
					"[event][id]" => "Client:37"
					"[rsa][message][id1]" => "Client:37"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:38
		# line in RSA: Disconnected, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Disconnected, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:38"
				add_field => {
				"event_type" => "Disconnected"
					"[event][id]" => "Client:38"
					"[rsa][message][id1]" => "Client:38"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:39
		# line in RSA: Allowed, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Allowed, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:39"
				add_field => {
				"event_type" => "Allowed"
					"[event][id]" => "Client:39"
					"[rsa][message][id1]" => "Client:39"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:41
		# line in RSA: Install, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Install, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:41"
				add_field => {
				"event_type" => "Install"
					"[event][id]" => "Client:41"
					"[rsa][message][id1]" => "Client:41"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Client:42
		# line in RSA: Missing Logs, Scope: <event_source>, User: <username>, Computer: <fqdn>, Client GMT: <fld4>, Client Local Time: <fld5>, Server Time: <fld1> <fld2>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Missing Logs, Scope: %{event_source}, User: %{username}, Computer: %{fqdn}, Client GMT: %{fld4}, Client Local Time: %{fld5}, Server Time: %{fld1} %{fld2}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}" }
				id => "message-Client:42"
				add_field => {
				"event_type" => "Missing Logs"
					"[event][id]" => "Client:42"
					"[rsa][message][id1]" => "Client:42"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE Server:01
		# line in RSA: Missing Logs, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Missing Logs, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:01"
				add_field => {
				"event_type" => "Missing Logs"
					"[event][id]" => "Server:01"
					"[rsa][message][id1]" => "Server:01"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:02
		# line in RSA: Management Console Login, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Management Console Login, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:02"
				add_field => {
				"event_type" => "Management Console Login"
					"[event][id]" => "Server:02"
					"[rsa][message][id1]" => "Server:02"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:03
		# line in RSA: Management Console Logout, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Management Console Logout, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:03"
				add_field => {
				"event_type" => "Management Console Logout"
					"[event][id]" => "Server:03"
					"[rsa][message][id1]" => "Server:03"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:04
		# line in RSA: Policy Saved, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy Saved, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:04"
				add_field => {
				"event_type" => "Policy Saved"
					"[event][id]" => "Server:04"
					"[rsa][message][id1]" => "Server:04"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:05
		# line in RSA: Policy Published, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy Published, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:05"
				add_field => {
				"event_type" => "Policy Published"
					"[event][id]" => "Server:05"
					"[rsa][message][id1]" => "Server:05"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:06
		# line in RSA: Policy Deleted, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy Deleted, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:06"
				add_field => {
				"event_type" => "Policy Deleted"
					"[event][id]" => "Server:06"
					"[rsa][message][id1]" => "Server:06"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:07
		# line in RSA: Administration Menu Was Changed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administration Menu Was Changed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:07"
				add_field => {
				"event_type" => "Administration Menu Was Changed"
					"[event][id]" => "Server:07"
					"[rsa][message][id1]" => "Server:07"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:08
		# line in RSA: Global Policy Settings Changed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Global Policy Settings Changed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:08"
				add_field => {
				"event_type" => "Global Policy Settings Changed"
					"[event][id]" => "Server:08"
					"[rsa][message][id1]" => "Server:08"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:09
		# line in RSA: License Violation, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "License Violation, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:09"
				add_field => {
				"event_type" => "License Violation"
					"[event][id]" => "Server:09"
					"[rsa][message][id1]" => "Server:09"
					"[event][categoryid]" => "1608010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:10
		# line in RSA: Suspension Code Generated, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Suspension Code Generated, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:10"
				add_field => {
				"event_type" => "Suspension Code Generated"
					"[event][id]" => "Server:10"
					"[rsa][message][id1]" => "Server:10"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:11
		# line in RSA: Logs Manual Backup Performed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logs Manual Backup Performed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:11"
				add_field => {
				"event_type" => "Logs Manual Backup Performed"
					"[event][id]" => "Server:11"
					"[rsa][message][id1]" => "Server:11"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:12
		# line in RSA: Logs Manual Backup Failed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logs Manual Backup Failed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:12"
				add_field => {
				"event_type" => "Logs Manual Backup Failed"
					"[event][id]" => "Server:12"
					"[rsa][message][id1]" => "Server:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:13
		# line in RSA: Configuration Manual Backup Performed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Manual Backup Performed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:13"
				add_field => {
				"event_type" => "Configuration Manual Backup Performed"
					"[event][id]" => "Server:13"
					"[rsa][message][id1]" => "Server:13"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:14
		# line in RSA: Configuration Manual Backup Failed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Manual Backup Failed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:14"
				add_field => {
				"event_type" => "Configuration Manual Backup Failed"
					"[event][id]" => "Server:14"
					"[rsa][message][id1]" => "Server:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:15
		# line in RSA: Logs Scheduled Backup Performed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logs Scheduled Backup Performed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:15"
				add_field => {
				"event_type" => "Logs Scheduled Backup Performed"
					"[event][id]" => "Server:15"
					"[rsa][message][id1]" => "Server:15"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:16
		# line in RSA: Logs Scheduled Backup Failed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logs Scheduled Backup Failed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:16"
				add_field => {
				"event_type" => "Logs Scheduled Backup Failed"
					"[event][id]" => "Server:16"
					"[rsa][message][id1]" => "Server:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:17
		# line in RSA: Configuration Scheduled Backup Performed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Scheduled Backup Performed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:17"
				add_field => {
				"event_type" => "Configuration Scheduled Backup Performed"
					"[event][id]" => "Server:17"
					"[rsa][message][id1]" => "Server:17"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:18
		# line in RSA: Configuration Scheduled Backup Failed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration Scheduled Backup Failed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:18"
				add_field => {
				"event_type" => "Configuration Scheduled Backup Failed"
					"[event][id]" => "Server:18"
					"[rsa][message][id1]" => "Server:18"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:19
		# line in RSA: Emergency Database Purging Performed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Emergency Database Purging Performed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:19"
				add_field => {
				"event_type" => "Emergency Database Purging Performed"
					"[event][id]" => "Server:19"
					"[rsa][message][id1]" => "Server:19"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:20
		# line in RSA: Client Process Killed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Process Killed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:20"
				add_field => {
				"event_type" => "Client Process Killed"
					"[event][id]" => "Server:20"
					"[rsa][message][id1]" => "Server:20"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:21
		# line in RSA: Client Invalid Policy, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Client Invalid Policy, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:21"
				add_field => {
				"event_type" => "Client Invalid Policy"
					"[event][id]" => "Server:21"
					"[rsa][message][id1]" => "Server:21"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:22
		# line in RSA: Content Inspection Missing Logs, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Content Inspection Missing Logs, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:22"
				add_field => {
				"event_type" => "Content Inspection Missing Logs"
					"[event][id]" => "Server:22"
					"[rsa][message][id1]" => "Server:22"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:23
		# line in RSA: Hd Encryption Reset Key Granted, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Encryption Reset Key Granted, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:23"
				add_field => {
				"event_type" => "Hd Encryption Reset Key Granted"
					"[event][id]" => "Server:23"
					"[rsa][message][id1]" => "Server:23"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:24
		# line in RSA: Hd Encryption One Time Access Code Granted, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Encryption One Time Access Code Granted, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:24"
				add_field => {
				"event_type" => "Hd Encryption One Time Access Code Granted"
					"[event][id]" => "Server:24"
					"[rsa][message][id1]" => "Server:24"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:25
		# line in RSA: Hd Encryption Recovery Key Granted, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Hd Encryption Recovery Key Granted, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:25"
				add_field => {
				"event_type" => "Hd Encryption Recovery Key Granted"
					"[event][id]" => "Server:25"
					"[rsa][message][id1]" => "Server:25"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:26
		# line in RSA: Login, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Login, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:26"
				add_field => {
				"event_type" => "Login"
					"[event][id]" => "Server:26"
					"[rsa][message][id1]" => "Server:26"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:27
		# line in RSA: Logout, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logout, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:27"
				add_field => {
				"event_type" => "Logout"
					"[event][id]" => "Server:27"
					"[rsa][message][id1]" => "Server:27"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:28
		# line in RSA: Administration Changed, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administration Changed, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:28"
				add_field => {
				"event_type" => "Administration Changed"
					"[event][id]" => "Server:28"
					"[rsa][message][id1]" => "Server:28"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
		# MESSAGE Server:29
		# line in RSA: Suspension Password Generated, Scope: <event_source>, Server GMT: <fld1> <fld2> <fld3>, User: <username>, Computer: <fqdn>, Details: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Suspension Password Generated, Scope: %{event_source}, Server GMT: %{fld1} %{fld2} %{fld3}, User: %{username}, Computer: %{fqdn}, Details: %{info}" }
				id => "message-Server:29"
				add_field => {
				"event_type" => "Suspension Password Generated"
					"[event][id]" => "Server:29"
					"[rsa][message][id1]" => "Server:29"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: User: <username>, Computer: <fqdn>, Client GMT: <fld1>, Client Local Time: <fld5>, Server Time: <fld11>, Group: <group>, Policy: <policyname>, Device Description: <obj_name>, Device Info: <event_description>, Port: <context>, Device Type: <obj_type>, Vendor: <fld6>, Model: <version>, Distinct ID: <id>, Details: <info>, File Name: <filename>, File Type: <fld7>, File Size: <filename_size>, Created: <fld8>, Modified: <fld9>, Action: <event_type>
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "User: %{username}, Computer: %{fqdn}, Client GMT: %{fld1}, Client Local Time: %{fld5}, Server Time: %{fld11}, Group: %{group}, Policy: %{policyname}, Device Description: %{obj_name}, Device Info: %{event_description}, Port: %{context}, Device Type: %{obj_type}, Vendor: %{fld6}, Model: %{version}, Distinct ID: %{id}, Details: %{info}, File Name: %{filename}, File Type: %{fld7}, File Size: %{filename_size}, Created: %{fld8}, Modified: %{fld9}, Action: %{event_type}" }
			id => "msgParserId70"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s a" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-safendprotectormsg.json"
#			template_name => "safendprotector_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
