# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ciscoiportesa"
			"[observer][name]" => "Cisco Ironport ESA"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %CISCOIPORTESA-4: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CISCOIPORTESA\-4:[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hfld6> <hfld7> <hfld8>:<hfld9>:<hfld10> <hhost> <process>[<process_id>]: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^:]*):(?<hfld9>[^:]*):(?<hfld10>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<process>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hfld6> <hfld7> <hfld8>:<hfld9>:<hfld10> <hfld11>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^:]*):(?<hfld9>[^:]*):(?<hfld10>[^\s]*)[\s]+(?<hfld11>[^:]*):[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: %CISCOIPORTESA-<hfld1>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%CISCOIPORTESA-%{hfld1}: %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "CISCOIPORTESA_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ciscoiportesamsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "Info" {
		# MESSAGE Info_VOF
		# line in RSA:  Info: VOF Rule: <rulename> has threat level <severity>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: VOF Rule: %{rulename} has threat level %{severity}" }
				id => "message-Info_VOF"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_VOF"
					"[rsa][message][id1]" => "Info_VOF"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Reverse_dns
		# line in RSA:  Info: New SMTP ICID <id1> interface <interface> (<hostip>) address <daddr> reverse dns host <dhost> verified { yes | no }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+New[\s]+SMTP[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+interface[\s]+(?<interface>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)[\s]+address[\s]+(?<daddr>[^\s]*)[\s]+reverse[\s]+dns[\s]+host[\s]+(?<dhost>[^\s]*)[\s]+verified[\s]+([\s]*yes[\s]+|[\s]*no[\s]+)$" }
				id => "message-Info_Reverse_dns"
				add_field => {
					"[event][id]" => "Info_Reverse_dns"
					"[rsa][message][id1]" => "Info_Reverse_dns"
					"[event][categoryid]" => "1805000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_SBRS
		# line in RSA:  Info: ICID <id1> <action> SG <rulename> match sbrs[<fld2>] SBRS {rfc1918| unable to retrieve | <reputation_num> country <location_country>| <reputation_num>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+SG[\s]+(?<rulename>[^\s]*)[\s]+match[\s]+sbrs\[(?<fld2>[^\]]*)\][\s]+SBRS[\s]+(rfc1918|[\s]*unable[\s]+to[\s]+retrieve[\s]+|[\s]*(?<reputation_num>[^\s]*)[\s]+country[\s]+(?<location_country>.*)|[\s]*(?<reputation_num>.*))$" }
				id => "message-Info_SBRS"
				add_field => {
				"ec_theme" => "ALM"
					"[event][id]" => "Info_SBRS"
					"[rsa][message][id1]" => "Info_SBRS"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Start
		# line in RSA:  Info: Start MID <id> ICID <id1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Start MID %{id} ICID %{id1}" }
				id => "message-Info_Start"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Start"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_Start"
					"[rsa][message][id1]" => "Info_Start"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_From
		# line in RSA:  Info: MID <id> ICID <id1> From: <<<from>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} ICID %{id1} From: <%{from}>" }
				id => "message-Info_From"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_From"
					"[rsa][message][id1]" => "Info_From"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_To
		# line in RSA:  Info: MID <id> ICID <id1> RID <id2> To: <<<to>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} ICID %{id1} RID %{id2} To: <%{to}>" }
				id => "message-Info_To"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_To"
					"[rsa][message][id1]" => "Info_To"
					"[event][categoryid]" => "1207030000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Message-ID
		# line in RSA:  Info: MID <id> Message-ID '<<<fld23>>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} Message-ID '<%{fld23}>'" }
				id => "message-Info_Message-ID"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_Message-ID"
					"[rsa][message][id1]" => "Info_Message-ID"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Subject
		# line in RSA:  Info: MID <id> Subject '<subject>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} Subject '%{subject}'" }
				id => "message-Info_Subject"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_Subject"
					"[rsa][message][id1]" => "Info_Subject"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_bytes
		# line in RSA:  Info: MID <id> ready <bytes> bytes from <<<from>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} ready %{bytes} bytes from <%{from}>" }
				id => "message-Info_bytes"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_bytes"
					"[rsa][message][id1]" => "Info_bytes"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_matched
		# line in RSA:  Info: MID <id> matched all recipients for per-recipient policy <policyname> in the <direction> table
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} matched all recipients for per-recipient policy %{policyname} in the %{direction} table" }
				id => "message-Info_matched"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Policy"
					"[event][id]" => "Info_matched"
					"[rsa][message][id1]" => "Info_matched"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_close
		# line in RSA:  Info: ICID <id1> close
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} close" }
				id => "message-Info_close"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Stop"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_close"
					"[rsa][message][id1]" => "Info_close"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_interim_spam_verdict
		# line in RSA:  Info: MID <id> interim verdict using engine: <agent> spam <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} interim verdict using engine: %{agent} spam %{result}" }
				id => "message-Info_interim_spam_verdict"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_interim_spam_verdict"
					"[rsa][message][id1]" => "Info_interim_spam_verdict"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_spam_result
		# line in RSA:  Info: MID <id> using engine: <agent> spam <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} using engine: %{agent} spam %{result}" }
				id => "message-Info_spam_result"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_spam_result"
					"[rsa][message][id1]" => "Info_spam_result"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_interim_av_verdict
		# line in RSA:  Info: MID <id> interim AV verdict using <product> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} interim AV verdict using %{product} %{result}" }
				id => "message-Info_interim_av_verdict"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_interim_av_verdict"
					"[rsa][message][id1]" => "Info_interim_av_verdict"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_av_result
		# line in RSA:  Info: MID <id> antivirus { <result> '<virusname>' | <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+MID[\s]+(?<id>[^\s]*)[\s]+antivirus[\s]+([\s]*(?<result>[^\s]*)[\s]+'(?<virusname>[^']*)'[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
				id => "message-Info_av_result"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_av_result"
					"[rsa][message][id1]" => "Info_av_result"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_queued
		# line in RSA:  Info: MID <id> queued for delivery
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} queued for delivery" }
				id => "message-Info_queued"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_queued"
					"[rsa][message][id1]" => "Info_queued"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_New_SMTP
		# line in RSA:  Info: New SMTP DCID <id1> interface <interface> address <hostip> port <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: New SMTP DCID %{id1} interface %{interface} address %{hostip} port %{network_port}" }
				id => "message-Info_New_SMTP"
				add_field => {
				"ec_theme" => "ALM"
					"[event][id]" => "Info_New_SMTP"
					"[rsa][message][id1]" => "Info_New_SMTP"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Delivery_start
		# line in RSA:  Info: Delivery start DCID <id1> MID <id> to RID [<id2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Delivery start DCID %{id1} MID %{id} to RID [%{id2}]" }
				id => "message-Info_Delivery_start"
				add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_Delivery_start"
					"[rsa][message][id1]" => "Info_Delivery_start"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Bounced
		# line in RSA:  Info: Bounced: DCID <id1> MID <id> to RID <id2> - Bounced by destination server with response: <result> - <info> ('<resultcode>', ['<event_description>']
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Bounced: DCID %{id1} MID %{id} to RID %{id2} - Bounced by destination server with response: %{result} - %{info} ('%{resultcode}', ['%{event_description}']" }
				id => "message-Info_Bounced"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Info_Bounced"
					"[rsa][message][id1]" => "Info_Bounced"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_bounce
		# line in RSA:  Info: MID <id> was generated for bounce of MID <id1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} was generated for bounce of MID %{id1}" }
				id => "message-Info_bounce"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_bounce"
					"[rsa][message][id1]" => "Info_bounce"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_message_finished
		# line in RSA:  Info: Message finished MID <id> done
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Message finished MID %{id} done" }
				id => "message-Info_message_finished"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Stop"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_message_finished"
					"[rsa][message][id1]" => "Info_message_finished"
					"[event][categoryid]" => "1207010100"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Connection_Error
		# line in RSA:  Info: Connection Error: DCID: <id1> domain: <domain> IP: <hostip> port: <network_port> details: <info> interface: <interface> reason: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Connection Error: DCID: %{id1} domain: %{domain} IP: %{hostip} port: %{network_port} details: %{info} interface: %{interface} reason: %{result}" }
				id => "message-Info_Connection_Error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
					"[event][id]" => "Info_Connection_Error"
					"[rsa][message][id1]" => "Info_Connection_Error"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Connection_Error:01
		# line in RSA:  Info: Connection Error: DCID <id1> domain: <domain> IP: <hostip> port: <network_port> details: <info> interface: <interface> reason: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Connection Error: DCID %{id1} domain: %{domain} IP: %{hostip} port: %{network_port} details: %{info} interface: %{interface} reason: %{result}" }
				id => "message-Info_Connection_Error:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
					"[event][id]" => "Info_Connection_Error:01"
					"[rsa][message][id1]" => "Info_Connection_Error:01"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_message_done
		# line in RSA:  Info: Message done DCID <id1> MID <id> to RID [<id2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Message done DCID %{id1} MID %{id} to RID [%{id2}]" }
				id => "message-Info_message_done"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_message_done"
					"[rsa][message][id1]" => "Info_message_done"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Response
		# line in RSA:  Info: MID <id> RID [<id2>] Response '<event_description>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} RID [%{id2}] Response '%{event_description}'" }
				id => "message-Info_Response"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_Response"
					"[rsa][message][id1]" => "Info_Response"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_DCID_close
		# line in RSA:  Info: DCID <id1> close
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID %{id1} close" }
				id => "message-Info_DCID_close"
				add_field => {
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_DCID_close"
					"[rsa][message][id1]" => "Info_DCID_close"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Queue_Checkpoint
		# line in RSA:  Info: Queue: Checkpoint { Started | Finished }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+Queue:[\s]+Checkpoint[\s]+([\s]*Started[\s]+|[\s]*Finished[\s]+)$" }
				id => "message-Info_Queue_Checkpoint"
				add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_Queue_Checkpoint"
					"[rsa][message][id1]" => "Info_Queue_Checkpoint"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_SMTP_authentication_Failure
		# line in RSA:  Info: DCID: <fld31> IP: <hostip> SMTP authentication using the profile <rulename> failed: ('<resultcode>', ['<event_description>'])
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID: %{fld31} IP: %{hostip} SMTP authentication using the profile %{rulename} failed: ('%{resultcode}', ['%{event_description}'])" }
				id => "message-Info_SMTP_authentication_Failure"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "Failed"
					"[event][id]" => "Info_SMTP_authentication_Failure"
					"[rsa][message][id1]" => "Info_SMTP_authentication_Failure"
					"[event][categoryid]" => "1301010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_SMTP_authentication
		# line in RSA:  Info: DCID: <fld31> IP: <hostip> SMTP authentication using the profile <rulename> <result>: ('<resultcode>', ['<event_description>'])
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID: %{fld31} IP: %{hostip} SMTP authentication using the profile %{rulename} %{result}: ('%{resultcode}', ['%{event_description}'])" }
				id => "message-Info_SMTP_authentication"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
					"[event][id]" => "Info_SMTP_authentication"
					"[rsa][message][id1]" => "Info_SMTP_authentication"
					"[event][categoryid]" => "1301010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Unknown_command
		# line in RSA:  Info: ICID <id1> Unknown command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} Unknown command: %{action}" }
				id => "message-Info_Unknown_command"
				add_field => {
					"[event][id]" => "Info_Unknown_command"
					"[rsa][message][id1]" => "Info_Unknown_command"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_disconnected
		# line in RSA:  Info: ICID <id1> disconnected address <hostip>, exceeded maximum number of bad SMTP commands
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} disconnected address %{hostip}, exceeded maximum number of bad SMTP commands" }
				id => "message-Info_disconnected"
				add_field => {
					"[event][id]" => "Info_disconnected"
					"[rsa][message][id1]" => "Info_disconnected"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID_lost
		# line in RSA:  Info: ICID <id1> lost
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} lost" }
				id => "message-Info_ICID_lost"
				add_field => {
					"[event][id]" => "Info_ICID_lost"
					"[rsa][message][id1]" => "Info_ICID_lost"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_LDAPACCEPT_bypass
		# line in RSA:  Info: MID <id> ICID <id1> LDAPACCEPT bypass applied to <<<user_address>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} ICID %{id1} LDAPACCEPT bypass applied to <%{user_address}>" }
				id => "message-Info_LDAPACCEPT_bypass"
				add_field => {
					"[event][id]" => "Info_LDAPACCEPT_bypass"
					"[rsa][message][id1]" => "Info_LDAPACCEPT_bypass"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Receiving_Failed
		# line in RSA:  Info: ICID <id1> Receiving Failed: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} Receiving Failed: %{event_description}" }
				id => "message-Info_Receiving_Failed"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"result" => "Failed"
					"[event][id]" => "Info_Receiving_Failed"
					"[rsa][message][id1]" => "Info_Receiving_Failed"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Delayed
		# line in RSA:  Info: Delayed: DCID <id1> MID <id> to RID <id2> - <result> - <info> ('<resultcode>', ['<event_description>']) []
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Delayed: DCID %{id1} MID %{id} to RID %{id2} - %{result} - %{info} ('%{resultcode}', ['%{event_description}']) []" }
				id => "message-Info_Delayed"
				add_field => {
					"[event][id]" => "Info_Delayed"
					"[rsa][message][id1]" => "Info_Delayed"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_pending
		# line in RSA:  Info: MID <id> to RID [<id2>] pending till <fld23> <fld24> <fld25> <fld26> [<fld32>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} to RID [%{id2}] pending till %{fld23} %{fld24} %{fld25} %{fld26} [%{fld32}]" }
				id => "message-Info_pending"
				add_field => {
					"[event][id]" => "Info_pending"
					"[rsa][message][id1]" => "Info_pending"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_LDAPACCEPT_Rejected
		# line in RSA:  Info: MID <id> ICID <id1> To: <<<to>> Rejected by LDAPACCEPT
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} ICID %{id1} To: <%{to}> Rejected by LDAPACCEPT" }
				id => "message-Info_LDAPACCEPT_Rejected"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"result" => "Rejected"
					"[event][id]" => "Info_LDAPACCEPT_Rejected"
					"[rsa][message][id1]" => "Info_LDAPACCEPT_Rejected"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_quarantined_to
		# line in RSA:  Info: MID <id> quarantined to "<category>" (content filter:<filter>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} quarantined to \"%{category}\" (content filter:%{filter})" }
				id => "message-Info_quarantined_to"
				add_field => {
				"ec_subject" => "Message"
					"[event][id]" => "Info_quarantined_to"
					"[rsa][message][id1]" => "Info_quarantined_to"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_DLP
		# line in RSA:  Info: MID <id> DLP <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} DLP %{result}" }
				id => "message-Info_DLP"
				add_field => {
				"ec_subject" => "Message"
					"[event][id]" => "Info_DLP"
					"[rsa][message][id1]" => "Info_DLP"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_rewritten
		# line in RSA:  Info: MID <id> rewritten to MID <id1> by <rulename> filter '<filter>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} rewritten to MID %{id1} by %{rulename} filter '%{filter}'" }
				id => "message-Info_rewritten"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Modify"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_rewritten"
					"[rsa][message][id1]" => "Info_rewritten"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_too_big
		# line in RSA:  Info: MID <id> was too big (<bytes>/<fld24>) for scanning by <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} was too big (%{bytes}/%{fld24}) for scanning by %{agent}" }
				id => "message-Info_too_big"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_too_big"
					"[rsa][message][id1]" => "Info_too_big"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Tagging_quarantine
		# line in RSA:  Info: ISQ: Tagging MID <id> for quarantine
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ISQ: Tagging MID %{id} for quarantine" }
				id => "message-Info_Tagging_quarantine"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_Tagging_quarantine"
					"[rsa][message][id1]" => "Info_Tagging_quarantine"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_RPC_Delivery
		# line in RSA:  Info: RPC Delivery start RCID <id1> MID <id> to local IronPort Spam Quarantine
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: RPC Delivery start RCID %{id1} MID %{id} to local IronPort Spam Quarantine" }
				id => "message-Info_RPC_Delivery"
				add_field => {
					"[event][id]" => "Info_RPC_Delivery"
					"[rsa][message][id1]" => "Info_RPC_Delivery"
					"[event][categoryid]" => "1207040000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Quarantined
		# line in RSA:  Info: ISQ: Quarantined MID <id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ISQ: Quarantined MID %{id}" }
				id => "message-Info_Quarantined"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
					"[event][id]" => "Info_Quarantined"
					"[rsa][message][id1]" => "Info_Quarantined"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_RPC_Message
		# line in RSA:  Info: RPC Message done RCID <id1> MID <id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: RPC Message done RCID %{id1} MID %{id}" }
				id => "message-Info_RPC_Message"
				add_field => {
					"[event][id]" => "Info_RPC_Message"
					"[rsa][message][id1]" => "Info_RPC_Message"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Message_aborted
		# line in RSA:  Info: Message aborted MID <id> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Message aborted MID %{id} %{event_description}" }
				id => "message-Info_Message_aborted"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Stop"
				"ec_theme" => "TEV"
				"result" => "Aborted"
					"[event][id]" => "Info_Message_aborted"
					"[rsa][message][id1]" => "Info_Message_aborted"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_alert_sent
		# line in RSA:  Info: A System/Critical alert was sent to <to> with subject "<subject>".
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: A System/Critical alert was sent to %{to} with subject \"%{subject}\"." }
				id => "message-Info_alert_sent"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_alert_sent"
					"[rsa][message][id1]" => "Info_alert_sent"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_SMTP_Attempt
		# line in RSA:  Info: <from> system <event_state> to <action> a message to <to> with subject '<subject>'<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: %{from} system %{event_state} to %{action} a message to %{to} with subject '%{subject}'%{fld12}" }
				id => "message-Info_SMTP_Attempt"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_SMTP_Attempt"
					"[rsa][message][id1]" => "Info_SMTP_Attempt"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_SMTP_Success
		# line in RSA:  Info: <from> system <disposition> <action> a message to <to> with subject '<subject>'<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: %{from} system %{disposition} %{action} a message to %{to} with subject '%{subject}'%{fld12}" }
				id => "message-Info_SMTP_Success"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_theme" => "ALM"
					"[event][id]" => "Info_SMTP_Success"
					"[rsa][message][id1]" => "Info_SMTP_Success"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_authentication_failed
		# line in RSA:  Info: User <username> failed authentication.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: User %{username} failed authentication." }
				id => "message-Info_authentication_failed"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "Failed"
					"[event][id]" => "Info_authentication_failed"
					"[rsa][message][id1]" => "Info_authentication_failed"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_authentication_successful:01
		# line in RSA:  Info: User <username> from <saddr> was authenticated successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: User %{username} from %{saddr} was authenticated successfully." }
				id => "message-Info_authentication_successful:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"result" => "Successful"
					"[event][id]" => "Info_authentication_successful:01"
					"[rsa][message][id1]" => "Info_authentication_successful:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_authentication_successful
		# line in RSA:  Info: User <username> was authenticated successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: User %{username} was authenticated successfully." }
				id => "message-Info_authentication_successful"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"result" => "Successful"
					"[event][id]" => "Info_authentication_successful"
					"[rsa][message][id1]" => "Info_authentication_successful"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_login
		# line in RSA:  Info: PID <process_id>: User <username> login from <saddr> on <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: PID %{process_id}: User %{username} login from %{saddr} on %{hostip}" }
				id => "message-Info_login"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user login"
					"[event][id]" => "Info_login"
					"[rsa][message][id1]" => "Info_login"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_logged_out
		# line in RSA:  Info: PID <process_id>: User <username> logged out of <logon_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: PID %{process_id}: User %{username} logged out of %{logon_type}" }
				id => "message-Info_logged_out"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logout"
					"[event][id]" => "Info_logged_out"
					"[rsa][message][id1]" => "Info_logged_out"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_logout
		# line in RSA:  Info: logout:<saddr> user:<username> session:<sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: logout:%{saddr} user:%{username} session:%{sessionid}" }
				id => "message-Info_logout"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logout"
					"[event][id]" => "Info_logout"
					"[rsa][message][id1]" => "Info_logout"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_executed
		# line in RSA:  Info: PID <process_id>: User <username> executed batch command: '<action>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: PID %{process_id}: User %{username} executed batch command: '%{action}'" }
				id => "message-Info_executed"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Execute"
				"ec_theme" => "ALM"
				"action" => "user executed batch command"
					"[event][id]" => "Info_executed"
					"[rsa][message][id1]" => "Info_executed"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_entered
		# line in RSA:  Info: PID <process_id>: User <username> entered '<action>'; prompt was '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: PID %{process_id}: User %{username} entered '%{action}'; prompt was '%{info}'" }
				id => "message-Info_entered"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "ALM"
				"action" => "user entered action"
					"[event][id]" => "Info_entered"
					"[rsa][message][id1]" => "Info_entered"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_attachment
		# line in RSA:  Info: MID <id> attachment '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} attachment '%{filename}'" }
				id => "message-Info_attachment"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_attachment"
					"[rsa][message][id1]" => "Info_attachment"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_enqueued
		# line in RSA:  Info: MID <id> enqueued for PXE encryption
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} enqueued for PXE encryption" }
				id => "message-Info_enqueued"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_enqueued"
					"[rsa][message][id1]" => "Info_enqueued"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_PXE
		# line in RSA:  Info: MID <id> was generated based on MID <id1> by PXE encryption filter '<filter>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} was generated based on MID %{id1} by PXE encryption filter '%{filter}'" }
				id => "message-Info_PXE"
				add_field => {
				"ec_subject" => "Message"
				"ec_theme" => "Communication"
					"[event][id]" => "Info_PXE"
					"[rsa][message][id1]" => "Info_PXE"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:01
		# line in RSA:  Info: ICID <id1> <fld2> <fld1>-<shost> <protocol>\r\n<resultcode> Hello <dhost> please proceed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} %{fld2} %{fld1}-%{shost} %{protocol}\r\n%{resultcode} Hello %{dhost} please proceed." }
				id => "message-Info_ICID:01"
				add_field => {
					"[event][id]" => "Info_ICID:01"
					"[rsa][message][id1]" => "Info_ICID:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:02
		# line in RSA:  Info: ICID <id1> <fld2> <fld1>{ -\r\n | -<shost>\r\n }<resultcode> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld1>[^\s\s]*)([\s]*\-\\r\\n[\s]+|[\s]*\-(?<shost>[^\\]*)\\r\\n[\s]+)(?<resultcode>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-Info_ICID:02"
				add_field => {
					"[event][id]" => "Info_ICID:02"
					"[rsa][message][id1]" => "Info_ICID:02"
					"[event][categoryid]" => "1207010201"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:03
		# line in RSA:  Info: ICID <id1> ACCEPT SG <rulename> match <saddr> SBRS { rfc1918 | <reputation_num> country <location_country>| <reputation_num>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+ACCEPT[\s]+SG[\s]+(?<rulename>[^\s]*)[\s]+match[\s]+(?<saddr>[^\s]*)[\s]+SBRS[\s]+([\s]*rfc1918[\s]+|[\s]*(?<reputation_num>[^\s]*)[\s]+country[\s]+(?<location_country>.*)|[\s]*(?<reputation_num>.*))$" }
				id => "message-Info_ICID:03"
				add_field => {
					"[event][id]" => "Info_ICID:03"
					"[rsa][message][id1]" => "Info_ICID:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:04
		# line in RSA:  Info: ICID <id1> REJECT SG <rulename> match <saddr> { SBRS not enabled | SBRS rfc1918 | SBRS <reputation_num> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+REJECT[\s]+SG[\s]+(?<rulename>[^\s]*)[\s]+match[\s]+(?<saddr>[^\s]*)[\s]+([\s]*SBRS[\s]+not[\s]+enabled[\s]+|[\s]*SBRS[\s]+rfc1918[\s]+|[\s]*SBRS[\s]+(?<reputation_num>[^\s]*)[\s]+)$" }
				id => "message-Info_ICID:04"
				add_field => {
					"[event][id]" => "Info_ICID:04"
					"[rsa][message][id1]" => "Info_ICID:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:05
		# line in RSA:  Info: ICID <id1> address <saddr> <service> host <shost> sbrs { rfc1918 | unable to retrieve | <reputation_num> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+address[\s]+(?<saddr>[^\s]*)[\s]+(?<service>[^\s]*)[\s]+host[\s]+(?<shost>[^\s]*)[\s]+sbrs[\s]+([\s]*rfc1918[\s]+|[\s]*unable[\s]+to[\s]+retrieve[\s]+|[\s]*(?<reputation_num>[^\s]*)[\s]+)$" }
				id => "message-Info_ICID:05"
				add_field => {
					"[event][id]" => "Info_ICID:05"
					"[rsa][message][id1]" => "Info_ICID:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:06
		# line in RSA:  Info: ICID <id1> <fld1> RCPT { TO | To }:<<<to>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+RCPT[\s]+([\s]*TO[\s]+|[\s]*To[\s]+):<(?<to>[^>]*)>$" }
				id => "message-Info_ICID:06"
				add_field => {
					"[event][id]" => "Info_ICID:06"
					"[rsa][message][id1]" => "Info_ICID:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:07
		# line in RSA:  Info: ICID <id1> <fld1> MAIL { From | FROM }:<<<to>> { SIZE=<filename_size> BODY=<fld2> | SIZE=<filename_size> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+MAIL[\s]+([\s]*From[\s]+|[\s]*FROM[\s]+):<(?<to>[^>]*)>[\s]+([\s]*SIZE=(?<filename_size>[^\s]*)[\s]+BODY=(?<fld2>[^\s]*)[\s]+|[\s]*SIZE=(?<filename_size>[^\s]*)[\s]+)$" }
				id => "message-Info_ICID:07"
				add_field => {
					"[event][id]" => "Info_ICID:07"
					"[rsa][message][id1]" => "Info_ICID:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:08
		# line in RSA:  Info: ICID <id1> <fld1> <resultcode> { recipient <<<to>> ok | sender <<<from>> ok }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+([\s]*recipient[\s]+<(?<to>[^>]*)>[\s]+ok[\s]+|[\s]*sender[\s]+<(?<from>[^>]*)>[\s]+ok[\s]+)$" }
				id => "message-Info_ICID:08"
				add_field => {
					"[event][id]" => "Info_ICID:08"
					"[rsa][message][id1]" => "Info_ICID:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:09
		# line in RSA:  Info: ICID <id1> TLS success protocol <protocol> cipher <s_cipher>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} TLS success protocol %{protocol} cipher %{s_cipher}" }
				id => "message-Info_ICID:09"
				add_field => {
					"[event][id]" => "Info_ICID:09"
					"[rsa][message][id1]" => "Info_ICID:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:10
		# line in RSA:  Info: ICID <id1> <fld1> EHLO <dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{id1} %{fld1} EHLO %{dhost}" }
				id => "message-Info_ICID:10"
				add_field => {
					"[event][id]" => "Info_ICID:10"
					"[rsa][message][id1]" => "Info_ICID:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID:11
		# line in RSA:  Info: ICID <id1> >> <resultcode> { <dhost> ESMTP | <dhost> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Info:[\s]+ICID[\s]+(?<id1>[^\s]*)[\s]+>>[\s]+(?<resultcode>[^\s]*)[\s]+([\s]*(?<dhost>[^\s]*)[\s]+ESMTP[\s]+|[\s]*(?<dhost>[^\s]*)[\s]+)$" }
				id => "message-Info_ICID:11"
				add_field => {
					"[event][id]" => "Info_ICID:11"
					"[rsa][message][id1]" => "Info_ICID:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_ICID
		# line in RSA:  Info: ICID <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: ICID %{info}" }
				id => "message-Info_ICID"
				add_field => {
					"[event][id]" => "Info_ICID"
					"[rsa][message][id1]" => "Info_ICID"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_DNS_Temporary_Failure
		# line in RSA:  Info: DNS Temporary Failure <hostname> MX - unable to reach nameserver on any valid IP
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DNS Temporary Failure %{hostname} MX - unable to reach nameserver on any valid IP" }
				id => "message-Info_DNS_Temporary_Failure"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Info_DNS_Temporary_Failure"
					"[rsa][message][id1]" => "Info_DNS_Temporary_Failure"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Outbreak_rule
		# line in RSA:  Info: Outbreak Rule: <rulename> has threat level <severity>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: Outbreak Rule: %{rulename} has threat level %{severity}" }
				id => "message-Info_Outbreak_rule"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
					"[event][id]" => "Info_Outbreak_rule"
					"[rsa][message][id1]" => "Info_Outbreak_rule"
					"[event][categoryid]" => "1003010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:01
		# line in RSA:  Info: MID <id> AMP file reputation verdict : <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} AMP file reputation verdict : %{result}" }
				id => "message-Info_Logfile:01"
				add_field => {
					"[event][id]" => "Info_Logfile:01"
					"[rsa][message][id1]" => "Info_Logfile:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:02
		# line in RSA:  Info: MID <id> URL <url> has reputation <reputation_num> matched <rulename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} URL %{url} has reputation %{reputation_num} matched %{rulename}" }
				id => "message-Info_Logfile:02"
				add_field => {
					"[event][id]" => "Info_Logfile:02"
					"[rsa][message][id1]" => "Info_Logfile:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:03
		# line in RSA:  Info: <fld1> MID: <id>: <fld2>: URL lookup success = <result>; <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: %{fld1} MID: %{id}: %{fld2}: URL lookup success = %{result}; %{fld3}" }
				id => "message-Info_Logfile:03"
				add_field => {
					"[event][id]" => "Info_Logfile:03"
					"[rsa][message][id1]" => "Info_Logfile:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:04
		# line in RSA: Info: DCID <id1> <fld1> RCPT TO:<<<dhost>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID %{id1} %{fld1} RCPT TO:<%{dhost}>" }
				id => "message-Info_Logfile:04"
				add_field => {
					"[event][id]" => "Info_Logfile:04"
					"[rsa][message][id1]" => "Info_Logfile:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:05
		# line in RSA: Info: DCID <id1> <fld1> MAIL FROM:<<<from>> SIZE=<filename_size>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID %{id1} %{fld1} MAIL FROM:<%{from}> SIZE=%{filename_size}" }
				id => "message-Info_Logfile:05"
				add_field => {
					"[event][id]" => "Info_Logfile:05"
					"[rsa][message][id1]" => "Info_Logfile:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:06
		# line in RSA: Info: DCID <id1> address <saddr> domain <sdomain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID %{id1} address %{saddr} domain %{sdomain}" }
				id => "message-Info_Logfile:06"
				add_field => {
					"[event][id]" => "Info_Logfile:06"
					"[rsa][message][id1]" => "Info_Logfile:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:07
		# line in RSA: Info: DCID <id1> TLS <result> protocol <protocol> cipher <s_cipher>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID %{id1} TLS %{result} protocol %{protocol} cipher %{s_cipher}" }
				id => "message-Info_Logfile:07"
				add_field => {
					"[event][id]" => "Info_Logfile:07"
					"[rsa][message][id1]" => "Info_Logfile:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:08
		# line in RSA:  Info: DCID <id1> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: DCID %{id1} %{info}" }
				id => "message-Info_Logfile:08"
				add_field => {
					"[event][id]" => "Info_Logfile:08"
					"[rsa][message][id1]" => "Info_Logfile:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile:09
		# line in RSA:  Info: MID <id> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: MID %{id} %{info}" }
				id => "message-Info_Logfile:09"
				add_field => {
					"[event][id]" => "Info_Logfile:09"
					"[rsa][message][id1]" => "Info_Logfile:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Info_Logfile
		# line in RSA:  Info: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Info: %{info}" }
				id => "message-Info_Logfile"
				add_field => {
					"[event][id]" => "Info_Logfile"
					"[rsa][message][id1]" => "Info_Logfile"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Critical" {
		# MESSAGE Critical_DNS_Error
		# line in RSA:  Critical: LDAP: query DNS result DNS Soft Error looking up <hostname> (A) while asking Internal Resolver. Error was: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: LDAP: query DNS result DNS Soft Error looking up %{hostname} (A) while asking Internal Resolver. Error was: %{result}" }
				id => "message-Critical_DNS_Error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_DNS_Error"
					"[rsa][message][id1]" => "Critical_DNS_Error"
					"[event][categoryid]" => "1805010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_LDAP_error
		# line in RSA:  Critical: LDAP: query <group_object> result Operations error, server diagnostic: <resultcode>: LdapErr: <fld25>, comment: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: LDAP: query %{group_object} result Operations error, server diagnostic: %{resultcode}: LdapErr: %{fld25}, comment: %{event_description}" }
				id => "message-Critical_LDAP_error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_LDAP_error"
					"[rsa][message][id1]" => "Critical_LDAP_error"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_LDAP_query
		# line in RSA:  Critical: LDAP: query <group_object> result <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: LDAP: query %{group_object} result %{result}" }
				id => "message-Critical_LDAP_query"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_LDAP_query"
					"[rsa][message][id1]" => "Critical_LDAP_query"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_LDAP_query_failure
		# line in RSA:  Critical: LDAP group query failure during per-recipient scanning, possible <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: LDAP group query failure during per-recipient scanning, possible %{event_description}" }
				id => "message-Critical_LDAP_query_failure"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"result" => "Failure"
					"[event][id]" => "Critical_LDAP_query_failure"
					"[rsa][message][id1]" => "Critical_LDAP_query_failure"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_alert_sent_error
		# line in RSA:  Critical: Error while sending alert: Unable to look up <domain> in DNS: DNS Soft Error looking up <fld1> (MX) while asking <fld2> Error was: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: Error while sending alert: Unable to look up %{domain} in DNS: DNS Soft Error looking up %{fld1} (MX) while asking %{fld2} Error was: %{result}" }
				id => "message-Critical_alert_sent_error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_alert_sent_error"
					"[rsa][message][id1]" => "Critical_alert_sent_error"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_alert_sent_error:01
		# line in RSA:  Critical: Error while sending alert: Unable to send System/Warning alert to <to> with subject "<subject>".
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: Error while sending alert: Unable to send System/Warning alert to %{to} with subject \"%{subject}\"." }
				id => "message-Critical_alert_sent_error:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_alert_sent_error:01"
					"[rsa][message][id1]" => "Critical_alert_sent_error:01"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_Log_Error
		# line in RSA:  Critical: Log Error: Push error for subscription <event_log>: SCP failed to transfer to <daddr>:<dport>: ssh: connect to host <hostip> port <network_port>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: Log Error: Push error for subscription %{event_log}: SCP failed to transfer to %{daddr}:%{dport}: ssh: connect to host %{hostip} port %{network_port}: %{event_description}" }
				id => "message-Critical_Log_Error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "ALM"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_Log_Error"
					"[rsa][message][id1]" => "Critical_Log_Error"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical_Log_Error:01
		# line in RSA:  Critical: Log Error: Push error for subscription <event_log>: SCP failed to transfer to <daddr>:<dport>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: Log Error: Push error for subscription %{event_log}: SCP failed to transfer to %{daddr}:%{dport}: %{event_description}" }
				id => "message-Critical_Log_Error:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "ALM"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical_Log_Error:01"
					"[rsa][message][id1]" => "Critical_Log_Error:01"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical:01
		# line in RSA: Critical: Error while sending alert: Unable to send System/Critical alert to <to> with subject "<subject>".
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: Error while sending alert: Unable to send System/Critical alert to %{to} with subject \"%{subject}\"." }
				id => "message-Critical:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical:01"
					"[rsa][message][id1]" => "Critical:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical:02
		# line in RSA: Critical: Internal SMTP giving up on message to <to> with subject '<subject>': <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: Internal SMTP giving up on message to %{to} with subject '%{subject}': %{fld1}" }
				id => "message-Critical:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Critical:02"
					"[rsa][message][id1]" => "Critical:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Critical:03
		# line in RSA: Critical: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Critical: %{event_description}" }
				id => "message-Critical:03"
				add_field => {
					"[event][id]" => "Critical:03"
					"[rsa][message][id1]" => "Critical:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Warning" {
		# MESSAGE Warning_LDAP_query
		# line in RSA:  Warning: LDAP: query '<group_object>' could not be found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: LDAP: query '%{group_object}' could not be found" }
				id => "message-Warning_LDAP_query"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_LDAP_query"
					"[rsa][message][id1]" => "Warning_LDAP_query"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_Key_expire
		# line in RSA:  Warning: Your "<fld1>" key will expire in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Your \"%{fld1}\" key will expire in %{info}" }
				id => "message-Warning_Key_expire"
				add_field => {
				"ec_subject" => "License"
				"ec_theme" => "ALM"
					"[event][id]" => "Warning_Key_expire"
					"[rsa][message][id1]" => "Warning_Key_expire"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_DNS_query_error
		# line in RSA:  Warning: DNS query network error '<result>' to '<daddr>' looking up '<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: DNS query network error '%{result}' to '%{daddr}' looking up '%{fld1}'" }
				id => "message-Warning_DNS_query_error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_DNS_query_error"
					"[rsa][message][id1]" => "Warning_DNS_query_error"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_Bootstrap_failed
		# line in RSA:  Warning: Failed to bootstrap the DNS resolver. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Failed to bootstrap the DNS resolver. %{info}" }
				id => "message-Warning_Bootstrap_failed"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"result" => "Failed"
					"[event][id]" => "Warning_Bootstrap_failed"
					"[rsa][message][id1]" => "Warning_Bootstrap_failed"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_System_limit_reached
		# line in RSA:  Warning: System limit reached: connection limit for IP <hostip> on listener <direction> ICID <id1>: max: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: System limit reached: connection limit for IP %{hostip} on listener %{direction} ICID %{id1}: max: %{fld1}" }
				id => "message-Warning_System_limit_reached"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_System_limit_reached"
					"[rsa][message][id1]" => "Warning_System_limit_reached"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_Senderbase_participation
		# line in RSA:  Warning: MID <id> CASE could not be reached for SenderBase Network Participation processing
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: MID %{id} CASE could not be reached for SenderBase Network Participation processing" }
				id => "message-Warning_Senderbase_participation"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_Senderbase_participation"
					"[rsa][message][id1]" => "Warning_Senderbase_participation"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_alert_sent_error
		# line in RSA:  Warning: Error while sending alert: <result> to <to> with subject "<subject>", <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Error while sending alert: %{result} to %{to} with subject \"%{subject}\", %{info}" }
				id => "message-Warning_alert_sent_error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_alert_sent_error"
					"[rsa][message][id1]" => "Warning_alert_sent_error"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_DNS_response_invalid
		# line in RSA:  Warning: Received an invalid DNS Response: '<result>' to IP <daddr> looking up <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Received an invalid DNS Response: '%{result}' to IP %{daddr} looking up %{hostname}" }
				id => "message-Warning_DNS_response_invalid"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_DNS_response_invalid"
					"[rsa][message][id1]" => "Warning_DNS_response_invalid"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_DNS_response_invalid:01
		# line in RSA:  Warning: Received an invalid DNS Response: rcode=<result> data=<fld23> to IP <daddr> looking up <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Received an invalid DNS Response: rcode=%{result} data=%{fld23} to IP %{daddr} looking up %{hostname}" }
				id => "message-Warning_DNS_response_invalid:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_DNS_response_invalid:01"
					"[rsa][message][id1]" => "Warning_DNS_response_invalid:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_SMTP_Error
		# line in RSA:  Warning: Internal SMTP Error: Failed to send message to host <daddr>:<dport> for recipient <to>: <result> "<resultcode>", expecting code starting with <fld23>, response was ['<event_description>'].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Internal SMTP Error: Failed to send message to host %{daddr}:%{dport} for recipient %{to}: %{result} \"%{resultcode}\", expecting code starting with %{fld23}, response was ['%{event_description}']." }
				id => "message-Warning_SMTP_Error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_SMTP_Error"
					"[rsa][message][id1]" => "Warning_SMTP_Error"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_SMTP_Error:01
		# line in RSA:  Warning: Internal SMTP Error: Failed to send message to host <daddr>:<dport> for recipient <to>: <result>: [Errno <resultcode>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Internal SMTP Error: Failed to send message to host %{daddr}:%{dport} for recipient %{to}: %{result}: [Errno %{resultcode}] %{event_description}" }
				id => "message-Warning_SMTP_Error:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_SMTP_Error:01"
					"[rsa][message][id1]" => "Warning_SMTP_Error:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:01
		# line in RSA: Warning: No valid IP Addresses found for delivery to <domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: No valid IP Addresses found for delivery to %{domain}" }
				id => "message-Warning:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning:01"
					"[rsa][message][id1]" => "Warning:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_MID_Error
		# line in RSA: Warning: MID <id>: <context> (<event_description>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: MID %{id}: %{context} (%{event_description}): %{result}" }
				id => "message-Warning_MID_Error"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_MID_Error"
					"[rsa][message][id1]" => "Warning_MID_Error"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:02
		# line in RSA: Warning: MID <id>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: MID %{id}, %{event_description}" }
				id => "message-Warning:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning:02"
					"[rsa][message][id1]" => "Warning:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:03
		# line in RSA: Warning: <info> from host=('<saddr>', <fld3>), dhap_limit=<fld1>, sender_group=<group_object>, listener=<direction>, reverse_dns=<fld2>, ICID <id1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: %{info} from host=('%{saddr}', %{fld3}), dhap_limit=%{fld1}, sender_group=%{group_object}, listener=%{direction}, reverse_dns=%{fld2}, ICID %{id1}" }
				id => "message-Warning:03"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning:03"
					"[rsa][message][id1]" => "Warning:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:04
		# line in RSA: Warning: MID <id> <info>. <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: MID %{id} %{info}. %{event_description}" }
				id => "message-Warning:04"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning:04"
					"[rsa][message][id1]" => "Warning:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:14
		# line in RSA: Warning: sophos antivirus - MID <id> <fld2>- Virus '<virusname>' '<filename>'<fld3> <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: sophos antivirus - MID %{id} %{fld2}- Virus '%{virusname}' '%{filename}'%{fld3} %{fld4}" }
				id => "message-Warning:14"
				add_field => {
					"[event][id]" => "Warning:14"
					"[rsa][message][id1]" => "Warning:14"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:05
		# line in RSA: Warning: <info>. <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: %{info}. %{event_description}" }
				id => "message-Warning:05"
				add_field => {
				"ec_subject" => "Virus"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
					"[event][id]" => "Warning:05"
					"[rsa][message][id1]" => "Warning:05"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_fetch_Error
		# line in RSA:  Warning: Could not fetch current Virus Threat Level: [Errno <resultcode>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Could not fetch current Virus Threat Level: [Errno %{resultcode}] %{event_description}" }
				id => "message-Warning_fetch_Error"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_fetch_Error"
					"[rsa][message][id1]" => "Warning_fetch_Error"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:06
		# line in RSA: Warning: MID <id> '<username>' <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: MID %{id} '%{username}' %{event_description}" }
				id => "message-Warning:06"
				add_field => {
				"ec_activity" => "Scan"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning:06"
					"[rsa][message][id1]" => "Warning:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning_System_limit_reached:01
		# line in RSA:  Warning: System limit reached: connection limit for listener <direction> ICID <id1>: max: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: System limit reached: connection limit for listener %{direction} ICID %{id1}: max: %{fld1}" }
				id => "message-Warning_System_limit_reached:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning_System_limit_reached:01"
					"[rsa][message][id1]" => "Warning_System_limit_reached:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:07
		# line in RSA: Warning: MID <id> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: MID %{id} %{event_description}" }
				id => "message-Warning:07"
				add_field => {
				"ec_activity" => "Scan"
				"ec_outcome" => "Failure"
					"[event][id]" => "Warning:07"
					"[rsa][message][id1]" => "Warning:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:08
		# line in RSA: Warning: graymail [<agent>] MID <id> Unexpected error initiating graymail scan:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: graymail [%{agent}] MID %{id} Unexpected error initiating graymail scan:" }
				id => "message-Warning:08"
				add_field => {
				"ec_activity" => "Scan"
				"ec_outcome" => "Failure"
				"event_description" => "Unexpected error initiating graymail scan"
					"[event][id]" => "Warning:08"
					"[rsa][message][id1]" => "Warning:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:09
		# line in RSA: Warning: Service LDAP communication error (Failed binding with user '<dn>' and supplied password: <result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Service LDAP communication error (Failed binding with user '%{dn}' and supplied password: %{result})" }
				id => "message-Warning:09"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Service LDAP communication error"
					"[event][id]" => "Warning:09"
					"[rsa][message][id1]" => "Warning:09"
					"[event][categoryid]" => "1612010000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:10
		# line in RSA: Warning: graymail [<agent>] MID <id> Graymail scan timed out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: graymail [%{agent}] MID %{id} Graymail scan timed out" }
				id => "message-Warning:10"
				add_field => {
				"ec_activity" => "Scan"
				"ec_outcome" => "Unknown"
				"event_description" => "Graymail scan timed out"
					"[event][id]" => "Warning:10"
					"[rsa][message][id1]" => "Warning:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:11
		# line in RSA:  Warning: Invalid server idle from unknown child pid=<child_pid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: Invalid server idle from unknown child pid=%{child_pid}" }
				id => "message-Warning:11"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Error"
				"event_description" => "Invalid server idle from unknown child pid"
					"[event][id]" => "Warning:11"
					"[rsa][message][id1]" => "Warning:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:12
		# line in RSA:  Warning: <fld1> - File reputation feature key is expired
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: %{fld1} - File reputation feature key is expired" }
				id => "message-Warning:12"
				add_field => {
				"event_description" => "File reputation feature key is expired"
					"[event][id]" => "Warning:12"
					"[rsa][message][id1]" => "Warning:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:13
		# line in RSA:  Warning: <fld3> : total inbound connections ICID: <id1> max: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: %{fld3} : total inbound connections ICID: %{id1} max: %{fld1}" }
				id => "message-Warning:13"
				add_field => {
				"event_description" => "System limit reached"
					"[event][id]" => "Warning:13"
					"[rsa][message][id1]" => "Warning:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld2} %{hfld3} %{hfld4} %{hfld5}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Warning:15
		# line in RSA:  Warning: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Warning: %{event_description}" }
				id => "message-Warning:15"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "Warning:15"
					"[rsa][message][id1]" => "Warning:15"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hfld6} %{hfld7} %{hfld8} %{hfld9} %{hfld10}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H m s" ] }
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA: <fld1> <fld2> <fld3> <fld4> <fld5> <severity>: <fld6>
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5} %{severity}: %{fld6}" }
			id => "msgParserId124"
			add_field => {
				"vid" => "%{severity}_EVENT"
				"[logstash][fullDateTimeString]" => "%{fld2} %{fld3} %{fld4} %{fld5}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ciscoiportesamsg.json"
#			template_name => "ciscoiportesa_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
