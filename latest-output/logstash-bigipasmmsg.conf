# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "bigipasm"
			"[observer][name]" => "F5 Big-IP Application Security Manager"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth>  <hdate> <htime> <hhost> ASM:CEF:<hfld1>|<hfld2>|<hfld3>|<hversion>|<hfld4>|<hfld5>|<hfld6>|dvchost=<hfld7> dvc=<hfld8> cs1=<hfld9> cs1Label=policy_name cs2=<hfld10> cs2Label=web_application_name deviceCustomDate1=<hfld11> deviceCustomDate1Label=policy_apply_date externalId=<hfld12> act=<hfld13> cn1=<hfld14> cn1Label=response_code src=<hfld15> spt=<hfld16> dst=<hfld17> dpt=<hfld18> requestMethod=<messageid> app=<hfld19><!payload:hhost>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0002
	# line in RSA: <hmonth>  <hdate> <htime> <hhost> ASM:CEF:<hfld1>|<hfld2>|<hfld3>|<hversion>|<hfld16>|<hfld17>|<severity>|dvchost=<hfld7> dvc=<hfld8> cs1=<hfld9> cs1Label=policy_name cs2=<hfld10> cs2Label=<hfld20> deviceCustomDate1=<hfld11> deviceCustomDate1Label=policy_apply_date act=<hfld12> cn3=<hfld13> cn3Label=<messageid>_id<!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhost>[^\s]*)[\s]+ASM:CEF:(?<hfld1>[^\|]*)\|(?<hfld2>[^\|]*)\|(?<hfld3>[^\|]*)\|(?<hversion>[^\|]*)\|(?<hfld16>[^\|]*)\|(?<hfld17>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hfld7>[^\s]*)[\s]+dvc=(?<hfld8>[^\s]*)[\s]+cs1=(?<hfld9>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<hfld10>[^\s]*)[\s]+cs2Label=(?<hfld20>[^\s]*)[\s]+deviceCustomDate1=(?<hfld11>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+act=(?<hfld12>[^\s]*)[\s]+cn3=(?<hfld13>[^\s]*)[\s]+cn3Label=(?<messageid>[^_]*)_id(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth>  <hdate> <htime> <hhost> ASM:CEF:<hfld1>|<hfld2>|<hfld3>|<hversion>|<hfld16>|<hfld17>|<severity>|dvchost=<hfld7> deviceTranslatedAddress=<hfld8> cs1=<hfld9> cs1Label=policy_name cs2=<hfld10> cs2Label=web_application_name deviceCustomDate1=<hfld11> deviceCustomDate1Label=policy_apply_date externalId=<hfld20> act=<hfld12> cn1=<hfld21> cn1Label=response_code src=<hfld22> spt=<hfld23> dst=<hfld18> dpt=<hfld19> requestMethod=<messageid> <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhost>[^\s]*)[\s]+ASM:CEF:(?<hfld1>[^\|]*)\|(?<hfld2>[^\|]*)\|(?<hfld3>[^\|]*)\|(?<hversion>[^\|]*)\|(?<hfld16>[^\|]*)\|(?<hfld17>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hfld7>[^\s]*)[\s]+deviceTranslatedAddress=(?<hfld8>[^\s]*)[\s]+cs1=(?<hfld9>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<hfld10>[^\s]*)[\s]+cs2Label=web_application_name[\s]+deviceCustomDate1=(?<hfld11>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<hfld20>[^\s]*)[\s]+act=(?<hfld12>[^\s]*)[\s]+cn1=(?<hfld21>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<hfld22>[^\s]*)[\s]+spt=(?<hfld23>[^\s]*)[\s]+dst=(?<hfld18>[^\s]*)[\s]+dpt=(?<hfld19>[^\s]*)[\s]+requestMethod=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth>  <hdate> <htime> <hhost> ASM:CEF:<hfld1>|<hfld2>|<hfld3>|<hversion>|<hfld16>|<hfld17>|<severity>|dvchost=<hfld7> dvc=<hfld8>cs1=<hfld9> cs1Label=policy_name cs2=<hfld10> cs2Label=<hfld26> deviceCustomDate1=<hfld11> deviceCustomDate1Label=policy_apply_date externalId=<hfld20> act=<hfld12> cn1=<hfld21> cn1Label=response_code src=<hfld22> spt=<hfld23> dst=<hfld18> dpt=<hfld19> requestMethod=<messageid> <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhost>[^\s]*)[\s]+ASM:CEF:(?<hfld1>[^\|]*)\|(?<hfld2>[^\|]*)\|(?<hfld3>[^\|]*)\|(?<hversion>[^\|]*)\|(?<hfld16>[^\|]*)\|(?<hfld17>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hfld7>[^\s]*)[\s]+dvc=(?<hfld8>[^c]*)cs1=(?<hfld9>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<hfld10>[^\s]*)[\s]+cs2Label=(?<hfld26>[^\s]*)[\s]+deviceCustomDate1=(?<hfld11>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<hfld20>[^\s]*)[\s]+act=(?<hfld12>[^\s]*)[\s]+cn1=(?<hfld21>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<hfld22>[^\s]*)[\s]+spt=(?<hfld23>[^\s]*)[\s]+dst=(?<hfld18>[^\s]*)[\s]+dpt=(?<hfld19>[^\s]*)[\s]+requestMethod=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth>  <hdate> <htime> <hhost> ASM:"<hfld1>"|"<hfld2>"|"<hfld3>"|"<hfld4>"|"<hfld5>"|"<hfld6>"|"<hfld7>"|"<hfld8>"|"<hfld9>"|"<hfld10>"|"<hfld11>"|"<hfld12>"|"<hfld13>"|"<hfld14>"|"<haction>"<!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hhost>[^\s]*)[\s]+ASM:\"(?<hfld1>[^\"]*)\"\|\"(?<hfld2>[^\"]*)\"\|\"(?<hfld3>[^\"]*)\"\|\"(?<hfld4>[^\"]*)\"\|\"(?<hfld5>[^\"]*)\"\|\"(?<hfld6>[^\"]*)\"\|\"(?<hfld7>[^\"]*)\"\|\"(?<hfld8>[^\"]*)\"\|\"(?<hfld9>[^\"]*)\"\|\"(?<hfld10>[^\"]*)\"\|\"(?<hfld11>[^\"]*)\"\|\"(?<hfld12>[^\"]*)\"\|\"(?<hfld13>[^\"]*)\"\|\"(?<hfld14>[^\"]*)\"\|\"(?<haction>[^\"]*)\"(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "non_cef_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <hmonth>  <hdate> <htime> <hhost> ASM:CEF:<hfld1>|<hfld2>|<hfld3>|<version>|<info>|<event_description>|<severity>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth}  %{hdate} %{htime} %{hhost} ASM:CEF:%{hfld1}|%{hfld2}|%{hfld3}|%{version}|%{info}|%{event_description}|%{severity}|%{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "BIGIPASM_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-bigipasmmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "GET" {
		# MESSAGE GET:21
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> deviceTranslatedAddress=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=alerted cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=N/A cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} deviceTranslatedAddress=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=alerted cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=N/A cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:21"
				add_field => {
				"event_type" => "N/A"
				"action" => "alerted"
					"[event][id]" => "GET:21"
					"[rsa][message][id1]" => "GET:21"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:23
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> deviceTranslatedAddress=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=alerted cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=SQL-Injection cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} deviceTranslatedAddress=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=alerted cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=SQL-Injection cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:23"
				add_field => {
				"event_type" => "SQL-Injection"
				"action" => "alerted"
					"[event][id]" => "GET:23"
					"[rsa][message][id1]" => "GET:23"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:22
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> deviceTranslatedAddress=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=alerted cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Cross Site Scripting (XSS) cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} deviceTranslatedAddress=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=alerted cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Cross Site Scripting (XSS) cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:22"
				add_field => {
				"event_type" => "Cross Site Scripting (XSS)"
				"action" => "alerted"
					"[event][id]" => "GET:22"
					"[rsa][message][id1]" => "GET:22"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:20
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> deviceTranslatedAddress=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=alerted cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Information Leakage cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} deviceTranslatedAddress=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=alerted cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Information Leakage cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:20"
				add_field => {
				"event_type" => "Information Leakage"
				"action" => "alerted"
					"[event][id]" => "GET:20"
					"[rsa][message][id1]" => "GET:20"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:18
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> deviceTranslatedAddress=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=alerted cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Buffer Overflow cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} deviceTranslatedAddress=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=alerted cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Buffer Overflow cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:18"
				add_field => {
				"event_type" => "Buffer Overflow"
				"action" => "alerted"
					"[event][id]" => "GET:18"
					"[rsa][message][id1]" => "GET:18"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:09
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Buffer Overflow cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Buffer Overflow cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:09"
				add_field => {
				"event_type" => "Buffer Overflow"
				"action" => "blocked"
					"[event][id]" => "GET:09"
					"[rsa][message][id1]" => "GET:09"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:03
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Buffer Overflow cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Buffer Overflow cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:03"
				add_field => {
				"event_type" => "Buffer Overflow"
					"[event][id]" => "GET:03"
					"[rsa][message][id1]" => "GET:03"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:19
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> deviceTranslatedAddress=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=alerted cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Forceful Browsing cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} deviceTranslatedAddress=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=alerted cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Forceful Browsing cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:19"
				add_field => {
				"event_type" => "Forceful Browsing"
				"action" => "alerted"
					"[event][id]" => "GET:19"
					"[rsa][message][id1]" => "GET:19"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:10
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Forceful Browsing cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Forceful Browsing cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:10"
				add_field => {
				"event_type" => "Forceful Browsing"
				"action" => "blocked"
					"[event][id]" => "GET:10"
					"[rsa][message][id1]" => "GET:10"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:04
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Forceful Browsing cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Forceful Browsing cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:04"
				add_field => {
				"event_type" => "Forceful Browsing"
					"[event][id]" => "GET:04"
					"[rsa][message][id1]" => "GET:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:11
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=HTTP Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=HTTP Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:11"
				add_field => {
				"event_type" => "HTTP Parser Attack"
				"action" => "blocked"
					"[event][id]" => "GET:11"
					"[rsa][message][id1]" => "GET:11"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:05
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=HTTP Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=HTTP Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:05"
				add_field => {
				"event_type" => "HTTP Parser Attack"
					"[event][id]" => "GET:05"
					"[rsa][message][id1]" => "GET:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:12
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Parameter Tampering cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Parameter Tampering cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:12"
				add_field => {
				"event_type" => "Parameter Tampering"
				"action" => "blocked"
					"[event][id]" => "GET:12"
					"[rsa][message][id1]" => "GET:12"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:06
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Parameter Tampering cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Parameter Tampering cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:06"
				add_field => {
				"event_type" => "Parameter Tampering"
					"[event][id]" => "GET:06"
					"[rsa][message][id1]" => "GET:06"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:13
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=XML Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=XML Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:13"
				add_field => {
				"event_type" => "XML Parser Attack"
				"action" => "blocked"
					"[event][id]" => "GET:13"
					"[rsa][message][id1]" => "GET:13"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:07
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=XML Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=XML Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:07"
				add_field => {
				"event_type" => "XML Parser Attack"
					"[event][id]" => "GET:07"
					"[rsa][message][id1]" => "GET:07"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:14
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=N/A cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=N/A cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:14"
				add_field => {
				"event_type" => "N/A"
				"action" => "blocked"
					"[event][id]" => "GET:14"
					"[rsa][message][id1]" => "GET:14"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=N/A cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=N/A cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET"
				add_field => {
				"event_type" => "N/A"
					"[event][id]" => "GET"
					"[rsa][message][id1]" => "GET"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:15
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:15"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"action" => "blocked"
					"[event][id]" => "GET:15"
					"[rsa][message][id1]" => "GET:15"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:08
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:08"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "GET:08"
					"[rsa][message][id1]" => "GET:08"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:16
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:16"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "GET:16"
					"[rsa][message][id1]" => "GET:16"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:02
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-GET:02"
				add_field => {
					"[event][id]" => "GET:02"
					"[rsa][message][id1]" => "GET:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:26
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type>deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<domain>\<username> request=<webpage>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type}deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld22} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location c6a1=%{fld24} c6a1Label=device_address c6a2=%{fld25} c6a2Label=source_address c6a3=%{fld26} c6a3Label=destination_address c6a4=%{fld27} c6a4Label=ip_address_intelligence msg=%{fld28} suid=%{uid} suser=%{domain}\%{username} request=%{webpage}" }
				id => "message-GET:26"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "GET:26"
					"[rsa][message][id1]" => "GET:26"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GET:29
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type>deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<username> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> cs3Label=full_request cs3=<context> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type}deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld22} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location c6a1=%{fld24} c6a1Label=device_address c6a2=%{fld25} c6a2Label=source_address c6a3=%{fld26} c6a3Label=destination_address c6a4=%{fld27} c6a4Label=ip_address_intelligence msg=%{fld28} suid=%{uid} suser=%{username} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{fld29} cn3Label=%{fld30} request=%{webpage} cs3Label=full_request cs3=%{context}" }
				id => "message-GET:29"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "GET:29"
					"[rsa][message][id1]" => "GET:29"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:17
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type>deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> {app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<username>|app=<network_service>} { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> |request=<webpage> cs3Label=full_request cs3=<context>| request=<webpage> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^d]*)deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=blocked[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+(app=(?<network_service>[^\s]*)[\s]+cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<event_time_string>[^\s]*)[\s]+deviceExternalId=(?<fld22>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld24>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld25>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld26>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld27>[^\s]*)[\s]+c6a4Label=ip_address_intelligence[\s]+msg=(?<fld28>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)|app=(?<network_service>[^\s]*))[\s]+([\s]*cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld29>[^\s]*)[\s]+cn3Label=(?<fld30>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|request=(?<webpage>[^\s]*)[\s]+cs3Label=full_request[\s]+cs3=(?<context>[^\s]*)|[\s]*request=(?<webpage>[^\s]*)[\s]+)[\s]+$" }
				id => "message-GET:17"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "GET:17"
					"[rsa][message][id1]" => "GET:17"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:27
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=ip_address_intelligence msg=<fld26> suid=<fld28> suser=<domain>\<username> { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> | request=<webpage> } cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=(?<fld5>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld24>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld35>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld25>[^\s]*)[\s]+c6a4Label=ip_address_intelligence[\s]+msg=(?<fld26>[^\s]*)[\s]+suid=(?<fld28>[^\s]*)[\s]+suser=(?<domain>[^\\]*)\\(?<username>[^\s]*)[\s]+([\s]*cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld29>[^\s]*)[\s]+cn3Label=(?<fld30>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|[\s]*request=(?<webpage>[^\s]*)[\s]+)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-GET:27"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "GET:27"
					"[rsa][message][id1]" => "GET:27"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:24
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=ip_address_intelligence msg=<fld26> suid=<fld28> suser=<username> { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> | request=<webpage> } cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=(?<fld5>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld24>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld35>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld25>[^\s]*)[\s]+c6a4Label=ip_address_intelligence[\s]+msg=(?<fld26>[^\s]*)[\s]+suid=(?<fld28>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+([\s]*cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld29>[^\s]*)[\s]+cn3Label=(?<fld30>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|[\s]*request=(?<webpage>[^\s]*)[\s]+)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-GET:24"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "GET:24"
					"[rsa][message][id1]" => "GET:24"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE GET:28
		# line in RSA: <fld33><event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action>cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<domain>\<username> { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> | request=<webpage> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE GET:25
		# line in RSA: <fld33><event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action>cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=<fld28> msg=<msg> suid=<uid> suser=<username> { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> | request=<webpage> cs3Label=full_request cs3=<context>|request=<webpage> cs3Label=full_request|request=<webpage> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE GET:01
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type>deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type}deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage}" }
				id => "message-GET:01"
				add_field => {
					"[event][id]" => "GET:01"
					"[rsa][message][id1]" => "GET:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "POST" {
		# MESSAGE POST:09
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Buffer Overflow cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Buffer Overflow cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:09"
				add_field => {
				"event_type" => "Buffer Overflow"
				"action" => "blocked"
					"[event][id]" => "POST:09"
					"[rsa][message][id1]" => "POST:09"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:03
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Buffer Overflow cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Buffer Overflow cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:03"
				add_field => {
				"event_type" => "Buffer Overflow"
					"[event][id]" => "POST:03"
					"[rsa][message][id1]" => "POST:03"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:10
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Forceful Browsing cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Forceful Browsing cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:10"
				add_field => {
				"event_type" => "Forceful Browsing"
				"action" => "blocked"
					"[event][id]" => "POST:10"
					"[rsa][message][id1]" => "POST:10"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:04
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Forceful Browsing cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Forceful Browsing cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:04"
				add_field => {
				"event_type" => "Forceful Browsing"
					"[event][id]" => "POST:04"
					"[rsa][message][id1]" => "POST:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:11
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=HTTP Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=HTTP Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:11"
				add_field => {
				"event_type" => "HTTP Parser Attack"
				"action" => "blocked"
					"[event][id]" => "POST:11"
					"[rsa][message][id1]" => "POST:11"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:05
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=HTTP Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=HTTP Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:05"
				add_field => {
				"event_type" => "HTTP Parser Attack"
					"[event][id]" => "POST:05"
					"[rsa][message][id1]" => "POST:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:12
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Parameter Tampering cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Parameter Tampering cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:12"
				add_field => {
				"event_type" => "Parameter Tampering"
				"action" => "blocked"
					"[event][id]" => "POST:12"
					"[rsa][message][id1]" => "POST:12"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:06
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=Parameter Tampering cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=Parameter Tampering cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:06"
				add_field => {
				"event_type" => "Parameter Tampering"
					"[event][id]" => "POST:06"
					"[rsa][message][id1]" => "POST:06"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:13
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=XML Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=XML Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:13"
				add_field => {
				"event_type" => "XML Parser Attack"
				"action" => "blocked"
					"[event][id]" => "POST:13"
					"[rsa][message][id1]" => "POST:13"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:07
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=XML Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=XML Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:07"
				add_field => {
				"event_type" => "XML Parser Attack"
					"[event][id]" => "POST:07"
					"[rsa][message][id1]" => "POST:07"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:14
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=N/A cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=N/A cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:14"
				add_field => {
				"event_type" => "N/A"
				"action" => "blocked"
					"[event][id]" => "POST:14"
					"[rsa][message][id1]" => "POST:14"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=N/A cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=N/A cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST"
				add_field => {
				"event_type" => "N/A"
					"[event][id]" => "POST"
					"[rsa][message][id1]" => "POST"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:15
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:15"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"action" => "blocked"
					"[event][id]" => "POST:15"
					"[rsa][message][id1]" => "POST:15"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:08
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:08"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "POST:08"
					"[rsa][message][id1]" => "POST:08"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:16
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:16"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "POST:16"
					"[rsa][message][id1]" => "POST:16"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:02
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-POST:02"
				add_field => {
					"[event][id]" => "POST:02"
					"[rsa][message][id1]" => "POST:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:23
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld23> cs4=XML Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<domain>\<username> request=<webpage>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld23} cs4=XML Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location c6a1=%{fld24} c6a1Label=device_address c6a2=%{fld25} c6a2Label=source_address c6a3=%{fld26} c6a3Label=destination_address c6a4=%{fld27} c6a4Label=ip_address_intelligence msg=%{fld28} suid=%{uid} suser=%{domain}\%{username} request=%{webpage}" }
				id => "message-POST:23"
				add_field => {
				"event_type" => "XML Parser Attack"
				"action" => "blocked"
					"[event][id]" => "POST:23"
					"[rsa][message][id1]" => "POST:23"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:18
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld23> cs4=XML Parser Attack cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<username> request=<webpage>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld23} cs4=XML Parser Attack cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location c6a1=%{fld24} c6a1Label=device_address c6a2=%{fld25} c6a2Label=source_address c6a3=%{fld26} c6a3Label=destination_address c6a4=%{fld27} c6a4Label=ip_address_intelligence msg=%{fld28} suid=%{uid} suser=%{username} request=%{webpage}" }
				id => "message-POST:18"
				add_field => {
				"event_type" => "XML Parser Attack"
				"action" => "blocked"
					"[event][id]" => "POST:18"
					"[rsa][message][id1]" => "POST:18"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE POST:24
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type>deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<domain>\<username> {request=<webpage> cs3Label=full_request cs3=<context>|request=<webpage>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^d]*)deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=blocked[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<event_time_string>[^\s]*)[\s]+deviceExternalId=(?<fld22>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld24>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld25>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld26>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld27>[^\s]*)[\s]+c6a4Label=ip_address_intelligence[\s]+msg=(?<fld28>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<domain>[^\\]*)\\(?<username>[^\s]*)[\s]+(request=(?<webpage>[^\s]*)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)|request=(?<webpage>.*))$" }
				id => "message-POST:24"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "POST:24"
					"[rsa][message][id1]" => "POST:24"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE POST:26
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=<fld28> msg=<msg> suid=<uid> suser=<username> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld22} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location c6a1=%{fld24} c6a1Label=device_address c6a2=%{fld25} c6a2Label=source_address c6a3=%{fld26} c6a3Label=destination_address c6a4=%{fld27} c6a4Label=%{fld28} msg=%{msg} suid=%{uid} suser=%{username} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{fld29} cn3Label=%{fld30} request=%{webpage} cs3Label=full_request cs3=%{context}" }
				id => "message-POST:26"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "POST:26"
					"[rsa][message][id1]" => "POST:26"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE POST:17
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method>{app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=<fld28> msg=<msg> suid=<uid> suser=<username>|app=<network_service>} { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> | request=<webpage> cs3Label=full_request cs3=<context>|request=<webpage> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=blocked[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^aa]*)(app=(?<network_service>[^\s]*)[\s]+cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<event_time_string>[^\s]*)[\s]+deviceExternalId=(?<fld22>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld24>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld25>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld26>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld27>[^\s]*)[\s]+c6a4Label=(?<fld28>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)|app=(?<network_service>[^\s]*))[\s]+([\s]*cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld29>[^\s]*)[\s]+cn3Label=(?<fld30>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|[\s]*request=(?<webpage>[^\s]*)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)|request=(?<webpage>[^\s]*)[\s]+)$" }
				id => "message-POST:17"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "POST:17"
					"[rsa][message][id1]" => "POST:17"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE POST:25
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> {app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=ip_address_intelligence msg=<fld28> suid=<uid> suser=<domain>\<username>|app=<network_service>} {cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> | request=<webpage> cs3Label=full_request cs3=<context>|request=<webpage> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+(app=(?<network_service>[^\s]*)[\s]+cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<event_time_string>[^\s]*)[\s]+deviceExternalId=(?<fld22>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld24>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld25>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld26>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld27>[^\s]*)[\s]+c6a4Label=ip_address_intelligence[\s]+msg=(?<fld28>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<domain>[^\\]*)\\(?<username>[^\s]*)|app=(?<network_service>[^\s]*))[\s]+(cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld29>[^\s]*)[\s]+cn3Label=(?<fld30>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|[\s]*request=(?<webpage>[^\s]*)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)|request=(?<webpage>[^\s]*)[\s]+)$" }
				id => "message-POST:25"
				add_field => {
					"[event][id]" => "POST:25"
					"[rsa][message][id1]" => "POST:25"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE POST:27
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld22> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld24> c6a1Label=device_address c6a2=<fld25> c6a2Label=source_address c6a3=<fld26> c6a3Label=destination_address c6a4=<fld27> c6a4Label=<fld28> msg=<msg> suid=<uid> suser=<username> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld29> cn3Label=<fld30> request=<webpage> cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld22} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location c6a1=%{fld24} c6a1Label=device_address c6a2=%{fld25} c6a2Label=source_address c6a3=%{fld26} c6a3Label=destination_address c6a4=%{fld27} c6a4Label=%{fld28} msg=%{msg} suid=%{uid} suser=%{username} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{fld29} cn3Label=%{fld30} request=%{webpage} cs3Label=full_request cs3=%{context}" }
				id => "message-POST:27"
				add_field => {
					"[event][id]" => "POST:27"
					"[rsa][message][id1]" => "POST:27"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE POST:01
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service>  { cs5=<stransaddr> cs5Label=<fld8> rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld9> c6a1Label=<fld20> c6a2=<fld11> c6a2Label=<fld12> c6a3=<fld13> c6a3Label=<fld14> c6a4=<fld15> c6a4Label=<fld16> msg=<msg> suid=<fld17> suser=<username> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld18> cn3Label=<fld19> request=<webpage> |cs5=<stransaddr> cs5Label=<fld8> rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld9> c6a1Label=<fld21> c6a2=<fld11> c6a2Label=<fld12> c6a3=<fld13> c6a3Label=<fld14> c6a4=<fld15> c6a4Label=<fld16> msg=<msg> suid=<uid> suser=<username> request=<webpage> cs3Label=full_request cs3=<context>| cs5=<stransaddr> cs5Label=<fld8> rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location c6a1=<fld9> c6a1Label=<fld20> c6a2=<fld11> c6a2Label=<fld12> c6a3=<fld13> c6a3Label=<fld14> c6a4=<fld15> c6a4Label=<fld16> msg=<msg> suid=<uid> suser=<username> request=<webpage>| request=<webpage> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+([\s]*cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=(?<fld8>[^\s]*)[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld9>[^\s]*)[\s]+c6a1Label=(?<fld20>[^\s]*)[\s]+c6a2=(?<fld11>[^\s]*)[\s]+c6a2Label=(?<fld12>[^\s]*)[\s]+c6a3=(?<fld13>[^\s]*)[\s]+c6a3Label=(?<fld14>[^\s]*)[\s]+c6a4=(?<fld15>[^\s]*)[\s]+c6a4Label=(?<fld16>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<fld17>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld18>[^\s]*)[\s]+cn3Label=(?<fld19>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=(?<fld8>[^\s]*)[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld9>[^\s]*)[\s]+c6a1Label=(?<fld21>[^\s]*)[\s]+c6a2=(?<fld11>[^\s]*)[\s]+c6a2Label=(?<fld12>[^\s]*)[\s]+c6a3=(?<fld13>[^\s]*)[\s]+c6a3Label=(?<fld14>[^\s]*)[\s]+c6a4=(?<fld15>[^\s]*)[\s]+c6a4Label=(?<fld16>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)|[\s]*cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=(?<fld8>[^\s]*)[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=geo_location[\s]+c6a1=(?<fld9>[^\s]*)[\s]+c6a1Label=(?<fld20>[^\s]*)[\s]+c6a2=(?<fld11>[^\s]*)[\s]+c6a2Label=(?<fld12>[^\s]*)[\s]+c6a3=(?<fld13>[^\s]*)[\s]+c6a3Label=(?<fld14>[^\s]*)[\s]+c6a4=(?<fld15>[^\s]*)[\s]+c6a4Label=(?<fld16>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+request=(?<webpage>.*)|[\s]*request=(?<webpage>[^\s]*)[\s]+)$" }
				id => "message-POST:01"
				add_field => {
					"[event][id]" => "POST:01"
					"[rsa][message][id1]" => "POST:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "OPTIONS" {
		# MESSAGE OPTIONS:02
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-OPTIONS:02"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "OPTIONS:02"
					"[rsa][message][id1]" => "OPTIONS:02"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE OPTIONS
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-OPTIONS"
				add_field => {
					"[event][id]" => "OPTIONS"
					"[rsa][message][id1]" => "OPTIONS"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE OPTIONS:03
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=blocked cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=blocked cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-OPTIONS:03"
				add_field => {
				"action" => "blocked"
					"[event][id]" => "OPTIONS:03"
					"[rsa][message][id1]" => "OPTIONS:03"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE OPTIONS:01
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> request=<webpage> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=geo_location cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} request=%{webpage} cs5=%{stransaddr} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=geo_location cs3Label=full_request cs3=%{context}" }
				id => "message-OPTIONS:01"
				add_field => {
					"[event][id]" => "OPTIONS:01"
					"[rsa][message][id1]" => "OPTIONS:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE OPTIONS:05
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=<fld24> c6a2=<fld25> c6a2Label=<fld26> c6a3=<fld27> c6a3Label=<fld28> c6a4=<fld28> c6a4Label=<fld29> msg=<msg> suid=<fld30> suser=<domain>\<username> { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld31> cn3Label=<fld32> request=<webpage> | request=<webpage> } cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=(?<fld24>[^\s]*)[\s]+c6a2=(?<fld25>[^\s]*)[\s]+c6a2Label=(?<fld26>[^\s]*)[\s]+c6a3=(?<fld27>[^\s]*)[\s]+c6a3Label=(?<fld28>[^\s]*)[\s]+c6a4=(?<fld28>[^\s]*)[\s]+c6a4Label=(?<fld29>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<fld30>[^\s]*)[\s]+suser=(?<domain>[^\\]*)\\(?<username>[^\s]*)[\s]+([\s]*cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld31>[^\s]*)[\s]+cn3Label=(?<fld32>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|[\s]*request=(?<webpage>[^\s]*)[\s]+)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-OPTIONS:05"
				add_field => {
					"[event][id]" => "OPTIONS:05"
					"[rsa][message][id1]" => "OPTIONS:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE OPTIONS:04
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<stransaddr> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=<fld24> c6a2=<fld25> c6a2Label=<fld26> c6a3=<fld27> c6a3Label=<fld28> c6a4=<fld28> c6a4Label=<fld29> msg=<msg> suid=<fld30> suser=<username> { cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<fld31> cn3Label=<fld32> request=<webpage> | request=<webpage> } cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=(?<stransaddr>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=(?<fld24>[^\s]*)[\s]+c6a2=(?<fld25>[^\s]*)[\s]+c6a2Label=(?<fld26>[^\s]*)[\s]+c6a3=(?<fld27>[^\s]*)[\s]+c6a3Label=(?<fld28>[^\s]*)[\s]+c6a4=(?<fld28>[^\s]*)[\s]+c6a4Label=(?<fld29>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<fld30>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+([\s]*cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>[^\s]*)[\s]+cn3=(?<fld31>[^\s]*)[\s]+cn3Label=(?<fld32>[^\s]*)[\s]+request=(?<webpage>[^\s]*)[\s]+|[\s]*request=(?<webpage>[^\s]*)[\s]+)[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-OPTIONS:04"
				add_field => {
					"[event][id]" => "OPTIONS:04"
					"[rsa][message][id1]" => "OPTIONS:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> {cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> request=<webpage>|cs6Label=<fld22>} cs3Label=full_request {cs3=<context> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string>|cs3=<context>}
	else if [logstash][msgparser][id] == "msgParserId42" {
		grok {
			match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=N/A[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+(cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld24>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld35>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld25>[^\s]*)[\s]+c6a4Label=(?<fld26>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+request=(?<webpage>[^\s]*)|cs6Label=(?<fld22>[^\s]*))[\s]+cs3Label=full_request[\s]+(cs3=(?<context>[^\s]*)[\s]+cn2=(?<dclass_counter2>[^\s]*)[\s]+cn2Label=(?<dclass_counter2_string>.*)|cs3=(?<context>.*))$" }
			id => "msgParserId42"
			add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "TRACE" {
		# MESSAGE TRACE
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} cs3Label=full_request cs3=%{context}" }
				id => "message-TRACE"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "TRACE"
					"[rsa][message][id1]" => "TRACE"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE TRACE:01
		# line in RSA: dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> request=<webpage> cs6Label=<fld22> cs3Label=full_request cs3=<context> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<dclass_counter3> cn3Label=<dclass_counter3_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} c6a1=%{fld23} c6a1Label=device_address c6a2=%{fld24} c6a2Label=source_address c6a3=%{fld35} c6a3Label=destination_address c6a4=%{fld25} c6a4Label=%{fld26} msg=%{msg} suid=%{uid} suser=%{username} request=%{webpage} cs6Label=%{fld22} cs3Label=full_request cs3=%{context} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{dclass_counter3} cn3Label=%{dclass_counter3_string}" }
				id => "message-TRACE:01"
				add_field => {
				"info" => "%{hfld16}"
				"sigid" => "%{info}"
				"event_description" => "%{hfld17}"
				"signame" => "%{event_description}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
					"[event][id]" => "TRACE:01"
					"[rsa][message][id1]" => "TRACE:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PUT" {
		# MESSAGE PUT
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<fld50> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> {cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld26> c6a4Label=<fld25> msg=<msg> suid=<uid> suser=<username> request=<webpage>|cs6Label=<fld22>} cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<fld50>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=N/A[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+(cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld24>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld35>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld26>[^\s]*)[\s]+c6a4Label=(?<fld25>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+request=(?<webpage>[^\s]*)|cs6Label=(?<fld22>[^\s]*))[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-PUT"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"action" => "%{fld50}"
					"[event][id]" => "PUT"
					"[rsa][message][id1]" => "PUT"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE PUT:02
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=ip_address_intelligence msg=<fld26> suid=<fld28> suser=<domain>\<username> request=<webpage> cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} c6a1=%{fld23} c6a1Label=device_address c6a2=%{fld24} c6a2Label=source_address c6a3=%{fld35} c6a3Label=destination_address c6a4=%{fld25} c6a4Label=ip_address_intelligence msg=%{fld26} suid=%{fld28} suser=%{domain}\%{username} request=%{webpage} cs3Label=full_request cs3=%{context}" }
				id => "message-PUT:02"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "PUT:02"
					"[rsa][message][id1]" => "PUT:02"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE PUT:01
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=ip_address_intelligence msg=<fld26> suid=<fld28> suser=<username> request=<webpage> cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} c6a1=%{fld23} c6a1Label=device_address c6a2=%{fld24} c6a2Label=source_address c6a3=%{fld35} c6a3Label=destination_address c6a4=%{fld25} c6a4Label=ip_address_intelligence msg=%{fld26} suid=%{fld28} suser=%{username} request=%{webpage} cs3Label=full_request cs3=%{context}" }
				id => "message-PUT:01"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "PUT:01"
					"[rsa][message][id1]" => "PUT:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> cs3Label=full_request cs3=<context>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=N/A cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} cs3Label=full_request cs3=%{context}" }
			id => "msgParserId43"
			add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "PROPFIND" {
		# MESSAGE PROPFIND
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=N/A cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> {cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> request=<webpage>|cs6Label=<fld22>} cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<action>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=N/A[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+(cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld24>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld35>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld25>[^\s]*)[\s]+c6a4Label=(?<fld26>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+request=(?<webpage>[^\s]*)|cs6Label=(?<fld22>[^\s]*))[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-PROPFIND"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "PROPFIND"
					"[rsa][message][id1]" => "PROPFIND"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE PROPFIND:01
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<dclass_counter3> cn3Label=<dclass_counter3_string> request=<webpage> cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{month} %{date} %{year} %{time} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} c6a1=%{fld23} c6a1Label=device_address c6a2=%{fld24} c6a2Label=source_address c6a3=%{fld35} c6a3Label=destination_address c6a4=%{fld25} c6a4Label=%{fld26} msg=%{msg} suid=%{uid} suser=%{username} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{dclass_counter3} cn3Label=%{dclass_counter3_string} request=%{webpage} cs3Label=full_request cs3=%{context}" }
				id => "message-PROPFIND:01"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
					"[event][id]" => "PROPFIND:01"
					"[rsa][message][id1]" => "PROPFIND:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE PROPFIND:02
		# line in RSA: dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> request=<webpage> cs3Label=full_request cs3=<context> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<dclass_counter3> cn3Label=<dclass_counter3_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} c6a1=%{fld23} c6a1Label=device_address c6a2=%{fld24} c6a2Label=source_address c6a3=%{fld35} c6a3Label=destination_address c6a4=%{fld25} c6a4Label=%{fld26} msg=%{msg} suid=%{uid} suser=%{username} request=%{webpage} cs3Label=full_request cs3=%{context} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{dclass_counter3} cn3Label=%{dclass_counter3_string}" }
				id => "message-PROPFIND:02"
				add_field => {
				"info" => "%{hfld16}"
				"sigid" => "%{info}"
				"event_description" => "%{hfld17}"
				"signame" => "%{event_description}"
				"version" => "%{hversion}"
				"hostname" => "%{hhost}"
					"[event][id]" => "PROPFIND:02"
					"[rsa][message][id1]" => "PROPFIND:02"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HEAD" {
		# MESSAGE HEAD
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<fld50> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<month> <date> <year> <time> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> {cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> request=<webpage>|cs6Label=<fld22>} cs3Label=full_request cs3=<context>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld33>[^\s]*)[\s]+(?<event_source>[^:]*):(?<fld1>[^:]*):(?<fld2>[^\|]*)\|(?<fld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<version>[^\|]*)\|(?<info>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|dvchost=(?<hostname>[^\s]*)[\s]+dvc=(?<hostip>[^\s]*)[\s]+cs1=(?<policyname>[^\s]*)[\s]+cs1Label=policy_name[\s]+cs2=(?<obj_name>[^\s]*)[\s]+cs2Label=(?<obj_type>[^\s]*)[\s]+deviceCustomDate1=(?<fld6>[^\s]*)[\s]+deviceCustomDate1Label=policy_apply_date[\s]+externalId=(?<operation_id>[^\s]*)[\s]+act=(?<fld50>[^\s]*)[\s]+cn1=(?<resultcode>[^\s]*)[\s]+cn1Label=response_code[\s]+src=(?<saddr>[^\s]*)[\s]+spt=(?<sport>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dpt=(?<dport>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+app=(?<network_service>[^\s]*)[\s]+cs5=(?<fld5>[^\s]*)[\s]+cs5Label=x_forwarded_for_header_value[\s]+rt=(?<month>[^\s]*)[\s]+(?<date>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+deviceExternalId=(?<fld10>[^\s]*)[\s]+cs4=(?<event_type>[^\s]*)[\s]+cs4Label=attack_type[\s]+cs6=(?<location_country>[^\s]*)[\s]+(cs6Label=(?<fld22>[^\s]*)[\s]+c6a1=(?<fld23>[^\s]*)[\s]+c6a1Label=device_address[\s]+c6a2=(?<fld24>[^\s]*)[\s]+c6a2Label=source_address[\s]+c6a3=(?<fld35>[^\s]*)[\s]+c6a3Label=destination_address[\s]+c6a4=(?<fld25>[^\s]*)[\s]+c6a4Label=(?<fld26>[^\s]*)[\s]+msg=(?<msg>[^\s]*)[\s]+suid=(?<uid>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+request=(?<webpage>[^\s]*)|cs6Label=(?<fld22>[^\s]*))[\s]+cs3Label=full_request[\s]+cs3=(?<context>.*)$" }
				id => "message-HEAD"
				add_field => {
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"action" => "%{fld50}"
					"[event][id]" => "HEAD"
					"[rsa][message][id1]" => "HEAD"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE HEAD:01
		# line in RSA:  dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date externalId=<operation_id> act=<action> cn1=<resultcode> cn1Label=response_code src=<saddr> spt=<sport> dst=<daddr> dpt=<dport> requestMethod=<web_method> app=<network_service> cs5=<fld5> cs5Label=x_forwarded_for_header_value rt=<event_time_string> deviceExternalId=<fld10> cs4=<event_type> cs4Label=attack_type cs6=<location_country> cs6Label=<fld22> c6a1=<fld23> c6a1Label=device_address c6a2=<fld24> c6a2Label=source_address c6a3=<fld35> c6a3Label=destination_address c6a4=<fld25> c6a4Label=<fld26> msg=<msg> suid=<uid> suser=<username> request=<webpage> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn3=<dclass_counter3> cn3Label=<dclass_counter3_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date externalId=%{operation_id} act=%{action} cn1=%{resultcode} cn1Label=response_code src=%{saddr} spt=%{sport} dst=%{daddr} dpt=%{dport} requestMethod=%{web_method} app=%{network_service} cs5=%{fld5} cs5Label=x_forwarded_for_header_value rt=%{event_time_string} deviceExternalId=%{fld10} cs4=%{event_type} cs4Label=attack_type cs6=%{location_country} cs6Label=%{fld22} c6a1=%{fld23} c6a1Label=device_address c6a2=%{fld24} c6a2Label=source_address c6a3=%{fld35} c6a3Label=destination_address c6a4=%{fld25} c6a4Label=%{fld26} msg=%{msg} suid=%{uid} suser=%{username} request=%{webpage} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn3=%{dclass_counter3} cn3Label=%{dclass_counter3_string}" }
				id => "message-HEAD:01"
				add_field => {
				"info" => "%{hfld16}"
				"sigid" => "%{info}"
				"event_description" => "%{hfld17}"
				"signame" => "%{event_description}"
				"version" => "%{hversion}"
					"[event][id]" => "HEAD:01"
					"[rsa][message][id1]" => "HEAD:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{event_time_string}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "attack" {
		# MESSAGE attack
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date act=<action> cn3=<operation_id> cn3Label=attack_id cs4=<event_state> cs4Label=attack_status request=<webpage> src=<saddr> cs6=<location_country> cs6Label=geo_location cs5=<trigger_val> cs5Label=detection_mode rt=<month> <date> <year> <time> cn1=<dclass_counter1> cn1Label=<dclass_counter1_string> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date act=%{action} cn3=%{operation_id} cn3Label=attack_id cs4=%{event_state} cs4Label=attack_status request=%{webpage} src=%{saddr} cs6=%{location_country} cs6Label=geo_location cs5=%{trigger_val} cs5Label=detection_mode rt=%{month} %{date} %{year} %{time} cn1=%{dclass_counter1} cn1Label=%{dclass_counter1_string} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string}" }
				id => "message-attack"
				add_field => {
				"trigger_desc" => "This is the attack detection mode being used"
				"signame" => "%{info}"
					"[event][id]" => "attack"
					"[rsa][message][id1]" => "attack"
					"[event][categoryid]" => "1002000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE attack:01
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date act=<action> cn3=<operation_id> cn3Label=attack_id cs4=<event_state> cs4Label=attack_status src=<saddr> cs6=<location_country> cs6Label=geo_location rt=<month> <date> <year> <time> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn4=<dclass_counter3> cn4Label=<dclass_counter3_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date act=%{action} cn3=%{operation_id} cn3Label=attack_id cs4=%{event_state} cs4Label=attack_status src=%{saddr} cs6=%{location_country} cs6Label=geo_location rt=%{month} %{date} %{year} %{time} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn4=%{dclass_counter3} cn4Label=%{dclass_counter3_string}" }
				id => "message-attack:01"
				add_field => {
					"[event][id]" => "attack:01"
					"[rsa][message][id1]" => "attack:01"
					"[event][categoryid]" => "1001030000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE attack:02
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date act=<action> cn3=<operation_id> cn3Label=attack_id cs4=<event_state> cs4Label=attack_status src=<saddr>  cs6=<location_country> cs6Label=geo_location cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> rt=<month> <date> <year> <time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date act=%{action} cn3=%{operation_id} cn3Label=attack_id cs4=%{event_state} cs4Label=attack_status src=%{saddr}  cs6=%{location_country} cs6Label=geo_location cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} rt=%{month} %{date} %{year} %{time}" }
				id => "message-attack:02"
				add_field => {
					"[event][id]" => "attack:02"
					"[rsa][message][id1]" => "attack:02"
					"[event][categoryid]" => "1001000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE attack:03
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date act=<action> cn3=<operation_id> cn3Label=attack_id cs4=<event_state> cs4Label=attack_status src=<saddr> cs6=<location_country> cs6Label=geo_location c6a1= c6a1Label=device_address c6a2= c6a2Label=source_address rt=<month> <date> <year> <time> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> flexNumber1=<dclass_counter3> flexNumber1Label=<dclass_counter3_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date act=%{action} cn3=%{operation_id} cn3Label=attack_id cs4=%{event_state} cs4Label=attack_status src=%{saddr} cs6=%{location_country} cs6Label=geo_location c6a1= c6a1Label=device_address c6a2= c6a2Label=source_address rt=%{month} %{date} %{year} %{time} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} flexNumber1=%{dclass_counter3} flexNumber1Label=%{dclass_counter3_string}" }
				id => "message-attack:03"
				add_field => {
					"[event][id]" => "attack:03"
					"[rsa][message][id1]" => "attack:03"
					"[event][categoryid]" => "1001000000"
					"[logstash][fullDateTimeString]" => "%{month} %{date} %{year} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
		# MESSAGE attack:04
		# line in RSA: <fld33> <event_source>:<fld1>:<fld2>|<fld3>|<fld4>|<version>|<info>|<event_description>|<severity>|dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date act=<action> cn3=<operation_id> cn3Label=attack_id cs3=<context> cs3Label=attack_status cn4=<dclass_counter3> cn4Label=<dclass_counter3_string> cn5=<fld7> cn5label=<fld8> c6a1=<fld9> c6a1Label=<fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld33} %{event_source}:%{fld1}:%{fld2}|%{fld3}|%{fld4}|%{version}|%{info}|%{event_description}|%{severity}|dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date act=%{action} cn3=%{operation_id} cn3Label=attack_id cs3=%{context} cs3Label=attack_status cn4=%{dclass_counter3} cn4Label=%{dclass_counter3_string} cn5=%{fld7} cn5label=%{fld8} c6a1=%{fld9} c6a1Label=%{fld10}" }
				id => "message-attack:04"
				add_field => {
					"[event][id]" => "attack:04"
					"[rsa][message][id1]" => "attack:04"
					"[event][categoryid]" => "1001000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE attack:05
		# line in RSA: dvchost=<hostname> dvc=<hostip> cs1=<policyname> cs1Label=policy_name cs2=<obj_name> cs2Label=<obj_type> deviceCustomDate1=<fld6> deviceCustomDate1Label=policy_apply_date act=<action> cn3=<operation_id> cn3Label=attack_id cs3=<context> cs3Label=attack_status cn4=<dclass_counter3> cn4Label=<dclass_counter3_string> cn5=<fld7> cn5Label=<fld8> c6a1=<fld9> c6a1Label=<fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dvchost=%{hostname} dvc=%{hostip} cs1=%{policyname} cs1Label=policy_name cs2=%{obj_name} cs2Label=%{obj_type} deviceCustomDate1=%{fld6} deviceCustomDate1Label=policy_apply_date act=%{action} cn3=%{operation_id} cn3Label=attack_id cs3=%{context} cs3Label=attack_status cn4=%{dclass_counter3} cn4Label=%{dclass_counter3_string} cn5=%{fld7} cn5Label=%{fld8} c6a1=%{fld9} c6a1Label=%{fld10}" }
				id => "message-attack:05"
				add_field => {
				"info" => "%{hfld16}"
				"event_description" => "%{hfld17}"
				"version" => "%{hversion}"
					"[event][id]" => "attack:05"
					"[rsa][message][id1]" => "attack:05"
					"[event][categoryid]" => "1001000000"
					"[logstash][fullDateTimeString]" => "%{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA: <fld33> <event_source>:"<fld11>"|"<policyname>"|"<resultcode>"|"<operation_id>"|"<web_method>"|"<network_service>"|"<url>"|"<web_query>"|"<saddr>"|"<info>"|"<hostname>"|"<hostip>"|"<fld6>"|"<fld12>"|"blocked"|"<sigid>"|"<signame>"|"<year>-<date>-<month> <time>"|"<severity>"|"<event_type>"|"<sport>"|"<dport>"|"<daddr>"|"<location_country>"|"<fld13>"|"<event_description>"|"<context>"
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{fld33} %{event_source}:\"%{fld11}\"|\"%{policyname}\"|\"%{resultcode}\"|\"%{operation_id}\"|\"%{web_method}\"|\"%{network_service}\"|\"%{url}\"|\"%{web_query}\"|\"%{saddr}\"|\"%{info}\"|\"%{hostname}\"|\"%{hostip}\"|\"%{fld6}\"|\"%{fld12}\"|\"blocked\"|\"%{sigid}\"|\"%{signame}\"|\"%{year}-%{date}-%{month} %{time}\"|\"%{severity}\"|\"%{event_type}\"|\"%{sport}\"|\"%{dport}\"|\"%{daddr}\"|\"%{location_country}\"|\"%{fld13}\"|\"%{event_description}\"|\"%{context}\"" }
			id => "msgParserId59"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"action" => "blocked"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId60
	# line in RSA: <fld33> <event_source>:"<fld11>"|"<policyname>"|"<resultcode>"|"<operation_id>"|"<web_method>"|"<network_service>"|"<url>"|"<web_query>"|"<saddr>"|"<info>"|"<hostname>"|"<hostip>"|"<fld6>"|"<fld12>"|"alerted"|"<sigid>"|"<signame>"|"<year>-<date>-<month> <time>"|"<severity>"|"<event_type>"|"<sport>"|"<dport>"|"<daddr>"|"<location_country>"|"<fld13>"|"<event_description>"|"<context>"
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "%{fld33} %{event_source}:\"%{fld11}\"|\"%{policyname}\"|\"%{resultcode}\"|\"%{operation_id}\"|\"%{web_method}\"|\"%{network_service}\"|\"%{url}\"|\"%{web_query}\"|\"%{saddr}\"|\"%{info}\"|\"%{hostname}\"|\"%{hostip}\"|\"%{fld6}\"|\"%{fld12}\"|\"alerted\"|\"%{sigid}\"|\"%{signame}\"|\"%{year}-%{date}-%{month} %{time}\"|\"%{severity}\"|\"%{event_type}\"|\"%{sport}\"|\"%{dport}\"|\"%{daddr}\"|\"%{location_country}\"|\"%{fld13}\"|\"%{event_description}\"|\"%{context}\"" }
			id => "msgParserId60"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"action" => "alerted"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId61
	# line in RSA: <fld33> <event_source>:"<fld11>"|"<policyname>"|"<resultcode>"|"<operation_id>"|"<web_method>"|"<network_service>"|"<url>"|"<web_query>"|"<saddr>"|"<info>"|"<hostname>"|"<hostip>"|"<fld6>"|"<fld12>"|"passed"|"<sigid>"|"<signame>"|"<year>-<date>-<month> <time>"|"<severity>"|"<event_type>"|"<sport>"|"<dport>"|"<daddr>"|"<location_country>"|"<fld13>"|"<event_description>"|"<context>"
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{fld33} %{event_source}:\"%{fld11}\"|\"%{policyname}\"|\"%{resultcode}\"|\"%{operation_id}\"|\"%{web_method}\"|\"%{network_service}\"|\"%{url}\"|\"%{web_query}\"|\"%{saddr}\"|\"%{info}\"|\"%{hostname}\"|\"%{hostip}\"|\"%{fld6}\"|\"%{fld12}\"|\"passed\"|\"%{sigid}\"|\"%{signame}\"|\"%{year}-%{date}-%{month} %{time}\"|\"%{severity}\"|\"%{event_type}\"|\"%{sport}\"|\"%{dport}\"|\"%{daddr}\"|\"%{location_country}\"|\"%{fld13}\"|\"%{event_description}\"|\"%{context}\"" }
			id => "msgParserId61"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"action" => "passed"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId62
	# line in RSA: act=<action> app=<network_service> cn1=<resultcode> cn2=<dclass_counter2> cn2Label=<dclass_counter2_string> cn4=<dclass_counter3> cn4Label=<dclass_counter3_string> cs1=<policyname> cs2=<obj_name> cs2Label=<obj_type> cs3=<context> cs4=<event_type> cs6=<location_country> deviceCustomDate1=<fld6> deviceTranslatedAddress=<hostip> dpt=<dport> dst=<daddr> dvc=<hostip> dvchost=<hostname> externalId=<operation_id> flexNumber1=<dclass_counter3> flexNumber1Label=<dclass_counter3_string> request=<webpage> requestMethod=<web_method> rt=<event_time_string> spt=<sport> src=<saddr> suid=<fld26> suser=<username>
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "act=%{action} app=%{network_service} cn1=%{resultcode} cn2=%{dclass_counter2} cn2Label=%{dclass_counter2_string} cn4=%{dclass_counter3} cn4Label=%{dclass_counter3_string} cs1=%{policyname} cs2=%{obj_name} cs2Label=%{obj_type} cs3=%{context} cs4=%{event_type} cs6=%{location_country} deviceCustomDate1=%{fld6} deviceTranslatedAddress=%{hostip} dpt=%{dport} dst=%{daddr} dvc=%{hostip} dvchost=%{hostname} externalId=%{operation_id} flexNumber1=%{dclass_counter3} flexNumber1Label=%{dclass_counter3_string} request=%{webpage} requestMethod=%{web_method} rt=%{event_time_string} spt=%{sport} src=%{saddr} suid=%{fld26} suser=%{username}" }
			id => "msgParserId62"
			add_field => {
				"vid" => "%{web_method}"
				"sigid" => "%{info}"
				"signame" => "%{event_description}"
				"[logstash][fullDateTimeString]" => "%{event_time_string}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:mm:ss" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1801020000" => "Network.Connections.Successful"
			"1607000000" => "System.Unusual Activity"
		}
		fallback => "Other.Default"
		override => true
	}
}
filter {
	translate {
		field => "[action]"
		destination => "[event_cat]"
		dictionary => {
			"blocked" => "1607000000"
			"passed" => "1801020000"
		}
		fallback => "1901000000"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-bigipasmmsg.json"
#			template_name => "bigipasm_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
