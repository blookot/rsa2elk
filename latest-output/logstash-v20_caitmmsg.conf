# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "caitm"
			"[observer][name]" => "CA Integrated Threat Management"
			"[observer][type]" => "Anti Virus"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %CAITM The <messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0002
	# line in RSA: %CAITM [time <hdate> <htime>: ID <hid>: machine <hfld3>: response <hfld4> <hfld5>] The <messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0004
	# line in RSA: %CAITM [time <hdate> <htime>: ID <hid>: machine <hfld3>: response <hfld4> <hfld5>] <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CAITM[\s]+\[time[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^:]*):[\s]+ID[\s]+(?<hid>[^:]*):[\s]+machine[\s]+(?<hfld3>[^:]*):[\s]+response[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %CAITM [time <hdate> <htime>: ID <hid>: machine <hfld3>: response <hfld4> <hfld5>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CAITM[\s]+\[time[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^:]*):[\s]+ID[\s]+(?<hid>[^:]*):[\s]+machine[\s]+(?<hfld3>[^:]*):[\s]+response[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %CAITM <messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_caitmmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
			id => "msgParserId0"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: Admin Server has stopped.
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "Admin Server has stopped." }
			id => "msgParserId1"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "Admin Server has stopped"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "automatic" {
		# MESSAGE 000003
		# line in RSA: automatic download has run <fld1> times unsuccessfully. The next attempt will occur at the regularly scheduled download time.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "automatic download has run %{fld1} times unsuccessfully. The next attempt will occur at the regularly scheduled download time." }
				id => "message-000003"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "SignatureDB"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "automatic download has run unsuccessfully"
					"[event][id]" => "000003"
					"[rsa][message][id1]" => "000003"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000004
		# line in RSA: automatic signature download was unable to successfully download all the signature files. Will try again in <fld1> minutes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "automatic signature download was unable to successfully download all the signature files. Will try again in %{fld1} minutes" }
				id => "message-000004"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "SignatureDB"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "unable to successfully download all the signature files"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA:  Cannot report scheduled scan job result to the original owner (). The result was purged.
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "Cannot report scheduled scan job result to the original owner (). The result was purged." }
			id => "msgParserId4"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "Cannot report"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: Direction of Realtime Monitor has been changed from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "Direction of Realtime Monitor has been changed from %{change_old} to %{change_new}" }
			id => "msgParserId5"
			add_field => {
				"event_description" => "Realtime Monitor has been changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Failed" {
		# MESSAGE 000009
		# line in RSA:  Failed to open the scan log database.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to open the scan log database." }
				id => "message-000009"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "Open database failed"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000010
		# line in RSA: Failed updating <agent> to version <component_version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed updating %{agent} to version %{component_version}" }
				id => "message-000010"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "Failed updating software"
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000011
		# line in RSA: Failed to initialize InoScan.dll
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to initialize InoScan.dll" }
				id => "message-000011"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "Failed to initialize InoScan.dl"
					"[event][id]" => "000011"
					"[rsa][message][id1]" => "000011"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Failed
		# line in RSA: Failed to scan <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to scan %{info}" }
				id => "message-Failed"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "Failed to Scan"
					"[event][id]" => "Failed"
					"[rsa][message][id1]" => "Failed"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:  File: <filename> Machine: <hostname>, User: <username>. File Status: <info>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "File: %{filename} Machine: %{hostname}, User: %{username}. File Status: %{info}" }
			id => "msgParserId10"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: following database integrity error was fixed:<info>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "following database integrity error was fixed:%{info}" }
			id => "msgParserId11"
			add_field => {
				"event_description" => "integrity error was fixed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.ACF" {
		# MESSAGE 000014
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000014"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000015
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000015"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.ALF" {
		# MESSAGE 000016
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000016"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000016"
					"[rsa][message][id1]" => "000016"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000017
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000017"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000017"
					"[rsa][message][id1]" => "000017"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BBT" {
		# MESSAGE 000018
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000018"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000019
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000019"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000019"
					"[rsa][message][id1]" => "000019"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BEX" {
		# MESSAGE 000020
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000020"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000020"
					"[rsa][message][id1]" => "000020"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000021
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000021"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000021"
					"[rsa][message][id1]" => "000021"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BFA" {
		# MESSAGE 000022
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000022"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000023
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000023"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000023"
					"[rsa][message][id1]" => "000023"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BFB" {
		# MESSAGE 000024
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000024"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000025
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000025"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BFG" {
		# MESSAGE 000026
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000026"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000026"
					"[rsa][message][id1]" => "000026"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000027
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000027"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000027"
					"[rsa][message][id1]" => "000027"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BLY" {
		# MESSAGE 000028
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000028"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000028"
					"[rsa][message][id1]" => "000028"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000029
		# line in RSA:  <virusname> was detected in <filename>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}." }
				id => "message-000029"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Phishbank.BMF" {
		# MESSAGE 000030
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000030"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000030"
					"[rsa][message][id1]" => "000030"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000031
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000031"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000031"
					"[rsa][message][id1]" => "000031"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Scoati" {
		# MESSAGE 000033
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000033"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000033"
					"[rsa][message][id1]" => "000033"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000034
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000034"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000034"
					"[rsa][message][id1]" => "000034"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HTML/Worfo" {
		# MESSAGE 000035
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000035"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000035"
					"[rsa][message][id1]" => "000035"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000036
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000036"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000036"
					"[rsa][message][id1]" => "000036"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
			id => "msgParserId15"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: InoculateIT signature is out of date, <result>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "InoculateIT signature is out of date, %{result}" }
			id => "msgParserId16"
			add_field => {
				"event_description" => "InoculateIT signature is out of date"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ITM" {
		# MESSAGE 000044
		# line in RSA: ITM Server has started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ITM Server has started." }
				id => "message-000044"
				add_field => {
				"event_description" => "ITM Server started"
					"[event][id]" => "000044"
					"[rsa][message][id1]" => "000044"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000045
		# line in RSA: ITM Server has stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ITM Server has stopped." }
				id => "message-000045"
				add_field => {
				"event_description" => "ITM Server stopped"
					"[event][id]" => "000045"
					"[rsa][message][id1]" => "000045"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:  <virusname> was detected in <filename>.
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{virusname} was detected in %{filename}." }
			id => "msgParserId19"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Job" {
		# MESSAGE 000049
		# line in RSA: Job Server { has started | started to <fld1> }.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Job[\s]+Server[\s]+([\s]*has[\s]+started[\s]+|[\s]*started[\s]+to[\s]+(?<fld1>[^\s]*)[\s]+)\.$" }
				id => "message-000049"
				add_field => {
				"event_description" => "Job Server started"
					"[event][id]" => "000049"
					"[rsa][message][id1]" => "000049"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000050
		# line in RSA: Job Server has stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Job Server has stopped." }
				id => "message-000050"
				add_field => {
				"event_description" => "Job Server stopped"
					"[event][id]" => "000050"
					"[rsa][message][id1]" => "000050"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "JS/IEPageSpoof" {
		# MESSAGE 000051
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000051"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000051"
					"[rsa][message][id1]" => "000051"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000052
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000052"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000052"
					"[rsa][message][id1]" => "000052"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JS/Nuvens" {
		# MESSAGE 000054
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000054"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000054"
					"[rsa][message][id1]" => "000054"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000055
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000055"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000055"
					"[rsa][message][id1]" => "000055"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JS/Petch" {
		# MESSAGE 000056
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000056"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000056"
					"[rsa][message][id1]" => "000056"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000057
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000057"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000057"
					"[rsa][message][id1]" => "000057"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "machine" {
		# MESSAGE 000060
		# line in RSA: machine <hostname> has violated <fld1> policy, setting to conform with policy <fld2>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "machine %{hostname} has violated %{fld1} policy, setting to conform with policy %{fld2}." }
				id => "message-000060"
				add_field => {
				"event_description" => "machine has violated policy"
					"[event][id]" => "000060"
					"[rsa][message][id1]" => "000060"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000061
		# line in RSA: machine <hostname> has not given a full response to the poll.  Some information may not be up to date.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "machine %{hostname} has not given a full response to the poll.  Some information may not be up to date." }
				id => "message-000061"
				add_field => {
				"event_description" => "machine has not given a full response to the poll"
					"[event][id]" => "000061"
					"[rsa][message][id1]" => "000061"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: VBS/Slogod.B was detected in <filename>. Machine: <hostname>, User: <username>. Status: <info>
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "VBS/Slogod.B was detected in %{filename}. Machine: %{hostname}, User: %{username}. Status: %{info}" }
			id => "msgParserId24"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VBS/Slogod.B was detected"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Realtime" {
		# MESSAGE 000065
		# line in RSA: Realtime Server has started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Realtime Server has started." }
				id => "message-000065"
				add_field => {
				"event_description" => "Realtime Server started"
					"[event][id]" => "000065"
					"[rsa][message][id1]" => "000065"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000066
		# line in RSA: Realtime Server has stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Realtime Server has stopped." }
				id => "message-000066"
				add_field => {
				"event_description" => "Realtime Server stopped"
					"[event][id]" => "000066"
					"[rsa][message][id1]" => "000066"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA:  <virusname> A was detected in <filename>..Machine: <hostname>, User: <username>..Status: <info>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{virusname} A was detected in %{filename}..Machine: %{hostname}, User: %{username}..Status: %{info}" }
			id => "msgParserId27"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "RPC" {
		# MESSAGE 000068
		# line in RSA: RPC Server could not initialize plugin <filename>, error <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RPC Server could not initialize plugin %{filename}, error %{fld1}" }
				id => "message-000068"
				add_field => {
				"event_description" => "could not initialize plugin"
					"[event][id]" => "000068"
					"[rsa][message][id1]" => "000068"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000069
		# line in RSA: RPC Server could not listen for RPC calls, error <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RPC Server could not listen for RPC calls, error %{fld1}" }
				id => "message-000069"
				add_field => {
				"event_description" => "could not listen for RPC calls"
					"[event][id]" => "000069"
					"[rsa][message][id1]" => "000069"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000070
		# line in RSA: RPC Server could not load in plugin <filename>, error <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RPC Server could not load in plugin %{filename}, error %{fld1}" }
				id => "message-000070"
				add_field => {
				"event_description" => "could not load in plugin"
					"[event][id]" => "000070"
					"[rsa][message][id1]" => "000070"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000071
		# line in RSA: RPC Server has started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RPC Server has started." }
				id => "message-000071"
				add_field => {
				"event_description" => "RPC Server started"
					"[event][id]" => "000071"
					"[rsa][message][id1]" => "000071"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000072
		# line in RSA: RPC Server has stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RPC Server has stopped." }
				id => "message-000072"
				add_field => {
				"event_description" => "RPC Server stopped"
					"[event][id]" => "000072"
					"[rsa][message][id1]" => "000072"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Scan" {
		# MESSAGE 000073
		# line in RSA: Scan Job (<context>) had the following results:[Infection Found: <dclass_counter1>][File { Infected | Renamed }: <fld2>][ { File Cure | Scan } Errors: <fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+Job[\s]+\((?<context>[^\)]*)\)[\s]+had[\s]+the[\s]+following[\s]+results:\[Infection[\s]+Found:[\s]+(?<dclass_counter1>[^\]]*)\]\[File[\s]+([\s]*Infected[\s]+|[\s]*Renamed[\s]+):[\s]+(?<fld2>[^\]]*)\]\[[\s]+([\s]*File[\s]+Cure[\s]+|[\s]*Scan[\s]+)[\s]+Errors:[\s]+(?<fld3>[^\]]*)\]$" }
				id => "message-000073"
				add_field => {
				"event_description" => "SCAN job"
					"[event][id]" => "000073"
					"[rsa][message][id1]" => "000073"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Scan
		# line in RSA: Scan Job (<context>) had the following results:[Infection Found: <dclass_counter1>][File { Infected | Renamed | Deleted }: <fld2>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+Job[\s]+\((?<context>[^\)]*)\)[\s]+had[\s]+the[\s]+following[\s]+results:\[Infection[\s]+Found:[\s]+(?<dclass_counter1>[^\]]*)\]\[File[\s]+([\s]*Infected[\s]+|[\s]*Renamed[\s]+|[\s]*Deleted[\s]+):[\s]+(?<fld2>[^\]]*)\]$" }
				id => "message-Scan"
				add_field => {
				"event_description" => "SCAN job"
					"[event][id]" => "Scan"
					"[rsa][message][id1]" => "Scan"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000173
		# line in RSA: Scan Job (<context>) had the following results:[Pests Found: <dclass_counter1>][Items { Infected | Renamed }: <fld2>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Scan[\s]+Job[\s]+\((?<context>[^\)]*)\)[\s]+had[\s]+the[\s]+following[\s]+results:\[Pests[\s]+Found:[\s]+(?<dclass_counter1>[^\]]*)\]\[Items[\s]+([\s]*Infected[\s]+|[\s]*Renamed[\s]+):[\s]+(?<fld2>[^\]]*)\]$" }
				id => "message-000173"
				add_field => {
				"event_description" => "Scan Job"
					"[event][id]" => "000173"
					"[rsa][message][id1]" => "000173"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000174
		# line in RSA: Scan Job (<context>) had the following results:No Pests Found.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan Job (%{context}) had the following results:No Pests Found." }
				id => "message-000174"
				add_field => {
				"event_description" => "Scan Job"
					"[event][id]" => "000174"
					"[rsa][message][id1]" => "000174"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: Scheduled scan skipped <disk_volume>: because <result>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "Scheduled scan skipped %{disk_volume}: because %{result}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "scheduled" {
		# MESSAGE 000075
		# line in RSA: scheduled scan job (<context>) has finished.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "scheduled scan job (%{context}) has finished." }
				id => "message-000075"
				add_field => {
				"event_description" => "scheduled scan job finished"
					"[event][id]" => "000075"
					"[rsa][message][id1]" => "000075"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000076
		# line in RSA: scheduled scan job (<context>) has started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "scheduled scan job (%{context}) has started." }
				id => "message-000076"
				add_field => {
				"event_description" => "scheduled scan job started"
					"[event][id]" => "000076"
					"[rsa][message][id1]" => "000076"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000077
		# line in RSA: scheduled scan job (US Schedule time) has been stopped because engine signature update process has failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "scheduled scan job (US Schedule time) has been stopped because engine signature update process has failed." }
				id => "message-000077"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "scheduled scan job (US Schedule time) has been stopped because engine signature update process has failed"
					"[event][id]" => "000077"
					"[rsa][message][id1]" => "000077"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: service has self-terminated because engine signature update process has failed.
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "service has self-terminated because engine signature update process has failed." }
			id => "msgParserId41"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "service has self-terminated because engine signature update process has failed"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId42
	# line in RSA:  Succeeded updating <agent> to version <component_version>
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Succeeded updating %{agent} to version %{component_version}" }
			id => "msgParserId42"
			add_field => {
				"event_description" => "Succeeded updating software"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: This is a test message sent from the <context>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "This is a test message sent from the %{context}" }
			id => "msgParserId43"
			add_field => {
				"id" => "%{hid}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. <info>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. %{info}" }
			id => "msgParserId44"
			add_field => {
				"event_description" => "the EICAR test string was detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: Vet signature is out of date, <result>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "Vet signature is out of date, %{result}" }
			id => "msgParserId45"
			add_field => {
				"event_description" => "Vet signature is out of date"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Web" {
		# MESSAGE 000083
		# line in RSA: Web Access Server has started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Web Access Server has started." }
				id => "message-000083"
				add_field => {
				"event_description" => "Web Access Server started"
					"[event][id]" => "000083"
					"[rsa][message][id1]" => "000083"
					"[event][categoryid]" => "1610000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000084
		# line in RSA: Web Access Server has stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Web Access Server has stopped." }
				id => "message-000084"
				add_field => {
				"event_description" => "Web Access Server stopped"
					"[event][id]" => "000084"
					"[rsa][message][id1]" => "000084"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Win32/AckCmd" {
		# MESSAGE 000085
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000085"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000085"
					"[rsa][message][id1]" => "000085"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000086
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000086"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000086"
					"[rsa][message][id1]" => "000086"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Win32/Clspring!generic" {
		# MESSAGE 000090
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000090"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000090"
					"[rsa][message][id1]" => "000090"
					"[event][categoryid]" => "1003030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000091
		# line in RSA:  <virusname> was detected in <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}" }
				id => "message-000091"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000091"
					"[rsa][message][id1]" => "000091"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: Win32/Conficker.A was detected in <filename>. Machine: <hostname>, User: <username>. Status: <info>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "Win32/Conficker.A was detected in %{filename}. Machine: %{hostname}, User: %{username}. Status: %{info}" }
			id => "msgParserId49"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "Win32/Conficker.A was detected"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Win32/DlRhifrem!generic" {
		# MESSAGE 000096
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. File Status: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. File Status: %{info}" }
				id => "message-000096"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000096"
					"[rsa][message][id1]" => "000096"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE 000097
		# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. Status: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{virusname} was detected in %{filename}. Machine: %{hostname}, User: %{username}. Status: %{info}" }
				id => "message-000097"
				add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "000097"
					"[rsa][message][id1]" => "000097"
					"[event][categoryid]" => "1003030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA:  Win32/FakeAV.CTK was detected in <filename>. Machine: <hostname>, User: <username>. Status: <info>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "Win32/FakeAV.CTK was detected in %{filename}. Machine: %{hostname}, User: %{username}. Status: %{info}" }
			id => "msgParserId51"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "Win32/FakeAV.CTK was detected in file"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA:  <virusname> was detected in <filename>. Machine: <hostname>, User: <username>. { File Status | Status }: <info>
	else if [logstash][msgparser][id] == "msgParserId52" {
		grok {
			match => { "message" => "^[\s]*(?<virusname>[^\s]*)[\s]+was[\s]+detected[\s]+in[\s]+(?<filename>[^\.]*)\.[\s]+Machine:[\s]+(?<hostname>[^,]*),[\s]+User:[\s]+(?<username>[^\.]*)\.[\s]+([\s]*File[\s]+Status[\s]+|[\s]*Status[\s]+):[\s]+(?<info>.*)$" }
			id => "msgParserId52"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA:  <virusname> was detected in <filename>. 
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{virusname} was detected in %{filename}." }
			id => "msgParserId14"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "VIRUS DETECTED"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId53
	# line in RSA:  Win32/Tnega.VNG was detected in <filename>. Machine: <hostname>, User: <username>. Status: <info>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "Win32/Tnega.VNG was detected in %{filename}. Machine: %{hostname}, User: %{username}. Status: %{info}" }
			id => "msgParserId53"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "Win32/Tnega.VNG was detected in file"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "PestPatrol" {
		# MESSAGE 000150
		# line in RSA: PestPatrol scheduled scan job (<context>) has finished.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PestPatrol scheduled scan job (%{context}) has finished." }
				id => "message-000150"
				add_field => {
				"event_description" => "PestPatrol scheduled scan job finished"
					"[event][id]" => "000150"
					"[rsa][message][id1]" => "000150"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000151
		# line in RSA: PestPatrol scheduled scan job (<context>) has started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PestPatrol scheduled scan job (%{context}) has started." }
				id => "message-000151"
				add_field => {
				"event_description" => "PestPatrol scheduled scan job started"
					"[event][id]" => "000151"
					"[rsa][message][id1]" => "000151"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "The" {
		# MESSAGE The
		# line in RSA: The <virusname> was detected in <filename>. Machine: <hostname>, User: <username>.{ File Status | Status }: <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+(?<virusname>[^\s]*)[\s]+was[\s]+detected[\s]+in[\s]+(?<filename>[^\.]*)\.[\s]+Machine:[\s]+(?<hostname>[^,]*),[\s]+User:[\s]+(?<username>[^\.]*)\.([\s]*File[\s]+Status[\s]+|[\s]*Status[\s]+):[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-The"
				add_field => {
				"event_description" => "VIRUS DETECTED"
					"[event][id]" => "The"
					"[rsa][message][id1]" => "The"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE The:01
		# line in RSA:  The proxy <info> has missed a poll.  It is likely that policy cannot be applied to its branches.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The proxy %{info} has missed a poll.  It is likely that policy cannot be applied to its branches." }
				id => "message-The:01"
				add_field => {
				"event_description" => "The proxy has missed a poll"
					"[event][id]" => "The:01"
					"[rsa][message][id1]" => "The:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId58"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "A" {
		# MESSAGE A
		# line in RSA: A poll to subnet <saddr>:<sport> timed-out. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "A poll to subnet %{saddr}:%{sport} timed-out." }
				id => "message-A"
				add_field => {
					"[event][id]" => "A"
					"[rsa][message][id1]" => "A"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE A:01
		# line in RSA: A poll to subnet <dst_zone> (<daddr>/<dmask>) timed-out. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "A poll to subnet %{dst_zone} (%{daddr}/%{dmask}) timed-out." }
				id => "message-A:01"
				add_field => {
					"[event][id]" => "A:01"
					"[rsa][message][id1]" => "A:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE A:02
		# line in RSA: A poll to subnet <daddr>/<dmask> timed-out. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "A poll to subnet %{daddr}/%{dmask} timed-out." }
				id => "message-A:02"
				add_field => {
					"[event][id]" => "A:02"
					"[rsa][message][id1]" => "A:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_caitmmsg.json"
#			template_name => "caitm_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
