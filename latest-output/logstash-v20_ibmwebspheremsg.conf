# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ibmwebsphere"
			"[observer][name]" => "IBM WebSphere"
			"[observer][type]" => "Application Servers"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <hfld2> <hfld3> [<hfld4>] <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: [%{hdatetime}] %{hfld1} %{hfld2} %{hfld3} [%{hfld4}] %{messageid}: %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <hfld6> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: [%{hdatetime}] %{hfld1} %{hfld2} %{hfld3} %{hfld4} %{hfld5} %{hfld6} %{messageid}: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hday>.<hmonth>.<hyear> <htime> <htimezone>] <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <messageid>: <!payload:hday>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+\[(?<message>(?<hday>[^\.]*)\.(?<hmonth>[^\.]*)\.(?<hyear>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<htimezone>[^\]]*)\][\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: [%{hdatetime}] %{hfld1} %{hfld2} %{hfld3} %{hfld4} %{hfld5} %{messageid}: %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <hfld2> <hfld3> <hfld4> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: [%{hdatetime}] %{hfld1} %{hfld2} %{hfld3} %{hfld4} %{messageid}: %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <hfld2> <hfld3> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: [%{hdatetime}] %{hfld1} %{hfld2} %{hfld3} %{messageid}: %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 00012
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <messageid> <hfld2> <hfld3> prepareRefresh <!payload:messageid> 
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+\[(?<hdatetime>[^\]]*)\][\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+prepareRefresh[\s]+(?<payload>[^\s]*)[\s]+)$" }
			id => "header-00012"
			add_field => {
				"[rsa][header][id]" => "00012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hday>.<hmonth>.<hyear> <htime> <htimezone>] <hfld1> <messageid> <!payload:hday>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+\[(?<message>(?<hday>[^\.]*)\.(?<hmonth>[^\.]*)\.(?<hyear>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<htimezone>[^\]]*)\][\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+\[(?<hdatetime>[^\]]*)\][\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: Seq =<hfld1> | Event Type = <messageid> | <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+Seq[\s]+=(?<message>(?<hfld1>[^\s]*)[\s]+\|[\s]+Event[\s]+Type[\s]+=[\s]+(?<messageid>[^\s]*)[\s]+\|[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: <hfld1> <hfld2> <hfld3> [<hfld4> <hfld5>] "<messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+\[(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\]]*)\][\s]+\"(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: <hfld1> <hfld2> <hfld3> [<hfld4> <hfld5>] <hfld6> <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+\[(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\]]*)\][\s]+(?<hfld6>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%IBM_WEBSPHERE\-(?<hlevel>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: [<hdatetime>] <hfld1> <p_msgid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: [%{hdatetime}] %{hfld1} %{p_msgid} %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "IBMWEBSPHERE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9998
	# line in RSA: %IBM_WEBSPHERE-<hlevel>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%IBM_WEBSPHERE-%{hlevel}: %{message}" }
			id => "header-9998"
			add_field => {
				"[rsa][header][id]" => "9998"
				"[rsa][message][id2]" => "IBMWEBSPHERE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ibmwebspheremsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "_Alarm" {
		# MESSAGE _Alarm
		# line in RSA: _Alarm<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "_Alarm%{fld1}> %{agent} Entry" }
				id => "message-_Alarm"
				add_field => {
				"event_description" => "Alarm Entry."
					"[event][id]" => "_Alarm"
					"[rsa][message][id1]" => "_Alarm"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE _Alarm:01
		# line in RSA: _Alarm <fld1> {_Alarm.<<init> | cleanup | init }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^_Alarm[\s]+(?<fld1>[^\s]*)[\s]+(_Alarm\.<init>[\s]+|[\s]*cleanup[\s]+|[\s]*init[\s]+)$" }
				id => "message-_Alarm:01"
				add_field => {
				"event_description" => "Alarm init/cleanup."
					"[event][id]" => "_Alarm:01"
					"[rsa][message][id1]" => "_Alarm:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: The application profiling service started successfully.
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "The application profiling service started successfully." }
			id => "msgParserId2"
			add_field => {
				"event_description" => "The application profiling service started successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: The application profiling service is stopping
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "The application profiling service is stopping" }
			id => "msgParserId3"
			add_field => {
				"event_description" => "The application profiling service is stopping"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: Application Profiling service is disabled.
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "Application Profiling service is disabled." }
			id => "msgParserId4"
			add_field => {
				"event_description" => "Application Profiling service is disabled."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: Administrative security is enabled, but an unsecured version of the filetransfer application is in use.
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "Administrative security is enabled, but an unsecured version of the filetransfer application is in use." }
			id => "msgParserId5"
			add_field => {
				"event_description" => "Administrative security is enabled, but an unsecured version of the filetransfer application is in use."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: ActionServlet <fld1> inside init....
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "ActionServlet %{fld1} inside init...." }
			id => "msgParserId6"
			add_field => {
				"event_description" => "ActionServlet inside init."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA:  WorkArea service not enabled on <hostname>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "WorkArea service not enabled on %{hostname}" }
			id => "msgParserId7"
			add_field => {
				"event_description" => "WorkArea service not enabled on server."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: { The SOAP | SOAP } connector { is available | available } at port <network_port>
	else if [logstash][msgparser][id] == "msgParserId8" {
		grok {
			match => { "message" => "^([\s]*The[\s]+SOAP[\s]+|[\s]*SOAP[\s]+)[\s]+connector[\s]+([\s]*is[\s]+available[\s]+|[\s]*available[\s]+)[\s]+at[\s]+port[\s]+(?<network_port>.*)$" }
			id => "msgParserId8"
			add_field => {
				"event_description" => "The SOAP connector is available at port."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: { The RMI | RMI } Connector { is available | available } at port <network_port>
	else if [logstash][msgparser][id] == "msgParserId9" {
		grok {
			match => { "message" => "^([\s]*The[\s]+RMI[\s]+|[\s]*RMI[\s]+)[\s]+Connector[\s]+([\s]*is[\s]+available[\s]+|[\s]*available[\s]+)[\s]+at[\s]+port[\s]+(?<network_port>.*)$" }
			id => "msgParserId9"
			add_field => {
				"event_description" => "The RMI connector is available at port."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA: The JMX <fld1> connector is available at port <network_port>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "The JMX %{fld1} connector is available at port %{network_port}" }
			id => "msgParserId10"
			add_field => {
				"event_description" => "The JMX connector is available at port."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: The IPC connector is available at port <network_port>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "The IPC connector is available at port %{network_port}" }
			id => "msgParserId11"
			add_field => {
				"event_description" => "The IPC connector is available at port"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA: The service is unable to parse the <agent> descriptor file <filename>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "The service is unable to parse the %{agent} descriptor file %{filename}" }
			id => "msgParserId12"
			add_field => {
				"event_description" => "Unable to parse the descriptor file"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: { The administration service | AdminService } { is initialized | initialized }
	else if [logstash][msgparser][id] == "msgParserId13" {
		grok {
			match => { "message" => "^([\s]*The[\s]+administration[\s]+service[\s]+|[\s]*AdminService[\s]+)[\s]+([\s]*is[\s]+initialized[\s]+|[\s]*initialized[\s]+)$" }
			id => "msgParserId13"
			add_field => {
				"event_description" => "Administration service initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: An attempt is made to stop the <hostname> server. (User ID = <username>)
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "An attempt is made to stop the %{hostname} server. (User ID = %{username})" }
			id => "msgParserId14"
			add_field => {
				"event_description" => "Attempt made to stop the server"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: { An attempt | Attempt } { is made | made } to stop the <hostname> server.
	else if [logstash][msgparser][id] == "msgParserId15" {
		grok {
			match => { "message" => "^([\s]*An[\s]+attempt[\s]+|[\s]*Attempt[\s]+)[\s]+([\s]*is[\s]+made[\s]+|[\s]*made[\s]+)[\s]+to[\s]+stop[\s]+the[\s]+(?<hostname>[^\s]*)[\s]+server\.$" }
			id => "msgParserId15"
			add_field => {
				"event_description" => "Attempt made to stop the server"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: One or more methods in <info> is excluded from access check.
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "One or more methods in %{info} is excluded from access check." }
			id => "msgParserId16"
			add_field => {
				"event_description" => "One or more methods is excluded from access check."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA: Document <filename> is modified.
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "Document %{filename} is modified." }
			id => "msgParserId17"
			add_field => {
				"event_description" => "Document is modified"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "AlarmImpl" {
		# MESSAGE AlarmImpl
		# line in RSA: AlarmImpl<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmImpl%{fld1}> %{agent} Entry" }
				id => "message-AlarmImpl"
				add_field => {
				"event_description" => "AlarmImpl Entry"
					"[event][id]" => "AlarmImpl"
					"[rsa][message][id1]" => "AlarmImpl"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmImpl:01
		# line in RSA: AlarmImpl<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmImpl%{fld1}< %{agent} Exit" }
				id => "message-AlarmImpl:01"
				add_field => {
				"event_description" => "AlarmImpl Exit"
					"[event][id]" => "AlarmImpl:01"
					"[rsa][message][id1]" => "AlarmImpl:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AlarmManager" {
		# MESSAGE AlarmManager
		# line in RSA: AlarmManager<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManager%{fld1}> %{agent} Entry" }
				id => "message-AlarmManager"
				add_field => {
				"event_description" => "AlarmManager Entry"
					"[event][id]" => "AlarmManager"
					"[rsa][message][id1]" => "AlarmManager"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManager:01
		# line in RSA: AlarmManager<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManager%{fld1}< %{agent} Exit" }
				id => "message-AlarmManager:01"
				add_field => {
				"event_description" => "AlarmManager Exit"
					"[event][id]" => "AlarmManager:01"
					"[rsa][message][id1]" => "AlarmManager:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManager:02
		# line in RSA: AlarmManager <fld1> create(<fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManager %{fld1} create(%{fld2})" }
				id => "message-AlarmManager:02"
				add_field => {
				"event_description" => "AlarmManager create"
					"[event][id]" => "AlarmManager:02"
					"[rsa][message][id1]" => "AlarmManager:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AlarmManagerI" {
		# MESSAGE AlarmManagerI
		# line in RSA: AlarmManagerI<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManagerI%{fld1}> %{agent} Entry" }
				id => "message-AlarmManagerI"
				add_field => {
				"event_description" => "AlarmManagerI Entry"
					"[event][id]" => "AlarmManagerI"
					"[rsa][message][id1]" => "AlarmManagerI"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManagerI:01
		# line in RSA: AlarmManagerI<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManagerI%{fld1}< %{agent} Exit" }
				id => "message-AlarmManagerI:01"
				add_field => {
				"event_description" => "AlarmManagerI Exit"
					"[event][id]" => "AlarmManagerI:01"
					"[rsa][message][id1]" => "AlarmManagerI:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AlarmManagerT" {
		# MESSAGE AlarmManagerT
		# line in RSA: AlarmManager <fld1> alarm fired set to <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManager %{fld1} alarm fired set to %{fld2}" }
				id => "message-AlarmManagerT"
				add_field => {
				"event_description" => "AlarmManager alarm fired set"
					"[event][id]" => "AlarmManagerT"
					"[rsa][message][id1]" => "AlarmManagerT"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManagerT:01
		# line in RSA: AlarmManager <fld1> Alarm manager thread { waiting | woken }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^AlarmManager[\s]+(?<fld1>[^\s]*)[\s]+Alarm[\s]+manager[\s]+thread[\s]+([\s]*waiting[\s]+|[\s]*woken[\s]+)$" }
				id => "message-AlarmManagerT:01"
				add_field => {
				"event_description" => "Alarm manager thread waiting or woken"
					"[event][id]" => "AlarmManagerT:01"
					"[rsa][message][id1]" => "AlarmManagerT:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManagerT:02
		# line in RSA: AlarmManager <fld1> AlarmManagerThread executing next alarm
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManager %{fld1} AlarmManagerThread executing next alarm" }
				id => "message-AlarmManagerT:02"
				add_field => {
				"event_description" => "AlarmManagerThread executing next alarm"
					"[event][id]" => "AlarmManagerT:02"
					"[rsa][message][id1]" => "AlarmManagerT:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManagerT:03
		# line in RSA: AlarmManager <fld1> AlarmQ { empty, waiting | woken }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^AlarmManager[\s]+(?<fld1>[^\s]*)[\s]+AlarmQ[\s]+([\s]*empty,[\s]+waiting[\s]+|[\s]*woken[\s]+)$" }
				id => "message-AlarmManagerT:03"
				add_field => {
				"event_description" => "AlarmManager AlarmQ empty,waiting or woken."
					"[event][id]" => "AlarmManagerT:03"
					"[rsa][message][id1]" => "AlarmManagerT:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmManagerT:04
		# line in RSA: AlarmManager <fld1> Found alarm
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmManager %{fld1} Found alarm" }
				id => "message-AlarmManagerT:04"
				add_field => {
				"event_description" => "AlarmManager found alarm."
					"[event][id]" => "AlarmManagerT:04"
					"[rsa][message][id1]" => "AlarmManagerT:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AlarmThreadPo" {
		# MESSAGE AlarmThreadPo
		# line in RSA: AlarmThreadPo<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmThreadPo%{fld1}> %{agent} Entry" }
				id => "message-AlarmThreadPo"
				add_field => {
				"event_description" => "AlarmThreadPool Entry"
					"[event][id]" => "AlarmThreadPo"
					"[rsa][message][id1]" => "AlarmThreadPo"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmThreadPo:01
		# line in RSA: AlarmThreadPo<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmThreadPo%{fld1}< %{agent} Exit" }
				id => "message-AlarmThreadPo:01"
				add_field => {
				"event_description" => "AlarmThreadPool Exit"
					"[event][id]" => "AlarmThreadPo:01"
					"[rsa][message][id1]" => "AlarmThreadPo:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AlarmThreadPo:02
		# line in RSA: AlarmThreadPo <fld1> Hung thread detection for alarm thread pools is enabled with a <agent> millisecond threshold.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AlarmThreadPo %{fld1} Hung thread detection for alarm thread pools is enabled with a %{agent} millisecond threshold." }
				id => "message-AlarmThreadPo:02"
				add_field => {
				"event_description" => "Hung thread detection for alarm thread pools is enabled"
					"[event][id]" => "AlarmThreadPo:02"
					"[rsa][message][id1]" => "AlarmThreadPo:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ApplicationRe" {
		# MESSAGE ApplicationRe
		# line in RSA: ApplicationRe <fld1> <fld2> CWSCT0405I: The application router is configured to select applications by the weight.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ApplicationRe %{fld1} %{fld2} CWSCT0405I: The application router is configured to select applications by the weight." }
				id => "message-ApplicationRe"
				add_field => {
				"event_description" => "The application router is configured to select applications by the weight."
					"[event][id]" => "ApplicationRe"
					"[rsa][message][id1]" => "ApplicationRe"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ApplicationRe:01
		# line in RSA: <fld1>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}, %{info}" }
				id => "message-ApplicationRe:01"
				add_field => {
				"event_description" => "Loading default application router"
					"[event][id]" => "ApplicationRe:01"
					"[rsa][message][id1]" => "ApplicationRe:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: The Work Manager service started successfully.
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "The Work Manager service started successfully." }
			id => "msgParserId33"
			add_field => {
				"event_description" => "Work Manager service started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId34
	# line in RSA: Work Manager service initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "Work Manager service initialized successfully." }
			id => "msgParserId34"
			add_field => {
				"event_description" => "Work Manager initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "AsynchContext" {
		# MESSAGE AsynchContext
		# line in RSA: AsynchContext<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AsynchContext%{fld1}> %{agent} Entry" }
				id => "message-AsynchContext"
				add_field => {
				"event_description" => "AsynchContext Entry"
					"[event][id]" => "AsynchContext"
					"[rsa][message][id1]" => "AsynchContext"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AsynchContext:01
		# line in RSA: AsynchContext<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AsynchContext%{fld1}< %{agent} Exit" }
				id => "message-AsynchContext:01"
				add_field => {
				"event_description" => "AsynchContext Exit"
					"[event][id]" => "AsynchContext:01"
					"[rsa][message][id1]" => "AsynchContext:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AsynchScopeIm" {
		# MESSAGE AsynchScopeIm
		# line in RSA: AsynchScopeIm<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AsynchScopeIm%{fld1}> %{agent} Entry" }
				id => "message-AsynchScopeIm"
				add_field => {
				"event_description" => "AsynchScopeIm Entry"
					"[event][id]" => "AsynchScopeIm"
					"[rsa][message][id1]" => "AsynchScopeIm"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AsynchScopeIm:01
		# line in RSA: AsynchScopeIm<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AsynchScopeIm%{fld1}< %{agent} Exit" }
				id => "message-AsynchScopeIm:01"
				add_field => {
				"event_description" => "AsynchScopeIm Exit"
					"[event][id]" => "AsynchScopeIm:01"
					"[rsa][message][id1]" => "AsynchScopeIm:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: BackgroundLru <fld1> EJB Cache: Sweep (<fld2>) - Cache limit not reached :<fld3>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "BackgroundLru %{fld1} EJB Cache: Sweep (%{fld2}) - Cache limit not reached :%{fld3}" }
			id => "msgParserId39"
			add_field => {
				"event_description" => "BackgroundLru EJB Cache: Sweep Cache limit not reached"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId40
	# line in RSA: BankActivatio <fld1> <agent> setResourceAdapter Setting Resource Adapter:<fld2>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "BankActivatio %{fld1} %{agent} setResourceAdapter Setting Resource Adapter:%{fld2}" }
			id => "msgParserId40"
			add_field => {
				"event_description" => "BankActivatio Setting Resource Adapter"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "BankResourceA" {
		# MESSAGE BankResourceA
		# line in RSA: BankResourceA <fld1> <agent> endpointActivation WebSphere Bank Resource Adapter Endpoint Activated successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BankResourceA %{fld1} %{agent} endpointActivation WebSphere Bank Resource Adapter Endpoint Activated successfully." }
				id => "message-BankResourceA"
				add_field => {
				"event_description" => "BankResourceA WebSphere Bank Resource Adapter Endpoint Activated"
					"[event][id]" => "BankResourceA"
					"[rsa][message][id1]" => "BankResourceA"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BankResourceA:01
		# line in RSA: BankResourceA <fld1> <agent> endpointDeactivation WebSphere Bank Resource Adapter Endpoint deactivated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BankResourceA %{fld1} %{agent} endpointDeactivation WebSphere Bank Resource Adapter Endpoint deactivated." }
				id => "message-BankResourceA:01"
				add_field => {
				"event_description" => "BankResourceA WebSphere Bank Resource Adapter Endpoint deactivated"
					"[event][id]" => "BankResourceA:01"
					"[rsa][message][id1]" => "BankResourceA:01"
					"[event][categoryid]" => "1701070000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BankResourceA:02
		# line in RSA: BankResourceA <fld1> <agent> start WebSphere Bank Resource Adapter started successfully....
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BankResourceA %{fld1} %{agent} start WebSphere Bank Resource Adapter started successfully...." }
				id => "message-BankResourceA:02"
				add_field => {
				"event_description" => "BankResourceA WebSphere Bank Resource Adapter started"
					"[event][id]" => "BankResourceA:02"
					"[rsa][message][id1]" => "BankResourceA:02"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BankResourceA:03
		# line in RSA: BankResourceA <fld1> <agent> stop WebSphere Bank Resource Adapter stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BankResourceA %{fld1} %{agent} stop WebSphere Bank Resource Adapter stopped." }
				id => "message-BankResourceA:03"
				add_field => {
				"event_description" => "BankResourceA WebSphere Bank Resource Adapter stopped"
					"[event][id]" => "BankResourceA:03"
					"[rsa][message][id1]" => "BankResourceA:03"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "BinaryHeap" {
		# MESSAGE BinaryHeap
		# line in RSA: BinaryHeap<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BinaryHeap%{fld1}> %{agent} Entry" }
				id => "message-BinaryHeap"
				add_field => {
				"event_description" => "BinaryHeap Entry"
					"[event][id]" => "BinaryHeap"
					"[rsa][message][id1]" => "BinaryHeap"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BinaryHeap:01
		# line in RSA: BinaryHeap<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BinaryHeap%{fld1}< %{agent} Exit" }
				id => "message-BinaryHeap:01"
				add_field => {
				"event_description" => "BinaryHeap Exit"
					"[event][id]" => "BinaryHeap:01"
					"[rsa][message][id1]" => "BinaryHeap:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: The Transport Channel Service has started chain <interface>.
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "The Transport Channel Service has started chain %{interface}." }
			id => "msgParserId47"
			add_field => {
				"event_description" => "The Transport Channel Service has started chain."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId48
	# line in RSA: The Transport Channel Service has stopped the Chain labeled <interface>.
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "The Transport Channel Service has stopped the Chain labeled %{interface}." }
			id => "msgParserId48"
			add_field => {
				"event_description" => "The Transport Channel Service has stopped the Chain."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "clientinfo" {
		# MESSAGE clientinfo
		# line in RSA: clientinfo<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clientinfo%{fld1}> %{agent} Entry" }
				id => "message-clientinfo"
				add_field => {
				"event_description" => "clientinfo Entry"
					"[event][id]" => "clientinfo"
					"[rsa][message][id1]" => "clientinfo"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE clientinfo:01
		# line in RSA: clientinfo<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clientinfo%{fld1}< %{agent} Exit" }
				id => "message-clientinfo:01"
				add_field => {
				"event_description" => "clientinfo Exit"
					"[event][id]" => "clientinfo:01"
					"[rsa][message][id1]" => "clientinfo:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "clientinfoplu" {
		# MESSAGE clientinfoplu
		# line in RSA: clientinfoplu<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clientinfoplu%{fld1}> %{agent} Entry" }
				id => "message-clientinfoplu"
				add_field => {
				"event_description" => "clientinfoplu Entry"
					"[event][id]" => "clientinfoplu"
					"[rsa][message][id1]" => "clientinfoplu"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE clientinfoplu:01
		# line in RSA: clientinfoplu<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clientinfoplu%{fld1}< %{agent} Exit" }
				id => "message-clientinfoplu:01"
				add_field => {
				"event_description" => "clientinfoplu Exit"
					"[event][id]" => "clientinfoplu:01"
					"[rsa][message][id1]" => "clientinfoplu:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: CMConfigDataI <fld1> getResolutionControl returning <fld2>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "CMConfigDataI %{fld1} getResolutionControl returning %{fld2}" }
			id => "msgParserId53"
			add_field => {
				"event_description" => "CMConfigDataI getResolutionControl returning."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA: ComponentMeta <fld1> { begin | end } context null
	else if [logstash][msgparser][id] == "msgParserId54" {
		grok {
			match => { "message" => "^ComponentMeta[\s]+(?<fld1>[^\s]*)[\s]+([\s]*begin[\s]+|[\s]*end[\s]+)[\s]+context[\s]+null$" }
			id => "msgParserId54"
			add_field => {
				"event_description" => "ComponentMeta begin or end context null"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: ComponentPack I <fld1> setComponentPackInstalled ISC ComponentPack installed status is: <result>
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "ComponentPack I %{fld1} setComponentPackInstalled ISC ComponentPack installed status is: %{result}" }
			id => "msgParserId55"
			add_field => {
				"event_description" => "ComponentPack I "
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Configuration" {
		# MESSAGE Configuration
		# line in RSA: Configuration<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration%{fld1}> %{agent} Entry" }
				id => "message-Configuration"
				add_field => {
				"event_description" => "Configuration Entry"
					"[event][id]" => "Configuration"
					"[rsa][message][id1]" => "Configuration"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE Configuration:01
		# line in RSA: Configuration<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration%{fld1}< %{agent} Exit" }
				id => "message-Configuration:01"
				add_field => {
				"event_description" => "Configuration Exit"
					"[event][id]" => "Configuration:01"
					"[rsa][message][id1]" => "Configuration:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE Configuration:02
		# line in RSA: Configuration <fld1> <agent>Timeout
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuration %{fld1} %{agent}Timeout" }
				id => "message-Configuration:02"
				add_field => {
				"event_description" => "Configuration Timeout"
					"[event][id]" => "Configuration:02"
					"[rsa][message][id1]" => "Configuration:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE Configuration:03
		# line in RSA: <fld2>: Failed to connect to the DataSource <fld3>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2}: Failed to connect to the DataSource %{fld3}. %{info}" }
				id => "message-Configuration:03"
				add_field => {
				"event_description" => "Failed to connect to the DataSource"
					"[event][id]" => "Configuration:03"
					"[rsa][message][id1]" => "Configuration:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE Configuration:04
		# line in RSA: <fld2>: Warning: The property '<fld3>' does not exist on the DataSource class <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2}: Warning: The property '%{fld3}' does not exist on the DataSource class %{agent}" }
				id => "message-Configuration:04"
				add_field => {
				"a" => "The property "
				"b" => " does not exist on the DataSource"
				"event_description" => "%{a}%{fld3}\t%{b}"
					"[event][id]" => "Configuration:04"
					"[rsa][message][id1]" => "Configuration:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ConnectionEve" {
		# MESSAGE ConnectionEve
		# line in RSA: ConnectionEve<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionEve%{fld1}> %{agent} Entry" }
				id => "message-ConnectionEve"
				add_field => {
				"event_description" => "ConnectionEve Entry"
					"[event][id]" => "ConnectionEve"
					"[rsa][message][id1]" => "ConnectionEve"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionEve:01
		# line in RSA: ConnectionEve<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionEve%{fld1}< %{agent} Exit" }
				id => "message-ConnectionEve:01"
				add_field => {
				"event_description" => "ConnectionEve Exit"
					"[event][id]" => "ConnectionEve:01"
					"[rsa][message][id1]" => "ConnectionEve:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionEve:02
		# line in RSA: ConnectionEve <fld1> Closing handle for <agent> from pool <fld2> from <fld3> Managed connection <fld4> State:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionEve %{fld1} Closing handle for %{agent} from pool %{fld2} from %{fld3} Managed connection %{fld4} State:%{info}" }
				id => "message-ConnectionEve:02"
				add_field => {
				"event_description" => "ConnectionEve Closing handle"
					"[event][id]" => "ConnectionEve:02"
					"[rsa][message][id1]" => "ConnectionEve:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ConnectionHan" {
		# MESSAGE ConnectionHan
		# line in RSA: ConnectionHan<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionHan%{fld1}> %{agent} Entry" }
				id => "message-ConnectionHan"
				add_field => {
				"event_description" => "ConnectionHan Entry"
					"[event][id]" => "ConnectionHan"
					"[rsa][message][id1]" => "ConnectionHan"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionHan:01
		# line in RSA: ConnectionHan<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionHan%{fld1}< %{agent} Exit" }
				id => "message-ConnectionHan:01"
				add_field => {
				"event_description" => "ConnectionHan Exit"
					"[event][id]" => "ConnectionHan:01"
					"[rsa][message][id1]" => "ConnectionHan:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ConnectionMan" {
		# MESSAGE ConnectionMan
		# line in RSA: ConnectionMan<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan%{fld1}> %{agent} Entry" }
				id => "message-ConnectionMan"
				add_field => {
				"event_description" => "ConnectionMan Entry"
					"[event][id]" => "ConnectionMan"
					"[rsa][message][id1]" => "ConnectionMan"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:01
		# line in RSA: ConnectionMan<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan%{fld1}< %{agent} Exit" }
				id => "message-ConnectionMan:01"
				add_field => {
				"event_description" => "ConnectionMan Exit"
					"[event][id]" => "ConnectionMan:01"
					"[rsa][message][id1]" => "ConnectionMan:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:02
		# line in RSA: ConnectionMan <fld1> Coordinator in effect:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan %{fld1} Coordinator in effect:%{fld2}" }
				id => "message-ConnectionMan:02"
				add_field => {
				"event_description" => "ConnectionMan Coordinator in effect."
					"[event][id]" => "ConnectionMan:02"
					"[rsa][message][id1]" => "ConnectionMan:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:03
		# line in RSA: ConnectionMan <fld1> Created transaction <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan %{fld1} Created transaction %{fld2}" }
				id => "message-ConnectionMan:03"
				add_field => {
				"event_description" => "ConnectionMan created transaction"
					"[event][id]" => "ConnectionMan:03"
					"[rsa][message][id1]" => "ConnectionMan:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:04
		# line in RSA: ConnectionMan <fld1> Creating <fld2> for use in { Local | Global } Transaction.<fld3>The resource adapter supports XA Transaction
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^ConnectionMan[\s]+(?<fld1>[^\s]*)[\s]+Creating[\s]+(?<fld2>[^\s]*)[\s]+for[\s]+use[\s]+in[\s]+([\s]*Local[\s]+|[\s]*Global[\s]+)[\s]+Transaction\.(?<fld3>[^T]*)The[\s]+resource[\s]+adapter[\s]+supports[\s]+XA[\s]+Transaction$" }
				id => "message-ConnectionMan:04"
				add_field => {
				"event_description" => "ConnectionMan Creating LocalTransactionWrapper"
					"[event][id]" => "ConnectionMan:04"
					"[rsa][message][id1]" => "ConnectionMan:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:05
		# line in RSA: ConnectionMan <fld1> { Input MCF | This CM's MCF |This CM } is <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^ConnectionMan[\s]+(?<fld1>[^\s]*)[\s]+([\s]*Input[\s]+MCF[\s]+|[\s]*This[\s]+CM's[\s]+MCF[\s]+|This[\s]+CM[\s]+)[\s]+is[\s]+(?<fld2>.*)$" }
				id => "message-ConnectionMan:05"
				add_field => {
				"event_description" => "ConnectionMan Input MCF"
					"[event][id]" => "ConnectionMan:05"
					"[rsa][message][id1]" => "ConnectionMan:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:06
		# line in RSA: ConnectionMan <fld1> Transaction context exists
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan %{fld1} Transaction context exists" }
				id => "message-ConnectionMan:06"
				add_field => {
				"event_description" => "ConnectionMan Transaction context exists."
					"[event][id]" => "ConnectionMan:06"
					"[rsa][message][id1]" => "ConnectionMan:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:07
		# line in RSA: ConnectionMan <fld1> Used mc <agent> to find mcWrapper <fld3>  Managed connection <fld4> State:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan %{fld1} Used mc %{agent} to find mcWrapper %{fld3}  Managed connection %{fld4} State:%{info}" }
				id => "message-ConnectionMan:07"
				add_field => {
				"event_description" => "ConnectionMan used mc to find mcWrapper managed connection"
					"[event][id]" => "ConnectionMan:07"
					"[rsa][message][id1]" => "ConnectionMan:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:08
		# line in RSA: ConnectionMan <fld1> Using <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan %{fld1} Using %{agent}" }
				id => "message-ConnectionMan:08"
				add_field => {
				"event_description" => "ConnectionMan using agent."
					"[event][id]" => "ConnectionMan:08"
					"[rsa][message][id1]" => "ConnectionMan:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionMan:09
		# line in RSA: ConnectionMan <fld1>The Connection Pool Manager could not allocate a Managed Connection: <info>: Internal Error: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionMan %{fld1}The Connection Pool Manager could not allocate a Managed Connection: %{info}: Internal Error: %{fld2}" }
				id => "message-ConnectionMan:09"
				add_field => {
				"event_description" => "Connection Pool Manager could not allocate a Managed Connection"
					"[event][id]" => "ConnectionMan:09"
					"[rsa][message][id1]" => "ConnectionMan:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ConnectionWra" {
		# MESSAGE ConnectionWra
		# line in RSA: ConnectionWra<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionWra%{fld1}> %{agent} Entry" }
				id => "message-ConnectionWra"
				add_field => {
				"event_description" => "ConnectionWra Entry"
					"[event][id]" => "ConnectionWra"
					"[rsa][message][id1]" => "ConnectionWra"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ConnectionWra:01
		# line in RSA: ConnectionWra<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ConnectionWra%{fld1}< %{agent} Exit" }
				id => "message-ConnectionWra:01"
				add_field => {
				"event_description" => "ConnectionWra Exit"
					"[event][id]" => "ConnectionWra:01"
					"[rsa][message][id1]" => "ConnectionWra:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CreateAccount" {
		# MESSAGE CreateAccount
		# line in RSA: CreateAccount <fld1> <agent> performTask Account already exists. Please enter a valid numbernull
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CreateAccount %{fld1} %{agent} performTask Account already exists. Please enter a valid numbernull" }
				id => "message-CreateAccount"
				add_field => {
				"result" => "Account already exists"
				"event_description" => "CreateAccount performTask Account already exists. Please enter a valid numbernull"
					"[event][id]" => "CreateAccount"
					"[rsa][message][id1]" => "CreateAccount"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE CreateAccount:01
		# line in RSA: CreateAccount <fld1> <agent> performTask Account Number is required
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CreateAccount %{fld1} %{agent} performTask Account Number is required" }
				id => "message-CreateAccount:01"
				add_field => {
				"result" => "Account Number is required"
				"event_description" => "CreateAccount performTask Account Number is required."
					"[event][id]" => "CreateAccount:01"
					"[rsa][message][id1]" => "CreateAccount:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE CreateAccount:02
		# line in RSA: CreateAccount <fld1> <agent> performTask <fld2> is not a valid number
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CreateAccount %{fld1} %{agent} performTask %{fld2} is not a valid number" }
				id => "message-CreateAccount:02"
				add_field => {
				"result" => "Number is not valid"
				"event_description" => "CreateAccount performTask is not a valid number"
					"[event][id]" => "CreateAccount:02"
					"[rsa][message][id1]" => "CreateAccount:02"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE CreateAccount:03
		# line in RSA: CreateAccount <fld1> <agent> performTask New Account number <fld2> has been successfully created
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CreateAccount %{fld1} %{agent} performTask New Account number %{fld2} has been successfully created" }
				id => "message-CreateAccount:03"
				add_field => {
				"event_description" => "CreateAccount performTask New Account number created"
					"[event][id]" => "CreateAccount:03"
					"[rsa][message][id1]" => "CreateAccount:03"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: CreateCustome <fld1> <agent> performTask New Customer has been successfully created
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "CreateCustome %{fld1} %{agent} performTask New Customer has been successfully created" }
			id => "msgParserId81"
			add_field => {
				"event_description" => "CreateAccount performTask New Customer has been created"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId82
	# line in RSA: Compensation service is disabled.
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "Compensation service is disabled." }
			id => "msgParserId82"
			add_field => {
				"event_description" => "Compensation service is disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId83
	# line in RSA: SSL service is initializing the configuration
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "SSL service is initializing the configuration" }
			id => "msgParserId83"
			add_field => {
				"event_description" => "SSL service is initializing the configuration"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId84
	# line in RSA: SSL service initialization completed successfully
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "SSL service initialization completed successfully" }
			id => "msgParserId84"
			add_field => {
				"event_description" => "SSL service initialization completed successfully"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId85
	# line in RSA: SSL service is starting
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "SSL service is starting" }
			id => "msgParserId85"
			add_field => {
				"event_description" => "SSL service is starting"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId86
	# line in RSA: SSL service started successfully
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "SSL service started successfully" }
			id => "msgParserId86"
			add_field => {
				"event_description" => "SSL service started successfully"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId87
	# line in RSA: The SSL component's FFDC Diagnostic Module <info> registered successfully: <result>
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "The SSL component's FFDC Diagnostic Module %{info} registered successfully: %{result}" }
			id => "msgParserId87"
			add_field => {
				"event_description" => "SSL component's FFDC Diagnostic Module registered successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId88
	# line in RSA: Disabling default hostname verification for HTTPS URL connections.
	else if [logstash][msgparser][id] == "msgParserId88" {
		dissect {
			mapping => { "message" => "Disabling default hostname verification for HTTPS URL connections." }
			id => "msgParserId88"
			add_field => {
				"event_description" => "Disabling default hostname verification for HTTPS URL connections."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId89
	# line in RSA: One or more key stores are using the default password.
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "One or more key stores are using the default password." }
			id => "msgParserId89"
			add_field => {
				"event_description" => "One or more key stores are using the default password."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId90
	# line in RSA: PMI is enabled
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "PMI is enabled" }
			id => "msgParserId90"
			add_field => {
				"event_description" => "PMI is enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId91
	# line in RSA: The core group bridge service has started the subscription router.
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "The core group bridge service has started the subscription router." }
			id => "msgParserId91"
			add_field => {
				"event_description" => "The core group bridge service has started the subscription router."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA: The core group bridge service is disabled because it may not execute on a non-managed node.
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "The core group bridge service is disabled because it may not execute on a non-managed node." }
			id => "msgParserId92"
			add_field => {
				"event_description" => "The core group bridge service is disabled because it may not execute on a non-managed node."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId93
	# line in RSA: Creating new recovery log file <filename>
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "Creating new recovery log file %{filename}" }
			id => "msgParserId93"
			add_field => {
				"event_description" => "Creating new recovery log file"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId94
	# line in RSA: No existing recovery log files found in <filename>. Cold starting the recovery log.
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "No existing recovery log files found in %{filename}. Cold starting the recovery log." }
			id => "msgParserId94"
			add_field => {
				"event_description" => "No existing recovery log files found.Cold starting the recovery log."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId95
	# line in RSA: Performing recovery processing for local WebSphere server (<info>).
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "Performing recovery processing for local WebSphere server (%{info})." }
			id => "msgParserId95"
			add_field => {
				"event_description" => "Performing recovery processing for local WebSphere server"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId96
	# line in RSA: All persistent services have been directed to perform recovery processing for this WebSphere server (<info>).
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "All persistent services have been directed to perform recovery processing for this WebSphere server (%{info})." }
			id => "msgParserId96"
			add_field => {
				"event_description" => "All persistent services have been directed to perform recovery processing for this WebSphere server"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId97
	# line in RSA: Messaging connections are being accepted.
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "Messaging connections are being accepted." }
			id => "msgParserId97"
			add_field => {
				"event_description" => "SibMessage Messaging connections are being accepted"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId98
	# line in RSA: The <agent> service was not enabled and will not be started.
	else if [logstash][msgparser][id] == "msgParserId98" {
		dissect {
			mapping => { "message" => "The %{agent} service was not enabled and will not be started." }
			id => "msgParserId98"
			add_field => {
				"event_description" => "SibMessage The service is not enabled and will not be started."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId99
	# line in RSA: Messaging engine <interface> is in state { Joined | Started | Starting | Stopped | Stopping }.
	else if [logstash][msgparser][id] == "msgParserId99" {
		grok {
			match => { "message" => "^Messaging[\s]+engine[\s]+(?<interface>[^\s]*)[\s]+is[\s]+in[\s]+state[\s]+([\s]*Joined[\s]+|[\s]*Started[\s]+|[\s]*Starting[\s]+|[\s]*Stopped[\s]+|[\s]*Stopping[\s]+)\.$" }
			id => "msgParserId99"
			add_field => {
				"event_description" => "SibMessage Messaging engine state changes"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId100
	# line in RSA: Configuration reload is enabled for bus <interface>.
	else if [logstash][msgparser][id] == "msgParserId100" {
		dissect {
			mapping => { "message" => "Configuration reload is enabled for bus %{interface}." }
			id => "msgParserId100"
			add_field => {
				"event_description" => "SibMessage Configuration reload is enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId101
	# line in RSA: messaging engine <agent> on bus <interface> { is starting to reconcile | has finished reconciling } the <fld1> destination and link configuration.
	else if [logstash][msgparser][id] == "msgParserId101" {
		grok {
			match => { "message" => "^messaging[\s]+engine[\s]+(?<agent>[^\s]*)[\s]+on[\s]+bus[\s]+(?<interface>[^\s]*)[\s]+([\s]*is[\s]+starting[\s]+to[\s]+reconcile[\s]+|[\s]*has[\s]+finished[\s]+reconciling[\s]+)[\s]+the[\s]+(?<fld1>[^\s]*)[\s]+destination[\s]+and[\s]+link[\s]+configuration\.$" }
			id => "msgParserId101"
			add_field => {
				"event_description" => "SibMessage Messaging engine state changes"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId102
	# line in RSA: messaging engine <agent> on bus <interface> has finished reconciling the <fld1> destination and link configuration.
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "messaging engine %{agent} on bus %{interface} has finished reconciling the %{fld1} destination and link configuration." }
			id => "msgParserId102"
			add_field => {
				"event_description" => "SibMessage Messaging engine finished reconciling"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId103
	# line in RSA: { Attempting to obtain | Obtained } an exclusive lock on the data store
	else if [logstash][msgparser][id] == "msgParserId103" {
		grok {
			match => { "message" => "^([\s]*Attempting[\s]+to[\s]+obtain[\s]+|[\s]*Obtained[\s]+)[\s]+an[\s]+exclusive[\s]+lock[\s]+on[\s]+the[\s]+data[\s]+store$" }
			id => "msgParserId103"
			add_field => {
				"event_description" => "SibMessage Attempting to obtain an exclusive lock"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId104
	# line in RSA:  Release: <version> Level: <fld2>
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "Release: %{version} Level: %{fld2}" }
			id => "msgParserId104"
			add_field => {
				"event_description" => "SibMessage Version,release info."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId105
	# line in RSA: The <info> class is loaded as the default Java Persistence API (JPA) provider.
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "The %{info} class is loaded as the default Java Persistence API (JPA) provider." }
			id => "msgParserId105"
			add_field => {
				"event_description" => "Class loaded as the default Java Persistence API (JPA) provider."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId106
	# line in RSA: The Java Persistence API (JPA) component has started.
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "The Java Persistence API (JPA) component has started." }
			id => "msgParserId106"
			add_field => {
				"event_description" => "The Java Persistence API (JPA) component has started."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId107
	# line in RSA: The Java Persistence API (JPA) component is initializing.
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "The Java Persistence API (JPA) component is initializing." }
			id => "msgParserId107"
			add_field => {
				"event_description" => "The Java Persistence API (JPA) component is initializing."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId108
	# line in RSA: The Java Persistence API (JPA) component has initialized.
	else if [logstash][msgparser][id] == "msgParserId108" {
		dissect {
			mapping => { "message" => "The Java Persistence API (JPA) component has initialized." }
			id => "msgParserId108"
			add_field => {
				"event_description" => "The Java Persistence API (JPA) component has initialized."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId109
	# line in RSA: The Java Persistence API (JPA) component is starting.
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "The Java Persistence API (JPA) component is starting." }
			id => "msgParserId109"
			add_field => {
				"event_description" => "The Java Persistence API (JPA) component is starting."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId110
	# line in RSA: DynaCache instance for <info>
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "DynaCache instance for %{info}" }
			id => "msgParserId110"
			add_field => {
				"event_description" => "DynaCache instance created."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId111
	# line in RSA: Extension Registry objects storage: <info>
	else if [logstash][msgparser][id] == "msgParserId111" {
		dissect {
			mapping => { "message" => "Extension Registry objects storage: %{info}" }
			id => "msgParserId111"
			add_field => {
				"event_description" => "Extension Registry objects storage."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId112
	# line in RSA: Extension <fld1> connected with Extension Point <fld2>
	else if [logstash][msgparser][id] == "msgParserId112" {
		dissect {
			mapping => { "message" => "Extension %{fld1} connected with Extension Point %{fld2}" }
			id => "msgParserId112"
			add_field => {
				"event_description" => "Extension connected with Extension point."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "DaemonCoordin" {
		# MESSAGE DaemonCoordin
		# line in RSA: DaemonCoordin<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DaemonCoordin%{fld1}> %{agent} Entry" }
				id => "message-DaemonCoordin"
				add_field => {
				"event_description" => "DaemonCoordin Entry"
					"[event][id]" => "DaemonCoordin"
					"[rsa][message][id1]" => "DaemonCoordin"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DaemonCoordin:01
		# line in RSA: DaemonCoordin<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DaemonCoordin%{fld1}< %{agent} Exit" }
				id => "message-DaemonCoordin:01"
				add_field => {
				"event_description" => "DaemonCoordin Exit"
					"[event][id]" => "DaemonCoordin:01"
					"[rsa][message][id1]" => "DaemonCoordin:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DaemonCoordin:02
		# line in RSA: DaemonCoordin <fld1> Durations=<fld2> Avg=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DaemonCoordin %{fld1} Durations=%{fld2} Avg=%{fld3}" }
				id => "message-DaemonCoordin:02"
				add_field => {
				"event_description" => "DaemonCoordin Durations,Avg."
					"[event][id]" => "DaemonCoordin:02"
					"[rsa][message][id1]" => "DaemonCoordin:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DatabaseHelpe" {
		# MESSAGE DatabaseHelpe
		# line in RSA: DatabaseHelpe<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DatabaseHelpe%{fld1}> %{agent} Entry" }
				id => "message-DatabaseHelpe"
				add_field => {
				"event_description" => "DatabaseHelpe Entry"
					"[event][id]" => "DatabaseHelpe"
					"[rsa][message][id1]" => "DatabaseHelpe"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DatabaseHelpe:01
		# line in RSA: DatabaseHelpe<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DatabaseHelpe%{fld1}< %{agent} Exit" }
				id => "message-DatabaseHelpe:01"
				add_field => {
				"event_description" => "DatabaseHelpe Exit"
					"[event][id]" => "DatabaseHelpe:01"
					"[rsa][message][id1]" => "DatabaseHelpe:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DatabaseHelpe:02
		# line in RSA: DatabaseHelpe <fld1> getRealTableName()
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DatabaseHelpe %{fld1} getRealTableName()" }
				id => "message-DatabaseHelpe:02"
				add_field => {
				"event_description" => "DatabaseHelpe getRealTableName()"
					"[event][id]" => "DatabaseHelpe:02"
					"[rsa][message][id1]" => "DatabaseHelpe:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DatabaseHelpe:03
		# line in RSA: DatabaseHelpe <fld1> Looking for property <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DatabaseHelpe %{fld1} Looking for property %{info}" }
				id => "message-DatabaseHelpe:03"
				add_field => {
				"event_description" => "DatabaseHelpe Looking for property"
					"[event][id]" => "DatabaseHelpe:03"
					"[rsa][message][id1]" => "DatabaseHelpe:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DatabaseHelpe:04
		# line in RSA: DatabaseHelpe <fld1> No connection user/password defined in property map
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DatabaseHelpe %{fld1} No connection user/password defined in property map" }
				id => "message-DatabaseHelpe:04"
				add_field => {
				"event_description" => "DatabaseHelpe No connection user/password defined in property map"
					"[event][id]" => "DatabaseHelpe:04"
					"[rsa][message][id1]" => "DatabaseHelpe:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DatabaseHelpe:05
		# line in RSA: DatabaseHelpe <fld1> { Retrieved | Returned } connection for null.  { Total=<fld2>. ISOLEVEL=<fld3> | Total=<fld2> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^DatabaseHelpe[\s]+(?<fld1>[^\s]*)[\s]+([\s]*Retrieved[\s]+|[\s]*Returned[\s]+)[\s]+connection[\s]+for[\s]+null\.[\s]+([\s]*Total=(?<fld2>[^\.]*)\.[\s]+ISOLEVEL=(?<fld3>[^\s]*)[\s]+|[\s]*Total=(?<fld2>[^\s]*)[\s]+)$" }
				id => "message-DatabaseHelpe:05"
				add_field => {
				"event_description" => "DatabaseHelpe retrieved or returned connection for null."
					"[event][id]" => "DatabaseHelpe:05"
					"[rsa][message][id1]" => "DatabaseHelpe:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId122
	# line in RSA: DataStoreHelp <fld1> statementCachesIsoLevel: <fld2>
	else if [logstash][msgparser][id] == "msgParserId122" {
		dissect {
			mapping => { "message" => "DataStoreHelp %{fld1} statementCachesIsoLevel: %{fld2}" }
			id => "msgParserId122"
			add_field => {
				"event_description" => "DataStoreHelp statementCachesIsoLevel."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "DBHelper" {
		# MESSAGE DBHelper
		# line in RSA: DBHelper<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DBHelper%{fld1}> %{agent} Entry" }
				id => "message-DBHelper"
				add_field => {
				"event_description" => "DBHelper Entry"
					"[event][id]" => "DBHelper"
					"[rsa][message][id1]" => "DBHelper"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DBHelper:01
		# line in RSA: DBHelper<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DBHelper%{fld1}< %{agent} Exit" }
				id => "message-DBHelper:01"
				add_field => {
				"event_description" => "DBHelper Exit"
					"[event][id]" => "DBHelper:01"
					"[rsa][message][id1]" => "DBHelper:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DBHelper:02
		# line in RSA: DBHelper <fld1> Attempting to change the transaction:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DBHelper %{fld1} Attempting to change the transaction:%{fld2}" }
				id => "message-DBHelper:02"
				add_field => {
				"event_description" => "DBHelper Attempting to change the transaction"
					"[event][id]" => "DBHelper:02"
					"[rsa][message][id1]" => "DBHelper:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DBLockingThre" {
		# MESSAGE DBLockingThre
		# line in RSA: DBLockingThre<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DBLockingThre%{fld1}> %{agent} Entry" }
				id => "message-DBLockingThre"
				add_field => {
				"event_description" => "DBLockingThre Entry"
					"[event][id]" => "DBLockingThre"
					"[rsa][message][id1]" => "DBLockingThre"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DBLockingThre:01
		# line in RSA: DBLockingThre<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DBLockingThre%{fld1}< %{agent} Exit" }
				id => "message-DBLockingThre:01"
				add_field => {
				"event_description" => "DBLockingThre Exit"
					"[event][id]" => "DBLockingThre:01"
					"[rsa][message][id1]" => "DBLockingThre:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA:  <application>: <action>. <disposition>
	else if [logstash][msgparser][id] == "msgParserId128" {
		dissect {
			mapping => { "message" => "%{application}: %{action}. %{disposition}" }
			id => "msgParserId128"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup Started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId129
	# line in RSA:  <application> at Member <filename>: <action>. <disposition>
	else if [logstash][msgparser][id] == "msgParserId129" {
		dissect {
			mapping => { "message" => "%{application} at Member %{filename}: %{action}. %{disposition}" }
			id => "msgParserId129"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup Created a new transport instance"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId130
	# line in RSA:  <application> at Member <filename>: <action> (<info>). <disposition>
	else if [logstash][msgparser][id] == "msgParserId130" {
		dissect {
			mapping => { "message" => "%{application} at Member %{filename}: %{action} (%{info}). %{disposition}" }
			id => "msgParserId130"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup Confirmed new view members"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId131
	# line in RSA:  <application> at Member <filename>: <action>.
	else if [logstash][msgparser][id] == "msgParserId131" {
		dissect {
			mapping => { "message" => "%{application} at Member %{filename}: %{action}." }
			id => "msgParserId131"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup Connected a defined member"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId132
	# line in RSA: DefaultApplic <fld1> <fld2> CWSCT0401I: Default application router has been initialized.
	else if [logstash][msgparser][id] == "msgParserId132" {
		dissect {
			mapping => { "message" => "DefaultApplic %{fld1} %{fld2} CWSCT0401I: Default application router has been initialized." }
			id => "msgParserId132"
			add_field => {
				"event_description" => "Default application router has been initialized."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "DefaultSecuri" {
		# MESSAGE DefaultSecuri
		# line in RSA: DefaultSecuri<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DefaultSecuri%{fld1}> %{agent} Entry" }
				id => "message-DefaultSecuri"
				add_field => {
				"event_description" => "DefaultSecuri Entry"
					"[event][id]" => "DefaultSecuri"
					"[rsa][message][id1]" => "DefaultSecuri"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DefaultSecuri:01
		# line in RSA: DefaultSecuri<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DefaultSecuri%{fld1}< %{agent} Exit" }
				id => "message-DefaultSecuri:01"
				add_field => {
				"event_description" => "DefaultSecuri Exit"
					"[event][id]" => "DefaultSecuri:01"
					"[rsa][message][id1]" => "DefaultSecuri:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DefaultSecuri:02
		# line in RSA: DefaultSecuri <fld1> <fld2> <<<action>> <info>,<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DefaultSecuri %{fld1} %{fld2} <%{action}> %{info},%{fld3}" }
				id => "message-DefaultSecuri:02"
				add_field => {
				"event_description" => "DefaultSecuri FilterChain"
					"[event][id]" => "DefaultSecuri:02"
					"[rsa][message][id1]" => "DefaultSecuri:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA: DiagnosticCon <fld1> <fld2> RASD0012I: Updating State Collection Spec <info>
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "DiagnosticCon %{fld1} %{fld2} RASD0012I: Updating State Collection Spec %{info}" }
			id => "msgParserId136"
			add_field => {
				"event_description" => "Updating State Collection Spec."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId137
	# line in RSA:  Database product name : <product>
	else if [logstash][msgparser][id] == "msgParserId137" {
		dissect {
			mapping => { "message" => "Database product name : %{product}" }
			id => "msgParserId137"
			add_field => {
				"event_description" => "WSRdbDataSour Database product name"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId138
	# line in RSA:  Database product version : <version>
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "Database product version : %{version}" }
			id => "msgParserId138"
			add_field => {
				"event_description" => "WSRdbDataSour Database product version"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId139
	# line in RSA:  JDBC driver name  : <product>
	else if [logstash][msgparser][id] == "msgParserId139" {
		dissect {
			mapping => { "message" => "JDBC driver name  : %{product}" }
			id => "msgParserId139"
			add_field => {
				"event_description" => "WSRdbDataSour JDBC driver name"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId140
	# line in RSA:  JDBC driver version  : <version>
	else if [logstash][msgparser][id] == "msgParserId140" {
		dissect {
			mapping => { "message" => "JDBC driver version  : %{version}" }
			id => "msgParserId140"
			add_field => {
				"event_description" => "WSRdbDataSour JDBC driver version"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId141
	# line in RSA: JDBC driver type  : "<info>"
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "JDBC driver type  : \"%{info}\"" }
			id => "msgParserId141"
			add_field => {
				"event_description" => "WSRdbDataSour JDBC driver type"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId142
	# line in RSA:  DataStoreHelper name is: <filename>
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "DataStoreHelper name is: %{filename}" }
			id => "msgParserId142"
			add_field => {
				"event_description" => "WSRdbDataSour JDBC driver version"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId143
	# line in RSA: Dynamic servlet caching is enabled
	else if [logstash][msgparser][id] == "msgParserId143" {
		dissect {
			mapping => { "message" => "Dynamic servlet caching is enabled" }
			id => "msgParserId143"
			add_field => {
				"event_description" => "Dynamic servlet caching is enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId144
	# line in RSA: WebSphere Dynamic Cache initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "WebSphere Dynamic Cache initialized successfully." }
			id => "msgParserId144"
			add_field => {
				"event_description" => "WebSphere Dynamic Cache initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId145
	# line in RSA: WebSphere Dynamic Cache instance named <info> initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "WebSphere Dynamic Cache instance named %{info} initialized successfully." }
			id => "msgParserId145"
			add_field => {
				"event_description" => "WebSphere Dynamic Cache instance initialized successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId146
	# line in RSA: Dynamic Cache (core cache) initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId146" {
		dissect {
			mapping => { "message" => "Dynamic Cache (core cache) initialized successfully." }
			id => "msgParserId146"
			add_field => {
				"event_description" => "Dynamic Cache (core cache) initialized successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId147
	# line in RSA: Dynamic Cache (object cache) initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId147" {
		dissect {
			mapping => { "message" => "Dynamic Cache (object cache) initialized successfully." }
			id => "msgParserId147"
			add_field => {
				"event_description" => "Dynamic Cache (object cache) initialized successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId148
	# line in RSA: The cache provider <info> is being used.
	else if [logstash][msgparser][id] == "msgParserId148" {
		dissect {
			mapping => { "message" => "The cache provider %{info} is being used." }
			id => "msgParserId148"
			add_field => {
				"event_description" => "The cache provider is being used."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId149
	# line in RSA: EJBContainerI <fld1> <fld2> CNTR0167I: The server is binding the <info>
	else if [logstash][msgparser][id] == "msgParserId149" {
		dissect {
			mapping => { "message" => "EJBContainerI %{fld1} %{fld2} CNTR0167I: The server is binding the %{info}" }
			id => "msgParserId149"
			add_field => {
				"event_description" => "The server is binding."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId150
	# line in RSA: enterprise    I <fld1> <info>
	else if [logstash][msgparser][id] == "msgParserId150" {
		dissect {
			mapping => { "message" => "enterprise    I %{fld1} %{info}" }
			id => "msgParserId150"
			add_field => {
				"event_description" => "The server is binding."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ExtendedJTATr" {
		# MESSAGE ExtendedJTATr
		# line in RSA: ExtendedJTATr<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ExtendedJTATr%{fld1}> %{agent} Entry" }
				id => "message-ExtendedJTATr"
				add_field => {
				"event_description" => "ExtendedJTATr Entry"
					"[event][id]" => "ExtendedJTATr"
					"[rsa][message][id1]" => "ExtendedJTATr"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ExtendedJTATr:01
		# line in RSA: ExtendedJTATr<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ExtendedJTATr%{fld1}< %{agent} Exit" }
				id => "message-ExtendedJTATr:01"
				add_field => {
				"event_description" => "ExtendedJTATr Exit"
					"[event][id]" => "ExtendedJTATr:01"
					"[rsa][message][id1]" => "ExtendedJTATr:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "FailureScopeC" {
		# MESSAGE FailureScopeC
		# line in RSA: FailureScopeC<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FailureScopeC%{fld1}> %{agent} Entry" }
				id => "message-FailureScopeC"
				add_field => {
				"event_description" => "FailureScopeC Entry"
					"[event][id]" => "FailureScopeC"
					"[rsa][message][id1]" => "FailureScopeC"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FailureScopeC:01
		# line in RSA: FailureScopeC<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FailureScopeC%{fld1}< %{agent} Exit" }
				id => "message-FailureScopeC:01"
				add_field => {
				"event_description" => "FailureScopeC Exit"
					"[event][id]" => "FailureScopeC:01"
					"[rsa][message][id1]" => "FailureScopeC:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FailureScopeC:02
		# line in RSA: FailureScopeC <fld1> { getPartnerLogTable | getRecoveryManager }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^FailureScopeC[\s]+(?<fld1>[^\s]*)[\s]+([\s]*getPartnerLogTable[\s]+|[\s]*getRecoveryManager[\s]+)$" }
				id => "message-FailureScopeC:02"
				add_field => {
				"event_description" => "FailureScopeC getPartnerLogTable or getRecoveryManager"
					"[event][id]" => "FailureScopeC:02"
					"[rsa][message][id1]" => "FailureScopeC:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "FastObjectPoo" {
		# MESSAGE FastObjectPoo
		# line in RSA: FastObjectPoo<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FastObjectPoo%{fld1}> %{agent} Entry" }
				id => "message-FastObjectPoo"
				add_field => {
				"event_description" => "FastObjectPoo Entry"
					"[event][id]" => "FastObjectPoo"
					"[rsa][message][id1]" => "FastObjectPoo"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FastObjectPoo:01
		# line in RSA: FastObjectPoo<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FastObjectPoo%{fld1}< %{agent} Exit" }
				id => "message-FastObjectPoo:01"
				add_field => {
				"event_description" => "FastObjectPoo Exit"
					"[event][id]" => "FastObjectPoo:01"
					"[rsa][message][id1]" => "FastObjectPoo:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FastObjectPoo:02
		# line in RSA: FastObjectPoo <fld1> getObject making new instance:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FastObjectPoo %{fld1} getObject making new instance:%{fld2}" }
				id => "message-FastObjectPoo:02"
				add_field => {
				"event_description" => "FastObjectPoo getObject making new instance"
					"[event][id]" => "FastObjectPoo:02"
					"[rsa][message][id1]" => "FastObjectPoo:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FastObjectPoo:03
		# line in RSA: FastObjectPoo <fld1> getObject object being initialized:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FastObjectPoo %{fld1} getObject object being initialized:%{fld2}" }
				id => "message-FastObjectPoo:03"
				add_field => {
				"event_description" => "FastObjectPoo getObject object being initialized"
					"[event][id]" => "FastObjectPoo:03"
					"[rsa][message][id1]" => "FastObjectPoo:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "FreePool" {
		# MESSAGE FreePool
		# line in RSA: FreePool<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FreePool%{fld1}> %{agent} Entry" }
				id => "message-FreePool"
				add_field => {
				"event_description" => "FreePool Entry"
					"[event][id]" => "FreePool"
					"[rsa][message][id1]" => "FreePool"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FreePool:01
		# line in RSA: FreePool<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FreePool%{fld1}< %{agent} Exit" }
				id => "message-FreePool:01"
				add_field => {
				"event_description" => "FreePool Exit"
					"[event][id]" => "FreePool:01"
					"[rsa][message][id1]" => "FreePool:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FreePool:02
		# line in RSA: FreePool <fld1> datasource:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FreePool %{fld1} datasource:%{fld2}" }
				id => "message-FreePool:02"
				add_field => {
				"event_description" => "FreePool datasource."
					"[event][id]" => "FreePool:02"
					"[rsa][message][id1]" => "FreePool:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FreePool:03
		# line in RSA: FreePool <fld1> Returning mcWrapper <fld2> Managed connection <fld3> State:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FreePool %{fld1} Returning mcWrapper %{fld2} Managed connection %{fld3} State:%{info}" }
				id => "message-FreePool:03"
				add_field => {
				"event_description" => "FreePool Returning mcWrapper managed connection state."
					"[event][id]" => "FreePool:03"
					"[rsa][message][id1]" => "FreePool:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA: GenericDataSt <fld1> <agent>:<fld3>
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "GenericDataSt %{fld1} %{agent}:%{fld3}" }
			id => "msgParserId164"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "GenericTimer" {
		# MESSAGE GenericTimer
		# line in RSA: GenericTimer<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericTimer%{fld1}> %{agent} Entry" }
				id => "message-GenericTimer"
				add_field => {
				"event_description" => "GenericTimer Entry"
					"[event][id]" => "GenericTimer"
					"[rsa][message][id1]" => "GenericTimer"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GenericTimer:01
		# line in RSA: GenericTimer<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericTimer%{fld1}< %{agent} Exit" }
				id => "message-GenericTimer:01"
				add_field => {
				"event_description" => "GenericTimer Exit"
					"[event][id]" => "GenericTimer:01"
					"[rsa][message][id1]" => "GenericTimer:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "GenericTimerM" {
		# MESSAGE GenericTimerM
		# line in RSA: GenericTimerM<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericTimerM%{fld1}> %{agent} Entry" }
				id => "message-GenericTimerM"
				add_field => {
				"event_description" => "GenericTimerM Entry"
					"[event][id]" => "GenericTimerM"
					"[rsa][message][id1]" => "GenericTimerM"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GenericTimerM:01
		# line in RSA: GenericTimerM <fld1> destroy - Begin synchronization block
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericTimerM %{fld1} destroy - Begin synchronization block" }
				id => "message-GenericTimerM:01"
				add_field => {
				"event_description" => "GenericTimerM destroy - Begin synchronization block"
					"[event][id]" => "GenericTimerM:01"
					"[rsa][message][id1]" => "GenericTimerM:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GenericTimerM:02
		# line in RSA: GenericTimerM<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericTimerM%{fld1}< %{agent} Exit" }
				id => "message-GenericTimerM:02"
				add_field => {
				"event_description" => "GenericTimerM Exit"
					"[event][id]" => "GenericTimerM:02"
					"[rsa][message][id1]" => "GenericTimerM:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GenericTimerM:03
		# line in RSA: GenericTimerM <fld1> destroy - End synchronization block
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericTimerM %{fld1} destroy - End synchronization block" }
				id => "message-GenericTimerM:03"
				add_field => {
				"event_description" => "GenericTimerM destroy - End synchronization block"
					"[event][id]" => "GenericTimerM:03"
					"[rsa][message][id1]" => "GenericTimerM:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "GetBalanceSer" {
		# MESSAGE GetBalanceSer
		# line in RSA: GetBalanceSer <fld1> <agent> performTask Account Number is required
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GetBalanceSer %{fld1} %{agent} performTask Account Number is required" }
				id => "message-GetBalanceSer"
				add_field => {
				"result" => "Account Number is required"
				"event_description" => "GetBalance performTask Account Number is required"
					"[event][id]" => "GetBalanceSer"
					"[rsa][message][id1]" => "GetBalanceSer"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GetBalanceSer:01
		# line in RSA: GetBalanceSer <fld1> <agent> performTask Unable to find the account
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GetBalanceSer %{fld1} %{agent} performTask Unable to find the account" }
				id => "message-GetBalanceSer:01"
				add_field => {
				"result" => "Unable to find the account"
				"event_description" => "GetBalance performTask Unable to find the account"
					"[event][id]" => "GetBalanceSer:01"
					"[rsa][message][id1]" => "GetBalanceSer:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GetBalanceSer:02
		# line in RSA: GetBalanceSer <fld1> performTask The Balance for the Account Number <fld2> is <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GetBalanceSer %{fld1} performTask The Balance for the Account Number %{fld2} is %{fld3}" }
				id => "message-GetBalanceSer:02"
				add_field => {
				"event_description" => "GetBalance performTask Balance for the account number."
					"[event][id]" => "GetBalanceSer:02"
					"[rsa][message][id1]" => "GetBalanceSer:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HandleList" {
		# MESSAGE HandleList
		# line in RSA: HandleList<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "HandleList%{fld1}> %{agent} Entry" }
				id => "message-HandleList"
				add_field => {
				"event_description" => "HandleList Entry"
					"[event][id]" => "HandleList"
					"[rsa][message][id1]" => "HandleList"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE HandleList:01
		# line in RSA: HandleList<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "HandleList%{fld1}< %{agent} Exit" }
				id => "message-HandleList:01"
				add_field => {
				"event_description" => "HandleList Exit"
					"[event][id]" => "HandleList:01"
					"[rsa][message][id1]" => "HandleList:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA:  The DCS Core Stack transport has been started for core group <group_object>.
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "The DCS Core Stack transport has been started for core group %{group_object}." }
			id => "msgParserId176"
			add_field => {
				"event_description" => "The DCS Core Stack transport has been started for core group"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId177
	# line in RSA: The Single Server <agent> Core Stack transport has been started for core group <group_object>.
	else if [logstash][msgparser][id] == "msgParserId177" {
		dissect {
			mapping => { "message" => "The Single Server %{agent} Core Stack transport has been started for core group %{group_object}." }
			id => "msgParserId177"
			add_field => {
				"event_description" => "The Single Server Core Stack transport has been started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId178
	# line in RSA: The Coordinator is an Active Coordinator for core group <group_object>.
	else if [logstash][msgparser][id] == "msgParserId178" {
		dissect {
			mapping => { "message" => "The Coordinator is an Active Coordinator for core group %{group_object}." }
			id => "msgParserId178"
			add_field => {
				"event_description" => "The Coordinator is an Active Coordinator for core group"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId179
	# line in RSA: The Coordinator is not an Active Coordinator for core group <group_object>.
	else if [logstash][msgparser][id] == "msgParserId179" {
		dissect {
			mapping => { "message" => "The Coordinator is not an Active Coordinator for core group %{group_object}." }
			id => "msgParserId179"
			add_field => {
				"event_description" => "The Coordinator is not an Active Coordinator for core group"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId180
	# line in RSA: The Internationalization service is { created | disabled } on <hostname>.
	else if [logstash][msgparser][id] == "msgParserId180" {
		grok {
			match => { "message" => "^The[\s]+Internationalization[\s]+service[\s]+is[\s]+([\s]*created[\s]+|[\s]*disabled[\s]+)[\s]+on[\s]+(?<hostname>[^\.]*)\.$" }
			id => "msgParserId180"
			add_field => {
				"event_description" => "Internationalization service created"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "InternalOracl" {
		# MESSAGE InternalOracl
		# line in RSA: InternalOracl I <filename> must be used when configuring to run with 11g database in this application server release.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "InternalOracl I %{filename} must be used when configuring to run with 11g database in this application server release." }
				id => "message-InternalOracl"
				add_field => {
					"[event][id]" => "InternalOracl"
					"[rsa][message][id1]" => "InternalOracl"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE InternalOracl:01
		# line in RSA: InternalOracl W <filename> You must use the Oracle11gDataStoreHelper class or a subclass of that data store helper when you configure a data source to use this JDBC driver: Oracle 11g JDBC driver
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "InternalOracl W %{filename} You must use the Oracle11gDataStoreHelper class or a subclass of that data store helper when you configure a data source to use this JDBC driver: Oracle 11g JDBC driver" }
				id => "message-InternalOracl:01"
				add_field => {
					"[event][id]" => "InternalOracl:01"
					"[rsa][message][id1]" => "InternalOracl:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId182
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId182" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId182"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId183
	# line in RSA: Shareable connection { MCWrapper id | [STALE]  MCWrapper id} <id>  Managed connection <fld1>  State:<result>
	else if [logstash][msgparser][id] == "msgParserId183" {
		grok {
			match => { "message" => "^Shareable[\s]+connection[\s]+([\s]*MCWrapper[\s]+id[\s]+|[\s]*\[STALE\][\s]+MCWrapper[\s]+id)[\s]+(?<id>[^\s]*)[\s]+Managed[\s]+connection[\s]+(?<fld1>[^\s]*)[\s]+State:(?<result>.*)$" }
			id => "msgParserId183"
			add_field => {
				"event_description" => "Shareable connection"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId184
	# line in RSA: Component-managed authentication alias not specified for connection factory or datasource <fld1>.
	else if [logstash][msgparser][id] == "msgParserId184" {
		dissect {
			mapping => { "message" => "Component-managed authentication alias not specified for connection factory or datasource %{fld1}." }
			id => "msgParserId184"
			add_field => {
				"event_description" => "Component-managed authentication alias not specified for connection factory or datasource"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId185
	# line in RSA: J2CModule <fld1> {begin|end}UseManagedConnection
	else if [logstash][msgparser][id] == "msgParserId185" {
		grok {
			match => { "message" => "^J2CModule[\s]+(?<fld1>[^\s]*)[\s]+(begin|end)UseManagedConnection$" }
			id => "msgParserId185"
			add_field => {
				"event_description" => "J2Module Begin or end UseMAnagedConnection."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "J2EEContext" {
		# MESSAGE J2EEContext
		# line in RSA: J2EEContext<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "J2EEContext%{fld1}> %{agent} Entry" }
				id => "message-J2EEContext"
				add_field => {
				"event_description" => "J2EEContext Entry"
					"[event][id]" => "J2EEContext"
					"[rsa][message][id1]" => "J2EEContext"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE J2EEContext:01
		# line in RSA: J2EEContext<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "J2EEContext%{fld1}< %{agent} Exit" }
				id => "message-J2EEContext:01"
				add_field => {
				"event_description" => "J2EEContext Exit"
					"[event][id]" => "J2EEContext:01"
					"[rsa][message][id1]" => "J2EEContext:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "J2EEServiceMa" {
		# MESSAGE J2EEServiceMa
		# line in RSA: J2EEServiceMa<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "J2EEServiceMa%{fld1}> %{agent} Entry" }
				id => "message-J2EEServiceMa"
				add_field => {
				"event_description" => "J2EEServiceMa Entry"
					"[event][id]" => "J2EEServiceMa"
					"[rsa][message][id1]" => "J2EEServiceMa"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE J2EEServiceMa:01
		# line in RSA: J2EEServiceMa<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "J2EEServiceMa%{fld1}< %{agent} Exit" }
				id => "message-J2EEServiceMa:01"
				add_field => {
				"event_description" => "J2EEServiceMa Exit"
					"[event][id]" => "J2EEServiceMa:01"
					"[rsa][message][id1]" => "J2EEServiceMa:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE J2EEServiceMa:02
		# line in RSA: J2EEServiceMa <fld1> Popping <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "J2EEServiceMa %{fld1} Popping %{agent}" }
				id => "message-J2EEServiceMa:02"
				add_field => {
				"event_description" => "J2EEServiceMa Popping"
					"[event][id]" => "J2EEServiceMa:02"
					"[rsa][message][id1]" => "J2EEServiceMa:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE J2EEServiceMa:03
		# line in RSA: J2EEServiceMa <fld1> Pushing <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "J2EEServiceMa %{fld1} Pushing %{agent}" }
				id => "message-J2EEServiceMa:03"
				add_field => {
				"event_description" => "J2EEServiceMa Pushing"
					"[event][id]" => "J2EEServiceMa:03"
					"[rsa][message][id1]" => "J2EEServiceMa:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JavaCompConte" {
		# MESSAGE JavaCompConte
		# line in RSA: JavaCompConte<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JavaCompConte%{fld1}> %{agent} Entry" }
				id => "message-JavaCompConte"
				add_field => {
				"event_description" => "JavaCompConte Entry"
					"[event][id]" => "JavaCompConte"
					"[rsa][message][id1]" => "JavaCompConte"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JavaCompConte:01
		# line in RSA: JavaCompConte<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JavaCompConte%{fld1}< %{agent} Exit" }
				id => "message-JavaCompConte:01"
				add_field => {
				"event_description" => "JavaCompConte Exit"
					"[event][id]" => "JavaCompConte:01"
					"[rsa][message][id1]" => "JavaCompConte:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JavaCompConte:02
		# line in RSA: JavaCompConte <fld1> Getting ClassLoader:<agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JavaCompConte %{fld1} Getting ClassLoader:%{agent}" }
				id => "message-JavaCompConte:02"
				add_field => {
				"event_description" => "JavaCompConte Getting ClassLoader"
					"[event][id]" => "JavaCompConte:02"
					"[rsa][message][id1]" => "JavaCompConte:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JavaCompConte:03
		# line in RSA: JavaCompConte <fld1> Setting ClassLoader:<agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JavaCompConte %{fld1} Setting ClassLoader:%{agent}" }
				id => "message-JavaCompConte:03"
				add_field => {
				"event_description" => "JavaCompConte Setting ClassLoader"
					"[event][id]" => "JavaCompConte:03"
					"[rsa][message][id1]" => "JavaCompConte:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JavaCompConte:04
		# line in RSA: JavaCompConte <fld1> Unable to set ClassLoader.  J2EEName is null
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JavaCompConte %{fld1} Unable to set ClassLoader.  J2EEName is null" }
				id => "message-JavaCompConte:04"
				add_field => {
				"event_description" => "Unable to set ClassLoader.J2EEName is null."
					"[event][id]" => "JavaCompConte:04"
					"[rsa][message][id1]" => "JavaCompConte:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JMXBroadcaste" {
		# MESSAGE JMXBroadcaste
		# line in RSA: JMXBroadcaste<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JMXBroadcaste%{fld1}> %{agent} Entry" }
				id => "message-JMXBroadcaste"
				add_field => {
				"event_description" => "JMXBroadcaste Entry"
					"[event][id]" => "JMXBroadcaste"
					"[rsa][message][id1]" => "JMXBroadcaste"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JMXBroadcaste:01
		# line in RSA: JMXBroadcaste<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JMXBroadcaste%{fld1}< %{agent} Exit" }
				id => "message-JMXBroadcaste:01"
				add_field => {
				"event_description" => "JMXBroadcaste Exit"
					"[event][id]" => "JMXBroadcaste:01"
					"[rsa][message][id1]" => "JMXBroadcaste:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JMXBroadcaste:02
		# line in RSA: JMXBroadcaste <fld1> Firing event:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JMXBroadcaste %{fld1} Firing event:%{fld2}" }
				id => "message-JMXBroadcaste:02"
				add_field => {
				"event_description" => "JMXBroadcaste Firing Event."
					"[event][id]" => "JMXBroadcaste:02"
					"[rsa][message][id1]" => "JMXBroadcaste:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId200
	# line in RSA:  Security configuration initialized
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "Security configuration initialized" }
			id => "msgParserId200"
			add_field => {
				"event_description" => "Security configuration initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId201
	# line in RSA:  Authentication mechanism: <disposition>
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "Authentication mechanism: %{disposition}" }
			id => "msgParserId201"
			add_field => {
				"event_description" => "Authentication mechanism selected"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId202
	# line in RSA:  Principal name: { <hostip>:<network_port>/ | <hostname> }
	else if [logstash][msgparser][id] == "msgParserId202" {
		grok {
			match => { "message" => "^[\s]*Principal[\s]+name:[\s]+([\s]*(?<hostip>[^:]*):(?<network_port>[^/]*)/[\s]+|[\s]*(?<hostname>[^\s]*)[\s]+)$" }
			id => "msgParserId202"
			add_field => {
				"event_description" => "Principal name"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId203
	# line in RSA:  Security connection interceptor initialized
	else if [logstash][msgparser][id] == "msgParserId203" {
		dissect {
			mapping => { "message" => "Security connection interceptor initialized" }
			id => "msgParserId203"
			add_field => {
				"event_description" => "Security connection interceptor initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId204
	# line in RSA:  Client request interceptor registered
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "Client request interceptor registered" }
			id => "msgParserId204"
			add_field => {
				"event_description" => "Client request interceptor registered"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId205
	# line in RSA:  Server request interceptor registered.
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "Server request interceptor registered." }
			id => "msgParserId205"
			add_field => {
				"event_description" => "Server request interceptor registered"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId206
	# line in RSA:  IOR interceptor registered
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "IOR interceptor registered" }
			id => "msgParserId206"
			add_field => {
				"event_description" => "IOR interceptor registered"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "JTAResourceBa" {
		# MESSAGE JTAResourceBa
		# line in RSA: JTAResourceBa<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAResourceBa%{fld1}> %{agent} Entry" }
				id => "message-JTAResourceBa"
				add_field => {
				"event_description" => "JTAResourceBa Entry"
					"[event][id]" => "JTAResourceBa"
					"[rsa][message][id1]" => "JTAResourceBa"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JTAResourceBa:01
		# line in RSA: JTAResourceBa<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAResourceBa%{fld1}< %{agent} Exit" }
				id => "message-JTAResourceBa:01"
				add_field => {
				"event_description" => "JTAResourceBa Exit"
					"[event][id]" => "JTAResourceBa:01"
					"[rsa][message][id1]" => "JTAResourceBa:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JTAResourceBa:02
		# line in RSA: JTAResourceBa <fld1> xa_start with flag: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAResourceBa %{fld1} xa_start with flag: %{fld2}" }
				id => "message-JTAResourceBa:02"
				add_field => {
				"event_description" => "JTAResourceBa xa_start with flag"
					"[event][id]" => "JTAResourceBa:02"
					"[rsa][message][id1]" => "JTAResourceBa:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JTAServiceWit" {
		# MESSAGE JTAServiceWit
		# line in RSA: JTAServiceWit<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAServiceWit%{fld1}> %{agent} Entry" }
				id => "message-JTAServiceWit"
				add_field => {
				"event_description" => "JTAServiceWit Entry"
					"[event][id]" => "JTAServiceWit"
					"[rsa][message][id1]" => "JTAServiceWit"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JTAServiceWit:01
		# line in RSA: JTAServiceWit<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAServiceWit%{fld1}< %{agent} Exit" }
				id => "message-JTAServiceWit:01"
				add_field => {
				"event_description" => "JTAServiceWit Exit"
					"[event][id]" => "JTAServiceWit:01"
					"[rsa][message][id1]" => "JTAServiceWit:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JTAXAResource" {
		# MESSAGE JTAXAResource
		# line in RSA: JTAXAResource<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAXAResource%{fld1}> %{agent} Entry" }
				id => "message-JTAXAResource"
				add_field => {
				"event_description" => "JTAXAResource Entry"
					"[event][id]" => "JTAXAResource"
					"[rsa][message][id1]" => "JTAXAResource"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE JTAXAResource:01
		# line in RSA: JTAXAResource<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "JTAXAResource%{fld1}< %{agent} Exit" }
				id => "message-JTAXAResource:01"
				add_field => {
				"event_description" => "JTAXAResource Exit"
					"[event][id]" => "JTAXAResource:01"
					"[rsa][message][id1]" => "JTAXAResource:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId214
	# line in RSA: The Connection Manager received a fatal connection error from the Resource Adapter for resource <fld1>. The exception is: <info>
	else if [logstash][msgparser][id] == "msgParserId214" {
		dissect {
			mapping => { "message" => "The Connection Manager received a fatal connection error from the Resource Adapter for resource %{fld1}. The exception is: %{info}" }
			id => "msgParserId214"
			add_field => {
				"event_description" => "The Connection Manager received a fatal connection error from the Resource Adapter"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "LeaseAlarm" {
		# MESSAGE LeaseAlarm
		# line in RSA: LeaseAlarm<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseAlarm%{fld1}> %{agent} Entry" }
				id => "message-LeaseAlarm"
				add_field => {
				"event_description" => "LeaseAlarm Entry"
					"[event][id]" => "LeaseAlarm"
					"[rsa][message][id1]" => "LeaseAlarm"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LeaseAlarm:01
		# line in RSA: LeaseAlarm<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseAlarm%{fld1}< %{agent} Exit" }
				id => "message-LeaseAlarm:01"
				add_field => {
				"event_description" => "LeaseAlarm Exit"
					"[event][id]" => "LeaseAlarm:01"
					"[rsa][message][id1]" => "LeaseAlarm:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LeaseAlarm:02
		# line in RSA: LeaseAlarm <fld1> Attempting to renew lease.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseAlarm %{fld1} Attempting to renew lease." }
				id => "message-LeaseAlarm:02"
				add_field => {
				"event_description" => "LeaseAlarm Attempting to renew lease"
					"[event][id]" => "LeaseAlarm:02"
					"[rsa][message][id1]" => "LeaseAlarm:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LeaseAlarm:03
		# line in RSA: LeaseAlarm <fld1> Lease renewed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseAlarm %{fld1} Lease renewed." }
				id => "message-LeaseAlarm:03"
				add_field => {
				"event_description" => "LeaseAlarm Lease renewed"
					"[event][id]" => "LeaseAlarm:03"
					"[rsa][message][id1]" => "LeaseAlarm:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LeaseImpl" {
		# MESSAGE LeaseImpl
		# line in RSA: LeaseImpl<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseImpl%{fld1}> %{agent} Entry" }
				id => "message-LeaseImpl"
				add_field => {
				"event_description" => "LeaseImpl Entry"
					"[event][id]" => "LeaseImpl"
					"[rsa][message][id1]" => "LeaseImpl"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LeaseImpl:01
		# line in RSA: LeaseImpl<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseImpl%{fld1}< %{agent} Exit" }
				id => "message-LeaseImpl:01"
				add_field => {
				"event_description" => "LeaseImpl Exit"
					"[event][id]" => "LeaseImpl:01"
					"[rsa][message][id1]" => "LeaseImpl:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LeaseStoreImp" {
		# MESSAGE LeaseStoreImp
		# line in RSA: LeaseStoreImp<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseStoreImp%{fld1}> %{agent} Entry" }
				id => "message-LeaseStoreImp"
				add_field => {
				"event_description" => "LeaseStoreImp Entry"
					"[event][id]" => "LeaseStoreImp"
					"[rsa][message][id1]" => "LeaseStoreImp"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LeaseStoreImp:01
		# line in RSA: LeaseStoreImp<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LeaseStoreImp%{fld1}< %{agent} Exit" }
				id => "message-LeaseStoreImp:01"
				add_field => {
				"event_description" => "LeaseStoreImp Exit"
					"[event][id]" => "LeaseStoreImp:01"
					"[rsa][message][id1]" => "LeaseStoreImp:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LocalTIDTable" {
		# MESSAGE LocalTIDTable
		# line in RSA: LocalTIDTable<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTIDTable%{fld1}> %{agent} Entry" }
				id => "message-LocalTIDTable"
				add_field => {
				"event_description" => "LocalTIDTable Entry"
					"[event][id]" => "LocalTIDTable"
					"[rsa][message][id1]" => "LocalTIDTable"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTIDTable:01
		# line in RSA: LocalTIDTable<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTIDTable%{fld1}< %{agent} Exit" }
				id => "message-LocalTIDTable:01"
				add_field => {
				"event_description" => "LocalTIDTable Exit"
					"[event][id]" => "LocalTIDTable:01"
					"[rsa][message][id1]" => "LocalTIDTable:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LocalTranCoor" {
		# MESSAGE LocalTranCoor
		# line in RSA: LocalTranCoor<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCoor%{fld1}> %{agent} Entry" }
				id => "message-LocalTranCoor"
				add_field => {
				"event_description" => "LocalTranCoor Entry"
					"[event][id]" => "LocalTranCoor"
					"[rsa][message][id1]" => "LocalTranCoor"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTranCoor:01
		# line in RSA: LocalTranCoor<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCoor%{fld1}< %{agent} Exit" }
				id => "message-LocalTranCoor:01"
				add_field => {
				"event_description" => "LocalTranCoor Exit"
					"[event][id]" => "LocalTranCoor:01"
					"[rsa][message][id1]" => "LocalTranCoor:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTranCoor:02
		# line in RSA: LocalTranCoor <fld1> getRollbackOnly: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCoor %{fld1} getRollbackOnly: %{fld2}" }
				id => "message-LocalTranCoor:02"
				add_field => {
				"event_description" => "LocalTranCoor getRollbackOnly"
					"[event][id]" => "LocalTranCoor:02"
					"[rsa][message][id1]" => "LocalTranCoor:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTranCoor:03
		# line in RSA: LocalTranCoor <fld1>=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCoor %{fld1}=%{fld3}" }
				id => "message-LocalTranCoor:03"
				add_field => {
				"event_description" => "LocalTranCoor message."
					"[event][id]" => "LocalTranCoor:03"
					"[rsa][message][id1]" => "LocalTranCoor:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTranCoor:04
		# line in RSA: LocalTranCoor <fld1> Completed LTC is on thread so set current LTC to null
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCoor %{fld1} Completed LTC is on thread so set current LTC to null" }
				id => "message-LocalTranCoor:04"
				add_field => {
				"event_description" => "LocalTranCoor Completed LTC is on thread so set current LTC to null."
					"[event][id]" => "LocalTranCoor:04"
					"[rsa][message][id1]" => "LocalTranCoor:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LocalTranCurr" {
		# MESSAGE LocalTranCurr
		# line in RSA: LocalTranCurr<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCurr%{fld1}> %{agent} Entry" }
				id => "message-LocalTranCurr"
				add_field => {
				"event_description" => "LocalTranCurr Entry"
					"[event][id]" => "LocalTranCurr"
					"[rsa][message][id1]" => "LocalTranCurr"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTranCurr:01
		# line in RSA: LocalTranCurr<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCurr%{fld1}< %{agent} Exit" }
				id => "message-LocalTranCurr:01"
				add_field => {
				"event_description" => "LocalTranCurr Exit"
					"[event][id]" => "LocalTranCurr:01"
					"[rsa][message][id1]" => "LocalTranCurr:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTranCurr:02
		# line in RSA: LocalTranCurr <fld1> setCoordinator:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTranCurr %{fld1} setCoordinator:%{fld2}" }
				id => "message-LocalTranCurr:02"
				add_field => {
				"event_description" => "LocalTranCurr setCoordinator."
					"[event][id]" => "LocalTranCurr:02"
					"[rsa][message][id1]" => "LocalTranCurr:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LocalTransact" {
		# MESSAGE LocalTransact
		# line in RSA: LocalTransact<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact%{fld1}> %{agent} Entry" }
				id => "message-LocalTransact"
				add_field => {
				"event_description" => "LocalTransact Entry"
					"[event][id]" => "LocalTransact"
					"[rsa][message][id1]" => "LocalTransact"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:01
		# line in RSA: LocalTransact<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact%{fld1}< %{agent} Exit" }
				id => "message-LocalTransact:01"
				add_field => {
				"event_description" => "LocalTransact Exit"
					"[event][id]" => "LocalTransact:01"
					"[rsa][message][id1]" => "LocalTransact:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:02
		# line in RSA: LocalTransact <fld1> calling delistFromCleanup(<agent>)<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact %{fld1} calling delistFromCleanup(%{agent})%{fld2}" }
				id => "message-LocalTransact:02"
				add_field => {
				"event_description" => "LocalTransact calling delistFromCleanup"
					"[event][id]" => "LocalTransact:02"
					"[rsa][message][id1]" => "LocalTransact:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:03
		# line in RSA: LocalTransact <fld1> delisting <agent> with coordinator <fld2>;<info>;
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact %{fld1} delisting %{agent} with coordinator %{fld2};%{info};" }
				id => "message-LocalTransact:03"
				add_field => {
				"event_description" => "LocalTransact delisting with coordinator"
					"[event][id]" => "LocalTransact:03"
					"[rsa][message][id1]" => "LocalTransact:03"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:04
		# line in RSA: LocalTransact <fld1> enlisting <agent> with coordinator <fld2>;<info>;
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact %{fld1} enlisting %{agent} with coordinator %{fld2};%{info};" }
				id => "message-LocalTransact:04"
				add_field => {
				"event_description" => "LocalTransact enlisting with coordinator"
					"[event][id]" => "LocalTransact:04"
					"[rsa][message][id1]" => "LocalTransact:04"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:05
		# line in RSA: LocalTransact <fld1> Releasing the connection to the pool.<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact %{fld1} Releasing the connection to the pool.%{info}" }
				id => "message-LocalTransact:05"
				add_field => {
				"event_description" => "LocalTransact Releasing the connection to the pool"
					"[event][id]" => "LocalTransact:05"
					"[rsa][message][id1]" => "LocalTransact:05"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:06
		# line in RSA: LocalTransact <fld1> Using transaction <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact %{fld1} Using transaction %{fld2}" }
				id => "message-LocalTransact:06"
				add_field => {
				"event_description" => "LocalTransact Using transaction"
					"[event][id]" => "LocalTransact:06"
					"[rsa][message][id1]" => "LocalTransact:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LocalTransact:07
		# line in RSA: LocalTransact <fld1> <fld2>: <action>, within transaction branch ID <fld3> of resource pool <pool_name>, caught <fld4>: <fld5>: <result>. <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LocalTransact %{fld1} %{fld2}: %{action}, within transaction branch ID %{fld3} of resource pool %{pool_name}, caught %{fld4}: %{fld5}: %{result}. %{fld6}" }
				id => "message-LocalTransact:07"
				add_field => {
				"event_description" => "LocalTransact Method rollback, within transaction branch ID"
					"[event][id]" => "LocalTransact:07"
					"[rsa][message][id1]" => "LocalTransact:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LongObjectHas" {
		# MESSAGE LongObjectHas
		# line in RSA: LongObjectHas<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LongObjectHas%{fld1}> %{agent} Entry" }
				id => "message-LongObjectHas"
				add_field => {
				"event_description" => "LongObjectHas Entry"
					"[event][id]" => "LongObjectHas"
					"[rsa][message][id1]" => "LongObjectHas"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LongObjectHas:01
		# line in RSA: LongObjectHas<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LongObjectHas%{fld1}< %{agent} Exit" }
				id => "message-LongObjectHas:01"
				add_field => {
				"event_description" => "LongObjectHas Exit"
					"[event][id]" => "LongObjectHas:01"
					"[rsa][message][id1]" => "LongObjectHas:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE LongObjectHas:02
		# line in RSA: LongObjectHas <fld1> Entry found in map - removing
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "LongObjectHas %{fld1} Entry found in map - removing" }
				id => "message-LongObjectHas:02"
				add_field => {
				"event_description" => "LongObjectHas Entry found in map - removing"
					"[event][id]" => "LongObjectHas:02"
					"[rsa][message][id1]" => "LongObjectHas:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId244
	# line in RSA:  ManagedObject <space> I <space> Processing extension point <application>
	else if [logstash][msgparser][id] == "msgParserId244" {
		dissect {
			mapping => { "message" => "ManagedObject %{space} I %{space} Processing extension point %{application}" }
			id => "msgParserId244"
			add_field => {
				"event_description" => "Processing extension point"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "MCWrapper" {
		# MESSAGE MCWrapper
		# line in RSA: MCWrapper<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MCWrapper%{fld1}> %{agent} Entry" }
				id => "message-MCWrapper"
				add_field => {
				"event_description" => "MCWrapper Entry"
					"[event][id]" => "MCWrapper"
					"[rsa][message][id1]" => "MCWrapper"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MCWrapper:01
		# line in RSA: MCWrapper<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MCWrapper%{fld1}< %{agent} Exit" }
				id => "message-MCWrapper:01"
				add_field => {
				"event_description" => "MCWrapper Exit"
					"[event][id]" => "MCWrapper:01"
					"[rsa][message][id1]" => "MCWrapper:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MCWrapper:02
		# line in RSA: MCWrapper <fld1> Calling <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MCWrapper %{fld1} Calling %{fld2}" }
				id => "message-MCWrapper:02"
				add_field => {
				"event_description" => "MCWrapper Calling method"
					"[event][id]" => "MCWrapper:02"
					"[rsa][message][id1]" => "MCWrapper:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MCWrapper:03
		# line in RSA: MCWrapper <fld1> InstanceOf DissociatableManagedConnection is <fld2> In ConnectionManager <agent> Managed connection <fld3> State:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MCWrapper %{fld1} InstanceOf DissociatableManagedConnection is %{fld2} In ConnectionManager %{agent} Managed connection %{fld3} State:%{info}" }
				id => "message-MCWrapper:03"
				add_field => {
				"event_description" => "MCWrapper InstanceOf DissociatableManagedConnection Managed connection"
					"[event][id]" => "MCWrapper:03"
					"[rsa][message][id1]" => "MCWrapper:03"
					"[event][categoryid]" => "1701030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MCWrapper:04
		# line in RSA: MCWrapper <fld1> involvedInTransaction:<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MCWrapper %{fld1} involvedInTransaction:%{fld3}" }
				id => "message-MCWrapper:04"
				add_field => {
				"event_description" => "MCWrapper involvedInTransaction."
					"[event][id]" => "MCWrapper:04"
					"[rsa][message][id1]" => "MCWrapper:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MCWrapper:05
		# line in RSA: MCWrapper <fld1> Returned from <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MCWrapper %{fld1} Returned from %{fld2}" }
				id => "message-MCWrapper:05"
				add_field => {
				"event_description" => "MCWrapper Returned from method"
					"[event][id]" => "MCWrapper:05"
					"[rsa][message][id1]" => "MCWrapper:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "MEOwnerTable" {
		# MESSAGE MEOwnerTable
		# line in RSA: MEOwnerTable<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MEOwnerTable%{fld1}> %{agent} Entry" }
				id => "message-MEOwnerTable"
				add_field => {
				"event_description" => "MEOwnerTable Entry"
					"[event][id]" => "MEOwnerTable"
					"[rsa][message][id1]" => "MEOwnerTable"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MEOwnerTable:01
		# line in RSA: MEOwnerTable<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MEOwnerTable%{fld1}< %{agent} Exit" }
				id => "message-MEOwnerTable:01"
				add_field => {
				"event_description" => "MEOwnerTable Exit"
					"[event][id]" => "MEOwnerTable:01"
					"[rsa][message][id1]" => "MEOwnerTable:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE MEOwnerTable:02
		# line in RSA: MEOwnerTable <fld1>  [<interface>] <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "MEOwnerTable %{fld1}  [%{interface}] %{fld2}" }
				id => "message-MEOwnerTable:02"
				add_field => {
				"event_description" => "MEOwnerTable select command executed."
					"[event][id]" => "MEOwnerTable:02"
					"[rsa][message][id1]" => "MEOwnerTable:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId254
	# line in RSA: ModuleDeploye I <fld1> deploy Deploying module: <info>
	else if [logstash][msgparser][id] == "msgParserId254" {
		dissect {
			mapping => { "message" => "ModuleDeploye I %{fld1} deploy Deploying module: %{info}" }
			id => "msgParserId254"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId255
	# line in RSA:  Name server available on bootstrap port <network_port>.
	else if [logstash][msgparser][id] == "msgParserId255" {
		dissect {
			mapping => { "message" => "Name server available on bootstrap port %{network_port}." }
			id => "msgParserId255"
			add_field => {
				"event_description" => "Name server available on bootstrap port."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ObjectPoolPmi" {
		# MESSAGE ObjectPoolPmi
		# line in RSA: ObjectPoolPmi<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ObjectPoolPmi%{fld1}> %{agent} Entry" }
				id => "message-ObjectPoolPmi"
				add_field => {
				"event_description" => "ObjectPoolPmi Entry"
					"[event][id]" => "ObjectPoolPmi"
					"[rsa][message][id1]" => "ObjectPoolPmi"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE ObjectPoolPmi:01
		# line in RSA: ObjectPoolPmi <fld1> objectCreated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ObjectPoolPmi %{fld1} objectCreated" }
				id => "message-ObjectPoolPmi:01"
				add_field => {
				"event_description" => "ObjectPoolPmi objectCreated"
					"[event][id]" => "ObjectPoolPmi:01"
					"[rsa][message][id1]" => "ObjectPoolPmi:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId258
	# line in RSA: Object Pool Manager service is disabled.
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "Object Pool Manager service is disabled." }
			id => "msgParserId258"
			add_field => {
				"event_description" => "Object Pool Manager service disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId259
	# line in RSA: The Object Pool service started successfully.
	else if [logstash][msgparser][id] == "msgParserId259" {
		dissect {
			mapping => { "message" => "The Object Pool service started successfully." }
			id => "msgParserId259"
			add_field => {
				"event_description" => "The Object Pool service started successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId260
	# line in RSA: Cannot create listener thread. Exception=<fld1>.
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "Cannot create listener thread. Exception=%{fld1}." }
			id => "msgParserId260"
			add_field => {
				"event_description" => "Cannot create listener thread"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId261
	# line in RSA: order <fld1> Finalization process unable to login, process ending: <fld2>
	else if [logstash][msgparser][id] == "msgParserId261" {
		dissect {
			mapping => { "message" => "order %{fld1} Finalization process unable to login, process ending: %{fld2}" }
			id => "msgParserId261"
			add_field => {
				"event_description" => "order E Finalization process unable to login"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "PartnerLogTab" {
		# MESSAGE PartnerLogTab
		# line in RSA: PartnerLogTab<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PartnerLogTab%{fld1}> %{agent} Entry" }
				id => "message-PartnerLogTab"
				add_field => {
				"event_description" => "PartnerLogTab Entry"
					"[event][id]" => "PartnerLogTab"
					"[rsa][message][id1]" => "PartnerLogTab"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PartnerLogTab:01
		# line in RSA: PartnerLogTab<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PartnerLogTab%{fld1}< %{agent} Exit" }
				id => "message-PartnerLogTab:01"
				add_field => {
				"event_description" => "PartnerLogTab Exit"
					"[event][id]" => "PartnerLogTab:01"
					"[rsa][message][id1]" => "PartnerLogTab:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "persist" {
		# MESSAGE persist
		# line in RSA: persist       I    LOGINHELPER:login:  { with userId was successful | with userId <username> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^persist[\s]+I[\s]+LOGINHELPER:login:[\s]+([\s]*with[\s]+userId[\s]+was[\s]+successful[\s]+|[\s]*with[\s]+userId[\s]+(?<username>[^\s]*)[\s]+)$" }
				id => "message-persist"
				add_field => {
				"event_description" => "LOGINHELPER: Login"
					"[event][id]" => "persist"
					"[rsa][message][id1]" => "persist"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE persist:01
		# line in RSA: persist       I    LOGINHELPER:getEmployee: { Going to retrieve <fld1> Details using userId <username> | Employee retrieval is complete. }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^persist[\s]+I[\s]+LOGINHELPER:getEmployee:[\s]+([\s]*Going[\s]+to[\s]+retrieve[\s]+(?<fld1>[^\s]*)[\s]+Details[\s]+using[\s]+userId[\s]+(?<username>[^\s]*)[\s]+|[\s]*Employee[\s]+retrieval[\s]+is[\s]+complete\.[\s]+)$" }
				id => "message-persist:01"
				add_field => {
				"event_description" => "LOGINHELPER: getEmployee"
					"[event][id]" => "persist:01"
					"[rsa][message][id1]" => "persist:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE persist:02
		# line in RSA: persist       I    LOGINHELPER:getProperties:  { Going to retrieve MDR Properties. | *** TIMING *** MDR retrieval for <username> took <fld1> ms. }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^persist[\s]+I[\s]+LOGINHELPER:getProperties:[\s]+([\s]*Going[\s]+to[\s]+retrieve[\s]+MDR[\s]+Properties\.[\s]+|[\s]*\*\*\*[\s]+TIMING[\s]+\*\*\*[\s]+MDR[\s]+retrieval[\s]+for[\s]+(?<username>[^\s]*)[\s]+took[\s]+(?<fld1>[^\s]*)[\s]+ms\.[\s]+)$" }
				id => "message-persist:02"
				add_field => {
				"event_description" => "LOGINHELPER: getProperties"
					"[event][id]" => "persist:02"
					"[rsa][message][id1]" => "persist:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId267
	# line in RSA:  { The plug-in configuration service | Plug-in configuration service is } started successfully.
	else if [logstash][msgparser][id] == "msgParserId267" {
		grok {
			match => { "message" => "^[\s]*([\s]*The[\s]+plug\-in[\s]+configuration[\s]+service[\s]+|[\s]*Plug\-in[\s]+configuration[\s]+service[\s]+is[\s]+)[\s]+started[\s]+successfully\.$" }
			id => "msgParserId267"
			add_field => {
				"action" => "plug-in configuration service started successfully"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId268
	# line in RSA: PMI is enabled
	else if [logstash][msgparser][id] == "msgParserId268" {
		dissect {
			mapping => { "message" => "PMI is enabled" }
			id => "msgParserId268"
			add_field => {
				"event_description" => "PMI enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "PoolManager" {
		# MESSAGE PoolManager
		# line in RSA: PoolManager<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PoolManager%{fld1}> %{agent} Entry" }
				id => "message-PoolManager"
				add_field => {
				"event_description" => "PoolManager Entry"
					"[event][id]" => "PoolManager"
					"[rsa][message][id1]" => "PoolManager"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PoolManager:01
		# line in RSA: PoolManager<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PoolManager%{fld1}< %{agent} Exit" }
				id => "message-PoolManager:01"
				add_field => {
				"event_description" => "PoolManager Exit"
					"[event][id]" => "PoolManager:01"
					"[rsa][message][id1]" => "PoolManager:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PoolManager:02
		# line in RSA: PoolManager <fld1> computeHashCode<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PoolManager %{fld1} computeHashCode%{fld2}" }
				id => "message-PoolManager:02"
				add_field => {
				"event_description" => "PoolManager computeHashCode."
					"[event][id]" => "PoolManager:02"
					"[rsa][message][id1]" => "PoolManager:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PoolManager:03
		# line in RSA: PoolManager <fld1> {release|reserve}()<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^PoolManager[\s]+(?<fld1>[^\s]*)[\s]+(release|reserve)\(\)(?<fld2>.*)$" }
				id => "message-PoolManager:03"
				add_field => {
				"event_description" => "PoolManager release or reserve resource."
					"[event][id]" => "PoolManager:03"
					"[rsa][message][id1]" => "PoolManager:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PoolManager:04
		# line in RSA: PoolManager <fld1> Subject's hash code is <fld2> and the CRI's hash code is <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PoolManager %{fld1} Subject's hash code is %{fld2} and the CRI's hash code is %{fld3}" }
				id => "message-PoolManager:04"
				add_field => {
				"event_description" => "PoolManager hashcode assignment."
					"[event][id]" => "PoolManager:04"
					"[rsa][message][id1]" => "PoolManager:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PoolManager:05
		# line in RSA: PoolManager <fld1> Searching for shared connection in partition <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PoolManager %{fld1} Searching for shared connection in partition %{fld2}" }
				id => "message-PoolManager:05"
				add_field => {
				"event_description" => "PoolManager Searching for shared connection"
					"[event][id]" => "PoolManager:05"
					"[rsa][message][id1]" => "PoolManager:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE PoolManager:06
		# line in RSA: PoolManager <fld1> input parms...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PoolManager %{fld1} input parms..." }
				id => "message-PoolManager:06"
				add_field => {
				"event_description" => "PoolManager input parms."
					"[event][id]" => "PoolManager:06"
					"[rsa][message][id1]" => "PoolManager:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId276
	# line in RSA: ProviderTrack <fld1> <fld2> FFDC1007I: FFDC Provider Installed: <info>
	else if [logstash][msgparser][id] == "msgParserId276" {
		dissect {
			mapping => { "message" => "ProviderTrack %{fld1} %{fld2} FFDC1007I: FFDC Provider Installed: %{info}" }
			id => "msgParserId276"
			add_field => {
				"event_description" => "FFDC Provider Installed."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "RecoveryManag" {
		# MESSAGE RecoveryManag
		# line in RSA: RecoveryManag<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RecoveryManag%{fld1}> %{agent} Entry" }
				id => "message-RecoveryManag"
				add_field => {
				"event_description" => "RecoveryManag Entry"
					"[event][id]" => "RecoveryManag"
					"[rsa][message][id1]" => "RecoveryManag"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RecoveryManag:01
		# line in RSA: RecoveryManag<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RecoveryManag%{fld1}< %{agent} Exit" }
				id => "message-RecoveryManag:01"
				add_field => {
				"event_description" => "RecoveryManag Exit"
					"[event][id]" => "RecoveryManag:01"
					"[rsa][message][id1]" => "RecoveryManag:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RecoveryManag:02
		# line in RSA: RecoveryManag <fld1> <fld2>: Transaction recovery for <obj_server> initiated with server uuid <fld3> and restart <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RecoveryManag %{fld1} %{fld2}: Transaction recovery for %{obj_server} initiated with server uuid %{fld3} and restart %{fld4}" }
				id => "message-RecoveryManag:02"
				add_field => {
				"event_description" => "Transaction recovery"
					"[event][id]" => "RecoveryManag:02"
					"[rsa][message][id1]" => "RecoveryManag:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RecoveryManag:03
		# line in RSA: RecoveryManag <fld1> <fld2>: Transaction service recovering no transactions.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RecoveryManag %{fld1} %{fld2}: Transaction service recovering no transactions." }
				id => "message-RecoveryManag:03"
				add_field => {
				"event_description" => "Transaction service recovering no transactions"
					"[event][id]" => "RecoveryManag:03"
					"[rsa][message][id1]" => "RecoveryManag:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RecoveryManag:04
		# line in RSA: RecoveryManag <fld1> <fld2>: Recovering <fld3> resource manager(s) from the transaction partner logs
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RecoveryManag %{fld1} %{fld2}: Recovering %{fld3} resource manager(s) from the transaction partner logs" }
				id => "message-RecoveryManag:04"
				add_field => {
				"event_description" => "Recovering from the transaction partner logs"
					"[event][id]" => "RecoveryManag:04"
					"[rsa][message][id1]" => "RecoveryManag:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RecoveryManag:05
		# line in RSA: RecoveryManag <fld1> <fld2>: Transaction recovery processing for this server is complete
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RecoveryManag %{fld1} %{fld2}: Transaction recovery processing for this server is complete" }
				id => "message-RecoveryManag:05"
				add_field => {
				"event_description" => "Transaction recovery processing for this server is complete"
					"[event][id]" => "RecoveryManag:05"
					"[rsa][message][id1]" => "RecoveryManag:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "RegisteredRes" {
		# MESSAGE RegisteredRes
		# line in RSA: RegisteredRes<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredRes%{fld1}> %{agent} Entry" }
				id => "message-RegisteredRes"
				add_field => {
				"event_description" => "RegisteredRes Entry"
					"[event][id]" => "RegisteredRes"
					"[rsa][message][id1]" => "RegisteredRes"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredRes:01
		# line in RSA: RegisteredRes<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredRes%{fld1}< %{agent} Exit" }
				id => "message-RegisteredRes:01"
				add_field => {
				"event_description" => "RegisteredRes Exit"
					"[event][id]" => "RegisteredRes:01"
					"[rsa][message][id1]" => "RegisteredRes:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredRes:02
		# line in RSA: RegisteredRes <fld1> (<interface>) RESOURCE registered with Transaction.<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredRes %{fld1} (%{interface}) RESOURCE registered with Transaction.%{fld2}" }
				id => "message-RegisteredRes:02"
				add_field => {
				"event_description" => "RegisteredRes RESOURCE registered with Transaction"
					"[event][id]" => "RegisteredRes:02"
					"[rsa][message][id1]" => "RegisteredRes:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredRes:03
		# line in RSA: RegisteredRes <fld1> enlisting XAResource
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredRes %{fld1} enlisting XAResource" }
				id => "message-RegisteredRes:03"
				add_field => {
				"event_description" => "RegisteredRes enlisting XAResource"
					"[event][id]" => "RegisteredRes:03"
					"[rsa][message][id1]" => "RegisteredRes:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredRes:04
		# line in RSA: RegisteredRes <fld1> { componentMetaData | isOnlyAgent | LPSEnabled | requireRetry }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^RegisteredRes[\s]+(?<fld1>[^\s]*)[\s]+([\s]*componentMetaData[\s]+|[\s]*isOnlyAgent[\s]+|[\s]*LPSEnabled[\s]+|[\s]*requireRetry[\s]+)$" }
				id => "message-RegisteredRes:04"
				add_field => {
					"[event][id]" => "RegisteredRes:04"
					"[rsa][message][id1]" => "RegisteredRes:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "RegisteredSyn" {
		# MESSAGE RegisteredSyn
		# line in RSA: RegisteredSyn<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredSyn%{fld1}> %{agent} Entry" }
				id => "message-RegisteredSyn"
				add_field => {
				"event_description" => "RegisteredSyn Entry"
					"[event][id]" => "RegisteredSyn"
					"[rsa][message][id1]" => "RegisteredSyn"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredSyn:01
		# line in RSA: RegisteredSyn<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredSyn%{fld1}< %{agent} Exit" }
				id => "message-RegisteredSyn:01"
				add_field => {
				"event_description" => "RegisteredSyn Exit"
					"[event][id]" => "RegisteredSyn:01"
					"[rsa][message][id1]" => "RegisteredSyn:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredSyn:02
		# line in RSA: RegisteredSyn <fld1> driving after sync[<fld2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredSyn %{fld1} driving after sync[%{fld2}]" }
				id => "message-RegisteredSyn:02"
				add_field => {
				"event_description" => "RegisteredSyn driving after sync"
					"[event][id]" => "RegisteredSyn:02"
					"[rsa][message][id1]" => "RegisteredSyn:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE RegisteredSyn:03
		# line in RSA: RegisteredSyn <fld1> driving before sync[<fld2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RegisteredSyn %{fld1} driving before sync[%{fld2}]" }
				id => "message-RegisteredSyn:03"
				add_field => {
				"event_description" => "RegisteredSyn driving before sync"
					"[event][id]" => "RegisteredSyn:03"
					"[rsa][message][id1]" => "RegisteredSyn:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "registry" {
		# MESSAGE registry
		# line in RSA: registry      I   DbRegistryImpl: <fld1> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "registry      I   DbRegistryImpl: %{fld1} %{info}" }
				id => "message-registry"
				add_field => {
					"[event][id]" => "registry"
					"[rsa][message][id1]" => "registry"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE registry:01
		# line in RSA: registry      I   DbRegistryImpl.<fld1> : <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "registry      I   DbRegistryImpl.%{fld1} : %{info}" }
				id => "message-registry:01"
				add_field => {
					"[event][id]" => "registry:01"
					"[rsa][message][id1]" => "registry:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA: ResourceWrapp <fld1> setResourceStatus
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "ResourceWrapp %{fld1} setResourceStatus" }
			id => "msgParserId294"
			add_field => {
				"event_description" => "ResourceWrapp setResourceStatus"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId295
	# line in RSA: The Scheduler Service has started.
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "The Scheduler Service has started." }
			id => "msgParserId295"
			add_field => {
				"event_description" => "Scheduler Service started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId296
	# line in RSA: The Scheduler Service has stopped.
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "The Scheduler Service has stopped." }
			id => "msgParserId296"
			add_field => {
				"event_description" => "Scheduler Service stopped"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId297
	# line in RSA:  The Scheduler Service is not enabled
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "The Scheduler Service is not enabled" }
			id => "msgParserId297"
			add_field => {
				"event_description" => "Scheduler Service not enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId298
	# line in RSA: The Scheduler Service is starting.
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "The Scheduler Service is starting." }
			id => "msgParserId298"
			add_field => {
				"event_description" => "Scheduler Service starting"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId299
	# line in RSA: The Scheduler <agent> is initializing.
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "The Scheduler %{agent} is initializing." }
			id => "msgParserId299"
			add_field => {
				"event_description" => "Scheduler initializing"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId300
	# line in RSA: The Scheduler <agent> has initialized.
	else if [logstash][msgparser][id] == "msgParserId300" {
		dissect {
			mapping => { "message" => "The Scheduler %{agent} has initialized." }
			id => "msgParserId300"
			add_field => {
				"event_description" => "Scheduler initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId301
	# line in RSA: The Scheduler <agent> is stopping.
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "The Scheduler %{agent} is stopping." }
			id => "msgParserId301"
			add_field => {
				"event_description" => "Scheduler stopping"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId302
	# line in RSA: The Scheduler <agent> has stopped.
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "The Scheduler %{agent} has stopped." }
			id => "msgParserId302"
			add_field => {
				"event_description" => "Scheduler stopped"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId303
	# line in RSA: The Scheduler Service is initializing.
	else if [logstash][msgparser][id] == "msgParserId303" {
		dissect {
			mapping => { "message" => "The Scheduler Service is initializing." }
			id => "msgParserId303"
			add_field => {
				"event_description" => "Scheduler Service initializing"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId304
	# line in RSA: The Scheduler Service has been initialized.
	else if [logstash][msgparser][id] == "msgParserId304" {
		dissect {
			mapping => { "message" => "The Scheduler Service has been initialized." }
			id => "msgParserId304"
			add_field => {
				"event_description" => "Scheduler Service initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId305
	# line in RSA: The Scheduler Daemon for instance <agent> has started.
	else if [logstash][msgparser][id] == "msgParserId305" {
		dissect {
			mapping => { "message" => "The Scheduler Daemon for instance %{agent} has started." }
			id => "msgParserId305"
			add_field => {
				"event_description" => "Scheduler Daemon started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId306
	# line in RSA: The Scheduler Daemon for instance <agent> has been stopped.
	else if [logstash][msgparser][id] == "msgParserId306" {
		dissect {
			mapping => { "message" => "The Scheduler Daemon for instance %{agent} has been stopped." }
			id => "msgParserId306"
			add_field => {
				"event_description" => "Scheduler Daemon stopped"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId307
	# line in RSA: The Scheduler Service is stopping.
	else if [logstash][msgparser][id] == "msgParserId307" {
		dissect {
			mapping => { "message" => "The Scheduler Service is stopping." }
			id => "msgParserId307"
			add_field => {
				"event_description" => "Scheduler Service stopping"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId308
	# line in RSA: The Scheduler Service is starting the Schedulers.
	else if [logstash][msgparser][id] == "msgParserId308" {
		dissect {
			mapping => { "message" => "The Scheduler Service is starting the Schedulers." }
			id => "msgParserId308"
			add_field => {
				"event_description" => "Scheduler service starting Schedulers"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId309
	# line in RSA: The Scheduler Service has completed starting the Schedulers.
	else if [logstash][msgparser][id] == "msgParserId309" {
		dissect {
			mapping => { "message" => "The Scheduler Service has completed starting the Schedulers." }
			id => "msgParserId309"
			add_field => {
				"event_description" => "Scheduler service completed starting Schedulers"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId310
	# line in RSA: Scheduler tables created successfully.
	else if [logstash][msgparser][id] == "msgParserId310" {
		dissect {
			mapping => { "message" => "Scheduler tables created successfully." }
			id => "msgParserId310"
			add_field => {
				"event_description" => "Scheduler tables created"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId311
	# line in RSA: Scheduler tables verified successfully.
	else if [logstash][msgparser][id] == "msgParserId311" {
		dissect {
			mapping => { "message" => "Scheduler tables verified successfully." }
			id => "msgParserId311"
			add_field => {
				"event_description" => "Scheduler tables verified"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SchedulerDaem" {
		# MESSAGE SchedulerDaem
		# line in RSA: SchedulerDaem<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SchedulerDaem%{fld1}> %{agent} Entry" }
				id => "message-SchedulerDaem"
				add_field => {
				"event_description" => "SchedulerDaem Entry"
					"[event][id]" => "SchedulerDaem"
					"[rsa][message][id1]" => "SchedulerDaem"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SchedulerDaem:01
		# line in RSA: SchedulerDaem<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SchedulerDaem%{fld1}< %{agent} Exit" }
				id => "message-SchedulerDaem:01"
				add_field => {
				"event_description" => "SchedulerDaem Exit"
					"[event][id]" => "SchedulerDaem:01"
					"[rsa][message][id1]" => "SchedulerDaem:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SchedulerDaem:02
		# line in RSA: SchedulerDaem <fld1> Creating Tasks AsynchScope:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SchedulerDaem %{fld1} Creating Tasks AsynchScope:%{fld2}" }
				id => "message-SchedulerDaem:02"
				add_field => {
				"event_description" => "SchedulerDaem Creating Tasks AsynchScope"
					"[event][id]" => "SchedulerDaem:02"
					"[rsa][message][id1]" => "SchedulerDaem:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SchedulerDaem:03
		# line in RSA: SchedulerDaem <fld1> Destroying Tasks AsynchScope:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SchedulerDaem %{fld1} Destroying Tasks AsynchScope:%{fld2}" }
				id => "message-SchedulerDaem:03"
				add_field => {
				"event_description" => "SchedulerDaem Destroying Tasks AsynchScope"
					"[event][id]" => "SchedulerDaem:03"
					"[rsa][message][id1]" => "SchedulerDaem:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SchedulerDaem:04
		# line in RSA: SchedulerDaem <fld1> { Task Load/Set Time= | Waiting for }<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^SchedulerDaem[\s]+(?<fld1>[^\s]*)[\s]+([\s]*Task[\s]+Load/Set[\s]+Time=[\s]+|[\s]*Waiting[\s]+for[\s]+)(?<fld2>.*)$" }
				id => "message-SchedulerDaem:04"
				add_field => {
					"[event][id]" => "SchedulerDaem:04"
					"[rsa][message][id1]" => "SchedulerDaem:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SchedulerPmiM" {
		# MESSAGE SchedulerPmiM
		# line in RSA: SchedulerPmiM <fld1> PollComplete:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SchedulerPmiM %{fld1} PollComplete:%{fld2}" }
				id => "message-SchedulerPmiM"
				add_field => {
				"event_description" => "SchedulerPmiM PollComplete"
					"[event][id]" => "SchedulerPmiM"
					"[rsa][message][id1]" => "SchedulerPmiM"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SchedulerPmiM:01
		# line in RSA: SchedulerPmiM <fld1> PollQueryComplete:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SchedulerPmiM %{fld1} PollQueryComplete:%{fld2}" }
				id => "message-SchedulerPmiM:01"
				add_field => {
				"event_description" => "SchedulerPmiM PollQueryComplete"
					"[event][id]" => "SchedulerPmiM:01"
					"[rsa][message][id1]" => "SchedulerPmiM:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA: SearchByCusto <fld1> <agent> performTask The method <fld2> returned <fld3> rows
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "SearchByCusto %{fld1} %{agent} performTask The method %{fld2} returned %{fld3} rows" }
			id => "msgParserId319"
			add_field => {
				"event_description" => "SearchByCusto performTask the method returned rows"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId320
	# line in RSA: Authentication error during authentication for user <username>
	else if [logstash][msgparser][id] == "msgParserId320" {
		dissect {
			mapping => { "message" => "Authentication error during authentication for user %{username}" }
			id => "msgParserId320"
			add_field => {
				"event_description" => "Authentication error during authentication for user"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId321
	# line in RSA: Custom Registry:<fld1> has been initialized
	else if [logstash][msgparser][id] == "msgParserId321" {
		dissect {
			mapping => { "message" => "Custom Registry:%{fld1} has been initialized" }
			id => "msgParserId321"
			add_field => {
				"event_description" => "Custom Registry initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId322
	# line in RSA: Security enabled <result>
	else if [logstash][msgparser][id] == "msgParserId322" {
		dissect {
			mapping => { "message" => "Security enabled %{result}" }
			id => "msgParserId322"
			add_field => {
				"event_description" => "Security enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId323
	# line in RSA: WCCM JAAS configuration information successfully pushed to login provider class.
	else if [logstash][msgparser][id] == "msgParserId323" {
		dissect {
			mapping => { "message" => "WCCM JAAS configuration information successfully pushed to login provider class." }
			id => "msgParserId323"
			add_field => {
				"event_description" => "WCCM JAAS configuration information successfully pushed to login provider class."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId324
	# line in RSA: Successfully set JAAS login provider configuration class to <result>.
	else if [logstash][msgparser][id] == "msgParserId324" {
		dissect {
			mapping => { "message" => "Successfully set JAAS login provider configuration class to %{result}." }
			id => "msgParserId324"
			add_field => {
				"event_description" => "Successfully set JAAS login provider configuration class"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId325
	# line in RSA: The Security component's FFDC Diagnostic Module <fld1> registered successfully: <result>.
	else if [logstash][msgparser][id] == "msgParserId325" {
		dissect {
			mapping => { "message" => "The Security component's FFDC Diagnostic Module %{fld1} registered successfully: %{result}." }
			id => "msgParserId325"
			add_field => {
				"event_description" => "The Security component diagnostic Module registered"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId326
	# line in RSA: Security service initialization completed successfully
	else if [logstash][msgparser][id] == "msgParserId326" {
		dissect {
			mapping => { "message" => "Security service initialization completed successfully" }
			id => "msgParserId326"
			add_field => {
				"event_description" => "Security service initialization completed"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId327
	# line in RSA: Security service started successfully
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "Security service started successfully" }
			id => "msgParserId327"
			add_field => {
				"event_description" => "Security service started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId328
	# line in RSA: Java 2 Security is disabled.
	else if [logstash][msgparser][id] == "msgParserId328" {
		dissect {
			mapping => { "message" => "Java 2 Security is disabled." }
			id => "msgParserId328"
			add_field => {
				"event_description" => "Java 2 Security disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId329
	# line in RSA: Authentication failed when using <fld1>. <info>
	else if [logstash][msgparser][id] == "msgParserId329" {
		dissect {
			mapping => { "message" => "Authentication failed when using %{fld1}. %{info}" }
			id => "msgParserId329"
			add_field => {
				"event_description" => "Authentication Failed"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId330
	# line in RSA:  The user registry is currently connected to the LDAP server ldap://<hostip>:<network_port>.
	else if [logstash][msgparser][id] == "msgParserId330" {
		dissect {
			mapping => { "message" => "The user registry is currently connected to the LDAP server ldap://%{hostip}:%{network_port}." }
			id => "msgParserId330"
			add_field => {
				"event_description" => "User registry currently connected to LDAP server"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId331
	# line in RSA: Security Auditing is disabled. 
	else if [logstash][msgparser][id] == "msgParserId331" {
		dissect {
			mapping => { "message" => "Security Auditing is disabled." }
			id => "msgParserId331"
			add_field => {
				"event_description" => "Security Auditing disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId332
	# line in RSA:  ServiceDeploy I <info>
	else if [logstash][msgparser][id] == "msgParserId332" {
		dissect {
			mapping => { "message" => "ServiceDeploy I %{info}" }
			id => "msgParserId332"
			add_field => {
				"event_description" => "ServiceDeploy Activity"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId333
	# line in RSA:  ServiceLogger I <application> <action> <interface>: <disposition> { /<filename> | file <filename> }
	else if [logstash][msgparser][id] == "msgParserId333" {
		grok {
			match => { "message" => "^[\s]*ServiceLogger[\s]+I[\s]+(?<application>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<interface>[^:]*):[\s]+(?<disposition>[^\s]*)[\s]+([\s]*/(?<filename>[^\s]*)[\s]+|[\s]*file[\s]+(?<filename>[^\s]*)[\s]+)$" }
			id => "msgParserId333"
			add_field => {
				"event_description" => "ServiceLogger Activity"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId334
	# line in RSA: ServiceManage I ServiceManager init() ServiceManager.init()>>All  Services initialized successfully
	else if [logstash][msgparser][id] == "msgParserId334" {
		dissect {
			mapping => { "message" => "ServiceManage I ServiceManager init() ServiceManager.init()>>All  Services initialized successfully" }
			id => "msgParserId334"
			add_field => {
				"event_description" => "ServiceManage Activity"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SessionListen" {
		# MESSAGE SessionListen
		# line in RSA:  SessionListen I SessionListener sessionCreated(<sessiontype>) session with session ID=<sessionid>getting created
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SessionListen I SessionListener sessionCreated(%{sessiontype}) session with session ID=%{sessionid}getting created" }
				id => "message-SessionListen"
				add_field => {
				"event_description" => "ServiceLogger Activity"
					"[event][id]" => "SessionListen"
					"[rsa][message][id1]" => "SessionListen"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SessionListen:01
		# line in RSA:  SessionListen I SessionListener sessionDestroyed(<sessiontype>) session with session ID=<sessionid>getting destroyed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SessionListen I SessionListener sessionDestroyed(%{sessiontype}) session with session ID=%{sessionid}getting destroyed" }
				id => "message-SessionListen:01"
				add_field => {
				"event_description" => "ServiceLogger Activity"
					"[event][id]" => "SessionListen:01"
					"[rsa][message][id1]" => "SessionListen:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SharedPool" {
		# MESSAGE SharedPool
		# line in RSA: SharedPool<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SharedPool%{fld1}> %{agent} Entry" }
				id => "message-SharedPool"
				add_field => {
				"event_description" => "SharedPool Entry"
					"[event][id]" => "SharedPool"
					"[rsa][message][id1]" => "SharedPool"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SharedPool:01
		# line in RSA: SharedPool<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SharedPool%{fld1}< %{agent} Exit" }
				id => "message-SharedPool:01"
				add_field => {
				"event_description" => "SharedPool Exit"
					"[event][id]" => "SharedPool:01"
					"[rsa][message][id1]" => "SharedPool:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SharedPool:02
		# line in RSA: SharedPool <fld1> Removed connection
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SharedPool %{fld1} Removed connection" }
				id => "message-SharedPool:02"
				add_field => {
				"event_description" => "SharedPool Removed connection"
					"[event][id]" => "SharedPool:02"
					"[rsa][message][id1]" => "SharedPool:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SRTServletRes" {
		# MESSAGE SRTServletRes
		# line in RSA: SRTServletRes W   WARNING: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SRTServletRes W   WARNING: %{info}" }
				id => "message-SRTServletRes"
				add_field => {
				"event_description" => "SRTServletRes W WARNING"
					"[event][id]" => "SRTServletRes"
					"[rsa][message][id1]" => "SRTServletRes"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRTServletRes:02
		# line in RSA: SRTServletRes E <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SRTServletRes E %{info}" }
				id => "message-SRTServletRes:02"
				add_field => {
				"event_description" => "SRTServletRes E Error"
					"[event][id]" => "SRTServletRes:02"
					"[rsa][message][id1]" => "SRTServletRes:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRTServletRes:01
		# line in RSA: SRTServletRes <fld1>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SRTServletRes %{fld1}: %{event_description}" }
				id => "message-SRTServletRes:01"
				add_field => {
					"[event][id]" => "SRTServletRes:01"
					"[rsa][message][id1]" => "SRTServletRes:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId342
	# line in RSA: Uncaught service() exception root cause <fld1>: <fld2>
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "Uncaught service() exception root cause %{fld1}: %{fld2}" }
			id => "msgParserId342"
			add_field => {
				"event_description" => "Uncaught service() exception root cause."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId343
	# line in RSA: A WebGroup/Virtual Host to handle <fld1> has not been defined.
	else if [logstash][msgparser][id] == "msgParserId343" {
		dissect {
			mapping => { "message" => "A WebGroup/Virtual Host to handle %{fld1} has not been defined." }
			id => "msgParserId343"
			add_field => {
				"event_description" => "A WebGroup/Virtual Host has not been defined."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId344
	# line in RSA: [Servlet Error]-[<fld1>]: <fld2>
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "[Servlet Error]-[%{fld1}]: %{fld2}" }
			id => "msgParserId344"
			add_field => {
				"event_description" => "Servlet Error."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SRVE0068E" {
		# MESSAGE SRVE0068E
		# line in RSA: Could not invoke the <fld1> method on <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Could not invoke the %{fld1} method on %{fld2}" }
				id => "message-SRVE0068E"
				add_field => {
				"event_description" => "Could not invoke method."
					"[event][id]" => "SRVE0068E"
					"[rsa][message][id1]" => "SRVE0068E"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRVE0068E:01
		# line in RSA:  Uncaught exception created in one of the service methods of the servlet CAMPServlet in application <application>. Exception created : <info>: Request processing failed; nested exception is <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Uncaught exception created in one of the service methods of the servlet CAMPServlet in application %{application}. Exception created : %{info}: Request processing failed; nested exception is %{fld1}" }
				id => "message-SRVE0068E:01"
				add_field => {
				"event_description" => "Uncaught exception, request processing failed"
					"[event][id]" => "SRVE0068E:01"
					"[rsa][message][id1]" => "SRVE0068E:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRVE0068E:02
		# line in RSA:  Uncaught exception created in one of the service methods of the servlet logout in application <application>. Exception created : <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Uncaught exception created in one of the service methods of the servlet logout in application %{application}. Exception created : %{info}" }
				id => "message-SRVE0068E:02"
				add_field => {
				"event_description" => "Uncaught exception created"
					"[event][id]" => "SRVE0068E:02"
					"[rsa][message][id1]" => "SRVE0068E:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRVE0068E:03
		# line in RSA:  Uncaught exception created in one of the service methods of the servlet publicapp in application <application>. Exception created : <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Uncaught exception created in one of the service methods of the servlet publicapp in application %{application}. Exception created : %{info}" }
				id => "message-SRVE0068E:03"
				add_field => {
				"event_description" => "Uncaught exception created"
					"[event][id]" => "SRVE0068E:03"
					"[rsa][message][id1]" => "SRVE0068E:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRVE0068E:04
		# line in RSA:  Uncaught exception created in one of the service methods of the servlet <fld1> in application <application>. Exception created : <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Uncaught exception created in one of the service methods of the servlet %{fld1} in application %{application}. Exception created : %{info}" }
				id => "message-SRVE0068E:04"
				add_field => {
				"event_description" => "Uncaught exception created"
					"[event][id]" => "SRVE0068E:04"
					"[rsa][message][id1]" => "SRVE0068E:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId348
	# line in RSA: Error occurred while invoking error reporter
	else if [logstash][msgparser][id] == "msgParserId348" {
		dissect {
			mapping => { "message" => "Error occurred while invoking error reporter" }
			id => "msgParserId348"
			add_field => {
				"event_description" => "Error occurred while invoking error reporter."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId349
	# line in RSA: IBM WebSphere Application Server - Web Container.  Copyright IBM Corp.<fld1>
	else if [logstash][msgparser][id] == "msgParserId349" {
		dissect {
			mapping => { "message" => "IBM WebSphere Application Server - Web Container.  Copyright IBM Corp.%{fld1}" }
			id => "msgParserId349"
			add_field => {
				"event_description" => "IBM WebSphere Application Server - Web Container.Copyright IBM Corp."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId350
	# line in RSA: Servlet Specification Level: <version>
	else if [logstash][msgparser][id] == "msgParserId350" {
		dissect {
			mapping => { "message" => "Servlet Specification Level: %{version}" }
			id => "msgParserId350"
			add_field => {
				"event_description" => "Servlet Specification Level:"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId351
	# line in RSA: Supported JSP Specification Level: <version>
	else if [logstash][msgparser][id] == "msgParserId351" {
		dissect {
			mapping => { "message" => "Supported JSP Specification Level: %{version}" }
			id => "msgParserId351"
			add_field => {
				"event_description" => "Supported JSP Specification Level"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId352
	# line in RSA: Loading Web Module: <info>.
	else if [logstash][msgparser][id] == "msgParserId352" {
		dissect {
			mapping => { "message" => "Loading Web Module: %{info}." }
			id => "msgParserId352"
			add_field => {
				"event_description" => "Loading Web Module"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId353
	# line in RSA: [<logon_type>] [<directory>] [<filename>]: action:<action>
	else if [logstash][msgparser][id] == "msgParserId353" {
		dissect {
			mapping => { "message" => "[%{logon_type}] [%{directory}] [%{filename}]: action:%{action}" }
			id => "msgParserId353"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId354
	# line in RSA: [<interface>] [<fld1>] [<fld2>]: Error Page Exception:<fld3>
	else if [logstash][msgparser][id] == "msgParserId354" {
		dissect {
			mapping => { "message" => "[%{interface}] [%{fld1}] [%{fld2}]: Error Page Exception:%{fld3}" }
			id => "msgParserId354"
			add_field => {
				"event_description" => "Error Page Exception"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId355
	# line in RSA:  Extension Factory [class <fld1>] was registered successfully.
	else if [logstash][msgparser][id] == "msgParserId355" {
		dissect {
			mapping => { "message" => "Extension Factory [class %{fld1}] was registered successfully." }
			id => "msgParserId355"
			add_field => {
				"event_description" => "Extension Factory registered successfully"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId356
	# line in RSA: Extension Factory [class <fld1>] has been associated with patterns [<fld2>].
	else if [logstash][msgparser][id] == "msgParserId356" {
		dissect {
			mapping => { "message" => "Extension Factory [class %{fld1}] has been associated with patterns [%{fld2}]." }
			id => "msgParserId356"
			add_field => {
				"event_description" => "Extension Factory associated with patterns"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SRVE0242I" {
		# MESSAGE SRVE0242I
		# line in RSA: [<fld1>]: Initialization successful.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{fld1}]: Initialization successful." }
				id => "message-SRVE0242I"
				add_field => {
				"event_description" => "Initialization successful"
					"[event][id]" => "SRVE0242I"
					"[rsa][message][id1]" => "SRVE0242I"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SRVE0242I:01
		# line in RSA: <datetime>] <fld1> <fld2> <fld3> <fld4> <fld5> <fld6>: [<fld6>] [<fld7>] [<fld8>]: <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld1} %{fld2} %{fld3} %{fld4} %{fld5} %{fld6}: [%{fld6}] [%{fld7}] [%{fld8}]: %{info}." }
				id => "message-SRVE0242I:01"
				add_field => {
					"[event][id]" => "SRVE0242I:01"
					"[rsa][message][id1]" => "SRVE0242I:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId358
	# line in RSA: Web Module <info>
	else if [logstash][msgparser][id] == "msgParserId358" {
		dissect {
			mapping => { "message" => "Web Module %{info}" }
			id => "msgParserId358"
			add_field => {
				"event_description" => "Web Module bound."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId359
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId359" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId359"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SRVE0255E" {
		# MESSAGE SRVE0255E:01
		# line in RSA: <datetime>] <fld1> <fld2> <fld3> <fld4> <fld5> <fld6>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld1} %{fld2} %{fld3} %{fld4} %{fld5} %{fld6}: %{event_description}" }
				id => "message-SRVE0255E:01"
				add_field => {
					"[event][id]" => "SRVE0255E:01"
					"[rsa][message][id1]" => "SRVE0255E:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
		# MESSAGE SRVE0255E
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-SRVE0255E"
				add_field => {
					"[event][id]" => "SRVE0255E"
					"[rsa][message][id1]" => "SRVE0255E"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId361
	# line in RSA: The Startup Beans service is disabled.
	else if [logstash][msgparser][id] == "msgParserId361" {
		dissect {
			mapping => { "message" => "The Startup Beans service is disabled." }
			id => "msgParserId361"
			add_field => {
				"event_description" => "Startup Beans service disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "startup" {
		# MESSAGE startup
		# line in RSA: startup       I   frameworkStartup instanciated <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "startup       I   frameworkStartup instanciated %{fld1}" }
				id => "message-startup"
				add_field => {
				"event_description" => "startup I frameworkStartup instanciated "
					"[event][id]" => "startup"
					"[rsa][message][id1]" => "startup"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE startup:01
		# line in RSA:  <fld1>] <fld2> SystemOut <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}] %{fld2} SystemOut %{info}" }
				id => "message-startup:01"
				add_field => {
					"[event][id]" => "startup:01"
					"[rsa][message][id1]" => "startup:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE startup:02
		# line in RSA:  <fld1>] <fld2> GenericWebApp <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}] %{fld2} GenericWebApp %{info}" }
				id => "message-startup:02"
				add_field => {
					"[event][id]" => "startup:02"
					"[rsa][message][id1]" => "startup:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SubsystemMoni" {
		# MESSAGE SubsystemMoni
		# line in RSA: SubsystemMoni<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SubsystemMoni%{fld1}> %{agent} Entry" }
				id => "message-SubsystemMoni"
				add_field => {
				"event_description" => "SubsystemMoni Entry"
					"[event][id]" => "SubsystemMoni"
					"[rsa][message][id1]" => "SubsystemMoni"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SubsystemMoni:01
		# line in RSA: SubsystemMoni<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SubsystemMoni%{fld1}< %{agent} Exit" }
				id => "message-SubsystemMoni:01"
				add_field => {
				"event_description" => "SubsystemMoni Exit"
					"[event][id]" => "SubsystemMoni:01"
					"[rsa][message][id1]" => "SubsystemMoni:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId367
	# line in RSA: SweepLruEvict <fld1> Wrapper Cache: Sweep (<fld2>) - Cache limit not reached :<fld3>
	else if [logstash][msgparser][id] == "msgParserId367" {
		dissect {
			mapping => { "message" => "SweepLruEvict %{fld1} Wrapper Cache: Sweep (%{fld2}) - Cache limit not reached :%{fld3}" }
			id => "msgParserId367"
			add_field => {
				"event_description" => "SweepLruEvict Wrapper Cache: Sweep - Cache limit not reached"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SystemErr" {
		# MESSAGE SystemErr
		# line in RSA: SystemErr <fld1> ... <fld2> more
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemErr %{fld1} ... %{fld2} more" }
				id => "message-SystemErr"
				add_field => {
				"event_description" => "SystemErr message."
					"[event][id]" => "SystemErr"
					"[rsa][message][id1]" => "SystemErr"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemErr:01
		# line in RSA: SystemErr <fld1> at <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemErr %{fld1} at %{fld2}" }
				id => "message-SystemErr:01"
				add_field => {
				"event_description" => "SystemErr message."
					"[event][id]" => "SystemErr:01"
					"[rsa][message][id1]" => "SystemErr:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemErr:05
		# line in RSA: <datetime>] <fld3> SystemErr <fld1> at <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld3} SystemErr %{fld1} at %{fld2}" }
				id => "message-SystemErr:05"
				add_field => {
				"event_description" => "SystemErr message."
					"[event][id]" => "SystemErr:05"
					"[rsa][message][id1]" => "SystemErr:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
		# MESSAGE SystemErr:02
		# line in RSA: SystemErr <fld1> Caused by:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemErr %{fld1} Caused by:%{fld2}" }
				id => "message-SystemErr:02"
				add_field => {
				"event_description" => "SystemErr cause message."
					"[event][id]" => "SystemErr:02"
					"[rsa][message][id1]" => "SystemErr:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemErr:03
		# line in RSA: SystemErr <fld1> vmcid:<fld3> minor code:<fld4> completed:<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemErr %{fld1} vmcid:%{fld3} minor code:%{fld4} completed:%{fld5}" }
				id => "message-SystemErr:03"
				add_field => {
				"event_description" => "SystemErr message."
					"[event][id]" => "SystemErr:03"
					"[rsa][message][id1]" => "SystemErr:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemErr:04
		# line in RSA:  SystemErr <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemErr %{info}" }
				id => "message-SystemErr:04"
				add_field => {
				"event_description" => "SystemErr message."
					"[event][id]" => "SystemErr:04"
					"[rsa][message][id1]" => "SystemErr:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemErr:06
		# line in RSA: <datetime>] <fld1> SystemErr <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld1} SystemErr %{info}" }
				id => "message-SystemErr:06"
				add_field => {
				"event_description" => "SystemErr message."
					"[event][id]" => "SystemErr:06"
					"[rsa][message][id1]" => "SystemErr:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SystemOut" {
		# MESSAGE SystemOut
		# line in RSA: SystemOut <fld1>=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{fld1}=%{fld3}" }
				id => "message-SystemOut"
				add_field => {
				"event_description" => "SystemOut message."
					"[event][id]" => "SystemOut"
					"[rsa][message][id1]" => "SystemOut"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:01
		# line in RSA: SystemOut <fld1> begin
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{fld1} begin" }
				id => "message-SystemOut:01"
				add_field => {
				"event_description" => "SystemOut Service begin"
					"[event][id]" => "SystemOut:01"
					"[rsa][message][id1]" => "SystemOut:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:02
		# line in RSA: SystemOut <fld1> dumping <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{fld1} dumping %{fld2}" }
				id => "message-SystemOut:02"
				add_field => {
				"event_description" => "SystemOut dumping parameters"
					"[event][id]" => "SystemOut:02"
					"[rsa][message][id1]" => "SystemOut:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:03
		# line in RSA: SystemOut <fld1> ID: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{fld1} ID: %{fld2}" }
				id => "message-SystemOut:03"
				add_field => {
				"event_description" => "SystemOut message."
					"[event][id]" => "SystemOut:03"
					"[rsa][message][id1]" => "SystemOut:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:04
		# line in RSA: SystemOut <fld1> Retrieving document at <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{fld1} Retrieving document at %{directory}" }
				id => "message-SystemOut:04"
				add_field => {
				"event_description" => "SystemOut Retrieving document"
					"[event][id]" => "SystemOut:04"
					"[rsa][message][id1]" => "SystemOut:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:05
		# line in RSA:  SystemOut <space> { O [<disposition>] LOG_SELECTOR : <filename> | O LOG_SELECTOR : <filename> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SystemOut[\s]+(?<space>[^\s]*)[\s]+([\s]*O[\s]+\[(?<disposition>[^\]]*)\][\s]+LOG_SELECTOR[\s]+:[\s]+(?<filename>[^\s]*)[\s]+|[\s]*O[\s]+LOG_SELECTOR[\s]+:[\s]+(?<filename>[^\s]*)[\s]+)$" }
				id => "message-SystemOut:05"
				add_field => {
				"event_description" => "SystemOut"
				"application" => "LOG_SELECTOR"
					"[event][id]" => "SystemOut:05"
					"[rsa][message][id1]" => "SystemOut:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:06
		# line in RSA:  SystemOut <space> O [<application>, <action>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{space} O [%{application}, %{action}]" }
				id => "message-SystemOut:06"
				add_field => {
				"event_description" => "SystemOut"
				"application" => "LOG_SELECTOR"
					"[event][id]" => "SystemOut:06"
					"[rsa][message][id1]" => "SystemOut:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:07
		# line in RSA:  SystemOut <space> O load a pkcs11 key <product>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{space} O load a pkcs11 key %{product}" }
				id => "message-SystemOut:07"
				add_field => {
				"event_description" => "SystemOut - load a pkcs11 key"
					"[event][id]" => "SystemOut:07"
					"[rsa][message][id1]" => "SystemOut:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:08
		# line in RSA:  SystemOut <space> O { <application> instance initialized | Initializing <application> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SystemOut[\s]+(?<space>[^\s]*)[\s]+O[\s]+([\s]*(?<application>[^\s]*)[\s]+instance[\s]+initialized[\s]+|[\s]*Initializing[\s]+(?<application>[^\s]*)[\s]+)$" }
				id => "message-SystemOut:08"
				add_field => {
				"event_description" => "SystemOut - instance initialized"
					"[event][id]" => "SystemOut:08"
					"[rsa][message][id1]" => "SystemOut:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:09
		# line in RSA:  SystemOut <space> O init Cipher
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{space} O init Cipher" }
				id => "message-SystemOut:09"
				add_field => {
				"event_description" => "SystemOut - init Cipher"
					"[event][id]" => "SystemOut:09"
					"[rsa][message][id1]" => "SystemOut:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:10
		# line in RSA:  SystemOut <space> O [<disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{space} O [%{disposition}" }
				id => "message-SystemOut:10"
				add_field => {
				"event_description" => "SystemOut"
					"[event][id]" => "SystemOut:10"
					"[rsa][message][id1]" => "SystemOut:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE SystemOut:11
		# line in RSA:  SystemOut <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SystemOut %{info}" }
				id => "message-SystemOut:11"
				add_field => {
				"event_description" => "SystemOut"
					"[event][id]" => "SystemOut:11"
					"[rsa][message][id1]" => "SystemOut:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId387
	# line in RSA:  TaskConfigMon <space> I <space> INFO_INITIALIZATION_COMPLETE
	else if [logstash][msgparser][id] == "msgParserId387" {
		dissect {
			mapping => { "message" => "TaskConfigMon %{space} I %{space} INFO_INITIALIZATION_COMPLETE" }
			id => "msgParserId387"
			add_field => {
				"event_description" => "INFO_INITIALIZATION_COMPLETE"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "TaskStoreImpl" {
		# MESSAGE TaskStoreImpl
		# line in RSA: TaskStoreImpl<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TaskStoreImpl%{fld1}> %{agent} Entry" }
				id => "message-TaskStoreImpl"
				add_field => {
				"event_description" => "TaskStoreImpl Entry"
					"[event][id]" => "TaskStoreImpl"
					"[rsa][message][id1]" => "TaskStoreImpl"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TaskStoreImpl:01
		# line in RSA: TaskStoreImpl<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TaskStoreImpl%{fld1}< %{agent} Exit" }
				id => "message-TaskStoreImpl:01"
				add_field => {
				"event_description" => "TaskStoreImpl Exit"
					"[event][id]" => "TaskStoreImpl:01"
					"[rsa][message][id1]" => "TaskStoreImpl:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TaskStoreImpl:02
		# line in RSA: TaskStoreImpl <fld1> BeginQuery
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TaskStoreImpl %{fld1} BeginQuery" }
				id => "message-TaskStoreImpl:02"
				add_field => {
				"event_description" => "TaskStoreImpl BeginQuery"
					"[event][id]" => "TaskStoreImpl:02"
					"[rsa][message][id1]" => "TaskStoreImpl:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TaskStoreImpl:03
		# line in RSA: TaskStoreImpl <fld1> EndQuery:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TaskStoreImpl %{fld1} EndQuery:%{fld2}" }
				id => "message-TaskStoreImpl:03"
				add_field => {
				"event_description" => "TaskStoreImpl EndQuery"
					"[event][id]" => "TaskStoreImpl:03"
					"[rsa][message][id1]" => "TaskStoreImpl:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TaskStoreImpl:04
		# line in RSA: TaskStoreImpl <fld1> EndTaskLoad:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TaskStoreImpl %{fld1} EndTaskLoad:%{fld2}" }
				id => "message-TaskStoreImpl:04"
				add_field => {
				"event_description" => "TaskStoreImpl EndTaskLoad"
					"[event][id]" => "TaskStoreImpl:04"
					"[rsa][message][id1]" => "TaskStoreImpl:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId393
	# line in RSA: TCP Channel <interface> is listening on host <hostname> (<protocol>) port <network_port>. 
	else if [logstash][msgparser][id] == "msgParserId393" {
		dissect {
			mapping => { "message" => "TCP Channel %{interface} is listening on host %{hostname} (%{protocol}) port %{network_port}." }
			id => "msgParserId393"
			add_field => {
				"event_description" => "TCP Channel listening on host"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId394
	# line in RSA: TCP Channel <interface> has stopped listening on host <hostname> (<protocol>) port <network_port>.
	else if [logstash][msgparser][id] == "msgParserId394" {
		dissect {
			mapping => { "message" => "TCP Channel %{interface} has stopped listening on host %{hostname} (%{protocol}) port %{network_port}." }
			id => "msgParserId394"
			add_field => {
				"event_description" => "TCP Channel stopped listening on host"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId395
	# line in RSA: TilesRequestP <fld1> <agent> Tiles definition factory found for request processor <fld2>
	else if [logstash][msgparser][id] == "msgParserId395" {
		dissect {
			mapping => { "message" => "TilesRequestP %{fld1} %{agent} Tiles definition factory found for request processor %{fld2}" }
			id => "msgParserId395"
			add_field => {
				"event_description" => "TilesRequestP Tiles definition factory found for request processor"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "TimeoutManage" {
		# MESSAGE TimeoutManage
		# line in RSA: TimeoutManage<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TimeoutManage%{fld1}> %{agent} Entry" }
				id => "message-TimeoutManage"
				add_field => {
				"event_description" => "TimeoutManage Entry"
					"[event][id]" => "TimeoutManage"
					"[rsa][message][id1]" => "TimeoutManage"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TimeoutManage:01
		# line in RSA: TimeoutManage<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TimeoutManage%{fld1}< %{agent} Exit" }
				id => "message-TimeoutManage:01"
				add_field => {
				"event_description" => "TimeoutManage Exit"
					"[event][id]" => "TimeoutManage:01"
					"[rsa][message][id1]" => "TimeoutManage:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TranManagerIm" {
		# MESSAGE TranManagerIm
		# line in RSA: TranManagerIm<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerIm%{fld1}> %{agent} Entry" }
				id => "message-TranManagerIm"
				add_field => {
				"event_description" => "TranManagerIm Entry"
					"[event][id]" => "TranManagerIm"
					"[rsa][message][id1]" => "TranManagerIm"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TranManagerIm:01
		# line in RSA: TranManagerIm<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerIm%{fld1}< %{agent} Exit" }
				id => "message-TranManagerIm:01"
				add_field => {
				"event_description" => "TranManagerIm Exit"
					"[event][id]" => "TranManagerIm:01"
					"[rsa][message][id1]" => "TranManagerIm:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TranManagerIm:02
		# line in RSA: TranManagerIm <fld1> component timeout =<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerIm %{fld1} component timeout =%{fld2}" }
				id => "message-TranManagerIm:02"
				add_field => {
				"event_description" => "TranManagerIm component timeout."
					"[event][id]" => "TranManagerIm:02"
					"[rsa][message][id1]" => "TranManagerIm:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TranManagerIm:03
		# line in RSA: TranManagerIm <fld1> getStatus (<interface>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerIm %{fld1} getStatus (%{interface})" }
				id => "message-TranManagerIm:03"
				add_field => {
				"event_description" => "TranManagerIm getStatus"
					"[event][id]" => "TranManagerIm:03"
					"[rsa][message][id1]" => "TranManagerIm:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TranManagerIm:04
		# line in RSA: TranManagerIm <fld1> getTransaction (<interface>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerIm %{fld1} getTransaction (%{interface})" }
				id => "message-TranManagerIm:04"
				add_field => {
				"event_description" => "TranManagerIm getTransaction"
					"[event][id]" => "TranManagerIm:04"
					"[rsa][message][id1]" => "TranManagerIm:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TranManagerSe" {
		# MESSAGE TranManagerSe
		# line in RSA: TranManagerSe<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerSe%{fld1}> %{agent} Entry" }
				id => "message-TranManagerSe"
				add_field => {
				"event_description" => "TranManagerSe Entry"
					"[event][id]" => "TranManagerSe"
					"[rsa][message][id1]" => "TranManagerSe"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TranManagerSe:01
		# line in RSA: TranManagerSe<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TranManagerSe%{fld1}< %{agent} Exit" }
				id => "message-TranManagerSe:01"
				add_field => {
				"event_description" => "TranManagerSe Exit"
					"[event][id]" => "TranManagerSe:01"
					"[rsa][message][id1]" => "TranManagerSe:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TransactionCo" {
		# MESSAGE TransactionCo
		# line in RSA: TransactionCo<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionCo%{fld1}> %{agent} Entry" }
				id => "message-TransactionCo"
				add_field => {
				"event_description" => "TransactionCo Entry"
					"[event][id]" => "TransactionCo"
					"[rsa][message][id1]" => "TransactionCo"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionCo:01
		# line in RSA: TransactionCo<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionCo%{fld1}< %{agent} Exit" }
				id => "message-TransactionCo:01"
				add_field => {
				"event_description" => "TransactionCo Exit"
					"[event][id]" => "TransactionCo:01"
					"[rsa][message][id1]" => "TransactionCo:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionCo:02
		# line in RSA: TransactionCo <fld1> postinvoke:<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionCo %{fld1} postinvoke:%{action}" }
				id => "message-TransactionCo:02"
				add_field => {
				"event_description" => "TransactionCo postinvoke."
					"[event][id]" => "TransactionCo:02"
					"[rsa][message][id1]" => "TransactionCo:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionCo:03
		# line in RSA: TransactionCo <fld1> preinvoke: Local transaction is present...<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionCo %{fld1} preinvoke: Local transaction is present...%{action}" }
				id => "message-TransactionCo:03"
				add_field => {
				"event_description" => "TransactionCo preinvoke: Local transaction is present..."
					"[event][id]" => "TransactionCo:03"
					"[rsa][message][id1]" => "TransactionCo:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TransactionIm" {
		# MESSAGE TransactionIm
		# line in RSA: TransactionIm<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionIm%{fld1}> %{agent} Entry" }
				id => "message-TransactionIm"
				add_field => {
				"event_description" => "TransactionIm Entry"
					"[event][id]" => "TransactionIm"
					"[rsa][message][id1]" => "TransactionIm"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionIm:01
		# line in RSA: TransactionIm<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionIm%{fld1}< %{agent} Exit" }
				id => "message-TransactionIm:01"
				add_field => {
				"event_description" => "TransactionIm Exit"
					"[event][id]" => "TransactionIm:01"
					"[rsa][message][id1]" => "TransactionIm:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionIm:02
		# line in RSA: TransactionIm <fld1> Tx completed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionIm %{fld1} Tx completed" }
				id => "message-TransactionIm:02"
				add_field => {
				"event_description" => "TransactionIm Tx completed"
					"[event][id]" => "TransactionIm:02"
					"[rsa][message][id1]" => "TransactionIm:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionIm:03
		# line in RSA: TransactionIm <fld1> (<interface>) Transaction BEGIN occurred for TX:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionIm %{fld1} (%{interface}) Transaction BEGIN occurred for TX:%{fld2}" }
				id => "message-TransactionIm:03"
				add_field => {
				"event_description" => "TransactionIm Transaction BEGIN occurred"
					"[event][id]" => "TransactionIm:03"
					"[rsa][message][id1]" => "TransactionIm:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TransactionMo" {
		# MESSAGE TransactionMo:02
		# line in RSA: TransactionMo <fld1> startCommitting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionMo %{fld1} startCommitting" }
				id => "message-TransactionMo:02"
				add_field => {
				"event_description" => "TransactionMo startCommitting"
					"[event][id]" => "TransactionMo:02"
					"[rsa][message][id1]" => "TransactionMo:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionMo:03
		# line in RSA: TransactionMo <fld1> started local
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionMo %{fld1} started local" }
				id => "message-TransactionMo:03"
				add_field => {
				"event_description" => "TransactionMo started local"
					"[event][id]" => "TransactionMo:03"
					"[rsa][message][id1]" => "TransactionMo:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TransactionSt" {
		# MESSAGE TransactionSt
		# line in RSA: TransactionSt<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionSt%{fld1}> %{agent} Entry" }
				id => "message-TransactionSt"
				add_field => {
				"event_description" => "TransactionSt Entry"
					"[event][id]" => "TransactionSt"
					"[rsa][message][id1]" => "TransactionSt"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionSt:01
		# line in RSA: TransactionSt<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionSt%{fld1}< %{agent} Exit" }
				id => "message-TransactionSt:01"
				add_field => {
				"event_description" => "TransactionSt Exit"
					"[event][id]" => "TransactionSt:01"
					"[rsa][message][id1]" => "TransactionSt:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TransactionSt:03
		# line in RSA: TransactionSt <fld1> getState
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TransactionSt %{fld1} getState" }
				id => "message-TransactionSt:03"
				add_field => {
				"event_description" => "TransactionSt getState"
					"[event][id]" => "TransactionSt:03"
					"[rsa][message][id1]" => "TransactionSt:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId418
	# line in RSA: The following exception was logged WebServicesFault
	else if [logstash][msgparser][id] == "msgParserId418" {
		dissect {
			mapping => { "message" => "The following exception was logged WebServicesFault" }
			id => "msgParserId418"
			add_field => {
				"event_description" => "The following exception was logged WebServicesFault."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId419
	# line in RSA: The startup trace state is <result>.
	else if [logstash][msgparser][id] == "msgParserId419" {
		dissect {
			mapping => { "message" => "The startup trace state is %{result}." }
			id => "msgParserId419"
			add_field => {
				"event_description" => "The startup trace state."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId420
	# line in RSA: The message IDs that are in use are deprecated
	else if [logstash][msgparser][id] == "msgParserId420" {
		dissect {
			mapping => { "message" => "The message IDs that are in use are deprecated" }
			id => "msgParserId420"
			add_field => {
				"event_description" => "The message IDs that are in use are deprecated"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId421
	# line in RSA:  TreeBuilder <space> I <space> INIT <info>
	else if [logstash][msgparser][id] == "msgParserId421" {
		dissect {
			mapping => { "message" => "TreeBuilder %{space} I %{space} INIT %{info}" }
			id => "msgParserId421"
			add_field => {
				"event_description" => "TreeBuilder INIT"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "TxPrimaryKey" {
		# MESSAGE TxPrimaryKey
		# line in RSA: TxPrimaryKey<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TxPrimaryKey%{fld1}> %{agent} Entry" }
				id => "message-TxPrimaryKey"
				add_field => {
				"event_description" => "TxPrimaryKey Entry"
					"[event][id]" => "TxPrimaryKey"
					"[rsa][message][id1]" => "TxPrimaryKey"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE TxPrimaryKey:01
		# line in RSA: TxPrimaryKey<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TxPrimaryKey%{fld1}< %{agent} Exit" }
				id => "message-TxPrimaryKey:01"
				add_field => {
				"event_description" => "TxPrimaryKey Exit"
					"[event][id]" => "TxPrimaryKey:01"
					"[rsa][message][id1]" => "TxPrimaryKey:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "UOWManagerImp" {
		# MESSAGE UOWManagerImp
		# line in RSA: UOWManagerImp<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UOWManagerImp%{fld1}> %{agent} Entry" }
				id => "message-UOWManagerImp"
				add_field => {
				"event_description" => "UOWManagerImp Entry"
					"[event][id]" => "UOWManagerImp"
					"[rsa][message][id1]" => "UOWManagerImp"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UOWManagerImp:01
		# line in RSA: UOWManagerImp<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UOWManagerImp%{fld1}< %{agent} Exit" }
				id => "message-UOWManagerImp:01"
				add_field => {
				"event_description" => "UOWManagerImp Exit"
					"[event][id]" => "UOWManagerImp:01"
					"[rsa][message][id1]" => "UOWManagerImp:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "UOWScopeCallb" {
		# MESSAGE UOWScopeCallb
		# line in RSA: UOWScopeCallb<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UOWScopeCallb%{fld1}> %{agent} Entry" }
				id => "message-UOWScopeCallb"
				add_field => {
				"event_description" => "UOWScopeCallb Entry"
					"[event][id]" => "UOWScopeCallb"
					"[rsa][message][id1]" => "UOWScopeCallb"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UOWScopeCallb:01
		# line in RSA: UOWScopeCallb<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UOWScopeCallb%{fld1}< %{agent} Exit" }
				id => "message-UOWScopeCallb:01"
				add_field => {
				"event_description" => "UOWScopeCallb Exit"
					"[event][id]" => "UOWScopeCallb:01"
					"[rsa][message][id1]" => "UOWScopeCallb:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "UserDetails" {
		# MESSAGE UserDetails
		# line in RSA: UserDetails <fld1> <fld2> CWLAA5058I: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserDetails %{fld1} %{fld2} CWLAA5058I: %{info}" }
				id => "message-UserDetails"
				add_field => {
				"event_description" => "Logout event."
					"[event][id]" => "UserDetails"
					"[rsa][message][id1]" => "UserDetails"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UserDetails:01
		# line in RSA: UserDetails   I LogoutAction logout user <username> logging out, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserDetails   I LogoutAction logout user %{username} logging out, %{info}" }
				id => "message-UserDetails:01"
				add_field => {
				"event_description" => "Logout event."
					"[event][id]" => "UserDetails:01"
					"[rsa][message][id1]" => "UserDetails:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UserDetails:02
		# line in RSA: UserDetails   I LogoutAction logout >> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserDetails   I LogoutAction logout >> %{info}" }
				id => "message-UserDetails:02"
				add_field => {
				"event_description" => "Logout event."
					"[event][id]" => "UserDetails:02"
					"[rsa][message][id1]" => "UserDetails:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "UserManagemen" {
		# MESSAGE UserManagemen
		# line in RSA:  UserManagemen I <agent> Starting bootstrap sequence for the <application>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserManagemen I %{agent} Starting bootstrap sequence for the %{application}." }
				id => "message-UserManagemen"
				add_field => {
				"event_description" => "Starting bootstrap sequence for application"
					"[event][id]" => "UserManagemen"
					"[rsa][message][id1]" => "UserManagemen"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UserManagemen:01
		# line in RSA:  UserManagemen I <agent> Waiting for notification that the server has finished starting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserManagemen I %{agent} Waiting for notification that the server has finished starting." }
				id => "message-UserManagemen:01"
				add_field => {
				"event_description" => "Waiting for notification that server finished starting"
					"[event][id]" => "UserManagemen:01"
					"[rsa][message][id1]" => "UserManagemen:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UserManagemen:02
		# line in RSA:  UserManagemen I <agent> Initialization of the dynamic reload manager completed successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserManagemen I %{agent} Initialization of the dynamic reload manager completed successfully." }
				id => "message-UserManagemen:02"
				add_field => {
				"event_description" => "Initialization of the dynamic reload manager completed successfully."
					"[event][id]" => "UserManagemen:02"
					"[rsa][message][id1]" => "UserManagemen:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE UserManagemen:03
		# line in RSA:  UserManagemen I <agent> Received notification that the server has finished starting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "UserManagemen I %{agent} Received notification that the server has finished starting." }
				id => "message-UserManagemen:03"
				add_field => {
				"event_description" => "Received notification that the server has finished starting."
					"[event][id]" => "UserManagemen:03"
					"[rsa][message][id1]" => "UserManagemen:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId433
	# line in RSA: ActivitySession service is disabled.
	else if [logstash][msgparser][id] == "msgParserId433" {
		dissect {
			mapping => { "message" => "ActivitySession service is disabled." }
			id => "msgParserId433"
			add_field => {
				"event_description" => "ActivitySession service disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId434
	# line in RSA: The ActivitySession service is stopping.
	else if [logstash][msgparser][id] == "msgParserId434" {
		dissect {
			mapping => { "message" => "The ActivitySession service is stopping." }
			id => "msgParserId434"
			add_field => {
				"event_description" => "ActivitySession service stopping"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId435
	# line in RSA: WebsphereComm <fld1> <fld2> CWSCT0332I: SIP Container was launched successfully but will only be initialized when first SIP application is loaded.
	else if [logstash][msgparser][id] == "msgParserId435" {
		dissect {
			mapping => { "message" => "WebsphereComm %{fld1} %{fld2} CWSCT0332I: SIP Container was launched successfully but will only be initialized when first SIP application is loaded." }
			id => "msgParserId435"
			add_field => {
				"event_description" => "SIP Container was launched successfully but will only be initialized when first SIP application is loaded.."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId436
	# line in RSA: Workspace configuration consistency check is enabled.
	else if [logstash][msgparser][id] == "msgParserId436" {
		dissect {
			mapping => { "message" => "Workspace configuration consistency check is enabled." }
			id => "msgParserId436"
			add_field => {
				"event_description" => "Workspace configuration consistency check enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId437
	# line in RSA: Workspace configuration consistency check is { disabled | false }.
	else if [logstash][msgparser][id] == "msgParserId437" {
		grok {
			match => { "message" => "^Workspace[\s]+configuration[\s]+consistency[\s]+check[\s]+is[\s]+([\s]*disabled[\s]+|[\s]*false[\s]+)\.$" }
			id => "msgParserId437"
			add_field => {
				"event_description" => "Workspace configuration consistency check is disabled/false."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId438
	# line in RSA: Resources rolled back due to <interface> being called.
	else if [logstash][msgparser][id] == "msgParserId438" {
		dissect {
			mapping => { "message" => "Resources rolled back due to %{interface} being called." }
			id => "msgParserId438"
			add_field => {
				"event_description" => "Resources rolled back"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId439
	# line in RSA:  Resource jdbc/epsDataSource rolled back in cleanup of LocalTransactionContainment.
	else if [logstash][msgparser][id] == "msgParserId439" {
		dissect {
			mapping => { "message" => "Resource jdbc/epsDataSource rolled back in cleanup of LocalTransactionContainment." }
			id => "msgParserId439"
			add_field => {
				"event_description" => "Resource jdbc/epsDataSource rolled back in cleanup of LocalTransactionContainment."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId440
	# line in RSA:  One or more local transaction resources were rolled back during the cleanup of a LocalTransactionContainment.
	else if [logstash][msgparser][id] == "msgParserId440" {
		dissect {
			mapping => { "message" => "One or more local transaction resources were rolled back during the cleanup of a LocalTransactionContainment." }
			id => "msgParserId440"
			add_field => {
				"event_description" => "One or more local transaction resources were rolled back during the cleanup of a LocalTransactionContainment."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "WriterPriorit" {
		# MESSAGE WriterPriorit
		# line in RSA: WriterPriorit<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WriterPriorit%{fld1}> %{agent} Entry" }
				id => "message-WriterPriorit"
				add_field => {
				"event_description" => "WriterPriorit Entry"
					"[event][id]" => "WriterPriorit"
					"[rsa][message][id1]" => "WriterPriorit"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WriterPriorit:01
		# line in RSA: WriterPriorit<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WriterPriorit%{fld1}< %{agent} Exit" }
				id => "message-WriterPriorit:01"
				add_field => {
				"event_description" => "WriterPriorit Exit"
					"[event][id]" => "WriterPriorit:01"
					"[rsa][message][id1]" => "WriterPriorit:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId443
	# line in RSA: WSAddressingC <fld1> <agent> init
	else if [logstash][msgparser][id] == "msgParserId443" {
		dissect {
			mapping => { "message" => "WSAddressingC %{fld1} %{agent} init" }
			id => "msgParserId443"
			add_field => {
				"event_description" => "WSAddressingC init"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId444
	# line in RSA: WSConnectionR <fld1> equals<fld2>
	else if [logstash][msgparser][id] == "msgParserId444" {
		dissect {
			mapping => { "message" => "WSConnectionR %{fld1} equals%{fld2}" }
			id => "msgParserId444"
			add_field => {
				"event_description" => "WSConnectionR message."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "WSJdbcConnect" {
		# MESSAGE WSJdbcConnect
		# line in RSA: WSJdbcConnect<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcConnect%{fld1}> %{agent} Entry" }
				id => "message-WSJdbcConnect"
				add_field => {
				"event_description" => "WSJdbcConnect Entry"
					"[event][id]" => "WSJdbcConnect"
					"[rsa][message][id1]" => "WSJdbcConnect"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcConnect:01
		# line in RSA: WSJdbcConnect<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcConnect%{fld1}< %{agent} Exit" }
				id => "message-WSJdbcConnect:01"
				add_field => {
				"event_description" => "WSJdbcConnect Exit"
					"[event][id]" => "WSJdbcConnect:01"
					"[rsa][message][id1]" => "WSJdbcConnect:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcConnect:02
		# line in RSA: WSJdbcConnect <fld1> { requested by application | Transaction is active }.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^WSJdbcConnect[\s]+(?<fld1>[^\s]*)[\s]+([\s]*requested[\s]+by[\s]+application[\s]+|[\s]*Transaction[\s]+is[\s]+active[\s]+)\.$" }
				id => "message-WSJdbcConnect:02"
				add_field => {
				"event_description" => "WSJdbcConnect requested by application"
					"[event][id]" => "WSJdbcConnect:02"
					"[rsa][message][id1]" => "WSJdbcConnect:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcConnect:03
		# line in RSA: WSJdbcConnect <fld1> Local transaction started for <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcConnect %{fld1} Local transaction started for %{agent}" }
				id => "message-WSJdbcConnect:03"
				add_field => {
				"event_description" => "WSJdbcConnect Local transaction started"
					"[event][id]" => "WSJdbcConnect:03"
					"[rsa][message][id1]" => "WSJdbcConnect:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcConnect:04
		# line in RSA: WSJdbcConnect <fld1> : no-op enlistment is disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcConnect %{fld1} : no-op enlistment is disabled" }
				id => "message-WSJdbcConnect:04"
				add_field => {
				"event_description" => "WSJdbcConnect no-op enlistment is disabled"
					"[event][id]" => "WSJdbcConnect:04"
					"[rsa][message][id1]" => "WSJdbcConnect:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcConnect:05
		# line in RSA: WSJdbcConnect <fld1> state --> CLOSED
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcConnect %{fld1} state --> CLOSED" }
				id => "message-WSJdbcConnect:05"
				add_field => {
				"event_description" => "WSJdbcConnect state CLOSED"
					"[event][id]" => "WSJdbcConnect:05"
					"[rsa][message][id1]" => "WSJdbcConnect:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WSJdbcDataSou" {
		# MESSAGE WSJdbcDataSou
		# line in RSA: WSJdbcDataSou<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcDataSou%{fld1}> %{agent} Entry" }
				id => "message-WSJdbcDataSou"
				add_field => {
				"event_description" => "WSJdbcDataSou Entry"
					"[event][id]" => "WSJdbcDataSou"
					"[rsa][message][id1]" => "WSJdbcDataSou"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcDataSou:01
		# line in RSA: WSJdbcDataSou<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcDataSou%{fld1}< %{agent} Exit" }
				id => "message-WSJdbcDataSou:01"
				add_field => {
				"event_description" => "WSJdbcDataSou Exit"
					"[event][id]" => "WSJdbcDataSou:01"
					"[rsa][message][id1]" => "WSJdbcDataSou:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcDataSou:02
		# line in RSA: WSJdbcDataSou <fld1> getConnection
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcDataSou %{fld1} getConnection" }
				id => "message-WSJdbcDataSou:02"
				add_field => {
				"event_description" => "WSJdbcDataSou getConnection"
					"[event][id]" => "WSJdbcDataSou:02"
					"[rsa][message][id1]" => "WSJdbcDataSou:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WSJdbcPrepare" {
		# MESSAGE WSJdbcPrepare
		# line in RSA: WSJdbcPrepare<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcPrepare%{fld1}> %{agent} Entry" }
				id => "message-WSJdbcPrepare"
				add_field => {
				"event_description" => "WSJdbcPrepare Entry"
					"[event][id]" => "WSJdbcPrepare"
					"[rsa][message][id1]" => "WSJdbcPrepare"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcPrepare:01
		# line in RSA: WSJdbcPrepare<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcPrepare%{fld1}< %{agent} Exit" }
				id => "message-WSJdbcPrepare:01"
				add_field => {
				"event_description" => "WSJdbcPrepare Exit"
					"[event][id]" => "WSJdbcPrepare:01"
					"[rsa][message][id1]" => "WSJdbcPrepare:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcPrepare:02
		# line in RSA: WSJdbcPrepare <fld1> state --> CLOSED
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcPrepare %{fld1} state --> CLOSED" }
				id => "message-WSJdbcPrepare:02"
				add_field => {
				"event_description" => "WSJdbcPrepare state CLOSED"
					"[event][id]" => "WSJdbcPrepare:02"
					"[rsa][message][id1]" => "WSJdbcPrepare:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcPrepare:03
		# line in RSA: WSJdbcPrepare <fld1> Cleaning up Statement
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcPrepare %{fld1} Cleaning up Statement" }
				id => "message-WSJdbcPrepare:03"
				add_field => {
				"event_description" => "WSJdbcPrepare Cleaning up Statement"
					"[event][id]" => "WSJdbcPrepare:03"
					"[rsa][message][id1]" => "WSJdbcPrepare:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcPrepare:04
		# line in RSA: WSJdbcPrepare <fld1> { current fetchSize is | setLong | setString } <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^WSJdbcPrepare[\s]+(?<fld1>[^\s]*)[\s]+([\s]*current[\s]+fetchSize[\s]+is[\s]+|[\s]*setLong[\s]+|[\s]*setString[\s]+)[\s]+(?<fld2>.*)$" }
				id => "message-WSJdbcPrepare:04"
				add_field => {
				"event_description" => "Current fetchsize,setLong or setString."
					"[event][id]" => "WSJdbcPrepare:04"
					"[rsa][message][id1]" => "WSJdbcPrepare:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WSJdbcResultS" {
		# MESSAGE WSJdbcResultS
		# line in RSA: WSJdbcResultS<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcResultS%{fld1}> %{agent} Entry" }
				id => "message-WSJdbcResultS"
				add_field => {
				"event_description" => "WSJdbcResultS Entry"
					"[event][id]" => "WSJdbcResultS"
					"[rsa][message][id1]" => "WSJdbcResultS"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcResultS:01
		# line in RSA: WSJdbcResultS<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcResultS%{fld1}< %{agent} Exit" }
				id => "message-WSJdbcResultS:01"
				add_field => {
				"event_description" => "WSJdbcResultS Exit"
					"[event][id]" => "WSJdbcResultS:01"
					"[rsa][message][id1]" => "WSJdbcResultS:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcResultS:02
		# line in RSA: WSJdbcResultS <fld1> state --> CLOSED
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcResultS %{fld1} state --> CLOSED" }
				id => "message-WSJdbcResultS:02"
				add_field => {
				"event_description" => "WSJdbcResultS state CLOSED"
					"[event][id]" => "WSJdbcResultS:02"
					"[rsa][message][id1]" => "WSJdbcResultS:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WSJdbcStateme" {
		# MESSAGE WSJdbcStateme
		# line in RSA: WSJdbcStateme<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcStateme%{fld1}> %{agent} Entry" }
				id => "message-WSJdbcStateme"
				add_field => {
				"event_description" => "WSJdbcStateme Entry"
					"[event][id]" => "WSJdbcStateme"
					"[rsa][message][id1]" => "WSJdbcStateme"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcStateme:01
		# line in RSA: WSJdbcStateme<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcStateme%{fld1}< %{agent} Exit" }
				id => "message-WSJdbcStateme:01"
				add_field => {
				"event_description" => "WSJdbcStateme Exit"
					"[event][id]" => "WSJdbcStateme:01"
					"[rsa][message][id1]" => "WSJdbcStateme:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcStateme:02
		# line in RSA: WSJdbcStateme <fld1> setMaxRows
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcStateme %{fld1} setMaxRows" }
				id => "message-WSJdbcStateme:02"
				add_field => {
				"event_description" => "WSJdbcStateme setMaxRows"
					"[event][id]" => "WSJdbcStateme:02"
					"[rsa][message][id1]" => "WSJdbcStateme:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSJdbcStateme:03
		# line in RSA: WSJdbcStateme <fld1> state --> CLOSED
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSJdbcStateme %{fld1} state --> CLOSED" }
				id => "message-WSJdbcStateme:03"
				add_field => {
				"event_description" => "WSJdbcStateme state CLOSED"
					"[event][id]" => "WSJdbcStateme:03"
					"[rsa][message][id1]" => "WSJdbcStateme:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WSManagedConn" {
		# MESSAGE WSManagedConn
		# line in RSA: WSManagedConn<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSManagedConn%{fld1}> %{agent} Entry" }
				id => "message-WSManagedConn"
				add_field => {
				"event_description" => "WSManagedConn Entry"
					"[event][id]" => "WSManagedConn"
					"[rsa][message][id1]" => "WSManagedConn"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSManagedConn:01
		# line in RSA: WSManagedConn<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSManagedConn%{fld1}< %{agent} Exit" }
				id => "message-WSManagedConn:01"
				add_field => {
				"event_description" => "WSManagedConn Exit"
					"[event][id]" => "WSManagedConn:01"
					"[rsa][message][id1]" => "WSManagedConn:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSManagedConn:02
		# line in RSA: WSManagedConn <fld1> mc matched
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSManagedConn %{fld1} mc matched" }
				id => "message-WSManagedConn:02"
				add_field => {
				"event_description" => "WSManagedConn mc matched"
					"[event][id]" => "WSManagedConn:02"
					"[rsa][message][id1]" => "WSManagedConn:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSManagedConn:03
		# line in RSA: WSManagedConn <fld1> the size of the set should be <fld2>, and it is<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSManagedConn %{fld1} the size of the set should be %{fld2}, and it is%{fld3}" }
				id => "message-WSManagedConn:03"
				add_field => {
					"[event][id]" => "WSManagedConn:03"
					"[rsa][message][id1]" => "WSManagedConn:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WSRdbManagedC" {
		# MESSAGE WSRdbManagedC
		# line in RSA: WSRdbManagedC<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC%{fld1}> %{agent} Entry" }
				id => "message-WSRdbManagedC"
				add_field => {
				"event_description" => "WSRdbManagedC Entry"
					"[event][id]" => "WSRdbManagedC"
					"[rsa][message][id1]" => "WSRdbManagedC"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:01
		# line in RSA: WSRdbManagedC<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC%{fld1}< %{agent} Exit" }
				id => "message-WSRdbManagedC:01"
				add_field => {
				"event_description" => "WSRdbManagedC Exit"
					"[event][id]" => "WSRdbManagedC:01"
					"[rsa][message][id1]" => "WSRdbManagedC:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:02
		# line in RSA: WSRdbManagedC <fld1> { (wasLazilyEnlisted && state ==<fld2>) | wasLazilyEnlisted }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^WSRdbManagedC[\s]+(?<fld1>[^\s]*)[\s]+([\s]*\(wasLazilyEnlisted[\s]+&&[\s]+state[\s]+==(?<fld2>[^\)]*)\)[\s]+|[\s]*wasLazilyEnlisted[\s]+)$" }
				id => "message-WSRdbManagedC:02"
				add_field => {
				"event_description" => "wasLazilyEnlisted"
					"[event][id]" => "WSRdbManagedC:02"
					"[rsa][message][id1]" => "WSRdbManagedC:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:03
		# line in RSA: WSRdbManagedC <fld1> { previous/current value: | state == }<fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^WSRdbManagedC[\s]+(?<fld1>[^\s]*)[\s]+([\s]*previous/current[\s]+value:[\s]+|[\s]*state[\s]+==[\s]+)(?<fld2>.*)$" }
				id => "message-WSRdbManagedC:03"
				add_field => {
					"[event][id]" => "WSRdbManagedC:03"
					"[rsa][message][id1]" => "WSRdbManagedC:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:04
		# line in RSA: WSRdbManagedC <fld1> Set Isolation Level to <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC %{fld1} Set Isolation Level to %{fld2}" }
				id => "message-WSRdbManagedC:04"
				add_field => {
				"event_description" => "Set Isolation Level"
					"[event][id]" => "WSRdbManagedC:04"
					"[rsa][message][id1]" => "WSRdbManagedC:04"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:05
		# line in RSA: WSRdbManagedC <fld1> Matching Prepared Statement found in cache:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC %{fld1} Matching Prepared Statement found in cache:%{fld2}" }
				id => "message-WSRdbManagedC:05"
				add_field => {
				"event_description" => "Matching Prepared Statement found in cache"
					"[event][id]" => "WSRdbManagedC:05"
					"[rsa][message][id1]" => "WSRdbManagedC:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:06
		# line in RSA: WSRdbManagedC <fld1> isEnlistmentDisabled() returning:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC %{fld1} isEnlistmentDisabled() returning:%{fld2}" }
				id => "message-WSRdbManagedC:06"
				add_field => {
				"event_description" => "isEnlistmentDisabled returning"
					"[event][id]" => "WSRdbManagedC:06"
					"[rsa][message][id1]" => "WSRdbManagedC:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:07
		# line in RSA: WSRdbManagedC <fld1> setting client info implicitly on connection:<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC %{fld1} setting client info implicitly on connection:%{fld2}" }
				id => "message-WSRdbManagedC:07"
				add_field => {
				"event_description" => "setting client info implicitly"
					"[event][id]" => "WSRdbManagedC:07"
					"[rsa][message][id1]" => "WSRdbManagedC:07"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:08
		# line in RSA: WSRdbManagedC <fld1> cacheStatement
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC %{fld1} cacheStatement" }
				id => "message-WSRdbManagedC:08"
				add_field => {
				"event_description" => "cacheStatement"
					"[event][id]" => "WSRdbManagedC:08"
					"[rsa][message][id1]" => "WSRdbManagedC:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:09
		# line in RSA: WSRdbManagedC <fld1> Firing <fld2> event for:<agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC %{fld1} Firing %{fld2} event for:%{agent}" }
				id => "message-WSRdbManagedC:09"
				add_field => {
				"event_description" => "Firing Event"
					"[event][id]" => "WSRdbManagedC:09"
					"[rsa][message][id1]" => "WSRdbManagedC:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSRdbManagedC:10
		# line in RSA: WSRdbManagedC<fld1><id>:<fld2>The exception is:<fld3> <result>.<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSRdbManagedC%{fld1}%{id}:%{fld2}The exception is:%{fld3} %{result}.%{fld4}" }
				id => "message-WSRdbManagedC:10"
				add_field => {
				"event_description" => "Closed Connection"
					"[event][id]" => "WSRdbManagedC:10"
					"[rsa][message][id1]" => "WSRdbManagedC:10"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId481
	# line in RSA: EJB jar stopped: <filename>
	else if [logstash][msgparser][id] == "msgParserId481" {
		dissect {
			mapping => { "message" => "EJB jar stopped: %{filename}" }
			id => "msgParserId481"
			add_field => {
				"event_description" => "EJB jar stopped"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId482
	# line in RSA: The SOAP Acceptor Channel has been configured.
	else if [logstash][msgparser][id] == "msgParserId482" {
		dissect {
			mapping => { "message" => "The SOAP Acceptor Channel has been configured." }
			id => "msgParserId482"
			add_field => {
				"event_description" => "SOAP Acceptor Channel configured"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "WSStateManage" {
		# MESSAGE WSStateManage
		# line in RSA: WSStateManage<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSStateManage%{fld1}> %{agent} Entry" }
				id => "message-WSStateManage"
				add_field => {
				"event_description" => "Entry"
					"[event][id]" => "WSStateManage"
					"[rsa][message][id1]" => "WSStateManage"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WSStateManage:01
		# line in RSA: WSStateManage<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WSStateManage%{fld1}< %{agent} Exit" }
				id => "message-WSStateManage:01"
				add_field => {
				"event_description" => "Exit"
					"[event][id]" => "WSStateManage:01"
					"[rsa][message][id1]" => "WSStateManage:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WASSessionCor" {
		# MESSAGE WASSessionCor
		# line in RSA: WASSessionCor <fld1> <fld2> SESN0176I: Will create a new session context for application key <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WASSessionCor %{fld1} %{fld2} SESN0176I: Will create a new session context for application key %{info}" }
				id => "message-WASSessionCor"
				add_field => {
				"event_description" => "Will create a new session context for application key."
					"[event][id]" => "WASSessionCor"
					"[rsa][message][id1]" => "WASSessionCor"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WASSessionCor:01
		# line in RSA: WASSessionCor <fld1> <fld2> setNextId Detected JSESSIONID with invalid length; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WASSessionCor %{fld1} %{fld2} setNextId Detected JSESSIONID with invalid length; %{info}" }
				id => "message-WASSessionCor:01"
				add_field => {
				"event_description" => "setNextId Detected JSESSIONID with invalid length;"
					"[event][id]" => "WASSessionCor:01"
					"[rsa][message][id1]" => "WASSessionCor:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WASSessionCor:02
		# line in RSA: WASSessionCor <fld1> <fld2> setCookie <fld3>: The response is already committed to the client. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "WASSessionCor %{fld1} %{fld2} setCookie %{fld3}: The response is already committed to the client. %{info}" }
				id => "message-WASSessionCor:02"
				add_field => {
				"event_description" => "The response is already committed to the client"
					"[event][id]" => "WASSessionCor:02"
					"[rsa][message][id1]" => "WASSessionCor:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId488
	# line in RSA: The installed level of the WebSphere MQ messaging provider is <version>
	else if [logstash][msgparser][id] == "msgParserId488" {
		dissect {
			mapping => { "message" => "The installed level of the WebSphere MQ messaging provider is %{version}" }
			id => "msgParserId488"
			add_field => {
				"event_description" => "The installed level of the WebSphere MQ messaging provider"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId489
	# line in RSA: RAR implementation version <version>
	else if [logstash][msgparser][id] == "msgParserId489" {
		dissect {
			mapping => { "message" => "RAR implementation version %{version}" }
			id => "msgParserId489"
			add_field => {
				"event_description" => "RAR implementation version"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId490
	# line in RSA: Server <hostname> open for e-business
	else if [logstash][msgparser][id] == "msgParserId490" {
		dissect {
			mapping => { "message" => "Server %{hostname} open for e-business" }
			id => "msgParserId490"
			add_field => {
				"event_description" => "Server open for e-business."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId491
	# line in RSA: Error occurred during startup <fld1>
	else if [logstash][msgparser][id] == "msgParserId491" {
		dissect {
			mapping => { "message" => "Error occurred during startup %{fld1}" }
			id => "msgParserId491"
			add_field => {
				"event_description" => "Error occurred during startup."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId492
	# line in RSA:  Server <hostname> stopped
	else if [logstash][msgparser][id] == "msgParserId492" {
		dissect {
			mapping => { "message" => "Server %{hostname} stopped" }
			id => "msgParserId492"
			add_field => {
				"event_description" => "Server stopped "
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId493
	# line in RSA: Starting EJB jar: <fld1>
	else if [logstash][msgparser][id] == "msgParserId493" {
		dissect {
			mapping => { "message" => "Starting EJB jar: %{fld1}" }
			id => "msgParserId493"
			add_field => {
				"event_description" => "Starting EJB jar"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId494
	# line in RSA: Stopping EJB jar: <fld1>
	else if [logstash][msgparser][id] == "msgParserId494" {
		dissect {
			mapping => { "message" => "Stopping EJB jar: %{fld1}" }
			id => "msgParserId494"
			add_field => {
				"event_description" => "Stopping EJB jar"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId495
	# line in RSA: Binding <fld1> as <fld2>
	else if [logstash][msgparser][id] == "msgParserId495" {
		dissect {
			mapping => { "message" => "Binding %{fld1} as %{fld2}" }
			id => "msgParserId495"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId496
	# line in RSA: EJB jar started: <info>
	else if [logstash][msgparser][id] == "msgParserId496" {
		dissect {
			mapping => { "message" => "EJB jar started: %{info}" }
			id => "msgParserId496"
			add_field => {
				"event_description" => "EJB jar started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId497
	# line in RSA:  <application> is disabled.
	else if [logstash][msgparser][id] == "msgParserId497" {
		dissect {
			mapping => { "message" => "%{application} is disabled." }
			id => "msgParserId497"
			add_field => {
				"event_description" => "application disabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId498
	# line in RSA:  An exception occurred getting a socket for port <network_port> on hostname <hostname> with an IP address of <hostip>
	else if [logstash][msgparser][id] == "msgParserId498" {
		dissect {
			mapping => { "message" => "An exception occurred getting a socket for port %{network_port} on hostname %{hostname} with an IP address of %{hostip}" }
			id => "msgParserId498"
			add_field => {
				"event_description" => "An exception occurred getting a socket for port"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId499
	# line in RSA: The runtime provisioning feature is disabled. All components will be started.
	else if [logstash][msgparser][id] == "msgParserId499" {
		dissect {
			mapping => { "message" => "The runtime provisioning feature is disabled. All components will be started." }
			id => "msgParserId499"
			add_field => {
				"event_description" => "The runtime provisioning feature is disabled. All components will be started."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId500
	# line in RSA: Starting composition unit <info>
	else if [logstash][msgparser][id] == "msgParserId500" {
		dissect {
			mapping => { "message" => "Starting composition unit %{info}" }
			id => "msgParserId500"
			add_field => {
				"event_description" => "Starting composition unit"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId501
	# line in RSA: Composition unit <info> started.
	else if [logstash][msgparser][id] == "msgParserId501" {
		dissect {
			mapping => { "message" => "Composition unit %{info} started." }
			id => "msgParserId501"
			add_field => {
				"event_description" => "Composition Unit started."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId502
	# line in RSA: Starting application: <agent> 
	else if [logstash][msgparser][id] == "msgParserId502" {
		dissect {
			mapping => { "message" => "Starting application: %{agent}" }
			id => "msgParserId502"
			add_field => {
				"event_description" => "Starting application"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId503
	# line in RSA: Application: <application>  Application build level: <info>
	else if [logstash][msgparser][id] == "msgParserId503" {
		dissect {
			mapping => { "message" => "Application: %{application}  Application build level: %{info}" }
			id => "msgParserId503"
			add_field => {
				"event_description" => "Application and Application build level information."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId504
	# line in RSA: Preparing to start EJB jar: <fld1> 
	else if [logstash][msgparser][id] == "msgParserId504" {
		dissect {
			mapping => { "message" => "Preparing to start EJB jar: %{fld1}" }
			id => "msgParserId504"
			add_field => {
				"event_description" => "Preparing to start EJB jar."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId505
	# line in RSA: Stopping application: <agent> 
	else if [logstash][msgparser][id] == "msgParserId505" {
		dissect {
			mapping => { "message" => "Stopping application: %{agent}" }
			id => "msgParserId505"
			add_field => {
				"event_description" => "Stopping application"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId506
	# line in RSA: Application stopped: <agent> 
	else if [logstash][msgparser][id] == "msgParserId506" {
		dissect {
			mapping => { "message" => "Application stopped: %{agent}" }
			id => "msgParserId506"
			add_field => {
				"event_description" => "Application stopped"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId507
	# line in RSA:  Application started: <agent>
	else if [logstash][msgparser][id] == "msgParserId507" {
		dissect {
			mapping => { "message" => "Application started: %{agent}" }
			id => "msgParserId507"
			add_field => {
				"event_description" => "Application started"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId508
	# line in RSA: The ThreadPool setting on the <info> service is deprecated.
	else if [logstash][msgparser][id] == "msgParserId508" {
		dissect {
			mapping => { "message" => "The ThreadPool setting on the %{info} service is deprecated." }
			id => "msgParserId508"
			add_field => {
				"event_description" => "The ThreadPool setting service is deprecated."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId509
	# line in RSA: Initializing core configuration models
	else if [logstash][msgparser][id] == "msgParserId509" {
		dissect {
			mapping => { "message" => "Initializing core configuration models" }
			id => "msgParserId509"
			add_field => {
				"event_description" => "Initializing core configuration models"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId510
	# line in RSA: Initializing all server configuration models
	else if [logstash][msgparser][id] == "msgParserId510" {
		dissect {
			mapping => { "message" => "Initializing all server configuration models" }
			id => "msgParserId510"
			add_field => {
				"event_description" => "Initializing all server configuration models"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId511
	# line in RSA: The SOAP Container service has been initialized
	else if [logstash][msgparser][id] == "msgParserId511" {
		dissect {
			mapping => { "message" => "The SOAP Container service has been initialized" }
			id => "msgParserId511"
			add_field => {
				"event_description" => "The SOAP Container service has been initialized"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId512
	# line in RSA: Info: Parsing XML file: <filename>
	else if [logstash][msgparser][id] == "msgParserId512" {
		dissect {
			mapping => { "message" => "Info: Parsing XML file: %{filename}" }
			id => "msgParserId512"
			add_field => {
				"event_description" => "Parsing XML file"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId513
	# line in RSA: Info: Mapping Exception to WebServicesFault.
	else if [logstash][msgparser][id] == "msgParserId513" {
		dissect {
			mapping => { "message" => "Info: Mapping Exception to WebServicesFault." }
			id => "msgParserId513"
			add_field => {
				"event_description" => "Mapping Exception"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId514
	# line in RSA: The Axis2 service has been started.
	else if [logstash][msgparser][id] == "msgParserId514" {
		dissect {
			mapping => { "message" => "The Axis2 service has been started." }
			id => "msgParserId514"
			add_field => {
				"event_description" => "The Axis2 service has been started."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId515
	# line in RSA:  wtp <space> I <application> <action> [<filename>] could not be found
	else if [logstash][msgparser][id] == "msgParserId515" {
		dissect {
			mapping => { "message" => "wtp %{space} I %{application} %{action} [%{filename}] could not be found" }
			id => "msgParserId515"
			add_field => {
				"event_description" => "File not found"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId516
	# line in RSA: Transaction service recovering <fld1> transactions.
	else if [logstash][msgparser][id] == "msgParserId516" {
		dissect {
			mapping => { "message" => "Transaction service recovering %{fld1} transactions." }
			id => "msgParserId516"
			add_field => {
				"event_description" => "recovering transactions"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "WTRN0100E" {
		# MESSAGE WTRN0100E
		# line in RSA: All persistant services have been directed to perform recovery processing for this WebSphere server (<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "All persistant services have been directed to perform recovery processing for this WebSphere server (%{fld1})" }
				id => "message-WTRN0100E"
				add_field => {
				"event_description" => "services directed to perform recovery"
					"[event][id]" => "WTRN0100E"
					"[rsa][message][id1]" => "WTRN0100E"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE WTRN0100E:01
		# line in RSA: Performing recovery processing for this WebSphere server (<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Performing recovery processing for this WebSphere server (%{fld1})" }
				id => "message-WTRN0100E:01"
				add_field => {
				"event_description" => "Performing recovery processing"
					"[event][id]" => "WTRN0100E:01"
					"[rsa][message][id1]" => "WTRN0100E:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId519
	# line in RSA: The transaction service has shutdown successfully with no transactions requiring recovery.
	else if [logstash][msgparser][id] == "msgParserId519" {
		dissect {
			mapping => { "message" => "The transaction service has shutdown successfully with no transactions requiring recovery." }
			id => "msgParserId519"
			add_field => {
				"event_description" => "transaction service shutdown"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "XATransaction" {
		# MESSAGE XATransaction
		# line in RSA: XATransaction<fld1>> <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "XATransaction%{fld1}> %{agent} Entry" }
				id => "message-XATransaction"
				add_field => {
				"event_description" => "Entry"
					"[event][id]" => "XATransaction"
					"[rsa][message][id1]" => "XATransaction"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE XATransaction:01
		# line in RSA: XATransaction<fld1><< <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "XATransaction%{fld1}< %{agent} Exit" }
				id => "message-XATransaction:01"
				add_field => {
				"event_description" => "Exit"
					"[event][id]" => "XATransaction:01"
					"[rsa][message][id1]" => "XATransaction:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE XATransaction:02
		# line in RSA: XATransaction <fld1> enlisting XATranWrapper :<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "XATransaction %{fld1} enlisting XATranWrapper :%{fld2}" }
				id => "message-XATransaction:02"
				add_field => {
				"event_description" => "Set Isolation Level"
					"[event][id]" => "XATransaction:02"
					"[rsa][message][id1]" => "XATransaction:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE XATransaction:03
		# line in RSA: XATransaction <fld1> Releasing the connection to the pool.<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "XATransaction %{fld1} Releasing the connection to the pool.%{fld2}" }
				id => "message-XATransaction:03"
				add_field => {
				"event_description" => "Releasing the connection"
					"[event][id]" => "XATransaction:03"
					"[rsa][message][id1]" => "XATransaction:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE XATransaction:04
		# line in RSA: XATransaction <fld1> Using transaction <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "XATransaction %{fld1} Using transaction %{fld2}" }
				id => "message-XATransaction:04"
				add_field => {
				"event_description" => "Using transaction"
					"[event][id]" => "XATransaction:04"
					"[rsa][message][id1]" => "XATransaction:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "XidImpl" {
		# MESSAGE XidImpl
		# line in RSA:   <fld1> > <agent> Entry
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} > %{agent} Entry" }
				id => "message-XidImpl"
				add_field => {
				"event_description" => "Entry"
					"[event][id]" => "XidImpl"
					"[rsa][message][id1]" => "XidImpl"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE XidImpl:01
		# line in RSA:   <fld1> << <agent> Exit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} < %{agent} Exit" }
				id => "message-XidImpl:01"
				add_field => {
				"event_description" => "Exit"
					"[event][id]" => "XidImpl:01"
					"[rsa][message][id1]" => "XidImpl:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE XidImpl:02
		# line in RSA: XidImpl <fld1> Creating XID for <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "XidImpl %{fld1} Creating XID for %{fld2}" }
				id => "message-XidImpl:02"
				add_field => {
				"event_description" => "Creating XID"
					"[event][id]" => "XidImpl:02"
					"[rsa][message][id1]" => "XidImpl:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "GET" {
		# MESSAGE GET:02
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" HTTP/1.1" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" HTTP/1.1\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-GET:02"
				add_field => {
				"network_service" => "HTTP/1.1"
					"[event][id]" => "GET:02"
					"[rsa][message][id1]" => "GET:02"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE GET
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-GET"
				add_field => {
					"[event][id]" => "GET"
					"[rsa][message][id1]" => "GET"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE GET:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-GET:01"
				add_field => {
					"[event][id]" => "GET:01"
					"[rsa][message][id1]" => "GET:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HEAD" {
		# MESSAGE HEAD
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-HEAD"
				add_field => {
					"[event][id]" => "HEAD"
					"[rsa][message][id1]" => "HEAD"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE HEAD:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-HEAD:01"
				add_field => {
					"[event][id]" => "HEAD:01"
					"[rsa][message][id1]" => "HEAD:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LOCK" {
		# MESSAGE LOCK
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-LOCK"
				add_field => {
					"[event][id]" => "LOCK"
					"[rsa][message][id1]" => "LOCK"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE LOCK:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-LOCK:01"
				add_field => {
					"[event][id]" => "LOCK:01"
					"[rsa][message][id1]" => "LOCK:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "OPTIONS" {
		# MESSAGE OPTIONS
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-OPTIONS"
				add_field => {
					"[event][id]" => "OPTIONS"
					"[rsa][message][id1]" => "OPTIONS"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE OPTIONS:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-OPTIONS:01"
				add_field => {
					"[event][id]" => "OPTIONS:01"
					"[rsa][message][id1]" => "OPTIONS:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "POST" {
		# MESSAGE POST
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-POST"
				add_field => {
					"[event][id]" => "POST"
					"[rsa][message][id1]" => "POST"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE POST:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-POST:01"
				add_field => {
					"[event][id]" => "POST:01"
					"[rsa][message][id1]" => "POST:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PROPFIND" {
		# MESSAGE PROPFIND
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-PROPFIND"
				add_field => {
					"[event][id]" => "PROPFIND"
					"[rsa][message][id1]" => "PROPFIND"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE PROPFIND:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-PROPFIND:01"
				add_field => {
					"[event][id]" => "PROPFIND:01"
					"[rsa][message][id1]" => "PROPFIND:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId531
	# line in RSA: PropertyMessa <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId531" {
		dissect {
			mapping => { "message" => "PropertyMessa %{fld1} %{event_description}" }
			id => "msgParserId531"
			add_field => {
				"event_description" => "FFDC Provider Installed."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "TRACE" {
		# MESSAGE TRACE
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> "<web_host>" "<webpage>" "<web_query>" <network_service>" <resultcode> <sbytes> "<web_referer>" "<user_agent>" "<web_cookie>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} \"%{web_host}\" \"%{webpage}\" \"%{web_query}\" %{network_service}\" %{resultcode} %{sbytes} \"%{web_referer}\" \"%{user_agent}\" \"%{web_cookie}\"" }
				id => "message-TRACE"
				add_field => {
					"[event][id]" => "TRACE"
					"[rsa][message][id1]" => "TRACE"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE TRACE:01
		# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] "<web_method> <webpage> <network_service>" <resultcode> <sbytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] \"%{web_method} %{webpage} %{network_service}\" %{resultcode} %{sbytes}" }
				id => "message-TRACE:01"
				add_field => {
					"[event][id]" => "TRACE:01"
					"[rsa][message][id1]" => "TRACE:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{fld7}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId532
	# line in RSA:  <saddr> <fld5> <username> [<fld7> <timezone>] <fld8> <resultcode> <fld9>
	else if [logstash][msgparser][id] == "msgParserId532" {
		dissect {
			mapping => { "message" => "%{saddr} %{fld5} %{username} [%{fld7} %{timezone}] %{fld8} %{resultcode} %{fld9}" }
			id => "msgParserId532"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld7}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	# PARSER msgParserId533
	# line in RSA:  logger <fld1> 
	else if [logstash][msgparser][id] == "msgParserId533" {
		dissect {
			mapping => { "message" => "logger %{fld1}" }
			id => "msgParserId533"
			add_field => {
				"event_description" => "logger"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Logger" {
		# MESSAGE Logger
		# line in RSA: Logger <space>I org.hdiv.logs.Logger log <event_description>:<result>;<directory>;<fld1>;<id>;<hostip>;<fld2>;<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logger %{space}I org.hdiv.logs.Logger log %{event_description}:%{result};%{directory};%{fld1};%{id};%{hostip};%{fld2};%{username}" }
				id => "message-Logger"
				add_field => {
					"[event][id]" => "Logger"
					"[rsa][message][id1]" => "Logger"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE Logger:01
		# line in RSA: Logger <space>I org.hdiv.logs.Logger log <event_description>;<directory>;<fld1>;<id>;<hostip>;<fld2>;<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logger %{space}I org.hdiv.logs.Logger log %{event_description};%{directory};%{fld1};%{id};%{hostip};%{fld2};%{username}" }
				id => "message-Logger:01"
				add_field => {
					"[event][id]" => "Logger:01"
					"[rsa][message][id1]" => "Logger:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE Logger:03
		# line in RSA: Logger <space>I org.hdiv.logs.Logger log <event_description>;<directory>;<fld1>;<id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logger %{space}I org.hdiv.logs.Logger log %{event_description};%{directory};%{fld1};%{id}" }
				id => "message-Logger:03"
				add_field => {
					"[event][id]" => "Logger:03"
					"[rsa][message][id1]" => "Logger:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId537
	# line in RSA:  <fld1> user <username> <fld2> exception <info>: No user <fld3> found
	else if [logstash][msgparser][id] == "msgParserId537" {
		dissect {
			mapping => { "message" => "%{fld1} user %{username} %{fld2} exception %{info}: No user %{fld3} found" }
			id => "msgParserId537"
			add_field => {
				"event_description" => "User not found"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId538
	# line in RSA:  LdapRegistryI E <space> No user <username> found
	else if [logstash][msgparser][id] == "msgParserId538" {
		dissect {
			mapping => { "message" => "LdapRegistryI E %{space} No user %{username} found" }
			id => "msgParserId538"
			add_field => {
				"event_description" => "User not found"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId539
	# line in RSA:  <info>: <fld1>: <event_time_string>, <fld2>: <fld3>.
	else if [logstash][msgparser][id] == "msgParserId539" {
		dissect {
			mapping => { "message" => "%{info}: %{fld1}: %{event_time_string}, %{fld2}: %{fld3}." }
			id => "msgParserId539"
			add_field => {
				"event_description" => "Token expired"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId540
	# line in RSA:  [Servlet Error]-[<fld1>]: <info>
	else if [logstash][msgparser][id] == "msgParserId540" {
		dissect {
			mapping => { "message" => "[Servlet Error]-[%{fld1}]: %{info}" }
			id => "msgParserId540"
			add_field => {
				"event_description" => "Servlet error"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId541
	# line in RSA:  <fld1>, <info>
	else if [logstash][msgparser][id] == "msgParserId541" {
		dissect {
			mapping => { "message" => "%{fld1}, %{info}" }
			id => "msgParserId541"
			add_field => {
				"event_description" => "Error closing a JDBC child wrapper"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId542
	# line in RSA: <fld1> | Event Type = SECURITY_RESOURCE_ACCESS | Outcome = SUCCESSFUL | OutcomeReason = <result> | OutcomeReasonCode = <resultcode> | SessionId = <fld2> | RemoteHost = <dhost> | RemoteAddr = <daddr> | RemotePort = <dport> | ProgName = <application> | Action = <action> | AppUserName = <username> | ResourceName = <process> | RegistryUserName = <service_account> | AccessDecision = <disposition> | ResourceType = <service> | ResourceUniqueId = <fld3> | PermissionsChecked = <fld4> | PermissionsGranted = <privilege> | RolesChecked = <fld5> | RolesGranted = <user_role> | CreationTime = <fld6> <fld7> <fld8> <fld9> <fld10> <fld11> | GlobalInstanceId = <fld12> | LastEventTrailId = <fld13> | EventTrailId = <fld14> | FirstCaller = <fld15> | CallerList = <fld16> | Domain = <domain> | Realm = <realm> | RegistryType = <fld17> | Url = <url>
	else if [logstash][msgparser][id] == "msgParserId542" {
		dissect {
			mapping => { "message" => "%{fld1} | Event Type = SECURITY_RESOURCE_ACCESS | Outcome = SUCCESSFUL | OutcomeReason = %{result} | OutcomeReasonCode = %{resultcode} | SessionId = %{fld2} | RemoteHost = %{dhost} | RemoteAddr = %{daddr} | RemotePort = %{dport} | ProgName = %{application} | Action = %{action} | AppUserName = %{username} | ResourceName = %{process} | RegistryUserName = %{service_account} | AccessDecision = %{disposition} | ResourceType = %{service} | ResourceUniqueId = %{fld3} | PermissionsChecked = %{fld4} | PermissionsGranted = %{privilege} | RolesChecked = %{fld5} | RolesGranted = %{user_role} | CreationTime = %{fld6} %{fld7} %{fld8} %{fld9} %{fld10} %{fld11} | GlobalInstanceId = %{fld12} | LastEventTrailId = %{fld13} | EventTrailId = %{fld14} | FirstCaller = %{fld15} | CallerList = %{fld16} | Domain = %{domain} | Realm = %{realm} | RegistryType = %{fld17} | Url = %{url}" }
			id => "msgParserId542"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld7} %{fld8} %{fld9} %{fld11}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "SECURITY_AUTHN" {
		# MESSAGE SECURITY_AUTHN_SUCCESSFUL
		# line in RSA: <fld1> | Event Type = SECURITY_AUTHN | Outcome = SUCCESSFUL | OutcomeReason = <result> | OutcomeReasonCode = <resultcode> | SessionId = <fld2> | RemoteHost = <dhost> | RemoteAddr = <daddr> | RemotePort = <dport> | ProgName = <application> | Action = <action> | AppUserName = <username> | ResourceName = <process> | RegistryUserName = <service_account> | AccessDecision = <disposition> | ResourceType = <service> | ResourceUniqueId = <fld3> | PermissionsChecked = <fld4> | PermissionsGranted = <privilege> | RolesChecked = <fld5> | RolesGranted = <user_role> | CreationTime = <fld6> <fld7> <fld8> <fld9> <fld10> <fld11> | GlobalInstanceId = <fld12> | EventTrailId = <fld14> | FirstCaller = <fld15> | Realm = <realm> | RegistryType = <fld17> | AuthnType = <fld18> | Provider = <fld19> | ProviderStatus = <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} | Event Type = SECURITY_AUTHN | Outcome = SUCCESSFUL | OutcomeReason = %{result} | OutcomeReasonCode = %{resultcode} | SessionId = %{fld2} | RemoteHost = %{dhost} | RemoteAddr = %{daddr} | RemotePort = %{dport} | ProgName = %{application} | Action = %{action} | AppUserName = %{username} | ResourceName = %{process} | RegistryUserName = %{service_account} | AccessDecision = %{disposition} | ResourceType = %{service} | ResourceUniqueId = %{fld3} | PermissionsChecked = %{fld4} | PermissionsGranted = %{privilege} | RolesChecked = %{fld5} | RolesGranted = %{user_role} | CreationTime = %{fld6} %{fld7} %{fld8} %{fld9} %{fld10} %{fld11} | GlobalInstanceId = %{fld12} | EventTrailId = %{fld14} | FirstCaller = %{fld15} | Realm = %{realm} | RegistryType = %{fld17} | AuthnType = %{fld18} | Provider = %{fld19} | ProviderStatus = %{fld20}" }
				id => "message-SECURITY_AUTHN_SUCCESSFUL"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "SECURITY_AUTHN_SUCCESSFUL"
					"[rsa][message][id1]" => "SECURITY_AUTHN_SUCCESSFUL"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{fld7} %{fld8} %{fld9} %{fld11}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE SECURITY_AUTHN_UNSUCCESSFUL
		# line in RSA: <fld1> | Event Type = SECURITY_AUTHN | Outcome = UNSUCCESSFUL | OutcomeReason = <result> | OutcomeReasonCode = <resultcode> | SessionId = <fld2> | RemoteHost = <dhost> | RemoteAddr = <daddr> | RemotePort = <dport> | ProgName = <application> | Action = <action> | AppUserName = <username> | ResourceName = <process> | RegistryUserName = <service_account> | AccessDecision = <disposition> | ResourceType = <service> | ResourceUniqueId = <fld3> | PermissionsChecked = <fld4> | PermissionsGranted = <privilege> | RolesChecked = <fld5> | RolesGranted = <user_role> | CreationTime = <fld6> <fld7> <fld8> <fld9> <fld10> <fld11> | GlobalInstanceId = <fld12> | EventTrailId = <fld14> | FirstCaller = <fld15> | Realm = <realm> | RegistryType = <fld17> | AuthnType = <fld18> | Provider = <fld19> | ProviderStatus = <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} | Event Type = SECURITY_AUTHN | Outcome = UNSUCCESSFUL | OutcomeReason = %{result} | OutcomeReasonCode = %{resultcode} | SessionId = %{fld2} | RemoteHost = %{dhost} | RemoteAddr = %{daddr} | RemotePort = %{dport} | ProgName = %{application} | Action = %{action} | AppUserName = %{username} | ResourceName = %{process} | RegistryUserName = %{service_account} | AccessDecision = %{disposition} | ResourceType = %{service} | ResourceUniqueId = %{fld3} | PermissionsChecked = %{fld4} | PermissionsGranted = %{privilege} | RolesChecked = %{fld5} | RolesGranted = %{user_role} | CreationTime = %{fld6} %{fld7} %{fld8} %{fld9} %{fld10} %{fld11} | GlobalInstanceId = %{fld12} | EventTrailId = %{fld14} | FirstCaller = %{fld15} | Realm = %{realm} | RegistryType = %{fld17} | AuthnType = %{fld18} | Provider = %{fld19} | ProviderStatus = %{fld20}" }
				id => "message-SECURITY_AUTHN_UNSUCCESSFUL"
				add_field => {
					"[event][id]" => "SECURITY_AUTHN_UNSUCCESSFUL"
					"[rsa][message][id1]" => "SECURITY_AUTHN_UNSUCCESSFUL"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld7} %{fld8} %{fld9} %{fld11}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "FIPSManager" {
		# MESSAGE FIPSManager
		# line in RSA: FIPSManager <fld1> FIPS security mode is : <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FIPSManager %{fld1} FIPS security mode is : %{info}." }
				id => "message-FIPSManager"
				add_field => {
				"event_description" => "FIPS security mode"
					"[event][id]" => "FIPSManager"
					"[rsa][message][id1]" => "FIPSManager"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FIPSManager:01
		# line in RSA: FIPSManager {<< | >} <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^FIPSManager[\s]+(<[\s]+|[\s]*>)[\s]+(?<info>.*)$" }
				id => "message-FIPSManager:01"
				add_field => {
					"[event][id]" => "FIPSManager:01"
					"[rsa][message][id1]" => "FIPSManager:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FIPSManager:02
		# line in RSA: FIPSManager <fld1> FIPS parameters are not initialized yet.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FIPSManager %{fld1} FIPS parameters are not initialized yet." }
				id => "message-FIPSManager:02"
				add_field => {
				"event_description" => "FIPS parameters are not initialized yet"
					"[event][id]" => "FIPSManager:02"
					"[rsa][message][id1]" => "FIPSManager:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId548
	# line in RSA: GAPAgentCompo I   CWLRS6000I: GAP (Grid Application Placement) Component has initialized successfully on process <process>.
	else if [logstash][msgparser][id] == "msgParserId548" {
		dissect {
			mapping => { "message" => "GAPAgentCompo I   CWLRS6000I: GAP (Grid Application Placement) Component has initialized successfully on process %{process}." }
			id => "msgParserId548"
			add_field => {
				"event_description" => "GAP (Grid Application Placement) Component has initialized successfully on process"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "GridConfigura" {
		# MESSAGE GridConfigura
		# line in RSA: GridConfigura <fld1>: The GridConfigurator initialized successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GridConfigura %{fld1}: The GridConfigurator initialized successfully." }
				id => "message-GridConfigura"
				add_field => {
				"event_description" => "The GridConfigurator initialized successfully."
					"[event][id]" => "GridConfigura"
					"[rsa][message][id1]" => "GridConfigura"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GridConfigura:01
		# line in RSA: GridConfigura <fld1>: The GridConfiguratorMBean was activated successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GridConfigura %{fld1}: The GridConfiguratorMBean was activated successfully." }
				id => "message-GridConfigura:01"
				add_field => {
				"event_description" => "The GridConfiguratorMBean was activated successfully."
					"[event][id]" => "GridConfigura:01"
					"[rsa][message][id1]" => "GridConfigura:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId552
	# line in RSA: GridDBConfigu <fld1>: The GridDBConfigurator initialized successfully.
	else if [logstash][msgparser][id] == "msgParserId552" {
		dissect {
			mapping => { "message" => "GridDBConfigu %{fld1}: The GridDBConfigurator initialized successfully." }
			id => "msgParserId552"
			add_field => {
				"event_description" => "The GridDBConfigurator initialized successfully."
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "BatchSensorCo" {
		# MESSAGE BatchSensorCo
		# line in RSA: BatchSensorCo <fld1>: BatchSensorComponent initializing.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BatchSensorCo %{fld1}: BatchSensorComponent initializing." }
				id => "message-BatchSensorCo"
				add_field => {
				"event_description" => "BatchSensorComponent initializing."
					"[event][id]" => "BatchSensorCo"
					"[rsa][message][id1]" => "BatchSensorCo"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BatchSensorCo:01
		# line in RSA: BatchSensorCo <fld1>: BatchSensorComponent initialized successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BatchSensorCo %{fld1}: BatchSensorComponent initialized successfully." }
				id => "message-BatchSensorCo:01"
				add_field => {
				"event_description" => "BatchSensorComponent initialized successfully."
					"[event][id]" => "BatchSensorCo:01"
					"[rsa][message][id1]" => "BatchSensorCo:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BatchSensorCo:02
		# line in RSA: BatchSensorCo <fld1>: BatchSensorComponent starting...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BatchSensorCo %{fld1}: BatchSensorComponent starting..." }
				id => "message-BatchSensorCo:02"
				add_field => {
				"event_description" => "BatchSensorComponent is starting."
					"[event][id]" => "BatchSensorCo:02"
					"[rsa][message][id1]" => "BatchSensorCo:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE BatchSensorCo:03
		# line in RSA: BatchSensorCo <fld1>: Successfully activated <process>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BatchSensorCo %{fld1}: Successfully activated %{process}." }
				id => "message-BatchSensorCo:03"
				add_field => {
				"event_description" => "Successfully activated process."
					"[event][id]" => "BatchSensorCo:03"
					"[rsa][message][id1]" => "BatchSensorCo:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WebappLifecyc" {
		# MESSAGE WebappLifecyc
		# line in RSA: <datetime>] <fld17> WebappLifecyc <fld1> <action> for <service> event: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld17} WebappLifecyc %{fld1} %{action} for %{service} event: %{fld2}" }
				id => "message-WebappLifecyc"
				add_field => {
				"event_description" => "No chain configured for webapp lifecycle event"
					"[event][id]" => "WebappLifecyc"
					"[rsa][message][id1]" => "WebappLifecyc"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
		# MESSAGE WebappLifecyc:01
		# line in RSA: <datetime>] <fld17> WebappLifecyc <fld1> <action> [<fld2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld17} WebappLifecyc %{fld1} %{action} [%{fld2}]" }
				id => "message-WebappLifecyc:01"
				add_field => {
				"event_description" => "No such chain"
					"[event][id]" => "WebappLifecyc:01"
					"[rsa][message][id1]" => "WebappLifecyc:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId559
	# line in RSA: <datetime>] <fld17> EDHealthCheck <fld1> Exception during Bind user credential validation: <result>: <username> and domain: <domain> 
	else if [logstash][msgparser][id] == "msgParserId559" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} EDHealthCheck %{fld1} Exception during Bind user credential validation: %{result}: %{username} and domain: %{domain}" }
			id => "msgParserId559"
			add_field => {
				"event_description" => "Exception during Bind user credential validation"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	# PARSER msgParserId560
	# line in RSA: <datetime>] <fld17> PolicyResolut <fld1> Can not resolve policy '<policyname>'. Default value used.
	else if [logstash][msgparser][id] == "msgParserId560" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} PolicyResolut %{fld1} Can not resolve policy '%{policyname}'. Default value used." }
			id => "msgParserId560"
			add_field => {
				"event_description" => "Can not resolve policy"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	# PARSER msgParserId561
	# line in RSA: <datetime>] <fld17> CskUtil <fld1> <fld2>
	else if [logstash][msgparser][id] == "msgParserId561" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} CskUtil %{fld1} %{fld2}" }
			id => "msgParserId561"
			add_field => {
				"event_description" => "Can not extract CSK because of wrong password"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	# PARSER msgParserId562
	# line in RSA: <datetime>] <fld17> NonCertAuthen <fld1> <fld2>
	else if [logstash][msgparser][id] == "msgParserId562" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} NonCertAuthen %{fld1} %{fld2}" }
			id => "msgParserId562"
			add_field => {
				"event_description" => "NonCertAuthen"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	# PARSER msgParserId563
	# line in RSA: <datetime>] <fld17> ScrAuthentica <fld1> Begin SCR authentication for session with ID '<sessionid>'
	else if [logstash][msgparser][id] == "msgParserId563" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} ScrAuthentica %{fld1} Begin SCR authentication for session with ID '%{sessionid}'" }
			id => "msgParserId563"
			add_field => {
				"event_description" => "Begin SCR authentication for session with ID"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	# PARSER msgParserId564
	# line in RSA: <datetime>] <fld17> DataCatalog <fld1> Error Encountered.
	else if [logstash][msgparser][id] == "msgParserId564" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} DataCatalog %{fld1} Error Encountered." }
			id => "msgParserId564"
			add_field => {
				"event_description" => "Error Encountered"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SessionManage" {
		# MESSAGE SessionManage
		# line in RSA: <datetime>] <fld17> SessionManage <fld1> Session Invalid: Session has been inactive too long
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld17} SessionManage %{fld1} Session Invalid: Session has been inactive too long" }
				id => "message-SessionManage"
				add_field => {
				"event_description" => "Session has been inactive too long"
					"[event][id]" => "SessionManage"
					"[rsa][message][id1]" => "SessionManage"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
		# MESSAGE SessionManage:01
		# line in RSA: <datetime>] <fld17> SessionManage <fld1> Session not present in IMS.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld17} SessionManage %{fld1} Session not present in IMS." }
				id => "message-SessionManage:01"
				add_field => {
				"event_description" => "Session not present in IMS"
					"[event][id]" => "SessionManage:01"
					"[rsa][message][id1]" => "SessionManage:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId566
	# line in RSA: <datetime>] <fld17> UserActivityL <fld1> <fld2>: SOAP service failed during access check
	else if [logstash][msgparser][id] == "msgParserId566" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} UserActivityL %{fld1} %{fld2}: SOAP service failed during access check" }
			id => "msgParserId566"
			add_field => {
				"event_description" => "SOAP service failed during access check"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	# PARSER msgParserId567
	# line in RSA: <datetime>] <fld17> Synchronizati <fld1> Session ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId567" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} Synchronizati %{fld1} Session ID: %{sessionid}" }
			id => "msgParserId567"
			add_field => {
				"event_description" => "Session"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "DragDropDeplo" {
		# MESSAGE DragDropDeplo
		# line in RSA:  DragDropDeplo <fld1> <fld2>: <service> service has been configured to be <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DragDropDeplo %{fld1} %{fld2}: %{service} service has been configured to be %{action}." }
				id => "message-DragDropDeplo"
				add_field => {
				"event_description" => "Monitored directory application deployment service has been configured to be off"
					"[event][id]" => "DragDropDeplo"
					"[rsa][message][id1]" => "DragDropDeplo"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DragDropDeplo:01
		# line in RSA:  DragDropDeplo <fld1> <fld2>: <service> service is <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DragDropDeplo %{fld1} %{fld2}: %{service} service is %{action}." }
				id => "message-DragDropDeplo:01"
				add_field => {
				"event_description" => "Monitored directory application deployment service has been configured to be off"
					"[event][id]" => "DragDropDeplo:01"
					"[rsa][message][id1]" => "DragDropDeplo:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE DragDropDeplo:02
		# line in RSA:  DragDropDeplo <fld1> <fld2>: Stopping <service> service...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DragDropDeplo %{fld1} %{fld2}: Stopping %{service} service..." }
				id => "message-DragDropDeplo:02"
				add_field => {
				"event_description" => "Monitored directory application deployment service has been configured to be off"
					"[event][id]" => "DragDropDeplo:02"
					"[rsa][message][id1]" => "DragDropDeplo:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "distSecurityC" {
		# MESSAGE distSecurityC
		# line in RSA:  distSecurityC <fld1> securityServiceStarted is <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "distSecurityC %{fld1} securityServiceStarted is %{result}" }
				id => "message-distSecurityC"
				add_field => {
				"event_description" => "securityServiceStarted is true"
					"[event][id]" => "distSecurityC"
					"[rsa][message][id1]" => "distSecurityC"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE distSecurityC:01
		# line in RSA:  distSecurityC <fld1> Security Auditing is <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "distSecurityC %{fld1} Security Auditing is %{action}." }
				id => "message-distSecurityC:01"
				add_field => {
				"event_description" => "Security Auditing is enabled"
					"[event][id]" => "distSecurityC:01"
					"[rsa][message][id1]" => "distSecurityC:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId573
	# line in RSA:  OAuth20Provid <fld1> Initializing <fld2>Auth <fld3> providers.
	else if [logstash][msgparser][id] == "msgParserId573" {
		dissect {
			mapping => { "message" => "OAuth20Provid %{fld1} Initializing %{fld2}Auth %{fld3} providers." }
			id => "msgParserId573"
			add_field => {
				"event_description" => "Initializing Authentication"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId574
	# line in RSA:   WASNameSpaceB <fld1> <fld2>: The server is binding the <interface> interface of the <fld3> enterprise bean in the <fld4> module of the <application> <fld5> The binding location is: <directory> 
	else if [logstash][msgparser][id] == "msgParserId574" {
		dissect {
			mapping => { "message" => "WASNameSpaceB %{fld1} %{fld2}: The server is binding the %{interface} interface of the %{fld3} enterprise bean in the %{fld4} module of the %{application} %{fld5} The binding location is: %{directory}" }
			id => "msgParserId574"
			add_field => {
				"event_description" => "The server is binding the interface"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId575
	# line in RSA:   AbstractEJBRu <fld1> <fld2>: The server is binding the <interface> interface of the <fld3> enterprise bean in the <fld4> module of the <application> <fld5> The binding location is: <directory> 
	else if [logstash][msgparser][id] == "msgParserId575" {
		dissect {
			mapping => { "message" => "AbstractEJBRu %{fld1} %{fld2}: The server is binding the %{interface} interface of the %{fld3} enterprise bean in the %{fld4} module of the %{application} %{fld5} The binding location is: %{directory}" }
			id => "msgParserId575"
			add_field => {
				"event_description" => "The server is binding the interface"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId576
	# line in RSA:   FfdcProvider <fld1> <fld2> logIncident <fld3>: FFDC Incident emitted on <directory> 
	else if [logstash][msgparser][id] == "msgParserId576" {
		dissect {
			mapping => { "message" => "FfdcProvider %{fld1} %{fld2} logIncident %{fld3}: FFDC Incident emitted on %{directory}" }
			id => "msgParserId576"
			add_field => {
				"event_description" => "Incident emitted"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "FileRepositor" {
		# MESSAGE FileRepositor
		# line in RSA:  FileRepositor <fld1> <fld2>: User <username> modified document <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FileRepositor %{fld1} %{fld2}: User %{username} modified document %{filename}" }
				id => "message-FileRepositor"
				add_field => {
				"event_description" => "User modified document"
					"[event][id]" => "FileRepositor"
					"[rsa][message][id1]" => "FileRepositor"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FileRepositor:02
		# line in RSA: <datetime>] <fld3> FileRepositor <fld1> <fld2>: User <username> modified document <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld3} FileRepositor %{fld1} %{fld2}: User %{username} modified document %{filename}" }
				id => "message-FileRepositor:02"
				add_field => {
				"event_description" => "User modified document"
					"[event][id]" => "FileRepositor:02"
					"[rsa][message][id1]" => "FileRepositor:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
		# MESSAGE FileRepositor:01
		# line in RSA:  FileRepositor <fld1>: The following files have been deleted from the configuration repository temporary file area because they are older than <duration> minutes:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FileRepositor %{fld1}: The following files have been deleted from the configuration repository temporary file area because they are older than %{duration} minutes:" }
				id => "message-FileRepositor:01"
				add_field => {
				"event_description" => "files have been deleted from the configuration repository temporary file area"
					"[event][id]" => "FileRepositor:01"
					"[rsa][message][id1]" => "FileRepositor:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId580
	# line in RSA:   ThreadPool <fld1> <fld2>: The request buffer for thread pool "<pool_name>" has reached its capacity.
	else if [logstash][msgparser][id] == "msgParserId580" {
		dissect {
			mapping => { "message" => "ThreadPool %{fld1} %{fld2}: The request buffer for thread pool \"%{pool_name}\" has reached its capacity." }
			id => "msgParserId580"
			add_field => {
				"event_description" => "The request buffer for thread pool has reached its capacity"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId581
	# line in RSA:  collaborator <fld1> <fld2> <event_description>
	else if [logstash][msgparser][id] == "msgParserId581" {
		dissect {
			mapping => { "message" => "collaborator %{fld1} %{fld2} %{event_description}" }
			id => "msgParserId581"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId582
	# line in RSA:  webcontainer <fld1> <fld2> <fld3> <fld4>: The Asynchronous Request Dispatcher is not enabled. Requests sent through either the <fld5> or the <fld6> chain might not be properly handled.
	else if [logstash][msgparser][id] == "msgParserId582" {
		dissect {
			mapping => { "message" => "webcontainer %{fld1} %{fld2} %{fld3} %{fld4}: The Asynchronous Request Dispatcher is not enabled. Requests sent through either the %{fld5} or the %{fld6} chain might not be properly handled." }
			id => "msgParserId582"
			add_field => {
				"event_description" => "The Asynchronous Request Dispatcher is not enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId583
	# line in RSA:  authz  <fld1> <fld2> Initialization of the authorization component completed successfully.
	else if [logstash][msgparser][id] == "msgParserId583" {
		dissect {
			mapping => { "message" => "authz  %{fld1} %{fld2} Initialization of the authorization component completed successfully." }
			id => "msgParserId583"
			add_field => {
				"event_description" => "Initialization of the authorization component completed successfully"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId584
	# line in RSA:  PageTitleTag  <fld1>: Exception while rendering a page: <webpage>: Error retrieving title for <fld2>
	else if [logstash][msgparser][id] == "msgParserId584" {
		dissect {
			mapping => { "message" => "PageTitleTag  %{fld1}: Exception while rendering a page: %{webpage}: Error retrieving title for %{fld2}" }
			id => "msgParserId584"
			add_field => {
				"event_description" => "Exception while rendering a page"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId585
	# line in RSA:  WindowTitleTa  <fld1>: Exception while rendering a page: <webpage>: Error retrieving title for <fld2>
	else if [logstash][msgparser][id] == "msgParserId585" {
		dissect {
			mapping => { "message" => "WindowTitleTa  %{fld1}: Exception while rendering a page: %{webpage}: Error retrieving title for %{fld2}" }
			id => "msgParserId585"
			add_field => {
				"event_description" => "Exception while rendering a page"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId586
	# line in RSA:  DMAdapter  <fld1>: Analysis Engine using data base: <db_name>
	else if [logstash][msgparser][id] == "msgParserId586" {
		dissect {
			mapping => { "message" => "DMAdapter  %{fld1}: Analysis Engine using data base: %{db_name}" }
			id => "msgParserId586"
			add_field => {
				"event_description" => "Analysis Engine using data base"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId587
	# line in RSA:  ManagerAdmin  <fld1>: The trace state has changed. The new trace state is <disposition>.
	else if [logstash][msgparser][id] == "msgParserId587" {
		dissect {
			mapping => { "message" => "ManagerAdmin  %{fld1}: The trace state has changed. The new trace state is %{disposition}." }
			id => "msgParserId587"
			add_field => {
				"event_description" => "The trace state has changed"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId588
	# line in RSA:  ServerCollabo  <fld1>: Server <obj_server> is stopping
	else if [logstash][msgparser][id] == "msgParserId588" {
		dissect {
			mapping => { "message" => "ServerCollabo  %{fld1}: Server %{obj_server} is stopping" }
			id => "msgParserId588"
			add_field => {
				"event_description" => "Server is stopping"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId589
	# line in RSA:  ObjectPoolSer  <fld1>: The Object Pool service is stopping.
	else if [logstash][msgparser][id] == "msgParserId589" {
		dissect {
			mapping => { "message" => "ObjectPoolSer  %{fld1}: The Object Pool service is stopping." }
			id => "msgParserId589"
			add_field => {
				"event_description" => "The Object Pool service is stopping"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId590
	# line in RSA:  CGBridgeServi  <fld1>: The core group bridge service has <action>.
	else if [logstash][msgparser][id] == "msgParserId590" {
		dissect {
			mapping => { "message" => "CGBridgeServi  %{fld1}: The core group bridge service has %{action}." }
			id => "msgParserId590"
			add_field => {
				"event_description" => "The core group bridge service has stopped"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId591
	# line in RSA:  AuditServiceI  <fld1>: Security Auditing is <action>.
	else if [logstash][msgparser][id] == "msgParserId591" {
		dissect {
			mapping => { "message" => "AuditServiceI  %{fld1}: Security Auditing is %{action}." }
			id => "msgParserId591"
			add_field => {
				"event_description" => "Security Auditing is enabled"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "AuditConfigIm" {
		# MESSAGE AuditConfigIm
		# line in RSA:  AuditConfigIm  <fld1>: Successfully loaded AuditServiceProvider name <fld2> and class name <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AuditConfigIm  %{fld1}: Successfully loaded AuditServiceProvider name %{fld2} and class name %{fld3}" }
				id => "message-AuditConfigIm"
				add_field => {
				"event_description" => "Successfully loaded AuditServiceProvider name"
					"[event][id]" => "AuditConfigIm"
					"[rsa][message][id1]" => "AuditConfigIm"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE AuditConfigIm:01
		# line in RSA:  AuditConfigIm  <fld1>: Successfully loaded AuditEventFactory name <fld2> and class name <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "AuditConfigIm  %{fld1}: Successfully loaded AuditEventFactory name %{fld2} and class name %{fld3}" }
				id => "message-AuditConfigIm:01"
				add_field => {
				"event_description" => "Successfully loaded AuditEventFactory name"
					"[event][id]" => "AuditConfigIm:01"
					"[rsa][message][id1]" => "AuditConfigIm:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "FFDCJanitor" {
		# MESSAGE FFDCJanitor
		# line in RSA:  FFDCJanitor  <fld1>: <fld2> log file management removed <fld3> of <fld4> files that have reached their configured maximum age
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FFDCJanitor  %{fld1}: %{fld2} log file management removed %{fld3} of %{fld4} files that have reached their configured maximum age" }
				id => "message-FFDCJanitor"
				add_field => {
				"event_description" => "log file management removed files that have reached their configured maximum age"
					"[event][id]" => "FFDCJanitor"
					"[rsa][message][id1]" => "FFDCJanitor"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE FFDCJanitor:01
		# line in RSA:  FFDCJanitor  <fld1>: <fld2> log file management failed to delete file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FFDCJanitor  %{fld1}: %{fld2} log file management failed to delete file %{filename}" }
				id => "message-FFDCJanitor:01"
				add_field => {
				"event_description" => "log file management failed to delete file"
					"[event][id]" => "FFDCJanitor:01"
					"[rsa][message][id1]" => "FFDCJanitor:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId597
	# line in RSA: <datetime>] <fld17> Registration <fld1> SOAP service failed: getRegistrationStatusByEntAccount errorCode=<resultcode>
	else if [logstash][msgparser][id] == "msgParserId597" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} Registration %{fld1} SOAP service failed: getRegistrationStatusByEntAccount errorCode=%{resultcode}" }
			id => "msgParserId597"
			add_field => {
				"event_description" => "getRegistrationStatusByEntAccount"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "webapp" {
		# MESSAGE webapp
		# line in RSA: <datetime>] <fld17> webapp <fld1>: <username> - [<fld2>]:.action: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{datetime}] %{fld17} webapp %{fld1}: %{username} - [%{fld2}]:.action: %{action}" }
				id => "message-webapp"
				add_field => {
					"[event][id]" => "webapp"
					"[rsa][message][id1]" => "webapp"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
			}
		}
		# MESSAGE webapp:01
		# line in RSA: <fld3> - [<info>]:.<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} - [%{info}]:.%{action}" }
				id => "message-webapp:01"
				add_field => {
				"event_description" => "webapp Servlet Message"
					"[event][id]" => "webapp:01"
					"[rsa][message][id1]" => "webapp:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE webapp:02
		# line in RSA:  webapp <fld3>WebApp reportRecursiveError Error Page Exception <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "webapp %{fld3}WebApp reportRecursiveError Error Page Exception %{result}" }
				id => "message-webapp:02"
				add_field => {
				"event_description" => "WebApp reportRecursiveError Error Page Exception"
					"[event][id]" => "webapp:02"
					"[rsa][message][id1]" => "webapp:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE webapp:03
		# line in RSA:  webapp <fld3>WebApp initializeStaticFileHandler <fld4>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "webapp %{fld3}WebApp initializeStaticFileHandler %{fld4}: %{result}" }
				id => "message-webapp:03"
				add_field => {
				"event_description" => "WebApp initializeStaticFileHandler"
					"[event][id]" => "webapp:03"
					"[rsa][message][id1]" => "webapp:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE webapp:04
		# line in RSA:  webapp <fld3>WebApp notifyServletContextCreated <fld4>: <info>:<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "webapp %{fld3}WebApp notifyServletContextCreated %{fld4}: %{info}:%{fld5}" }
				id => "message-webapp:04"
				add_field => {
				"event_description" => "WebApp notifyServletContextCreated"
					"[event][id]" => "webapp:04"
					"[rsa][message][id1]" => "webapp:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId604
	# line in RSA: <datetime>] <fld17> Authenticatio <fld1> <action>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId604" {
		dissect {
			mapping => { "message" => "%{datetime}] %{fld17} Authenticatio %{fld1} %{action}: %{event_description}" }
			id => "msgParserId604"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d.M.yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "GenericWebApp" {
		# MESSAGE GenericWebApp
		# line in RSA: GenericWebApp I <info> prepareRefresh Refreshing Flow ApplicationContext [<fld1>]: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericWebApp I %{info} prepareRefresh Refreshing Flow ApplicationContext [%{fld1}]: %{fld2}" }
				id => "message-GenericWebApp"
				add_field => {
					"[event][id]" => "GenericWebApp"
					"[rsa][message][id1]" => "GenericWebApp"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
		# MESSAGE GenericWebApp:01
		# line in RSA: GenericWebApp I <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "GenericWebApp I %{info}" }
				id => "message-GenericWebApp:01"
				add_field => {
					"[event][id]" => "GenericWebApp:01"
					"[rsa][message][id1]" => "GenericWebApp:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId615
	# line in RSA: Host Operating System is <os>, version <version>
	else if [logstash][msgparser][id] == "msgParserId615" {
		dissect {
			mapping => { "message" => "Host Operating System is %{os}, version %{version}" }
			id => "msgParserId615"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId616
	# line in RSA: <msg_id> <space>{W|I} <id>:<fld1> at Member <filename>: {<action>.<info>| <info>}
	else if [logstash][msgparser][id] == "msgParserId616" {
		grok {
			match => { "message" => "^(?<msg_id>[^\s]*)[\s]+(?<space>[^WI]*)(W|I)[\s]+(?<id>[^:]*):(?<fld1>[^\s]*)[\s]+at[\s]+Member[\s]+(?<filename>[^:]*):[\s]+((?<action>[^\.]*)\.(?<info>.*)|[\s]*(?<info>.*))$" }
			id => "msgParserId616"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup at Member"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId617
	# line in RSA: <application> <space>I <id>:<fld1> at Member <filename>: <action>,<fld1>,<info>
	else if [logstash][msgparser][id] == "msgParserId617" {
		dissect {
			mapping => { "message" => "%{application} %{space}I %{id}:%{fld1} at Member %{filename}: %{action},%{fld1},%{info}" }
			id => "msgParserId617"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup at Member"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId618
	# line in RSA: <application> <fld1> <fld2> <action> <event_description>
	else if [logstash][msgparser][id] == "msgParserId618" {
		dissect {
			mapping => { "message" => "%{application} %{fld1} %{fld2} %{action} %{event_description}" }
			id => "msgParserId618"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId619
	# line in RSA: <application> <fld1> <fld2> <<<action>> <event_description>
	else if [logstash][msgparser][id] == "msgParserId619" {
		dissect {
			mapping => { "message" => "%{application} %{fld1} %{fld2} <%{action}> %{event_description}" }
			id => "msgParserId619"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId620
	# line in RSA: <fld3> <fld1> <fld2> <<<action>> <info>
	else if [logstash][msgparser][id] == "msgParserId620" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld1} %{fld2} <%{action}> %{info}" }
			id => "msgParserId620"
			add_field => {
				"event_description" => "Security Namespace Handler"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId621
	# line in RSA: <msg_id> <fld1> <fld2> {<action>> | getErrorCodes } <info>
	else if [logstash][msgparser][id] == "msgParserId621" {
		grok {
			match => { "message" => "^(?<msg_id>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+((?<action>[^>]*)>[\s]+|[\s]*getErrorCodes[\s]+)[\s]+(?<info>.*)$" }
			id => "msgParserId621"
			add_field => {
				"event_description" => "SQL Error Codes Factory"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId622
	# line in RSA: <fld1>: <id>
	else if [logstash][msgparser][id] == "msgParserId622" {
		dissect {
			mapping => { "message" => "%{fld1}: %{id}" }
			id => "msgParserId622"
			add_field => {
				"event_description" => "HDIV's session created"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId623
	# line in RSA: <application> <fld1> <id>:<fld2> at Member <filename>: <action>.<info>
	else if [logstash][msgparser][id] == "msgParserId623" {
		dissect {
			mapping => { "message" => "%{application} %{fld1} %{id}:%{fld2} at Member %{filename}: %{action}.%{info}" }
			id => "msgParserId623"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId624
	# line in RSA: <application> <fld1> <id>:<fld2> at Member <filename>:<info>,<fld3>:<fld4>: <action>.
	else if [logstash][msgparser][id] == "msgParserId624" {
		dissect {
			mapping => { "message" => "%{application} %{fld1} %{id}:%{fld2} at Member %{filename}:%{info},%{fld3}:%{fld4}: %{action}." }
			id => "msgParserId624"
			add_field => {
				"event_description" => "DCS Stack DefaultCoreGroup"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "JSSEHelper" {
		# MESSAGE JSSEHelper
		# line in RSA: <fld1> <space>{<<|>} <event_description> <action>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
		# MESSAGE JSSEHelper:01
		# line in RSA: <fld1> <fld2> <fld3>:<event_description>, <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3}:%{event_description}, %{fld4}" }
				id => "message-JSSEHelper:01"
				add_field => {
					"[event][id]" => "JSSEHelper:01"
					"[rsa][message][id1]" => "JSSEHelper:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId625
	# line in RSA: <fld1> <space>{<<|>} <event_description> <action>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
	# PARSER msgParserId627
	# line in RSA: WASSession    <fld1> <fld2> <fld3> Miscellaneous data: <event_description>
	else if [logstash][msgparser][id] == "msgParserId627" {
		dissect {
			mapping => { "message" => "WASSession    %{fld1} %{fld2} %{fld3} Miscellaneous data: %{event_description}" }
			id => "msgParserId627"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId628
	# line in RSA: HttpMethodBas <fld1> <fld2> <fld3> <event_description>
	else if [logstash][msgparser][id] == "msgParserId628" {
		dissect {
			mapping => { "message" => "HttpMethodBas %{fld1} %{fld2} %{fld3} %{event_description}" }
			id => "msgParserId628"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId629
	# line in RSA: ValidatorHelp <fld1> <fld2> <fld3> <event_description>
	else if [logstash][msgparser][id] == "msgParserId629" {
		dissect {
			mapping => { "message" => "ValidatorHelp %{fld1} %{fld2} %{fld3} %{event_description}" }
			id => "msgParserId629"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId630
	# line in RSA: PageNotFound <fld1> <fld2> <fld3> <event_description>
	else if [logstash][msgparser][id] == "msgParserId630" {
		dissect {
			mapping => { "message" => "PageNotFound %{fld1} %{fld2} %{fld3} %{event_description}" }
			id => "msgParserId630"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId631
	# line in RSA: HttpMethodDir <fld1> <fld2> <fld3> <event_description>
	else if [logstash][msgparser][id] == "msgParserId631" {
		dissect {
			mapping => { "message" => "HttpMethodDir %{fld1} %{fld2} %{fld3} %{event_description}" }
			id => "msgParserId631"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m:s" ] }
		}
	}
	# PARSER msgParserId632
	# line in RSA: <fld>
	else if [logstash][msgparser][id] == "msgParserId632" {
		dissect {
			mapping => { "message" => "%{fld}" }
			id => "msgParserId632"
			add_field => {
				"vid" => "%{p_msgid}"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H.m.s", "M/d/yy H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ibmwebspheremsg.json"
#			template_name => "ibmwebsphere_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
