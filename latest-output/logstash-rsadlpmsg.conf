# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "rsadlp"
			"[observer][name]" => "RSA DLP"
			"[observer][type]" => "DLP"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <fld1> <fld2> <fld3> <fld4> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "User=<husername> Policy=<hpolicyname> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit|<haction> eventTimestamp=<fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\|(?<haction>[^\s]*)[\s]+eventTimestamp=(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <fld1> <fld2> <fld3> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "User=<husername> Policy=<hpolicyname> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit|<haction> eventTimestamp=<fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\|(?<haction>[^\s]*)[\s]+eventTimestamp=(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <fld1> <fld2> <fld3> <fld4> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "User=<husername> Policy=<hpolicyname> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit^<haction> eventTimestamp=<fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\^(?<haction>[^\s]*)[\s]+eventTimestamp=(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <fld1> <fld2> <fld3> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "User=<husername> Policy=<hpolicyname> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit^<haction> eventTimestamp=<fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\^(?<haction>[^\s]*)[\s]+eventTimestamp=(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <fld1> <fld2> <fld3> <fld4> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "User=<husername> Policy=<hpolicyname> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=<haction> eventTimestamp=<fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=(?<haction>[^\s]*)[\s]+eventTimestamp=(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <fld1> <fld2> <fld3> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "User=<husername> Policy=<hpolicyname> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=<haction> eventTimestamp=<fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=(?<haction>[^\s]*)[\s]+eventTimestamp=(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <fld1> <fld2> <fld3> <fld4> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "Severity=<hseverity> RiskFactor=<hrisk_num> User=<husername> Policy=<hpolicyname> MatchCount=<hdclass_counter1> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit|<haction> eventTimestamp={ <fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z | <fld5>-<fld6>-<fld7>T<hhour>:<hmin>:<hsec>Z } <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"Severity=(?<hseverity>[^\s]*)[\s]+RiskFactor=(?<hrisk_num>[^\s]*)[\s]+User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+MatchCount=(?<hdclass_counter1>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\|(?<haction>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+|[\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^Z]*)Z[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <fld1> <fld2> <fld3> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "Severity=<hseverity> RiskFactor=<hrisk_num> User=<husername> Policy=<hpolicyname> MatchCount=<hdclass_counter1> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit|<haction> eventTimestamp={ <fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z | <fld5>-<fld6>-<fld7>T<hhour>:<hmin>:<hsec>Z } <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"Severity=(?<hseverity>[^\s]*)[\s]+RiskFactor=(?<hrisk_num>[^\s]*)[\s]+User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+MatchCount=(?<hdclass_counter1>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\|(?<haction>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+|[\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^Z]*)Z[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <fld1> <fld2> { <fld3> <fld4> DLP_EM: | <fld3> DLP_EM: } <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "Severity=<hseverity> RiskFactor=<hrisk_num> User=<husername> Policy=<hpolicyname> MatchCount=<hdclass_counter1> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit^<haction> eventTimestamp={ <fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z | <fld5>-<fld6>-<fld7>T<hhour>:<hmin>:<hsec>Z } <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+([\s]*(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+DLP_EM:[\s]+|[\s]*(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+)[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"Severity=(?<hseverity>[^\s]*)[\s]+RiskFactor=(?<hrisk_num>[^\s]*)[\s]+User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+MatchCount=(?<hdclass_counter1>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\^(?<haction>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+|[\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^Z]*)Z[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <fld1> <fld2> <fld3> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "Severity=<hseverity> RiskFactor=<hrisk_num> User=<husername> Policy=<hpolicyname> MatchCount=<hdclass_counter1> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=audit^<haction> eventTimestamp={ <fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z | <fld5>-<fld6>-<fld7>T<hhour>:<hmin>:<hsec>Z } <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"Severity=(?<hseverity>[^\s]*)[\s]+RiskFactor=(?<hrisk_num>[^\s]*)[\s]+User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+MatchCount=(?<hdclass_counter1>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=audit\^(?<haction>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+|[\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^Z]*)Z[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <fld1> <fld2> <fld3> <fld4> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "Severity=<hseverity> RiskFactor=<hrisk_num> User=<husername> Policy=<hpolicyname> MatchCount=<hdclass_counter1> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=<haction> eventTimestamp={ <fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z | <fld5>-<fld6>-<fld7>T<hhour>:<hmin>:<hsec>Z } <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"Severity=(?<hseverity>[^\s]*)[\s]+RiskFactor=(?<hrisk_num>[^\s]*)[\s]+User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+MatchCount=(?<hdclass_counter1>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=(?<haction>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+|[\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^Z]*)Z[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <fld1> <fld2> <fld3> DLP_EM: <hevent_source> <hproduct> NULL <hlogon_id> 3 Incident :: "<hinfo>" :: "Severity=<hseverity> RiskFactor=<hrisk_num> User=<husername> Policy=<hpolicyname> MatchCount=<hdclass_counter1> userEmail=<huser_address> department=<huser_dept> organization=<huser_org> action=<haction> eventTimestamp={ <fld5>-<fld6>-<fld7>T<hhour>-<hmin>-<hsec>-<fld8>Z | <fld5>-<fld6>-<fld7>T<hhour>:<hmin>:<hsec>Z } <!payload:hevent_source>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+DLP_EM:[\s]+(?<message>(?<hevent_source>[^\s]*)[\s]+(?<hproduct>[^\s]*)[\s]+NULL[\s]+(?<hlogon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<hinfo>[^\"]*)\"[\s]+::[\s]+\"Severity=(?<hseverity>[^\s]*)[\s]+RiskFactor=(?<hrisk_num>[^\s]*)[\s]+User=(?<husername>[^\s]*)[\s]+Policy=(?<hpolicyname>[^\s]*)[\s]+MatchCount=(?<hdclass_counter1>[^\s]*)[\s]+userEmail=(?<huser_address>[^\s]*)[\s]+department=(?<huser_dept>[^\s]*)[\s]+organization=(?<huser_org>[^\s]*)[\s]+action=(?<haction>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^\-]*)\-(?<hmin>[^\-]*)\-(?<hsec>[^\-]*)\-(?<fld8>[^Z]*)Z[\s]+|[\s]*(?<fld5>[^\-]*)\-(?<fld6>[^\-]*)\-(?<fld7>[^T]*)T(?<hhour>[^:]*):(?<hmin>[^:]*):(?<hsec>[^Z]*)Z[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{hproduct}_%{haction}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <hmonth> <hday> <htime> <hevent_source> DLP_EM: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hevent_source} DLP_EM: %{messageid}: %{message}" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <<Alert><hdate> <htime> RSA_DLP[<hpid>]: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^<Alert>(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+RSA_DLP\[(?<hpid>[^\]]*)\]:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <hdate> <htime> RSA_DLP[<hpid>]: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdate} %{htime} RSA_DLP[%{hpid}]: %{messageid}: %{message}" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <hdate> <htime> RSA_DLP[<hpid>]: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+RSA_DLP\[(?<hpid>[^\]]*)\]:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <hmonth> <hday> <htime> <hhost> <hfld1>: RSA_DLP <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhost} %{hfld1}: RSA_DLP %{messageid} %{message}" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: <hfld>: RSA_DLP <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld}: RSA_DLP %{messageid} %{message}" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: <hmonth> <hday> <htime> <hevent_source> DLP_EM: <messageid>  :: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hevent_source} DLP_EM: %{messageid}  :: %{message}" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-rsadlpmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } usage=<fld24> usageIp={ <saddr>^<fld17> usageApplication= | <saddr> usageApplication= | usageApplication= }<application> usageSourceDeviceType=<fld25> usageSourceIp=<fld26> usageSourceUnc=<directory> usageDestinationDeviceType=<context> usageDestinationIp=<daddr> usageDestinationUnc=<filename> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+usage=(?<fld24>[^\s]*)[\s]+usageIp=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+usageApplication=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+usageApplication=[\s]+|[\s]*usageApplication=[\s]+)(?<application>[^\s]*)[\s]+usageSourceDeviceType=(?<fld25>[^\s]*)[\s]+usageSourceIp=(?<fld26>[^\s]*)[\s]+usageSourceUnc=(?<directory>[^\s]*)[\s]+usageDestinationDeviceType=(?<context>[^\s]*)[\s]+usageDestinationIp=(?<daddr>[^\s]*)[\s]+usageDestinationUnc=(?<filename>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
			id => "msgParserId0"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
		}
	}
	else if [logstash][msgparser][id] == "discovery_audit" {
		# MESSAGE datacenter_audit
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } fileMatches=<directory> { fileMatchOwnerDisplayName=<owner> fileMatchOwnerSID=<owner_id> | fileMatchOwnerDisplayName=<owner> } Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+fileMatches=(?<directory>[^\s]*)[\s]+([\s]*fileMatchOwnerDisplayName=(?<owner>[^\s]*)[\s]+fileMatchOwnerSID=(?<owner_id>[^\s]*)[\s]+|[\s]*fileMatchOwnerDisplayName=(?<owner>[^\s]*)[\s]+)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-datacenter_audit"
				add_field => {
					"[event][id]" => "datacenter_audit"
					"[rsa][message][id1]" => "datacenter_audit"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE datacenter_audit:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z }  Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-datacenter_audit:01"
				add_field => {
					"[event][id]" => "datacenter_audit:01"
					"[rsa][message][id1]" => "datacenter_audit:01"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } fileMatches=<directory> { fileMatchOwnerDisplayName=<owner> fileMatchOwnerSID=<owner_id> | fileMatchOwnerDisplayName=<owner> } Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
	else if [logstash][msgparser][id] == "msgParserId1" {
		grok {
			match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+fileMatches=(?<directory>[^\s]*)[\s]+([\s]*fileMatchOwnerDisplayName=(?<owner>[^\s]*)[\s]+fileMatchOwnerSID=(?<owner_id>[^\s]*)[\s]+|[\s]*fileMatchOwnerDisplayName=(?<owner>[^\s]*)[\s]+)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
			id => "msgParserId1"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
		}
	}
	else if [logstash][msgparser][id] == "network_" {
		# MESSAGE network_:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_:03"
					"[rsa][message][id1]" => "network_:03"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_:01"
					"[rsa][message][id1]" => "network_:01"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from>|sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)|sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_:02"
					"[rsa][message][id1]" => "network_:02"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_audit" {
		# MESSAGE network_audit:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_audit:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_audit:03"
					"[rsa][message][id1]" => "network_audit:03"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_audit:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_audit:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_audit:01"
					"[rsa][message][id1]" => "network_audit:01"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_audit:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from>|sessionEmailMailFrom=<from>} {sessionEmailMailto=<to> sessionEmailSubject=<subject>|sessionEmailMailto=<to>} sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)|sessionEmailMailFrom=(?<from>[^\s]*))[\s]+(sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)|sessionEmailMailto=(?<to>[^\s]*))[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_audit:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_audit:02"
					"[rsa][message][id1]" => "network_audit:02"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_block" {
		# MESSAGE network_block:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_block:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_block:EmailSubject"
					"[rsa][message][id1]" => "network_block:EmailSubject"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_block:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=| sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|[\s]*sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_block:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_block:03"
					"[rsa][message][id1]" => "network_block:03"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_block:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=| sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|[\s]*sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_block:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_block:01"
					"[rsa][message][id1]" => "network_block:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_block:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from>| sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_block:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_block:02"
					"[rsa][message][id1]" => "network_block:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_discard" {
		# MESSAGE network_discard:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_discard:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_discard:EmailSubject"
					"[rsa][message][id1]" => "network_discard:EmailSubject"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_discard:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=| sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|[\s]*sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_discard:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_discard:03"
					"[rsa][message][id1]" => "network_discard:03"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_discard:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=| sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|[\s]*sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_discard:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_discard:01"
					"[rsa][message][id1]" => "network_discard:01"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_discard:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_discard:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_discard:02"
					"[rsa][message][id1]" => "network_discard:02"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_encrypt" {
		# MESSAGE network_encrypt:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_encrypt:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_encrypt:EmailSubject"
					"[rsa][message][id1]" => "network_encrypt:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_encrypt:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_encrypt:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_encrypt:03"
					"[rsa][message][id1]" => "network_encrypt:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_encrypt:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_encrypt:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_encrypt:01"
					"[rsa][message][id1]" => "network_encrypt:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_encrypt:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_encrypt:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_encrypt:02"
					"[rsa][message][id1]" => "network_encrypt:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_movetosecure" {
		# MESSAGE network_movetosecure:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_movetosecure:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_movetosecure:EmailSubject"
					"[rsa][message][id1]" => "network_movetosecure:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_movetosecure:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_movetosecure:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_movetosecure:03"
					"[rsa][message][id1]" => "network_movetosecure:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_movetosecure:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_movetosecure:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_movetosecure:01"
					"[rsa][message][id1]" => "network_movetosecure:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_movetosecure:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_movetosecure:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_movetosecure:02"
					"[rsa][message][id1]" => "network_movetosecure:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_notify_user" {
		# MESSAGE network_notify_user:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_notify_user:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_notify_user:EmailSubject"
					"[rsa][message][id1]" => "network_notify_user:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_notify_user:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_notify_user:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_notify_user:03"
					"[rsa][message][id1]" => "network_notify_user:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_notify_user:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_notify_user:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_notify_user:01"
					"[rsa][message][id1]" => "network_notify_user:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_notify_user:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_notify_user:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_notify_user:02"
					"[rsa][message][id1]" => "network_notify_user:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_prompt_user" {
		# MESSAGE network_prompt_user:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_prompt_user:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_prompt_user:EmailSubject"
					"[rsa][message][id1]" => "network_prompt_user:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_prompt_user:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_prompt_user:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_prompt_user:03"
					"[rsa][message][id1]" => "network_prompt_user:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_prompt_user:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_prompt_user:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_prompt_user:01"
					"[rsa][message][id1]" => "network_prompt_user:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_prompt_user:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_prompt_user:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_prompt_user:02"
					"[rsa][message][id1]" => "network_prompt_user:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_quarantine" {
		# MESSAGE network_quarantine:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_quarantine:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_quarantine:EmailSubject"
					"[rsa][message][id1]" => "network_quarantine:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_quarantine:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_quarantine:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_quarantine:03"
					"[rsa][message][id1]" => "network_quarantine:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_quarantine:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_quarantine:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_quarantine:01"
					"[rsa][message][id1]" => "network_quarantine:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_quarantine:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_quarantine:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_quarantine:02"
					"[rsa][message][id1]" => "network_quarantine:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_release" {
		# MESSAGE network_release:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_release:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_release:EmailSubject"
					"[rsa][message][id1]" => "network_release:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_release:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_release:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_release:03"
					"[rsa][message][id1]" => "network_release:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_release:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_release:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_release:01"
					"[rsa][message][id1]" => "network_release:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_release:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_release:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_release:02"
					"[rsa][message][id1]" => "network_release:02"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "network_rms" {
		# MESSAGE network_rms:EmailSubject
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionEmailSubject=<subject> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld33> sessionHttpMailto=<fld34> sessionImChatInsider=<fld35> sessionImChatOutsider=<fld36> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionEmailSubject=(?<subject>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld33>[^\s]*)[\s]+sessionHttpMailto=(?<fld34>[^\s]*)[\s]+sessionImChatInsider=(?<fld35>[^\s]*)[\s]+sessionImChatOutsider=(?<fld36>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_rms:EmailSubject"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_rms:EmailSubject"
					"[rsa][message][id1]" => "network_rms:EmailSubject"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_rms:03
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom= sessionHttpMailto= sessionImChatInsider=<from> sessionImChatOutsider=<to> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=[\s]+sessionHttpMailto=[\s]+sessionImChatInsider=(?<from>[^\s]*)[\s]+sessionImChatOutsider=(?<to>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_rms:03"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_rms:03"
					"[rsa][message][id1]" => "network_rms:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_rms:01
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=|sessionEmailMailFrom=} sessionEmailMailto= sessionFtpUser=<c_username> sessionHttpMailFrom=<from> sessionHttpMailto=<to> sessionImChatInsider=<fld19>  sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=|sessionEmailMailFrom=)[\s]+sessionEmailMailto=[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<from>[^\s]*)[\s]+sessionHttpMailto=(?<to>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_rms:01"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_rms:01"
					"[rsa][message][id1]" => "network_rms:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
		# MESSAGE network_rms:02
		# line in RSA: <event_source> <product> NULL <logon_id> 3 Incident :: "<info>" :: "{ Severity=<severity> RiskFactor=<risk_num> User= | User= } <username> Policy=<policyname> { MatchCount=<dclass_counter1> userEmail= | userEmail= }<user_address> department=<user_dept> organization=<user_org> action=<action> eventTimestamp={ <fld77>-<fld78>-<fld79>T<fld80>-<fld81>-<fld82>-<fld83>Z | <fld77>-<fld78>-<fld79>T<fld80>:<fld81>:<fld82>Z } protocol=<network_service> sessionSubProtocol=<fld16> sourceIP={ <saddr>^<fld17> sourcePort= | <saddr> sourcePort= | sourcePort= }<sport>  destinationIP=<daddr> destinationPort=<dport> {deviceName=<hostname> sessionEmailMailFrom=<from> | sessionEmailMailFrom=<from>} sessionEmailMailto=<to> sessionFtpUser=<c_username> sessionHttpMailFrom=<fld29> sessionHttpMailto=<fld28> sessionImChatInsider=<fld19> sessionImChatOutsider=<fld20> sessionImFtpInsider=<fld21> sessionImFtpOutsider=<fld22> Vendor=<fld23> ProductVersion=<version> dlp_event_link='<event_description>'"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^\s]*)[\s]+(?<product>[^\s]*)[\s]+NULL[\s]+(?<logon_id>[^\s]*)[\s]+3[\s]+Incident[\s]+::[\s]+\"(?<info>[^\"]*)\"[\s]+::[\s]+\"([\s]*Severity=(?<severity>[^\s]*)[\s]+RiskFactor=(?<risk_num>[^\s]*)[\s]+User=[\s]+|[\s]*User=[\s]+)[\s]+(?<username>[^\s]*)[\s]+Policy=(?<policyname>[^\s]*)[\s]+([\s]*MatchCount=(?<dclass_counter1>[^\s]*)[\s]+userEmail=[\s]+|[\s]*userEmail=[\s]+)(?<user_address>[^\s]*)[\s]+department=(?<user_dept>[^\s]*)[\s]+organization=(?<user_org>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+eventTimestamp=([\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^\-]*)\-(?<fld81>[^\-]*)\-(?<fld82>[^\-]*)\-(?<fld83>[^Z]*)Z[\s]+|[\s]*(?<fld77>[^\-]*)\-(?<fld78>[^\-]*)\-(?<fld79>[^T]*)T(?<fld80>[^:]*):(?<fld81>[^:]*):(?<fld82>[^Z]*)Z[\s]+)[\s]+protocol=(?<network_service>[^\s]*)[\s]+sessionSubProtocol=(?<fld16>[^\s]*)[\s]+sourceIP=([\s]*(?<saddr>[^\^]*)\^(?<fld17>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+sourcePort=[\s]+|[\s]*sourcePort=[\s]+)(?<sport>[^\s]*)[\s]+destinationIP=(?<daddr>[^\s]*)[\s]+destinationPort=(?<dport>[^\s]*)[\s]+(deviceName=(?<hostname>[^\s]*)[\s]+sessionEmailMailFrom=(?<from>[^\s]*)[\s]+|[\s]*sessionEmailMailFrom=(?<from>[^\s]*))[\s]+sessionEmailMailto=(?<to>[^\s]*)[\s]+sessionFtpUser=(?<c_username>[^\s]*)[\s]+sessionHttpMailFrom=(?<fld29>[^\s]*)[\s]+sessionHttpMailto=(?<fld28>[^\s]*)[\s]+sessionImChatInsider=(?<fld19>[^\s]*)[\s]+sessionImChatOutsider=(?<fld20>[^\s]*)[\s]+sessionImFtpInsider=(?<fld21>[^\s]*)[\s]+sessionImFtpOutsider=(?<fld22>[^\s]*)[\s]+Vendor=(?<fld23>[^\s]*)[\s]+ProductVersion=(?<version>[^\s]*)[\s]+dlp_event_link='(?<event_description>[^']*)'\"$" }
				id => "message-network_rms:02"
				add_field => {
				"c_user_name" => "%{c_username}"
					"[event][id]" => "network_rms:02"
					"[rsa][message][id1]" => "network_rms:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld77} %{fld78} %{fld79} %{fld80} %{fld81} %{fld82}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyyMMdHHmms" ] }
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: A connection failure to the site [<dhost>] occured
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "A connection failure to the site [%{dhost}] occured" }
			id => "msgParserId12"
			add_field => {
				"info" => "A connection failure to the site occured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: <info>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId13"
			add_field => {
				"event_source" => "%{hevent_source}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: RSA DLP Enterprise Manager <version>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "RSA DLP Enterprise Manager %{version}" }
			id => "msgParserId14"
			add_field => {
				"event_source" => "%{hevent_source}"
				"info" => "%{$MSG}"
				"product" => "RSA DLP Enterprise Manager"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: FP Crawler with group id <groupid> Failed
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "FP Crawler with group id %{groupid} Failed" }
			id => "msgParserId15"
			add_field => {
				"info" => "FP Crawler Failed"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
		}
	}
	else if [logstash][msgparser][id] == "The" {
		# MESSAGE GC002
		# line in RSA: The grid coordinator has found that all of the workers are idle for scan group, <groupid>, job, <operation_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The grid coordinator has found that all of the workers are idle for scan group, %{groupid}, job, %{operation_id}" }
				id => "message-GC002"
				add_field => {
				"info" => "The grid coordinator has found that all of the workers are idle"
					"[event][id]" => "GC002"
					"[rsa][message][id1]" => "GC002"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GC003
		# line in RSA: The scan is shutting shutting down prematurely for scan group, <groupid>, job, <operation_id>, The shutdown was initiated by {  start | <saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+scan[\s]+is[\s]+shutting[\s]+shutting[\s]+down[\s]+prematurely[\s]+for[\s]+scan[\s]+group,[\s]+(?<groupid>[^,]*),[\s]+job,[\s]+(?<operation_id>[^,]*),[\s]+The[\s]+shutdown[\s]+was[\s]+initiated[\s]+by[\s]+([\s]*start[\s]+|[\s]*(?<saddr>.*))$" }
				id => "message-GC003"
				add_field => {
				"info" => "The scan is shutting down prematurely"
					"[event][id]" => "GC003"
					"[rsa][message][id1]" => "GC003"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GC003:01
		# line in RSA: The scan is shutting shutting down prematurely for scan group [<groupid>], job [<operation_id>]. No workers were commissioned, most likely due to failures.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The scan is shutting shutting down prematurely for scan group [%{groupid}], job [%{operation_id}]. No workers were commissioned, most likely due to failures." }
				id => "message-GC003:01"
				add_field => {
				"info" => "The scan is shutting down prematurely"
					"[event][id]" => "GC003:01"
					"[rsa][message][id1]" => "GC003:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GC003:02
		# line in RSA: The scan is shutting down prematurely for scan group, <groupid>, job, <operation_id>, The shutdown was initiated by {  start | <saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+scan[\s]+is[\s]+shutting[\s]+down[\s]+prematurely[\s]+for[\s]+scan[\s]+group,[\s]+(?<groupid>[^,]*),[\s]+job,[\s]+(?<operation_id>[^,]*),[\s]+The[\s]+shutdown[\s]+was[\s]+initiated[\s]+by[\s]+([\s]*start[\s]+|[\s]*(?<saddr>.*))$" }
				id => "message-GC003:02"
				add_field => {
				"info" => "The scan is shutting down prematurely"
					"[event][id]" => "GC003:02"
					"[rsa][message][id1]" => "GC003:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GC003:03
		# line in RSA: The scan is shutting down prematurely for scan group [<groupid>], job [<operation_id>]. No workers were commissioned, most likely due to failures.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The scan is shutting down prematurely for scan group [%{groupid}], job [%{operation_id}]. No workers were commissioned, most likely due to failures." }
				id => "message-GC003:03"
				add_field => {
				"info" => "The scan is shutting down prematurely"
					"[event][id]" => "GC003:03"
					"[rsa][message][id1]" => "GC003:03"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW002
		# line in RSA: The worker, <shost>, is unable to reach the data repository for scan group, <groupid>, job, <operation_id>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The worker, %{shost}, is unable to reach the data repository for scan group, %{groupid}, job, %{operation_id}: %{result}" }
				id => "message-GW002"
				add_field => {
				"info" => "The worker is unable to reach the data repository"
					"[event][id]" => "GW002"
					"[rsa][message][id1]" => "GW002"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW002:01
		# line in RSA: The worker [<shost>] is unable to reach the data repository for scan group [<groupid>], job [<operation_id>]: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The worker [%{shost}] is unable to reach the data repository for scan group [%{groupid}], job [%{operation_id}]: %{result}" }
				id => "message-GW002:01"
				add_field => {
				"info" => "The worker is unable to reach the data repository"
					"[event][id]" => "GW002:01"
					"[rsa][message][id1]" => "GW002:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW003
		# line in RSA: The worker, <shost>, has been idle for a prolonged period for scan group, <groupid>, job, <operation_id>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The worker, %{shost}, has been idle for a prolonged period for scan group, %{groupid}, job, %{operation_id}: %{result}" }
				id => "message-GW003"
				add_field => {
				"info" => "The worker has been idle for a prolonged period"
					"[event][id]" => "GW003"
					"[rsa][message][id1]" => "GW003"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW004
		# line in RSA: The worker, [<shost>], is no longer able to reach the data repository for scan group, [<groupid>], job, [<operation_id>]: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The worker, [%{shost}], is no longer able to reach the data repository for scan group, [%{groupid}], job, [%{operation_id}]: %{result}" }
				id => "message-GW004"
				add_field => {
				"info" => "The worker is no longer able to reach the data repository"
					"[event][id]" => "GW004"
					"[rsa][message][id1]" => "GW004"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW004:01
		# line in RSA: The worker, <shost>, is no longer able to reach the data repository for scan group, <groupid>, job, <operation_id>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The worker, %{shost}, is no longer able to reach the data repository for scan group, %{groupid}, job, %{operation_id}: %{result}" }
				id => "message-GW004:01"
				add_field => {
				"info" => "The worker is no longer able to reach the data repository"
					"[event][id]" => "GW004:01"
					"[rsa][message][id1]" => "GW004:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW007
		# line in RSA: The login to Agent <fld9> has failed <dclass_counter1> times consecutively within <duration_string> time period. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The login to Agent %{fld9} has failed %{dclass_counter1} times consecutively within %{duration_string} time period. %{result}" }
				id => "message-GW007"
				add_field => {
				"info" => "The login to Agent has failed consecutively"
					"[event][id]" => "GW007"
					"[rsa][message][id1]" => "GW007"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW006
		# line in RSA: The worker { [<shost>] | <shost> } has exceeded the maximum available concurrent connections to the Exchange Server for scan group { [<groupid>] | <groupid> }, job { [<operation_id>] | <operation_id> }. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^The[\s]+worker[\s]+([\s]*\[(?<shost>[^\]]*)\][\s]+|[\s]*(?<shost>[^\s]*)[\s]+)[\s]+has[\s]+exceeded[\s]+the[\s]+maximum[\s]+available[\s]+concurrent[\s]+connections[\s]+to[\s]+the[\s]+Exchange[\s]+Server[\s]+for[\s]+scan[\s]+group[\s]+([\s]*\[(?<groupid>[^\]]*)\][\s]+|[\s]*(?<groupid>[^\s]*)[\s]+),[\s]+job[\s]+([\s]*\[(?<operation_id>[^\]]*)\][\s]+|[\s]*(?<operation_id>[^\s]*)[\s]+)\.[\s]+(?<result>.*)$" }
				id => "message-GW006"
				add_field => {
				"info" => "The worker has exceeded the maximum available concurrent connections to the Exchange Server"
					"[event][id]" => "GW006"
					"[rsa][message][id1]" => "GW006"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE GW005
		# line in RSA: The worker <shost> was decommissioned before the scan completed. It was successfully recommissioned
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The worker %{shost} was decommissioned before the scan completed. It was successfully recommissioned" }
				id => "message-GW005"
				add_field => {
				"info" => "The worker was decommissioned before the scan completed"
					"[event][id]" => "GW005"
					"[rsa][message][id1]" => "GW005"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE TH001
		# line in RSA: The host system is running low on disk space. There are only <fld30> of free space available..
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The host system is running low on disk space. There are only %{fld30} of free space available.." }
				id => "message-TH001"
				add_field => {
				"info" => "The host system is running low on disk space"
					"[event][id]" => "TH001"
					"[rsa][message][id1]" => "TH001"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE TH002
		# line in RSA: The the task, <obj_name>, has exited without the task signaling completion.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The the task, %{obj_name}, has exited without the task signaling completion." }
				id => "message-TH002"
				add_field => {
				"info" => "The task has exited without the task signaling completion"
				"obj_type" => "Task"
					"[event][id]" => "TH002"
					"[rsa][message][id1]" => "TH002"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE TH999
		# line in RSA: The task host on the host system, <hostname>, is running
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The task host on the host system, %{hostname}, is running" }
				id => "message-TH999"
				add_field => {
				"info" => "The task host is running"
					"[event][id]" => "TH999"
					"[rsa][message][id1]" => "TH999"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE TH111
		# line in RSA: The host system is running low on disk space. There are only <fld30> of free space available.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The host system is running low on disk space. There are only %{fld30} of free space available." }
				id => "message-TH111"
				add_field => {
				"info" => "The host system is running low on disk space"
					"[event][id]" => "TH111"
					"[rsa][message][id1]" => "TH111"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
		# MESSAGE TH112
		# line in RSA: The task, <obj_name>, has exited without the task signaling completion
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "The task, %{obj_name}, has exited without the task signaling completion" }
				id => "message-TH112"
				add_field => {
				"info" => "The task has exited without the task signaling completion"
				"obj_type" => "Task"
					"[event][id]" => "TH112"
					"[rsa][message][id1]" => "TH112"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: The grid coordinator has found that all of the workers are idle for scan group, <groupid>, job, <operation_id>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "The grid coordinator has found that all of the workers are idle for scan group, %{groupid}, job, %{operation_id}" }
			id => "msgParserId16"
			add_field => {
				"info" => "The grid coordinator has found that all of the workers are idle"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
		}
	}
	# PARSER msgParserId29
	# line in RSA: Initializing <product>: <hostname>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "Initializing %{product}: %{hostname}" }
			id => "msgParserId29"
			add_field => {
				"info" => "%{$MSG}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA: Low disk space. Disk space usage on '/opt' is at <fld1>%.
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "Low disk space. Disk space usage on '/opt' is at %{fld1}%." }
			id => "msgParserId30"
			add_field => {
				"info" => "Low disk space"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: Low inodes condition.  Inode usage on '/opt' is at <fld1>%.
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "Low inodes condition.  Inode usage on '/opt' is at %{fld1}%." }
			id => "msgParserId31"
			add_field => {
				"info" => "Low inodes condition"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: Controller flow control transition to OFF: Inadequate disk space to accept events from managed devices.
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "Controller flow control transition to OFF: Inadequate disk space to accept events from managed devices." }
			id => "msgParserId32"
			add_field => {
				"info" => "Inadequate disk space to accept events from managed devices"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: Controller flow control transition to ON: Accepting events from managed devices.
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "Controller flow control transition to ON: Accepting events from managed devices." }
			id => "msgParserId33"
			add_field => {
				"info" => "Accepting events from managed devices"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: <info>.
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{info}." }
			id => "msgParserId34"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NW_006" {
		# MESSAGE NW_006
		# line in RSA: DLP Network Controller unable to communicate with Interceptor: <daddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DLP Network Controller unable to communicate with Interceptor: %{daddr}." }
				id => "message-NW_006"
				add_field => {
				"info" => "DLP Network Controller unable to communicate with Interceptor"
					"[event][id]" => "NW_006"
					"[rsa][message][id1]" => "NW_006"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NW_006:01
		# line in RSA: DLP Network Controller unable to communicate with Sensor: <daddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DLP Network Controller unable to communicate with Sensor: %{daddr}." }
				id => "message-NW_006:01"
				add_field => {
				"info" => "DLP Network Controller unable to communicate with Sensor"
					"[event][id]" => "NW_006:01"
					"[rsa][message][id1]" => "NW_006:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: Process failed: <process>.
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "Process failed: %{process}." }
			id => "msgParserId37"
			add_field => {
				"info" => "Process failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: Unable to start NW process: sensormanager.
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "Unable to start NW process: sensormanager." }
			id => "msgParserId38"
			add_field => {
				"info" => "Unable to start NW process"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NW_009" {
		# MESSAGE NW_009
		# line in RSA: Sensor queue too large: smtp.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sensor queue too large: smtp." }
				id => "message-NW_009"
				add_field => {
				"info" => "Sensor queue too large"
					"[event][id]" => "NW_009"
					"[rsa][message][id1]" => "NW_009"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NW_009:02
		# line in RSA: Sensor queue too large: <network_service>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sensor queue too large: %{network_service}." }
				id => "message-NW_009:02"
				add_field => {
				"info" => "Sensor queue too large"
					"[event][id]" => "NW_009:02"
					"[rsa][message][id1]" => "NW_009:02"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: Interceptor: <directory> mail queue above <fld31>, closing port <sport>.
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "Interceptor: %{directory} mail queue above %{fld31}, closing port %{sport}." }
			id => "msgParserId41"
			add_field => {
				"info" => "Mail queue above critical level"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: Interceptor: All mail queues below critical level, opening port <sport>.
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Interceptor: All mail queues below critical level, opening port %{sport}." }
			id => "msgParserId42"
			add_field => {
				"info" => "All mail queues below critical level"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: Interceptor: Mail relay <saddr> not responding on port <sport>.
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "Interceptor: Mail relay %{saddr} not responding on port %{sport}." }
			id => "msgParserId43"
			add_field => {
				"info" => "Mail relay not responding"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: ICAPServer is not listening on ICAP port <sport>.
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "ICAPServer is not listening on ICAP port %{sport}." }
			id => "msgParserId44"
			add_field => {
				"info" => "ICAPServer is not listening on ICAP port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: ICAPServer has not received any requests in <duration> minutes, check network connectivity.
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "ICAPServer has not received any requests in %{duration} minutes, check network connectivity." }
			id => "msgParserId45"
			add_field => {
				"info" => "ICAPServer has not received any requests"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: <info>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: <product> (<version>), Uptime: <duration_string> up <fld32>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "%{product} (%{version}), Uptime: %{duration_string} up %{fld32}" }
			id => "msgParserId47"
			add_field => {
				"info" => "%{$MSG}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: Connecting
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "Connecting" }
			id => "msgParserId48"
			add_field => {
				"info" => "Connecting"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
		}
	}
	# PARSER msgParserId51
	# line in RSA: The task, <obj_name>, has exited without the task signaling completion
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "The task, %{obj_name}, has exited without the task signaling completion" }
			id => "msgParserId51"
			add_field => {
				"info" => "The task has exited without the task signaling completion"
				"obj_type" => "Task"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA: The task host on the host system, <hostname>, is running
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "The task host on the host system, %{hostname}, is running" }
			id => "msgParserId52"
			add_field => {
				"info" => "The task host is running"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-d HH:mm:s'Z'" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-rsadlpmsg.json"
#			template_name => "rsadlp_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
