# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "barracudawaf"
			"[observer][name]" => "Barracuda Web Application Firewall"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <messageid>:<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: time=<hfld1> <hfld2> <timezone> Unit=<messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "time=%{hfld1} %{hfld2} %{timezone} Unit=%{messageid} %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hfld9> <hfld10> <hfld11> <hfld12> <hhost> <hfld7> <hfld8>.<hfld2> <hfld3> <hfld4> <hfld5> <hfld6> <messageid> <!payload:hfld7>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld9>[^\s]*)[\s]+(?<hfld10>[^\s]*)[\s]+(?<hfld11>[^\s]*)[\s]+(?<hfld12>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hhost> <hfld7> <hfld8>.<hfld2> <hfld3> <hfld4> <hfld5> <hfld6> <messageid> <!payload:hfld7>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hhost>[^\s]*)[\s]+(?<message>(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hhost> <hfld7> <hfld8>.<hfld2> <hfld3> TR <hfld5> <hfld6> <hfld8> <!payload:hfld7>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hhost>[^\s]*)[\s]+(?<message>(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+TR[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "BARRACUDA_GENRIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hhost> <hfld7> <hfld8>.<hfld2> <hfld3> AUDIT <hfld5> <hfld6> <hfld8> <!payload:hfld7>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hhost>[^\s]*)[\s]+(?<message>(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+AUDIT[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "BARRACUDA_GENRIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hhost> <hfld7> <hfld8>.<hfld2> <hfld3> WF <hfld5> <hfld6> <hfld8> <!payload:hfld7>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hhost>[^\s]*)[\s]+(?<message>(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+WF[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "BARRACUDA_GENRIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> BARRACUDAWAF <hhost> <hdate> <htime> <htimezone> <messageid> <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+BARRACUDAWAF[\s]+(?<message>(?<hhost>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<htimezone>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hfld9> <hfld10> <hfld11> <hhost> <messageid> <!payload:hfld10>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld9>[^\s]*)[\s]+(?<message>(?<hfld10>[^\s]*)[\s]+(?<hfld11>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-barracudawafmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: UPDATE: [ALERT:<fld3>] New attack definition version <version> is available
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "UPDATE: [ALERT:%{fld3}] New attack definition version %{version} is available" }
			id => "msgParserId0"
			add_field => {
				"event_description" => "UPDATE: ALERT New attack definition version is available"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "STM" {
		# MESSAGE STM:01
		# line in RSA: STM:       LB-<fld1> <fld2> [ALERT:<id>] Server <daddr>:<dport> is disabled by out of band monitor ( new mode out_of_service_all ) Reason:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} [ALERT:%{id}] Server %{daddr}:%{dport} is disabled by out of band monitor ( new mode out_of_service_all ) Reason:%{result}" }
				id => "message-STM:01"
				add_field => {
				"event_description" => "STM: LB Server disabled by out of band monitor"
					"[event][id]" => "STM:01"
					"[rsa][message][id1]" => "STM:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:02
		# line in RSA: STM:       LB-<fld1> <fld2> Server <saddr> is created.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} Server %{saddr} is created." }
				id => "message-STM:02"
				add_field => {
				"event_description" => "STM: LB Server created."
					"[event][id]" => "STM:02"
					"[rsa][message][id1]" => "STM:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:03
		# line in RSA: STM:    SSKey-<fld1> <fld2> Cookie Encryption Key has already expired
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:    SSKey-%{fld1} %{fld2} Cookie Encryption Key has already expired" }
				id => "message-STM:03"
				add_field => {
				"event_description" => "STM: SSKEY Cookie Encryption Key has already expired."
					"[event][id]" => "STM:03"
					"[rsa][message][id1]" => "STM:03"
					"[event][categoryid]" => "1613030100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:04
		# line in RSA: STM:  FAILOVE-<fld1> <fld2> Module CookieKey registered with Stateful Failover module.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  FAILOVE-%{fld1} %{fld2} Module CookieKey registered with Stateful Failover module." }
				id => "message-STM:04"
				add_field => {
				"event_description" => "STM:FAILOVE Module CookieKey registered with Stateful Failover module."
					"[event][id]" => "STM:04"
					"[rsa][message][id1]" => "STM:04"
					"[event][categoryid]" => "1613030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:05
		# line in RSA: STM:  FEHCMON-<fld1> <fld2> FEHC Monitor Module initialized.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  FEHCMON-%{fld1} %{fld2} FEHC Monitor Module initialized." }
				id => "message-STM:05"
				add_field => {
				"event_description" => "STM:FECHMON FEHC Monitor Module initialized."
					"[event][id]" => "STM:05"
					"[rsa][message][id1]" => "STM:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:06
		# line in RSA: STM:  FAILOVE-<fld1> <fld2> Stateful Failover Module initialized.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  FAILOVE-%{fld1} %{fld2} Stateful Failover Module initialized." }
				id => "message-STM:06"
				add_field => {
				"event_description" => "STM: FAILOVE Stateful Failover Module initialized."
					"[event][id]" => "STM:06"
					"[rsa][message][id1]" => "STM:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:07
		# line in RSA: STM:  SERVICE-<fld1> <fld3> [<fld2>] New Service (ID <fld4>) Created at <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  SERVICE-%{fld1} %{fld3} [%{fld2}] New Service (ID %{fld4}) Created at %{saddr}:%{sport}" }
				id => "message-STM:07"
				add_field => {
				"event_description" => "STM: SERVICE New Service created."
					"[event][id]" => "STM:07"
					"[rsa][message][id1]" => "STM:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:08
		# line in RSA: STM:      SSL-<fld1> <fld2> Ssl Initialization
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      SSL-%{fld1} %{fld2} Ssl Initialization" }
				id => "message-STM:08"
				add_field => {
				"event_description" => "STM: SSL Initialization."
					"[event][id]" => "STM:08"
					"[rsa][message][id1]" => "STM:08"
					"[event][categoryid]" => "1613030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:09
		# line in RSA: STM:       LB-<fld1> <fld2> LookupServerCtx = <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} LookupServerCtx = %{fld3}" }
				id => "message-STM:09"
				add_field => {
				"event_description" => "STM: LB-LookupServerCtx."
					"[event][id]" => "STM:09"
					"[rsa][message][id1]" => "STM:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:10
		# line in RSA: STM:      aps-<fld1> <fld2>   ParamProtectionClonePatterns: Old:<change_old>, New:<change_new>, PatternsNode:<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}   ParamProtectionClonePatterns: Old:%{change_old}, New:%{change_new}, PatternsNode:%{fld4}" }
				id => "message-STM:10"
				add_field => {
				"event_description" => "STM: aps ParamProtectionClonePatterns values changed."
					"[event][id]" => "STM:10"
					"[rsa][message][id1]" => "STM:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:11
		# line in RSA: STM:      aps-<fld1> <fld2> <obj_name> SapCtx <fld3>, SapId <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2} %{obj_name} SapCtx %{fld3}, SapId %{fld4}" }
				id => "message-STM:11"
				add_field => {
				"event_description" => "STM: aps SapCtx log."
					"[event][id]" => "STM:11"
					"[rsa][message][id1]" => "STM:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:12
		# line in RSA: STM:    CACHE-<fld1> <fld2> <obj_name> SapCtx <fld3>, SapId <fld4>, Return Code <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:    CACHE-%{fld1} %{fld2} %{obj_name} SapCtx %{fld3}, SapId %{fld4}, Return Code %{result}" }
				id => "message-STM:12"
				add_field => {
				"event_description" => "STM: CACHE SapCtx log."
					"[event][id]" => "STM:12"
					"[rsa][message][id1]" => "STM:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:13
		# line in RSA: STM:   FTPSVC-<fld1> <fld2> Ftp proxy initialized <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:   FTPSVC-%{fld1} %{fld2} Ftp proxy initialized %{info}" }
				id => "message-STM:13"
				add_field => {
				"event_description" => "STM: FTPSVC Ftp proxy initialized."
					"[event][id]" => "STM:13"
					"[rsa][message][id1]" => "STM:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:14
		# line in RSA: STM:      STM-<fld1> <fld2> Secure Traffic Manager Initialization complete: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      STM-%{fld1} %{fld2} Secure Traffic Manager Initialization complete: %{info}" }
				id => "message-STM:14"
				add_field => {
				"event_description" => "STM: STM Secure Traffic Manager Initialization complete."
					"[event][id]" => "STM:14"
					"[rsa][message][id1]" => "STM:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:15
		# line in RSA: STM:   COOKIE-<fld1> <fld2> <obj_name> = <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:   COOKIE-%{fld1} %{fld2} %{obj_name} = %{info}" }
				id => "message-STM:15"
				add_field => {
				"event_description" => "STM: COOKIE Cookie parameters set."
					"[event][id]" => "STM:15"
					"[rsa][message][id1]" => "STM:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:16
		# line in RSA: STM:   WebLog-<fld1> <fld2> <obj_name>: SapCtx=<fld3>,SapId=<fld4>, <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:   WebLog-%{fld1} %{fld2} %{obj_name}: SapCtx=%{fld3},SapId=%{fld4}, %{fld5}" }
				id => "message-STM:16"
				add_field => {
				"event_description" => "STM: WebLog Set Sap variable."
					"[event][id]" => "STM:16"
					"[rsa][message][id1]" => "STM:16"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:17
		# line in RSA: STM:      aps-<fld1> <fld2>             AddIpsPatternGroup SapCtx : <fld3>, grp_id : <fld4>, type : <fld5> grp: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}             AddIpsPatternGroup SapCtx : %{fld3}, grp_id : %{fld4}, type : %{fld5} grp: %{info}" }
				id => "message-STM:17"
				add_field => {
				"event_description" => "STM: aps Set AddIpsPatternGroup."
					"[event][id]" => "STM:17"
					"[rsa][message][id1]" => "STM:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:18
		# line in RSA: STM:      aps-<fld1> <fld2> AddPCInfoKeyWordMeta: Info:<fld3>, Table:<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2} AddPCInfoKeyWordMeta: Info:%{fld3}, Table:%{fld4}" }
				id => "message-STM:18"
				add_field => {
				"event_description" => "STM: aps AddPCInfoKeyWordMeta."
					"[event][id]" => "STM:18"
					"[rsa][message][id1]" => "STM:18"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:19
		# line in RSA: STM:      aps-<fld1> <fld2>                  AddParamClass: <fld3>: KeyWords:<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}                  AddParamClass: %{fld3}: KeyWords:%{fld4}" }
				id => "message-STM:19"
				add_field => {
				"event_description" => "STM: aps AddParamClass."
					"[event][id]" => "STM:19"
					"[rsa][message][id1]" => "STM:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:20
		# line in RSA: STM:      aps-<fld1> <fld2>    SetParamClassPatternsAndDFA: Ctx:<fld3>, type:<fld4>, dfaId <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}    SetParamClassPatternsAndDFA: Ctx:%{fld3}, type:%{fld4}, dfaId %{fld5}" }
				id => "message-STM:20"
				add_field => {
				"event_description" => "STM: aps AddParamClassPatternsAndDFA."
					"[event][id]" => "STM:20"
					"[rsa][message][id1]" => "STM:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:21
		# line in RSA: STM:      aps-<fld1> <fld2>    ParamClassClonePatternsInfo: Old:<fld3>, New:<fld4>, PatternsNode:<fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}    ParamClassClonePatternsInfo: Old:%{fld3}, New:%{fld4}, PatternsNode:%{fld5}" }
				id => "message-STM:21"
				add_field => {
				"event_description" => "STM: aps AddParamClassClonePatternsInfo."
					"[event][id]" => "STM:21"
					"[rsa][message][id1]" => "STM:21"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:22
		# line in RSA: STM:      aps-<fld1> <fld2>           SetIpsLogIntrusionOn SapCtx <fld3>, Return Code <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}           SetIpsLogIntrusionOn SapCtx %{fld3}, Return Code %{fld4}" }
				id => "message-STM:22"
				add_field => {
				"event_description" => "STM: aps SetIpsLogIntrusionOn."
					"[event][id]" => "STM:22"
					"[rsa][message][id1]" => "STM:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:23
		# line in RSA: STM:      aps-<fld1> <fld2>    AddIpsCloakFilterRespHeader [<fld3>] Ret <fld4>, SapCtx <fld5>, sapId <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}    AddIpsCloakFilterRespHeader [%{fld3}] Ret %{fld4}, SapCtx %{fld5}, sapId %{fld6}" }
				id => "message-STM:23"
				add_field => {
				"event_description" => "STM: aps AddIpsCloakFilterRespHeader."
					"[event][id]" => "STM:23"
					"[rsa][message][id1]" => "STM:23"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:24
		# line in RSA: STM:      aps-<fld1> <fld2>              SetIpsTheftPolicy SapCtx <fld3>, Policy <fld4>, Return <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}              SetIpsTheftPolicy SapCtx %{fld3}, Policy %{fld4}, Return %{fld5}" }
				id => "message-STM:24"
				add_field => {
				"event_description" => "STM: aps SetIpsTheftPolicy."
					"[event][id]" => "STM:24"
					"[rsa][message][id1]" => "STM:24"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:25
		# line in RSA: STM:      aps-<fld1> <fld2>           SetIpsTheftPolicyDfa SapCtx <fld3>, Policy <fld4>, mode <fld5>, bytes <fld6>, Return <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}           SetIpsTheftPolicyDfa SapCtx %{fld3}, Policy %{fld4}, mode %{fld5}, bytes %{fld6}, Return %{fld7}" }
				id => "message-STM:25"
				add_field => {
				"event_description" => "STM: aps SetIpsTheftPolicyDfa."
					"[event][id]" => "STM:25"
					"[rsa][message][id1]" => "STM:25"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:26
		# line in RSA: STM:      aps-<fld1> <fld2>              SetIpsLimitPolicy Return Code <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}              SetIpsLimitPolicy Return Code %{fld3}" }
				id => "message-STM:26"
				add_field => {
				"event_description" => "STM: aps SetIpsLimitPolicy."
					"[event][id]" => "STM:26"
					"[rsa][message][id1]" => "STM:26"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:27
		# line in RSA: STM:      aps-<fld1> <fld2> CreateRC: RC Add policy Success
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2} CreateRC: RC Add policy Success" }
				id => "message-STM:27"
				add_field => {
				"event_description" => "STM: aps CreateRC: RC Add policy Success."
					"[event][id]" => "STM:27"
					"[rsa][message][id1]" => "STM:27"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:28
		# line in RSA: STM:       LB-<fld1> <fld2> SetSap<info>=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} SetSap%{info}=%{fld3}" }
				id => "message-STM:28"
				add_field => {
				"event_description" => "STM: LB Set Sap command."
					"[event][id]" => "STM:28"
					"[rsa][message][id1]" => "STM:28"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:29
		# line in RSA: STM:       LB-<fld1> <fld2> SetServer<info>=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} SetServer%{info}=%{fld3}" }
				id => "message-STM:29"
				add_field => {
				"event_description" => "STM: LB Set Server command."
					"[event][id]" => "STM:29"
					"[rsa][message][id1]" => "STM:29"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:30
		# line in RSA: STM:       LB-<fld1> <fld2> AddServer<info>=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} AddServer%{info}=%{fld3}" }
				id => "message-STM:30"
				add_field => {
				"event_description" => "STM: LB Add Server command."
					"[event][id]" => "STM:30"
					"[rsa][message][id1]" => "STM:30"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:31
		# line in RSA: STM:       LB-<fld1> <fld2> CreateServer =<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} CreateServer =%{fld3}" }
				id => "message-STM:31"
				add_field => {
				"event_description" => "STM: LB Create Server command."
					"[event][id]" => "STM:31"
					"[rsa][message][id1]" => "STM:31"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:32
		# line in RSA: STM:       LB-<fld1> <fld2> EnableServer =<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} EnableServer =%{fld3}" }
				id => "message-STM:32"
				add_field => {
				"event_description" => "STM: LB Enable Server command."
					"[event][id]" => "STM:32"
					"[rsa][message][id1]" => "STM:32"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:33
		# line in RSA: STM:       LB-<fld1> <fld2> ActiveServerOutOfBandMonitorAttr =<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} ActiveServerOutOfBandMonitorAttr =%{fld3}" }
				id => "message-STM:33"
				add_field => {
				"event_description" => "STM: LB ActiveServerOutOfBandMonitorAttr command."
					"[event][id]" => "STM:33"
					"[rsa][message][id1]" => "STM:33"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:34
		# line in RSA: STM:       LB-<fld1> <fld2> BindServerToSap =<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} BindServerToSap =%{fld3}" }
				id => "message-STM:34"
				add_field => {
				"event_description" => "STM: LB BindServerToSap command."
					"[event][id]" => "STM:34"
					"[rsa][message][id1]" => "STM:34"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:35
		# line in RSA: STM:       LB-<fld1> <fld2> [ALERT:<fld3>] Server <saddr>:<sport> is enabled by out of band monitor. Reason:out of band monitor
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:       LB-%{fld1} %{fld2} [ALERT:%{fld3}] Server %{saddr}:%{sport} is enabled by out of band monitor. Reason:out of band monitor" }
				id => "message-STM:35"
				add_field => {
				"event_description" => "STM: LB Server is enabled by out of band monitor Reason out of band monitor"
					"[event][id]" => "STM:35"
					"[rsa][message][id1]" => "STM:35"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:36
		# line in RSA: STM:  SERVICE-<fld1> <fld2> [<saddr>:<sport>] Service Started <fld3>:<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  SERVICE-%{fld1} %{fld2} [%{saddr}:%{sport}] Service Started %{fld3}:%{fld4}" }
				id => "message-STM:36"
				add_field => {
				"event_description" => "STM: SERVICE Server service started command."
					"[event][id]" => "STM:36"
					"[rsa][message][id1]" => "STM:36"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:37
		# line in RSA: STM: RespPage-<fld1> <fld2>                       CreateRP: Response Page <fld3> created successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM: RespPage-%{fld1} %{fld2}                       CreateRP: Response Page %{fld3} created successfully" }
				id => "message-STM:37"
				add_field => {
				"event_description" => "STM: RespPage Response Page created successfully."
					"[event][id]" => "STM:37"
					"[rsa][message][id1]" => "STM:37"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:38
		# line in RSA: STM:  WATRewr-<fld1> <fld2>           AddWATReqRewriteRule AclName [<fld3>] Ret <fld4> SapCtx <fld5>, SapId <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  WATRewr-%{fld1} %{fld2}           AddWATReqRewriteRule AclName [%{fld3}] Ret %{fld4} SapCtx %{fld5}, SapId %{fld6}" }
				id => "message-STM:38"
				add_field => {
				"event_description" => "STM: AddWATReqRewriteRule AclName."
					"[event][id]" => "STM:38"
					"[rsa][message][id1]" => "STM:38"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:39
		# line in RSA: STM:  WATRewr-<fld1> <fld2> SetWATReqRewriteRuleNameWithKe AclName [<fld3>] Ret <fld4> SapCtx <fld5>, SapId <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  WATRewr-%{fld1} %{fld2} SetWATReqRewriteRuleNameWithKe AclName [%{fld3}] Ret %{fld4} SapCtx %{fld5}, SapId %{fld6}" }
				id => "message-STM:39"
				add_field => {
				"event_description" => "STM: SetWATReqRewriteRuleNameWithKe AclName."
					"[event][id]" => "STM:39"
					"[rsa][message][id1]" => "STM:39"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:40
		# line in RSA: STM:  WATRewr-<fld1> <fld2> SetWATReqRewritePolicyOn - <fld6> Ret <fld3> SapCtx <fld4>, SapId <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  WATRewr-%{fld1} %{fld2} SetWATReqRewritePolicyOn - %{fld6} Ret %{fld3} SapCtx %{fld4}, SapId %{fld5}" }
				id => "message-STM:40"
				add_field => {
				"event_description" => "STM: SetWATReqRewritePolicyOn."
					"[event][id]" => "STM:40"
					"[rsa][message][id1]" => "STM:40"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:41
		# line in RSA: STM:      aps-<fld1> <fld2>                       SetIpsOn SapCtx <fld3>, Return Code <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}                       SetIpsOn SapCtx %{fld3}, Return Code %{fld4}" }
				id => "message-STM:41"
				add_field => {
				"event_description" => "STM: aps SetIpsOn."
					"[event][id]" => "STM:41"
					"[rsa][message][id1]" => "STM:41"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:42
		# line in RSA: STM:      aps-<fld1> <fld2>            SetIpsLimitPolicyOn Return Code <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:      aps-%{fld1} %{fld2}            SetIpsLimitPolicyOn Return Code %{fld3}" }
				id => "message-STM:42"
				add_field => {
				"event_description" => "STM: aps SetIpsLimitPolicy."
					"[event][id]" => "STM:42"
					"[rsa][message][id1]" => "STM:42"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM:43
		# line in RSA: STM:  WATRewr-<fld1> <fld2> SetWATRespRewritePolicyOn - <fld6> Ret <fld3> SapCtx <fld4>, SapId <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM:  WATRewr-%{fld1} %{fld2} SetWATRespRewritePolicyOn - %{fld6} Ret %{fld3} SapCtx %{fld4}, SapId %{fld5}" }
				id => "message-STM:43"
				add_field => {
				"event_description" => "STM: SetWATRespRewritePolicyOn."
					"[event][id]" => "STM:43"
					"[rsa][message][id1]" => "STM:43"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "STM_WRAPPER" {
		# MESSAGE STM_WRAPPER:01
		# line in RSA: STM_WRAPPER: command(--digest) execution status = <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: command(--digest) execution status = %{info}" }
				id => "message-STM_WRAPPER:01"
				add_field => {
				"event_description" => "STM_WRAPPER: command execution status."
					"[event][id]" => "STM_WRAPPER:01"
					"[rsa][message][id1]" => "STM_WRAPPER:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM_WRAPPER:02
		# line in RSA: STM_WRAPPER: [ALERT:<fld1>] Configuration size is <fld2> which exceeds the <fld3> safe limit. Please check your configuration.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: [ALERT:%{fld1}] Configuration size is %{fld2} which exceeds the %{fld3} safe limit. Please check your configuration." }
				id => "message-STM_WRAPPER:02"
				add_field => {
				"event_description" => "STM_WRAPPER: ALERT Configuration size exceeds the safe memory limit."
					"[event][id]" => "STM_WRAPPER:02"
					"[rsa][message][id1]" => "STM_WRAPPER:02"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM_WRAPPER:03
		# line in RSA: STM_WRAPPER: Committing UI configuration.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: Committing UI configuration." }
				id => "message-STM_WRAPPER:03"
				add_field => {
				"event_description" => "STM_WRAPPER: Committing UI configuration."
					"[event][id]" => "STM_WRAPPER:03"
					"[rsa][message][id1]" => "STM_WRAPPER:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM_WRAPPER:04
		# line in RSA: STM_WRAPPER: Successfully stopped STM.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: Successfully stopped STM." }
				id => "message-STM_WRAPPER:04"
				add_field => {
				"event_description" => "STM_WRAPPER: Successfully stopped STM."
					"[event][id]" => "STM_WRAPPER:04"
					"[rsa][message][id1]" => "STM_WRAPPER:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM_WRAPPER:05
		# line in RSA: STM_WRAPPER: Successfully initialized STM.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: Successfully initialized STM." }
				id => "message-STM_WRAPPER:05"
				add_field => {
				"event_description" => "STM_WRAPPER: Successfully initialized STM."
					"[event][id]" => "STM_WRAPPER:05"
					"[rsa][message][id1]" => "STM_WRAPPER:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM_WRAPPER:06
		# line in RSA: STM_WRAPPER: Initializing STM.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: Initializing STM." }
				id => "message-STM_WRAPPER:06"
				add_field => {
				"event_description" => "STM_WRAPPER: Initializing STM."
					"[event][id]" => "STM_WRAPPER:06"
					"[rsa][message][id1]" => "STM_WRAPPER:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STM_WRAPPER:07
		# line in RSA: STM_WRAPPER: Rolling back the current database transaction. Configuration digest failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "STM_WRAPPER: Rolling back the current database transaction. Configuration digest failed." }
				id => "message-STM_WRAPPER:07"
				add_field => {
				"event_description" => "STM_WRAPPER: Rolling back the current database transaction. Configuration digest failed."
					"[event][id]" => "STM_WRAPPER:07"
					"[rsa][message][id1]" => "STM_WRAPPER:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CONFIG_AGENT" {
		# MESSAGE CONFIG_AGENT:01
		# line in RSA: CONFIG_AGENT: <fld1> RPC Name =<fld2>, RPC Result: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CONFIG_AGENT: %{fld1} RPC Name =%{fld2}, RPC Result: %{fld3}" }
				id => "message-CONFIG_AGENT:01"
				add_field => {
				"event_description" => "CONFIG_AGENT: RPC information."
					"[event][id]" => "CONFIG_AGENT:01"
					"[rsa][message][id1]" => "CONFIG_AGENT:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CONFIG_AGENT:02
		# line in RSA: CONFIG_AGENT: <fld1> <fld2> Received put-tree command 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CONFIG_AGENT: %{fld1} %{fld2} Received put-tree command" }
				id => "message-CONFIG_AGENT:02"
				add_field => {
				"event_description" => "CONFIG_AGENT:Received put-tree command."
					"[event][id]" => "CONFIG_AGENT:02"
					"[rsa][message][id1]" => "CONFIG_AGENT:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CONFIG_AGENT:03
		# line in RSA: CONFIG_AGENT: <fld1> <fld2> It is recommended to configure cookie_encryption_key_expiry atleast 7 days ahead of current time., <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CONFIG_AGENT: %{fld1} %{fld2} It is recommended to configure cookie_encryption_key_expiry atleast 7 days ahead of current time., %{fld3}" }
				id => "message-CONFIG_AGENT:03"
				add_field => {
				"event_description" => "It is recommended to configure cookie_encryption_key_expiry atleast 7 days ahead of current time."
					"[event][id]" => "CONFIG_AGENT:03"
					"[rsa][message][id1]" => "CONFIG_AGENT:03"
					"[event][categoryid]" => "1613030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CONFIG_AGENT:04
		# line in RSA: CONFIG_AGENT: <fld1> Initiating config_agent database commit phase.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CONFIG_AGENT: %{fld1} Initiating config_agent database commit phase." }
				id => "message-CONFIG_AGENT:04"
				add_field => {
				"event_description" => "CONFIG_AGENT:Initiating config_agent database commit phase."
					"[event][id]" => "CONFIG_AGENT:04"
					"[rsa][message][id1]" => "CONFIG_AGENT:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CONFIG_AGENT:05
		# line in RSA: CONFIG_AGENT: <fld1> <fld2> Update succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CONFIG_AGENT: %{fld1} %{fld2} Update succeeded" }
				id => "message-CONFIG_AGENT:05"
				add_field => {
				"event_description" => "CONFIG_AGENT:Update succeded."
					"[event][id]" => "CONFIG_AGENT:05"
					"[rsa][message][id1]" => "CONFIG_AGENT:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CONFIG_AGENT:06
		# line in RSA: CONFIG_AGENT: <fld1> <fld2> No rules, <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CONFIG_AGENT: %{fld1} %{fld2} No rules, %{fld3}" }
				id => "message-CONFIG_AGENT:06"
				add_field => {
				"event_description" => "CONFIG_AGENT:No rules."
					"[event][id]" => "CONFIG_AGENT:06"
					"[rsa][message][id1]" => "CONFIG_AGENT:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PROCMON" {
		# MESSAGE PROCMON:01
		# line in RSA: PROCMON: Started monitoring
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PROCMON: Started monitoring" }
				id => "message-PROCMON:01"
				add_field => {
				"event_description" => "PROCMON: Started monitoring"
					"[event][id]" => "PROCMON:01"
					"[rsa][message][id1]" => "PROCMON:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PROCMON:02
		# line in RSA: PROCMON: number of stm worker threads is<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PROCMON: number of stm worker threads is%{info}" }
				id => "message-PROCMON:02"
				add_field => {
				"event_description" => "PROCMON: number of stm worker threads"
					"[event][id]" => "PROCMON:02"
					"[rsa][message][id1]" => "PROCMON:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PROCMON:03
		# line in RSA: PROCMON: Monitoring links: <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PROCMON: Monitoring links: %{interface}" }
				id => "message-PROCMON:03"
				add_field => {
				"event_description" => "PROCMON: Monitoring links."
					"[event][id]" => "PROCMON:03"
					"[rsa][message][id1]" => "PROCMON:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PROCMON:04
		# line in RSA: PROCMON: [ALERT:<fld1>] <interface>: link is up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PROCMON: [ALERT:%{fld1}] %{interface}: link is up" }
				id => "message-PROCMON:04"
				add_field => {
				"event_description" => "PROCMON:Link is up."
					"[event][id]" => "PROCMON:04"
					"[rsa][message][id1]" => "PROCMON:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PROCMON:05
		# line in RSA: PROCMON: [ALERT:<fld1>] Firmware storage exceeds <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PROCMON: [ALERT:%{fld1}] Firmware storage exceeds %{info}" }
				id => "message-PROCMON:05"
				add_field => {
				"event_description" => "PROCMON:Firmware storage exceeding."
					"[event][id]" => "PROCMON:05"
					"[rsa][message][id1]" => "PROCMON:05"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PROCMON:06
		# line in RSA: PROCMON: [ALERT:<fld1>] One of the RAID arrays is degrading.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PROCMON: [ALERT:%{fld1}] One of the RAID arrays is degrading." }
				id => "message-PROCMON:06"
				add_field => {
				"event_description" => "PROCMON:One of the RAID arrays is degrading."
					"[event][id]" => "PROCMON:06"
					"[rsa][message][id1]" => "PROCMON:06"
					"[event][categoryid]" => "1603020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "BYPASS" {
		# MESSAGE BYPASS:01
		# line in RSA: BYPASS: State set to normal: starting heartbeat.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BYPASS: State set to normal: starting heartbeat." }
				id => "message-BYPASS:01"
				add_field => {
				"event_description" => "BYPASS: State set to normal: starting heartbeat."
					"[event][id]" => "BYPASS:01"
					"[rsa][message][id1]" => "BYPASS:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE BYPASS:02
		# line in RSA: BYPASS: Mode change: <fld1>,<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BYPASS: Mode change: %{fld1},%{fld2}" }
				id => "message-BYPASS:02"
				add_field => {
				"event_description" => "Mode change."
					"[event][id]" => "BYPASS:02"
					"[rsa][message][id1]" => "BYPASS:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE BYPASS:03
		# line in RSA: BYPASS: Mode set to BYPASS (<fld2>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BYPASS: Mode set to BYPASS (%{fld2})." }
				id => "message-BYPASS:03"
				add_field => {
				"event_description" => " Mode set to BYPASS."
					"[event][id]" => "BYPASS:03"
					"[rsa][message][id1]" => "BYPASS:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE BYPASS:04
		# line in RSA: BYPASS: Mode set to never bypass.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BYPASS: Mode set to never bypass." }
				id => "message-BYPASS:04"
				add_field => {
				"event_description" => " Mode set to never BYPASS."
					"[event][id]" => "BYPASS:04"
					"[rsa][message][id1]" => "BYPASS:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "INSTALL" {
		# MESSAGE INSTALL:01
		# line in RSA: INSTALL: Migrating configuration from <fld2> to <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "INSTALL: Migrating configuration from %{fld2} to %{fld3}" }
				id => "message-INSTALL:01"
				add_field => {
				"event_description" => " INSTALL: migrating configuration."
					"[event][id]" => "INSTALL:01"
					"[rsa][message][id1]" => "INSTALL:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE INSTALL:02
		# line in RSA: INSTALL: Loading the snapshot for <fld2> release.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "INSTALL: Loading the snapshot for %{fld2} release." }
				id => "message-INSTALL:02"
				add_field => {
				"event_description" => " INSTALL: Loading snapshot from previous version."
					"[event][id]" => "INSTALL:02"
					"[rsa][message][id1]" => "INSTALL:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "eventmgr" {
		# MESSAGE eventmgr:01
		# line in RSA: eventmgr: Forwarding log messages to syslog host #<fld3>, address=<hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "eventmgr: Forwarding log messages to syslog host #%{fld3}, address=%{hostip}" }
				id => "message-eventmgr:01"
				add_field => {
				"event_description" => "eventmgr: Forwarding log messages to syslog host"
					"[event][id]" => "eventmgr:01"
					"[rsa][message][id1]" => "eventmgr:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE eventmgr:02
		# line in RSA: eventmgr: Event manager startup succeeded.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "eventmgr: Event manager startup succeeded." }
				id => "message-eventmgr:02"
				add_field => {
				"event_description" => "eventmgr: Event manager startup succeeded."
					"[event][id]" => "eventmgr:02"
					"[rsa][message][id1]" => "eventmgr:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId71
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId71"
			add_field => {
				"event_description" => " Configuration changes made."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId72
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId72"
			add_field => {
				"event_description" => " Login."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId73
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId73"
			add_field => {
				"event_description" => " Session timeout."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId74
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId74"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => " Logout."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId75
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId75" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId75"
			add_field => {
				"event_description" => " Unsuccessful login."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId76
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId76" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId76"
			add_field => {
				"event_description" => " Operating in Transport Mode"
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId77
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId77"
			add_field => {
				"event_description" => " Support Tunnel Opened"
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId78
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId78"
			add_field => {
				"event_description" => " Firmware Update"
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId79
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId79"
			add_field => {
				"event_description" => " Firmware Revert."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId80
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId80"
			add_field => {
				"event_description" => " System Reboot."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId81
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
			id => "msgParserId81"
			add_field => {
				"event_description" => " System ROLLBACK."
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "HEADER_COUNT_EXCEEDED" {
		# MESSAGE HEADER_COUNT_EXCEEDED:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> "[<result>]"  <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{severity} %{event_type} %{saddr} %{sport} %{rulename} %{rule_group} %{action} %{context} \"[%{result}]\"  %{web_method} %{url} %{protocol} \"%{user_agent}\" %{stransaddr} %{stransport} %{web_referer}" }
				id => "message-HEADER_COUNT_EXCEEDED:01"
				add_field => {
					"[event][id]" => "HEADER_COUNT_EXCEEDED:01"
					"[rsa][message][id1]" => "HEADER_COUNT_EXCEEDED:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE HEADER_COUNT_EXCEEDED:02
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> [<result>] <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{severity} %{event_type} %{saddr} %{sport} %{rulename} %{rule_group} %{action} %{context} [%{result}] %{web_method} %{url} %{protocol} \"%{user_agent}\" %{stransaddr} %{stransport} %{web_referer}" }
				id => "message-HEADER_COUNT_EXCEEDED:02"
				add_field => {
					"[event][id]" => "HEADER_COUNT_EXCEEDED:02"
					"[rsa][message][id1]" => "HEADER_COUNT_EXCEEDED:02"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE HEADER_COUNT_EXCEEDED
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] }  <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-HEADER_COUNT_EXCEEDED"
				add_field => {
					"[event][id]" => "HEADER_COUNT_EXCEEDED"
					"[rsa][message][id1]" => "HEADER_COUNT_EXCEEDED"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "CROSS_SITE_SCRIPTING_IN_PARAM" {
		# MESSAGE CROSS_SITE_SCRIPTING_IN_PARAM:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-CROSS_SITE_SCRIPTING_IN_PARAM:01"
				add_field => {
					"[event][id]" => "CROSS_SITE_SCRIPTING_IN_PARAM:01"
					"[rsa][message][id1]" => "CROSS_SITE_SCRIPTING_IN_PARAM:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE CROSS_SITE_SCRIPTING_IN_PARAM
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-CROSS_SITE_SCRIPTING_IN_PARAM"
				add_field => {
					"[event][id]" => "CROSS_SITE_SCRIPTING_IN_PARAM"
					"[rsa][message][id1]" => "CROSS_SITE_SCRIPTING_IN_PARAM"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SQL_INJECTION_IN_URL" {
		# MESSAGE SQL_INJECTION_IN_URL:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-SQL_INJECTION_IN_URL:01"
				add_field => {
					"[event][id]" => "SQL_INJECTION_IN_URL:01"
					"[rsa][message][id1]" => "SQL_INJECTION_IN_URL:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE SQL_INJECTION_IN_URL
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-SQL_INJECTION_IN_URL"
				add_field => {
					"[event][id]" => "SQL_INJECTION_IN_URL"
					"[rsa][message][id1]" => "SQL_INJECTION_IN_URL"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "OS_CMD_INJECTION_IN_URL" {
		# MESSAGE OS_CMD_INJECTION_IN_URL:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-OS_CMD_INJECTION_IN_URL:01"
				add_field => {
					"[event][id]" => "OS_CMD_INJECTION_IN_URL:01"
					"[rsa][message][id1]" => "OS_CMD_INJECTION_IN_URL:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE OS_CMD_INJECTION_IN_URL
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-OS_CMD_INJECTION_IN_URL"
				add_field => {
					"[event][id]" => "OS_CMD_INJECTION_IN_URL"
					"[rsa][message][id1]" => "OS_CMD_INJECTION_IN_URL"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "TILDE_IN_URL" {
		# MESSAGE TILDE_IN_URL:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] }  <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-TILDE_IN_URL:01"
				add_field => {
					"[event][id]" => "TILDE_IN_URL:01"
					"[rsa][message][id1]" => "TILDE_IN_URL:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE TILDE_IN_URL
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] }  <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-TILDE_IN_URL"
				add_field => {
					"[event][id]" => "TILDE_IN_URL"
					"[rsa][message][id1]" => "TILDE_IN_URL"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SQL_INJECTION_IN_PARAM" {
		# MESSAGE SQL_INJECTION_IN_PARAM:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-SQL_INJECTION_IN_PARAM:01"
				add_field => {
					"[event][id]" => "SQL_INJECTION_IN_PARAM:01"
					"[rsa][message][id1]" => "SQL_INJECTION_IN_PARAM:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE SQL_INJECTION_IN_PARAM
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-SQL_INJECTION_IN_PARAM"
				add_field => {
					"[event][id]" => "SQL_INJECTION_IN_PARAM"
					"[rsa][message][id1]" => "SQL_INJECTION_IN_PARAM"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "OS_CMD_INJECTION_IN_PARAM" {
		# MESSAGE OS_CMD_INJECTION_IN_PARAM:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result> "] | [<result>] }  <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\s]*)[\s]+\"\][\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-OS_CMD_INJECTION_IN_PARAM:01"
				add_field => {
					"[event][id]" => "OS_CMD_INJECTION_IN_PARAM:01"
					"[rsa][message][id1]" => "OS_CMD_INJECTION_IN_PARAM:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE OS_CMD_INJECTION_IN_PARAM
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-OS_CMD_INJECTION_IN_PARAM"
				add_field => {
					"[event][id]" => "OS_CMD_INJECTION_IN_PARAM"
					"[rsa][message][id1]" => "OS_CMD_INJECTION_IN_PARAM"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "METHOD_NOT_ALLOWED" {
		# MESSAGE METHOD_NOT_ALLOWED:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-METHOD_NOT_ALLOWED:01"
				add_field => {
					"[event][id]" => "METHOD_NOT_ALLOWED:01"
					"[rsa][message][id1]" => "METHOD_NOT_ALLOWED:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE METHOD_NOT_ALLOWED
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-METHOD_NOT_ALLOWED"
				add_field => {
					"[event][id]" => "METHOD_NOT_ALLOWED"
					"[rsa][message][id1]" => "METHOD_NOT_ALLOWED"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ERROR_RESPONSE_SUPPRESSED" {
		# MESSAGE ERROR_RESPONSE_SUPPRESSED:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-ERROR_RESPONSE_SUPPRESSED:01"
				add_field => {
					"[event][id]" => "ERROR_RESPONSE_SUPPRESSED:01"
					"[rsa][message][id1]" => "ERROR_RESPONSE_SUPPRESSED:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE ERROR_RESPONSE_SUPPRESSED
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-ERROR_RESPONSE_SUPPRESSED"
				add_field => {
					"[event][id]" => "ERROR_RESPONSE_SUPPRESSED"
					"[rsa][message][id1]" => "ERROR_RESPONSE_SUPPRESSED"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DENY_ACL_MATCHED" {
		# MESSAGE DENY_ACL_MATCHED:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context>{ "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s\s]*)([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-DENY_ACL_MATCHED:01"
				add_field => {
					"[event][id]" => "DENY_ACL_MATCHED:01"
					"[rsa][message][id1]" => "DENY_ACL_MATCHED:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE DENY_ACL_MATCHED
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context>{ "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s\s]*)([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-DENY_ACL_MATCHED"
				add_field => {
					"[event][id]" => "DENY_ACL_MATCHED"
					"[rsa][message][id1]" => "DENY_ACL_MATCHED"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> [<result>] <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{fld88} %{fld89} %{timezone} %{category} %{operation_id} %{severity} %{event_type} %{saddr} %{sport} %{rulename} %{rule_group} %{action} %{context} [%{result}] %{web_method} %{url} %{protocol} \"%{user_agent}\" %{stransaddr} %{stransport} %{web_referer}" }
			id => "msgParserId83"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "CROSS_SITE_SCRIPTING_IN_URL" {
		# MESSAGE CROSS_SITE_SCRIPTING_IN_URL:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-CROSS_SITE_SCRIPTING_IN_URL:01"
				add_field => {
					"[event][id]" => "CROSS_SITE_SCRIPTING_IN_URL:01"
					"[rsa][message][id1]" => "CROSS_SITE_SCRIPTING_IN_URL:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE CROSS_SITE_SCRIPTING_IN_URL
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-CROSS_SITE_SCRIPTING_IN_URL"
				add_field => {
					"[event][id]" => "CROSS_SITE_SCRIPTING_IN_URL"
					"[rsa][message][id1]" => "CROSS_SITE_SCRIPTING_IN_URL"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SLASH_DOT_IN_URL" {
		# MESSAGE SLASH_DOT_IN_URL:01
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-SLASH_DOT_IN_URL:01"
				add_field => {
					"[event][id]" => "SLASH_DOT_IN_URL:01"
					"[rsa][message][id1]" => "SLASH_DOT_IN_URL:01"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE SLASH_DOT_IN_URL
		# line in RSA:  <fld88> <fld89> <timezone> <category> <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> { "[<result>]" | [<result>] } <web_method> <url> <protocol> - <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+(?<category>[^\s]*)[\s]+(?<operation_id>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<rulename>[^\s]*)[\s]+(?<rule_group>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+(?<context>[^\s]*)[\s]+([\s]*\"\[(?<result>[^\]]*)\]\"[\s]+|[\s]*\[(?<result>[^\]]*)\][\s]+)[\s]+(?<web_method>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<stransaddr>[^\s]*)[\s]+(?<stransport>[^\s]*)[\s]+(?<web_referer>.*)$" }
				id => "message-SLASH_DOT_IN_URL"
				add_field => {
					"[event][id]" => "SLASH_DOT_IN_URL"
					"[rsa][message][id1]" => "SLASH_DOT_IN_URL"
					"[event][categoryid]" => "1201000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId91
	# line in RSA:  <fld9> <fld10> <timezone> <fld11> <category> <event_type> <severity> <operation_id> <event_description>
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "%{fld9} %{fld10} %{timezone} %{fld11} %{category} %{event_type} %{severity} %{operation_id} %{event_description}" }
			id => "msgParserId91"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld9} %{hfld10}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA: Log=<event_log> Severity=<severity> Protocol=<protocol> SourceIP=<saddr> SourcePort=<sport> DestIP=<daddr> DestPort=<dport> Action=<action> AdminName=<administrator> Details=<info>
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "Log=%{event_log} Severity=%{severity} Protocol=%{protocol} SourceIP=%{saddr} SourcePort=%{sport} DestIP=%{daddr} DestPort=%{dport} Action=%{action} AdminName=%{administrator} Details=%{info}" }
			id => "msgParserId92"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "BARRACUDA_GENRIC" {
		# MESSAGE Audit_Logs
		# line in RSA:  <fld88> <fld89> <timezone> AUDIT <operation_id> <administrator> <action> <content_type> <hostip> <fld8> <info> <obj_type> <fld11> <obj_name> "<change_old>" "<change_new>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld88} %{fld89} %{timezone} AUDIT %{operation_id} %{administrator} %{action} %{content_type} %{hostip} %{fld8} %{info} %{obj_type} %{fld11} %{obj_name} \"%{change_old}\" \"%{change_new}\"" }
				id => "message-Audit_Logs"
				add_field => {
				"category" => "AUDIT"
				"vid" => "Audit_Logs"
					"[event][id]" => "Audit_Logs"
					"[rsa][message][id1]" => "Audit_Logs"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE WF
		# line in RSA:  <fld88> <fld89> <timezone> WF <operation_id> <severity> <event_type> <saddr> <sport> <rulename> <rule_group> <action> <context> [<result>] <web_method> <url> <protocol> "<user_agent>" <stransaddr> <stransport> <web_referer>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld88} %{fld89} %{timezone} WF %{operation_id} %{severity} %{event_type} %{saddr} %{sport} %{rulename} %{rule_group} %{action} %{context} [%{result}] %{web_method} %{url} %{protocol} \"%{user_agent}\" %{stransaddr} %{stransport} %{web_referer}" }
				id => "message-WF"
				add_field => {
				"category" => "WF"
				"vid" => "WF"
					"[event][id]" => "WF"
					"[rsa][message][id1]" => "WF"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE TR_Logs:01
		# line in RSA:  <fld88> <fld89> <timezone> TR <operation_id> <protocol> <web_method> <saddr> <sport> <daddr> <dport> <url> <cert_username> <logon_id> <web_host> <web_referer> <resultcode> <sbytes> <rbytes> "-" "-" "<user_agent>" <stransaddr> { <stransport> <content_type> | <stransport>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+TR[\s]+(?<operation_id>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<cert_username>[^\s]*)[\s]+(?<logon_id>[^\s]*)[\s]+(?<web_host>[^\s]*)[\s]+(?<web_referer>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+\"\-\"[\s]+\"\-\"[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+([\s]*(?<stransport>[^\s]*)[\s]+(?<content_type>[^\s]*)[\s]+|[\s]*(?<stransport>.*))$" }
				id => "message-TR_Logs:01"
				add_field => {
				"category" => "TR"
				"vid" => "TR_Logs"
					"[event][id]" => "%{web_method}"
					"[rsa][message][id1]" => "TR_Logs:01"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE TR_Logs:02
		# line in RSA:  <fld88> <fld89> <timezone> TR <operation_id> <protocol> <web_method> <saddr> <sport> <daddr> <dport> <url> <cert_username> <logon_id> <web_host> <web_referer> <resultcode> <sbytes> <rbytes> <web_query> "-" "<user_agent>" <stransaddr> { <stransport> <content_type> | <stransport>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+TR[\s]+(?<operation_id>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<cert_username>[^\s]*)[\s]+(?<logon_id>[^\s]*)[\s]+(?<web_host>[^\s]*)[\s]+(?<web_referer>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<web_query>[^\s]*)[\s]+\"\-\"[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+([\s]*(?<stransport>[^\s]*)[\s]+(?<content_type>[^\s]*)[\s]+|[\s]*(?<stransport>.*))$" }
				id => "message-TR_Logs:02"
				add_field => {
				"category" => "TR"
				"vid" => "TR_Logs"
					"[event][id]" => "%{web_method}"
					"[rsa][message][id1]" => "TR_Logs:02"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE TR_Logs:03
		# line in RSA:  <fld88> <fld89> <timezone> TR <operation_id> <protocol> <web_method> <saddr> <sport> <daddr> <dport> <url> <cert_username> <logon_id> <web_host> <web_referer> <resultcode> <sbytes> <rbytes> "-" <web_cookie> "<user_agent>" <stransaddr> { <stransport> <content_type> | <stransport>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+TR[\s]+(?<operation_id>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<cert_username>[^\s]*)[\s]+(?<logon_id>[^\s]*)[\s]+(?<web_host>[^\s]*)[\s]+(?<web_referer>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+\"\-\"[\s]+(?<web_cookie>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+([\s]*(?<stransport>[^\s]*)[\s]+(?<content_type>[^\s]*)[\s]+|[\s]*(?<stransport>.*))$" }
				id => "message-TR_Logs:03"
				add_field => {
				"category" => "TR"
				"vid" => "TR_Logs"
					"[event][id]" => "%{web_method}"
					"[rsa][message][id1]" => "TR_Logs:03"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
		# MESSAGE TR_Logs
		# line in RSA:  <fld88> <fld89> <timezone> TR <operation_id> <protocol> <web_method> <saddr> <sport> <daddr> <dport> <url> <cert_username> <logon_id> <web_host> <web_referer> <resultcode> <sbytes> <rbytes> <web_query> <web_cookie> "<user_agent>" <stransaddr> { <stransport> <content_type> | <stransport>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld88>[^\s]*)[\s]+(?<fld89>[^\s]*)[\s]+(?<timezone>[^\s]*)[\s]+TR[\s]+(?<operation_id>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+(?<url>[^\s]*)[\s]+(?<cert_username>[^\s]*)[\s]+(?<logon_id>[^\s]*)[\s]+(?<web_host>[^\s]*)[\s]+(?<web_referer>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<web_query>[^\s]*)[\s]+(?<web_cookie>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+(?<stransaddr>[^\s]*)[\s]+([\s]*(?<stransport>[^\s]*)[\s]+(?<content_type>[^\s]*)[\s]+|[\s]*(?<stransport>.*))$" }
				id => "message-TR_Logs"
				add_field => {
				"category" => "TR"
				"vid" => "TR_Logs"
					"[event][id]" => "%{web_method}"
					"[rsa][message][id1]" => "TR_Logs"
					"[event][categoryid]" => "1204000000"
					"[logstash][fullDateTimeString]" => "%{hfld7} %{hfld8}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-barracudawafmsg.json"
#			template_name => "barracudawaf_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
