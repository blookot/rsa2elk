# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "cisconxos"
			"[observer][name]" => "Cisco Nexus"
			"[observer][type]" => "Switch"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: : <hfld14> <hfld15> <hfld16> <hfld17> <hfld18>: %<hfld19>-<hfld20>-<severity>-<messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => ": %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{hfld18}: %%{hfld19}-%{hfld20}-%{severity}-%{messageid}:%{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hfld14> <hfld15> <hfld16> <hfld17> <hfld18>: %<hfld19>-<hfld20>-<severity>-<messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17} %{hfld18}: %%{hfld19}-%{hfld20}-%{severity}-%{messageid}:%{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hfld4> <hfld5> <hfld6> <hfld7> : <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: %<hfld19>-<severity>-<messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld4} %{hfld5} %{hfld6} %{hfld7} : %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %%{hfld19}-%{severity}-%{messageid}:%{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: : <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: %<hfld19>-<severity>-<messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => ": %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %%{hfld19}-%{severity}-%{messageid}:%{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <fld13>: <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: %<hfld19>-<severity>-<messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{fld13}: %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %%{hfld19}-%{severity}-%{messageid}:%{message}" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: %<hfld19>-<severity>-<messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %%{hfld19}-%{severity}-%{messageid}:%{message}" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: : <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: <messageid>[<hfld18>]:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => ": %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %{messageid}[%{hfld18}]:%{message}" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: : <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: <messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => ": %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %{messageid}:%{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: : <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => ": %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %{messageid} %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: <messageid>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %{messageid}:%{message}" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <fld13>: <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{fld13}: %{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %{messageid} %{message}" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <hfld14> <hfld15> <hfld16> <hfld17> <timezone>: <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17} %{timezone}: %{messageid} %{message}" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-cisconxosmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  <event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId0"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SYSTEM_MSG" {
		# MESSAGE SYSTEM_MSG
		# line in RSA:  error: PAM: Authentication failure for illegal user <username> from <saddr> - <agent>[<process_id>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "error: PAM: Authentication failure for illegal user %{username} from %{saddr} - %{agent}[%{process_id}]" }
				id => "message-SYSTEM_MSG"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Authentication failure for illegal user"
					"[event][id]" => "SYSTEM_MSG"
					"[rsa][message][id1]" => "SYSTEM_MSG"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:12
		# line in RSA:  error: PAM: Authentication failure for illegal user <username> from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "error: PAM: Authentication failure for illegal user %{username} from %{shost}" }
				id => "message-SYSTEM_MSG:12"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Authentication failure for illegal user"
					"[event][id]" => "SYSTEM_MSG:12"
					"[rsa][message][id1]" => "SYSTEM_MSG:12"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:01
		# line in RSA:  error: PAM: Authentication failure for <username> from <saddr> - <agent>[<process_id>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "error: PAM: Authentication failure for %{username} from %{saddr} - %{agent}[%{process_id}]" }
				id => "message-SYSTEM_MSG:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Authentication failure for user"
					"[event][id]" => "SYSTEM_MSG:01"
					"[rsa][message][id1]" => "SYSTEM_MSG:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:11
		# line in RSA:  error: PAM: Authentication failure for <username> from <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "error: PAM: Authentication failure for %{username} from %{shost}" }
				id => "message-SYSTEM_MSG:11"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Authentication failure for user"
					"[event][id]" => "SYSTEM_MSG:11"
					"[rsa][message][id1]" => "SYSTEM_MSG:11"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:19
		# line in RSA:  error: maximum authentication attempts exceeded for {invalid user <username>|<username>} from <saddr> port <sport> <protocol> - <agent>[<process_id>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*error:[\s]+maximum[\s]+authentication[\s]+attempts[\s]+exceeded[\s]+for[\s]+(invalid[\s]+user[\s]+(?<username>[^\s]*)|(?<username>[^\s]*))[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]$" }
				id => "message-SYSTEM_MSG:19"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:19"
					"[rsa][message][id1]" => "SYSTEM_MSG:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:02
		# line in RSA:  error:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "error:%{result}" }
				id => "message-SYSTEM_MSG:02"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:02"
					"[rsa][message][id1]" => "SYSTEM_MSG:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:03
		# line in RSA:  {(pam_unix)|pam_unix(<fld1>:<fld2>):} authentication failure; logname=<fld20> uid=<fld21> euid=<fld22> tty=<terminal> ruser=<fld24> {rhost=<fld25> user=<username>|rhost=<fld25>} - <agent>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(\(pam_unix\)|pam_unix\((?<fld1>[^:]*):(?<fld2>[^\)]*)\):)[\s]+authentication[\s]+failure;[\s]+logname=(?<fld20>[^\s]*)[\s]+uid=(?<fld21>[^\s]*)[\s]+euid=(?<fld22>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+ruser=(?<fld24>[^\s]*)[\s]+(rhost=(?<fld25>[^\s]*)[\s]+user=(?<username>[^\s]*)|rhost=(?<fld25>[^\s]*))[\s]+\-[\s]+(?<agent>.*)$" }
				id => "message-SYSTEM_MSG:03"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:03"
					"[rsa][message][id1]" => "SYSTEM_MSG:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:04
		# line in RSA:  (pam_unix) <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "(pam_unix) %{event_description}" }
				id => "message-SYSTEM_MSG:04"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:04"
					"[rsa][message][id1]" => "SYSTEM_MSG:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:05
		# line in RSA:  pam_aaa:Authentication failed {for user <username> from|from} <saddr> - <agent>[<process_id>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*pam_aaa:Authentication[\s]+failed[\s]+(for[\s]+user[\s]+(?<username>[^\s]*)[\s]+from|from)[\s]+(?<saddr>[^\s]*)[\s]+\-[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]$" }
				id => "message-SYSTEM_MSG:05"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:05"
					"[rsa][message][id1]" => "SYSTEM_MSG:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:06
		# line in RSA:  FAILED LOGIN (<fld20>) on <fld21> FOR <username>, Authentication failure - login[<process_id>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FAILED LOGIN (%{fld20}) on %{fld21} FOR %{username}, Authentication failure - login[%{process_id}]" }
				id => "message-SYSTEM_MSG:06"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:06"
					"[rsa][message][id1]" => "SYSTEM_MSG:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:07
		# line in RSA:  fatal:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "fatal:%{event_description}" }
				id => "message-SYSTEM_MSG:07"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:07"
					"[rsa][message][id1]" => "SYSTEM_MSG:07"
					"[event][categoryid]" => "1601000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:09
		# line in RSA:  <fld1>: Host name is set <hostname> - kernel
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: Host name is set %{hostname} - kernel" }
				id => "message-SYSTEM_MSG:09"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:09"
					"[rsa][message][id1]" => "SYSTEM_MSG:09"
					"[event][categoryid]" => "1601000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:10
		# line in RSA:  Unauthorized access by NFS client <saddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unauthorized access by NFS client %{saddr}." }
				id => "message-SYSTEM_MSG:10"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:10"
					"[rsa][message][id1]" => "SYSTEM_MSG:10"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:13
		# line in RSA:  <fld43> : SNMP UDP authentication failed for <saddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} : SNMP UDP authentication failed for %{saddr}." }
				id => "message-SYSTEM_MSG:13"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:13"
					"[rsa][message][id1]" => "SYSTEM_MSG:13"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:14
		# line in RSA:  <fld43> : Subsequent authentication success for user (<username>) failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} : Subsequent authentication success for user (%{username}) failed." }
				id => "message-SYSTEM_MSG:14"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:14"
					"[rsa][message][id1]" => "SYSTEM_MSG:14"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:15
		# line in RSA:  <fld1> : TTY=<terminal> ; PWD=<directory> ; USER=<username> ; COMMAND=<param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} : TTY=%{terminal} ; PWD=%{directory} ; USER=%{username} ; COMMAND=%{param}" }
				id => "message-SYSTEM_MSG:15"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "SYSTEM_MSG:15"
					"[rsa][message][id1]" => "SYSTEM_MSG:15"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:16
		# line in RSA:  Login failed for user <username> - <agent>[<process_id>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Login failed for user %{username} - %{agent}[%{process_id}]" }
				id => "message-SYSTEM_MSG:16"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "SYSTEM_MSG:16"
					"[rsa][message][id1]" => "SYSTEM_MSG:16"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:17
		# line in RSA:  NTP: Peer <hostip> {with stratum <fld1> selected|is <disposition>} - <agent>[<process_id>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*NTP:[\s]+Peer[\s]+(?<hostip>[^\s]*)[\s]+(with[\s]+stratum[\s]+(?<fld1>[^\s]*)[\s]+selected|is[\s]+(?<disposition>[^\s]*))[\s]+\-[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]$" }
				id => "message-SYSTEM_MSG:17"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:17"
					"[rsa][message][id1]" => "SYSTEM_MSG:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:20
		# line in RSA: New user added with username <username> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "New user added with username %{username} - %{agent}" }
				id => "message-SYSTEM_MSG:20"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"ec_theme" => "Authentication"
					"[event][id]" => "SYSTEM_MSG:20"
					"[rsa][message][id1]" => "SYSTEM_MSG:20"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:21
		# line in RSA:  pam_unix(<fld1>:<fld2>): password changed for <username> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_unix(%{fld1}:%{fld2}): password changed for %{username} - %{agent}" }
				id => "message-SYSTEM_MSG:21"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "SYSTEM_MSG:21"
					"[rsa][message][id1]" => "SYSTEM_MSG:21"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:22
		# line in RSA:  pam_unix(<fld1>:<fld2>): check pass; user <username> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_unix(%{fld1}:%{fld2}): check pass; user %{username} - %{agent}" }
				id => "message-SYSTEM_MSG:22"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"ec_theme" => "Authentication"
					"[event][id]" => "SYSTEM_MSG:22"
					"[rsa][message][id1]" => "SYSTEM_MSG:22"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:23
		# line in RSA:   new user: name=<username>, uid=<uid>, gid=<fld1>, home=<directory>, shell=<fld2> - <agent>[<process_id>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "new user: name=%{username}, uid=%{uid}, gid=%{fld1}, home=%{directory}, shell=%{fld2} - %{agent}[%{process_id}]" }
				id => "message-SYSTEM_MSG:23"
				add_field => {
				"event_source" => "%{hfld19}"
				"ec_subject" => "User"
					"[event][id]" => "SYSTEM_MSG:23"
					"[rsa][message][id1]" => "SYSTEM_MSG:23"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:24
		# line in RSA:  delete user {`<username>'|'<username>'} - <agent>[<process_id>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*delete[\s]+user[\s]+(`(?<username>[^']*)'|'(?<username>[^']*)')[\s]+\-[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]$" }
				id => "message-SYSTEM_MSG:24"
				add_field => {
				"event_source" => "%{hfld19}"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
					"[event][id]" => "SYSTEM_MSG:24"
					"[rsa][message][id1]" => "SYSTEM_MSG:24"
					"[event][categoryid]" => "1402020100"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SYSTEM_MSG:08
		# line in RSA: { <event_description> - <agent>| <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<event_description>[^\s]*)[\s]+\-[\s]+(?<agent>.*)|[\s]*(?<event_description>.*))$" }
				id => "message-SYSTEM_MSG:08"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SYSTEM_MSG:08"
					"[rsa][message][id1]" => "SYSTEM_MSG:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA:  <fld1> hostname changed to <hostname>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{fld1} hostname changed to %{hostname}" }
			id => "msgParserId25"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA:  Policy <policyname> is activated by profile <username>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "Policy %{policyname} is activated by profile %{username}" }
			id => "msgParserId26"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"action" => "activated"
				"event_description" => "Policy is activated by profile"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA:  Commit operation <disposition>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "Commit operation %{disposition}" }
			id => "msgParserId27"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId28
	# line in RSA:  Policy <policyname> is de-activated by last referring profile <username>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "Policy %{policyname} is de-activated by last referring profile %{username}" }
			id => "msgParserId28"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"action" => "de-activated"
				"event_description" => "Policy is de-activated by last referring profile"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "POLICY_LOOKUP_EVENT" {
		# MESSAGE POLICY_LOOKUP_EVENT:01
		# line in RSA:  policy=<policyname> rule=<rulename> action=<action> direction=<direction> src.net.ip-address=<saddr> src.net.port=<sport> dst.net.ip-address=<daddr> dst.net.port=<dport> net.protocol=<protocol> net.ethertype=<fld2> dst.zone.name=<dst_zone> src.zone.name=<src_zone> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "policy=%{policyname} rule=%{rulename} action=%{action} direction=%{direction} src.net.ip-address=%{saddr} src.net.port=%{sport} dst.net.ip-address=%{daddr} dst.net.port=%{dport} net.protocol=%{protocol} net.ethertype=%{fld2} dst.zone.name=%{dst_zone} src.zone.name=%{src_zone}" }
				id => "message-POLICY_LOOKUP_EVENT:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "POLICY_LOOKUP_EVENT:01"
					"[rsa][message][id1]" => "POLICY_LOOKUP_EVENT:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE POLICY_LOOKUP_EVENT
		# line in RSA:  policy=<policyname> rule=<rulename> action=<action> direction=<direction> src.net.ip-address=<saddr> src.net.port=<sport> dst.net.ip-address=<daddr> dst.net.port=<dport> net.protocol=<protocol> net.ethertype=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "policy=%{policyname} rule=%{rulename} action=%{action} direction=%{direction} src.net.ip-address=%{saddr} src.net.port=%{sport} dst.net.ip-address=%{daddr} dst.net.port=%{dport} net.protocol=%{protocol} net.ethertype=%{fld2}" }
				id => "message-POLICY_LOOKUP_EVENT"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "POLICY_LOOKUP_EVENT"
					"[rsa][message][id1]" => "POLICY_LOOKUP_EVENT"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE POLICY_LOOKUP_EVENT:02
		# line in RSA:  policy=<policyname> rule=<rulename> action=<action> direction=<direction> net.ethertype=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "policy=%{policyname} rule=%{rulename} action=%{action} direction=%{direction} net.ethertype=%{fld2}" }
				id => "message-POLICY_LOOKUP_EVENT:02"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "POLICY_LOOKUP_EVENT:02"
					"[rsa][message][id1]" => "POLICY_LOOKUP_EVENT:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA:  Interface <interface> is down (Error disabled. Reason:<result>)
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down (Error disabled. Reason:%{result})" }
			id => "msgParserId32"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "IF_DOWN_ADMIN_DOWN" {
		# MESSAGE IF_DOWN_ADMIN_DOWN
		# line in RSA:  Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_ADMIN_DOWN"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_ADMIN_DOWN"
					"[rsa][message][id1]" => "IF_DOWN_ADMIN_DOWN"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_DOWN_ADMIN_DOWN:01
		# line in RSA:  <fld43> Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_ADMIN_DOWN:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_ADMIN_DOWN:01"
					"[rsa][message][id1]" => "IF_DOWN_ADMIN_DOWN:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA:  Interface <interface> is down (<result>)
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down (%{result})" }
			id => "msgParserId33"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "IF_DOWN_LINK_FAILURE" {
		# MESSAGE IF_DOWN_LINK_FAILURE
		# line in RSA:  Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_LINK_FAILURE"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is down"
					"[event][id]" => "IF_DOWN_LINK_FAILURE"
					"[rsa][message][id1]" => "IF_DOWN_LINK_FAILURE"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_DOWN_LINK_FAILURE:01
		# line in RSA:  <fld43> Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_LINK_FAILURE:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_LINK_FAILURE:01"
					"[rsa][message][id1]" => "IF_DOWN_LINK_FAILURE:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA:  Interface <interface>, operational duplex mode changed to <result>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "Interface %{interface}, operational duplex mode changed to %{result}" }
			id => "msgParserId36"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface duplex mode changed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA:  Interface <interface>, operational Receive Flow {Control|Contol} state changed to <result>
	else if [logstash][msgparser][id] == "msgParserId37" {
		grok {
			match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,]*),[\s]+operational[\s]+Receive[\s]+Flow[\s]+(Control|Contol)[\s]+state[\s]+changed[\s]+to[\s]+(?<result>.*)$" }
			id => "msgParserId37"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface operational Receive Flow Control state changed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId38
	# line in RSA:  <result>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{result}" }
			id => "msgParserId38"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId39
	# line in RSA:  Interface <interface>, operational Transmit Flow {Control|Contol} state changed to <result>
	else if [logstash][msgparser][id] == "msgParserId39" {
		grok {
			match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,]*),[\s]+operational[\s]+Transmit[\s]+Flow[\s]+(Control|Contol)[\s]+state[\s]+changed[\s]+to[\s]+(?<result>.*)$" }
			id => "msgParserId39"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface operational Transmit Flow Control state changed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "IF_UP" {
		# MESSAGE IF_UP
		# line in RSA:  <fld43> Interface <sinterface> is up in mode <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{sinterface} is up in mode %{result}" }
				id => "message-IF_UP"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is up in mode"
					"[event][id]" => "IF_UP"
					"[rsa][message][id1]" => "IF_UP"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_UP:01
		# line in RSA:  Interface <sinterface> is up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{sinterface} is up" }
				id => "message-IF_UP:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is up"
					"[event][id]" => "IF_UP:01"
					"[rsa][message][id1]" => "IF_UP:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA:  Interface <interface>, operational speed changed to <result>
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Interface %{interface}, operational speed changed to %{result}" }
			id => "msgParserId42"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface operational speed changed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId43
	# line in RSA:  <group_object> created
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{group_object} created" }
			id => "msgParserId43"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId44
	# line in RSA:  <group_object>: first operational port changed from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{group_object}: first operational port changed from %{change_old} to %{change_new}" }
			id => "msgParserId44"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId45
	# line in RSA:  <group_object>: <interface> is down
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{group_object}: %{interface} is down" }
			id => "msgParserId45"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId46
	# line in RSA:  <group_object>: <interface> is up
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{group_object}: %{interface} is up" }
			id => "msgParserId46"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId47
	# line in RSA:  Interface <interface> is added to <group_object> with subgroup id <fld20>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "Interface %{interface} is added to %{group_object} with subgroup id %{fld20}" }
			id => "msgParserId47"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId48
	# line in RSA:  Interface <interface> is removed from <group_object> with subgroup id <fld20>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "Interface %{interface} is removed from %{group_object} with subgroup id %{fld20}" }
			id => "msgParserId48"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId49
	# line in RSA:  Authentication failed for a login from <shost> (<result>)
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "Authentication failed for a login from %{shost} (%{result})" }
			id => "msgParserId49"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Authentication failure for user"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId50
	# line in RSA:  Initialization of module <fld20> (serial: <serial_number>) failed
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "Initialization of module %{fld20} (serial: %{serial_number}) failed" }
			id => "msgParserId50"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId51
	# line in RSA:  Module <fld20> (serial: <serial_number>) reported a critical failure in service <fld22>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "Module %{fld20} (serial: %{serial_number}) reported a critical failure in service %{fld22}" }
			id => "msgParserId51"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA:  Module <fld20> (serial: <serial_number>) firmware is not compatible with supervisor, downloading new image
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "Module %{fld20} (serial: %{serial_number}) firmware is not compatible with supervisor, downloading new image" }
			id => "msgParserId52"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "MOD_WARNING" {
		# MESSAGE MOD_WARNING:01
		# line in RSA:  Module <fld20> (serial: <serial_number>) reported warnings on <info> due to <result> in device <fld23> (device error <fld22>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Module %{fld20} (serial: %{serial_number}) reported warnings on %{info} due to %{result} in device %{fld23} (device error %{fld22})" }
				id => "message-MOD_WARNING:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "MOD_WARNING:01"
					"[rsa][message][id1]" => "MOD_WARNING:01"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE MOD_WARNING
		# line in RSA:  Module <fld20> (serial: <serial_number>) reported warning <info> due to <result> in device <fld23> (device error <fld22>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Module %{fld20} (serial: %{serial_number}) reported warning %{info} due to %{result} in device %{fld23} (device error %{fld22})" }
				id => "message-MOD_WARNING"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "MOD_WARNING"
					"[rsa][message][id1]" => "MOD_WARNING"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA:  Supervisor <fld20> is active (serial: <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "Supervisor %{fld20} is active (serial: %{serial_number})" }
			id => "msgParserId55"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId56
	# line in RSA:  Module <fld20> is online (serial: <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "Module %{fld20} is online (serial: %{serial_number})" }
			id => "msgParserId56"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId57
	# line in RSA:  Module <fld20> is restarting after image download
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "Module %{fld20} is restarting after image download" }
			id => "msgParserId57"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId58
	# line in RSA:  Dispute resolved for port <portname> on <vlan>
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "Dispute resolved for port %{portname} on %{vlan}" }
			id => "msgParserId58"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Dispute resolved for port on VLAN"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId59
	# line in RSA:  Dispute detected on port <portname> on <vlan>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "Dispute detected on port %{portname} on %{vlan}" }
			id => "msgParserId59"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Dispute detected on port on VLAN"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId60
	# line in RSA:  Module <fld19> detected (Serial number <serial_number>) Module-Type <fld20> Model <fld21>
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "Module %{fld19} detected (Serial number %{serial_number}) Module-Type %{fld20} Model %{fld21}" }
			id => "msgParserId60"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId61
	# line in RSA:  Module <fld19> powered down (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "Module %{fld19} powered down (Serial number %{serial_number})" }
			id => "msgParserId61"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId62
	# line in RSA:  Module <fld19> powered up (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "Module %{fld19} powered up (Serial number %{serial_number})" }
			id => "msgParserId62"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId63
	# line in RSA:  Module <fld19> removed (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "Module %{fld19} removed (Serial number %{serial_number})" }
			id => "msgParserId63"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId64
	# line in RSA:  Power supply <fld19> ok (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "Power supply %{fld19} ok (Serial number %{serial_number})" }
			id => "msgParserId64"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId65
	# line in RSA:  Fan module <fld19> (Serial number <serial_number>) <fld20> detected
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "Fan module %{fld19} (Serial number %{serial_number}) %{fld20} detected" }
			id => "msgParserId65"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId66
	# line in RSA:  Peer vPC <obj_name> configured vlans changed
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "Peer vPC %{obj_name} configured vlans changed" }
			id => "msgParserId66"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Peer vPC configured vlans changed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId67
	# line in RSA:  Peer vPC <obj_name> deleted
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "Peer vPC %{obj_name} deleted" }
			id => "msgParserId67"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId68
	# line in RSA:  Power supply <fld19> found (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "Power supply %{fld19} found (Serial number %{serial_number})" }
			id => "msgParserId68"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId69
	# line in RSA: { PowerSupply <fld1> current-status is <disposition>| <event_description>}
	else if [logstash][msgparser][id] == "msgParserId69" {
		grok {
			match => { "message" => "^([\s]*PowerSupply[\s]+(?<fld1>[^\s]*)[\s]+current\-status[\s]+is[\s]+(?<disposition>.*)|[\s]*(?<event_description>.*))$" }
			id => "msgParserId69"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "PS_CAPACITY_CHANGE" {
		# MESSAGE PS_CAPACITY_CHANGE:01
		# line in RSA:  Power supply <fld1> changed its capacity. possibly due to On/Off or power cable removal/insertion (Serial number <serial_number>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Power supply %{fld1} changed its capacity. possibly due to On/Off or power cable removal/insertion (Serial number %{serial_number})" }
				id => "message-PS_CAPACITY_CHANGE:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "PS_CAPACITY_CHANGE:01"
					"[rsa][message][id1]" => "PS_CAPACITY_CHANGE:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE PS_CAPACITY_CHANGE
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-PS_CAPACITY_CHANGE"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "PS_CAPACITY_CHANGE"
					"[rsa][message][id1]" => "PS_CAPACITY_CHANGE"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_DOWN_FCOT_NOT_PRESENT" {
		# MESSAGE IF_DOWN_FCOT_NOT_PRESENT
		# line in RSA:  Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_FCOT_NOT_PRESENT"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_FCOT_NOT_PRESENT"
					"[rsa][message][id1]" => "IF_DOWN_FCOT_NOT_PRESENT"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_DOWN_FCOT_NOT_PRESENT:01
		# line in RSA:  <fld43> Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_FCOT_NOT_PRESENT:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_FCOT_NOT_PRESENT:01"
					"[rsa][message][id1]" => "IF_DOWN_FCOT_NOT_PRESENT:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_DOWN_INITIALIZING" {
		# MESSAGE IF_DOWN_INITIALIZING
		# line in RSA:  Interface <interface> is down (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_INITIALIZING"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_INITIALIZING"
					"[rsa][message][id1]" => "IF_DOWN_INITIALIZING"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_DOWN_INITIALIZING:01
		# line in RSA:  <fld43> Interface <interface> is down (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_INITIALIZING:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_INITIALIZING:01"
					"[rsa][message][id1]" => "IF_DOWN_INITIALIZING:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_DOWN_NONE" {
		# MESSAGE IF_DOWN_NONE
		# line in RSA:  Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_NONE"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_NONE"
					"[rsa][message][id1]" => "IF_DOWN_NONE"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_DOWN_NONE:01
		# line in RSA:  <fld52> Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld52} Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_NONE:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_NONE:01"
					"[rsa][message][id1]" => "IF_DOWN_NONE:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_DOWN_NOS_RCVD" {
		# MESSAGE IF_DOWN_NOS_RCVD
		# line in RSA:  Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_NOS_RCVD"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_NOS_RCVD"
					"[rsa][message][id1]" => "IF_DOWN_NOS_RCVD"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_DOWN_NOS_RCVD:01
		# line in RSA:  <fld43> Interface <interface> is down (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface} is down (%{result})" }
				id => "message-IF_DOWN_NOS_RCVD:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_DOWN_NOS_RCVD:01"
					"[rsa][message][id1]" => "IF_DOWN_NOS_RCVD:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_TRUNK_DOWN" {
		# MESSAGE IF_TRUNK_DOWN
		# line in RSA:  Interface <interface>, vsan <fld20> is down (<info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, vsan %{fld20} is down (%{info})" }
				id => "message-IF_TRUNK_DOWN"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_TRUNK_DOWN"
					"[rsa][message][id1]" => "IF_TRUNK_DOWN"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_TRUNK_DOWN:01
		# line in RSA:  Interface <interface>, vlan <vlan> down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, vlan %{vlan} down" }
				id => "message-IF_TRUNK_DOWN:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_TRUNK_DOWN:01"
					"[rsa][message][id1]" => "IF_TRUNK_DOWN:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_TRUNK_DOWN:02
		# line in RSA: <fld43> Interface <interface>, vsan <vlan> is down <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface}, vsan %{vlan} is down %{info}" }
				id => "message-IF_TRUNK_DOWN:02"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_TRUNK_DOWN:02"
					"[rsa][message][id1]" => "IF_TRUNK_DOWN:02"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_TRUNK_UP" {
		# MESSAGE IF_TRUNK_UP
		# line in RSA:  Interface <interface>, vsan <fld20> is up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, vsan %{fld20} is up" }
				id => "message-IF_TRUNK_UP"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_TRUNK_UP"
					"[rsa][message][id1]" => "IF_TRUNK_UP"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_TRUNK_UP:01
		# line in RSA:  Interface <interface>, vlan <vlan> up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, vlan %{vlan} up" }
				id => "message-IF_TRUNK_UP:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_TRUNK_UP:01"
					"[rsa][message][id1]" => "IF_TRUNK_UP:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_TRUNK_UP:02
		# line in RSA: <fld43> Interface <interface>, vsan <vlan> is up <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld43} Interface %{interface}, vsan %{vlan} is up %{info}" }
				id => "message-IF_TRUNK_UP:02"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_TRUNK_UP:02"
					"[rsa][message][id1]" => "IF_TRUNK_UP:02"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA:  Interface <interface> is inheriting port-profile <fld20>
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "Interface %{interface} is inheriting port-profile %{fld20}" }
			id => "msgParserId81"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId82
	# line in RSA:  Loops detected in the network among ports <portname> and <info> vlan <vlan> - <result>
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "Loops detected in the network among ports %{portname} and %{info} vlan %{vlan} - %{result}" }
			id => "msgParserId82"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Loops detected in the network among ports"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId83
	# line in RSA:  Sync completed.
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "Sync completed." }
			id => "msgParserId83"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId84
	# line in RSA:  ERROR:<result>
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "ERROR:%{result}" }
			id => "msgParserId84"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId85
	# line in RSA:  Unable to lock the configuration (error-id <resultcode>). Aborting configuration copy.
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "Unable to lock the configuration (error-id %{resultcode}). Aborting configuration copy." }
			id => "msgParserId85"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId86
	# line in RSA:  Configuration copy failed (error-id <resultcode>).
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "Configuration copy failed (error-id %{resultcode})." }
			id => "msgParserId86"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId87
	# line in RSA: { <event_description> (PID <process_id>).|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId87" {
		grok {
			match => { "message" => "^([\s]*(?<event_description>[^\s]*)[\s]+\(PID[\s]+(?<process_id>[^\)]*)\)\.|(?<event_description>.*))$" }
			id => "msgParserId87"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId88
	# line in RSA:  Interface <interface> is detached
	else if [logstash][msgparser][id] == "msgParserId88" {
		dissect {
			mapping => { "message" => "Interface %{interface} is detached" }
			id => "msgParserId88"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId89
	# line in RSA:  Interface <interface> is down
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down" }
			id => "msgParserId89"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId90
	# line in RSA:  Connection <hostname> connected to the vCenter Server.
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "Connection %{hostname} connected to the vCenter Server." }
			id => "msgParserId90"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId91
	# line in RSA:  Connection <hostname> disconnected from the vCenter Server.
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "Connection %{hostname} disconnected from the vCenter Server." }
			id => "msgParserId91"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA:  created port-group <info> on the vCenter Server.
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "created port-group %{info} on the vCenter Server." }
			id => "msgParserId92"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId93
	# line in RSA:  deleted port-group <info> from the vCenter Server.
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "deleted port-group %{info} from the vCenter Server." }
			id => "msgParserId93"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId94
	# line in RSA:  Changed dvswitch name to <info> on the vCenter Server.
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "Changed dvswitch name to %{info} on the vCenter Server." }
			id => "msgParserId94"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId95
	# line in RSA:  vPC <obj_name> is deleted
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "vPC %{obj_name} is deleted" }
			id => "msgParserId95"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId96
	# line in RSA:  vPC <obj_name> is up
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "vPC %{obj_name} is up" }
			id => "msgParserId96"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "VPC is up"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "VSHD_SYSLOG_CONFIG_I" {
		# MESSAGE VSHD_SYSLOG_CONFIG_I
		# line in RSA:  Configured from vty by <username> on {<saddr>@<terminal>|<saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Configured[\s]+from[\s]+vty[\s]+by[\s]+(?<username>[^\s]*)[\s]+on[\s]+((?<saddr>[^@]*)@(?<terminal>.*)|(?<saddr>.*))$" }
				id => "message-VSHD_SYSLOG_CONFIG_I"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "VSHD_SYSLOG_CONFIG_I"
					"[rsa][message][id1]" => "VSHD_SYSLOG_CONFIG_I"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE VSHD_SYSLOG_CONFIG_I:01
		# line in RSA:  Configuring console from <fld43> <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configuring console from %{fld43} %{saddr}" }
				id => "message-VSHD_SYSLOG_CONFIG_I:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "VSHD_SYSLOG_CONFIG_I:01"
					"[rsa][message][id1]" => "VSHD_SYSLOG_CONFIG_I:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AAA_ACCOUNTING_MESSAGE" {
		# MESSAGE AAA_ACCOUNTING_MESSAGE:18
		# line in RSA:  update:<saddr>@<terminal>:<username>:<event_description>; feature <protocol> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}:%{event_description}; feature %{protocol} (%{result})" }
				id => "message-AAA_ACCOUNTING_MESSAGE:18"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:18"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:18"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:17
		# line in RSA:  update:<saddr>@<terminal>:<username>:enabled telnet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}:enabled telnet" }
				id => "message-AAA_ACCOUNTING_MESSAGE:17"
				add_field => {
				"ec_activity" => "Enable"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"action" => "update"
				"event_description" => "enabled telnet"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:17"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:17"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE
		# line in RSA:   start:<saddr>@<application>:<username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "start:%{saddr}@%{application}:%{username}" }
				id => "message-AAA_ACCOUNTING_MESSAGE"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "program start"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:08
		# line in RSA:   start:snmp_<fld43>_<saddr>:<username>:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "start:snmp_%{fld43}_%{saddr}:%{username}:" }
				id => "message-AAA_ACCOUNTING_MESSAGE:08"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:08"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:03
		# line in RSA:   start:<saddr>(<terminal>):<username>:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "start:%{saddr}(%{terminal}):%{username}:" }
				id => "message-AAA_ACCOUNTING_MESSAGE:03"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:03"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:19
		# line in RSA:   start:<fld40>:<username>:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "start:%{fld40}:%{username}:" }
				id => "message-AAA_ACCOUNTING_MESSAGE:19"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:19"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:19"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:22
		# line in RSA:  update:::added user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:::added user %{username}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:22"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:22"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:22"
					"[event][categoryid]" => "1402020100"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:23
		# line in RSA:  update:::<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:::%{event_description}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:23"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:23"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:23"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:11
		# line in RSA:   update:snmp_<fld43>_<saddr>:<username>:target (name:<dhost> address:<daddr>:<dport>) deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:snmp_%{fld43}_%{saddr}:%{username}:target (name:%{dhost} address:%{daddr}:%{dport}) deleted" }
				id => "message-AAA_ACCOUNTING_MESSAGE:11"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:11"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:12
		# line in RSA:   update:snmp_<fld43>_<saddr>:<username>:target (name:<dhost> address:<daddr>:<dport> timeout:<fld44> retry:<fld45> tagList:trap params:<fld46>) added
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:snmp_%{fld43}_%{saddr}:%{username}:target (name:%{dhost} address:%{daddr}:%{dport} timeout:%{fld44} retry:%{fld45} tagList:trap params:%{fld46}) added" }
				id => "message-AAA_ACCOUNTING_MESSAGE:12"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:12"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:13
		# line in RSA:   update:snmp_<fld43>_<saddr>:<username>:Interface <interface> state updated to up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:snmp_%{fld43}_%{saddr}:%{username}:Interface %{interface} state updated to up" }
				id => "message-AAA_ACCOUNTING_MESSAGE:13"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:13"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:14
		# line in RSA:   update:snmp_<fld43>_<saddr>:<username>:Interface <interface> state updated to down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:snmp_%{fld43}_%{saddr}:%{username}:Interface %{interface} state updated to down" }
				id => "message-AAA_ACCOUNTING_MESSAGE:14"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:14"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:15
		# line in RSA:   update:snmp_<fld43>_<saddr>:<username>:Performing configuration copy.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:snmp_%{fld43}_%{saddr}:%{username}:Performing configuration copy." }
				id => "message-AAA_ACCOUNTING_MESSAGE:15"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:15"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:16
		# line in RSA:   update:<saddr>@<application>:<username>:terminal length <dclass_counter1> (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{application}:%{username}:terminal length %{dclass_counter1} (%{result})" }
				id => "message-AAA_ACCOUNTING_MESSAGE:16"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "program update"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:16"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:04
		# line in RSA:   update:<saddr>(<fld3>):<username>:terminal length <fld5>:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}(%{fld3}):%{username}:terminal length %{fld5}:%{result}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:04"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:04"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:01
		# line in RSA:   update:<saddr>@<terminal>:<application>:terminal width <dclass_counter1> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{application}:terminal width %{dclass_counter1} (%{result})" }
				id => "message-AAA_ACCOUNTING_MESSAGE:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "program update"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:01"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:27
		# line in RSA:  update:<saddr>@<terminal>:<username>:{configure terminal ; ntp source-interface <sinterface>|show ntp statistics peer ipaddr <hostip>} (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*update:(?<saddr>[^@]*)@(?<terminal>[^:]*):(?<username>[^:]*):(configure[\s]+terminal[\s]+;[\s]+ntp[\s]+source\-interface[\s]+(?<sinterface>[^\s]*)|show[\s]+ntp[\s]+statistics[\s]+peer[\s]+ipaddr[\s]+(?<hostip>[^\s]*))[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-AAA_ACCOUNTING_MESSAGE:27"
				add_field => {
				"event_source" => "%{hfld19}"
				"action" => "Update"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:27"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:27"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:28
		# line in RSA:  update:<saddr>@<terminal>:<username>:{clock set <event_time_string>|show logging last <fld1>} (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*update:(?<saddr>[^@]*)@(?<terminal>[^:]*):(?<username>[^:]*):(clock[\s]+set[\s]+(?<event_time_string>[^\s]*)|show[\s]+logging[\s]+last[\s]+(?<fld1>[^\s]*))[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-AAA_ACCOUNTING_MESSAGE:28"
				add_field => {
				"event_source" => "%{hfld19}"
				"action" => "Update"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:28"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:20
		# line in RSA:  update:<saddr>@<terminal>:<username>:<info> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}:%{info} (%{result})" }
				id => "message-AAA_ACCOUNTING_MESSAGE:20"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:20"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:20"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:30
		# line in RSA:   update:<saddr>@<terminal>:<username>:added user <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}:added user %{c_username}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:30"
				add_field => {
				"event_source" => "%{hfld19}"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "Added user"
				"action" => "Update"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:30"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:30"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:29
		# line in RSA:   update:<saddr>@<terminal>:<username>:deleted user <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}:deleted user %{c_username}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:29"
				add_field => {
				"event_source" => "%{hfld19}"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "Deleted user"
				"action" => "Update"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:29"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:29"
					"[event][categoryid]" => "1402020100"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:21
		# line in RSA:   update:<saddr>@<terminal>:<username>:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}:%{info}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:21"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:21"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:07
		# line in RSA:   update:<saddr>(<fld3>):<username>:terminal width <dclass_counter1>:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}(%{fld3}):%{username}:terminal width %{dclass_counter1}:%{result}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:07"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:07"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:05
		# line in RSA:   update:<saddr>(<fld3>):<username>:terminal session-timeout <fld5>:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}(%{fld3}):%{username}:terminal session-timeout %{fld5}:%{result}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:05"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:05"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:10
		# line in RSA:   update:<saddr>(<fld3>):<username>:copy <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}(%{fld3}):%{username}:copy %{event_description}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:10"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:10"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:24
		# line in RSA:  update:<terminal>:<username>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{terminal}:%{username}: %{event_description}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:24"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:24"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:06
		# line in RSA:   stop:<saddr>(<fld3>):<username>:shell terminated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "stop:%{saddr}(%{fld3}):%{username}:shell terminated" }
				id => "message-AAA_ACCOUNTING_MESSAGE:06"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:06"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:02
		# line in RSA:  stop:<saddr>@<terminal>:<username>:shell <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "stop:%{saddr}@%{terminal}:%{username}:shell %{result}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:02"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "shell terminated"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:02"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:25
		# line in RSA:  stop:<saddr>@<terminal>:<username>:<fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "stop:%{saddr}@%{terminal}:%{username}:%{fld40}" }
				id => "message-AAA_ACCOUNTING_MESSAGE:25"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:25"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:09
		# line in RSA:   stop:snmp_<fld43>_<saddr>:<username>:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "stop:snmp_%{fld43}_%{saddr}:%{username}:" }
				id => "message-AAA_ACCOUNTING_MESSAGE:09"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:09"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:09"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE AAA_ACCOUNTING_MESSAGE:26
		# line in RSA:   stop:<terminal>:<username>:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "stop:%{terminal}:%{username}:" }
				id => "message-AAA_ACCOUNTING_MESSAGE:26"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "AAA_ACCOUNTING_MESSAGE:26"
					"[rsa][message][id1]" => "AAA_ACCOUNTING_MESSAGE:26"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId130
	# line in RSA:  {Source|Src} IP: <saddr>, {Destination|Dst} IP: <daddr>, {Source|Src} Port: <sport>, {Destination|Dst} Port: <dport>, {Source Interface|Src Intf}: <sinterface>, { Protocol: | protocol: } "<protocol>"(<protocol_detail>),<space> Hit-count = <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId130" {
		grok {
			match => { "message" => "^[\s]*(Source|Src)[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+(Destination|Dst)[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+(Source|Src)[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+(Destination|Dst)[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+(Source[\s]+Interface|Src[\s]+Intf):[\s]+(?<sinterface>[^,]*),[\s]+([\s]*Protocol:[\s]+|[\s]*protocol:[\s]+)[\s]+\"(?<protocol>[^\"]*)\"\((?<protocol_detail>[^\)]*)\),(?<space>[^\s]*)[\s]+Hit\-count[\s]+=[\s]+(?<dclass_counter1>.*)$" }
			id => "msgParserId130"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "ACL Log Flow Interval"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId131
	# line in RSA:   Maximum limit <fld3> reached for number of flows
	else if [logstash][msgparser][id] == "msgParserId131" {
		dissect {
			mapping => { "message" => "Maximum limit %{fld3} reached for number of flows" }
			id => "msgParserId131"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId132
	# line in RSA:   {Source|Src} IP: <saddr>, {Destination|Dst} IP: <daddr>, {Source|Src} Port: <sport>, {Destination|Dst} Port: <dport>, {Source Interface|Src Intf}: <sinterface>, { Protocol: | protocol: } "<protocol>"(<protocol_detail>),<space> Hit-count = <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId132" {
		grok {
			match => { "message" => "^[\s]*(Source|Src)[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+(Destination|Dst)[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+(Source|Src)[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+(Destination|Dst)[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+(Source[\s]+Interface|Src[\s]+Intf):[\s]+(?<sinterface>[^,]*),[\s]+([\s]*Protocol:[\s]+|[\s]*protocol:[\s]+)[\s]+\"(?<protocol>[^\"]*)\"\((?<protocol_detail>[^\)]*)\),(?<space>[^\s]*)[\s]+Hit\-count[\s]+=[\s]+(?<dclass_counter1>.*)$" }
			id => "msgParserId132"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "ACL Lof New Flow"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId133
	# line in RSA:  <process> [<process_id>]  Source address of packet received from <smacaddr> on <vlan>(<interface>) is duplicate of local virtual ip, <saddr>
	else if [logstash][msgparser][id] == "msgParserId133" {
		dissect {
			mapping => { "message" => "%{process} [%{process_id}]  Source address of packet received from %{smacaddr} on %{vlan}(%{interface}) is duplicate of local virtual ip, %{saddr}" }
			id => "msgParserId133"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Source address of packet received on vlan is duplicate of local virtual ip"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId134
	# line in RSA:  VLANs <vlan> on Interface <sinterface> are removed from suspended state.
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "VLANs %{vlan} on Interface %{sinterface} are removed from suspended state." }
			id => "msgParserId134"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId135
	# line in RSA:  VLANs <vlan> on Interface <sinterface> are being suspended. (Reason: <info>)
	else if [logstash][msgparser][id] == "msgParserId135" {
		dissect {
			mapping => { "message" => "VLANs %{vlan} on Interface %{sinterface} are being suspended. (Reason: %{info})" }
			id => "msgParserId135"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId136
	# line in RSA:  Interface <sinterface> is down(<result>)
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "Interface %{sinterface} is down(%{result})" }
			id => "msgParserId136"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId137
	# line in RSA:  Clock setting has been changed on the system. Please be aware that clock changes will force a recheckout of all existing VEM licenses. During this recheckout procedure, licensed VEMs which are offline will lose their licenses.
	else if [logstash][msgparser][id] == "msgParserId137" {
		dissect {
			mapping => { "message" => "Clock setting has been changed on the system. Please be aware that clock changes will force a recheckout of all existing VEM licenses. During this recheckout procedure, licensed VEMs which are offline will lose their licenses." }
			id => "msgParserId137"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId138
	# line in RSA:  Failure in syncing messages to standby for vdc <fld3> causing standby to reset.
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "Failure in syncing messages to standby for vdc %{fld3} causing standby to reset." }
			id => "msgParserId138"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "snmpd" {
		# MESSAGE snmpd
		# line in RSA:  snmp_pss_snapshot : Copying local engine DB PSS file to url
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "snmp_pss_snapshot : Copying local engine DB PSS file to url" }
				id => "message-snmpd"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "snmpd"
					"[rsa][message][id1]" => "snmpd"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE snmpd:01
		# line in RSA:  SNMPD_SYSLOG_CONFIG_I: Configuration update from <fld43>_<saddr> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPD_SYSLOG_CONFIG_I: Configuration update from %{fld43}_%{saddr} %{info}" }
				id => "message-snmpd:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "snmpd:01"
					"[rsa][message][id1]" => "snmpd:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA:  Configuration copy aborted by the user.
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "Configuration copy aborted by the user." }
			id => "msgParserId141"
			add_field => {
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId72
	# line in RSA:  <fld43> Interface <interface> is down (<result>) 
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "%{fld43} Interface %{interface} is down (%{result})" }
			id => "msgParserId72"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId142
	# line in RSA:  message repeated <dclass_counter1> time 
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "message repeated %{dclass_counter1} time" }
			id => "msgParserId142"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "last message repeated number of times."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId143
	# line in RSA:  Service <service> (PID <parent_pid>) hasn't caught signal <fld43> (<result>).
	else if [logstash][msgparser][id] == "msgParserId143" {
		dissect {
			mapping => { "message" => "Service %{service} (PID %{parent_pid}) hasn't caught signal %{fld43} (%{result})." }
			id => "msgParserId143"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId144
	# line in RSA:  Service <service> lost on WCCP Client <saddr>
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "Service %{service} lost on WCCP Client %{saddr}" }
			id => "msgParserId144"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Service lost on WCCP Client"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId145
	# line in RSA:  Interface <interface> is allowed to come up even with SFP checksum error
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "Interface %{interface} is allowed to come up even with SFP checksum error" }
			id => "msgParserId145"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId146
	# line in RSA:  Power supply <fld43> failed or { shut down | shutdown } (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId146" {
		grok {
			match => { "message" => "^[\s]*Power[\s]+supply[\s]+(?<fld43>[^\s]*)[\s]+failed[\s]+or[\s]+([\s]*shut[\s]+down[\s]+|[\s]*shutdown[\s]+)[\s]+\(Serial[\s]+number[\s]+(?<serial_number>[^\)]*)\)$" }
			id => "msgParserId146"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId147
	# line in RSA:  Native VLAN mismatch discovered on <interface>, with <fld23>
	else if [logstash][msgparser][id] == "msgParserId147" {
		dissect {
			mapping => { "message" => "Native VLAN mismatch discovered on %{interface}, with %{fld23}" }
			id => "msgParserId147"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId148
	# line in RSA:  Device <fld22> discovered of type <fld23> with port <fld24> on incoming port <interface> with ip addr <fld25> and mgmt ip <hostip>
	else if [logstash][msgparser][id] == "msgParserId148" {
		dissect {
			mapping => { "message" => "Device %{fld22} discovered of type %{fld23} with port %{fld24} on incoming port %{interface} with ip addr %{fld25} and mgmt ip %{hostip}" }
			id => "msgParserId148"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId149
	# line in RSA:  CDP Neighbor <fld22> on port <interface> has been removed
	else if [logstash][msgparser][id] == "msgParserId149" {
		dissect {
			mapping => { "message" => "CDP Neighbor %{fld22} on port %{interface} has been removed" }
			id => "msgParserId149"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId150
	# line in RSA:  Interface <interface>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId150" {
		dissect {
			mapping => { "message" => "Interface %{interface},%{event_description}" }
			id => "msgParserId150"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId151
	# line in RSA:  Interface <interface> is down (Parent interface down)
	else if [logstash][msgparser][id] == "msgParserId151" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down (Parent interface down)" }
			id => "msgParserId151"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId152
	# line in RSA:  individual port <interface> is down
	else if [logstash][msgparser][id] == "msgParserId152" {
		dissect {
			mapping => { "message" => "individual port %{interface} is down" }
			id => "msgParserId152"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId153
	# line in RSA:  <fld22>: <interface> is suspended
	else if [logstash][msgparser][id] == "msgParserId153" {
		dissect {
			mapping => { "message" => "%{fld22}: %{interface} is suspended" }
			id => "msgParserId153"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId154
	# line in RSA:  Uplink-ID <fld22> of Fex <fld23> that is connected with <interface> changed its status from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId154" {
		dissect {
			mapping => { "message" => "Uplink-ID %{fld22} of Fex %{fld23} that is connected with %{interface} changed its status from %{change_old} to %{change_new}" }
			id => "msgParserId154"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"change_attribute" => "status"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId155
	# line in RSA:  Interface <interface>, added to VLAN<vlan> with role <fld22>, state <disposition>, <info>
	else if [logstash][msgparser][id] == "msgParserId155" {
		dissect {
			mapping => { "message" => "Interface %{interface}, added to VLAN%{vlan} with role %{fld22}, state %{disposition}, %{info}" }
			id => "msgParserId155"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId156
	# line in RSA:  Interface <interface>, removed from VLAN<vlan>
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "Interface %{interface}, removed from VLAN%{vlan}" }
			id => "msgParserId156"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId157
	# line in RSA:  Port <interface> instance VLAN<vlan> role changed to <fld22>
	else if [logstash][msgparser][id] == "msgParserId157" {
		dissect {
			mapping => { "message" => "Port %{interface} instance VLAN%{vlan} role changed to %{fld22}" }
			id => "msgParserId157"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId158
	# line in RSA:  Port <interface> instance VLAN<vlan> moving from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId158" {
		dissect {
			mapping => { "message" => "Port %{interface} instance VLAN%{vlan} moving from %{change_old} to %{change_new}" }
			id => "msgParserId158"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"change_attribute" => "Port state"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "TACACS_ACCOUNTING_MESSAGE" {
		# MESSAGE TACACS_ACCOUNTING_MESSAGE
		# line in RSA:  update: <saddr>@<terminal>: <username>: <event_description>; feature <protocol> (<result>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update: %{saddr}@%{terminal}: %{username}: %{event_description}; feature %{protocol} (%{result}) %{info}" }
				id => "message-TACACS_ACCOUNTING_MESSAGE"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE"
					"[event][categoryid]" => "1603030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:01
		# line in RSA:  update:<saddr>@<terminal>:<username>: enabled telnet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "update:%{saddr}@%{terminal}:%{username}: enabled telnet" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:01"
				add_field => {
				"ec_activity" => "Enable"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"action" => "update"
				"event_description" => "enabled telnet"
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:01"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:01"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:04
		# line in RSA: <action>: <saddr>@<terminal>: <username>: configure terminal ; ntp source-interface <sinterface> (<result>)<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: %{saddr}@%{terminal}: %{username}: configure terminal ; ntp source-interface %{sinterface} (%{result})%{info}" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:04"
				add_field => {
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:04"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:05
		# line in RSA: <action>: <saddr>@<terminal>: <username>: {show ntp statistics peer ipaddr <hostip>|show logging last <fld3>} (<result>)<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<action>[^:]*):[\s]+(?<saddr>[^@]*)@(?<terminal>[^:]*):[\s]+(?<username>[^:]*):[\s]+(show[\s]+ntp[\s]+statistics[\s]+peer[\s]+ipaddr[\s]+(?<hostip>[^\s]*)|show[\s]+logging[\s]+last[\s]+(?<fld3>[^\s]*))[\s]+\((?<result>[^\)]*)\)(?<info>.*)$" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:05"
				add_field => {
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:05"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:06
		# line in RSA: <action>: <saddr>@<terminal>: <username>: clock set <event_time_string> (<result>)<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: %{saddr}@%{terminal}: %{username}: clock set %{event_time_string} (%{result})%{info}" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:06"
				add_field => {
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:06"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:08
		# line in RSA: <action>: <saddr>@<terminal>: <username>: Performing configuration copy. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: %{saddr}@%{terminal}: %{username}: Performing configuration copy. %{info}" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:08"
				add_field => {
				"event_description" => "Performing configuration copy"
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:08"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:08"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:09
		# line in RSA: <action>: {<saddr>@<terminal>:|<fld1>} <username>: shell terminated because of session timeout {(<result>)<info>|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<action>[^:]*):[\s]+((?<saddr>[^@]*)@(?<terminal>[^:]*):|(?<fld1>[^\s]*))[\s]+(?<username>[^:]*):[\s]+shell[\s]+terminated[\s]+because[\s]+of[\s]+session[\s]+timeout[\s]+(\((?<result>[^\)]*)\)(?<info>.*)|(?<info>.*))$" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:09"
				add_field => {
				"event_description" => "shell terminated because of session timeout"
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:09"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:09"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE TACACS_ACCOUNTING_MESSAGE:07
		# line in RSA: <action>: {<saddr>@<terminal>:|<fld1>} <username>: <event_description> {(<result>)<info>|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<action>[^:]*):[\s]+((?<saddr>[^@]*)@(?<terminal>[^:]*):|(?<fld1>[^\s]*))[\s]+(?<username>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+(\((?<result>[^\)]*)\)(?<info>.*)|(?<info>.*))$" }
				id => "message-TACACS_ACCOUNTING_MESSAGE:07"
				add_field => {
					"[event][id]" => "TACACS_ACCOUNTING_MESSAGE:07"
					"[rsa][message][id1]" => "TACACS_ACCOUNTING_MESSAGE:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId161
	# line in RSA: Interface <interface>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "Interface %{interface}, %{event_description}" }
			id => "msgParserId161"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId162
	# line in RSA: <fld43> Interface <interface> is down<info>
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "%{fld43} Interface %{interface} is down%{info}" }
			id => "msgParserId162"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId163
	# line in RSA:  In domain <domain>, VPC <obj_name> configuration is not consistent (<result>)
	else if [logstash][msgparser][id] == "msgParserId163" {
		dissect {
			mapping => { "message" => "In domain %{domain}, VPC %{obj_name} configuration is not consistent (%{result})" }
			id => "msgParserId163"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "configuration is not consistent in domain"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId164
	# line in RSA:  In domain <domain>, vPC <obj_name> configuration is consistent
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "In domain %{domain}, vPC %{obj_name} configuration is consistent" }
			id => "msgParserId164"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "configuration is consistent in domain"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "IF_XCVR_WARNING" {
		# MESSAGE IF_XCVR_WARNING
		# line in RSA:  Interface <interface>, { Low | High } Temperature Warning cleared
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,]*),[\s]+([\s]*Low[\s]+|[\s]*High[\s]+)[\s]+Temperature[\s]+Warning[\s]+cleared$" }
				id => "message-IF_XCVR_WARNING"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_XCVR_WARNING"
					"[rsa][message][id1]" => "IF_XCVR_WARNING"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_XCVR_WARNING:01
		# line in RSA:  Interface <interface>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, %{event_description}" }
				id => "message-IF_XCVR_WARNING:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_XCVR_WARNING:01"
					"[rsa][message][id1]" => "IF_XCVR_WARNING:01"
					"[event][categoryid]" => "1603100000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_XCVR_ALARM" {
		# MESSAGE IF_XCVR_ALARM
		# line in RSA:  Interface <interface>, { Low | High } Temperature Alarm cleared
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,]*),[\s]+([\s]*Low[\s]+|[\s]*High[\s]+)[\s]+Temperature[\s]+Alarm[\s]+cleared$" }
				id => "message-IF_XCVR_ALARM"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_XCVR_ALARM"
					"[rsa][message][id1]" => "IF_XCVR_ALARM"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_XCVR_ALARM:01
		# line in RSA:  Interface <interface>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, %{event_description}" }
				id => "message-IF_XCVR_ALARM:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_XCVR_ALARM:01"
					"[rsa][message][id1]" => "IF_XCVR_ALARM:01"
					"[event][categoryid]" => "1603100000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_SFP_ALARM" {
		# MESSAGE IF_SFP_ALARM
		# line in RSA:  Interface <interface>, { Low | High } Rx Power Alarm cleared
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,]*),[\s]+([\s]*Low[\s]+|[\s]*High[\s]+)[\s]+Rx[\s]+Power[\s]+Alarm[\s]+cleared$" }
				id => "message-IF_SFP_ALARM"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_SFP_ALARM"
					"[rsa][message][id1]" => "IF_SFP_ALARM"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE IF_SFP_ALARM:01
		# line in RSA:  Interface <interface>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, %{event_description}" }
				id => "message-IF_SFP_ALARM:01"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "IF_SFP_ALARM:01"
					"[rsa][message][id1]" => "IF_SFP_ALARM:01"
					"[event][categoryid]" => "1603100000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SOHMS_DIAG_ERROR" {
		# MESSAGE SOHMS_DIAG_ERROR
		# line in RSA:  { <device> <action>: System | <device> System } minor alarm on fans in fan tray <dclass_counter1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<device>[^\s]*)[\s]+(?<action>[^:]*):[\s]+System[\s]+|[\s]*(?<device>[^\s]*)[\s]+System[\s]+)[\s]+minor[\s]+alarm[\s]+on[\s]+fans[\s]+in[\s]+fan[\s]+tray[\s]+(?<dclass_counter1>.*)$" }
				id => "message-SOHMS_DIAG_ERROR"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "System minor alarm on fans in fan tray"
					"[event][id]" => "SOHMS_DIAG_ERROR"
					"[rsa][message][id1]" => "SOHMS_DIAG_ERROR"
					"[event][categoryid]" => "1603100000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SOHMS_DIAG_ERROR:01
		# line in RSA:  <device> System minor alarm on power supply <fld42>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{device} System minor alarm on power supply %{fld42}: %{result}" }
				id => "message-SOHMS_DIAG_ERROR:01"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "FEX-System minor alarm on power supply."
					"[event][id]" => "SOHMS_DIAG_ERROR:01"
					"[rsa][message][id1]" => "SOHMS_DIAG_ERROR:01"
					"[event][categoryid]" => "1603100000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE SOHMS_DIAG_ERROR:02
		# line in RSA:  <device>: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{device}: %{event_description}" }
				id => "message-SOHMS_DIAG_ERROR:02"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
					"[event][id]" => "SOHMS_DIAG_ERROR:02"
					"[rsa][message][id1]" => "SOHMS_DIAG_ERROR:02"
					"[event][categoryid]" => "1603100000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId172
	# line in RSA:  Failed to program the mac table on <device> for group: <fld1>, (<fld2> (<fld3>), <fld4>, <hostip>).  Error: <result>. <info>
	else if [logstash][msgparser][id] == "msgParserId172" {
		dissect {
			mapping => { "message" => "Failed to program the mac table on %{device} for group: %{fld1}, (%{fld2} (%{fld3}), %{fld4}, %{hostip}).  Error: %{result}. %{info}" }
			id => "msgParserId172"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Failed to program the mac table"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId173
	# line in RSA:  deleting expired user account:<username>
	else if [logstash][msgparser][id] == "msgParserId173" {
		dissect {
			mapping => { "message" => "deleting expired user account:%{username}" }
			id => "msgParserId173"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "deleting expired user account"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId174
	# line in RSA:  Interface <interface> is admin up
	else if [logstash][msgparser][id] == "msgParserId174" {
		dissect {
			mapping => { "message" => "Interface %{interface} is admin up" }
			id => "msgParserId174"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is admin up."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId175
	# line in RSA:  vPC <obj_name> is configured
	else if [logstash][msgparser][id] == "msgParserId175" {
		dissect {
			mapping => { "message" => "vPC %{obj_name} is configured" }
			id => "msgParserId175"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "vPC is configured"
				"obj_type" => "vPC"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId176
	# line in RSA:  System Manager has received notification of <info>
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "System Manager has received notification of %{info}" }
			id => "msgParserId176"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "System Manager has received notification of local module becoming online."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId177
	# line in RSA:  System booted from Primary BIOS Flash
	else if [logstash][msgparser][id] == "msgParserId177" {
		dissect {
			mapping => { "message" => "System booted from Primary BIOS Flash" }
			id => "msgParserId177"
			add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Start"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "System booted from Primary BIOS Flash"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId178
	# line in RSA:  Peer <obj_name> is down ()
	else if [logstash][msgparser][id] == "msgParserId178" {
		dissect {
			mapping => { "message" => "Peer %{obj_name} is down ()" }
			id => "msgParserId178"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Peer vPC is down"
				"obj_type" => "vPC"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId179
	# line in RSA:  In domain <domain>, {VPC|vPC} {peer-keepalive|peer keep-alive} received on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId179" {
		grok {
			match => { "message" => "^[\s]*In[\s]+domain[\s]+(?<domain>[^,]*),[\s]+(VPC|vPC)[\s]+(peer\-keepalive|peer[\s]+keep\-alive)[\s]+received[\s]+on[\s]+interface[\s]+(?<interface>.*)$" }
			id => "msgParserId179"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "In domain, VPC peer-keepalive received on interface"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId180
	# line in RSA:  In domain <domain>, vPC peer keep-alive receive is successful
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "In domain %{domain}, vPC peer keep-alive receive is successful" }
			id => "msgParserId180"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "In domain, vPC peer keep-alive receive is successful"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId181
	# line in RSA:  In domain <domain>, VPC peer keep-alive receive has failed
	else if [logstash][msgparser][id] == "msgParserId181" {
		dissect {
			mapping => { "message" => "In domain %{domain}, VPC peer keep-alive receive has failed" }
			id => "msgParserId181"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "In domain, VPC peer keep-alive receive has failed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId182
	# line in RSA:  In domain <domain>, VPC peer-keepalive sent on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId182" {
		dissect {
			mapping => { "message" => "In domain %{domain}, VPC peer-keepalive sent on interface %{interface}" }
			id => "msgParserId182"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "In domain, VPC peer-keepalive sent on interface"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId183
	# line in RSA:  In domain <domain>, vPC peer keep-alive send is successful
	else if [logstash][msgparser][id] == "msgParserId183" {
		dissect {
			mapping => { "message" => "In domain %{domain}, vPC peer keep-alive send is successful" }
			id => "msgParserId183"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "In domain, vPC peer keep-alive send is successful"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId184
	# line in RSA:  In domain <domain>, peer keep-alive status changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId184" {
		dissect {
			mapping => { "message" => "In domain %{domain}, peer keep-alive status changed to %{change_new}" }
			id => "msgParserId184"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Peer keep-alive status changed."
				"change_attribute" => "peer keep-alive status"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId185
	# line in RSA:  Ejectors' status in slot <fld47> has changed, <info>
	else if [logstash][msgparser][id] == "msgParserId185" {
		dissect {
			mapping => { "message" => "Ejectors' status in slot %{fld47} has changed, %{info}" }
			id => "msgParserId185"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Ejectors' status in slot has changed."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId186
	# line in RSA:  Xbar <fld41> detected (Serial number <fld42>)
	else if [logstash][msgparser][id] == "msgParserId186" {
		dissect {
			mapping => { "message" => "Xbar %{fld41} detected (Serial number %{fld42})" }
			id => "msgParserId186"
			add_field => {
				"ec_activity" => "Detect"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Xbar detected"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId187
	# line in RSA:  Xbar <fld41> powered up (Serial number <fld42>)
	else if [logstash][msgparser][id] == "msgParserId187" {
		dissect {
			mapping => { "message" => "Xbar %{fld41} powered up (Serial number %{fld42})" }
			id => "msgParserId187"
			add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Start"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Xbar powered up"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId188
	# line in RSA:  Xbar <fld41> powered down (Serial number <fld42>)
	else if [logstash][msgparser][id] == "msgParserId188" {
		dissect {
			mapping => { "message" => "Xbar %{fld41} powered down (Serial number %{fld42})" }
			id => "msgParserId188"
			add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Stop"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Xbar powered down"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId189
	# line in RSA:  Xbar <fld41> is online (serial: <fld42>)
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "Xbar %{fld41} is online (serial: %{fld42})" }
			id => "msgParserId189"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Xbar is online"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId190
	# line in RSA:  Peer vPC switch ISSU start, locking configuration
	else if [logstash][msgparser][id] == "msgParserId190" {
		dissect {
			mapping => { "message" => "Peer vPC switch ISSU start, locking configuration" }
			id => "msgParserId190"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Peer vPC switch ISSU start, locking configuration"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId191
	# line in RSA:  Peer vPC switch ISSU end, unlocking configuration
	else if [logstash][msgparser][id] == "msgParserId191" {
		dissect {
			mapping => { "message" => "Peer vPC switch ISSU end, unlocking configuration" }
			id => "msgParserId191"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Peer vPC switch ISSU end, unlocking configuration"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId192
	# line in RSA:  new_role=<obj_name> interface=<interface> mst=<fld42>
	else if [logstash][msgparser][id] == "msgParserId192" {
		dissect {
			mapping => { "message" => "new_role=%{obj_name} interface=%{interface} mst=%{fld42}" }
			id => "msgParserId192"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"obj_type" => "new_role"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId193
	# line in RSA:  new_state=<obj_name> interface=<interface> mst=<fld42>
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "new_state=%{obj_name} interface=%{interface} mst=%{fld42}" }
			id => "msgParserId193"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"obj_type" => "new_state"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId194
	# line in RSA:  Interface <interface> removed from mst=<fld42>
	else if [logstash][msgparser][id] == "msgParserId194" {
		dissect {
			mapping => { "message" => "Interface %{interface} removed from mst=%{fld42}" }
			id => "msgParserId194"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface removed from MST."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId195
	# line in RSA:  Interface <interface> added to mst=<fld42> with <info>
	else if [logstash][msgparser][id] == "msgParserId195" {
		dissect {
			mapping => { "message" => "Interface %{interface} added to mst=%{fld42} with %{info}" }
			id => "msgParserId195"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface added to MST."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId196
	# line in RSA:  Port <portname> removed as MST Boundary port
	else if [logstash][msgparser][id] == "msgParserId196" {
		dissect {
			mapping => { "message" => "Port %{portname} removed as MST Boundary port" }
			id => "msgParserId196"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Port removed as MST Boundary port"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId197
	# line in RSA:  Non-transactional PIXM Error. Error Type: <result>.<info> 
	else if [logstash][msgparser][id] == "msgParserId197" {
		dissect {
			mapping => { "message" => "Non-transactional PIXM Error. Error Type: %{result}.%{info}" }
			id => "msgParserId197"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Non-transactional PIXM Error"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId198
	# line in RSA:  <interface> is <obj_name> in vdc <fld43> 
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "%{interface} is %{obj_name} in vdc %{fld43}" }
			id => "msgParserId198"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"obj_type" => " Interface state"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId199
	# line in RSA:   vdc <fld43> state changed to <obj_name> 
	else if [logstash][msgparser][id] == "msgParserId199" {
		dissect {
			mapping => { "message" => "vdc %{fld43} state changed to %{obj_name}" }
			id => "msgParserId199"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "VDC state changed."
				"obj_type" => " VDC state"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId200
	# line in RSA:  Switchover completed.
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "Switchover completed." }
			id => "msgParserId200"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Switchover completed."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId201
	# line in RSA:  <process>: Module type changed to <obj_name>
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "%{process}: Module type changed to %{obj_name}" }
			id => "msgParserId201"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Switchover completed."
				"obj_type" => " New Module type"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId202
	# line in RSA:  Unable to sync HA sequence number <fld44> for service "<service>" (PID <process_id>): <result>.
	else if [logstash][msgparser][id] == "msgParserId202" {
		dissect {
			mapping => { "message" => "Unable to sync HA sequence number %{fld44} for service \"%{service}\" (PID %{process_id}): %{result}." }
			id => "msgParserId202"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Unable to sync HA sequence number for service"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId203
	# line in RSA:  Failure in sending message to standby causing standby to reset.
	else if [logstash][msgparser][id] == "msgParserId203" {
		dissect {
			mapping => { "message" => "Failure in sending message to standby causing standby to reset." }
			id => "msgParserId203"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Failure in sending message to standby causing standby to reset."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId204
	# line in RSA:  Failed to lock the local module to avoid reset (error-id <resultcode>).
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "Failed to lock the local module to avoid reset (error-id %{resultcode})." }
			id => "msgParserId204"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Failed to lock the local module to avoid reset"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId205
	# line in RSA:  Failed to send Mac New Learns/Mac moves due to mts send failure errno <resultcode>
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "Failed to send Mac New Learns/Mac moves due to mts send failure errno %{resultcode}" }
			id => "msgParserId205"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Failed to send Mac New Learns/Mac moves due to mts send failure."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId206
	# line in RSA:  Server with Chassis ID <id> Port ID <fld45> management address <fld46> discovered on local port <portname> in vlan <vlan> <info>
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "Server with Chassis ID %{id} Port ID %{fld45} management address %{fld46} discovered on local port %{portname} in vlan %{vlan} %{info}" }
			id => "msgParserId206"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Server discovered on local in vlan 0 with enabled capability Station"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId207
	# line in RSA:  Server with Chassis ID <id> Port ID <fld45> on local port <portname> has been removed
	else if [logstash][msgparser][id] == "msgParserId207" {
		dissect {
			mapping => { "message" => "Server with Chassis ID %{id} Port ID %{fld45} on local port %{portname} has been removed" }
			id => "msgParserId207"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Server on local port has been removed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId208
	# line in RSA:  Interface <interface> is down <info>
	else if [logstash][msgparser][id] == "msgParserId208" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down %{info}" }
			id => "msgParserId208"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is down"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId209
	# line in RSA:  port <portname> is operationally individual
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "port %{portname} is operationally individual" }
			id => "msgParserId209"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "port is operationally individual"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId210
	# line in RSA:  Interface <interface> is down <info>
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down %{info}" }
			id => "msgParserId210"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is down"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId211
	# line in RSA:  Interface <interface> is being recovered from error disabled state <info>
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "Interface %{interface} is being recovered from error disabled state %{info}" }
			id => "msgParserId211"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Interface is being recovered from error disabled state"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId212
	# line in RSA:  Non-Cisco transceiver on interface <interface> is detected
	else if [logstash][msgparser][id] == "msgParserId212" {
		dissect {
			mapping => { "message" => "Non-Cisco transceiver on interface %{interface} is detected" }
			id => "msgParserId212"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Non-Cisco transceiver on interface is detected"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId213
	# line in RSA:  Active supervisor in slot <fld47> is running with less memory than standby supervisor in slot <fld48>.
	else if [logstash][msgparser][id] == "msgParserId213" {
		dissect {
			mapping => { "message" => "Active supervisor in slot %{fld47} is running with less memory than standby supervisor in slot %{fld48}." }
			id => "msgParserId213"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Active supervisor is running with less memory than standby supervisor."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId214
	# line in RSA:  Configuration update started (PID <process_id>).
	else if [logstash][msgparser][id] == "msgParserId214" {
		dissect {
			mapping => { "message" => "Configuration update started (PID %{process_id})." }
			id => "msgParserId214"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Configuration update started."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId215
	# line in RSA:  Supervisor in slot <fld47> is running with less memory than active supervisor in slot <fld48>
	else if [logstash][msgparser][id] == "msgParserId215" {
		dissect {
			mapping => { "message" => "Supervisor in slot %{fld47} is running with less memory than active supervisor in slot %{fld48}" }
			id => "msgParserId215"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Supervisor is running with less memory than active supervisor."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId216
	# line in RSA:  Starting linecard upgrade
	else if [logstash][msgparser][id] == "msgParserId216" {
		dissect {
			mapping => { "message" => "Starting linecard upgrade" }
			id => "msgParserId216"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Starting linecard upgrade"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId217
	# line in RSA:  Rebooting linecard as a part of upgrade
	else if [logstash][msgparser][id] == "msgParserId217" {
		dissect {
			mapping => { "message" => "Rebooting linecard as a part of upgrade" }
			id => "msgParserId217"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Rebooting linecard as a part of upgrade"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId218
	# line in RSA:  Runtime database controller started (PID <process_id>).
	else if [logstash][msgparser][id] == "msgParserId218" {
		dissect {
			mapping => { "message" => "Runtime database controller started (PID %{process_id})." }
			id => "msgParserId218"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Runtime database controller started."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId219
	# line in RSA:  Runtime database successfully restored.
	else if [logstash][msgparser][id] == "msgParserId219" {
		dissect {
			mapping => { "message" => "Runtime database successfully restored." }
			id => "msgParserId219"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Runtime database successfully restored."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId220
	# line in RSA:  Upgrade of module <fld49> started
	else if [logstash][msgparser][id] == "msgParserId220" {
		dissect {
			mapping => { "message" => "Upgrade of module %{fld49} started" }
			id => "msgParserId220"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Upgrade of module started"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId221
	# line in RSA:  Upgrade of module <fld49> ended
	else if [logstash][msgparser][id] == "msgParserId221" {
		dissect {
			mapping => { "message" => "Upgrade of module %{fld49} ended" }
			id => "msgParserId221"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Upgrade of module ended"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId222
	# line in RSA:  Recieved insert for <fld50>
	else if [logstash][msgparser][id] == "msgParserId222" {
		dissect {
			mapping => { "message" => "Recieved insert for %{fld50}" }
			id => "msgParserId222"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Recieved insert for lc mod"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId223
	# line in RSA:  peer vPC <obj_name> is configured
	else if [logstash][msgparser][id] == "msgParserId223" {
		dissect {
			mapping => { "message" => "peer vPC %{obj_name} is configured" }
			id => "msgParserId223"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "peer vPC is configured"
				"obj_type" => "vPC"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId224
	# line in RSA:  <info>: Potential Interop issue on  [<interface>]: <result>
	else if [logstash][msgparser][id] == "msgParserId224" {
		dissect {
			mapping => { "message" => "%{info}: Potential Interop issue on  [%{interface}]: %{result}" }
			id => "msgParserId224"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Potential Interop issue on interface."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId225
	# line in RSA:  <device> Off-line (Serial Number <fld42>)
	else if [logstash][msgparser][id] == "msgParserId225" {
		dissect {
			mapping => { "message" => "%{device} Off-line (Serial Number %{fld42})" }
			id => "msgParserId225"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "FEX OFFLINE"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId226
	# line in RSA:  <device> On-line
	else if [logstash][msgparser][id] == "msgParserId226" {
		dissect {
			mapping => { "message" => "%{device} On-line" }
			id => "msgParserId226"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "FEX ONLINE"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "FEX_STATUS" {
		# MESSAGE FEX_STATUS_online
		# line in RSA:  <device> is online
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{device} is online" }
				id => "message-FEX_STATUS_online"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Fex is online"
					"[event][id]" => "FEX_STATUS_online"
					"[rsa][message][id1]" => "FEX_STATUS_online"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE FEX_STATUS_offline
		# line in RSA:  <device> is offline
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{device} is offline" }
				id => "message-FEX_STATUS_offline"
				add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Fex is offline"
					"[event][id]" => "FEX_STATUS_offline"
					"[rsa][message][id1]" => "FEX_STATUS_offline"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId229
	# line in RSA:  Power supply <fld41> present but all AC/DC inputs are not connected, power redundancy might be affected 
	else if [logstash][msgparser][id] == "msgParserId229" {
		dissect {
			mapping => { "message" => "Power supply %{fld41} present but all AC/DC inputs are not connected, power redundancy might be affected" }
			id => "msgParserId229"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Power supply present but all AC/DC inputs are not connected, power redundancy might be affected"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId230
	# line in RSA:  Power redundancy operational mode changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId230" {
		dissect {
			mapping => { "message" => "Power redundancy operational mode changed to %{change_new}" }
			id => "msgParserId230"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Power redundancy operational mode changed."
				"change_attribute" => "operational mode"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId231
	# line in RSA:  All ejectors open, Module <fld41> will not be powered up (Serial number <fld42>)
	else if [logstash][msgparser][id] == "msgParserId231" {
		dissect {
			mapping => { "message" => "All ejectors open, Module %{fld41} will not be powered up (Serial number %{fld42})" }
			id => "msgParserId231"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "All ejectors open, Module will not be powered up."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId232
	# line in RSA:  <device> pinning information is changed
	else if [logstash][msgparser][id] == "msgParserId232" {
		dissect {
			mapping => { "message" => "%{device} pinning information is changed" }
			id => "msgParserId232"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Fex pinning information is changed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId233
	# line in RSA:  <device> Module <fld41>: Cold boot
	else if [logstash][msgparser][id] == "msgParserId233" {
		dissect {
			mapping => { "message" => "%{device} Module %{fld41}: Cold boot" }
			id => "msgParserId233"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "FEX-100 Module -Cold boot"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId234
	# line in RSA:  <fld51> [<fld52>]  Client <fld43> register more than once with same pid<info>
	else if [logstash][msgparser][id] == "msgParserId234" {
		dissect {
			mapping => { "message" => "%{fld51} [%{fld52}]  Client %{fld43} register more than once with same pid%{info}" }
			id => "msgParserId234"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Client register more than once with same pid"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId235
	# line in RSA:  <fld51> [<fld52>]  Unknown mtype: <info>
	else if [logstash][msgparser][id] == "msgParserId235" {
		dissect {
			mapping => { "message" => "%{fld51} [%{fld52}]  Unknown mtype: %{info}" }
			id => "msgParserId235"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Unknown mtype"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId236
	# line in RSA:  <fld51> <event_description>
	else if [logstash][msgparser][id] == "msgParserId236" {
		dissect {
			mapping => { "message" => "%{fld51} %{event_description}" }
			id => "msgParserId236"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId237
	# line in RSA:  <fld51> [<fld52>]  <event_description>
	else if [logstash][msgparser][id] == "msgParserId237" {
		dissect {
			mapping => { "message" => "%{fld51} [%{fld52}]  %{event_description}" }
			id => "msgParserId237"
			add_field => {
				"ec_subject" => "Process"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId238
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId238" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId238"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId239
	# line in RSA:  <fld51> [<fld52>]  <event_description>
	else if [logstash][msgparser][id] == "msgParserId239" {
		dissect {
			mapping => { "message" => "%{fld51} [%{fld52}]  %{event_description}" }
			id => "msgParserId239"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId240
	# line in RSA:  vdc <fld51> has come online
	else if [logstash][msgparser][id] == "msgParserId240" {
		dissect {
			mapping => { "message" => "vdc %{fld51} has come online" }
			id => "msgParserId240"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "vdc has come online"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId241
	# line in RSA:  LACP port <portname> of port-channel <interface> not receiving any LACP BPDUs  <result>
	else if [logstash][msgparser][id] == "msgParserId241" {
		dissect {
			mapping => { "message" => "LACP port %{portname} of port-channel %{interface} not receiving any LACP BPDUs  %{result}" }
			id => "msgParserId241"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "LACP port of port-channel not receiving any LACP BPDUs."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId242
	# line in RSA:  <process>: <info>
	else if [logstash][msgparser][id] == "msgParserId242" {
		dissect {
			mapping => { "message" => "%{process}: %{info}" }
			id => "msgParserId242"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId243
	# line in RSA:  <fld52> [VSAN <fld51>, Interface <interface>: <fld53> Nx Port <portname> logged OUT.
	else if [logstash][msgparser][id] == "msgParserId243" {
		dissect {
			mapping => { "message" => "%{fld52} [VSAN %{fld51}, Interface %{interface}: %{fld53} Nx Port %{portname} logged OUT." }
			id => "msgParserId243"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Logoff"
				"ec_theme" => "Communication"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId244
	# line in RSA:  <fld52> [VSAN <fld51>, Interface <interface>: <fld53> Nx Port <portname> with FCID <fld54> logged IN.
	else if [logstash][msgparser][id] == "msgParserId244" {
		dissect {
			mapping => { "message" => "%{fld52} [VSAN %{fld51}, Interface %{interface}: %{fld53} Nx Port %{portname} with FCID %{fld54} logged IN." }
			id => "msgParserId244"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Logon"
				"ec_theme" => "Communication"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId74
	# line in RSA:  <fld52> Interface <interface> is down (<result>)
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "%{fld52} Interface %{interface} is down (%{result})" }
			id => "msgParserId74"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId245
	# line in RSA:  <fld52> Zone merge failure, isolating interface <interface> reason: <result>:[<resultcode>]
	else if [logstash][msgparser][id] == "msgParserId245" {
		dissect {
			mapping => { "message" => "%{fld52} Zone merge failure, isolating interface %{interface} reason: %{result}:[%{resultcode}]" }
			id => "msgParserId245"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId246
	# line in RSA:  Host <hostname> in vlan <vlan> is flapping between port <change_old> and port <change_new> 
	else if [logstash][msgparser][id] == "msgParserId246" {
		dissect {
			mapping => { "message" => "Host %{hostname} in vlan %{vlan} is flapping between port %{change_old} and port %{change_new}" }
			id => "msgParserId246"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"change_attribute" => "Port"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId247
	# line in RSA:  num_tlv greater than 1, <result>
	else if [logstash][msgparser][id] == "msgParserId247" {
		dissect {
			mapping => { "message" => "num_tlv greater than 1, %{result}" }
			id => "msgParserId247"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId248
	# line in RSA:  <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId248" {
		dissect {
			mapping => { "message" => "%{event_description}: %{info}" }
			id => "msgParserId248"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId249
	# line in RSA:  <agent> [<process_id>]  Received packet with invalid destination IP address (<daddr>) from <smacaddr> on <interface>
	else if [logstash][msgparser][id] == "msgParserId249" {
		dissect {
			mapping => { "message" => "%{agent} [%{process_id}]  Received packet with invalid destination IP address (%{daddr}) from %{smacaddr} on %{interface}" }
			id => "msgParserId249"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId250
	# line in RSA:  <process>: message repeated <dclass_counter1> times in last <duration>
	else if [logstash][msgparser][id] == "msgParserId250" {
		dissect {
			mapping => { "message" => "%{process}: message repeated %{dclass_counter1} times in last %{duration}" }
			id => "msgParserId250"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId251
	# line in RSA:  Duplex mismatch discovered on <interface>, with <fld55>
	else if [logstash][msgparser][id] == "msgParserId251" {
		dissect {
			mapping => { "message" => "Duplex mismatch discovered on %{interface}, with %{fld55}" }
			id => "msgParserId251"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId252
	# line in RSA:  Module <fld20>: Runtime diag detected major event: Fabric port failure <interface>
	else if [logstash][msgparser][id] == "msgParserId252" {
		dissect {
			mapping => { "message" => "Module %{fld20}: Runtime diag detected major event: Fabric port failure %{interface}" }
			id => "msgParserId252"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId253
	# line in RSA:  Re enabling dynamic learning on all interfaces
	else if [logstash][msgparser][id] == "msgParserId253" {
		dissect {
			mapping => { "message" => "Re enabling dynamic learning on all interfaces" }
			id => "msgParserId253"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId254
	# line in RSA: UDLD disabled interface <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId254" {
		dissect {
			mapping => { "message" => "UDLD disabled interface %{interface}, %{result}" }
			id => "msgParserId254"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ntpd" {
		# MESSAGE ntpd
		# line in RSA:  ntp:no servers reachable
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ntp:no servers reachable" }
				id => "message-ntpd"
				add_field => {
					"[event][id]" => "ntpd"
					"[rsa][message][id1]" => "ntpd"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE ntpd:01
		# line in RSA:  ntp:event EVNT_UNREACH <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ntp:event EVNT_UNREACH %{saddr}" }
				id => "message-ntpd:01"
				add_field => {
					"[event][id]" => "ntpd:01"
					"[rsa][message][id1]" => "ntpd:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE ntpd:02
		# line in RSA:  ntp:event EVNT_REACH <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ntp:event EVNT_REACH %{saddr}" }
				id => "message-ntpd:02"
				add_field => {
					"[event][id]" => "ntpd:02"
					"[rsa][message][id1]" => "ntpd:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE ntpd:03
		# line in RSA:  ntp:synchronized to <saddr>, stratum <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ntp:synchronized to %{saddr}, stratum %{fld9}" }
				id => "message-ntpd:03"
				add_field => {
					"[event][id]" => "ntpd:03"
					"[rsa][message][id1]" => "ntpd:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE ntpd:04
		# line in RSA:  ntp:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ntp:%{event_description}" }
				id => "message-ntpd:04"
				add_field => {
					"[event][id]" => "ntpd:04"
					"[rsa][message][id1]" => "ntpd:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId260
	# line in RSA:  Service <service> acquired on WCCP Client <saddr>
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "Service %{service} acquired on WCCP Client %{saddr}" }
			id => "msgParserId260"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Service acquired on WCCP Client"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId261
	# line in RSA:  Service <service> acquired on WCCP Router <saddr>
	else if [logstash][msgparser][id] == "msgParserId261" {
		dissect {
			mapping => { "message" => "Service %{service} acquired on WCCP Router %{saddr}" }
			id => "msgParserId261"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Service acquired on WCCP Router"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId262
	# line in RSA:  pam_aaa:Authentication failed from <shost> - <agent>
	else if [logstash][msgparser][id] == "msgParserId262" {
		dissect {
			mapping => { "message" => "pam_aaa:Authentication failed from %{shost} - %{agent}" }
			id => "msgParserId262"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Authentication failed"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId263
	# line in RSA: New user added with username <username> - <agent>
	else if [logstash][msgparser][id] == "msgParserId263" {
		dissect {
			mapping => { "message" => "New user added with username %{username} - %{agent}" }
			id => "msgParserId263"
			add_field => {
				"ec_theme" => "Authentication"
				"event_source" => "%{hfld19}"
				"event_description" => "New user added"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "%AUTHPRIV-6-SYSTEM_MSG" {
		# MESSAGE %AUTHPRIV-6-SYSTEM_MSG:01
		# line in RSA: <action>: <service> pid=<process_id> from=::ffff:<saddr> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action}: %{service} pid=%{process_id} from=::ffff:%{saddr} - %{agent}" }
				id => "message-%AUTHPRIV-6-SYSTEM_MSG:01"
				add_field => {
				"ec_theme" => "Authentication"
				"event_source" => "%{hfld19}"
					"[event][id]" => "%AUTHPRIV-6-SYSTEM_MSG:01"
					"[rsa][message][id1]" => "%AUTHPRIV-6-SYSTEM_MSG:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %AUTHPRIV-6-SYSTEM_MSG
		# line in RSA: pam_unix(<fld1>:session): session opened for user <username> by (uid=<uid>) - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pam_unix(%{fld1}:session): session opened for user %{username} by (uid=%{uid}) - %{agent}" }
				id => "message-%AUTHPRIV-6-SYSTEM_MSG"
				add_field => {
				"ec_theme" => "Authentication"
				"event_source" => "%{hfld19}"
				"event_description" => "session opened for user"
					"[event][id]" => "%AUTHPRIV-6-SYSTEM_MSG"
					"[rsa][message][id1]" => "%AUTHPRIV-6-SYSTEM_MSG"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId266
	# line in RSA: error: <result>
	else if [logstash][msgparser][id] == "msgParserId266" {
		dissect {
			mapping => { "message" => "error: %{result}" }
			id => "msgParserId266"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "%USER-6-SYSTEM_MSG" {
		# MESSAGE %USER-6-SYSTEM_MSG
		# line in RSA: Invalid user <username> from <saddr> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Invalid user %{username} from %{saddr} - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG"
				add_field => {
				"event_source" => "%{hfld19}"
				"event_description" => "Invalid user"
					"[event][id]" => "%USER-6-SYSTEM_MSG"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %USER-6-SYSTEM_MSG:01
		# line in RSA: input_userauth_request: invalid user <username> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "input_userauth_request: invalid user %{username} - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG:01"
				add_field => {
				"event_source" => "%{hfld19}"
				"event_description" => "Invalid user"
					"[event][id]" => "%USER-6-SYSTEM_MSG:01"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %USER-6-SYSTEM_MSG:02
		# line in RSA: Failed none for invalid user <username> from <saddr> port <sport> <protocol> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed none for invalid user %{username} from %{saddr} port %{sport} %{protocol} - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG:02"
				add_field => {
				"event_source" => "%{hfld19}"
				"event_description" => "Failed none for invalid user"
					"[event][id]" => "%USER-6-SYSTEM_MSG:02"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %USER-6-SYSTEM_MSG:03
		# line in RSA: Accepted password for <username> from <saddr> port <sport> <protocol> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Accepted password for %{username} from %{saddr} port %{sport} %{protocol} - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG:03"
				add_field => {
				"event_source" => "%{hfld19}"
				"event_description" => "Accepted password for user"
					"[event][id]" => "%USER-6-SYSTEM_MSG:03"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %USER-6-SYSTEM_MSG:04
		# line in RSA: lastlog_openseek: Couldn't stat <directory>: No such file or directory - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "lastlog_openseek: Couldn't stat %{directory}: No such file or directory - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG:04"
				add_field => {
				"event_source" => "%{hfld19}"
				"event_description" => "No such file or directory"
					"[event][id]" => "%USER-6-SYSTEM_MSG:04"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG:04"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %USER-6-SYSTEM_MSG:05
		# line in RSA: Could not load host key: <encryption_type> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Could not load host key: %{encryption_type} - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG:05"
				add_field => {
				"event_source" => "%{hfld19}"
				"event_description" => "Could not load host key"
					"[event][id]" => "%USER-6-SYSTEM_MSG:05"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG:05"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
		# MESSAGE %USER-6-SYSTEM_MSG:06
		# line in RSA: <event_description> - <agent>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description} - %{agent}" }
				id => "message-%USER-6-SYSTEM_MSG:06"
				add_field => {
				"event_source" => "%{hfld19}"
					"[event][id]" => "%USER-6-SYSTEM_MSG:06"
					"[rsa][message][id1]" => "%USER-6-SYSTEM_MSG:06"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId274
	# line in RSA: Disabling learning in vlan <vlan> for <duration>s due to too many mac moves
	else if [logstash][msgparser][id] == "msgParserId274" {
		dissect {
			mapping => { "message" => "Disabling learning in vlan %{vlan} for %{duration}s due to too many mac moves" }
			id => "msgParserId274"
			add_field => {
				"ec_activity" => "Disable"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId275
	# line in RSA: Re-enabling learning in vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId275" {
		dissect {
			mapping => { "message" => "Re-enabling learning in vlan %{vlan}" }
			id => "msgParserId275"
			add_field => {
				"ec_activity" => "Enable"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId276
	# line in RSA: Power supply <fld1> is <disposition>, ps-redundancy might be affected
	else if [logstash][msgparser][id] == "msgParserId276" {
		dissect {
			mapping => { "message" => "Power supply %{fld1} is %{disposition}, ps-redundancy might be affected" }
			id => "msgParserId276"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId277
	# line in RSA: Power supply <fld1> detected but <disposition> (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId277" {
		dissect {
			mapping => { "message" => "Power supply %{fld1} detected but %{disposition} (Serial number %{serial_number})" }
			id => "msgParserId277"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId278
	# line in RSA: "System Manager (configuration controller)" (PID <process_id>) has finished with error code <result> (<resultcode>).
	else if [logstash][msgparser][id] == "msgParserId278" {
		dissect {
			mapping => { "message" => "\"System Manager (configuration controller)\" (PID %{process_id}) has finished with error code %{result} (%{resultcode})." }
			id => "msgParserId278"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId279
	# line in RSA: "<service>" (PID <process_id>) has successfully exited with exit code <result> (<resultcode>).
	else if [logstash][msgparser][id] == "msgParserId279" {
		dissect {
			mapping => { "message" => "\"%{service}\" (PID %{process_id}) has successfully exited with exit code %{result} (%{resultcode})." }
			id => "msgParserId279"
			add_field => {
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId280
	# line in RSA: Line Protocol on Interface vlan <vlan>, changed state to <disposition>
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "Line Protocol on Interface vlan %{vlan}, changed state to %{disposition}" }
			id => "msgParserId280"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId281
	# line in RSA: Mac <smacaddr> in vlan <vlan> has moved between <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId281" {
		dissect {
			mapping => { "message" => "Mac %{smacaddr} in vlan %{vlan} has moved between %{change_old} to %{change_new}" }
			id => "msgParserId281"
			add_field => {
				"change_attribute" => "Interface"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId282
	# line in RSA: Power redundancy configured mode changed to <event_state>
	else if [logstash][msgparser][id] == "msgParserId282" {
		dissect {
			mapping => { "message" => "Power redundancy configured mode changed to %{event_state}" }
			id => "msgParserId282"
			add_field => {
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId283
	# line in RSA: Power supply operational redundancy mode changed to <event_state>
	else if [logstash][msgparser][id] == "msgParserId283" {
		dissect {
			mapping => { "message" => "Power supply operational redundancy mode changed to %{event_state}" }
			id => "msgParserId283"
			add_field => {
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId284
	# line in RSA: <agent>  [<process_id>]  Received packet with invalid source MAC address (<smacaddr>) from <saddr> on <vlan>
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "%{agent}  [%{process_id}]  Received packet with invalid source MAC address (%{smacaddr}) from %{saddr} on %{vlan}" }
			id => "msgParserId284"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId285
	# line in RSA:  State for service "<service>" changed from <change_old> to <change_new> in vdc <fld1>.
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "State for service \"%{service}\" changed from %{change_old} to %{change_new} in vdc %{fld1}." }
			id => "msgParserId285"
			add_field => {
				"change_attribute" => "Service status"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId286
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId286"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId293
	# line in RSA:  Service "<service>" in vdc <fld1> started with PID(<process_id>).
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "Service \"%{service}\" in vdc %{fld1} started with PID(%{process_id})." }
			id => "msgParserId293"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId294
	# line in RSA:  <process> [<process_id>]  Duplicate address Detected. Probe  packet received from <smacaddr> on <vlan> with destination set to our local Virtual ip, <saddr>
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "%{process} [%{process_id}]  Duplicate address Detected. Probe  packet received from %{smacaddr} on %{vlan} with destination set to our local Virtual ip, %{saddr}" }
			id => "msgParserId294"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Duplicate address Detected."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId295
	# line in RSA:   <process> [<process_id>]  Duplicate address Detected. Probe  packet received from <smacaddr> on <vlan> with destination set to our local ip, <saddr>
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "%{process} [%{process_id}]  Duplicate address Detected. Probe  packet received from %{smacaddr} on %{vlan} with destination set to our local ip, %{saddr}" }
			id => "msgParserId295"
			add_field => {
				"severity" => "%{severity}"
				"event_source" => "%{hfld19}"
				"event_description" => "Duplicate address Detected."
				"[logstash][fullDateTimeString]" => "%{hfld14} %{hfld15} %{hfld16} %{hfld17}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy MMM d H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-cisconxosmsg.json"
#			template_name => "cisconxos_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
