# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "aix"
			"[observer][name]" => "UNIX AIX"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 1110
	# line in RSA: <hmonth> <hday> <htime> <hfld1> Error logging to file,{ No Sp | No | N } <msgIdPart1> forwarded from <hhost>: <hagent> <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+Error[\s]+logging[\s]+to[\s]+file,([\s]*No[\s]+Sp[\s]+|[\s]*No[\s]+|[\s]*N[\s]+)[\s]+(?<msgIdPart1>[^\s]*)[\s]+forwarded[\s]+from[\s]+(?<message>(?<hhost>[^:]*):[\s]+(?<hagent>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1110"
			add_field => {
				"[rsa][header][id]" => "1110"
				"[rsa][message][id2]" => "No_%{msgIdPart1}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1111
	# line in RSA: Error logging to file,{ No Sp | No | N } <msgIdPart1> forwarded from <hhost>: <hagent> <!payload:hhost>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Error[\s]+logging[\s]+to[\s]+file,([\s]*No[\s]+Sp[\s]+|[\s]*No[\s]+|[\s]*N[\s]+)[\s]+(?<msgIdPart1>[^\s]*)[\s]+forwarded[\s]+from[\s]+(?<message>(?<hhost>[^:]*):[\s]+(?<hagent>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1111"
			add_field => {
				"[rsa][header][id]" => "1111"
				"[rsa][message][id2]" => "No_%{msgIdPart1}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>:  <husername>: <time>|<messageid>| <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<time>[^\|]*)\|(?<messageid>[^\|]*)\|[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>:  <<<hfld1> <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+<(?<message>(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 3333
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: [<hfld1>]: [ID <messageid> <hfld2>.<hseverity> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+\[(?<message>(?<hfld1>[^\]]*)\]:[\s]+\[ID[\s]+(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\.]*)\.(?<hseverity>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-3333"
			add_field => {
				"[rsa][header][id]" => "3333"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <hfld1>: (<messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<hfld1>[^:]*):[\s]+\((?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid> MARK -- <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+MARK[\s]+\-\-[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: User <husername1> has <msgIdPart1> <msgIdPart2>n <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+User[\s]+(?<husername1>[^\s]*)[\s]+has[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^n]*)n[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: <msgIdPart1>_<msgIdPart2> <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<msgIdPart1>[^_]*)_(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: User <husername1> <hfld1> <msgIdPart1> <msgIdPart2>n <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+User[\s]+(?<husername1>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^n]*)n[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 7777
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>:  <husername1> <msgIdPart1> <msgIdPart2>n <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<husername1>[^\s]*)[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^n]*)n[\s]+(?<payload>.*))$" }
			id => "header-7777"
			add_field => {
				"[rsa][header][id]" => "7777"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: <hfld1> <messageid> in from <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+in[\s]+from[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>[<hdata>]: <msgIdPart1> <msgIdPart2>: <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <msgIdPart1> <msgIdPart2>: <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid>.<husername>[<hdata>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\.]*)\.(?<husername>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1212
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: /usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/<messageid>[<hdata>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+/usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/(?<message>(?<messageid>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1212"
			add_field => {
				"[rsa][header][id]" => "1212"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <hfld1> <messageid>[<hdata>]: <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<messageid>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid>[<hdata>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 2727
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid>(<hfld1>)[<data>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-2727"
			add_field => {
				"[rsa][header][id]" => "2727"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0027
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid>(<hfld1>): <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\(]*)\((?<hfld1>[^\)]*)\):[\s]+(?<payload>.*))$" }
			id => "header-0027"
			add_field => {
				"[rsa][header][id]" => "0027"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <hfld1> <hfld2> <messageid> Server <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+Server[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: <messageid>=<!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<messageid>[^=]*)=(?<payload>.*))$" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <hagent> <messageid>: <!payload:hagent>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<hagent>[^\s]*)[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1818
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: <messageid>[<data>]: <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<messageid>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-1818"
			add_field => {
				"[rsa][header][id]" => "1818"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <husername>: <messageid>: <!payload:husername>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<husername>[^:]*):[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <hfld1>: <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<hfld1>[^:]*):[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: <hmonth> <hday> <htime> { Message forwarded from | From } <hhost>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Message[\s]+forwarded[\s]+from[\s]+|[\s]*From[\s]+)[\s]+(?<hhost>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <hmonth> <hday> <htime> Message forwarded from <hostname>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} Message forwarded from %{hostname}: %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "AIX_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0028
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>[<hdata>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hdata>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0028"
			add_field => {
				"[rsa][header][id]" => "0028"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0073
	# line in RSA: <hmonth> <hday> <htime> <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0073"
			add_field => {
				"[rsa][header][id]" => "0073"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0074
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0074"
			add_field => {
				"[rsa][header][id]" => "0074"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0049
	# line in RSA: <hmonth> <hday> <htime> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0049"
			add_field => {
				"[rsa][header][id]" => "0049"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0052
	# line in RSA: <hmonth> <hday> <htime> <messageid>:<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0052"
			add_field => {
				"[rsa][header][id]" => "0052"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_aixmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  <shost>: { <agent>: <disposition> | <disposition> }
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^[\s]*(?<shost>[^:]*):[\s]+([\s]*(?<agent>[^:]*):[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*(?<disposition>[^\s]*)[\s]+)$" }
			id => "msgParserId0"
			add_field => {
				"action" => "Error logging to file on host - No Message"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SYSLOG_WRITE" {
		# MESSAGE SYSLOG_WRITE:Success
		# line in RSA:  <agent>: SYSLOG_WRITE    <username>     OK        <fld20> <fld21> <fld22> <fld23> <fld25> {<action>                              <fld80>|<action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+SYSLOG_WRITE[\s]+(?<username>[^\s]*)[\s]+OK[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+((?<action>[^\s]*)[\s]+(?<fld80>.*)|(?<action>.*))$" }
				id => "message-SYSLOG_WRITE:Success"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "SYSLOG WRITE"
				"result" => "Syslog conf file modified successfully"
					"[event][id]" => "SYSLOG_WRITE:Success"
					"[rsa][message][id1]" => "SYSLOG_WRITE:Success"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE SYSLOG_WRITE:Failed
		# line in RSA:  <agent>: SYSLOG_WRITE    <username>     FAIL        <fld20> <fld21> <fld22> <fld23> <fld25> {<action>                              <fld80>|<action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+SYSLOG_WRITE[\s]+(?<username>[^\s]*)[\s]+FAIL[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+((?<action>[^\s]*)[\s]+(?<fld80>.*)|(?<action>.*))$" }
				id => "message-SYSLOG_WRITE:Failed"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "SYSLOG WRITE"
				"result" => "Syslog conf file modification not permitted"
					"[event][id]" => "SYSLOG_WRITE:Failed"
					"[rsa][message][id1]" => "SYSLOG_WRITE:Failed"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA:  <process_id>]: [ID 000000 <id>.<severity>] (<application>.<sessionid>)[<fld1>]<agent>: { Severe error: | Error encountered during abend processing: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId3" {
		grok {
			match => { "message" => "^[\s]*(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+000000[\s]+(?<id>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\((?<application>[^\.]*)\.(?<sessionid>[^\)]*)\)\[(?<fld1>[^\]]*)\](?<agent>[^:]*):[\s]+([\s]*Severe[\s]+error:[\s]+|[\s]*Error[\s]+encountered[\s]+during[\s]+abend[\s]+processing:[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId3"
			add_field => {
				"action" => "Severe error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "_tk4aunxf_" {
		# MESSAGE 001481
		# line in RSA:  <agent>: <severity> [<fld>] <username> - <shost> CONNECT, State, started, Startup command-line is: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity} [%{fld}] %{username} - %{shost} CONNECT, State, started, Startup command-line is: %{action}" }
				id => "message-001481"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user connection via startup command"
					"[event][id]" => "001481"
					"[rsa][message][id1]" => "001481"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001482
		# line in RSA:  <agent>: <severity> [<fld>] <username> - <shost> CONNECT, State, stopped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity} [%{fld}] %{username} - %{shost} CONNECT, State, stopped" }
				id => "message-001482"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user connection stopped"
					"[event][id]" => "001482"
					"[rsa][message][id1]" => "001482"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA:  -- MARK -- 
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "-- MARK --" }
			id => "msgParserId6"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA:  <agent>[<process_id>]: INFO <event_description>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: INFO %{event_description}" }
			id => "msgParserId7"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA:  <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId8"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA:  <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId9"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:  <agent>: <username>: TTY=<terminal>; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{agent}: %{username}: TTY=%{terminal}; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
			id => "msgParserId10"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: <agent>: <username>: <info> ; TTY=<terminal> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{agent}: %{username}: %{info} ; TTY=%{terminal} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
			id => "msgParserId11"
			add_field => {
				"event_description" => "sudo by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/bin/sudo" {
		# MESSAGE 00439:01
		# line in RSA: <agent>: <username> { : | ; } <info> { : | ; } TTY=<terminal> { : | ; } PWD=<directory> { : | ; } USER=<administrator> { : | ; } COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+(?<info>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00439:01"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00439:01"
					"[rsa][message][id1]" => "00439:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00439
		# line in RSA: <agent>: <username> { : | ; } TTY=<terminal> { : | ; } PWD=<directory> { : | ; } USER=<administrator> { : | ; } COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00439"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00439"
					"[rsa][message][id1]" => "00439"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA:  <agent> <operation_id> NOTIFY -- <event_description> 
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{agent} %{operation_id} NOTIFY -- %{event_description}" }
			id => "msgParserId14"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA:  <username>: <agent> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{username}: %{agent} %{event_description}" }
			id => "msgParserId15"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: <username>: <agent> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{username}: %{agent} %{event_description}" }
			id => "msgParserId16"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA:  <username>:<agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{username}:%{agent} %{event_description}" }
			id => "msgParserId17"
			add_field => {
				"username" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA:  <agent>[<process_id>]: <process> <event_description>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process} %{event_description}" }
			id => "msgParserId18"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:  <agent>[<process_id>]: executing "<action>" 
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: executing \"%{action}\"" }
			id => "msgParserId19"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "program execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/bin/sudo" {
		# MESSAGE 00197:01
		# line in RSA:  <agent>: <username> { : | ; } <info> { : | ; } TTY=<terminal> { : | ; } PWD=<directory> { : | ; } USER=<administrator> { : | ; } COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+(?<info>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-00197:01"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00197:01"
					"[rsa][message][id1]" => "00197:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00197:02
		# line in RSA:  <agent>: <username> : TTY=<terminal> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} : TTY=%{terminal} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-00197:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "00197:02"
					"[rsa][message][id1]" => "00197:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00197
		# line in RSA:  <agent>: <username> : TTY=<terminal> : PWD=<directory> : USER=<administrator> : COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} : TTY=%{terminal} : PWD=%{directory} : USER=%{administrator} : COMMAND=%{action}" }
				id => "message-00197"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "00197"
					"[rsa][message][id1]" => "00197"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  <agent>: <username> : TTY=<terminal> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{agent}: %{username} : TTY=%{terminal} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
			id => "msgParserId21"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:  <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId23"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/local/bin/rootfire" {
		# MESSAGE 00814
		# line in RSA:  <agent>: <username> { : | ; } TTY=<terminal> { : | ; } PWD=<directory> { : | ; } USER=<administrator> { ; | : } <fld2> COMMAND= <action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<fld2>[^\s]*)[\s]+COMMAND=[\s]+(?<action>[^\s]*)[\s]+$" }
				id => "message-00814"
				add_field => {
				"event_description" => "rootfire by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00814"
					"[rsa][message][id1]" => "00814"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00814:01
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00814:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00814:01"
					"[rsa][message][id1]" => "00814:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/local/bin/sudo" {
		# MESSAGE 00034
		# line in RSA:   <agent>: <username> { : | ; } TTY=<terminal> { : | ; } PWD=<directory> { : | ; } USER=<administrator> { ; | : } <fld2> COMMAND= <action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*:[\s]+|[\s]*;[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<fld2>[^\s]*)[\s]+COMMAND=[\s]+(?<action>[^\s]*)[\s]+$" }
				id => "message-00034"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00034"
					"[rsa][message][id1]" => "00034"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00034:02
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00034:02"
				add_field => {
					"[event][id]" => "00034:02"
					"[rsa][message][id1]" => "00034:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA: <agent>[<process_id>]: <username>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{username}: %{event_description}" }
			id => "msgParserId28"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: <agent>[<process_id>]: (<username>) CMD (<event_description>)  
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{event_description})" }
			id => "msgParserId29"
			add_field => {
				"event_description" => "/USR/SBIN/CRON"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId30"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: <agent>[<process_id>]: Failed <fld1> authentication from <fqdn> for local user <username> via remote user <info>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Failed %{fld1} authentication from %{fqdn} for local user %{username} via remote user %{info}" }
			id => "msgParserId31"
			add_field => {
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA:  <agent>: [<process_id>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{event_description}" }
			id => "msgParserId32"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: <agent>: [<process_id>] <event_description>  
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{event_description}" }
			id => "msgParserId33"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA:  <agent>: { [<process_id>] <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId34" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*\[(?<process_id>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId34"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: <agent>: [<process_id>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{event_description}" }
			id => "msgParserId35"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA:  <agent>: [<process_id>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{event_description}" }
			id => "msgParserId36"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA:  <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId37"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId27"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:  <agent>: Aborting <info>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{agent}: Aborting %{info}" }
			id => "msgParserId38"
			add_field => {
				"username" => "%{husername}"
				"event_description" => "Aborting WebFOCUS process"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA:  <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId40"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ACESERVER6.1" {
		# MESSAGE 00436
		# line in RSA: <agent>: <fld1> ACESYNCHD : <event_description> (<hostip>) <username> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} ACESYNCHD : %{event_description} (%{hostip}) %{username} %{info}" }
				id => "message-00436"
				add_field => {
					"[event][id]" => "00436"
					"[rsa][message][id1]" => "00436"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00436:01
		# line in RSA: <agent>: <fld1> ACESYNCHD : <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} ACESYNCHD : %{event_description}" }
				id => "message-00436:01"
				add_field => {
					"[event][id]" => "00436:01"
					"[rsa][message][id1]" => "00436:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00436:02
		# line in RSA: <agent>: <fld1> ACESERVER : <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} ACESERVER : %{event_description}" }
				id => "message-00436:02"
				add_field => {
					"[event][id]" => "00436:02"
					"[rsa][message][id1]" => "00436:02"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00436:03
		# line in RSA: <agent>: <fld1> AUTHENTICATION : <event_description> ( (<hostip>) <username> <info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} AUTHENTICATION : %{event_description} ( (%{hostip}) %{username} %{info})" }
				id => "message-00436:03"
				add_field => {
					"[event][id]" => "00436:03"
					"[rsa][message][id1]" => "00436:03"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00436:04
		# line in RSA: <agent>: <fld1> AUTHENTICATION : <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} AUTHENTICATION : %{event_description}." }
				id => "message-00436:04"
				add_field => {
					"[event][id]" => "00436:04"
					"[rsa][message][id1]" => "00436:04"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00436:05
		# line in RSA: <agent>: <fld1> LOCK MANAGER : <event_description>: <fqdn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} LOCK MANAGER : %{event_description}: %{fqdn}" }
				id => "message-00436:05"
				add_field => {
					"[event][id]" => "00436:05"
					"[rsa][message][id1]" => "00436:05"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA:  <agent>[<process_id>]: <category> <process> Change Root of Data directory to <directory>.
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{category} %{process} Change Root of Data directory to %{directory}." }
			id => "msgParserId47"
			add_field => {
				"event_description" => "process changed Root of Data directory"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA:   <agent>[<process_id>]: INFO <action> Change Root of Data directory to <directory>.
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: INFO %{action} Change Root of Data directory to %{directory}." }
			id => "msgParserId48"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Change Root of Data directory"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adclient" {
		# MESSAGE 00518:02
		# line in RSA: <agent>[<process_id>]: <severity> <info>|<product>|<application>|<version>|<fld1>|<result>|5|{user=<username>(<fld5>)|user=<username>}pid=<fld2> utc=<fld3> centrifyEventID=<operation_id> status=<disposition> {service=<service> tty=<terminal> client=<fld4>|server=<obj_server>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+(?<info>[^\|]*)\|(?<product>[^\|]*)\|(?<application>[^\|]*)\|(?<version>[^\|]*)\|(?<fld1>[^\|]*)\|(?<result>[^\|]*)\|5\|(user=(?<username>[^\(]*)\((?<fld5>[^\)]*)\)|user=(?<username>[^p]*))pid=(?<fld2>[^\s]*)[\s]+utc=(?<fld3>[^\s]*)[\s]+centrifyEventID=(?<operation_id>[^\s]*)[\s]+status=(?<disposition>[^\s]*)[\s]+(service=(?<service>[^\s]*)[\s]+tty=(?<terminal>[^\s]*)[\s]+client=(?<fld4>.*)|server=(?<obj_server>.*))$" }
				id => "message-00518:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "00518:02"
					"[rsa][message][id1]" => "00518:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00518:03
		# line in RSA: <agent>[<process_id>]: <severity> <info>|<product>|<application>|<version>|<fld1>|<result>|5|user=<username> pid=<fld2> utc=<fld3> centrifyEventID=<operation_id> status=<disposition> service=<service> tty=<terminal> authMechanism=<authmethod> client=<saddr> sshRights=<permissions> command=<param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{info}|%{product}|%{application}|%{version}|%{fld1}|%{result}|5|user=%{username} pid=%{fld2} utc=%{fld3} centrifyEventID=%{operation_id} status=%{disposition} service=%{service} tty=%{terminal} authMechanism=%{authmethod} client=%{saddr} sshRights=%{permissions} command=%{param}" }
				id => "message-00518:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"event_description" => "user OK or granted access"
					"[event][id]" => "00518:03"
					"[rsa][message][id1]" => "00518:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00518:04
		# line in RSA: <agent>[<process_id>]: {DEBUG|DIAG} <<<filename> <action> > <process> { <application>: <event_description> (Reason:<result>) | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(DEBUG|DIAG)[\s]+<(?<filename>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+>[\s]+(?<process>[^\s]*)[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\(Reason:(?<result>[^\)]*)\)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-00518:04"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"severity" => "DEBUG"
					"[event][id]" => "00518:04"
					"[rsa][message][id1]" => "00518:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00518:05
		# line in RSA: <agent>[<process_id>]: {DEBUG|DIAG} <<<action> > <process> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(DEBUG|DIAG)[\s]+<(?<action>[^\s]*)[\s]+>[\s]+(?<process>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-00518:05"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "DEBUG"
					"[event][id]" => "00518:05"
					"[rsa][message][id1]" => "00518:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00518
		# line in RSA:  <agent>[<process_id>]: { WARN | ERROR } <<<action>> { <event_description>: <info> | <event_description>. <info> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*WARN[\s]+|[\s]*ERROR[\s]+)[\s]+<(?<action>[^>]*)>[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\.]*)\.[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-00518"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00518"
					"[rsa][message][id1]" => "00518"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00518:01
		# line in RSA:  <agent>[<process_id>]: { INFO | WARN } { << <action> > | <action> } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+([\s]*<[\s]+(?<action>[^\s]*)[\s]+>[\s]+|[\s]*(?<action>[^\s]*)[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00518:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "adclient message"
					"[event][id]" => "00518:01"
					"[rsa][message][id1]" => "00518:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA:  <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId55"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adinfo" {
		# MESSAGE 00517
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } { INFO | WARN } <event_description>: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<event_description>[^:]*):[\s]+(?<info>.*)$" }
				id => "message-00517"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00517"
					"[rsa][message][id1]" => "00517"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00517:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } { INFO | WARN } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO[\s]+|[\s]*WARN[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00517:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00517:01"
					"[rsa][message][id1]" => "00517:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00517:02
		# line in RSA: { <agent>[<process_id>]: | <agent>: } { DEBUG | DIAG} <process> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*DEBUG[\s]+|[\s]*DIAG)[\s]+(?<process>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-00517:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00517:02"
					"[rsa][message][id1]" => "00517:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA:  <agent>[<process_id>]: <category> <process> process authentication request failed: <service>: <result>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{category} %{process} process authentication request failed: %{service}: %{result}" }
			id => "msgParserId59"
			add_field => {
				"event_description" => "process authentication request failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: <agent>[<process_id>]: <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{event_description}" }
			id => "msgParserId60"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: <agent>[<process_id>]: <severity> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{event_description}" }
			id => "msgParserId61"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId62
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId62"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "albert" {
		# MESSAGE 01189
		# line in RSA:  <agent>: <application>: (<action>) <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}: (%{action}) %{event_description}" }
				id => "message-01189"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01189"
					"[rsa][message][id1]" => "01189"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01189:01
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-01189:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01189:01"
					"[rsa][message][id1]" => "01189:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA:  <agent>[<process_id>]: connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId64"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA: <agent>[<process_id>]: <interface> <severity> <fld53> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface} %{severity} %{fld53} %{event_description}" }
			id => "msgParserId65"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA:  <agent>[<process_id>]: <interface> <severity> <fld53> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface} %{severity} %{fld53} %{event_description}" }
			id => "msgParserId66"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA:  <agent>[<process_id>]: <application> <<<sessionid>> { Client request: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId67" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<application>[^\s]*)[\s]+<(?<sessionid>[^>]*)>[\s]+([\s]*Client[\s]+request:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId67"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "asamrcvr" {
		# MESSAGE 01112
		# line in RSA:  <agent>[<process_id>]: <process> Unable to begin a session with host <fqdn> port <sport>, reason=<info> Error: <result> <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Unable to begin a session with host %{fqdn} port %{sport}, reason=%{info} Error: %{result} %{obj_type}" }
				id => "message-01112"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to begin session with host"
					"[event][id]" => "01112"
					"[rsa][message][id1]" => "01112"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01112:01
		# line in RSA:  <agent>[<process_id>]: <process> Connection established with host <fqdn> port <sport>. <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} Connection established with host %{fqdn} port %{sport}. %{fld1}" }
				id => "message-01112:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session established"
					"[event][id]" => "01112:01"
					"[rsa][message][id1]" => "01112:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01112:02
		# line in RSA:  <agent>[<process_id>]: <process> <event_description>. <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} %{event_description}. %{obj_type}" }
				id => "message-01112:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01112:02"
					"[rsa][message][id1]" => "01112:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId71
	# line in RSA:  <agent>[<process_id>]: Error <resultcode>: <result>
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Error %{resultcode}: %{result}" }
			id => "msgParserId71"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA: <agent>[<process_id>]: Fetching from <saddr> to <fqdn>
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Fetching from %{saddr} to %{fqdn}" }
			id => "msgParserId72"
			add_field => {
				"event_description" => "tftpd Fetching file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA: {<agent>: <event_description>|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId73" {
		grok {
			match => { "message" => "^((?<agent>[^:]*):[\s]+(?<event_description>.*)|(?<event_description>.*))$" }
			id => "msgParserId73"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA: auto request sense failed (<info>)
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "auto request sense failed (%{info})" }
			id => "msgParserId74"
			add_field => {
				"event_description" => "auto request sense failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "automountd" {
		# MESSAGE 00055:01
		# line in RSA:  <agent>[<process_id>]: <shost>:<directory> server not responding: <process>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost}:%{directory} server not responding: %{process}: %{info}" }
				id => "message-00055:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00055:01"
					"[rsa][message][id1]" => "00055:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00055
		# line in RSA:  <agent>[<process_id>]: <action>: no well known address for <process> on transport <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: no well known address for %{process} on transport %{protocol}" }
				id => "message-00055"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00055"
					"[rsa][message][id1]" => "00055"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00055:02
		# line in RSA:  <agent>[<process_id>]: <action>: <process>: A file or directory in the path name does not exist.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: %{process}: A file or directory in the path name does not exist." }
				id => "message-00055:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00055:02"
					"[rsa][message][id1]" => "00055:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00055:03
		# line in RSA:  <agent>[<process_id>]: mount of <directory> from <shost> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: mount of %{directory} from %{shost} failed" }
				id => "message-00055:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00055:03"
					"[rsa][message][id1]" => "00055:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00055:04
		# line in RSA:  <agent>[<process_id>]: Duplicate request
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Duplicate request" }
				id => "message-00055:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00055:04"
					"[rsa][message][id1]" => "00055:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00055:05
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00055:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00055:05"
					"[rsa][message][id1]" => "00055:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: <fld53> <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "%{fld53} %{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId80"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA:  <agent>: <event_description>. Terminating previous run 
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}. Terminating previous run" }
			id => "msgParserId81"
			add_field => {
				"hostname" => "%{hhost}"
				"result" => "Terminating previous run"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA:  <agent>[<process_id>]: { [<severity>]: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId82" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\[(?<severity>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId82"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "BackupExpressNibbler" {
		# MESSAGE 01149
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } { INFO:COMM:<fld1>: | COMM: } { Accepted connection from | Socket connected to } [<shost>:<saddr>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO:COMM:(?<fld1>[^:]*):[\s]+|[\s]*COMM:[\s]+)[\s]+([\s]*Accepted[\s]+connection[\s]+from[\s]+|[\s]*Socket[\s]+connected[\s]+to[\s]+)[\s]+\[(?<shost>[^:]*):(?<saddr>[^\]]*)\][\s]+$" }
				id => "message-01149"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection to host"
					"[event][id]" => "01149"
					"[rsa][message][id1]" => "01149"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01149:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } { INFO:COMM:<fld1>: | COMM: } Closed connection to [<shost>:<saddr>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*INFO:COMM:(?<fld1>[^:]*):[\s]+|[\s]*COMM:[\s]+)[\s]+Closed[\s]+connection[\s]+to[\s]+\[(?<shost>[^:]*):(?<saddr>[^\]]*)\][\s]+$" }
				id => "message-01149:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Closed connection to host"
					"[event][id]" => "01149:01"
					"[rsa][message][id1]" => "01149:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01149:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } INFO:COMM:<fld1>:[CSOCKET:<shost>:<saddr>:<fld2>], Thread:[<fld3>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+INFO:COMM:(?<fld1>[^:]*):\[CSOCKET:(?<shost>[^:]*):(?<saddr>[^:]*):(?<fld2>[^\]]*)\],[\s]+Thread:\[(?<fld3>[^\]]*)\][\s]+$" }
				id => "message-01149:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "socket info"
					"[event][id]" => "01149:02"
					"[rsa][message][id1]" => "01149:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01149:04
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } COMM:Failed reading from [<shost>:<saddr>]. <result>.[<info>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+COMM:Failed[\s]+reading[\s]+from[\s]+\[(?<shost>[^:]*):(?<saddr>[^\]]*)\]\.[\s]+(?<result>[^\.]*)\.\[(?<info>[^\]]*)\]$" }
				id => "message-01149:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed reading from host"
					"[event][id]" => "01149:04"
					"[rsa][message][id1]" => "01149:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01149:03
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } { ERROR:<application>() | <application>() } <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*ERROR:(?<application>[^\(]*)\(\)[\s]+|[\s]*(?<application>[^\(]*)\(\)[\s]+)[\s]+(?<result>.*)$" }
				id => "message-01149:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error"
					"[event][id]" => "01149:03"
					"[rsa][message][id1]" => "01149:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01149:05
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-01149:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01149:05"
					"[rsa][message][id1]" => "01149:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId89
	# line in RSA:  <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId89"
			add_field => {
				"action" => "apache log"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "BEA" {
		# MESSAGE 01325
		# line in RSA:  <agent>[<process_id>]: <event_description>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{result}" }
				id => "message-01325"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01325"
					"[rsa][message][id1]" => "01325"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01325:01
		# line in RSA:  <agent>[<process_id>]: <event_description>, <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}, %{result}" }
				id => "message-01325:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01325:01"
					"[rsa][message][id1]" => "01325:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01325:02
		# line in RSA:  <agent>[<process_id>]: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01325:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01325:02"
					"[rsa][message][id1]" => "01325:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA: <username>: <agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "%{username}: %{agent} %{event_description}" }
			id => "msgParserId93"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA:   <agent>: [<application>] (<fld81>): [<process_id>] The { AntiSpam | AntiVirus } license will expire in <dclass_counter1> days.
	else if [logstash][msgparser][id] == "msgParserId94" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[(?<application>[^\]]*)\][\s]+\((?<fld81>[^\)]*)\):[\s]+\[(?<process_id>[^\]]*)\][\s]+The[\s]+([\s]*AntiSpam[\s]+|[\s]*AntiVirus[\s]+)[\s]+license[\s]+will[\s]+expire[\s]+in[\s]+(?<dclass_counter1>[^\s]*)[\s]+days\.$" }
			id => "msgParserId94"
			add_field => {
				"shost" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "boks_sshd" {
		# MESSAGE 00421
		# line in RSA:  <agent>[<process_id>]: <protocol>: { Illegal | illegal | invalid } user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<protocol>[^:]*):[\s]+([\s]*Illegal[\s]+|[\s]*illegal[\s]+|[\s]*invalid[\s]+)[\s]+user[\s]+(?<username>.*)$" }
				id => "message-00421"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00421"
					"[rsa][message][id1]" => "00421"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:01
		# line in RSA:  <agent>[<process_id>]: { Illegal | illegal | Invalid } user <username> from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Illegal[\s]+|[\s]*illegal[\s]+|[\s]*Invalid[\s]+)[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-00421:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00421:01"
					"[rsa][message][id1]" => "00421:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:02
		# line in RSA:  <agent>[<process_id>]: Failed { keyboard-interactive/boksauth | password | publickey | keyboard-interactive/boksauth } { for illegal user | for } <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+([\s]*keyboard\-interactive/boksauth[\s]+|[\s]*password[\s]+|[\s]*publickey[\s]+|[\s]*keyboard\-interactive/boksauth[\s]+)[\s]+([\s]*for[\s]+illegal[\s]+user[\s]+|[\s]*for[\s]+)[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00421:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
				"info" => "illegal user"
					"[event][id]" => "00421:02"
					"[rsa][message][id1]" => "00421:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:10
		# line in RSA:  <agent>[<process_id>]: Failed none for illegal user <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed none for illegal user %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00421:10"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00421:10"
					"[rsa][message][id1]" => "00421:10"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:13
		# line in RSA:  <agent>[<process_id>]: Authentication refused: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Authentication refused: %{info}" }
				id => "message-00421:13"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication refused"
					"[event][id]" => "00421:13"
					"[rsa][message][id1]" => "00421:13"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:03
		# line in RSA: <agent>[<process_id>]: Postponed { keyboard-interactive/boksauth | keyboard-interactive } for { illegal user <username> | <username> } from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Postponed[\s]+([\s]*keyboard\-interactive/boksauth[\s]+|[\s]*keyboard\-interactive[\s]+)[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00421:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00421:03"
					"[rsa][message][id1]" => "00421:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:04
		# line in RSA: <agent>[<process_id>]: <severity>: Timeout before authentication for <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Timeout before authentication for %{saddr}" }
				id => "message-00421:04"
				add_field => {
				"event_description" => "Timeout before authentication"
					"[event][id]" => "00421:04"
					"[rsa][message][id1]" => "00421:04"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:05
		# line in RSA: <agent>[<process_id>]: <severity>: Read from socket failed: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Read from socket failed: %{info}" }
				id => "message-00421:05"
				add_field => {
				"event_description" => "Read from socket failed"
					"[event][id]" => "00421:05"
					"[rsa][message][id1]" => "00421:05"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:06
		# line in RSA: <agent>[<process_id>]: Accepted { keyboard-interactive/boksauth | publickey | password | <fld1> } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+([\s]*keyboard\-interactive/boksauth[\s]+|[\s]*publickey[\s]+|[\s]*password[\s]+|[\s]*(?<fld1>[^\s]*)[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00421:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "password or public key accepted"
					"[event][id]" => "00421:06"
					"[rsa][message][id1]" => "00421:06"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:07
		# line in RSA: <agent>[<process_id>]: Did not receive { identification | ident } string from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-00421:07"
				add_field => {
				"info" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "00421:07"
					"[rsa][message][id1]" => "00421:07"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:08
		# line in RSA: <agent>[<process_id>]: Connection closed by <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection closed by %{saddr}" }
				id => "message-00421:08"
				add_field => {
				"event_description" => "Connection closed"
					"[event][id]" => "00421:08"
					"[rsa][message][id1]" => "00421:08"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:09
		# line in RSA: <agent>: Received disconnect from <saddr>: <fld1>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Received disconnect from %{saddr}: %{fld1}: %{info}" }
				id => "message-00421:09"
				add_field => {
				"event_description" => "Received disconnect"
					"[event][id]" => "00421:09"
					"[rsa][message][id1]" => "00421:09"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:11
		# line in RSA: <agent>[<process_id>]: Disconnecting: Too many authentication failures for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Too many authentication failures for %{username}" }
				id => "message-00421:11"
				add_field => {
				"event_description" => "Disconnecting"
					"[event][id]" => "00421:11"
					"[rsa][message][id1]" => "00421:11"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:14
		# line in RSA:  <agent>[<process_id>]: Writing login record failed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Writing login record failed for %{username}" }
				id => "message-00421:14"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => " Writing login record failed"
					"[event][id]" => "00421:14"
					"[rsa][message][id1]" => "00421:14"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:15
		# line in RSA: <agent>[<process_id>]: <severity>: Bind to port <sport> on <saddr> failed: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Bind to port %{sport} on %{saddr} failed: %{info}" }
				id => "message-00421:15"
				add_field => {
				"event_description" => "Bind to port failed"
					"[event][id]" => "00421:15"
					"[rsa][message][id1]" => "00421:15"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:16
		# line in RSA: <agent>[<process_id>]: <severity>: No DSA host key is found in <fld1> database for host <shost>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: No DSA host key is found in %{fld1} database for host %{shost}." }
				id => "message-00421:16"
				add_field => {
				"event_description" => "accept error"
					"[event][id]" => "00421:16"
					"[rsa][message][id1]" => "00421:16"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:19
		# line in RSA: <agent>[<process_id>]: <severity>: accept: Software caused connection abort 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: accept: Software caused connection abort" }
				id => "message-00421:19"
				add_field => {
				"event_description" => "accept error: Software caused connection error"
					"[event][id]" => "00421:19"
					"[rsa][message][id1]" => "00421:19"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:18
		# line in RSA: <agent>[<process_id>]: Could not write ident string to <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not write ident string to %{fld1}" }
				id => "message-00421:18"
				add_field => {
				"event_description" => "Could not write ident string"
					"[event][id]" => "00421:18"
					"[rsa][message][id1]" => "00421:18"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:21
		# line in RSA: <agent>[<process_id>]: fatal: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal: %{info}" }
				id => "message-00421:21"
				add_field => {
				"event_description" => "Cannot bind any address"
					"[event][id]" => "00421:21"
					"[rsa][message][id1]" => "00421:21"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:17
		# line in RSA: <agent>[<process_id>]: Server listening on <saddr> port <sport>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server listening on %{saddr} port %{sport}." }
				id => "message-00421:17"
				add_field => {
				"event_description" => "Server listening"
					"[event][id]" => "00421:17"
					"[rsa][message][id1]" => "00421:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00421:22
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00421:22"
				add_field => {
					"[event][id]" => "00421:22"
					"[rsa][message][id1]" => "00421:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA:   [<agent>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "[%{agent}]: %{event_description}" }
			id => "msgParserId115"
			add_field => {
				"action" => "Starting/Finishing Class"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "BUSA_AUDIT" {
		# MESSAGE 01178
		# line in RSA:  <agent>[<process_id>]: User <username> (<user_fullname>) { attempting log | logged } in as <c_username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+User[\s]+(?<username>[^\s]*)[\s]+\((?<user_fullname>[^\)]*)\)[\s]+([\s]*attempting[\s]+log[\s]+|[\s]*logged[\s]+)[\s]+in[\s]+as[\s]+(?<c_username>.*)$" }
				id => "message-01178"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Unknown"
				"hostname" => "%{hhost}"
				"event_description" => "user login or attempting login"
					"[event][id]" => "01178"
					"[rsa][message][id1]" => "01178"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01178:01
		# line in RSA:  <agent>[<process_id>]: "<action>" executed by <username> (<user_fullname>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: \"%{action}\" executed by %{username} (%{user_fullname})" }
				id => "message-01178:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "command executed by user"
					"[event][id]" => "01178:01"
					"[rsa][message][id1]" => "01178:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId118
	# line in RSA:   <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId118" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId118"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId119
	# line in RSA: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId119" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId119"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Cache" {
		# MESSAGE 01176
		# line in RSA:   <agent>(<process>)[<process_id>]: <service>: Warning, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{process})[%{process_id}]: %{service}: Warning, %{event_description}" }
				id => "message-01176"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01176"
					"[rsa][message][id1]" => "01176"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01176:01
		# line in RSA:   <agent>(<process>)[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{process})[%{process_id}]: %{event_description}" }
				id => "message-01176:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01176:01"
					"[rsa][message][id1]" => "01176:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Cannot" {
		# MESSAGE 01162
		# line in RSA: [<process_id>]: Cannot connect to name server <hostname>(<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{process_id}]: Cannot connect to name server %{hostname}(%{info})" }
				id => "message-01162"
				add_field => {
				"event_description" => "Cannot connect to name server"
					"[event][id]" => "01162"
					"[rsa][message][id1]" => "01162"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01162:01
		# line in RSA: Cannot connect to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Cannot connect to %{info}" }
				id => "message-01162:01"
				add_field => {
				"event_description" => "Cannot connect to exchange to query port#"
					"[event][id]" => "01162:01"
					"[rsa][message][id1]" => "01162:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId124" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId124"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA:  <agent>[<process_id>]: ERROR: { <event_description>: <result>: <info> | <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId125" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+ERROR:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId125"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cdcwatch" {
		# MESSAGE 001417
		# line in RSA:  <agent>[<process_id>]: ERROR <event_description>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ERROR %{event_description}: %{result}" }
				id => "message-001417"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "ERROR"
					"[event][id]" => "001417"
					"[rsa][message][id1]" => "001417"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001418
		# line in RSA:  <agent>[<process_id>]: INFO <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO %{event_description}" }
				id => "message-001418"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001418"
					"[rsa][message][id1]" => "001418"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001418:01
		# line in RSA: <agent>[<process_id>]: DEBUG <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: DEBUG %{event_description}" }
				id => "message-001418:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001418:01"
					"[rsa][message][id1]" => "001418:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <service> Event <info> was successful with a status of  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId128" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<service>[^\s]*)[\s]+Event[\s]+(?<info>[^\s]*)[\s]+was[\s]+successful[\s]+with[\s]+a[\s]+status[\s]+of[\s]+(?<resultcode>.*)$" }
			id => "msgParserId128"
			add_field => {
				"action" => "Event successful with status"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId129
	# line in RSA:   <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId129" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId129"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId130
	# line in RSA: <agent>:<username>[<process_id>]: <severity>: Checksum for <filename> changed!
	else if [logstash][msgparser][id] == "msgParserId130" {
		dissect {
			mapping => { "message" => "%{agent}:%{username}[%{process_id}]: %{severity}: Checksum for %{filename} changed!" }
			id => "msgParserId130"
			add_field => {
				"event_description" => "Checksum for file changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId131
	# line in RSA: <hostname>: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId131" {
		dissect {
			mapping => { "message" => "%{hostname}: %{agent}: %{event_description}" }
			id => "msgParserId131"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId132
	# line in RSA:  <agent>[<process_id>]: change_wm <event_description>
	else if [logstash][msgparser][id] == "msgParserId132" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: change_wm %{event_description}" }
			id => "msgParserId132"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId133
	# line in RSA: <agent>: <event_description> - <hostname>
	else if [logstash][msgparser][id] == "msgParserId133" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} - %{hostname}" }
			id => "msgParserId133"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId134
	# line in RSA: <agent>[<process_id>]: LPP problems detected. Review content of <info>
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: LPP problems detected. Review content of %{info}" }
			id => "msgParserId134"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LPP Problems detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cluster" {
		# MESSAGE 01141
		# line in RSA: <agent>[<process_id>]: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
				id => "message-01141"
				add_field => {
					"[event][id]" => "01141"
					"[rsa][message][id1]" => "01141"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01141:01
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01141:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01141:01"
					"[rsa][message][id1]" => "01141:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA:  <username>: Cluster Ready Services completed waiting on dependencies.
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "%{username}: Cluster Ready Services completed waiting on dependencies." }
			id => "msgParserId136"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "CMS" {
		# MESSAGE 00489
		# line in RSA: <agent>: CMS Startup <hostname> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: CMS Startup %{hostname} %{event_description}" }
				id => "message-00489"
				add_field => {
					"[event][id]" => "00489"
					"[rsa][message][id1]" => "00489"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00489:01
		# line in RSA: <agent>: CMS <hostname> is being auto-booted.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: CMS %{hostname} is being auto-booted." }
				id => "message-00489:01"
				add_field => {
					"[event][id]" => "00489:01"
					"[rsa][message][id1]" => "00489:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00489:02
		# line in RSA: <agent>: CMS <hostname> has failed and the Server Intelligence Agent has not been able to connect to the cluster. Please verify your CMS port and database settings are correct.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: CMS %{hostname} has failed and the Server Intelligence Agent has not been able to connect to the cluster. Please verify your CMS port and database settings are correct." }
				id => "message-00489:02"
				add_field => {
					"[event][id]" => "00489:02"
					"[rsa][message][id1]" => "00489:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId140
	# line in RSA:   <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId140" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId140"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA:  <agent>: <event_time_string>, Error <resultcode> (<result>), Message <version>: Error during find 
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_time_string}, Error %{resultcode} (%{result}), Message %{version}: Error during find" }
			id => "msgParserId141"
			add_field => {
				"hostname" => "%{hhost}"
				"action" => "Error during find"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId142
	# line in RSA:  <agent>: <version>: Error during find <event_description> 
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "%{agent}: %{version}: Error during find %{event_description}" }
			id => "msgParserId142"
			add_field => {
				"hostname" => "%{hhost}"
				"action" => "Error during find"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ControlServer" {
		# MESSAGE 01030
		# line in RSA:  <agent>[<process_id>]: <username> ControlServer has shutdown unexpectedly.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} ControlServer has shutdown unexpectedly." }
				id => "message-01030"
				add_field => {
				"event_description" => "locsrv ControlServer shutdown"
					"[event][id]" => "01030"
					"[rsa][message][id1]" => "01030"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01030:01
		# line in RSA:  <agent>[<process_id>]: <username> ControlServer has successfully started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} ControlServer has successfully started." }
				id => "message-01030:01"
				add_field => {
				"event_description" => "locsrv ControlServer started"
					"[event][id]" => "01030:01"
					"[rsa][message][id1]" => "01030:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId145
	# line in RSA:  Corrupt label {; |  - } <info> 
	else if [logstash][msgparser][id] == "msgParserId145" {
		grok {
			match => { "message" => "^[\s]*Corrupt[\s]+label[\s]+(;[\s]+|[\s]*\-[\s]+)[\s]+(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId145"
			add_field => {
				"event_description" => "Corrupt label"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId146
	# line in RSA:  corrupt label - <info> 
	else if [logstash][msgparser][id] == "msgParserId146" {
		dissect {
			mapping => { "message" => "corrupt label - %{info}" }
			id => "msgParserId146"
			add_field => {
				"event_description" => "Corrupt label"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId147
	# line in RSA: <hostname> <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId147" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}: %{event_description}" }
			id => "msgParserId147"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } direct root login on <shost> at <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId148" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+direct[\s]+root[\s]+login[\s]+on[\s]+(?<shost>[^\s]*)[\s]+at[\s]+(?<event_time_string>.*)$" }
			id => "msgParserId148"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "direct root login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cron" {
		# MESSAGE 00212
		# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-00212"
				add_field => {
					"[event][id]" => "00212"
					"[rsa][message][id1]" => "00212"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00212:01
		# line in RSA: <agent>[<process_id>]: (<username>) MAIL (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) MAIL (%{action})" }
				id => "message-00212:01"
				add_field => {
					"[event][id]" => "00212:01"
					"[rsa][message][id1]" => "00212:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00212:02
		# line in RSA: <agent>[<process_id>]: (<username>) RELOAD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) RELOAD (%{action})" }
				id => "message-00212:02"
				add_field => {
					"[event][id]" => "00212:02"
					"[rsa][message][id1]" => "00212:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00212:03
		# line in RSA: <agent>[<process_id>]: (CRON) <action> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (CRON) %{action} %{info}" }
				id => "message-00212:03"
				add_field => {
					"[event][id]" => "00212:03"
					"[rsa][message][id1]" => "00212:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00212:04
		# line in RSA:  <agent>[<process_id>]: WARN  <result>: ipc socket connect: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARN  %{result}: ipc socket connect: %{event_description}." }
				id => "message-00212:04"
				add_field => {
					"[event][id]" => "00212:04"
					"[rsa][message][id1]" => "00212:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CRON" {
		# MESSAGE 00395
		# line in RSA: <agent>[<process_id>]: (pam_unix) session opened for user <username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (pam_unix) session opened for user %{username} by (uid=%{uid})" }
				id => "message-00395"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00395"
					"[rsa][message][id1]" => "00395"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00395:01
		# line in RSA: <agent>[<process_id>]: (pam_unix) session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (pam_unix) session closed for user %{username}" }
				id => "message-00395:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00395:01"
					"[rsa][message][id1]" => "00395:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA: <agent>[<process_id>]: (<username>) CMD (<action>)
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
			id => "msgParserId156"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "crond" {
		# MESSAGE 00149
		# line in RSA: <agent>[<process_id>]: (<username>) CMD <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) CMD %{action}" }
				id => "message-00149"
				add_field => {
					"[event][id]" => "00149"
					"[rsa][message][id1]" => "00149"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00148:01
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00148:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00148:01"
					"[rsa][message][id1]" => "00148:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00148
		# line in RSA:  <agent>[<process_id>]: session opened for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00148"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00148"
					"[rsa][message][id1]" => "00148"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId160
	# line in RSA: <agent>[<process_id>]: (<username>) LIST (<action>) 
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{username}) LIST (%{action})" }
			id => "msgParserId160"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId161
	# line in RSA:  <agent>: <event_description> - <info>
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} - %{info}" }
			id => "msgParserId161"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId162
	# line in RSA:  <agent>[<process_id>]: INFO <service> Writing <filename>
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: INFO %{service} Writing %{filename}" }
			id => "msgParserId162"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"event_description" => "writing file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dad" {
		# MESSAGE 001401
		# line in RSA:  <agent>[<process_id>]: WARN  <<<application>> <service> { <event_description>: <result>: <info> | <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+WARN[\s]+<(?<application>[^>]*)>[\s]+(?<service>[^\s]*)[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001401"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "WARN"
					"[event][id]" => "001401"
					"[rsa][message][id1]" => "001401"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001402
		# line in RSA:  <agent>[<process_id>]: INFO  <<<application>> <service> { (<product>) <event_description> | <event_description>: <info> | <event_description>. <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+INFO[\s]+<(?<application>[^>]*)>[\s]+(?<service>[^\s]*)[\s]+([\s]*\((?<product>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\.]*)\.[\s]+(?<result>[^\s]*)[\s]+)$" }
				id => "message-001402"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001402"
					"[rsa][message][id1]" => "001402"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId165
	# line in RSA: <agent>[<process_id>]: <process>: Tx Request-Participation-State to <daddr>
	else if [logstash][msgparser][id] == "msgParserId165" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Tx Request-Participation-State to %{daddr}" }
			id => "msgParserId165"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId166
	# line in RSA:  <agent>: Unable to find the database folder <filename>. <info>.
	else if [logstash][msgparser][id] == "msgParserId166" {
		dissect {
			mapping => { "message" => "%{agent}: Unable to find the database folder %{filename}. %{info}." }
			id => "msgParserId166"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to find the database folder"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId167
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId167" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId167"
			add_field => {
				"action" => "DBLISTENER activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId168
	# line in RSA: <agent>: DHCPREQUEST on <sinterface> to <dhost> port <dport>
	else if [logstash][msgparser][id] == "msgParserId168" {
		dissect {
			mapping => { "message" => "%{agent}: DHCPREQUEST on %{sinterface} to %{dhost} port %{dport}" }
			id => "msgParserId168"
			add_field => {
				"event_description" => "dhcprequest to host"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId169
	# line in RSA: <agent>[<process_id>]: Access Denied for user <username> from <shost>
	else if [logstash][msgparser][id] == "msgParserId169" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Access Denied for user %{username} from %{shost}" }
			id => "msgParserId169"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "disallowed remote logins"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId170
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description> 
	else if [logstash][msgparser][id] == "msgParserId170" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId170"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dmcsrv" {
		# MESSAGE 001187
		# line in RSA:  <agent>[<process_id>]: [<fld1>] <event_description> "<interface>". Discarding request and closing socket
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{event_description} \"%{interface}\". Discarding request and closing socket" }
				id => "message-001187"
				add_field => {
				"action" => "Discarding request and closing socket"
					"[event][id]" => "001187"
					"[rsa][message][id1]" => "001187"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001187:01
		# line in RSA:  <agent>[<process_id>]: [<fld1>] <event_description> : [<resultcode>] Timeout expired while reading
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] %{event_description} : [%{resultcode}] Timeout expired while reading" }
				id => "message-001187:01"
				add_field => {
				"action" => "Timeout expired while reading"
					"[event][id]" => "001187:01"
					"[rsa][message][id1]" => "001187:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001187:02
		# line in RSA:  <agent>[<process_id>]: Command error: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Command error: %{action}" }
				id => "message-001187:02"
				add_field => {
				"event_description" => "Command error"
					"[event][id]" => "001187:02"
					"[rsa][message][id1]" => "001187:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001187:03
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001187:03"
				add_field => {
					"[event][id]" => "001187:03"
					"[rsa][message][id1]" => "001187:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId174
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <directory> <dclass_ratio1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId174" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{directory} %{dclass_ratio1} %{event_description}" }
			id => "msgParserId174"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId175
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId175" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{event_description}: %{info}" }
			id => "msgParserId175"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA:  <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId176"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ds_agent" {
		# MESSAGE 001407
		# line in RSA:  <agent>[<process_id>]: <resultcode>|<url>|<saddr>|<event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{resultcode}|%{url}|%{saddr}|%{event_description}" }
				id => "message-001407"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001407"
					"[rsa][message][id1]" => "001407"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001408
		# line in RSA:  <agent>[<process_id>]: { <application>(<saddr>:<sport>) - <event_description> - <result> | <event_description> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<application>[^\(]*)\((?<saddr>[^:]*):(?<sport>[^\)]*)\)[\s]+\-[\s]+(?<event_description>[^\s]*)[\s]+\-[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)[\s]+$" }
				id => "message-001408"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001408"
					"[rsa][message][id1]" => "001408"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId179
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } Date = <fld1>, Time = <fld2>, MsgId = <id>, Event Source = <event_source>, Application = <application>, Level = <severity>, Category = <group>, Node = <node>, User = <username>, Computer = <event_computer>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId179" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Date[\s]+=[\s]+(?<fld1>[^,]*),[\s]+Time[\s]+=[\s]+(?<fld2>[^,]*),[\s]+MsgId[\s]+=[\s]+(?<id>[^,]*),[\s]+Event[\s]+Source[\s]+=[\s]+(?<event_source>[^,]*),[\s]+Application[\s]+=[\s]+(?<application>[^,]*),[\s]+Level[\s]+=[\s]+(?<severity>[^,]*),[\s]+Category[\s]+=[\s]+(?<group>[^,]*),[\s]+Node[\s]+=[\s]+(?<node>[^,]*),[\s]+User[\s]+=[\s]+(?<username>[^,]*),[\s]+Computer[\s]+=[\s]+(?<event_computer>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId179"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId180
	# line in RSA:  <agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "%{agent} %{event_description}" }
			id => "msgParserId180"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dzdo" {
		# MESSAGE 001403
		# line in RSA:   <agent>: <username>: TTY=<terminal>; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: TTY=%{terminal}; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-001403"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "001403"
					"[rsa][message][id1]" => "001403"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001409
		# line in RSA:  <agent>: <username>: <info> ; TTY=<terminal> ; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}: %{info} ; TTY=%{terminal} ; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-001409"
				add_field => {
				"event_description" => "sudo by user"
					"[event][id]" => "001409"
					"[rsa][message][id1]" => "001409"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001404
		# line in RSA:  <agent>[<process_id>]: INFO <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO %{event_description}" }
				id => "message-001404"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001404"
					"[rsa][message][id1]" => "001404"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dzdo
		# line in RSA: <agent>[<process_id>]: {Run|run} {command using system|command using pipe|command: <param>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Run|run)[\s]+(command[\s]+using[\s]+system|command[\s]+using[\s]+pipe|command:[\s]+(?<param>.*))$" }
				id => "message-dzdo"
				add_field => {
					"[event][id]" => "dzdo"
					"[rsa][message][id1]" => "dzdo"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId183
	# line in RSA:  <agent>[<process_id>]: INFO <action> <event_description>
	else if [logstash][msgparser][id] == "msgParserId183" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: INFO %{action} %{event_description}" }
			id => "msgParserId183"
			add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dzsh" {
		# MESSAGE 001405
		# line in RSA:   <agent>[<process_id>]: <username>: TTY=<terminal>; PWD=<directory> ; USER=<administrator> ; COMMAND=<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username}: TTY=%{terminal}; PWD=%{directory} ; USER=%{administrator} ; COMMAND=%{action}" }
				id => "message-001405"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "001405"
					"[rsa][message][id1]" => "001405"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001406
		# line in RSA:  <agent>[<process_id>]: INFO <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO %{event_description}" }
				id => "message-001406"
				add_field => {
				"hostname" => "%{hhost}"
				"severity" => "INFO"
					"[event][id]" => "001406"
					"[rsa][message][id1]" => "001406"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "e15xk77" {
		# MESSAGE 001195
		# line in RSA:  <agent>: Version <version>: for Listener is <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Version %{version}: for Listener is %{result}" }
				id => "message-001195"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "version not supported"
					"[event][id]" => "001195"
					"[rsa][message][id1]" => "001195"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01273
		# line in RSA:  <agent>: Restart <application> using an alternate <filename>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Restart %{application} using an alternate %{filename}: %{info}" }
				id => "message-01273"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Restart application using alternate file"
					"[event][id]" => "01273"
					"[rsa][message][id1]" => "01273"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "eklogin" {
		# MESSAGE 01077
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Authentication failed from <saddr> (<shost>): <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Authentication[\s]+failed[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+\((?<shost>[^\)]*)\):[\s]+(?<result>.*)$" }
				id => "message-01077"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication failed"
					"[event][id]" => "01077"
					"[rsa][message][id1]" => "01077"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01077:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Kerberos authentication failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Kerberos[\s]+authentication[\s]+failed$" }
				id => "message-01077:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Kerberos Authentication failed"
					"[event][id]" => "01077:01"
					"[rsa][message][id1]" => "01077:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA: <agent>[<process_id>]: <interface> <severity> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface} %{severity} %{event_description}" }
			id => "msgParserId189"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "EMC" {
		# MESSAGE 00164
		# line in RSA: <agent>: EMC Notice: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: EMC Notice: %{event_description}" }
				id => "message-00164"
				add_field => {
				"severity" => "EMC Notice"
					"[event][id]" => "00164"
					"[rsa][message][id1]" => "00164"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00164:01
		# line in RSA: <agent>: EMC Critical: Group { <group_object>. | <group_object> } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+EMC[\s]+Critical:[\s]+Group[\s]+([\s]*(?<group_object>[^\.]*)\.[\s]+|[\s]*(?<group_object>[^\s]*)[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00164:01"
				add_field => {
				"severity" => "EMC Critical"
					"[event][id]" => "00164:01"
					"[rsa][message][id1]" => "00164:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00164:02
		# line in RSA: <agent>: EMC Critical: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: EMC Critical: %{event_description}" }
				id => "message-00164:02"
				add_field => {
				"severity" => "EMC Critical"
					"[event][id]" => "00164:02"
					"[rsa][message][id1]" => "00164:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00164:03
		# line in RSA: <agent>: EMC Warning: Group <group_object>. <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: EMC Warning: Group %{group_object}. %{event_description}" }
				id => "message-00164:03"
				add_field => {
				"severity" => "EMC Warning"
					"[event][id]" => "00164:03"
					"[rsa][message][id1]" => "00164:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId194
	# line in RSA:  <agent>[<process_id>]: <application>: <action> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId194" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{action} - %{event_description}" }
			id => "msgParserId194"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId195
	# line in RSA: <hostname> <event_description>
	else if [logstash][msgparser][id] == "msgParserId195" {
		dissect {
			mapping => { "message" => "%{hostname} %{event_description}" }
			id => "msgParserId195"
			add_field => {
				"event_description" => "unmasked SIMD FPU exception support"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId196
	# line in RSA: <agent>[<process_id>]: Error <resultcode>: <result>
	else if [logstash][msgparser][id] == "msgParserId196" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Error %{resultcode}: %{result}" }
			id => "msgParserId196"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId197
	# line in RSA: <agent>: {uswzp|usszp|usmp} Backup successful 
	else if [logstash][msgparser][id] == "msgParserId197" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(uswzp|usszp|usmp)[\s]+Backup[\s]+successful[\s]+$" }
			id => "msgParserId197"
			add_field => {
				"event_description" => "Backup successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId198
	# line in RSA:  <agent>[<process_id>]: CSM: epcommd: <action>
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: CSM: epcommd: %{action}" }
			id => "msgParserId198"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId199
	# line in RSA: Error for Command: <action> Error Level: <fld1>
	else if [logstash][msgparser][id] == "msgParserId199" {
		dissect {
			mapping => { "message" => "Error for Command: %{action} Error Level: %{fld1}" }
			id => "msgParserId199"
			add_field => {
				"event_description" => "Command error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId200
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <fld1>BIND: <event_description>
	else if [logstash][msgparser][id] == "msgParserId200" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^B]*)BIND:[\s]+(?<event_description>.*)$" }
			id => "msgParserId200"
			add_field => {
				"action" => "BIND error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId201
	# line in RSA: <agent>: <event_description>, started on <fld27> <fld23> <fld28>
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}, started on %{fld27} %{fld23} %{fld28}" }
			id => "msgParserId201"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld27} %{fld23} %{fld28}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yy H:m a" ] }
		}
	}
	else if [logstash][msgparser][id] == "eventlogd" {
		# MESSAGE 001469
		# line in RSA:  <agent>[<process_id>]: DCE Error [<result>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: DCE Error [%{result}]" }
				id => "message-001469"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "DCE Error"
					"[event][id]" => "001469"
					"[rsa][message][id1]" => "001469"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001470
		# line in RSA:  <agent>[<process_id>]: Failed to unregister RPC endpoints.  Error code [<resultcode>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed to unregister RPC endpoints.  Error code [%{resultcode}]" }
				id => "message-001470"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to unregister RPC endpoints"
					"[event][id]" => "001470"
					"[rsa][message][id1]" => "001470"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001471
		# line in RSA:  <agent>[<process_id>]: Eventlog exiting due to error [code:<resultcode>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Eventlog exiting due to error [code:%{resultcode}]" }
				id => "message-001471"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Eventlog exiting due to error"
					"[event][id]" => "001471"
					"[rsa][message][id1]" => "001471"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId205
	# line in RSA:  <username>: exec <event_description>
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "%{username}: exec %{event_description}" }
			id => "msgParserId205"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "program execution"
				"agent" => "exec"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId206
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId206"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId207
	# line in RSA: [<process_id>]: Factory <info>
	else if [logstash][msgparser][id] == "msgParserId207" {
		dissect {
			mapping => { "message" => "[%{process_id}]: Factory %{info}" }
			id => "msgParserId207"
			add_field => {
				"event_description" => "Factory unbound successfully"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId208
	# line in RSA: [<process_id>]: Failed to register with the CMS <hostname>. <info>
	else if [logstash][msgparser][id] == "msgParserId208" {
		dissect {
			mapping => { "message" => "[%{process_id}]: Failed to register with the CMS %{hostname}. %{info}" }
			id => "msgParserId208"
			add_field => {
				"event_description" => "Failed to register with the CMS"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "fmorgant" {
		# MESSAGE 01093
		# line in RSA:  <agent>: USER_Exit       <username>     OK           <fld20> <fld21> <fld22> <fld23> <fld25> {<action>                              <fld80>|<action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+USER_Exit[\s]+(?<username>[^\s]*)[\s]+OK[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+((?<action>[^\s]*)[\s]+(?<fld80>.*)|(?<action>.*))$" }
				id => "message-01093"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"result" => "User logged off"
					"[event][id]" => "01093"
					"[rsa][message][id1]" => "01093"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 01093:01
		# line in RSA:  <agent>: <space>tty: User <username> logged out on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space}tty: User %{username} logged out on %{terminal}" }
				id => "message-01093:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
					"[event][id]" => "01093:01"
					"[rsa][message][id1]" => "01093:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId211
	# line in RSA: <agent>[<process_id>]: <process>: [<severity>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process}: [%{severity}]: %{event_description}" }
			id => "msgParserId211"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ftp" {
		# MESSAGE 00006
		# line in RSA:  <agent>[<process_id>]: ftp: { EXPORT | IMPORT } user <username>, host <shost>, local <filename>, remote <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+ftp:[\s]+([\s]*EXPORT[\s]+|[\s]*IMPORT[\s]+)[\s]+user[\s]+(?<username>[^,]*),[\s]+host[\s]+(?<shost>[^,]*),[\s]+local[\s]+(?<filename>[^,]*),[\s]+remote[\s]+(?<info>.*)$" }
				id => "message-00006"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "FTP EXPORT/IMPORT"
					"[event][id]" => "00006"
					"[rsa][message][id1]" => "00006"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:01
		# line in RSA: <agent>[<process_id>]: ftp: <action>: Operation not permitted.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ftp: %{action}: Operation not permitted." }
				id => "message-00006:01"
				add_field => {
					"[event][id]" => "00006:01"
					"[rsa][message][id1]" => "00006:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006:02
		# line in RSA:  <agent>[<process_id>]: <action>: <filename>: <context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: %{filename}: %{context}" }
				id => "message-00006:02"
				add_field => {
					"[event][id]" => "00006:02"
					"[rsa][message][id1]" => "00006:02"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ftpd" {
		# MESSAGE 00002:14
		# line in RSA:  <agent>[<process_id>]: User <username> timed out <result> at <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} timed out %{result} at %{event_time_string}" }
				id => "message-00002:14"
				add_field => {
				"event_description" => "User timeout"
					"[event][id]" => "00002:14"
					"[rsa][message][id1]" => "00002:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:13
		# line in RSA:  <agent>[<process_id>]: FTPD: { EXPORT | IMPORT } file local <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+FTPD:[\s]+([\s]*EXPORT[\s]+|[\s]*IMPORT[\s]+)[\s]+file[\s]+local[\s]+(?<filename>.*)$" }
				id => "message-00002:13"
				add_field => {
				"event_description" => "ftpd Export/Import file"
					"[event][id]" => "00002:13"
					"[rsa][message][id1]" => "00002:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:12
		# line in RSA:  <agent>[<process_id>]: connection from {::ffff:<saddr>|<shost>} at <event_time_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+connection[\s]+from[\s]+(::ffff:(?<saddr>[^\s]*)|(?<shost>[^\s]*))[\s]+at[\s]+(?<event_time_string>.*)$" }
				id => "message-00002:12"
				add_field => {
				"event_description" => "new connection"
					"[event][id]" => "00002:12"
					"[rsa][message][id1]" => "00002:12"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:11
		# line in RSA:  <agent>[<process_id>]: [<application>] Error in getting TGT 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{application}] Error in getting TGT" }
				id => "message-00002:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Error in getting TGT"
					"[event][id]" => "00002:11"
					"[rsa][message][id1]" => "00002:11"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002
		# line in RSA:  <agent>[<process_id>]: FTP LOGIN FROM <saddr>, <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FTP LOGIN FROM %{saddr}, %{username}" }
				id => "message-00002"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "ftpd login"
				"protocol" => "FTP"
					"[event][id]" => "00002"
					"[rsa][message][id1]" => "00002"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:01
		# line in RSA:  <agent>[<process_id>]: <fld1> Opening data connection for <filename> (<bytes> bytes)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Opening data connection for %{filename} (%{bytes} bytes)" }
				id => "message-00002:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "ftpd - open data connection"
					"[event][id]" => "00002:01"
					"[rsa][message][id1]" => "00002:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:02
		# line in RSA:  <agent>[<process_id>]: <fld1> Opening data connection for <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Opening data connection for %{filename}" }
				id => "message-00002:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "ftpd - open data connection"
					"[event][id]" => "00002:02"
					"[rsa][message][id1]" => "00002:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:03
		# line in RSA:  <agent>[<process_id>]: <fld1> User <username> logged in.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} User %{username} logged in." }
				id => "message-00002:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "ftpd - user login"
					"[event][id]" => "00002:03"
					"[rsa][message][id1]" => "00002:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:05
		# line in RSA:  <agent>[<process_id>]: <fld1> Your password has been expired for too long. <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Your password has been expired for too long. %{info}" }
				id => "message-00002:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "pasword expired for too long"
					"[event][id]" => "00002:05"
					"[rsa][message][id1]" => "00002:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:06
		# line in RSA:  <agent>[<process_id>]: <fld1> You entered an invalid login name or password. <fld2> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} You entered an invalid login name or password. %{fld2} %{info}" }
				id => "message-00002:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Login Failure - invalid login name or password"
					"[event][id]" => "00002:06"
					"[rsa][message][id1]" => "00002:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:07
		# line in RSA:  <agent>[<process_id>]: <fld1> There have been too many unsuccessful login attempts; <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} There have been too many unsuccessful login attempts; %{info}" }
				id => "message-00002:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "t00 many unsuccessful login attempts"
					"[event][id]" => "00002:07"
					"[rsa][message][id1]" => "00002:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:08
		# line in RSA:  <agent>[<process_id>]: <fld1> Your password will expire: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Your password will expire: %{info}" }
				id => "message-00002:08"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "password expiration notification"
					"[event][id]" => "00002:08"
					"[rsa][message][id1]" => "00002:08"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:09
		# line in RSA:  <agent>[<process_id>]: <fld1> Your password has expired. <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} Your password has expired. %{info}" }
				id => "message-00002:09"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "password expired"
					"[event][id]" => "00002:09"
					"[rsa][message][id1]" => "00002:09"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:04
		# line in RSA:  <agent>[<process_id>]: command: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: command: %{event_description}" }
				id => "message-00002:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
					"[event][id]" => "00002:04"
					"[rsa][message][id1]" => "00002:04"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:15
		# line in RSA:  <agent>[<process_id>]: Last unsuccessful login: <fld1> <fld2> <fld3> <fld4> <fld5> on <protocol> from <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Last unsuccessful login: %{fld1} %{fld2} %{fld3} %{fld4} %{fld5} on %{protocol} from %{hostip}" }
				id => "message-00002:15"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00002:15"
					"[rsa][message][id1]" => "00002:15"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:16
		# line in RSA:  <agent>[<process_id>]: Last login: <fld1> <fld2> <fld3> <fld4> <fld5> on <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Last login: %{fld1} %{fld2} %{fld3} %{fld4} %{fld5} on %{protocol}" }
				id => "message-00002:16"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
					"[event][id]" => "00002:16"
					"[rsa][message][id1]" => "00002:16"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:17
		# line in RSA:  <agent>[<process_id>]: ANONYMOUS FTP LOGIN FROM <hostip>, <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ANONYMOUS FTP LOGIN FROM %{hostip}, %{fld1}" }
				id => "message-00002:17"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
					"[event][id]" => "00002:17"
					"[rsa][message][id1]" => "00002:17"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:18
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00002:18"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00002:18"
					"[rsa][message][id1]" => "00002:18"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "GoAgent" {
		# MESSAGE 00340
		# line in RSA: <agent>[<process_id>] <interface>: <username> Password change (<fld1>) Failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}] %{interface}: %{username} Password change (%{fld1}) Failed" }
				id => "message-00340"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "password change failure"
					"[event][id]" => "00340"
					"[rsa][message][id1]" => "00340"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00340:01
		# line in RSA: <agent>[<process_id>] <interface>: <username> Password change (<fld1>) OK
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}] %{interface}: %{username} Password change (%{fld1}) OK" }
				id => "message-00340:01"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "password successfully changed"
					"[event][id]" => "00340:01"
					"[rsa][message][id1]" => "00340:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00340:02
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00340:02"
				add_field => {
					"[event][id]" => "00340:02"
					"[rsa][message][id1]" => "00340:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gated" {
		# MESSAGE 01113:17
		# line in RSA:  <agent>[<process_id>]: KRT RECV MSG    <hostip>      router <saddr>  flags <<HOST STATIC BROADCAST><fld1>: ignoring
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: KRT RECV MSG    %{hostip}      router %{saddr}  flags <HOST STATIC BROADCAST>%{fld1}: ignoring" }
				id => "message-01113:17"
				add_field => {
				"event_description" => "gated - KRT RECV MSG"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:17"
					"[rsa][message][id1]" => "01113:17"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:16
		# line in RSA:  <agent>[<process_id>]: Exit gated[<fld1>] <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Exit gated[%{fld1}] %{version}" }
				id => "message-01113:16"
				add_field => {
				"event_description" => "gated - Exit"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:16"
					"[rsa][message][id1]" => "01113:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:15
		# line in RSA:  <agent>[<process_id>]: snmp_connect: CONNECT: <application>: systemError [<result>: <info>] (<context>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: snmp_connect: CONNECT: %{application}: systemError [%{result}: %{info}] (%{context})" }
				id => "message-01113:15"
				add_field => {
				"event_description" => "gated - snmp_connect - systemError"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:15"
					"[rsa][message][id1]" => "01113:15"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:14
		# line in RSA:  <agent>[<process_id>]: OSPF RECV Area <interface> -> <hostip>: IP: bad destination
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: OSPF RECV Area %{interface} -> %{hostip}: IP: bad destination" }
				id => "message-01113:14"
				add_field => {
				"event_description" => "gated - bad destination"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:14"
					"[rsa][message][id1]" => "01113:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:13
		# line in RSA:  <agent>[<process_id>]: OSPF RECV Area <interface> -> <hostip>: { LS ACK: | LS UPD: } neighbor state low
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+OSPF[\s]+RECV[\s]+Area[\s]+(?<interface>[^\s]*)[\s]+\->[\s]+(?<hostip>[^:]*):[\s]+([\s]*LS[\s]+ACK:[\s]+|[\s]*LS[\s]+UPD:[\s]+)[\s]+neighbor[\s]+state[\s]+low$" }
				id => "message-01113:13"
				add_field => {
				"event_description" => "gated - neighbor state low"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:13"
					"[rsa][message][id1]" => "01113:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113
		# line in RSA: <agent>[<process_id>]: Start gated[<fld25>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Start gated[%{fld25}] %{info}" }
				id => "message-01113"
				add_field => {
				"event_description" => "Start Gated"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113"
					"[rsa][message][id1]" => "01113"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:01
		# line in RSA: <agent>[<process_id>]: parse: <info> gateway not a host address on an attached network: '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: parse: %{info} gateway not a host address on an attached network: '%{saddr}'" }
				id => "message-01113:01"
				add_field => {
				"event_description" => "Gateway not a host address on attatched network"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:01"
					"[rsa][message][id1]" => "01113:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:02
		# line in RSA: <agent>[<process_id>]: inet_init: *WARNING* IP forwarding disabled!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: inet_init: *WARNING* IP forwarding disabled!" }
				id => "message-01113:02"
				add_field => {
				"event_description" => "Ip forwarding disabled"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:02"
					"[rsa][message][id1]" => "01113:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:03
		# line in RSA: <agent>[<process_id>]: rt_add: interface not found for <dinterface> gw <saddr> Kernel
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rt_add: interface not found for %{dinterface} gw %{saddr} Kernel" }
				id => "message-01113:03"
				add_field => {
				"event_description" => "Route add interface not found"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:03"
					"[rsa][message][id1]" => "01113:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:04
		# line in RSA: <agent>[<process_id>]: KRT READ REMNANT <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: KRT READ REMNANT %{event_description}" }
				id => "message-01113:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:04"
					"[rsa][message][id1]" => "01113:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:05
		# line in RSA: <agent>[<process_id>]: Commence routing updates
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Commence routing updates" }
				id => "message-01113:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:05"
					"[rsa][message][id1]" => "01113:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:06
		# line in RSA: <agent>[<process_id>]: task_get_proto: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: task_get_proto: %{info}" }
				id => "message-01113:06"
				add_field => {
				"event_description" => "Route add interface not found"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:06"
					"[rsa][message][id1]" => "01113:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:07
		# line in RSA: <agent>[<process_id>]: rt_add: <info> will not be propagated <interface> gw <saddr> { Kernel | Direct }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+rt_add:[\s]+(?<info>[^\s]*)[\s]+will[\s]+not[\s]+be[\s]+propagated[\s]+(?<interface>[^\s]*)[\s]+gw[\s]+(?<saddr>[^\s]*)[\s]+([\s]*Kernel[\s]+|[\s]*Direct[\s]+)$" }
				id => "message-01113:07"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:07"
					"[rsa][message][id1]" => "01113:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:09
		# line in RSA: <agent>[<process_id>]: krt_xaddrs: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: krt_xaddrs: %{event_description}" }
				id => "message-01113:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:09"
					"[rsa][message][id1]" => "01113:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:10
		# line in RSA: <agent>[<process_id>]: EVENT <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: EVENT %{info}" }
				id => "message-01113:10"
				add_field => {
				"event_description" => "EVENT"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:10"
					"[rsa][message][id1]" => "01113:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:11
		# line in RSA: <agent>[<process_id>]: parse: <info> statement out of order
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: parse: %{info} statement out of order" }
				id => "message-01113:11"
				add_field => {
				"event_description" => "gated.conf-statement out of order"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:11"
					"[rsa][message][id1]" => "01113:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:12
		# line in RSA:  <agent>[<process_id>]: parse_parse: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: parse_parse: %{info}" }
				id => "message-01113:12"
				add_field => {
				"event_description" => "gated - parsing errors"
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:12"
					"[rsa][message][id1]" => "01113:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01113:18
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01113:18"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01113:18"
					"[rsa][message][id1]" => "01113:18"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gconfd" {
		# MESSAGE 01117
		# line in RSA: <agent> (<username>-<process_id>): GConf server is not in use, shutting down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}-%{process_id}): GConf server is not in use, shutting down." }
				id => "message-01117"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "GConf server is not in use, shutting down."
					"[event][id]" => "01117"
					"[rsa][message][id1]" => "01117"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01117:01
		# line in RSA: <agent> (<username>-<process_id>): Exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}-%{process_id}): Exiting" }
				id => "message-01117:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Exiting"
					"[event][id]" => "01117:01"
					"[rsa][message][id1]" => "01117:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01117:02
		# line in RSA: <agent> (<username>-<process_id>): starting (version <version>), pid <fld53> user '<fld54>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}-%{process_id}): starting (version %{version}), pid %{fld53} user '%{fld54}'" }
				id => "message-01117:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting"
					"[event][id]" => "01117:02"
					"[rsa][message][id1]" => "01117:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01117:03
		# line in RSA: <agent> (<username>-<process_id>): Failed to get lock for daemon, exiting: Failed to lock '<filename>': <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}-%{process_id}): Failed to get lock for daemon, exiting: Failed to lock '%{filename}': %{info}" }
				id => "message-01117:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to get lock for daemon, exiting"
					"[event][id]" => "01117:03"
					"[rsa][message][id1]" => "01117:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01117:04
		# line in RSA: <agent> (<username>-<process_id>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}-%{process_id}): %{event_description}" }
				id => "message-01117:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01117:04"
					"[rsa][message][id1]" => "01117:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "getty" {
		# MESSAGE 01045
		# line in RSA:  <agent>[<process_id>]: <terminal>: 3004-034 TSM: All possible term settings tried unsuccessfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{terminal}: 3004-034 TSM: All possible term settings tried unsuccessfully." }
				id => "message-01045"
				add_field => {
				"event_description" => "3004-034 TSM: All possible term settings tried unsuccessfully"
					"[event][id]" => "01045"
					"[rsa][message][id1]" => "01045"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01062
		# line in RSA:  <agent>[<process_id>]: 3004-035 TSM: write to <terminal> failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: 3004-035 TSM: write to %{terminal} failed." }
				id => "message-01062"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "3004-035 TSM: terminal write failure"
					"[event][id]" => "01062"
					"[rsa][message][id1]" => "01062"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId258
	# line in RSA:  <agent>[<process_id>]: <hostname> '<action>' has been executed
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} '%{action}' has been executed" }
			id => "msgParserId258"
			add_field => {
				"event_description" => "host service executed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId259
	# line in RSA: <agent>[<process_id>]: <filename>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId259" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{filename}: %{event_description}" }
			id => "msgParserId259"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId260
	# line in RSA:  <agent>[<process_id>]: "<action>" executed by root
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: \"%{action}\" executed by root" }
			id => "msgParserId260"
			add_field => {
				"event_description" => "shell executed by root"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "guard_tap" {
		# MESSAGE 00730
		# line in RSA: <agent>[<process_id>]: Delayed server connection to <daddr> error: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Delayed server connection to %{daddr} error: %{info}" }
				id => "message-00730"
				add_field => {
				"event_description" => "Delayed server connection"
					"[event][id]" => "00730"
					"[rsa][message][id1]" => "00730"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:01
		# line in RSA: <agent>[<process_id>]: Guardium TAP starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Guardium TAP starting" }
				id => "message-00730:01"
				add_field => {
				"event_description" => "Guardium TAP starting"
					"[event][id]" => "00730:01"
					"[rsa][message][id1]" => "00730:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:03
		# line in RSA: <agent>[<process_id>]: Guardium TAP exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Guardium TAP exiting" }
				id => "message-00730:03"
				add_field => {
				"event_description" => "Guardium TAP exiting"
					"[event][id]" => "00730:03"
					"[rsa][message][id1]" => "00730:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:04
		# line in RSA:  <agent>[<process_id>]: Got new configuration
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Got new configuration" }
				id => "message-00730:04"
				add_field => {
				"event_description" => " Got new configuration"
					"[event][id]" => "00730:04"
					"[rsa][message][id1]" => "00730:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:05
		# line in RSA:  <agent>[<process_id>]: No Kernel Interception methods chosen
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: No Kernel Interception methods chosen" }
				id => "message-00730:05"
				add_field => {
				"event_description" => "No Kernel Interception methods chosen"
					"[event][id]" => "00730:05"
					"[rsa][message][id1]" => "00730:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:02
		# line in RSA:  <agent>[<process_id>]: shmctl: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: shmctl: %{info}" }
				id => "message-00730:02"
				add_field => {
				"event_description" => " shmctl Invalid argument"
					"[event][id]" => "00730:02"
					"[rsa][message][id1]" => "00730:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:06
		# line in RSA:  <agent>[<process_id>]: SQLguard socket {read|write}: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+SQLguard[\s]+socket[\s]+(read|write):[\s]+(?<info>.*)$" }
				id => "message-00730:06"
				add_field => {
				"event_description" => " SQLguard socket {read|write} Connection reset by peer"
					"[event][id]" => "00730:06"
					"[rsa][message][id1]" => "00730:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00730:07
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00730:07"
				add_field => {
					"[event][id]" => "00730:07"
					"[rsa][message][id1]" => "00730:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId268
	# line in RSA:  <agent>[<process_id>]: <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId268" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application}: %{event_description}" }
			id => "msgParserId268"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId269
	# line in RSA: <agent>[ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId269" {
		dissect {
			mapping => { "message" => "%{agent}[ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId269"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId270
	# line in RSA: <agent>[<process_id>]: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId270" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}" }
			id => "msgParserId270"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId271
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId271" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId271"
			add_field => {
				"agent" => "IBM Ultrium"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId272
	# line in RSA: <agent>[<process_id>]: VCS ERROR <event_description>
	else if [logstash][msgparser][id] == "msgParserId272" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: VCS ERROR %{event_description}" }
			id => "msgParserId272"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId273
	# line in RSA: <agent>: <event_description>: port=<network_port>
	else if [logstash][msgparser][id] == "msgParserId273" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: port=%{network_port}" }
			id => "msgParserId273"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId274
	# line in RSA: <agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId274" {
		dissect {
			mapping => { "message" => "%{agent} %{event_description}" }
			id => "msgParserId274"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId275
	# line in RSA:   <agent>: [<fld20> <fld21> <fld22> <fld23> <fld25>] [<severity>] [client <saddr>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId275" {
		dissect {
			mapping => { "message" => "%{agent}: [%{fld20} %{fld21} %{fld22} %{fld23} %{fld25}] [%{severity}] [client %{saddr}] %{event_description}" }
			id => "msgParserId275"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "hags" {
		# MESSAGE 01114
		# line in RSA: <agent>.<fld10>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}.%{fld10}[%{process_id}]: %{event_description}" }
				id => "message-01114"
				add_field => {
					"[event][id]" => "01114"
					"[rsa][message][id1]" => "01114"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01114:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01114:01"
				add_field => {
					"[event][id]" => "01114:01"
					"[rsa][message][id1]" => "01114:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "hagsglsm" {
		# MESSAGE 01105
		# line in RSA: <agent>.<fld10>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}.%{fld10}[%{process_id}]: %{event_description}" }
				id => "message-01105"
				add_field => {
					"[event][id]" => "01105"
					"[rsa][message][id1]" => "01105"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01105:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01105:01"
				add_field => {
					"[event][id]" => "01105:01"
					"[rsa][message][id1]" => "01105:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId277
	# line in RSA:  <agent>: [<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId277" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}]: %{event_description}" }
			id => "msgParserId277"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId278
	# line in RSA: <agent>[<process_id>]: <event_description>. Lookup HORCM startup log <filename> for details 
	else if [logstash][msgparser][id] == "msgParserId278" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}. Lookup HORCM startup log %{filename} for details" }
			id => "msgParserId278"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId279
	# line in RSA:  <agent>: <shost>; Comp: <service>; Sev: <severity>; Evt: <resultcode>; Time: <event_time_string>; Msg:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId279" {
		dissect {
			mapping => { "message" => "%{agent}: %{shost}; Comp: %{service}; Sev: %{severity}; Evt: %{resultcode}; Time: %{event_time_string}; Msg:  %{event_description}" }
			id => "msgParserId279"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId280
	# line in RSA:  <agent>: <event_description> { - | / } <filename>
	else if [logstash][msgparser][id] == "msgParserId280" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+([\s]*\-[\s]+|[\s]*/[\s]+)[\s]+(?<filename>.*)$" }
			id => "msgParserId280"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd" {
		# MESSAGE 00318
		# line in RSA: <agent>[<process_id>]: [<severity>] [client <saddr>] user <username>: <action> for "<interface>": <info>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] [client %{saddr}] user %{username}: %{action} for \"%{interface}\": %{info}" }
				id => "message-00318"
				add_field => {
					"[event][id]" => "00318"
					"[rsa][message][id1]" => "00318"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00318:01
		# line in RSA: <agent>[<process_id>]: [<severity>] [client <saddr>] <event_description>: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{severity}] [client %{saddr}] %{event_description}: %{filename}" }
				id => "message-00318:01"
				add_field => {
					"[event][id]" => "00318:01"
					"[rsa][message][id1]" => "00318:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId283
	# line in RSA:  <agent>:  <event_description> 
	else if [logstash][msgparser][id] == "msgParserId283" {
		dissect {
			mapping => { "message" => "%{agent}:  %{event_description}" }
			id => "msgParserId283"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA:  <agent>[<process_id>]: Usage Error. <event_description>.
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Usage Error. %{event_description}." }
			id => "msgParserId284"
			add_field => {
				"hostname" => "%{hhost}"
				"result" => "Usage Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA:  <agent>: <resultcode>: <service>: Error with connect : <result> (errno=<fld1>) 
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "%{agent}: %{resultcode}: %{service}: Error with connect : %{result} (errno=%{fld1})" }
			id => "msgParserId285"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error with connect"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "imapd" {
		# MESSAGE 01086
		# line in RSA:  <agent>: Connection, { user=<user_address> ip= | ip= }[<fld87>:<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+Connection,[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\]$" }
				id => "message-01086"
				add_field => {
				"event_description" => "connection"
				"hostname" => "%{hhost}"
					"[event][id]" => "01086"
					"[rsa][message][id1]" => "01086"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01086:01
		# line in RSA:   <agent>: { DISCONNECTED | Disconnected }, { user=<user_address> ip= | ip= }[<fld87>:<saddr>], time=<fld11>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*DISCONNECTED[\s]+|[\s]*Disconnected[\s]+),[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+time=(?<fld11>.*)$" }
				id => "message-01086:01"
				add_field => {
				"event_description" => "session disconnect"
				"hostname" => "%{hhost}"
					"[event][id]" => "01086:01"
					"[rsa][message][id1]" => "01086:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01086:02
		# line in RSA:   <agent>: LOGIN, user=<username>, ip=[<fld87>:<saddr>], protocol=<protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LOGIN, user=%{username}, ip=[%{fld87}:%{saddr}], protocol=%{protocol}" }
				id => "message-01086:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "01086:02"
					"[rsa][message][id1]" => "01086:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01086:03
		# line in RSA:  <agent>: LOGOUT, { user=<user_address> ip= | ip= }[<fld87>:<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+LOGOUT,[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\]$" }
				id => "message-01086:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "user logout"
				"hostname" => "%{hhost}"
					"[event][id]" => "01086:03"
					"[rsa][message][id1]" => "01086:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01086:04
		# line in RSA:   <agent>: LOGIN FAILED, user=<user_address>, ip=[<fld87>:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LOGIN FAILED, user=%{user_address}, ip=[%{fld87}:%{saddr}]" }
				id => "message-01086:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "login failure"
					"[event][id]" => "01086:04"
					"[rsa][message][id1]" => "01086:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01086:05
		# line in RSA:  <agent>: TIMEOUT, { user=<user_address> ip= | ip= }[<fld87>:<saddr>], headers=<fld12>, body=<fld13>, time=<fld14>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+TIMEOUT,[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+headers=(?<fld12>[^,]*),[\s]+body=(?<fld13>[^,]*),[\s]+time=(?<fld14>.*)$" }
				id => "message-01086:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "session timeout"
				"hostname" => "%{hhost}"
					"[event][id]" => "01086:05"
					"[rsa][message][id1]" => "01086:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01086:06
		# line in RSA:   <agent>: <info>: No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}: No such file or directory" }
				id => "message-01086:06"
				add_field => {
				"event_description" => "file or directory not found"
				"hostname" => "%{hhost}"
					"[event][id]" => "01086:06"
					"[rsa][message][id1]" => "01086:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "imapd-ssl" {
		# MESSAGE 01087
		# line in RSA:  <agent>: LOGOUT, { user=<user_address> ip= | ip= }[<fld87>:<saddr>], headers=<fld12>, body=<fld13>, time=<fld14>, starttls=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+LOGOUT,[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+headers=(?<fld12>[^,]*),[\s]+body=(?<fld13>[^,]*),[\s]+time=(?<fld14>[^,]*),[\s]+starttls=(?<fld15>.*)$" }
				id => "message-01087"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "user logout"
				"hostname" => "%{hhost}"
					"[event][id]" => "01087"
					"[rsa][message][id1]" => "01087"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01087:01
		# line in RSA:   <agent>: { DISCONNECTED | Disconnected }, { user=<user_address> ip= | ip= }[<fld87>:<saddr>], headers=<fld12>, body=<fld13>, time=<fld14>, starttls=<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*DISCONNECTED[\s]+|[\s]*Disconnected[\s]+),[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+headers=(?<fld12>[^,]*),[\s]+body=(?<fld13>[^,]*),[\s]+time=(?<fld14>[^,]*),[\s]+starttls=(?<fld15>.*)$" }
				id => "message-01087:01"
				add_field => {
				"event_description" => "session disconnect"
				"hostname" => "%{hhost}"
					"[event][id]" => "01087:01"
					"[rsa][message][id1]" => "01087:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01087:02
		# line in RSA:   <agent>: Unexpected SSL connection shutdown
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Unexpected SSL connection shutdown" }
				id => "message-01087:02"
				add_field => {
				"event_description" => "Unexpected SSL connection shutdown"
				"hostname" => "%{hhost}"
					"[event][id]" => "01087:02"
					"[rsa][message][id1]" => "01087:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01087:03
		# line in RSA:   <agent>: Connection, { user=<user_address> ip= | ip= }[::<fld87>:<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+Connection,[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[::(?<fld87>[^:]*):(?<saddr>[^\]]*)\]$" }
				id => "message-01087:03"
				add_field => {
				"event_description" => "connection"
				"hostname" => "%{hhost}"
					"[event][id]" => "01087:03"
					"[rsa][message][id1]" => "01087:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01087:04
		# line in RSA:  <agent>: LOGIN, user=<username>, ip=[::<fld87>:<saddr>], protocol=<protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LOGIN, user=%{username}, ip=[::%{fld87}:%{saddr}], protocol=%{protocol}" }
				id => "message-01087:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "01087:04"
					"[rsa][message][id1]" => "01087:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId298"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA: <agent>[<process_id>]: <severity>: Illegal address syntax from <shost>[<saddr>] <info>
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Illegal address syntax from %{shost}[%{saddr}] %{info}" }
			id => "msgParserId299"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA:  <agent>: File <filename> deleted because <result>.
	else if [logstash][msgparser][id] == "msgParserId300" {
		dissect {
			mapping => { "message" => "%{agent}: File %{filename} deleted because %{result}." }
			id => "msgParserId300"
			add_field => {
				"event_description" => "file deleted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA: Interactive mode off.
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "Interactive mode off." }
			id => "msgParserId301"
			add_field => {
				"event_description" => "Interactive mode off."
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ISS" {
		# MESSAGE 00435:01
		# line in RSA:  <agent>[<process_id>]: the user option: <param> is invalid 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: the user option: %{param} is invalid" }
				id => "message-00435:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ISS - user option invalid"
					"[event][id]" => "00435:01"
					"[rsa][message][id1]" => "00435:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00435
		# line in RSA: <agent>[<process_id>]: (<interface>) <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: (%{interface}) %{info}" }
				id => "message-00435"
				add_field => {
				"event_description" => "ISS activity"
					"[event][id]" => "00435"
					"[rsa][message][id1]" => "00435"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "issDaemon" {
		# MESSAGE 00040
		# line in RSA: <agent>[<process_id>]: <event_description>: Using action configuration from '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: Using action configuration from '%{filename}'" }
				id => "message-00040"
				add_field => {
					"[event][id]" => "00040"
					"[rsa][message][id1]" => "00040"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01064
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Access Denied: User <username> is not in the role <administrator>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Access[\s]+Denied:[\s]+User[\s]+(?<username>[^\s]*)[\s]+is[\s]+not[\s]+in[\s]+the[\s]+role[\s]+(?<administrator>[^\.]*)\.$" }
				id => "message-01064"
				add_field => {
				"action" => "Access Denied - User not in corect role "
					"[event][id]" => "01064"
					"[rsa][message][id1]" => "01064"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01065
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } MasterConsole request from '<username>' refused, <result>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+MasterConsole[\s]+request[\s]+from[\s]+'(?<username>[^']*)'[\s]+refused,[\s]+(?<result>[^\.]*)\.$" }
				id => "message-01065"
				add_field => {
				"action" => "MasterConsole request refused"
					"[event][id]" => "01065"
					"[rsa][message][id1]" => "01065"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01066
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Error [<fld1>], <event_description>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Error[\s]+\[(?<fld1>[^\]]*)\],[\s]+(?<event_description>[^\.]*)\.$" }
				id => "message-01066"
				add_field => {
				"action" => "issDaemon error"
					"[event][id]" => "01066"
					"[rsa][message][id1]" => "01066"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01067
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-01067"
				add_field => {
					"[event][id]" => "01067"
					"[rsa][message][id1]" => "01067"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId308
	# line in RSA: <agent>[<process_id>]: <severity> : (<fld15>) <event_description>: Error Code=<resultcode>, Can't access <directory>
	else if [logstash][msgparser][id] == "msgParserId308" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} : (%{fld15}) %{event_description}: Error Code=%{resultcode}, Can't access %{directory}" }
			id => "msgParserId308"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId309
	# line in RSA:   <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId309" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId309"
			add_field => {
				"username" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA:  <agent>[<process_id>]: Authentication failure for <username> (invoked by uid <uid>)
	else if [logstash][msgparser][id] == "msgParserId310" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Authentication failure for %{username} (invoked by uid %{uid})" }
			id => "msgParserId310"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId311
	# line in RSA:  <agent>[<process_id>]: Login failure for user <username> from <saddr> : <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId311" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Login failure for user %{username} from %{saddr} : %{fld1} %{event_description}" }
			id => "msgParserId311"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA:  <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId312"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "kde(pam_unix)" {
		# MESSAGE 00375
		# line in RSA:  <agent>[<process_id>]: session opened for user <username> by (uid=<uid>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (uid=%{uid})" }
				id => "message-00375"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00375"
					"[rsa][message][id1]" => "00375"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00375:01
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00375:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00375:01"
					"[rsa][message][id1]" => "00375:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA: <agent>: Badness in <action> at <info>
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "%{agent}: Badness in %{action} at %{info}" }
			id => "msgParserId314"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "klogind" {
		# MESSAGE 01076
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Authentication failed from <saddr> (<shost>): <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Authentication[\s]+failed[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+\((?<shost>[^\)]*)\):[\s]+(?<result>.*)$" }
				id => "message-01076"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication failed"
					"[event][id]" => "01076"
					"[rsa][message][id1]" => "01076"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01076:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Kerberos authentication failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Kerberos[\s]+authentication[\s]+failed$" }
				id => "message-01076:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Kerberos Authentication failed"
					"[event][id]" => "01076:01"
					"[rsa][message][id1]" => "01076:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01076:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } User <username> is not authorized to login to account <profile>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+User[\s]+(?<username>[^\s]*)[\s]+is[\s]+not[\s]+authorized[\s]+to[\s]+login[\s]+to[\s]+account[\s]+(?<profile>.*)$" }
				id => "message-01076:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "User not authorized to login"
					"[event][id]" => "01076:02"
					"[rsa][message][id1]" => "01076:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId318
	# line in RSA: <agent>[<process_id>]: <event_description>: <filename>: A file or directory in the path name does not exist.
	else if [logstash][msgparser][id] == "msgParserId318" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{filename}: A file or directory in the path name does not exist." }
			id => "msgParserId318"
			add_field => {
				"info" => "File/directory not found."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA:  last message repeated <dclass_counter1> times 
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "last message repeated %{dclass_counter1} times" }
			id => "msgParserId319"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId320
	# line in RSA:  <agent>: ldapsync <event_description>
	else if [logstash][msgparser][id] == "msgParserId320" {
		dissect {
			mapping => { "message" => "%{agent}: ldapsync %{event_description}" }
			id => "msgParserId320"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId321
	# line in RSA:  <agent>: <service> Internal error: <result>
	else if [logstash][msgparser][id] == "msgParserId321" {
		dissect {
			mapping => { "message" => "%{agent}: %{service} Internal error: %{result}" }
			id => "msgParserId321"
			add_field => {
				"event_description" => "Internal error"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId322
	# line in RSA: <agent>: <hostname>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId322" {
		dissect {
			mapping => { "message" => "%{agent}: %{hostname}: %{event_description}" }
			id => "msgParserId322"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lim" {
		# MESSAGE 01328
		# line in RSA:  <agent>[<process_id>]: System daemon <service> is down on host <<<shost>> in cluster <<<domain>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: System daemon %{service} is down on host <%{shost}> in cluster <%{domain}>" }
				id => "message-01328"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "System daemon is down on host in cluster"
					"[event][id]" => "01328"
					"[rsa][message][id1]" => "01328"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01328:01
		# line in RSA:  <agent>[<process_id>]: <service>: execv(<action>) failed, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: execv(%{action}) failed, %{result}" }
				id => "message-01328:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "service failure"
					"[event][id]" => "01328:01"
					"[rsa][message][id1]" => "01328:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId325
	# line in RSA: <agent>: [ID <id> <event_source>.<severity>] Message from pid <process_id>, <event_description> 
	else if [logstash][msgparser][id] == "msgParserId325" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Message from pid %{process_id}, %{event_description}" }
			id => "msgParserId325"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId326
	# line in RSA: Local directory now <directory> <info> <filename>: No such file or directory.
	else if [logstash][msgparser][id] == "msgParserId326" {
		dissect {
			mapping => { "message" => "Local directory now %{directory} %{info} %{filename}: No such file or directory." }
			id => "msgParserId326"
			add_field => {
				"event_description" => "set Local directory"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "logged_i" {
		# MESSAGE 00473:01
		# line in RSA:  <agent>: User <username> has logged in  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: User %{username} has logged in" }
				id => "message-00473:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "00473:01"
					"[rsa][message][id1]" => "00473:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00473
		# line in RSA:  <agent>: <username> logged in from <saddr> at <fld20> <fld21> <fld22> <fld23> <fld24> <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} logged in from %{saddr} at %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25}" }
				id => "message-00473"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "00473"
					"[rsa][message][id1]" => "00473"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 00473:02
		# line in RSA:  <agent>: <username> logged in successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} logged in successfully" }
				id => "message-00473:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "00473:02"
					"[rsa][message][id1]" => "00473:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00473:03
		# line in RSA:  <agent>: <username> logged in
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} logged in" }
				id => "message-00473:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "00473:03"
					"[rsa][message][id1]" => "00473:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE 01033
		# line in RSA:  <agent>[<process_id>]: 3004-035 TSM: write to <terminal> failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: 3004-035 TSM: write to %{terminal} failed." }
				id => "message-01033"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "3004-035 TSM: terminal write failure"
					"[event][id]" => "01033"
					"[rsa][message][id1]" => "01033"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00120
		# line in RSA:  <agent>: <username> login on <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} login on %{terminal}" }
				id => "message-00120"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "00120"
					"[rsa][message][id1]" => "00120"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "logincheck" {
		# MESSAGE 00600
		# line in RSA:  <agent>[<process_id>]: <username> with PID <fld1> is in the <filename> file
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} with PID %{fld1} is in the %{filename} file" }
				id => "message-00600"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "user logged in is in deny file"
					"[event][id]" => "00600"
					"[rsa][message][id1]" => "00600"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00600:02
		# line in RSA:  <agent>[<process_id>]: <username> with PID <fld1> has logged into the system
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} with PID %{fld1} has logged into the system" }
				id => "message-00600:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user logged had into the system"
					"[event][id]" => "00600:02"
					"[rsa][message][id1]" => "00600:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00600:03
		# line in RSA:  <agent>[<process_id>]: <username> Killed PID <fld1> - direct login not allowed for <dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} Killed PID %{fld1} - direct login not allowed for %{dhost}" }
				id => "message-00600:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "user logged had into the system but direct login not allowed"
					"[event][id]" => "00600:03"
					"[rsa][message][id1]" => "00600:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId335
	# line in RSA:  <agent>[<process_id>]: HMCL <event_description>
	else if [logstash][msgparser][id] == "msgParserId335" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: HMCL %{event_description}" }
			id => "msgParserId335"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId336
	# line in RSA:  <agent>[<process_id>]: "<process>" executed by <username> 
	else if [logstash][msgparser][id] == "msgParserId336" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: \"%{process}\" executed by %{username}" }
			id => "msgParserId336"
			add_field => {
				"event_description" => "lsof executed by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId337
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> LSSRVAL <fld1> IBM Director Alert: <info> 
	else if [logstash][msgparser][id] == "msgParserId337" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} LSSRVAL %{fld1} IBM Director Alert: %{info}" }
			id => "msgParserId337"
			add_field => {
				"event_description" => "Hardware Alert Reported"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lsassd" {
		# MESSAGE 001446
		# line in RSA:  <agent>[<process_id>]: GSSAPI Error: <info> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: GSSAPI Error: %{info} (%{result})" }
				id => "message-001446"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "GSSAPI Error"
					"[event][id]" => "001446"
					"[rsa][message][id1]" => "001446"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001447
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to load provider '<filename>' from '<application>' - error <resultcode> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to load provider '%{filename}' from '%{application}' - error %{resultcode} (%{result})" }
				id => "message-001447"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to load provider file"
					"[event][id]" => "001447"
					"[rsa][message][id1]" => "001447"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001448
		# line in RSA:  <agent>[<process_id>]: <fld>Domain '<domain>' is now offline
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}Domain '%{domain}' is now offline" }
				id => "message-001448"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Domain is now offline"
					"[event][id]" => "001448"
					"[rsa][message][id1]" => "001448"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001449
		# line in RSA:  <agent>[<process_id>]: <fld>Domain '<domain>' is now online
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}Domain '%{domain}' is now online" }
				id => "message-001449"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Domain is now online"
					"[event][id]" => "001449"
					"[rsa][message][id1]" => "001449"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001450
		# line in RSA:  <agent>[<process_id>]: <fld>:Ignoring failure enumerating trusts for forest <domain>. Error was <result> (<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Ignoring failure enumerating trusts for forest %{domain}. Error was %{result} (%{resultcode})" }
				id => "message-001450"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Ignoring failure enumerating trusts"
					"[event][id]" => "001450"
					"[rsa][message][id1]" => "001450"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001451
		# line in RSA:  <agent>[<process_id>]: <fld>:Error: Failed to change machine password for <shost> (error = <resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Error: Failed to change machine password for %{shost} (error = %{resultcode})" }
				id => "message-001451"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to change machine password fo host"
					"[event][id]" => "001451"
					"[rsa][message][id1]" => "001451"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001452
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to sync system time [error code: <resultcode>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to sync system time [error code: %{resultcode}]" }
				id => "message-001452"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to sync system time"
					"[event][id]" => "001452"
					"[rsa][message][id1]" => "001452"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001453
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to authenticate user (name = '<username>') -> error = <resultcode>, symbol = <result>, client pid = <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to authenticate user (name = '%{username}') -> error = %{resultcode}, symbol = %{result}, client pid = %{fld1}" }
				id => "message-001453"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Failed to authenticate user"
					"[event][id]" => "001453"
					"[rsa][message][id1]" => "001453"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001454
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to validate user for login (name = '<username>') -> error = <resultcode>, symbol = <result>, client pid = <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to validate user for login (name = '%{username}') -> error = %{resultcode}, symbol = %{result}, client pid = %{fld1}" }
				id => "message-001454"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Failed to validate user for login"
					"[event][id]" => "001454"
					"[rsa][message][id1]" => "001454"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001455
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to create home directory for user (<username>), actual error <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to create home directory for user (%{username}), actual error %{resultcode}" }
				id => "message-001455"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to create home directory for user"
					"[event][id]" => "001455"
					"[rsa][message][id1]" => "001455"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001456
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to open session for user (name = '<username>') -> error = <resultcode>, symbol = <result>, client pid = <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to open session for user (name = '%{username}') -> error = %{resultcode}, symbol = %{result}, client pid = %{fld1}" }
				id => "message-001456"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to open session for user"
					"[event][id]" => "001456"
					"[rsa][message][id1]" => "001456"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001457
		# line in RSA:  <agent>[<process_id>]: <fld>:<severity>: Failed to validate restricted membership. [Error code: <resultcode>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:%{severity}: Failed to validate restricted membership. [Error code: %{resultcode}]" }
				id => "message-001457"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to validate restricted membership"
					"[event][id]" => "001457"
					"[rsa][message][id1]" => "001457"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001458
		# line in RSA:  <agent>[<process_id>]: <fld>:GSS API error calling <application>(): majorStatus = <fld1> (<action>. <fld2>), minorStatus = <fld3> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:GSS API error calling %{application}(): majorStatus = %{fld1} (%{action}. %{fld2}), minorStatus = %{fld3} (%{result})" }
				id => "message-001458"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "GSS API error"
					"[event][id]" => "001458"
					"[rsa][message][id1]" => "001458"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001459
		# line in RSA:  <agent>[<process_id>]: <fld>:Dropping <dclass_counter1> events after <dclass_counter2> send attempts due to error <resultcode> while trying to talk to the eventlog.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Dropping %{dclass_counter1} events after %{dclass_counter2} send attempts due to error %{resultcode} while trying to talk to the eventlog." }
				id => "message-001459"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Dropping events after send attempts due to error trying to talk to the eventlog"
					"[event][id]" => "001459"
					"[rsa][message][id1]" => "001459"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001460
		# line in RSA:  <agent>[<process_id>]: <fld>:Failed to run provider specific request (request code = <event_type>, provider = '<service>') -> error = <resultcode>, symbol = <result>, client pid = -1
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Failed to run provider specific request (request code = %{event_type}, provider = '%{service}') -> error = %{resultcode}, symbol = %{result}, client pid = -1" }
				id => "message-001460"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to run provider specific request"
					"[event][id]" => "001460"
					"[rsa][message][id1]" => "001460"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001477
		# line in RSA:  <agent>[<process_id>]: <fld>:Unable to enumerate trusts for '<domain>' domain because <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Unable to enumerate trusts for '%{domain}' domain because %{result}" }
				id => "message-001477"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to enumerate trusts for domain"
					"[event][id]" => "001477"
					"[rsa][message][id1]" => "001477"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001478
		# line in RSA:  <agent>[<process_id>]: <fld>:<severity>: Failed to refresh machine <shost> for <domain> (error = <resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:%{severity}: Failed to refresh machine %{shost} for %{domain} (error = %{resultcode})" }
				id => "message-001478"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to refresh machine for domain"
					"[event][id]" => "001478"
					"[rsa][message][id1]" => "001478"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001479
		# line in RSA:  <agent>[<process_id>]: <fld>:Error code <resultcode> occurred during attempt <dclass_counter1> of a ldap search. <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld}:Error code %{resultcode} occurred during attempt %{dclass_counter1} of a ldap search. %{result}." }
				id => "message-001479"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error occurred during ldap search"
					"[event][id]" => "001479"
					"[rsa][message][id1]" => "001479"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ltid" {
		# MESSAGE 00207
		# line in RSA: <agent>[<process_id>]: Remote scan failed on host <dhost>, drive <fld35>, <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote scan failed on host %{dhost}, drive %{fld35}, %{event_description}" }
				id => "message-00207"
				add_field => {
					"[event][id]" => "00207"
					"[rsa][message][id1]" => "00207"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00207:01
		# line in RSA:  <agent>[<process_id>]: { LTID - Sent ROBOTIC request, <info> | LTID - received ROBOT MESSAGE, <info> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*LTID[\s]+\-[\s]+Sent[\s]+ROBOTIC[\s]+request,[\s]+(?<info>[^\s]*)[\s]+|[\s]*LTID[\s]+\-[\s]+received[\s]+ROBOT[\s]+MESSAGE,[\s]+(?<info>[^\s]*)[\s]+)$" }
				id => "message-00207:01"
				add_field => {
				"event_description" => "Sent/received ROBOT info"
					"[event][id]" => "00207:01"
					"[rsa][message][id1]" => "00207:01"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00207:02
		# line in RSA:  <agent>[<process_id>]: Request for media ID <id> is being rejected because <info> (reason = <result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Request for media ID %{id} is being rejected because %{info} (reason = %{result})" }
				id => "message-00207:02"
				add_field => {
				"event_description" => "Request for media ID rejected"
					"[event][id]" => "00207:02"
					"[rsa][message][id1]" => "00207:02"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00207:03
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00207:03"
				add_field => {
				"action" => "ltid activity"
					"[event][id]" => "00207:03"
					"[rsa][message][id1]" => "00207:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId360
	# line in RSA: <agent>: [ID <id> <event_source>.<severity>] <info>
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{info}" }
			id => "msgParserId360"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId361
	# line in RSA:  <agent>[<process_id>]: GSS-API error calling <application>: <resultcode> (<result>)
	else if [logstash][msgparser][id] == "msgParserId361" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: GSS-API error calling %{application}: %{resultcode} (%{result})" }
			id => "msgParserId361"
			add_field => {
				"event_description" => "GSS-API error calling application"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId362
	# line in RSA:  <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId362" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId362"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId363
	# line in RSA:  <agent>: Oracle Configuration Manager failed to establish a connection to Oracle. <info> 
	else if [logstash][msgparser][id] == "msgParserId363" {
		dissect {
			mapping => { "message" => "%{agent}: Oracle Configuration Manager failed to establish a connection to Oracle. %{info}" }
			id => "msgParserId363"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Oracle Configuration Manager failed to establish a connection to Oracle"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mbatchd" {
		# MESSAGE 01326
		# line in RSA:  <agent>[<process_id>]: Master daemon on host <<<shost>> dying; fatal error - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Master daemon on host <%{shost}> dying; fatal error - %{info}" }
				id => "message-01326"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Master daemon on host dying - fatal error"
					"[event][id]" => "01326"
					"[rsa][message][id1]" => "01326"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01326:01
		# line in RSA:  <agent>[<process_id>]: <service>: <application>() failed, Permission denied 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: %{application}() failed, Permission denied" }
				id => "message-01326:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "application failed - Permission denied"
					"[event][id]" => "01326:01"
					"[rsa][message][id1]" => "01326:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mbschd" {
		# MESSAGE 01327
		# line in RSA:  <agent>[<process_id>]: <event_description>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}, %{result}" }
				id => "message-01327"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01327"
					"[rsa][message][id1]" => "01327"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01327:01
		# line in RSA:  <agent>[<process_id>]: <event_description>(<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}(%{result})" }
				id => "message-01327:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01327:01"
					"[rsa][message][id1]" => "01327:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId368
	# line in RSA: <agent>[<process_id>]: <fld55> Pool member <saddr>:<sport> <event_description>
	else if [logstash][msgparser][id] == "msgParserId368" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld55} Pool member %{saddr}:%{sport} %{event_description}" }
			id => "msgParserId368"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mDNSResponder" {
		# MESSAGE 001376
		# line in RSA:  <agent> (<event_type>) (<event_time_string>) [<id>]: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{event_type}) (%{event_time_string}) [%{id}]: %{action}" }
				id => "message-001376"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "mDNSResponder build info"
					"[event][id]" => "001376"
					"[rsa][message][id1]" => "001376"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001377
		# line in RSA:  <agent>: Unable to parse DNS server list. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Unable to parse DNS server list. %{result}" }
				id => "message-001377"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to parse DNS server list"
					"[event][id]" => "001377"
					"[rsa][message][id1]" => "001377"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001378
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001378"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001378"
					"[rsa][message][id1]" => "001378"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId371
	# line in RSA:  <agent>[<process_id>]: <service>: cannot open directory <<<directory>>
	else if [logstash][msgparser][id] == "msgParserId371" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{service}: cannot open directory <%{directory}>" }
			id => "msgParserId371"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot open directory"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mf_Job_Tran" {
		# MESSAGE 00304
		# line in RSA: <agent>[<process_id>]: <interface> CRITICAL <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface} CRITICAL %{event_description}" }
				id => "message-00304"
				add_field => {
				"event_description" => "CRITICAL"
					"[event][id]" => "00304"
					"[rsa][message][id1]" => "00304"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00304:01
		# line in RSA: <agent>[<process_id>]: <interface> FATAL <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{interface} FATAL %{event_description}" }
				id => "message-00304:01"
				add_field => {
				"event_description" => "FATAL"
					"[event][id]" => "00304:01"
					"[rsa][message][id1]" => "00304:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "MicroStrategy" {
		# MESSAGE 01142
		# line in RSA:  <agent>: <application>Can not join server <<<dhost>>: possible reasons: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application}Can not join server <%{dhost}>: possible reasons: %{info}" }
				id => "message-01142"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01142"
					"[rsa][message][id1]" => "01142"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001194
		# line in RSA:   <agent>: <context>Error::<event_description>::<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{context}Error::%{event_description}::%{info}" }
				id => "message-001194"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001194"
					"[rsa][message][id1]" => "001194"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId376
	# line in RSA: <agent>[<process_id>]: Error <resultcode> <result>
	else if [logstash][msgparser][id] == "msgParserId376" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Error %{resultcode} %{result}" }
			id => "msgParserId376"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mountd" {
		# MESSAGE 00027
		# line in RSA: <agent>[<process_id>]: <action>: <info> for <process> on transport <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: %{info} for %{process} on transport %{protocol}" }
				id => "message-00027"
				add_field => {
					"[event][id]" => "00027"
					"[rsa][message][id1]" => "00027"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:01
		# line in RSA:  <agent>[<process_id>]: <action>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: %{event_description}" }
				id => "message-00027:01"
				add_field => {
					"[event][id]" => "00027:01"
					"[rsa][message][id1]" => "00027:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mp" {
		# MESSAGE 01017
		# line in RSA: <agent>[<process_id>]: <fld35>:<fld36>:terminating: Success 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld35}:%{fld36}:terminating: Success" }
				id => "message-01017"
				add_field => {
					"[event][id]" => "01017"
					"[rsa][message][id1]" => "01017"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01017:01
		# line in RSA: <agent>[<process_id>]: <fld35>:<fld36>: remque(<resultcode>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld35}:%{fld36}: remque(%{resultcode})" }
				id => "message-01017:01"
				add_field => {
					"[event][id]" => "01017:01"
					"[rsa][message][id1]" => "01017:01"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01017:02
		# line in RSA: <agent>[<process_id>]: <fld35>:<fld36>: delay before freeing pmpcb (<resultcode>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld35}:%{fld36}: delay before freeing pmpcb (%{resultcode})" }
				id => "message-01017:02"
				add_field => {
					"[event][id]" => "01017:02"
					"[rsa][message][id1]" => "01017:02"
					"[event][categoryid]" => "1601000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId382
	# line in RSA: <agent>[<process_id>]: <event_description>: Error message <result>
	else if [logstash][msgparser][id] == "msgParserId382" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: Error message %{result}" }
			id => "msgParserId382"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId383
	# line in RSA:  <agent>[<process_id>]: <fld1>: <process>: <event_description>: Error <resultcode>
	else if [logstash][msgparser][id] == "msgParserId383" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: %{process}: %{event_description}: Error %{resultcode}" }
			id => "msgParserId383"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "named" {
		# MESSAGE 00103:02
		# line in RSA: <agent>[<process_id>]: client <saddr>#<sport>: query: <domain> {IN <fld3> (<hostip>)|IN <fld1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+client[\s]+(?<saddr>[^#]*)#(?<sport>[^:]*):[\s]+query:[\s]+(?<domain>[^\s]*)[\s]+(IN[\s]+(?<fld3>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)|IN[\s]+(?<fld1>.*))$" }
				id => "message-00103:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00103:02"
					"[rsa][message][id1]" => "00103:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00191
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00191"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00191"
					"[rsa][message][id1]" => "00191"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId386
	# line in RSA: <agent>[<process_id>]: bad response to SOA query from [<saddr>], <info>
	else if [logstash][msgparser][id] == "msgParserId386" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: bad response to SOA query from [%{saddr}], %{info}" }
			id => "msgParserId386"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId387
	# line in RSA:  <agent>[<process_id>]: [<application>]:  <event_description> 
	else if [logstash][msgparser][id] == "msgParserId387" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{application}]:  %{event_description}" }
			id => "msgParserId387"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId388
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } OID:<version> Unspecified error
	else if [logstash][msgparser][id] == "msgParserId388" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+OID:(?<version>[^\s]*)[\s]+Unspecified[\s]+error$" }
			id => "msgParserId388"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unspecified error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId389
	# line in RSA:  <agent>[<process_id>]: { <application>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId389" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*(?<application>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId389"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId390
	# line in RSA:   <agent>[<process_id>]: Failed to bind to port <sport> 
	else if [logstash][msgparser][id] == "msgParserId390" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Failed to bind to port %{sport}" }
			id => "msgParserId390"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to bind to port"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "netlogond" {
		# MESSAGE 001444
		# line in RSA:  <agent>[<process_id>]: [<service>() <application>] Failed ldap search on <saddr> error=<resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{service}() %{application}] Failed ldap search on %{saddr} error=%{resultcode}" }
				id => "message-001444"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed ldap search on host"
					"[event][id]" => "001444"
					"[rsa][message][id1]" => "001444"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001445
		# line in RSA:  <agent>[<process_id>]: [<service>() <application>] DNS lookup for '<shost>' failed with errno <resultcode>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{service}() %{application}] DNS lookup for '%{shost}' failed with errno %{resultcode}, %{info}" }
				id => "message-001445"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "DNS lookup failed"
					"[event][id]" => "001445"
					"[rsa][message][id1]" => "001445"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId393
	# line in RSA:  <agent>[<process_id>]: new user: name=<username>, uid=<uid> gid=<groupid>, home=<directory>, shell=<info>
	else if [logstash][msgparser][id] == "msgParserId393" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: new user: name=%{username}, uid=%{uid} gid=%{groupid}, home=%{directory}, shell=%{info}" }
			id => "msgParserId393"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId394
	# line in RSA: <agent>: [ID <id> <event_source>.<severity>] NFS fsstat failed for server <shost>: error <resultcode> (<result>)
	else if [logstash][msgparser][id] == "msgParserId394" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] NFS fsstat failed for server %{shost}: error %{resultcode} (%{result})" }
			id => "msgParserId394"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId395
	# line in RSA:  <agent>: The controller is unable to use port <sport>. <result>. <info>.
	else if [logstash][msgparser][id] == "msgParserId395" {
		dissect {
			mapping => { "message" => "%{agent}: The controller is unable to use port %{sport}. %{result}. %{info}." }
			id => "msgParserId395"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "The controller is unable to use port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId396
	# line in RSA: <agent>[<process_id>]: "<process>" executed by <username> 
	else if [logstash][msgparser][id] == "msgParserId396" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: \"%{process}\" executed by %{username}" }
			id => "msgParserId396"
			add_field => {
				"event_description" => "nmon executed by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId397
	# line in RSA: <agent>[<process_id>]: Network option <info> was set to the value <resultcode>
	else if [logstash][msgparser][id] == "msgParserId397" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Network option %{info} was set to the value %{resultcode}" }
			id => "msgParserId397"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId398
	# line in RSA: <hostname>: <agent>: Error on <shost> (<saddr>:<sport>): <result>
	else if [logstash][msgparser][id] == "msgParserId398" {
		dissect {
			mapping => { "message" => "%{hostname}: %{agent}: Error on %{shost} (%{saddr}:%{sport}): %{result}" }
			id => "msgParserId398"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId399
	# line in RSA: <agent>[<process_id>]: <interface> <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId399" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface} %{severity} %{event_description}" }
			id => "msgParserId399"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId400
	# line in RSA: <agent>[<process_id>]: <saddr> <severity> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId400" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{saddr} %{severity} %{event_description}" }
			id => "msgParserId400"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId401
	# line in RSA: <agent>[<process_id>]: <process> <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId401" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process} %{severity} %{event_description}" }
			id => "msgParserId401"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA: <hostname> <agent>: <info> after <dclass_counter1> attempt(s)
	else if [logstash][msgparser][id] == "msgParserId402" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}: %{info} after %{dclass_counter1} attempt(s)" }
			id => "msgParserId402"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId403
	# line in RSA: <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId403" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId403"
			add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Time"
				"ec_activity" => "Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId404
	# line in RSA: {offline or reservation conflict | offline }
	else if [logstash][msgparser][id] == "msgParserId404" {
		grok {
			match => { "message" => "^(offline[\s]+or[\s]+reservation[\s]+conflict[\s]+|[\s]*offline[\s]+)$" }
			id => "msgParserId404"
			add_field => {
				"event_description" => "offline"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId405
	# line in RSA:  <agent>[<process_id>]: <hostname> opensql has been executed to <result>
	else if [logstash][msgparser][id] == "msgParserId405" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} opensql has been executed to %{result}" }
			id => "msgParserId405"
			add_field => {
				"event_description" => "opensql has been executed on host"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "opensshd" {
		# MESSAGE 00152
		# line in RSA:  <agent>[<process_id>]: Accepted publickey for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00152"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Accepted publickey for user"
					"[event][id]" => "00152"
					"[rsa][message][id1]" => "00152"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00152:02
		# line in RSA:  <agent>[<process_id>]: Accepted password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00152:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Accepted password"
					"[event][id]" => "00152:02"
					"[rsa][message][id1]" => "00152:02"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00152:01
		# line in RSA: <agent>[<process_id>]: Did not receive identification string from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Did not receive identification string from %{saddr}" }
				id => "message-00152:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection failure"
				"info" => "no id string from host"
					"[event][id]" => "00152:01"
					"[rsa][message][id1]" => "00152:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId409
	# line in RSA:  <username>: <agent>: File System <directory> on <hostname> is <dclass_ratio1> percent full, <action>
	else if [logstash][msgparser][id] == "msgParserId409" {
		dissect {
			mapping => { "message" => "%{username}: %{agent}: File System %{directory} on %{hostname} is %{dclass_ratio1} percent full, %{action}" }
			id => "msgParserId409"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId410
	# line in RSA:  <agent>: ERROR: while writing to { '<filename>': | <filename>: } [Errno <resultcode>] <result>.
	else if [logstash][msgparser][id] == "msgParserId410" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+ERROR:[\s]+while[\s]+writing[\s]+to[\s]+([\s]*'(?<filename>[^']*)':[\s]+|[\s]*(?<filename>[^:]*):[\s]+)[\s]+\[Errno[\s]+(?<resultcode>[^\]]*)\][\s]+(?<result>[^\.]*)\.$" }
			id => "msgParserId410"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ERROR while writing to file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "oracle" {
		# MESSAGE 00042
		# line in RSA:  <agent>: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: %{event_description}" }
				id => "message-00042"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00042"
					"[rsa][message][id1]" => "00042"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01430
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-01430"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01430"
					"[rsa][message][id1]" => "01430"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Oracle" {
		# MESSAGE 01080
		# line in RSA:   <agent>[<process_id>]: <event_time_string> GGS INFO <node> <application>, <service>: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} GGS INFO %{node} %{application}, %{service}: %{event_description}." }
				id => "message-01080"
				add_field => {
				"severity" => "INFO"
					"[event][id]" => "01080"
					"[rsa][message][id1]" => "01080"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01080:01
		# line in RSA:   <agent>[<process_id>]: <event_time_string> WARNING <node> <application>, <service>: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} WARNING %{node} %{application}, %{service}: %{event_description}." }
				id => "message-01080:01"
				add_field => {
				"severity" => "WARNING"
					"[event][id]" => "01080:01"
					"[rsa][message][id1]" => "01080:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01080:02
		# line in RSA:   <agent>[<process_id>]: <event_time_string> ERROR <node> <application>, <service>: <event_description>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} ERROR %{node} %{application}, %{service}: %{event_description}." }
				id => "message-01080:02"
				add_field => {
				"severity" => "ERROR"
					"[event][id]" => "01080:02"
					"[rsa][message][id1]" => "01080:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01080:03
		# line in RSA:   <agent>[<process_id>]: <event_time_string> WARNING <node> <application>: <event_description>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string} WARNING %{node} %{application}: %{event_description}. %{info}" }
				id => "message-01080:03"
				add_field => {
				"severity" => "WARNING"
					"[event][id]" => "01080:03"
					"[rsa][message][id1]" => "01080:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01081
		# line in RSA:   <agent>[<process_id>]: <event_time_string>  INFO    <node>  <application>:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_time_string}  INFO    %{node}  %{application}:  %{event_description}" }
				id => "message-01081"
				add_field => {
				"severity" => "INFO"
					"[event][id]" => "01081"
					"[rsa][message][id1]" => "01081"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143
		# line in RSA: <agent>: (Oracle CSSD will be run out of init)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (Oracle CSSD will be run out of init)" }
				id => "message-01143"
				add_field => {
					"[event][id]" => "01143"
					"[rsa][message][id1]" => "01143"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143:01
		# line in RSA: <agent>: Oracle CSSD being stopped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Oracle CSSD being stopped" }
				id => "message-01143:01"
				add_field => {
					"[event][id]" => "01143:01"
					"[rsa][message][id1]" => "01143:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143:02
		# line in RSA: <agent>: Oracle CRSD <fld53> set to stop
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Oracle CRSD %{fld53} set to stop" }
				id => "message-01143:02"
				add_field => {
					"[event][id]" => "01143:02"
					"[rsa][message][id1]" => "01143:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143:03
		# line in RSA: <agent>: Oracle Cluster Ready Services starting by user request.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Oracle Cluster Ready Services starting by user request." }
				id => "message-01143:03"
				add_field => {
					"[event][id]" => "01143:03"
					"[rsa][message][id1]" => "01143:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143:04
		# line in RSA:  <agent>[<process_id>]: [<fld1>] Usage Tracking not started due to <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] Usage Tracking not started due to %{result}" }
				id => "message-01143:04"
				add_field => {
				"action" => "Usage Tracking not started"
					"[event][id]" => "01143:04"
					"[rsa][message][id1]" => "01143:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143:05
		# line in RSA:  <agent>[<process_id>]: [<fld1>] Usage Tracking encountered <result>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld1}] Usage Tracking encountered %{result}. %{info}" }
				id => "message-01143:05"
				add_field => {
				"action" => "Usage Tracking encountered error"
					"[event][id]" => "01143:05"
					"[rsa][message][id1]" => "01143:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01143:06
		# line in RSA:  <agent>[<process_id>]: { Opening | Closing } { <filename> (<info>) | <filename> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*Opening[\s]+|[\s]*Closing[\s]+)[\s]+([\s]*(?<filename>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+|[\s]*(?<filename>[^\s]*)[\s]+)[\s]+$" }
				id => "message-01143:06"
				add_field => {
				"event_description" => "Opening/Closing File"
					"[event][id]" => "01143:06"
					"[rsa][message][id1]" => "01143:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId424
	# line in RSA:  <agent>: Oracle account accessed by: <username> <event_time_string> { CCF Number: <c_username> Description: | Access approved by <c_username> Description: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId424" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+Oracle[\s]+account[\s]+accessed[\s]+by:[\s]+(?<username>[^\s]*)[\s]+(?<event_time_string>[^\s]*)[\s]+([\s]*CCF[\s]+Number:[\s]+(?<c_username>[^\s]*)[\s]+Description:[\s]+|[\s]*Access[\s]+approved[\s]+by[\s]+(?<c_username>[^\s]*)[\s]+Description:[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId424"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ORPCLNUP" {
		# MESSAGE 01132
		# line in RSA:  <agent>:ERROR: <event_description>. <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:ERROR: %{event_description}. %{info}" }
				id => "message-01132"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01132"
					"[rsa][message][id1]" => "01132"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01132:01
		# line in RSA:  <agent>:INFO: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:INFO: %{event_description}" }
				id => "message-01132:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01132:01"
					"[rsa][message][id1]" => "01132:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oserv94" {
		# MESSAGE 00044
		# line in RSA:  <agent>[<process_id>]: verify_password: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: verify_password: %{event_description}" }
				id => "message-00044"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "verify password - failed"
					"[event][id]" => "00044"
					"[rsa][message][id1]" => "00044"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00044:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00044:01"
				add_field => {
					"[event][id]" => "00044:01"
					"[rsa][message][id1]" => "00044:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PAM" {
		# MESSAGE 01433
		# line in RSA:  <agent> PAM: <application>: can not open module <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: can not open module %{filename}" }
				id => "message-01433"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "can not open module"
					"[event][id]" => "01433"
					"[rsa][message][id1]" => "01433"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01439
		# line in RSA:  <agent> PAM: <application>: <severity> Authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} Authentication failed" }
				id => "message-01439"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
					"[event][id]" => "01439"
					"[rsa][message][id1]" => "01439"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01094
		# line in RSA:  <agent> PAM: <application>: <severity> Can not make/remove entry for session
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} Can not make/remove entry for session" }
				id => "message-01094"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Can not make/remove entry for session"
				"action" => "PAM error"
					"[event][id]" => "01094"
					"[rsa][message][id1]" => "01094"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01095
		# line in RSA:  <agent> PAM: <application>: successful load of pam_sm_authenticate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: successful load of pam_sm_authenticate" }
				id => "message-01095"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful load of pam_sm_authenticate"
					"[event][id]" => "01095"
					"[rsa][message][id1]" => "01095"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01082
		# line in RSA:  <agent>PAM: <application>: <severity> User { account | password } has expired
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^P]*)PAM:[\s]+(?<application>[^:]*):[\s]+(?<severity>[^\s]*)[\s]+User[\s]+([\s]*account[\s]+|[\s]*password[\s]+)[\s]+has[\s]+expired$" }
				id => "message-01082"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "User account or password has expired"
					"[event][id]" => "01082"
					"[rsa][message][id1]" => "01082"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01441
		# line in RSA:  <agent> PAM: <application>: <severity> Authentication token manipulation error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} Authentication token manipulation error" }
				id => "message-01441"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Authentication token manipulation error"
					"[event][id]" => "01441"
					"[rsa][message][id1]" => "01441"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01443
		# line in RSA:  <agent> PAM: <application>: <severity> Get new authentication token
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} Get new authentication token" }
				id => "message-01443"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Get new authentication token"
					"[event][id]" => "01443"
					"[rsa][message][id1]" => "01443"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01442
		# line in RSA:  <agent> PAM: invalid module type: <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: invalid module type: %{obj_type}" }
				id => "message-01442"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "invalid module type"
					"[event][id]" => "01442"
					"[rsa][message][id1]" => "01442"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01373
		# line in RSA:  <agent> PAM: <application>: no module present
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: no module present" }
				id => "message-01373"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "no module present"
					"[event][id]" => "01373"
					"[rsa][message][id1]" => "01373"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001472
		# line in RSA:  <agent> PAM: <application>: <severity> No account present for user
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} No account present for user" }
				id => "message-001472"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "no account present for user"
					"[event][id]" => "001472"
					"[rsa][message][id1]" => "001472"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001480
		# line in RSA:  <agent> PAM: <application>: illegal option <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: illegal option %{obj_name}" }
				id => "message-001480"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "illegal option"
					"[event][id]" => "001480"
					"[rsa][message][id1]" => "001480"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001473
		# line in RSA:  <agent> PAM: <application>: <severity> General PAM failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} General PAM failure" }
				id => "message-001473"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "General PAM failure"
					"[event][id]" => "001473"
					"[rsa][message][id1]" => "001473"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001474
		# line in RSA:  <agent> PAM: <application>: <severity> Permission denied
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: %{severity} Permission denied" }
				id => "message-001474"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Permission denied"
					"[event][id]" => "001474"
					"[rsa][message][id1]" => "001474"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01096
		# line in RSA:  <agent> PAM: <application>: stat(<filename>) failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} PAM: %{application}: stat(%{filename}) failed: %{result}" }
				id => "message-01096"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "stat of file failed"
					"[event][id]" => "01096"
					"[rsa][message][id1]" => "01096"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "passwd" {
		# MESSAGE 00202
		# line in RSA:  <agent>[<process_id>]: password changed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password changed for %{username}" }
				id => "message-00202"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "password changed for user"
					"[event][id]" => "00202"
					"[rsa][message][id1]" => "00202"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01106
		# line in RSA:  <agent>[<process_id>]: <severity> pam.util Error: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity} pam.util Error: %{event_description}" }
				id => "message-01106"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
					"[event][id]" => "01106"
					"[rsa][message][id1]" => "01106"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId444
	# line in RSA: <agent>: <fld53> Unknown host: <fqdn>
	else if [logstash][msgparser][id] == "msgParserId444" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld53} Unknown host: %{fqdn}" }
			id => "msgParserId444"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId445
	# line in RSA: <fld53> <process> on <fqdn> not on a reserved port! 
	else if [logstash][msgparser][id] == "msgParserId445" {
		dissect {
			mapping => { "message" => "%{fld53} %{process} on %{fqdn} not on a reserved port!" }
			id => "msgParserId445"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId446
	# line in RSA:  <agent>: <fld53> master <fqdn> is not listed in  <fld54>'s acceptmaster rules
	else if [logstash][msgparser][id] == "msgParserId446" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld53} master %{fqdn} is not listed in  %{fld54}'s acceptmaster rules" }
			id => "msgParserId446"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId447
	# line in RSA: <agent>: [<process_id>] <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId447" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{process}: %{event_description}" }
			id => "msgParserId447"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId448
	# line in RSA: <agent>: [<process_id>] <fld53> master <fqdn> is not listed in  <hostname>'s acceptmaster rules
	else if [logstash][msgparser][id] == "msgParserId448" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{fld53} master %{fqdn} is not listed in  %{hostname}'s acceptmaster rules" }
			id => "msgParserId448"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pblocald4.0.1-04" {
		# MESSAGE 01123
		# line in RSA:  <agent>: Could not open lock file <filename> - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Could not open lock file %{filename} - %{info}" }
				id => "message-01123"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not open lock file"
					"[event][id]" => "01123"
					"[rsa][message][id1]" => "01123"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01123:01
		# line in RSA:  <agent>: [<process_id>] <fld53> master <fqdn> is not listed in  <hostname>'s acceptmaster rules
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{process_id}] %{fld53} master %{fqdn} is not listed in  %{hostname}'s acceptmaster rules" }
				id => "message-01123:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01123:01"
					"[rsa][message][id1]" => "01123:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pbmasterd4.0.8-03" {
		# MESSAGE 01125
		# line in RSA:  <agent>: [<process_id>] <fld5> Connection to <process> on <hostname> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{process_id}] %{fld5} Connection to %{process} on %{hostname} failed" }
				id => "message-01125"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01125"
					"[rsa][message][id1]" => "01125"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01125:01
		# line in RSA:  <agent>: [<process_id>] <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{process_id}] %{process}: %{event_description}" }
				id => "message-01125:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01125:01"
					"[rsa][message][id1]" => "01125:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01125:02
		# line in RSA:  <agent>: [<process_id>] <fld5> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [%{process_id}] %{fld5} %{event_description}" }
				id => "message-01125:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01125:02"
					"[rsa][message][id1]" => "01125:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId454
	# line in RSA:   <agent>: Request rejected by <process> on <fqdn>
	else if [logstash][msgparser][id] == "msgParserId454" {
		dissect {
			mapping => { "message" => "%{agent}: Request rejected by %{process} on %{fqdn}" }
			id => "msgParserId454"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId455
	# line in RSA: <agent>: [<process_id>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId455" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] %{event_description}" }
			id => "msgParserId455"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId456
	# line in RSA: <agent>: [<process_id>] Could not connect to run host <hostname>
	else if [logstash][msgparser][id] == "msgParserId456" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] Could not connect to run host %{hostname}" }
			id => "msgParserId456"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId457
	# line in RSA: <agent>: [<process_id>] Request rejected by <process> on <fqdn>
	else if [logstash][msgparser][id] == "msgParserId457" {
		dissect {
			mapping => { "message" => "%{agent}: [%{process_id}] Request rejected by %{process} on %{fqdn}" }
			id => "msgParserId457"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId458
	# line in RSA: <username>: <agent>: <hostname> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25>
	else if [logstash][msgparser][id] == "msgParserId458" {
		dissect {
			mapping => { "message" => "%{username}: %{agent}: %{hostname} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25}" }
			id => "msgParserId458"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "perl" {
		# MESSAGE 00808
		# line in RSA: <agent>: uid <uid> is testing Perl 5.010000 syslog(3) capabilities by connecting to a <fld50> socket, setting a fake errno: Operation not permitted.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: uid %{uid} is testing Perl 5.010000 syslog(3) capabilities by connecting to a %{fld50} socket, setting a fake errno: Operation not permitted." }
				id => "message-00808"
				add_field => {
					"[event][id]" => "00808"
					"[rsa][message][id1]" => "00808"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00808:01
		# line in RSA:  <agent>: uid <uid> is testing Perl 5.010000 syslog(3) capabilities by connecting to a <fld50> socket
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: uid %{uid} is testing Perl 5.010000 syslog(3) capabilities by connecting to a %{fld50} socket" }
				id => "message-00808:01"
				add_field => {
					"[event][id]" => "00808:01"
					"[rsa][message][id1]" => "00808:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId461
	# line in RSA:  <agent>: User: <username> PID:<process_id> Status: <resultcode> (<result>) [rev:$Revision:<version>$ $Date: <event_time_string> $] HOME=<directory> PWD=<filename> [Command:<action>]
	else if [logstash][msgparser][id] == "msgParserId461" {
		dissect {
			mapping => { "message" => "%{agent}: User: %{username} PID:%{process_id} Status: %{resultcode} (%{result}) [rev:$Revision:%{version}$ $Date: %{event_time_string} $] HOME=%{directory} PWD=%{filename} [Command:%{action}]" }
			id => "msgParserId461"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId462
	# line in RSA:  <agent>[<process_id>]: <process>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId462" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
			id => "msgParserId462"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId463
	# line in RSA:  <severity> <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId463" {
		dissect {
			mapping => { "message" => "%{severity} %{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId463"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Plumtree" {
		# MESSAGE 01148
		# line in RSA:  <agent>[<process_id>]: --> <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: --> %{event_description}" }
				id => "message-01148"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01148"
					"[rsa][message][id1]" => "01148"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01148:01
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01148:01"
				add_field => {
					"[event][id]" => "01148:01"
					"[rsa][message][id1]" => "01148:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pop3d" {
		# MESSAGE 00321
		# line in RSA:   <agent>: Connection, ip=[<fld87>:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Connection, ip=[%{fld87}:%{saddr}]" }
				id => "message-00321"
				add_field => {
				"event_description" => "connection"
				"hostname" => "%{hhost}"
					"[event][id]" => "00321"
					"[rsa][message][id1]" => "00321"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:01
		# line in RSA:  <agent>: { DISCONNECTED | Disconnected }, { user=<user_address> ip= | ip= }[<fld87>:<saddr>], <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*DISCONNECTED[\s]+|[\s]*Disconnected[\s]+),[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+(?<info>.*)$" }
				id => "message-00321:01"
				add_field => {
				"event_description" => "session disconnect"
				"hostname" => "%{hhost}"
					"[event][id]" => "00321:01"
					"[rsa][message][id1]" => "00321:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:02
		# line in RSA:   <agent>: LOGIN, user=<user_address>, ip=[<fld87>:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LOGIN, user=%{user_address}, ip=[%{fld87}:%{saddr}]" }
				id => "message-00321:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user login"
					"[event][id]" => "00321:02"
					"[rsa][message][id1]" => "00321:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:03
		# line in RSA:  <agent>: LOGOUT, { user= <user_address> | <space> } ip=[<fld87>:<saddr>], <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+LOGOUT,[\s]+([\s]*user=[\s]+(?<user_address>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+ip=\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+(?<info>.*)$" }
				id => "message-00321:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "user logout"
				"hostname" => "%{hhost}"
					"[event][id]" => "00321:03"
					"[rsa][message][id1]" => "00321:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:04
		# line in RSA:  <agent>: LOGIN FAILED, user=<user_address>, ip=[<fld87>:<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: LOGIN FAILED, user=%{user_address}, ip=[%{fld87}:%{saddr}]" }
				id => "message-00321:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "login failure"
					"[event][id]" => "00321:04"
					"[rsa][message][id1]" => "00321:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:05
		# line in RSA:  <agent>: TIMEOUT, { user=<user_address> ip= | ip= }[<fld87>:<saddr>], <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+TIMEOUT,[\s]+([\s]*user=(?<user_address>[^\s]*)[\s]+ip=[\s]+|[\s]*ip=[\s]+)\[(?<fld87>[^:]*):(?<saddr>[^\]]*)\],[\s]+(?<info>.*)$" }
				id => "message-00321:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "session timeout"
				"hostname" => "%{hhost}"
					"[event][id]" => "00321:05"
					"[rsa][message][id1]" => "00321:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "portmap" {
		# MESSAGE 00045
		# line in RSA: <agent>: <protocol>: <event_description>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{protocol}: %{event_description}: %{info}" }
				id => "message-00045"
				add_field => {
					"[event][id]" => "00045"
					"[rsa][message][id1]" => "00045"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001387
		# line in RSA:  <agent>: terminating on signal.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: terminating on signal." }
				id => "message-001387"
				add_field => {
				"event_description" => "portmap terminating on signal"
					"[event][id]" => "001387"
					"[rsa][message][id1]" => "001387"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/master" {
		# MESSAGE 001462
		# line in RSA:  <agent>[<process_id>]: <severity>: <process>: bad command startup -- <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{process}: bad command startup -- %{result}" }
				id => "message-001462"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "bad command startup"
					"[event][id]" => "001462"
					"[rsa][message][id1]" => "001462"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001463
		# line in RSA:  <agent>[<process_id>]: <severity>: <process> pid <child_pid> exit status <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{process} pid %{child_pid} exit status %{resultcode}" }
				id => "message-001463"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "child pid exited with status"
					"[event][id]" => "001463"
					"[rsa][message][id1]" => "001463"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId475
	# line in RSA:  <agent>[<process_id>]: <severity>: config variable inet_interfaces: <result>: <shost>
	else if [logstash][msgparser][id] == "msgParserId475" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: config variable inet_interfaces: %{result}: %{shost}" }
			id => "msgParserId475"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "config variable inet_interfaces"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtpd" {
		# MESSAGE 001465
		# line in RSA:  <agent>[<process_id>]: <severity>: database <filename> is older than source file <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: database %{filename} is older than source file %{result}" }
				id => "message-001465"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "database file older than source file"
					"[event][id]" => "001465"
					"[rsa][message][id1]" => "001465"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001466
		# line in RSA:  <agent>[<process_id>]: <severity>: <process>: NIS domain name not set - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{process}: NIS domain name not set - %{result}" }
				id => "message-001466"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "NIS domain name not set"
					"[event][id]" => "001466"
					"[rsa][message][id1]" => "001466"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001467
		# line in RSA:  <agent>[<process_id>]: connect from loopback[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from loopback[%{saddr}]" }
				id => "message-001467"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect from loopback"
					"[event][id]" => "001467"
					"[rsa][message][id1]" => "001467"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001468
		# line in RSA:  <agent>[<process_id>]: disconnect from loopback[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: disconnect from loopback[%{saddr}]" }
				id => "message-001468"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "disconnect from loopback"
					"[event][id]" => "001468"
					"[rsa][message][id1]" => "001468"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId480
	# line in RSA: <fld53>: <event_description>. <info>
	else if [logstash][msgparser][id] == "msgParserId480" {
		dissect {
			mapping => { "message" => "%{fld53}: %{event_description}. %{info}" }
			id => "msgParserId480"
			add_field => {
				"agent" => "PowerBroker"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId481
	# line in RSA: <agent>: <process>: <severity>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId481" {
		dissect {
			mapping => { "message" => "%{agent}: %{process}: %{severity}: %{event_description}" }
			id => "msgParserId481"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId482
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId482" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{event_description}" }
			id => "msgParserId482"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ppcame" {
		# MESSAGE 01146
		# line in RSA:   <agent>: <service> Error calling system service: SAF failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service} Error calling system service: SAF failed: %{result}" }
				id => "message-01146"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error calling system service"
					"[event][id]" => "01146"
					"[rsa][message][id1]" => "01146"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01146:01
		# line in RSA:   <agent>: <service> <result>: No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service} %{result}: No such file or directory" }
				id => "message-01146:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "No such file or directory"
					"[event][id]" => "01146:01"
					"[rsa][message][id1]" => "01146:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01146:02
		# line in RSA:   <agent>: <service> <result>: No receiver online
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{service} %{result}: No receiver online" }
				id => "message-01146:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "No receiver online"
					"[event][id]" => "01146:02"
					"[rsa][message][id1]" => "01146:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId486
	# line in RSA:   <agent>: { timex <action> STEP0010 <resultcode> | <action> }  WORKLOAD=<disposition> WORKSTATION=<terminal>  PROGRAM INFO=<application> SOURCE=<saddr> TAG=<id>
	else if [logstash][msgparser][id] == "msgParserId486" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*timex[\s]+(?<action>[^\s]*)[\s]+STEP0010[\s]+(?<resultcode>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)[\s]+WORKLOAD=(?<disposition>[^\s]*)[\s]+WORKSTATION=(?<terminal>[^\s]*)[\s]+PROGRAM[\s]+INFO=(?<application>[^\s]*)[\s]+SOURCE=(?<saddr>[^\s]*)[\s]+TAG=(?<id>.*)$" }
			id => "msgParserId486"
			add_field => {
				"event_description" => "connection"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PPME" {
		# MESSAGE 00728
		# line in RSA:  <agent>: API: Info: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: API: Info: %{info}" }
				id => "message-00728"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Set IO Cloning Control"
					"[event][id]" => "00728"
					"[rsa][message][id1]" => "00728"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00728:01
		# line in RSA:  <agent>: UMD: Error: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: UMD: Error: %{info}" }
				id => "message-00728:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Error"
					"[event][id]" => "00728:01"
					"[rsa][message][id1]" => "00728:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ppp" {
		# MESSAGE 01016
		# line in RSA: <agent>[<process_id>]: set max inactivity on <portname> to <duration>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: set max inactivity on %{portname} to %{duration}" }
				id => "message-01016"
				add_field => {
					"[event][id]" => "01016"
					"[rsa][message][id1]" => "01016"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01016:01
		# line in RSA: <agent>[<process_id>]: adm_register:<portname>:::[<fld7>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: adm_register:%{portname}:::[%{fld7}]" }
				id => "message-01016:01"
				add_field => {
					"[event][id]" => "01016:01"
					"[rsa][message][id1]" => "01016:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01016:02
		# line in RSA: <agent>[<process_id>]: Port-Begin:<portname>:<protocol>:::[<fld7>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Port-Begin:%{portname}:%{protocol}:::[%{fld7}]" }
				id => "message-01016:02"
				add_field => {
					"[event][id]" => "01016:02"
					"[rsa][message][id1]" => "01016:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01016:03
		# line in RSA: <agent>[<process_id>]: mp_attach_bundle:<portname>: insquei(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: mp_attach_bundle:%{portname}: insquei(%{resultcode})" }
				id => "message-01016:03"
				add_field => {
					"[event][id]" => "01016:03"
					"[rsa][message][id1]" => "01016:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01016:04
		# line in RSA: <agent>[<process_id>]: <protocol>:<portname>:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{protocol}:%{portname}:%{event_description}" }
				id => "message-01016:04"
				add_field => {
					"[event][id]" => "01016:04"
					"[rsa][message][id1]" => "01016:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId494
	# line in RSA: <agent> <fld57>: <filename>  WORKLOAD=<fld58>  WORKSTATION=<hostname>  PROGRAM INFO=<fld59>  SOURCE=<fld81>  TAG=<fld82>
	else if [logstash][msgparser][id] == "msgParserId494" {
		dissect {
			mapping => { "message" => "%{agent} %{fld57}: %{filename}  WORKLOAD=%{fld58}  WORKSTATION=%{hostname}  PROGRAM INFO=%{fld59}  SOURCE=%{fld81}  TAG=%{fld82}" }
			id => "msgParserId494"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId495
	# line in RSA: <agent>: Info:<info> <event_description>: <action>
	else if [logstash][msgparser][id] == "msgParserId495" {
		dissect {
			mapping => { "message" => "%{agent}: Info:%{info} %{event_description}: %{action}" }
			id => "msgParserId495"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId496
	# line in RSA:  <agent>: <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId496" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}: %{info}" }
			id => "msgParserId496"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId497
	# line in RSA:  <agent>[<process_id>]: { [<severity>]: <event_description> | <event_description> } 
	else if [logstash][msgparser][id] == "msgParserId497" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\[(?<severity>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId497"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "prngd" {
		# MESSAGE 00130
		# line in RSA: <agent>[<process_id>]: <event_description>: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{info}" }
				id => "message-00130"
				add_field => {
					"[event][id]" => "00130"
					"[rsa][message][id1]" => "00130"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001398
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-001398"
				add_field => {
					"[event][id]" => "001398"
					"[rsa][message][id1]" => "001398"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId499
	# line in RSA: <agent> <filename>  WORKLOAD=<fld58>  WORKSTATION=<hostname>  PROGRAM INFO=<fld59>  SOURCE=<fld81>  TAG=<fld82>
	else if [logstash][msgparser][id] == "msgParserId499" {
		dissect {
			mapping => { "message" => "%{agent} %{filename}  WORKLOAD=%{fld58}  WORKSTATION=%{hostname}  PROGRAM INFO=%{fld59}  SOURCE=%{fld81}  TAG=%{fld82}" }
			id => "msgParserId499"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId500
	# line in RSA: <agent> process `<process>' is using obsolete setsockopt <info>
	else if [logstash][msgparser][id] == "msgParserId500" {
		dissect {
			mapping => { "message" => "%{agent} process `%{process}' is using obsolete setsockopt %{info}" }
			id => "msgParserId500"
			add_field => {
				"event_description" => "process using obsolete setsockopt"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "proftpd" {
		# MESSAGE 01323
		# line in RSA:  <agent>[<process_id>]: <shost> (<dhost>[<daddr>]) - USER <username>: Login successful 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost} (%{dhost}[%{daddr}]) - USER %{username}: Login successful" }
				id => "message-01323"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Login successful"
					"[event][id]" => "01323"
					"[rsa][message][id1]" => "01323"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01323:01
		# line in RSA:  <agent>[<process_id>]: <shost> (<dhost>[<daddr>]) - error setting listen fd <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost} (%{dhost}[%{daddr}]) - error setting listen fd %{filename}: %{result}" }
				id => "message-01323:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error setting listen fd"
					"[event][id]" => "01323:01"
					"[rsa][message][id1]" => "01323:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01323:02
		# line in RSA:  <agent>[<process_id>]: <shost> (<dhost>[<daddr>]) - FTP session opened 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost} (%{dhost}[%{daddr}]) - FTP session opened" }
				id => "message-01323:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "FTP session opened"
					"[event][id]" => "01323:02"
					"[rsa][message][id1]" => "01323:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01323:03
		# line in RSA:  <agent>[<process_id>]: <shost> (<dhost>[<daddr>]) - FTP session closed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{shost} (%{dhost}[%{daddr}]) - FTP session closed" }
				id => "message-01323:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "FTP session closed"
					"[event][id]" => "01323:03"
					"[rsa][message][id1]" => "01323:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "promo.batch" {
		# MESSAGE 01434
		# line in RSA:  <agent>[<process_id>]: unable to lock account for '<username>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: unable to lock account for '%{username}'" }
				id => "message-01434"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to lock account for user"
					"[event][id]" => "01434"
					"[rsa][message][id1]" => "01434"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01435
		# line in RSA:  <agent>[<process_id>]: service:<service>,user:<username>,operation:<action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: service:%{service},user:%{username},operation:%{action}" }
				id => "message-01435"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01435"
					"[rsa][message][id1]" => "01435"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId507
	# line in RSA:   <agent>: RUNCTRL_PATH=<filename>
	else if [logstash][msgparser][id] == "msgParserId507" {
		dissect {
			mapping => { "message" => "%{agent}: RUNCTRL_PATH=%{filename}" }
			id => "msgParserId507"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId508
	# line in RSA:  <agent>[ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId508" {
		dissect {
			mapping => { "message" => "%{agent}[ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId508"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId509
	# line in RSA: <agent>: Invalid permissions <filename> <info>
	else if [logstash][msgparser][id] == "msgParserId509" {
		dissect {
			mapping => { "message" => "%{agent}: Invalid permissions %{filename} %{info}" }
			id => "msgParserId509"
			add_field => {
				"event_description" => "Invalid permissions"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId510
	# line in RSA:  <agent>[<process_id>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId510" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId510"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId511
	# line in RSA:  <agent>[<process_id>]: { --> <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId511" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*\-\->[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId511"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "puppetd" {
		# MESSAGE 00812
		# line in RSA: <agent>[<process_id>]: Configuration is up to date  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Configuration is up to date" }
				id => "message-00812"
				add_field => {
				"event_description" => "Configuration is up to date"
					"[event][id]" => "00812"
					"[rsa][message][id1]" => "00812"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00812:01
		# line in RSA: <agent>[<process_id>]: Finished catalog run in <duration> seconds  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Finished catalog run in %{duration} seconds" }
				id => "message-00812:01"
				add_field => {
				"event_description" => "Finished catalog run"
					"[event][id]" => "00812:01"
					"[rsa][message][id1]" => "00812:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pure-ftpd" {
		# MESSAGE 00371
		# line in RSA: <agent>: (<fld29>) [<severity>] New connection from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (%{fld29}) [%{severity}] New connection from %{saddr}" }
				id => "message-00371"
				add_field => {
				"event_description" => "new connection"
				"severity" => "INFO"
					"[event][id]" => "00371"
					"[rsa][message][id1]" => "00371"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00371:01
		# line in RSA: <agent>: (?@<saddr>) [<severity>] Logout.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (?@%{saddr}) [%{severity}] Logout." }
				id => "message-00371:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "logout"
				"severity" => "INFO"
					"[event][id]" => "00371:01"
					"[rsa][message][id1]" => "00371:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId516
	# line in RSA: <agent>: [ID <id> <event_source>.<severity>] NOTICE: <fld41>: <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId516" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] NOTICE: %{fld41}: %{event_description}: %{info}" }
			id => "msgParserId516"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId517
	# line in RSA:  <agent>[<process_id>]: login succeeded for <username> <shost> { cli | gui | FGS(QAPI) } on <hostname> { AIX | Windows } pid <fld42> running as <administrator>
	else if [logstash][msgparser][id] == "msgParserId517" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+login[\s]+succeeded[\s]+for[\s]+(?<username>[^\s]*)[\s]+(?<shost>[^\s]*)[\s]+([\s]*cli[\s]+|[\s]*gui[\s]+|[\s]*FGS\(QAPI\)[\s]+)[\s]+on[\s]+(?<hostname>[^\s]*)[\s]+([\s]*AIX[\s]+|[\s]*Windows[\s]+)[\s]+pid[\s]+(?<fld42>[^\s]*)[\s]+running[\s]+as[\s]+(?<administrator>.*)$" }
			id => "msgParserId517"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "successful login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId518
	# line in RSA:  <agent>[<process_id>]: Connection <process> { Active Lease | Remote } Service on <saddr>:<sport> (cid=<fld53>) completed
	else if [logstash][msgparser][id] == "msgParserId518" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Connection[\s]+(?<process>[^\s]*)[\s]+([\s]*Active[\s]+Lease[\s]+|[\s]*Remote[\s]+)[\s]+Service[\s]+on[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+\(cid=(?<fld53>[^\)]*)\)[\s]+completed$" }
			id => "msgParserId518"
			add_field => {
				"event_description" => "connection completed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "qip-qipupdated" {
		# MESSAGE 00289
		# line in RSA: <agent>[<process_id>]: Illegal domain name for subnet: DHCP Server <daddr> granted lease <saddr> as <change_old> to <change_new>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Illegal domain name for subnet: DHCP Server %{daddr} granted lease %{saddr} as %{change_old} to %{change_new}." }
				id => "message-00289"
				add_field => {
				"event_description" => "Illegal domain name"
					"[event][id]" => "00289"
					"[rsa][message][id1]" => "00289"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00289:01
		# line in RSA: <agent>[<process_id>]: Updating DNS information for <change_new> <saddr> which previously had the hostname <change_old> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Updating DNS information for %{change_new} %{saddr} which previously had the hostname %{change_old}" }
				id => "message-00289:01"
				add_field => {
				"event_description" => "Updating DNS information"
					"[event][id]" => "00289:01"
					"[rsa][message][id1]" => "00289:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId521
	# line in RSA: <agent>[<process_id>]: Attempting to send <fld43> to <username>
	else if [logstash][msgparser][id] == "msgParserId521" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Attempting to send %{fld43} to %{username}" }
			id => "msgParserId521"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "radiusd" {
		# MESSAGE 01115
		# line in RSA: <agent>[<process_id>]: [<fld44>]:*** Start Process_Packet() ***
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:*** Start Process_Packet() ***" }
				id => "message-01115"
				add_field => {
				"event_description" => "Start Process_Packet"
				"hostname" => "%{hhost}"
					"[event][id]" => "01115"
					"[rsa][message][id1]" => "01115"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:01
		# line in RSA:  <agent>[<process_id>]: [<fld44>]:<severity> - Did not find ip[<saddr>] { in client or proxy list | in client list } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[(?<fld44>[^\]]*)\]:(?<severity>[^\s]*)[\s]+\-[\s]+Did[\s]+not[\s]+find[\s]+ip\[(?<saddr>[^\]]*)\][\s]+([\s]*in[\s]+client[\s]+or[\s]+proxy[\s]+list[\s]+|[\s]*in[\s]+client[\s]+list[\s]+)[\s]+$" }
				id => "message-01115:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ERROR - Did not find ip in client or proxy list"
					"[event][id]" => "01115:01"
					"[rsa][message][id1]" => "01115:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:02
		# line in RSA:  <agent>[<process_id>]: [<fld44>]:Could not retrieve plaintext password from packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:Could not retrieve plaintext password from packet" }
				id => "message-01115:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Could not retrieve plaintext password from packet"
					"[event][id]" => "01115:02"
					"[rsa][message][id1]" => "01115:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:03
		# line in RSA: <agent>[<process_id>]: [<fld44>]:Authentication failed for user [<username>] using IP [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:Authentication failed for user [%{username}] using IP [%{saddr}]" }
				id => "message-01115:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication failed"
					"[event][id]" => "01115:03"
					"[rsa][message][id1]" => "01115:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:04
		# line in RSA:  <agent>[<process_id>]: [<fld44>]:ACCESS-REJECT - sending reject for id <fld47> to <saddr> (<fqdn>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:ACCESS-REJECT - sending reject for id %{fld47} to %{saddr} (%{fqdn})" }
				id => "message-01115:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "ACCESS-REJECT"
					"[event][id]" => "01115:04"
					"[rsa][message][id1]" => "01115:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:05
		# line in RSA: <agent>[<process_id>]: [<fld44>]:*** Leave Process_Packet() ***
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:*** Leave Process_Packet() ***" }
				id => "message-01115:05"
				add_field => {
				"event_description" => "Leave Process_Packet"
				"hostname" => "%{hhost}"
					"[event][id]" => "01115:05"
					"[rsa][message][id1]" => "01115:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:06
		# line in RSA: <agent>[<process_id>]: [<fld44>]:Code <fld45>, ID = <fld47>, Port = <sport> Host = <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:Code %{fld45}, ID = %{fld47}, Port = %{sport} Host = %{saddr}" }
				id => "message-01115:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01115:06"
					"[rsa][message][id1]" => "01115:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:07
		# line in RSA:  <agent>[<process_id>]: [<fld44>]:<process>,PID=<uid>: terminated because <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld44}]:%{process},PID=%{uid}: terminated because %{result}" }
				id => "message-01115:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "radius process terminated"
					"[event][id]" => "01115:07"
					"[rsa][message][id1]" => "01115:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01115:08
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [<fld48>]: <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[(?<fld48>[^\]]*)\]:[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-01115:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01115:08"
					"[rsa][message][id1]" => "01115:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId531
	# line in RSA:  <agent>[<process_id>]: <application> <event_description>
	else if [logstash][msgparser][id] == "msgParserId531" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{application} %{event_description}" }
			id => "msgParserId531"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rc.ihs" {
		# MESSAGE 01121
		# line in RSA:  <username>:<agent>: start for IHS instance <process>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}:%{agent}: start for IHS instance %{process}" }
				id => "message-01121"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01121"
					"[rsa][message][id1]" => "01121"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01121:01
		# line in RSA:  <username>: <agent>: stop for IHS instance <process>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: %{agent}: stop for IHS instance %{process}" }
				id => "message-01121:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01121:01"
					"[rsa][message][id1]" => "01121:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01121:02
		# line in RSA:   <username>: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: %{agent}: %{event_description}" }
				id => "message-01121:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01121:02"
					"[rsa][message][id1]" => "01121:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId535
	# line in RSA: [<process_id>]: Report Application Server <info> 
	else if [logstash][msgparser][id] == "msgParserId535" {
		dissect {
			mapping => { "message" => "[%{process_id}]: Report Application Server %{info}" }
			id => "msgParserId535"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId536
	# line in RSA: <agent>[<process_id>]: <severity>: <event_description>: <hostname> <saddr> <info>
	else if [logstash][msgparser][id] == "msgParserId536" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}: %{hostname} %{saddr} %{info}" }
			id => "msgParserId536"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId537
	# line in RSA: <agent>[<process_id>]: (<fld48>):::<severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId537" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: (%{fld48}):::%{severity} %{event_description}" }
			id => "msgParserId537"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId538
	# line in RSA:  <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId538" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId538"
			add_field => {
				"username" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rcp" {
		# MESSAGE 00033
		# line in RSA: <agent>[<process_id>]: EXPORT file to host <dhost> cmd is <action>, local user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: EXPORT file to host %{dhost} cmd is %{action}, local user %{username}" }
				id => "message-00033"
				add_field => {
				"event_description" => "Export file"
					"[event][id]" => "00033"
					"[rsa][message][id1]" => "00033"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00033:01
		# line in RSA: <agent>[<process_id>]: IMPORT file from host <shost> cmd is <action>, local user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: IMPORT file from host %{shost} cmd is %{action}, local user %{username}" }
				id => "message-00033:01"
				add_field => {
				"event_description" => "Import file"
					"[event][id]" => "00033:01"
					"[rsa][message][id1]" => "00033:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rcpd" {
		# MESSAGE 01110
		# line in RSA:  <agent>: pid=<process_id>, connection from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: pid=%{process_id}, connection from %{saddr}" }
				id => "message-01110"
				add_field => {
				"event_description" => "connection"
				"hostname" => "%{hhost}"
					"[event][id]" => "01110"
					"[rsa][message][id1]" => "01110"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01110:01
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-01110:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01110:01"
					"[rsa][message][id1]" => "01110:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId542
	# line in RSA: <agent>[<process_id>]: <fqdn>: <severity>: <filename>: <result>
	else if [logstash][msgparser][id] == "msgParserId542" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn}: %{severity}: %{filename}: %{result}" }
			id => "msgParserId542"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId543
	# line in RSA: <agent>[<process_id>]: <hostname>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId543" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname}: %{event_description}" }
			id => "msgParserId543"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId544
	# line in RSA:  <agent>: { Rebooted | rebooted } by <username> 
	else if [logstash][msgparser][id] == "msgParserId544" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*Rebooted[\s]+|[\s]*rebooted[\s]+)[\s]+by[\s]+(?<username>[^\s]*)[\s]+$" }
			id => "msgParserId544"
			add_field => {
				"hostname" => "%{hhost}"
				"action" => "reboot by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId545
	# line in RSA: <agent>: Recycling CMS <hostname> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25>
	else if [logstash][msgparser][id] == "msgParserId545" {
		dissect {
			mapping => { "message" => "%{agent}: Recycling CMS %{hostname} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25}" }
			id => "msgParserId545"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId546
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <space> failed login attempt for <username> from <saddr>
	else if [logstash][msgparser][id] == "msgParserId546" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<space>[^\s]*)[\s]+failed[\s]+login[\s]+attempt[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>.*)$" }
			id => "msgParserId546"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "failed login attempt for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId547
	# line in RSA: <agent>[<process_id>]: running program <process>
	else if [logstash][msgparser][id] == "msgParserId547" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: running program %{process}" }
			id => "msgParserId547"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rlogind" {
		# MESSAGE 00013
		# line in RSA: <agent>[<process_id>]: Couldn't get socket name of remote host: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Couldn't get socket name of remote host: %{info}" }
				id => "message-00013"
				add_field => {
				"event_description" => " Socket name for remote host not available"
					"[event][id]" => "00013"
					"[rsa][message][id1]" => "00013"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00013:01
		# line in RSA: <agent>[<process_id>]: Connection from <fld87>:<saddr> on illegal port
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{fld87}:%{saddr} on illegal port" }
				id => "message-00013:01"
				add_field => {
				"event_description" => " Remote Host's Connection on illegal port"
					"[event][id]" => "00013:01"
					"[rsa][message][id1]" => "00013:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00013:02
		# line in RSA: <agent>[<process_id>]: Failed dlopen: <obj_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed dlopen: %{obj_name}: %{info}" }
				id => "message-00013:02"
				add_field => {
				"event_description" => " File/directory not found"
				"obj_type" => "File or directory"
					"[event][id]" => "00013:02"
					"[rsa][message][id1]" => "00013:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00013:03
		# line in RSA: <agent>[<process_id>]: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
				id => "message-00013:03"
				add_field => {
					"[event][id]" => "00013:03"
					"[rsa][message][id1]" => "00013:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId551
	# line in RSA: <agent>[<process_id>]: cannot listen on port <network_port> error <resultcode>
	else if [logstash][msgparser][id] == "msgParserId551" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: cannot listen on port %{network_port} error %{resultcode}" }
			id => "msgParserId551"
			add_field => {
				"severity" => "Error"
				"event_description" => " Cannot listen on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "root" {
		# MESSAGE 01068:07
		# line in RSA:  <agent>: <event_description>    <action>   <c_username>  <username>   OK   <fld20> <fld21> <fld22> <fld23>.<fld26>  No associated roles
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}    %{action}   %{c_username}  %{username}   OK   %{fld20} %{fld21} %{fld22} %{fld23}.%{fld26}  No associated roles" }
				id => "message-01068:07"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "OK"
					"[event][id]" => "01068:07"
					"[rsa][message][id1]" => "01068:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d MMM yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 01068:08
		# line in RSA:  <agent>: <event_description>    <action>   <c_username>  <username>   FAIL   <fld20> <fld21> <fld22> <fld23>.<fld26>  No associated roles
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}    %{action}   %{c_username}  %{username}   FAIL   %{fld20} %{fld21} %{fld22} %{fld23}.%{fld26}  No associated roles" }
				id => "message-01068:08"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "FAIL"
					"[event][id]" => "01068:08"
					"[rsa][message][id1]" => "01068:08"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d MMM yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 01068:05
		# line in RSA: <agent>: USER_SU    <username>     OK          <fld20> <fld21> <fld22> <fld23> <fld25> { <action>                  <fld80> | <action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+USER_SU[\s]+(?<username>[^\s]*)[\s]+OK[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+([\s]*(?<action>[^\s]*)[\s]+(?<fld80>[^\s]*)[\s]+|[\s]*(?<action>.*))$" }
				id => "message-01068:05"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "su by user"
				"result" => "Super User access granted"
					"[event][id]" => "01068:05"
					"[rsa][message][id1]" => "01068:05"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 01068:04
		# line in RSA: <agent>: USER_SU    <username>     FAIL          <fld20> <fld21> <fld22> <fld23> <fld25> { <action>                  <fld80> | <action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+USER_SU[\s]+(?<username>[^\s]*)[\s]+FAIL[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+([\s]*(?<action>[^\s]*)[\s]+(?<fld80>[^\s]*)[\s]+|[\s]*(?<action>.*))$" }
				id => "message-01068:04"
				add_field => {
				"result" => "Super User access denied"
					"[event][id]" => "01068:04"
					"[rsa][message][id1]" => "01068:04"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 01068:03
		# line in RSA:  <agent>: USER_Login    <username>     OK          <fld20> <fld21> <fld22> <fld23> <fld25> { <action>                  <fld80> | <action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+USER_Login[\s]+(?<username>[^\s]*)[\s]+OK[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+([\s]*(?<action>[^\s]*)[\s]+(?<fld80>[^\s]*)[\s]+|[\s]*(?<action>.*))$" }
				id => "message-01068:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"result" => "User login successful"
					"[event][id]" => "01068:03"
					"[rsa][message][id1]" => "01068:03"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 01068:02
		# line in RSA:  <agent>: USER_Login    <username>     FAIL          <fld20> <fld21> <fld22> <fld23> <fld25> { <action>                  <fld80> | <action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+USER_Login[\s]+(?<username>[^\s]*)[\s]+FAIL[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+([\s]*(?<action>[^\s]*)[\s]+(?<fld80>[^\s]*)[\s]+|[\s]*(?<action>.*))$" }
				id => "message-01068:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "User login failed"
					"[event][id]" => "01068:02"
					"[rsa][message][id1]" => "01068:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 01068:01
		# line in RSA:  <agent>: <space> user: <username> tty: <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{space} user: %{username} tty: %{terminal}" }
				id => "message-01068:01"
				add_field => {
					"[event][id]" => "01068:01"
					"[rsa][message][id1]" => "01068:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01068:06
		# line in RSA:  <agent>: <event_description>     <username> <result>          <fld20> <fld21> <fld22> <fld23> <fld25> {<action>                  <fld80>|<action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<result>[^\s]*)[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+((?<action>[^\s]*)[\s]+(?<fld80>.*)|(?<action>.*))$" }
				id => "message-01068:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01068:06"
					"[rsa][message][id1]" => "01068:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE 01068
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-01068"
				add_field => {
					"[event][id]" => "01068"
					"[rsa][message][id1]" => "01068"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE root
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-root"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "root"
					"[rsa][message][id1]" => "root"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId560
	# line in RSA: <agent>: <username> : TTY=<terminal> { ; | : } PWD=<directory> { ; | : } USER=<administrator> { ; | : } <fld2> COMMAND=<action> 
	else if [logstash][msgparser][id] == "msgParserId560" {
		grok {
			match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+:[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<fld2>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
			id => "msgParserId560"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "rootfire by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId561
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId561" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{event_description}" }
			id => "msgParserId561"
			add_field => {
				"event_description" => "Temperature warning"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rshd" {
		# MESSAGE 00076:04
		# line in RSA: <agent>[<process_id>]: ROOT shell from <user_address>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ROOT shell from %{user_address}, %{info}" }
				id => "message-00076:04"
				add_field => {
				"event_description" => "Root Shell access from remote user."
					"[event][id]" => "00076:04"
					"[rsa][message][id1]" => "00076:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:03
		# line in RSA: <agent>[<process_id>]: <process>: <fld1> The from address is not valid.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{fld1} The from address is not valid." }
				id => "message-00076:03"
				add_field => {
				"event_description" => "Invalid from address"
					"[event][id]" => "00076:03"
					"[rsa][message][id1]" => "00076:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076
		# line in RSA: <agent>[<process_id>]: <process>: <fld1> Timed out waiting for client connection.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{fld1} Timed out waiting for client connection." }
				id => "message-00076"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"info" => "Timeout"
					"[event][id]" => "00076"
					"[rsa][message][id1]" => "00076"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:01
		# line in RSA: <agent>[<process_id>]: Failed <process> authentication from <fqdn> for local user <username> via remote user <administrator> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed %{process} authentication from %{fqdn} for local user %{username} via remote user %{administrator}" }
				id => "message-00076:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"info" => "Timeout"
					"[event][id]" => "00076:01"
					"[rsa][message][id1]" => "00076:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:02
		# line in RSA: <agent>[<process_id>]: <process>: <fld1> Cannot read the from socket.  The error is <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{fld1} Cannot read the from socket.  The error is %{result}" }
				id => "message-00076:02"
				add_field => {
				"event_description" => "Cannot read the from socket"
					"[event][id]" => "00076:02"
					"[rsa][message][id1]" => "00076:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:06
		# line in RSA: <agent>[<process_id>]: <process>: <fld1> The second port is not reserved. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{fld1} The second port is not reserved." }
				id => "message-00076:06"
				add_field => {
				"event_description" => "The second port is not reserved."
					"[event][id]" => "00076:06"
					"[rsa][message][id1]" => "00076:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:07
		# line in RSA:   <agent>[<process_id>]: In pam_rsh, rc = <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: In pam_rsh, rc = %{resultcode}" }
				id => "message-00076:07"
				add_field => {
				"event_description" => "In pam_rsh"
					"[event][id]" => "00076:07"
					"[rsa][message][id1]" => "00076:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:08
		# line in RSA:   <agent>[<process_id>]: malformed from address
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: malformed from address" }
				id => "message-00076:08"
				add_field => {
				"event_description" => "malformed from address"
					"[event][id]" => "00076:08"
					"[rsa][message][id1]" => "00076:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rssh" {
		# MESSAGE 01131
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } chroot cmd line: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+chroot[\s]+cmd[\s]+line:[\s]+(?<action>.*)$" }
				id => "message-01131"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "chroot cmd line"
					"[event][id]" => "01131"
					"[rsa][message][id1]" => "01131"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01131:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-01131:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01131:01"
					"[rsa][message][id1]" => "01131:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rsyncd" {
		# MESSAGE 00420
		# line in RSA: <agent>[<process_id>]: connect from <shost> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost} (%{saddr})" }
				id => "message-00420"
				add_field => {
				"event_description" => "connection"
					"[event][id]" => "00420"
					"[rsa][message][id1]" => "00420"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00420:01
		# line in RSA: <agent>[<process_id>]: <process>: fopen on <filename> failed, errno <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: fopen on %{filename} failed, errno %{resultcode}" }
				id => "message-00420:01"
				add_field => {
				"event_description" => "fopen failure"
					"[event][id]" => "00420:01"
					"[rsa][message][id1]" => "00420:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00420:02
		# line in RSA: <agent>[<process_id>]: rsync to <directory> from <fqdn> (<saddr>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: rsync to %{directory} from %{fqdn} (%{saddr})" }
				id => "message-00420:02"
				add_field => {
					"[event][id]" => "00420:02"
					"[rsa][message][id1]" => "00420:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00420:03
		# line in RSA: <agent>[<process_id>]: deleting <filename>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: deleting %{filename}" }
				id => "message-00420:03"
				add_field => {
				"event_description" => "deleting archived logs folder"
					"[event][id]" => "00420:03"
					"[rsa][message][id1]" => "00420:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00420:04
		# line in RSA: <agent>[<process_id>]: skipping non-regular file "<filename>"  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: skipping non-regular file \"%{filename}\"" }
				id => "message-00420:04"
				add_field => {
				"event_description" => "skipping non-regular file"
					"[event][id]" => "00420:04"
					"[rsa][message][id1]" => "00420:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00420:05
		# line in RSA: <agent>[<process_id>]: <event_description>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00420:05"
				add_field => {
					"[event][id]" => "00420:05"
					"[rsa][message][id1]" => "00420:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId578
	# line in RSA: <hostname> <agent> <id> <fld91> <action> IN=<sinterface> OUT=<dinterface> MAC=<macaddr> SRC=<saddr> DST=<daddr> LEN=<bytes> TOS=<fld92> PREC=<fld93> TTL=<fld94> ID=<fld95> PROTO=<protocol> SPT=<sport> DPT=<dport> WINDOW=<fld96> RES=<fld97> URGP=<fld98>
	else if [logstash][msgparser][id] == "msgParserId578" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent} %{id} %{fld91} %{action} IN=%{sinterface} OUT=%{dinterface} MAC=%{macaddr} SRC=%{saddr} DST=%{daddr} LEN=%{bytes} TOS=%{fld92} PREC=%{fld93} TTL=%{fld94} ID=%{fld95} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} WINDOW=%{fld96} RES=%{fld97} URGP=%{fld98}" }
			id => "msgParserId578"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId579
	# line in RSA: <agent>: <filename> (username: <username>, IP/port: <saddr> <sport>)
	else if [logstash][msgparser][id] == "msgParserId579" {
		dissect {
			mapping => { "message" => "%{agent}: %{filename} (username: %{username}, IP/port: %{saddr} %{sport})" }
			id => "msgParserId579"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "s8013197" {
		# MESSAGE 001412
		# line in RSA:  <agent>: <action>: (<severity>) No clients in '<group>' group.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action}: (%{severity}) No clients in '%{group}' group." }
				id => "message-001412"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "No clients in group"
					"[event][id]" => "001412"
					"[rsa][message][id1]" => "001412"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001413
		# line in RSA:  <agent>: <action>: (<severity>) <group> completed, <result>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action}: (%{severity}) %{group} completed, %{result}. %{info}" }
				id => "message-001413"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Group completed"
					"[event][id]" => "001413"
					"[rsa][message][id1]" => "001413"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001414
		# line in RSA:  <agent>: <action>: (<severity>) <group> waiting for <dclass_counter1> job(s) to complete
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{action}: (%{severity}) %{group} waiting for %{dclass_counter1} job(s) to complete" }
				id => "message-001414"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Group1 waiting for job(s) to complete"
					"[event][id]" => "001414"
					"[rsa][message][id1]" => "001414"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001415
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-001415"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "001415"
					"[rsa][message][id1]" => "001415"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sapstartsrv" {
		# MESSAGE 01037
		# line in RSA:  <agent>[<process_id>]: sapstartsrv started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sapstartsrv started" }
				id => "message-01037"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01037"
					"[rsa][message][id1]" => "01037"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01038
		# line in RSA:  <agent>[<process_id>]: sapstartsrv stopped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sapstartsrv stopped" }
				id => "message-01038"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01038"
					"[rsa][message][id1]" => "01038"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId585
	# line in RSA: <agent>[<process_id>]: Unable to open trace file <filename> (Error <resultcode> <result>) [<info>]
	else if [logstash][msgparser][id] == "msgParserId585" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Unable to open trace file %{filename} (Error %{resultcode} %{result}) [%{info}]" }
			id => "msgParserId585"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId586
	# line in RSA: <agent>[<process_id>]: <event_description>, <info>
	else if [logstash][msgparser][id] == "msgParserId586" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}, %{info}" }
			id => "msgParserId586"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SAP" {
		# MESSAGE 01120
		# line in RSA:  <agent>[<process_id>]: SAP Service <process> successfully started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SAP Service %{process} successfully started." }
				id => "message-01120"
				add_field => {
				"event_description" => "SAP service started successfully."
				"hostname" => "%{hhost}"
					"[event][id]" => "01120"
					"[rsa][message][id1]" => "01120"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01120:01
		# line in RSA:  <agent>:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}:  %{event_description}" }
				id => "message-01120:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01120:01"
					"[rsa][message][id1]" => "01120:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId589
	# line in RSA: <agent>[<process_id>]: <event_description> => <info>
	else if [logstash][msgparser][id] == "msgParserId589" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} => %{info}" }
			id => "msgParserId589"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId590
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId590" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{event_description}" }
			id => "msgParserId590"
			add_field => {
				"event_description" => "HARMLESS"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId591
	# line in RSA:  <agent>: <filename>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId591" {
		dissect {
			mapping => { "message" => "%{agent}: %{filename}: %{event_description}" }
			id => "msgParserId591"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId592
	# line in RSA:  <agent>[<process_id>]: user: <username> writing file: <filename> (size: <bytes>)
	else if [logstash][msgparser][id] == "msgParserId592" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: user: %{username} writing file: %{filename} (size: %{bytes})" }
			id => "msgParserId592"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "user writing file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId593
	# line in RSA: <event_description>: <info>: <action>
	else if [logstash][msgparser][id] == "msgParserId593" {
		dissect {
			mapping => { "message" => "%{event_description}: %{info}: %{action}" }
			id => "msgParserId593"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId594
	# line in RSA:  <fld21> <fld23>,<fld53> Search Server <event_description>
	else if [logstash][msgparser][id] == "msgParserId594" {
		dissect {
			mapping => { "message" => "%{fld21} %{fld23},%{fld53} Search Server %{event_description}" }
			id => "msgParserId594"
			add_field => {
				"hostname" => "%{hhost}"
				"agent" => "Search Server"
				"[logstash][fullDateTimeString]" => "%{fld21} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SEAGENT" {
		# MESSAGE 00458
		# line in RSA: <agent>[<process_id>]: connection from <saddr>:<sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection from %{saddr}:%{sport}" }
				id => "message-00458"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful network connection"
					"[event][id]" => "00458"
					"[rsa][message][id1]" => "00458"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00458:01
		# line in RSA: <agent>[<process_id>]: start
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: start" }
				id => "message-00458:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Start"
					"[event][id]" => "00458:01"
					"[rsa][message][id1]" => "00458:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00458:02
		# line in RSA: <agent>[<process_id>]: Execute <process>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Execute %{process}" }
				id => "message-00458:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Execute process"
					"[event][id]" => "00458:02"
					"[rsa][message][id1]" => "00458:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00458:03
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00458:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00458:03"
					"[rsa][message][id1]" => "00458:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId598
	# line in RSA: <agent>: Successfully started <process>
	else if [logstash][msgparser][id] == "msgParserId598" {
		dissect {
			mapping => { "message" => "%{agent}: Successfully started %{process}" }
			id => "msgParserId598"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "selogrd" {
		# MESSAGE 01063:03
		# line in RSA:  <agent>[<process_id>]: The eTrustAC-collector/eAudit-Router on host <shost> is not using the latest protocol version (info only).  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: The eTrustAC-collector/eAudit-Router on host %{shost} is not using the latest protocol version (info only).  %{info}" }
				id => "message-01063:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "eTrustAC-collector/eAudit-Router not using the latest protocol version"
					"[event][id]" => "01063:03"
					"[rsa][message][id1]" => "01063:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:02
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Cannot resolve destination host. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Cannot[\s]+resolve[\s]+destination[\s]+host\.[\s]+(?<result>.*)$" }
				id => "message-01063:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Cannot resolve destination host"
					"[event][id]" => "01063:02"
					"[rsa][message][id1]" => "01063:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:01
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Unable to communicate with [<info>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+communicate[\s]+with[\s]+\[(?<info>[^\]]*)\]$" }
				id => "message-01063:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to communicate with host"
					"[event][id]" => "01063:01"
					"[rsa][message][id1]" => "01063:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } ERROR: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+ERROR:[\s]+(?<event_description>.*)$" }
				id => "message-01063"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "selogrd error"
					"[event][id]" => "01063"
					"[rsa][message][id1]" => "01063"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01063:04
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01063:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01063:04"
					"[rsa][message][id1]" => "01063:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "send-mail" {
		# MESSAGE 00516
		# line in RSA: <agent>[<process_id>]: <interface> { : from=<from> | : to=<to> } , <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<interface>[^\s]*)[\s]+([\s]*:[\s]+from=(?<from>[^\s]*)[\s]+|[\s]*:[\s]+to=(?<to>[^\s]*)[\s]+)[\s]+,[\s]+(?<info>.*)$" }
				id => "message-00516"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_theme" => "Communication"
				"event_description" => "mail sent"
				"hostname" => "%{hhost}"
					"[event][id]" => "00516"
					"[rsa][message][id1]" => "00516"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00516:01
		# line in RSA: <agent>[<process_id>]: <action>(<saddr>) failed: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}(%{saddr}) failed: %{resultcode}" }
				id => "message-00516:01"
				add_field => {
				"event_description" => "gethostbyaddr failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00516:01"
					"[rsa][message][id1]" => "00516:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail" {
		# MESSAGE 00004
		# line in RSA: <agent>[<process_id>]: <fld53>: lost input channel from <fld1> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: lost input channel from %{fld1} [%{saddr}]" }
				id => "message-00004"
				add_field => {
				"event_description" => "lost input channel"
				"hostname" => "%{hhost}"
					"[event][id]" => "00004"
					"[rsa][message][id1]" => "00004"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:01
		# line in RSA: <agent>[<process_id>]: <fld53>: Null connection from <shost> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: Null connection from %{shost} [%{saddr}]" }
				id => "message-00004:01"
				add_field => {
				"event_description" => "Null connection"
					"[event][id]" => "00004:01"
					"[rsa][message][id1]" => "00004:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:02
		# line in RSA: <agent>[<process_id>]: <fld53>: postmaster notify: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: postmaster notify: %{info}" }
				id => "message-00004:02"
				add_field => {
				"event_description" => "postmaster notify"
				"hostname" => "%{hhost}"
					"[event][id]" => "00004:02"
					"[rsa][message][id1]" => "00004:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:03
		# line in RSA: <agent>[<process_id>]: <fld53>: DSN: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: DSN: %{info}" }
				id => "message-00004:03"
				add_field => {
				"event_description" => "DSN - sendmail"
				"hostname" => "%{hhost}"
					"[event][id]" => "00004:03"
					"[rsa][message][id1]" => "00004:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:04
		# line in RSA:  <agent>[<process_id>]: <fld53>: timeout waiting for input from <fqdn> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: timeout waiting for input from %{fqdn} %{info}" }
				id => "message-00004:04"
				add_field => {
				"event_description" => "timeout"
				"hostname" => "%{hhost}"
					"[event][id]" => "00004:04"
					"[rsa][message][id1]" => "00004:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:05
		# line in RSA:  <agent>[<process_id>]: <fld53>: collect: premature EOM: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: collect: premature EOM: %{resultcode}" }
				id => "message-00004:05"
				add_field => {
				"event_description" => "premature EOM"
				"hostname" => "%{hhost}"
					"[event][id]" => "00004:05"
					"[rsa][message][id1]" => "00004:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:06
		# line in RSA:   <agent>[<process_id>]: <fld53>: SYSERR(root): collect: I/O error on connection from <shost>, from=<from>: Connection reset by <fld54> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: SYSERR(root): collect: I/O error on connection from %{shost}, from=%{from}: Connection reset by %{fld54}" }
				id => "message-00004:06"
				add_field => {
				"event_description" => "I/O Error on Connection, connection reset."
				"info" => "I/O error"
				"hostname" => "%{hhost}"
					"[event][id]" => "00004:06"
					"[rsa][message][id1]" => "00004:06"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:17
		# line in RSA: <agent>[<process_id>]: <fld53>: from=<from>, size=<bytes>, class=<fld54>, nrcpts=<fld56>, proto=<protocol>, daemon=<service>, relay=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: from=%{from}, size=%{bytes}, class=%{fld54}, nrcpts=%{fld56}, proto=%{protocol}, daemon=%{service}, relay=%{shost}" }
				id => "message-00004:17"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "00004:17"
					"[rsa][message][id1]" => "00004:17"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:07
		# line in RSA: <agent>[<process_id>]: <fld53>: from=<from>, size=<bytes>, class=<fld54>, pri=<fld55>, nrcpts=<fld56>, proto=<protocol>, relay=<shost> [<saddr>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: from=%{from}, size=%{bytes}, class=%{fld54}, pri=%{fld55}, nrcpts=%{fld56}, proto=%{protocol}, relay=%{shost} [%{saddr}]" }
				id => "message-00004:07"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "00004:07"
					"[rsa][message][id1]" => "00004:07"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:08
		# line in RSA: <agent>[<process_id>]: <fld53>: from=<from>, size=<bytes>, class=<fld54>, { nrcpts=<fld55>, msgid=<id> |  nrcpts=<fld55>msgid=<id>} , relay=<shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld53>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld54>[^,]*),[\s]+([\s]*nrcpts=(?<fld55>[^,]*),[\s]+msgid=(?<id>[^\s]*)[\s]+|[\s]*nrcpts=(?<fld55>[^m]*)msgid=(?<id>[^\s]*))[\s]+,[\s]+relay=(?<shost>.*)$" }
				id => "message-00004:08"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "00004:08"
					"[rsa][message][id1]" => "00004:08"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:09
		# line in RSA: <agent>[<process_id>]: <fld53>: to=<to>, ctladdr=<username>, delay=<fld54>, xdelay=<fld55>, mailer=<fld56>, pri=<fld57>, dsn=<fld58>, stat=<fld59>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: to=%{to}, ctladdr=%{username}, delay=%{fld54}, xdelay=%{fld55}, mailer=%{fld56}, pri=%{fld57}, dsn=%{fld58}, stat=%{fld59}" }
				id => "message-00004:09"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
					"[event][id]" => "00004:09"
					"[rsa][message][id1]" => "00004:09"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:10
		# line in RSA: <agent>[<process_id>]: <fld53>: [<saddr>] did not issue <action> during connection to MTA 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: [%{saddr}] did not issue %{action} during connection to MTA" }
				id => "message-00004:10"
				add_field => {
				"event_description" => "did not issue MAIL/EXPN/VRFY/ETRN "
					"[event][id]" => "00004:10"
					"[rsa][message][id1]" => "00004:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:11
		# line in RSA: <agent>[<process_id>]: My unqualified host name (<hostname>) unknown; sleeping for retry 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: My unqualified host name (%{hostname}) unknown; sleeping for retry" }
				id => "message-00004:11"
				add_field => {
				"event_description" => "Unqualified host name"
					"[event][id]" => "00004:11"
					"[rsa][message][id1]" => "00004:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:12
		# line in RSA: <agent>[<process_id>]: unable to qualify my own domain name (<hostname>) -- using short name 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: unable to qualify my own domain name (%{hostname}) -- using short name" }
				id => "message-00004:12"
				add_field => {
				"event_description" => "unable to qualify own domain name"
					"[event][id]" => "00004:12"
					"[rsa][message][id1]" => "00004:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:13
		# line in RSA: <agent>[<process_id>]: <action>(IPv6<daddr_v6>) failed: <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}(IPv6%{daddr_v6}) failed: %{resultcode}" }
				id => "message-00004:13"
				add_field => {
				"event_description" => "gethostbyaddr failed"
					"[event][id]" => "00004:13"
					"[rsa][message][id1]" => "00004:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:14
		# line in RSA: <agent>[<process_id>]: <fld53>: [<saddr>]: { VRFY | vrfy } root 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld53>[^:]*):[\s]+\[(?<saddr>[^\]]*)\]:[\s]+([\s]*VRFY[\s]+|[\s]*vrfy[\s]+)[\s]+root[\s]+$" }
				id => "message-00004:14"
				add_field => {
				"event_description" => "Verify root"
					"[event][id]" => "00004:14"
					"[rsa][message][id1]" => "00004:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:15
		# line in RSA: <agent>[<process_id>]: <fld53>: [<saddr>]: expn root
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: [%{saddr}]: expn root" }
				id => "message-00004:15"
				add_field => {
				"event_description" => "expn root"
					"[event][id]" => "00004:15"
					"[rsa][message][id1]" => "00004:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:16
		# line in RSA:  <agent>[<process_id>]: <fld53>: Authentication-Warning: <daddr>: [<saddr>] didn't use <network_service> protocol
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: Authentication-Warning: %{daddr}: [%{saddr}] didn't use %{network_service} protocol" }
				id => "message-00004:16"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication-Warning"
					"[event][id]" => "00004:16"
					"[rsa][message][id1]" => "00004:16"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:18
		# line in RSA: <agent>[<process_id>]: <fld53>: ruleset=<fld82>, arg1=<<<fld54>>, relay=[<saddr>], reject=<fld83>... Relaying denied. IP name lookup failed [<fld84>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: ruleset=%{fld82}, arg1=<%{fld54}>, relay=[%{saddr}], reject=%{fld83}... Relaying denied. IP name lookup failed [%{fld84}]" }
				id => "message-00004:18"
				add_field => {
				"event_description" => "Relaying denied. IP name lookup failed"
					"[event][id]" => "00004:18"
					"[rsa][message][id1]" => "00004:18"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:19
		# line in RSA: <agent>[<process_id>]: <fld53>: ruleset=<fld82>, arg1=<fld54>, relay=[<saddr>], reject=<fld83>... Relaying denied. IP name lookup failed [<fld84>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: ruleset=%{fld82}, arg1=%{fld54}, relay=[%{saddr}], reject=%{fld83}... Relaying denied. IP name lookup failed [%{fld84}]" }
				id => "message-00004:19"
				add_field => {
				"event_description" => "Relaying denied. IP name lookup failed"
					"[event][id]" => "00004:19"
					"[rsa][message][id1]" => "00004:19"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:20
		# line in RSA: <agent>[<process_id>]: <fld53>: ruleset=<fld82>, arg1=<fld54>, relay=[<saddr>], reject=<fld83> Domain of sender address <from> does not exist
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: ruleset=%{fld82}, arg1=%{fld54}, relay=[%{saddr}], reject=%{fld83} Domain of sender address %{from} does not exist" }
				id => "message-00004:20"
				add_field => {
				"event_description" => "Sender domain address does not exist."
					"[event][id]" => "00004:20"
					"[rsa][message][id1]" => "00004:20"
					"[event][categoryid]" => "1207010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:21
		# line in RSA: <agent>[<process_id>]: <fld53>: "<action>" command from [<saddr>] (<fld84>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: \"%{action}\" command from [%{saddr}] (%{fld84})" }
				id => "message-00004:21"
				add_field => {
					"[event][id]" => "00004:21"
					"[rsa][message][id1]" => "00004:21"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004:22
		# line in RSA: { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00004:22"
				add_field => {
					"[event][id]" => "00004:22"
					"[rsa][message][id1]" => "00004:22"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "seosd" {
		# MESSAGE 01187:04
		# line in RSA:  <agent>[<process_id>]: SEOS_getnext error, <result> [<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SEOS_getnext error, %{result} [%{info}]" }
				id => "message-01187:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "SEOS_getnext error"
					"[event][id]" => "01187:04"
					"[rsa][message][id1]" => "01187:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01187:03
		# line in RSA:  <agent>[<process_id>]: FATAL <space>! <info> (<result>) <space> Layer <space> = <application> Stage <space> = <dclass_counter1> Return Code = 0x<resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: FATAL %{space}! %{info} (%{result}) %{space} Layer %{space} = %{application} Stage %{space} = %{dclass_counter1} Return Code = 0x%{resultcode}" }
				id => "message-01187:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Daemon FATAL"
					"[event][id]" => "01187:03"
					"[rsa][message][id1]" => "01187:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01187:02
		# line in RSA:   <agent>[<process_id>]: INFO<space>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: INFO%{space}: %{info}" }
				id => "message-01187:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Daemon INFO"
					"[event][id]" => "01187:02"
					"[rsa][message][id1]" => "01187:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01187
		# line in RSA:  <agent>[<process_id>]: START-UP: <process> PID=<uid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: START-UP: %{process} PID=%{uid}" }
				id => "message-01187"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Daemon START-UP"
					"[event][id]" => "01187"
					"[rsa][message][id1]" => "01187"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01187:01
		# line in RSA:  <agent>[<process_id>]: <process> daemon <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process} daemon %{action}" }
				id => "message-01187:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Daemon Activity"
					"[event][id]" => "01187:01"
					"[rsa][message][id1]" => "01187:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "seoswd" {
		# MESSAGE 01188:04
		# line in RSA:  <agent>: Error eTrustAC is not running <result> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Error eTrustAC is not running %{result} [%{filename}]" }
				id => "message-01188:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "eTrustAC is not running"
					"[event][id]" => "01188:04"
					"[rsa][message][id1]" => "01188:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01188:03
		# line in RSA:  <agent>: Communication { time-out | time out } to seosd. <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+Communication[\s]+([\s]*time\-out[\s]+|[\s]*time[\s]+out[\s]+)[\s]+to[\s]+seosd\.[\s]+(?<result>.*)$" }
				id => "message-01188:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Communication time-out to seosd"
					"[event][id]" => "01188:03"
					"[rsa][message][id1]" => "01188:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01188:02
		# line in RSA:  <agent>: Cannot load/open license library: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Cannot load/open license library: %{filename}" }
				id => "message-01188:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Cannot load/open license library"
					"[event][id]" => "01188:02"
					"[rsa][message][id1]" => "01188:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01188:01
		# line in RSA:  <agent>: { Watchdog | watchdog } initialized { Watchdog | watchdog } exten
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*Watchdog[\s]+|[\s]*watchdog[\s]+)[\s]+initialized[\s]+([\s]*Watchdog[\s]+|[\s]*watchdog[\s]+)[\s]+exten$" }
				id => "message-01188:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "watchdog initialized watchdog extensions"
					"[event][id]" => "01188:01"
					"[rsa][message][id1]" => "01188:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01188
		# line in RSA:  <agent>: { Watchdog | watchdog } started.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+([\s]*Watchdog[\s]+|[\s]*watchdog[\s]+)[\s]+started\.$" }
				id => "message-01188"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "watchdog started"
					"[event][id]" => "01188"
					"[rsa][message][id1]" => "01188"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId638
	# line in RSA:  <agent>: ERROR: <event_description>
	else if [logstash][msgparser][id] == "msgParserId638" {
		dissect {
			mapping => { "message" => "%{agent}: ERROR: %{event_description}" }
			id => "msgParserId638"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE 00446
		# line in RSA: [<process_id>]: Server has been enabled by CMS <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{process_id}]: Server has been enabled by CMS %{hostname}" }
				id => "message-00446"
				add_field => {
				"event_description" => "Server enabled by CMS."
					"[event][id]" => "00446"
					"[rsa][message][id1]" => "00446"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:01
		# line in RSA:  Server Intelligence Agent is stopping.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent is stopping." }
				id => "message-00446:01"
				add_field => {
				"event_description" => "Server Intelligence Agent is stopping"
					"[event][id]" => "00446:01"
					"[rsa][message][id1]" => "00446:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:02
		# line in RSA:  Server Intelligence Agent is requesting server <hostname> to terminate.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent is requesting server %{hostname} to terminate." }
				id => "message-00446:02"
				add_field => {
				"event_description" => "Server Intelligence Agent is requesting server to terminate"
					"[event][id]" => "00446:02"
					"[rsa][message][id1]" => "00446:02"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:03
		# line in RSA:  Server Intelligence Agent: server <hostname> stopped with exit code = <resultcode>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent: server %{hostname} stopped with exit code = %{resultcode}." }
				id => "message-00446:03"
				add_field => {
				"event_description" => "Server Intelligence Agent: server stopped with exit code"
					"[event][id]" => "00446:03"
					"[rsa][message][id1]" => "00446:03"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:04
		# line in RSA:  Server Intelligence Agent: server <hostname> has been started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent: server %{hostname} has been started." }
				id => "message-00446:04"
				add_field => {
				"event_description" => "Server Intelligence Agent: server started"
					"[event][id]" => "00446:04"
					"[rsa][message][id1]" => "00446:04"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:05
		# line in RSA:  Server Intelligence Agent is running.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent is running." }
				id => "message-00446:05"
				add_field => {
				"event_description" => "Server Intelligence Agent is running"
					"[event][id]" => "00446:05"
					"[rsa][message][id1]" => "00446:05"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:06
		# line in RSA:  Server Intelligence Agent: server <hostname> stopped unexpectedly.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent: server %{hostname} stopped unexpectedly." }
				id => "message-00446:06"
				add_field => {
				"event_description" => "Server Intelligence Agent: server stopped unexpectedly"
					"[event][id]" => "00446:06"
					"[rsa][message][id1]" => "00446:06"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:07
		# line in RSA:  Server Intelligence Agent: server <hostname> is considered failed because it has stopped <fld1> Please restart this server.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent: server %{hostname} is considered failed because it has stopped %{fld1} Please restart this server." }
				id => "message-00446:07"
				add_field => {
				"event_description" => "Server Intelligence Agent: server is considered failed"
					"[event][id]" => "00446:07"
					"[rsa][message][id1]" => "00446:07"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:08
		# line in RSA:  Server Intelligence Agent has established a connection to CMS at <hostname>:<protocol>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent has established a connection to CMS at %{hostname}:%{protocol}." }
				id => "message-00446:08"
				add_field => {
				"event_description" => "Server Intelligence Agent has established a connection to CMS"
					"[event][id]" => "00446:08"
					"[rsa][message][id1]" => "00446:08"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:09
		# line in RSA:  Server Intelligence Agent has failed to initialize. The port number is likely in use. Please confirm that your Server Intelligence Agent port number is not in use by another program. bind() failed: <fld1>: Address already in use
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent has failed to initialize. The port number is likely in use. Please confirm that your Server Intelligence Agent port number is not in use by another program. bind() failed: %{fld1}: Address already in use" }
				id => "message-00446:09"
				add_field => {
				"event_description" => "Server Intelligence Agent has failed to initialize"
					"[event][id]" => "00446:09"
					"[rsa][message][id1]" => "00446:09"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:10
		# line in RSA:  Server Intelligence Agent: server <hostname> is being recycled.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server Intelligence Agent: server %{hostname} is being recycled." }
				id => "message-00446:10"
				add_field => {
				"event_description" => "Server Intelligence Agent: server is being recycled"
					"[event][id]" => "00446:10"
					"[rsa][message][id1]" => "00446:10"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:11
		# line in RSA:  Server <hostname> <network_service> Port Published Addresses: <fld1>:<fld2>. Listening on port(s):<saddr>:<sport>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server %{hostname} %{network_service} Port Published Addresses: %{fld1}:%{fld2}. Listening on port(s):%{saddr}:%{sport}." }
				id => "message-00446:11"
				add_field => {
					"[event][id]" => "00446:11"
					"[rsa][message][id1]" => "00446:11"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00446:12
		# line in RSA:  Server <hostname> <network_service> Port Failed to listen on port(s): <saddr>:<sport>, <shost>:<fld1>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Server %{hostname} %{network_service} Port Failed to listen on port(s): %{saddr}:%{sport}, %{shost}:%{fld1}." }
				id => "message-00446:12"
				add_field => {
				"event_description" => "HTTP port Failed to listen"
					"[event][id]" => "00446:12"
					"[rsa][message][id1]" => "00446:12"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sesu" {
		# MESSAGE 001399
		# line in RSA:  <agent>: FAILED password attempt for user <username> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FAILED password attempt for user %{username} on %{terminal}" }
				id => "message-001399"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"action" => "failed password attempt for user"
					"[event][id]" => "001399"
					"[rsa][message][id1]" => "001399"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001400
		# line in RSA:  <agent>: <username> to root on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username} to root on %{terminal}" }
				id => "message-001400"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "successful login by user as root"
					"[event][id]" => "001400"
					"[rsa][message][id1]" => "001400"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId654
	# line in RSA:  <agent>[<process_id>]: <service>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId654" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{service}: %{event_description}" }
			id => "msgParserId654"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId655
	# line in RSA: <agent>: <fld1> <action>, "<username>", Directory name: <directory> 
	else if [logstash][msgparser][id] == "msgParserId655" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} %{action}, \"%{username}\", Directory name: %{directory}" }
			id => "msgParserId655"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sftp-server" {
		# MESSAGE 01046:07
		# line in RSA:  <agent>[<process_id>]: session opened for local user <username> from [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for local user %{username} from [%{saddr}]" }
				id => "message-01046:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for local user"
					"[event][id]" => "01046:07"
					"[rsa][message][id1]" => "01046:07"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:06
		# line in RSA:  <agent>[<process_id>]: session closed for local user <username> from [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for local user %{username} from [%{saddr}]" }
				id => "message-01046:06"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for local user"
					"[event][id]" => "01046:06"
					"[rsa][message][id1]" => "01046:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:05
		# line in RSA:  <agent>[<process_id>]: sent status <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: sent status %{result}" }
				id => "message-01046:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sent status"
					"[event][id]" => "01046:05"
					"[rsa][message][id1]" => "01046:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:04
		# line in RSA:  <agent>[<process_id>]: open "<filename>" flags <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: open \"%{filename}\" flags %{info}" }
				id => "message-01046:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "open file with flags"
					"[event][id]" => "01046:04"
					"[rsa][message][id1]" => "01046:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:03
		# line in RSA:  <agent>[<process_id>]: { opendir | closedir } "<directory>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*opendir[\s]+|[\s]*closedir[\s]+)[\s]+\"(?<directory>[^\"]*)\"$" }
				id => "message-01046:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "open/close directory"
					"[event][id]" => "01046:03"
					"[rsa][message][id1]" => "01046:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:02
		# line in RSA:  <agent>[<process_id>]: <application> Skipping attribute <policyname>, <result>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application} Skipping attribute %{policyname}, %{result}!" }
				id => "message-01046:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Skipping attribute"
					"[event][id]" => "01046:02"
					"[rsa][message][id1]" => "01046:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046:01
		# line in RSA: <agent>[<process_id>]: <severity>: bad message from <saddr> local user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: bad message from %{saddr} local user %{username}" }
				id => "message-01046:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error: bad message from local user"
					"[event][id]" => "01046:01"
					"[rsa][message][id1]" => "01046:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01046
		# line in RSA: <agent>[<process_id>]: <severity>: <process>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{process}: %{info}" }
				id => "message-01046"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "error: process_write: write failed"
					"[event][id]" => "01046"
					"[rsa][message][id1]" => "01046"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId664
	# line in RSA: <hostname> <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId664" {
		dissect {
			mapping => { "message" => "%{hostname} %{event_description}: %{info}" }
			id => "msgParserId664"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId665
	# line in RSA: <agent>[<process_id>]: <fld1> : <event_description>
	else if [logstash][msgparser][id] == "msgParserId665" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld1} : %{event_description}" }
			id => "msgParserId665"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "slapd" {
		# MESSAGE 01133
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } conn=<sessionid> <service> <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+conn=(?<sessionid>[^\s]*)[\s]+(?<service>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-01133"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "slapd activity"
					"[event][id]" => "01133"
					"[rsa][message][id1]" => "01133"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001390
		# line in RSA:  <agent>[<process_id>]: looking for plugins in '<directory>', <disposition>, error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: looking for plugins in '%{directory}', %{disposition}, error: %{result}" }
				id => "message-001390"
				add_field => {
				"event_description" => "error looking for plugins in directory"
					"[event][id]" => "001390"
					"[rsa][message][id1]" => "001390"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId668
	# line in RSA: <agent>: <event_description> Possible causes include: <info>
	else if [logstash][msgparser][id] == "msgParserId668" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description} Possible causes include: %{info}" }
			id => "msgParserId668"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId669
	# line in RSA:  <agent>: <event_description>, error=<resultcode> 
	else if [logstash][msgparser][id] == "msgParserId669" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}, error=%{resultcode}" }
			id => "msgParserId669"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId670
	# line in RSA: <agent>[<process_id>]: [<fld21> <fld23>, <fld53>] <filename>:<action>
	else if [logstash][msgparser][id] == "msgParserId670" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [%{fld21} %{fld23}, %{fld53}] %{filename}:%{action}" }
			id => "msgParserId670"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld21} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	# PARSER msgParserId671
	# line in RSA: <hostname> <agent>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId671" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}:%{event_description}" }
			id => "msgParserId671"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId672
	# line in RSA:  <agent>[<process_id>]: <application> DCNs (<info>) successfully { rejected | reset } 
	else if [logstash][msgparser][id] == "msgParserId672" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<application>[^\s]*)[\s]+DCNs[\s]+\((?<info>[^\)]*)\)[\s]+successfully[\s]+([\s]*rejected[\s]+|[\s]*reset[\s]+)[\s]+$" }
			id => "msgParserId672"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "DCNs successfully reset or rejected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId673
	# line in RSA: <agent>[<process_id>]: cannot listen on port <network_port> error <resultcode>
	else if [logstash][msgparser][id] == "msgParserId673" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: cannot listen on port %{network_port} error %{resultcode}" }
			id => "msgParserId673"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "snmpd" {
		# MESSAGE 00017:04
		# line in RSA:  <agent>[<process_id>]: Couldn't open device <device>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Couldn't open device %{device}" }
				id => "message-00017:04"
				add_field => {
				"event_description" => "Couldn't open device"
					"[event][id]" => "00017:04"
					"[rsa][message][id1]" => "00017:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:03
		# line in RSA:  <agent>[<process_id>]: <result>...  shutting down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{result}...  shutting down." }
				id => "message-00017:03"
				add_field => {
				"event_description" => "shutting down"
					"[event][id]" => "00017:03"
					"[rsa][message][id1]" => "00017:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:02
		# line in RSA:  <agent>[<process_id>]: NET-SNMP version <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: NET-SNMP version %{version}" }
				id => "message-00017:02"
				add_field => {
					"[event][id]" => "00017:02"
					"[rsa][message][id1]" => "00017:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017:01
		# line in RSA: <agent>[<process_id>]: <severity>: <event_description> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description} (%{saddr})" }
				id => "message-00017:01"
				add_field => {
					"[event][id]" => "00017:01"
					"[rsa][message][id1]" => "00017:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00017
		# line in RSA:  <agent>[<process_id>]: <severity>: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}" }
				id => "message-00017"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00017"
					"[rsa][message][id1]" => "00017"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "snmptrapd" {
		# MESSAGE 01104
		# line in RSA: <agent>[<process_id>]: <saddr>: Enterprise Specific Trap <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{saddr}: Enterprise Specific Trap %{event_description}" }
				id => "message-01104"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01104"
					"[rsa][message][id1]" => "01104"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:06
		# line in RSA: <agent>[<process_id>]: <fld21> <fld23> NET-SNMP version <fld1> Stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld21} %{fld23} NET-SNMP version %{fld1} Stopped." }
				id => "message-01104:06"
				add_field => {
				"event_description" => "NET-SNMP version Stopped"
					"[event][id]" => "01104:06"
					"[rsa][message][id1]" => "01104:06"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:05
		# line in RSA:  <agent>[<process_id>]: NET-SNMP version <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: NET-SNMP version %{fld1}" }
				id => "message-01104:05"
				add_field => {
					"[event][id]" => "01104:05"
					"[rsa][message][id1]" => "01104:05"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:07
		# line in RSA:  <agent>[<process_id>]: netsnmp_assert <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: netsnmp_assert %{event_description}" }
				id => "message-01104:07"
				add_field => {
				"event_description" => "version Stopped"
					"[event][id]" => "01104:07"
					"[rsa][message][id1]" => "01104:07"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:08
		# line in RSA: <agent>[<process_id>]: No access configuration - dropping trap.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: No access configuration - dropping trap." }
				id => "message-01104:08"
				add_field => {
				"event_description" => "No access configuration - dropping trap"
					"[event][id]" => "01104:08"
					"[rsa][message][id1]" => "01104:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:09
		# line in RSA: <agent>[<process_id>]: <severity>: no access control information configured. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: no access control information configured. %{info}" }
				id => "message-01104:09"
				add_field => {
				"event_description" => "no access control information configured"
					"[event][id]" => "01104:09"
					"[rsa][message][id1]" => "01104:09"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01104:01
		# line in RSA:  <agent>[<process_id>]: Stopping <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Stopping %{service}" }
				id => "message-01104:01"
				add_field => {
				"event_description" => "Stopping snmptrapd"
					"[event][id]" => "01104:01"
					"[rsa][message][id1]" => "01104:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "spamd" {
		# MESSAGE 00369
		# line in RSA: <agent>[<process_id>]: <process>: connection from <shost> [<saddr>] at port <dport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: connection from %{shost} [%{saddr}] at port %{dport}" }
				id => "message-00369"
				add_field => {
				"event_description" => "connection"
					"[event][id]" => "00369"
					"[rsa][message][id1]" => "00369"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00369:01
		# line in RSA: <agent>[<process_id>]: <severity>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}" }
				id => "message-00369:01"
				add_field => {
					"[event][id]" => "00369:01"
					"[rsa][message][id1]" => "00369:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId687
	# line in RSA:  <agent>: ERROR <event_description>
	else if [logstash][msgparser][id] == "msgParserId687" {
		dissect {
			mapping => { "message" => "%{agent}: ERROR %{event_description}" }
			id => "msgParserId687"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId688
	# line in RSA: <agent>[<process_id>]: IMPORT file from host <severity> cmd is <action>, local user <username>.
	else if [logstash][msgparser][id] == "msgParserId688" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: IMPORT file from host %{severity} cmd is %{action}, local user %{username}." }
			id => "msgParserId688"
			add_field => {
				"event_description" => "Importing file from host"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId689
	# line in RSA:  <agent>: <service> Service <event_description>
	else if [logstash][msgparser][id] == "msgParserId689" {
		dissect {
			mapping => { "message" => "%{agent}: %{service} Service %{event_description}" }
			id => "msgParserId689"
			add_field => {
				"hostname" => "%{hhost}"
				"action" => "Servoce start"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId690
	# line in RSA: <agent>(<process>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId690" {
		dissect {
			mapping => { "message" => "%{agent}(%{process}): %{event_description}" }
			id => "msgParserId690"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId691
	# line in RSA: <agent>[<process_id>]: <hostname> <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId691" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} %{severity} %{event_description}" }
			id => "msgParserId691"
			add_field => {
				"event_description" => "HARMLESS"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId692
	# line in RSA: <agent>[<process_id>]: <severity>: <event_description>: <info> 
	else if [logstash][msgparser][id] == "msgParserId692" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}: %{info}" }
			id => "msgParserId692"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-broker-g3" {
		# MESSAGE 00492:10
		# line in RSA:  <agent>: <fld1> Key_store_add_provider, Type: <authmethod>, Init info: <info>, { directory(<filename>) | polling_interval_ms(<dclass_counter1>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+Key_store_add_provider,[\s]+Type:[\s]+(?<authmethod>[^,]*),[\s]+Init[\s]+info:[\s]+(?<info>[^,]*),[\s]+([\s]*directory\((?<filename>[^\)]*)\)[\s]+|[\s]*polling_interval_ms\((?<dclass_counter1>[^\)]*)\)[\s]+)$" }
				id => "message-00492:10"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Key_store_add_provider"
					"[event][id]" => "00492:10"
					"[rsa][message][id1]" => "00492:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:11
		# line in RSA:  <agent>: <fld1> Key_store_create <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Key_store_create %{info}" }
				id => "message-00492:11"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Key_store_create"
					"[event][id]" => "00492:11"
					"[rsa][message][id1]" => "00492:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:12
		# line in RSA:  <agent>: <fld1> Key_store_destroy <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Key_store_destroy %{info}" }
				id => "message-00492:12"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Key_store_destroy"
					"[event][id]" => "00492:12"
					"[rsa][message][id1]" => "00492:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492
		# line in RSA: <agent>: <fld1> Algorithm_negotiation_success, "<info>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Algorithm_negotiation_success, \"%{info}\"" }
				id => "message-00492"
				add_field => {
				"event_description" => "Algorithm_negotiation_success"
					"[event][id]" => "00492"
					"[rsa][message][id1]" => "00492"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:01
		# line in RSA:  <agent>: <fld1> Auth_methods_available, Auth methods: <info>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Auth_methods_available, Auth methods: %{info}, Session-Id: %{sessionid}" }
				id => "message-00492:01"
				add_field => {
					"[event][id]" => "00492:01"
					"[rsa][message][id1]" => "00492:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:02
		# line in RSA:  <agent>: <fld1> Broker_channel_control, Client: <protocol>, Pid: <process_id>, Channel Id: <fld54>, Command: <action>, Args: <fld53>, Local username: <username> Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_channel_control, Client: %{protocol}, Pid: %{process_id}, Channel Id: %{fld54}, Command: %{action}, Args: %{fld53}, Local username: %{username} Session-Id: %{sessionid}" }
				id => "message-00492:02"
				add_field => {
					"[event][id]" => "00492:02"
					"[rsa][message][id1]" => "00492:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:03
		# line in RSA:  <agent>: <fld1> Broker_ui_auth_failed, Client: <protocol>, Pid: <process_id>, Local username: <username>, <space> "<info>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_ui_auth_failed, Client: %{protocol}, Pid: %{process_id}, Local username: %{username}, %{space} \"%{info}\"" }
				id => "message-00492:03"
				add_field => {
					"[event][id]" => "00492:03"
					"[rsa][message][id1]" => "00492:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:04
		# line in RSA:  <agent>: <fld1> Key_store_sign, Key path: <filename>, Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Key_store_sign, Key path: %{filename}, Session-Id: %{sessionid}" }
				id => "message-00492:04"
				add_field => {
					"[event][id]" => "00492:04"
					"[rsa][message][id1]" => "00492:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:05
		# line in RSA:  <agent>: <fld1> Broker_connection_connect_failed, Dst: <dhost>, Dst Port: <dport>, Local username: <username>, Remote username: <administrator>, Uses gateway?: <fld2>, Session-Id: <sessionid>, "<info>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_connection_connect_failed, Dst: %{dhost}, Dst Port: %{dport}, Local username: %{username}, Remote username: %{administrator}, Uses gateway?: %{fld2}, Session-Id: %{sessionid}, \"%{info}\"" }
				id => "message-00492:05"
				add_field => {
					"[event][id]" => "00492:05"
					"[rsa][message][id1]" => "00492:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:06
		# line in RSA: <agent>: <fld1> Broker_userauth_failure, "<info>", Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_userauth_failure, \"%{info}\", Session-Id: %{sessionid}" }
				id => "message-00492:06"
				add_field => {
					"[event][id]" => "00492:06"
					"[rsa][message][id1]" => "00492:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:07
		# line in RSA:  <agent>: <fld1> Broker_starting, Local username: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_starting, Local username: %{username}" }
				id => "message-00492:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Broker_starting"
					"[event][id]" => "00492:07"
					"[rsa][message][id1]" => "00492:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:08
		# line in RSA:  <agent>: <fld1> Broker_running, Local username: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_running, Local username: %{username}" }
				id => "message-00492:08"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Broker_running"
					"[event][id]" => "00492:08"
					"[rsa][message][id1]" => "00492:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00492:09
		# line in RSA:  <agent>: <fld1> Broker_stopping, Local username: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Broker_stopping, Local username: %{username}" }
				id => "message-00492:09"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Broker_stopping"
					"[event][id]" => "00492:09"
					"[rsa][message][id1]" => "00492:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId706
	# line in RSA: <agent>[<process_id>]: Opening listener at <directory> succeeded.
	else if [logstash][msgparser][id] == "msgParserId706" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Opening listener at %{directory} succeeded." }
			id => "msgParserId706"
			add_field => {
				"event_description" => "Opening listener successful."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId707
	# line in RSA: <agent>[<process_id>]: Started <process> (<info>)
	else if [logstash][msgparser][id] == "msgParserId707" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Started %{process} (%{info})" }
			id => "msgParserId707"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-mgmt-router" {
		# MESSAGE 01025
		# line in RSA: <agent>[<process_id>]: Failed to connect to <saddr>:<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed to connect to %{saddr}:%{sport}" }
				id => "message-01025"
				add_field => {
					"[event][id]" => "01025"
					"[rsa][message][id1]" => "01025"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01352
		# line in RSA:  <agent>[<process_id>]: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-01352"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01352"
					"[rsa][message][id1]" => "01352"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId709
	# line in RSA: <agent>[<process_id>]: <severity>: <event_description>, <info>
	else if [logstash][msgparser][id] == "msgParserId709" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{event_description}, %{info}" }
			id => "msgParserId709"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-server-g3" {
		# MESSAGE 00490:15
		# line in RSA:  <agent>: <fld1> Auth_methods_available, Username: <username>, Auth { methods | method }: <info>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+Auth_methods_available,[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Auth[\s]+([\s]*methods[\s]+|[\s]*method[\s]+):[\s]+(?<info>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-00490:15"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Auth_methods_available"
					"[event][id]" => "00490:15"
					"[rsa][message][id1]" => "00490:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:16
		# line in RSA:  <agent>: <fld1> Auth_method_success, Username: <username>, Auth { methods | method }: <info>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+Auth_method_success,[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Auth[\s]+([\s]*methods[\s]+|[\s]*method[\s]+):[\s]+(?<info>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-00490:16"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Auth_method_success"
					"[event][id]" => "00490:16"
					"[rsa][message][id1]" => "00490:16"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:17
		# line in RSA:  <agent>: <fld1> Authentication_block_allow, Username: <username>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Authentication_block_allow, Username: %{username}, Session-Id: %{sessionid}" }
				id => "message-00490:17"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Authentication_block_allow"
					"[event][id]" => "00490:17"
					"[rsa][message][id1]" => "00490:17"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:18
		# line in RSA:  <agent>: <fld1> Group_selected, Username: <username>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Group_selected, Username: %{username}, Session-Id: %{sessionid}" }
				id => "message-00490:18"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Group_selected"
					"[event][id]" => "00490:18"
					"[rsa][message][id1]" => "00490:18"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:19
		# line in RSA:  <agent>: <fld1> Rule_selected, Username: <username>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Rule_selected, Username: %{username}, Session-Id: %{sessionid}" }
				id => "message-00490:19"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Rule_selected"
					"[event][id]" => "00490:19"
					"[rsa][message][id1]" => "00490:19"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:20
		# line in RSA:  <agent>: <fld1> Session_channel_open, Username: <username>, Success, { Command: <action>, Sub ID: <resultcode>, | Sub ID: <resultcode>, } Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+Session_channel_open,[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Success,[\s]+([\s]*Command:[\s]+(?<action>[^,]*),[\s]+Sub[\s]+ID:[\s]+(?<resultcode>[^,]*),[\s]+|[\s]*Sub[\s]+ID:[\s]+(?<resultcode>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-00490:20"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session_channel_open"
					"[event][id]" => "00490:20"
					"[rsa][message][id1]" => "00490:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:21
		# line in RSA:  <agent>: <fld1> Login_success, Username: <username>, Src: <shost>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, Ver: <version>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Login_success, Username: %{username}, Src: %{shost}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, Ver: %{version}, Session-Id: %{sessionid}" }
				id => "message-00490:21"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Login_success"
					"[event][id]" => "00490:21"
					"[rsa][message][id1]" => "00490:21"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490
		# line in RSA: <agent>: <fld1> Logout, Username: <username>, Reason: <info>, Src: <shost>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<event_description>", Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Logout, Username: %{username}, Reason: %{info}, Src: %{shost}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, \"%{event_description}\", Session-Id: %{sessionid}" }
				id => "message-00490"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
					"[event][id]" => "00490"
					"[rsa][message][id1]" => "00490"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:01
		# line in RSA: <agent>: <fld1> Login_failure, Username: <username>, Reason: <info>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<event_description>", Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Login_failure, Username: %{username}, Reason: %{info}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, \"%{event_description}\", Session-Id: %{sessionid}" }
				id => "message-00490:01"
				add_field => {
					"[event][id]" => "00490:01"
					"[rsa][message][id1]" => "00490:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:02
		# line in RSA:  <agent>: <fld1> Keyboard_interactive_pam_auth_error, Username: <username>, Algorithm: <process>, "<info>", Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Keyboard_interactive_pam_auth_error, Username: %{username}, Algorithm: %{process}, \"%{info}\", Session-Id: %{sessionid}" }
				id => "message-00490:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication error"
					"[event][id]" => "00490:02"
					"[rsa][message][id1]" => "00490:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:03
		# line in RSA:  <agent>: <fld1> Auth_methods_completed, Username: <username>, Auth { methods | method }: <info>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+Auth_methods_completed,[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Auth[\s]+([\s]*methods[\s]+|[\s]*method[\s]+):[\s]+(?<info>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-00490:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Auth_methods_completed"
					"[event][id]" => "00490:03"
					"[rsa][message][id1]" => "00490:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:04
		# line in RSA: <agent>: <fld1> Session_channel_close, Username: <username>, Sub ID: <fld53>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Session_channel_close, Username: %{username}, Sub ID: %{fld53}, Session-Id: %{sessionid}" }
				id => "message-00490:04"
				add_field => {
					"[event][id]" => "00490:04"
					"[rsa][message][id1]" => "00490:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:05
		# line in RSA: <agent>: <fld1> Authentication_block_selected, Username: <username>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Authentication_block_selected, Username: %{username}, Session-Id: %{sessionid}" }
				id => "message-00490:05"
				add_field => {
					"[event][id]" => "00490:05"
					"[rsa][message][id1]" => "00490:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:06
		# line in RSA: <agent>: <fld53> Disconnect, Reason: <info>, Src: <shost>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<event_description>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld53} Disconnect, Reason: %{info}, Src: %{shost}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, \"%{event_description}\"" }
				id => "message-00490:06"
				add_field => {
					"[event][id]" => "00490:06"
					"[rsa][message][id1]" => "00490:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:07
		# line in RSA: <agent>: <fld1> Disconnect, Reason: <info>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<event_description>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Disconnect, Reason: %{info}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, \"%{event_description}\"" }
				id => "message-00490:07"
				add_field => {
					"[event][id]" => "00490:07"
					"[rsa][message][id1]" => "00490:07"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:08
		# line in RSA:  <agent>: <fld1> Connect, Policy name: <policyname>, Src: <shost>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, Ver: <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Connect, Policy name: %{policyname}, Src: %{shost}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, Ver: %{version}" }
				id => "message-00490:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00490:08"
					"[rsa][message][id1]" => "00490:08"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:09
		# line in RSA:  <agent>: <fld1> Connect, Policy name: <policyname>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, Ver: <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} Connect, Policy name: %{policyname}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, Ver: %{version}" }
				id => "message-00490:09"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00490:09"
					"[rsa][message][id1]" => "00490:09"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:10
		# line in RSA: <agent>: <fld1> <event_description>, Key path: <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{event_description}, Key path: %{filename}" }
				id => "message-00490:10"
				add_field => {
					"[event][id]" => "00490:10"
					"[rsa][message][id1]" => "00490:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:12
		# line in RSA: <agent>[<process_id>]: <event_description> Authorization check failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} Authorization check failed" }
				id => "message-00490:12"
				add_field => {
				"event_description" => "Auhorization check failed"
					"[event][id]" => "00490:12"
					"[rsa][message][id1]" => "00490:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:13
		# line in RSA:  <agent>[<process_id>]: <event_description> Certificate validation is not configured
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description} Certificate validation is not configured" }
				id => "message-00490:13"
				add_field => {
				"event_description" => "Auhorization check failed"
				"result" => "Certificate validation is not configured"
					"[event][id]" => "00490:13"
					"[rsa][message][id1]" => "00490:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:11
		# line in RSA: <agent>: open_pam_conf: <event_description>: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: open_pam_conf: %{event_description}: %{info}" }
				id => "message-00490:11"
				add_field => {
					"[event][id]" => "00490:11"
					"[rsa][message][id1]" => "00490:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00490:14
		# line in RSA: <agent>: <fld1> <event_description>, "<info>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld1} %{event_description}, \"%{info}\"" }
				id => "message-00490:14"
				add_field => {
					"[event][id]" => "00490:14"
					"[rsa][message][id1]" => "00490:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd" {
		# MESSAGE 00003:97
		# line in RSA:  <agent>[<process_id>]: <shost>: Authentication <<failed <disposition>> for <<<application>> user: <<<username>> account: <<<realm>> service: <<<service>> reason: <<<result>> { Access Control Identifier(UPN):<<<node>> | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<shost>[^:]*):[\s]+Authentication[\s]+<failed[\s]+(?<disposition>[^>]*)>[\s]+for[\s]+<(?<application>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<realm>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+<(?<result>[^>]*)>[\s]+([\s]*Access[\s]+Control[\s]+Identifier\(UPN\):<(?<node>[^>]*)>[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-00003:97"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication failed"
					"[event][id]" => "00003:97"
					"[rsa][message][id1]" => "00003:97"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:76
		# line in RSA: <agent>[<process_id>]: { vasaix: | pam_vas: } Authentication <<succeeded <authmethod>> for <<<application>> user: <<<username>> account: <<<realm>> service: <<<service>> reason: <<<result>>  { Access Control Identifier(UPN):<<<node>> | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*vasaix:[\s]+|[\s]*pam_vas:[\s]+)[\s]+Authentication[\s]+<succeeded[\s]+(?<authmethod>[^>]*)>[\s]+for[\s]+<(?<application>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<realm>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+<(?<result>[^>]*)>[\s]+([\s]*Access[\s]+Control[\s]+Identifier\(UPN\):<(?<node>[^>]*)>[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-00003:76"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "00003:76"
					"[rsa][message][id1]" => "00003:76"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:104
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Bad options in <filename>file, <location_desc>: from=<shost> <protocol> <id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Bad[\s]+options[\s]+in[\s]+(?<filename>[^f]*)file,[\s]+(?<location_desc>[^:]*):[\s]+from=(?<shost>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<id>.*)$" }
				id => "message-00003:104"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Bad options in request"
					"[event][id]" => "00003:104"
					"[rsa][message][id1]" => "00003:104"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:95
		# line in RSA:  <agent>[<process_id>]: Enabling compatibility mode for protocol <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Enabling compatibility mode for protocol %{protocol}" }
				id => "message-00003:95"
				add_field => {
				"action" => "Enabling compatibility mode for protocol"
					"[event][id]" => "00003:95"
					"[rsa][message][id1]" => "00003:95"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:98
		# line in RSA:  <agent>[<process_id>]: Nasty PTR record <info> is set up for <hostip>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Nasty PTR record %{info} is set up for %{hostip}, %{result}" }
				id => "message-00003:98"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Nasty PTR record set up for host"
					"[event][id]" => "00003:98"
					"[rsa][message][id1]" => "00003:98"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:99
		# line in RSA:  <agent>[<process_id>]: <application> connection bailed during recv (<info>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application} connection bailed during recv (%{info}): %{result}" }
				id => "message-00003:99"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection bailed during recv"
					"[event][id]" => "00003:99"
					"[rsa][message][id1]" => "00003:99"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:32
		# line in RSA: <agent>[<process_id>]: Received disconnect from <saddr>: <resultcode>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received disconnect from %{saddr}: %{resultcode}: %{info}" }
				id => "message-00003:32"
				add_field => {
				"event_description" => "received disconnect"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:32"
					"[rsa][message][id1]" => "00003:32"
					"[event][categoryid]" => ""
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:20
		# line in RSA: <agent>[<process_id>]: reverse mapping checking getaddrinfo for <fqdn> { [<saddr>] | <space> } failed - <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+reverse[\s]+mapping[\s]+checking[\s]+getaddrinfo[\s]+for[\s]+(?<fqdn>[^\s]*)[\s]+([\s]*\[(?<saddr>[^\]]*)\][\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+failed[\s]+\-[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-00003:20"
				add_field => {
				"event_description" => "reverse mapping checking getaddrinfo failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:20"
					"[rsa][message][id1]" => "00003:20"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd:01
		# line in RSA: <agent>[<process_id>]: Connection closed {by invalid user <username>|by authenticating user <username>|by} <saddr> port <sport> [<fld1> ]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Connection[\s]+closed[\s]+(by[\s]+invalid[\s]+user[\s]+(?<username>[^\s]*)|by[\s]+authenticating[\s]+user[\s]+(?<username>[^\s]*)|by)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+\[(?<fld1>[^\s]*)[\s]+\]$" }
				id => "message-sshd:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "closed connection"
					"[event][id]" => "sshd:01"
					"[rsa][message][id1]" => "sshd:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003
		# line in RSA: <agent>[<process_id>]: Connection closed by <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection closed by %{saddr}" }
				id => "message-00003"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "closed connection"
					"[event][id]" => "00003"
					"[rsa][message][id1]" => "00003"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:011
		# line in RSA: <agent>[<process_id>]: Accepted publickey for <username> { from ::ffff: | from } <saddr> port <sport> {<protocol>: RSA SHA256:<checksum>|<protocol>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+publickey[\s]+for[\s]+(?<username>[^\s]*)[\s]+([\s]*from[\s]+::ffff:[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+((?<protocol>[^:]*):[\s]+RSA[\s]+SHA256:(?<checksum>.*)|(?<protocol>.*))$" }
				id => "message-00003:011"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_description" => "Accepted publickey"
					"[event][id]" => "00003:011"
					"[rsa][message][id1]" => "00003:011"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:01
		# line in RSA:  <agent>[<process_id>]: Accepted publickey for <username> from <saddr> { port <sport> <protocol> | port <sport> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+publickey[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+([\s]*port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+|[\s]*port[\s]+(?<sport>[^\s]*)[\s]+)[\s]+$" }
				id => "message-00003:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Accepted publickey"
					"[event][id]" => "00003:01"
					"[rsa][message][id1]" => "00003:01"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:45
		# line in RSA:  <agent>[<process_id>]: Accepted password for <username> from <saddr> { port <sport> <protocol> | port <sport> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+password[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+([\s]*port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+|[\s]*port[\s]+(?<sport>[^\s]*)[\s]+)$" }
				id => "message-00003:45"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Accepted password"
					"[event][id]" => "00003:45"
					"[rsa][message][id1]" => "00003:45"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:48
		# line in RSA:  <agent>[<process_id>]: Accepted { keyboard-interactive/pam | keyboard-interactive/lam | keyboard-interactive/securid } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Accepted[\s]+([\s]*keyboard\-interactive/pam[\s]+|[\s]*keyboard\-interactive/lam[\s]+|[\s]*keyboard\-interactive/securid[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00003:48"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Accepted keyboard-interactive"
					"[event][id]" => "00003:48"
					"[rsa][message][id1]" => "00003:48"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:107
		# line in RSA:  <agent>[<process_id>]: Accepted gssapi-with-mic for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Accepted gssapi-with-mic for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00003:107"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Accepted gssapi-with-mic"
					"[event][id]" => "00003:107"
					"[rsa][message][id1]" => "00003:107"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:108
		# line in RSA:  <agent>[<process_id>]: Authorized to <profile>, krb5 principal <username> (<id>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Authorized to %{profile}, krb5 principal %{username} (%{id})" }
				id => "message-00003:108"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"user_role" => "krb5 principal"
				"event_description" => "User Authorized for role"
					"[event][id]" => "00003:108"
					"[rsa][message][id1]" => "00003:108"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:02
		# line in RSA:  <agent>[<process_id>]: <severity>: Timeout before authentication for <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Timeout before authentication for %{saddr}" }
				id => "message-00003:02"
				add_field => {
				"event_description" => "authentication failure"
				"info" => "Timeout"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:02"
					"[rsa][message][id1]" => "00003:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:03
		# line in RSA:  <agent>[<process_id>]: <action>: illegal user <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: illegal user %{username}" }
				id => "message-00003:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00003:03"
					"[rsa][message][id1]" => "00003:03"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:04
		# line in RSA:  <agent>[<process_id>]: Failed { password | publickey | keyboard-interactive } for illegal user <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+([\s]*password[\s]+|[\s]*publickey[\s]+|[\s]*keyboard\-interactive[\s]+)[\s]+for[\s]+illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00003:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
				"info" => "illegal user"
					"[event][id]" => "00003:04"
					"[rsa][message][id1]" => "00003:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:13
		# line in RSA:  <agent>[<process_id>]: Failed none for illegal user <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed none for illegal user %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00003:13"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00003:13"
					"[rsa][message][id1]" => "00003:13"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:05
		# line in RSA:  <agent>[<process_id>]: Failed password for <username> from <saddr> port {<sport> <protocol> | <sport>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+password[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+((?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+|[\s]*(?<sport>[^\s]*))[\s]+$" }
				id => "message-00003:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Password failed"
					"[event][id]" => "00003:05"
					"[rsa][message][id1]" => "00003:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:06
		# line in RSA:  <agent>[<process_id>]: User <username> password expired too long 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} password expired too long" }
				id => "message-00003:06"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "password expired"
				"info" => "password expired for too long"
					"[event][id]" => "00003:06"
					"[rsa][message][id1]" => "00003:06"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:07
		# line in RSA:  <agent>[<process_id>]: Login restricted for <username>: <fld1> There have been too many unsuccessful login attempts; <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login restricted for %{username}: %{fld1} There have been too many unsuccessful login attempts; %{info}" }
				id => "message-00003:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Login restricted for User."
					"[event][id]" => "00003:07"
					"[rsa][message][id1]" => "00003:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:08
		# line in RSA:  <agent>[<process_id>]: Login restricted for <username>: <fld1> Remote logins are not allowed for this account. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login restricted for %{username}: %{fld1} Remote logins are not allowed for this account." }
				id => "message-00003:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Login restricted"
				"info" => "remote login not allowed"
					"[event][id]" => "00003:08"
					"[rsa][message][id1]" => "00003:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:09
		# line in RSA: <agent>[<process_id>]: <severity>: Failed to change password for <username> <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Failed to change password for %{username} %{fld1}" }
				id => "message-00003:09"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "password change failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:09"
					"[rsa][message][id1]" => "00003:09"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:10
		# line in RSA: <agent>[<process_id>]: Password cant be changed for user <username>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password cant be changed for user %{username}: %{info}" }
				id => "message-00003:10"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "password change failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:10"
					"[rsa][message][id1]" => "00003:10"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:11
		# line in RSA:  <agent>[<process_id>]: Authentication refused: bad ownership or modes for { file | directory } <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Authentication[\s]+refused:[\s]+bad[\s]+ownership[\s]+or[\s]+modes[\s]+for[\s]+([\s]*file[\s]+|[\s]*directory[\s]+)[\s]+(?<filename>.*)$" }
				id => "message-00003:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"info" => "file ownership error"
					"[event][id]" => "00003:11"
					"[rsa][message][id1]" => "00003:11"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:12
		# line in RSA: <agent>[<process_id>]: Did not receive { identification | ident } string from <saddr> {{<fld53>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+\{(?<fld53>[^\}]*)\}[\s]+$" }
				id => "message-00003:12"
				add_field => {
				"info" => "no identification string"
				"event_description" => "connection error"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:12"
					"[rsa][message][id1]" => "00003:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:14
		# line in RSA: <agent>[<process_id>]: <severity>: Couldn't create pid file "<filename>": <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Couldn't create pid file \"%{filename}\": %{info}" }
				id => "message-00003:14"
				add_field => {
				"event_description" => "create pid file failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:14"
					"[rsa][message][id1]" => "00003:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:63
		# line in RSA: <agent>[<process_id>]: Generating new <fld54> bit RSA key.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Generating new %{fld54} bit RSA key." }
				id => "message-00003:63"
				add_field => {
				"event_description" => "Generating X bit Key"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:63"
					"[rsa][message][id1]" => "00003:63"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:70
		# line in RSA:  <agent>[<process_id>]: <action>: invalid user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{action}: invalid user %{username}" }
				id => "message-00003:70"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Invalid username"
					"[event][id]" => "00003:70"
					"[rsa][message][id1]" => "00003:70"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:15
		# line in RSA:  <agent>[<process_id>]: Invalid user <username> from <saddr> {{<fld53>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+\{(?<fld53>[^\}]*)\}$" }
				id => "message-00003:15"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Invalid username"
					"[event][id]" => "00003:15"
					"[rsa][message][id1]" => "00003:15"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:21
		# line in RSA:  <agent>[<process_id>]: Invalid user <username> from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Invalid user %{username} from %{saddr}" }
				id => "message-00003:21"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Invalid username"
					"[event][id]" => "00003:21"
					"[rsa][message][id1]" => "00003:21"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:16
		# line in RSA: <agent>[<process_id>]: subsystem request for <protocol> {{<fld54>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+subsystem[\s]+request[\s]+for[\s]+(?<protocol>[^\s]*)[\s]+\{(?<fld54>[^\}]*)\}[\s]+$" }
				id => "message-00003:16"
				add_field => {
				"event_description" => "subsystem request"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:16"
					"[rsa][message][id1]" => "00003:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:22
		# line in RSA: <agent>[<process_id>]: subsystem request for { <protocol> by user <username> | <protocol> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+subsystem[\s]+request[\s]+for[\s]+([\s]*(?<protocol>[^\s]*)[\s]+by[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<protocol>[^\s]*)[\s]+)$" }
				id => "message-00003:22"
				add_field => {
				"event_description" => "subsystem request"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:22"
					"[rsa][message][id1]" => "00003:22"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:17
		# line in RSA:  <agent>[<process_id>]: Failed none for invalid user <username> from <saddr> port <sport> <protocol> {{<fld53>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+none[\s]+for[\s]+invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+\{(?<fld53>[^\}]*)\}[\s]+$" }
				id => "message-00003:17"
				add_field => {
				"ec_theme" => "Authentication"
				"hostname" => "%{hhost}"
				"event_description" => "Invalid user"
					"[event][id]" => "00003:17"
					"[rsa][message][id1]" => "00003:17"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:23
		# line in RSA: <agent>[<process_id>]: Failed none for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed none for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00003:23"
				add_field => {
				"ec_theme" => "Authentication"
				"hostname" => "%{hhost}"
				"event_description" => "User login failed"
					"[event][id]" => "00003:23"
					"[rsa][message][id1]" => "00003:23"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:18
		# line in RSA: <agent>[<process_id>]: Timeout, client not responding.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Timeout, client not responding." }
				id => "message-00003:18"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "Timeout"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:18"
					"[rsa][message][id1]" => "00003:18"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:19
		# line in RSA: <agent>[<process_id>]: <severity>: channel <fld54>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: channel %{fld54}: %{result}" }
				id => "message-00003:19"
				add_field => {
				"event_description" => "chan_read_failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:19"
					"[rsa][message][id1]" => "00003:19"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:24
		# line in RSA:  <agent>[<process_id>]: Did not receive identification string from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Did not receive identification string from %{saddr}" }
				id => "message-00003:24"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Did not receive identification string"
					"[event][id]" => "00003:24"
					"[rsa][message][id1]" => "00003:24"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:25
		# line in RSA:  <agent>[<process_id>]: Illegal user <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Illegal user %{username} from %{saddr}" }
				id => "message-00003:25"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00003:25"
					"[rsa][message][id1]" => "00003:25"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:26
		# line in RSA:  <agent>[<process_id>]: Bad protocol version identification '<id>' from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Bad protocol version identification '%{id}' from %{saddr}" }
				id => "message-00003:26"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Bad protocol version identification id"
					"[event][id]" => "00003:26"
					"[rsa][message][id1]" => "00003:26"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:27
		# line in RSA: <agent>[<process_id>]: Address <saddr> maps to <fqdn>, but this does not map back to the address - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Address %{saddr} maps to %{fqdn}, but this does not map back to the address - %{info}" }
				id => "message-00003:27"
				add_field => {
				"event_description" => "host does not map back to the address"
					"[event][id]" => "00003:27"
					"[rsa][message][id1]" => "00003:27"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:28
		# line in RSA: <agent>[<process_id>]: Protocol major versions differ for <saddr>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Protocol major versions differ for %{saddr}: %{info}" }
				id => "message-00003:28"
				add_field => {
				"event_description" => "Protocol major versions differ"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:28"
					"[rsa][message][id1]" => "00003:28"
					"[event][categoryid]" => "1803020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:29
		# line in RSA: <agent>[<process_id>]: Failed { keyboard-interactive/lam | keyboard-interactive }  for { invalid user <username> | <username> } from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+([\s]*keyboard\-interactive/lam[\s]+|[\s]*keyboard\-interactive[\s]+)[\s]+for[\s]+([\s]*invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>.*)$" }
				id => "message-00003:29"
				add_field => {
				"event_description" => "Failed keyboard-interactive"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:29"
					"[rsa][message][id1]" => "00003:29"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:30
		# line in RSA: <agent>[<process_id>]: <severity>: Read from socket failed: Connection reset by peer
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Read from socket failed: Connection reset by peer" }
				id => "message-00003:30"
				add_field => {
				"event_description" => "Read from socket failed"
				"info" => "Connection reset by peer"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:30"
					"[rsa][message][id1]" => "00003:30"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:31
		# line in RSA: <agent>[<process_id>]: session_input_channel_req: no session <fld53> req exit-status
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session_input_channel_req: no session %{fld53} req exit-status" }
				id => "message-00003:31"
				add_field => {
				"event_description" => "session_input_channel_req"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:31"
					"[rsa][message][id1]" => "00003:31"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:33
		# line in RSA: <agent>[<process_id>]: Disconnecting: Change of username or service not allowed: (<change_old>) -> (<change_new>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Change of username or service not allowed: (%{change_old}) -> (%{change_new})" }
				id => "message-00003:33"
				add_field => {
				"event_description" => "disconnecting"
				"info" => "Change of username or service not allowed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:33"
					"[rsa][message][id1]" => "00003:33"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:34
		# line in RSA: <agent>[<process_id>]: Disconnecting: Too many authentication failures for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Too many authentication failures for %{username}" }
				id => "message-00003:34"
				add_field => {
				"event_description" => "disconnecting"
				"info" => "Too many authentication failures"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:34"
					"[rsa][message][id1]" => "00003:34"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:35
		# line in RSA:  <agent>[<process_id>]: password change not supported
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password change not supported" }
				id => "message-00003:35"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "password change not supported"
					"[event][id]" => "00003:35"
					"[rsa][message][id1]" => "00003:35"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:37
		# line in RSA: <agent>[<process_id>]: Could not write ident string to <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not write ident string to %{saddr}" }
				id => "message-00003:37"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not write ident string"
					"[event][id]" => "00003:37"
					"[rsa][message][id1]" => "00003:37"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:36
		# line in RSA: <agent>[<process_id>]: <severity>: getsockname failed: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: getsockname failed: %{info}" }
				id => "message-00003:36"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "getsockname failed"
					"[event][id]" => "00003:36"
					"[rsa][message][id1]" => "00003:36"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:72
		# line in RSA: <agent>[<process_id>]: <severity>: ssh_msg_send: write
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: ssh_msg_send: write" }
				id => "message-00003:72"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "ssh_msg_send write failed"
					"[event][id]" => "00003:72"
					"[rsa][message][id1]" => "00003:72"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:73
		# line in RSA:  <agent>[<process_id>]: <severity>: PAM: Authentication failed for {illegal user <username> | <username>} from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+PAM:[\s]+Authentication[\s]+failed[\s]+for[\s]+(illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*))[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-00003:73"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication Failure by illegal user"
					"[event][id]" => "00003:73"
					"[rsa][message][id1]" => "00003:73"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:38
		# line in RSA: <agent>[<process_id>]: Password can't be changed for user <username>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password can't be changed for user %{username}: %{info}" }
				id => "message-00003:38"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "Password can't be changed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:38"
					"[rsa][message][id1]" => "00003:38"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:39
		# line in RSA: <agent>[<process_id>]: Server listening on <daddr> port <dport>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Server listening on %{daddr} port %{dport}." }
				id => "message-00003:39"
				add_field => {
				"event_description" => "Server listening"
					"[event][id]" => "00003:39"
					"[rsa][message][id1]" => "00003:39"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:40
		# line in RSA:  <agent>[<process_id>]: Received signal <resultcode>; <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received signal %{resultcode}; %{info}" }
				id => "message-00003:40"
				add_field => {
				"event_description" => "Received signal"
					"[event][id]" => "00003:40"
					"[rsa][message][id1]" => "00003:40"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:41
		# line in RSA:  <agent>[<process_id>]: Disconnecting: Remote login for account <username> is not allowed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Remote login for account %{username} is not allowed." }
				id => "message-00003:41"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Disconnecting"
				"info" => "remote login not allowed"
					"[event][id]" => "00003:41"
					"[rsa][message][id1]" => "00003:41"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:42
		# line in RSA: <agent>[<process_id>]: Disconnecting: Corrupted MAC on input.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: Corrupted MAC on input." }
				id => "message-00003:42"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Disconnecting"
					"[event][id]" => "00003:42"
					"[rsa][message][id1]" => "00003:42"
					"[event][categoryid]" => "1603010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:43
		# line in RSA:  <agent>[<process_id>]: <severity>: Failed to set process credentials
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Failed to set process credentials" }
				id => "message-00003:43"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Failed to set process credentials"
					"[event][id]" => "00003:43"
					"[rsa][message][id1]" => "00003:43"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:44
		# line in RSA: <agent>[<process_id>]: <severity>: Read from socket failed: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Read from socket failed: %{info}" }
				id => "message-00003:44"
				add_field => {
				"event_description" => "Read from socket failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:44"
					"[rsa][message][id1]" => "00003:44"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:46
		# line in RSA: <agent>[<process_id>]: Could not reverse map address <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Could not reverse map address %{saddr}" }
				id => "message-00003:46"
				add_field => {
				"event_description" => "Could not reverse map address"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:46"
					"[rsa][message][id1]" => "00003:46"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:47
		# line in RSA: <agent>[<process_id>]: <severity>: Creating listener failed (<dinterface>): port <dport> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Creating listener failed (%{dinterface}): port %{dport} %{info}" }
				id => "message-00003:47"
				add_field => {
				"event_description" => "Creating listener failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:47"
					"[rsa][message][id1]" => "00003:47"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:49
		# line in RSA: <agent>[<process_id>]: Connection from <saddr> port <sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Connection from %{saddr} port %{sport}" }
				id => "message-00003:49"
				add_field => {
				"event_description" => "Connection from"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:49"
					"[rsa][message][id1]" => "00003:49"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:50
		# line in RSA:  <agent>[<process_id>]: Found matching { DSA key: | RSA key: } <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Found[\s]+matching[\s]+([\s]*DSA[\s]+key:[\s]+|[\s]*RSA[\s]+key:[\s]+)[\s]+(?<info>.*)$" }
				id => "message-00003:50"
				add_field => {
				"event_description" => "Found Matching RSA or DSA Key"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:50"
					"[rsa][message][id1]" => "00003:50"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:51
		# line in RSA: <agent>[<process_id>]: Closing connection to <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Closing connection to %{saddr}" }
				id => "message-00003:51"
				add_field => {
				"event_description" => "Closing connection to"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:51"
					"[rsa][message][id1]" => "00003:51"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:52
		# line in RSA: <agent>[<process_id>]: Read error from remote host <saddr>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Read error from remote host %{saddr}: %{info}" }
				id => "message-00003:52"
				add_field => {
				"event_description" => "Read error from remote host"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:52"
					"[rsa][message][id1]" => "00003:52"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:54
		# line in RSA: <agent>[<process_id>]: Login restricted for  <username>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Login restricted for  %{username}: %{info}" }
				id => "message-00003:54"
				add_field => {
				"event_description" => "Login restricted"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:54"
					"[rsa][message][id1]" => "00003:54"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:55
		# line in RSA: <agent>[<process_id>]: Writing login record failed for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Writing login record failed for %{username}" }
				id => "message-00003:55"
				add_field => {
				"event_description" => "Writing login record failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:55"
					"[rsa][message][id1]" => "00003:55"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:56
		# line in RSA: <agent>[<process_id>]: fatal: Write failed:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: fatal: Write failed:%{info}" }
				id => "message-00003:56"
				add_field => {
				"event_description" => "Write failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:56"
					"[rsa][message][id1]" => "00003:56"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:57
		# line in RSA: <agent>[<process_id>]: Disconnecting: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Disconnecting: %{info}" }
				id => "message-00003:57"
				add_field => {
				"event_description" => "Disconnecting"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:57"
					"[rsa][message][id1]" => "00003:57"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:58
		# line in RSA:  <agent>[<process_id>]: channel_by_id:<fld54> bad id: channel free
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: channel_by_id:%{fld54} bad id: channel free" }
				id => "message-00003:58"
				add_field => {
				"event_description" => "bad id for channel"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:58"
					"[rsa][message][id1]" => "00003:58"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:59
		# line in RSA: <agent>[<process_id>]: ROOT LOGIN REFUSED FROM <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ROOT LOGIN REFUSED FROM %{saddr}" }
				id => "message-00003:59"
				add_field => {
				"event_description" => "Root Login Refused"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:59"
					"[rsa][message][id1]" => "00003:59"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:60
		# line in RSA: <agent>[<process_id>]: Failed publickey for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Failed publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-00003:60"
				add_field => {
				"event_description" => "Failed Public Key"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:60"
					"[rsa][message][id1]" => "00003:60"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:61
		# line in RSA: <agent>[<process_id>]: RSA key generation complete.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: RSA key generation complete." }
				id => "message-00003:61"
				add_field => {
				"event_description" => "RSA key generation complete"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:61"
					"[rsa][message][id1]" => "00003:61"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:64
		# line in RSA:  <agent>[<process_id>]: channel_lookup: <fld54>: bad id
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: channel_lookup: %{fld54}: bad id" }
				id => "message-00003:64"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:64"
					"[rsa][message][id1]" => "00003:64"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:65
		# line in RSA: <agent>[<process_id>]: <severity>: Couldn't wait for child: There are no child processes.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: Couldn't wait for child: There are no child processes." }
				id => "message-00003:65"
				add_field => {
				"event_description" => "fatal: Couldn't wait for child: There are no child processes"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:65"
					"[rsa][message][id1]" => "00003:65"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:66
		# line in RSA:  <agent>[<process_id>]: wtmp_write: problem writing <directory>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: wtmp_write: problem writing %{directory}: %{info}" }
				id => "message-00003:66"
				add_field => {
				"event_description" => "problem writing the file"
				"process" => "wtmp_write"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:66"
					"[rsa][message][id1]" => "00003:66"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:67
		# line in RSA: <agent>[<process_id>]: Received SIGHUP; restarting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Received SIGHUP; restarting." }
				id => "message-00003:67"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Received SIGHUP; restarting."
					"[event][id]" => "00003:67"
					"[rsa][message][id1]" => "00003:67"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:68
		# line in RSA: <agent>[<process_id>]:  identification '<username>' from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:  identification '%{username}' from %{saddr}" }
				id => "message-00003:68"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Received SSH identification from source"
					"[event][id]" => "00003:68"
					"[rsa][message][id1]" => "00003:68"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:69
		# line in RSA: <agent>[<process_id>]: Postponed { keyboard-interactive/pam | keyboard-interactive | publickey } for { illegal user <username> | invalid user <username> | <username> } from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Postponed[\s]+([\s]*keyboard\-interactive/pam[\s]+|[\s]*keyboard\-interactive[\s]+|[\s]*publickey[\s]+)[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00003:69"
				add_field => {
				"event_description" => "user access key Postponed"
					"[event][id]" => "00003:69"
					"[rsa][message][id1]" => "00003:69"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:71
		# line in RSA: <agent>[<process_id>]: Failed { keyboard-interactive/pam | keyboard-interactive/aixauth | keyboard-interactive } for { illegal user <username> | invalid user <username> | <username> } from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Failed[\s]+([\s]*keyboard\-interactive/pam[\s]+|[\s]*keyboard\-interactive/aixauth[\s]+|[\s]*keyboard\-interactive[\s]+)[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-00003:71"
				add_field => {
				"event_description" => "Failed keyboard-interactive/pam"
					"[event][id]" => "00003:71"
					"[rsa][message][id1]" => "00003:71"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:74
		# line in RSA:  <agent>[<process_id>]: Authentication tried for <application> with correct key but not from a permitted host (host=<shost>, ip=<saddr>). 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Authentication tried for %{application} with correct key but not from a permitted host (host=%{shost}, ip=%{saddr})." }
				id => "message-00003:74"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication failed"
					"[event][id]" => "00003:74"
					"[rsa][message][id1]" => "00003:74"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:75
		# line in RSA:  <agent>[<process_id>]: WARNING: <filename> does not exist, using <authmethod> modulus 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARNING: %{filename} does not exist, using %{authmethod} modulus" }
				id => "message-00003:75"
				add_field => {
				"event_description" => "Modulus File not found"
				"severity" => "WARNING"
					"[event][id]" => "00003:75"
					"[rsa][message][id1]" => "00003:75"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:77
		# line in RSA:  <agent>[<process_id>]: User <username> not allowed because <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} not allowed because %{result}" }
				id => "message-00003:77"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"event_description" => "authentication failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:77"
					"[rsa][message][id1]" => "00003:77"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:78
		# line in RSA:  <agent>[<process_id>]: <severity>: <process>: Cannot find account for uid <uid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{process}: Cannot find account for uid %{uid}" }
				id => "message-00003:78"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "User account not found"
					"[event][id]" => "00003:78"
					"[rsa][message][id1]" => "00003:78"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:79
		# line in RSA:  <agent>[<process_id>]: <severity>: <process>: Cannot find user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: %{process}: Cannot find user %{username}" }
				id => "message-00003:79"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "User not found"
					"[event][id]" => "00003:79"
					"[rsa][message][id1]" => "00003:79"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:80
		# line in RSA: <agent>[<process_id>]: <severity>: mm_request_send: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: mm_request_send: %{event_description}" }
				id => "message-00003:80"
				add_field => {
				"process" => "mm_request_send"
					"[event][id]" => "00003:80"
					"[rsa][message][id1]" => "00003:80"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:81
		# line in RSA: <agent>[<process_id>]: <severity>: permanently_set_uid: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: permanently_set_uid: %{info}" }
				id => "message-00003:81"
				add_field => {
				"process" => "permanently_set_uid"
					"[event][id]" => "00003:81"
					"[rsa][message][id1]" => "00003:81"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:82
		# line in RSA: <agent>[<process_id>]: Bad packet length <fld53>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Bad packet length %{fld53}" }
				id => "message-00003:82"
				add_field => {
					"[event][id]" => "00003:82"
					"[rsa][message][id1]" => "00003:82"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:83
		# line in RSA:  <agent>[<process_id>]: { error: Could not load host key: <filename> | <result> Could not load host key }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*error:[\s]+Could[\s]+not[\s]+load[\s]+host[\s]+key:[\s]+(?<filename>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+Could[\s]+not[\s]+load[\s]+host[\s]+key[\s]+)$" }
				id => "message-00003:83"
				add_field => {
				"event_description" => "Could not load host key"
					"[event][id]" => "00003:83"
					"[rsa][message][id1]" => "00003:83"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:84
		# line in RSA: <agent>[<process_id>]: channel <fld53>: open failed: connect failed: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: channel %{fld53}: open failed: connect failed: %{event_description}" }
				id => "message-00003:84"
				add_field => {
					"[event][id]" => "00003:84"
					"[rsa][message][id1]" => "00003:84"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:85
		# line in RSA:  <agent>[<process_id>]: userauth_hostbased mismatch: client sends <shost>, but we resolve <saddr> to <fld53>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: userauth_hostbased mismatch: client sends %{shost}, but we resolve %{saddr} to %{fld53}" }
				id => "message-00003:85"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:85"
					"[rsa][message][id1]" => "00003:85"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:86
		# line in RSA:  <agent>[<process_id>]: Rhosts authentication refused for <shost>: bad ownership or modes for home directory.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Rhosts authentication refused for %{shost}: bad ownership or modes for home directory." }
				id => "message-00003:86"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Rhosts authentication refused"
				"result" => "bad ownership or modes for home directory"
					"[event][id]" => "00003:86"
					"[rsa][message][id1]" => "00003:86"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:89
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Keystore doesn't contain ssh public key cookie
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Keystore[\s]+doesn't[\s]+contain[\s]+ssh[\s]+public[\s]+key[\s]+cookie$" }
				id => "message-00003:89"
				add_field => {
				"event_description" => "Keystore doesn't contain ssh public key cookie"
					"[event][id]" => "00003:89"
					"[rsa][message][id1]" => "00003:89"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:90
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Crypto library (<info>) error: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Crypto[\s]+library[\s]+\((?<info>[^\)]*)\)[\s]+error:[\s]+(?<result>.*)$" }
				id => "message-00003:90"
				add_field => {
				"event_description" => "Crypto library error "
					"[event][id]" => "00003:90"
					"[rsa][message][id1]" => "00003:90"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:91
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Unable to stat <filename>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+stat[\s]+(?<filename>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-00003:91"
				add_field => {
				"event_description" => "Unable to stat file"
					"[event][id]" => "00003:91"
					"[rsa][message][id1]" => "00003:91"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:92
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Unable to take the lock <filename>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Unable[\s]+to[\s]+take[\s]+the[\s]+lock[\s]+(?<filename>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-00003:92"
				add_field => {
				"event_description" => "Unable to take file lock"
					"[event][id]" => "00003:92"
					"[rsa][message][id1]" => "00003:92"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:88
		# line in RSA: <agent>[<process_id>]: {error | fatal}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(error[\s]+|[\s]*fatal):[\s]+(?<event_description>.*)$" }
				id => "message-00003:88"
				add_field => {
					"[event][id]" => "00003:88"
					"[rsa][message][id1]" => "00003:88"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:93
		# line in RSA:  <agent>: PAM: <application>: error <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM: %{application}: error %{event_description}" }
				id => "message-00003:93"
				add_field => {
				"action" => "sshd - PAM error"
					"[event][id]" => "00003:93"
					"[rsa][message][id1]" => "00003:93"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:96
		# line in RSA:   <agent>[<process_id>]: Attempt to write login records by non-root user (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Attempt to write login records by non-root user (%{result})" }
				id => "message-00003:96"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "Attempt to write login records by non-root user"
					"[event][id]" => "00003:96"
					"[rsa][message][id1]" => "00003:96"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:101
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } warning: <result>: Connection reset by peer
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+warning:[\s]+(?<result>[^:]*):[\s]+Connection[\s]+reset[\s]+by[\s]+peer$" }
				id => "message-00003:101"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Connection reset by peer"
					"[event][id]" => "00003:101"
					"[rsa][message][id1]" => "00003:101"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:102
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } dlopen of user option: <disposition>: Could not load module  <filename>. System error: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+dlopen[\s]+of[\s]+user[\s]+option:[\s]+(?<disposition>[^:]*):[\s]+Could[\s]+not[\s]+load[\s]+module[\s]+(?<filename>[^\.]*)\.[\s]+System[\s]+error:[\s]+(?<result>.*)$" }
				id => "message-00003:102"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not load module - System error"
				"action" => "dlopen of user option"
					"[event][id]" => "00003:102"
					"[rsa][message][id1]" => "00003:102"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:103
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } Received request to connect to host <shost> port <sport>, but the request was denied.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+Received[\s]+request[\s]+to[\s]+connect[\s]+to[\s]+host[\s]+(?<shost>[^\s]*)[\s]+port[\s]+(?<sport>[^,]*),[\s]+but[\s]+the[\s]+request[\s]+was[\s]+denied\.$" }
				id => "message-00003:103"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connect request denied"
					"[event][id]" => "00003:103"
					"[rsa][message][id1]" => "00003:103"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:105
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } WARNING: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+WARNING:[\s]+(?<result>.*)$" }
				id => "message-00003:105"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sshd Warning message"
					"[event][id]" => "00003:105"
					"[rsa][message][id1]" => "00003:105"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:106
		# line in RSA:  <agent>[<process_id>]: SecurID: user <username>; Access denied
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: SecurID: user %{username}; Access denied" }
				id => "message-00003:106"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "SecurID Access denied"
					"[event][id]" => "00003:106"
					"[rsa][message][id1]" => "00003:106"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:53
		# line in RSA:  <agent>: PAM: invalid module type: <obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: PAM: invalid module type: %{obj_type}" }
				id => "message-00003:53"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "PAM - invalid module type"
					"[event][id]" => "00003:53"
					"[rsa][message][id1]" => "00003:53"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:62
		# line in RSA:  <agent>[<process_id>]: channel <device>: rcvd big packet <dclass_counter1>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: channel %{device}: rcvd big packet %{dclass_counter1}, %{info}" }
				id => "message-00003:62"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "rcvd big packet for channel"
					"[event][id]" => "00003:62"
					"[rsa][message][id1]" => "00003:62"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:87
		# line in RSA:  <agent>[<process_id>]: the user option: <param> is invalid 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: the user option: %{param} is invalid" }
				id => "message-00003:87"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sshd - user option invalid"
					"[event][id]" => "00003:87"
					"[rsa][message][id1]" => "00003:87"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:109
		# line in RSA:  <agent>[<process_id>]: <sessionid> Session for user <username> started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid} Session for user %{username} started" }
				id => "message-00003:109"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Started Session for user"
					"[event][id]" => "00003:109"
					"[rsa][message][id1]" => "00003:109"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:110
		# line in RSA:  <agent>[<process_id>]: <sessionid> Session for user <username> ended
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{sessionid} Session for user %{username} ended" }
				id => "message-00003:110"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Session for user ended"
					"[event][id]" => "00003:110"
					"[rsa][message][id1]" => "00003:110"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:111
		# line in RSA: { <agent>(pam_unix)[<process_id>]: | <agent>[<process_id>]: } { pam_unix(<service>): session | session } opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+)[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+session[\s]+|[\s]*session[\s]+)[\s]+opened[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+by[\s]+(?<c_username>[^\(]*)\(uid=(?<uid>[^\)]*)\)$" }
				id => "message-00003:111"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00003:111"
					"[rsa][message][id1]" => "00003:111"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:112
		# line in RSA: { <agent>(pam_unix)[<process_id>]: | <agent>[<process_id>]: } { pam_unix(<service>): session | session } closed for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*(?<agent>[^\(]*)\(pam_unix\)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+)[\s]+([\s]*pam_unix\((?<service>[^\)]*)\):[\s]+session[\s]+|[\s]*session[\s]+)[\s]+closed[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-00003:112"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00003:112"
					"[rsa][message][id1]" => "00003:112"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003:94
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } { PAM: <application>: | <application>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+([\s]*PAM:[\s]+(?<application>[^:]*):[\s]+|[\s]*(?<application>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00003:94"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00003:94"
					"[rsa][message][id1]" => "00003:94"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sshd
		# line in RSA: <agent>[<process_id>]: Disconnected from {authenticating user|user} <username>{<saddr> port<sport>[<fld1>]|<saddr> port<sport>|<saddr>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
		# MESSAGE 00003:0100
		# line in RSA: <agent>[<process_id>]: Disconnected from {<saddr> port<sport>[<fld1>]|<saddr> port<sport>|<saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+Disconnected[\s]+from[\s]+((?<saddr>[^\s]*)[\s]+port(?<sport>[^\[]*)\[(?<fld1>[^\]]*)\]|(?<saddr>[^\s]*)[\s]+port(?<sport>.*)|(?<saddr>.*))$" }
				id => "message-00003:0100"
				add_field => {
				"hostname" => "%{hhost}"
				"result" => "Disconnected"
					"[event][id]" => "00003:0100"
					"[rsa][message][id1]" => "00003:0100"
					"[event][categoryid]" => "1801030000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 00003:100
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-00003:100"
				add_field => {
					"[event][id]" => "00003:100"
					"[rsa][message][id1]" => "00003:100"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd(pam_unix)" {
		# MESSAGE 00095
		# line in RSA:  <agent>[<process_id>]: <event_description>; logname=<fld1> uid=<uid> euid=<fld54> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}; logname=%{fld1} uid=%{uid} euid=%{fld54} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00095"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00095"
					"[rsa][message][id1]" => "00095"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00095:01
		# line in RSA:   <agent>[<process_id>]: <event_description>; logname=<username> uid=<uid> euid=<fld54> tty=<terminal> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}; logname=%{username} uid=%{uid} euid=%{fld54} tty=%{terminal} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00095:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00095:01"
					"[rsa][message][id1]" => "00095:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00095:02
		# line in RSA:  <agent>[<process_id>]: session opened for user <username> by (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username} by (%{info})" }
				id => "message-00095:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00095:02"
					"[rsa][message][id1]" => "00095:02"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00095:03
		# line in RSA:  <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-00095:03"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "password check"
					"[event][id]" => "00095:03"
					"[rsa][message][id1]" => "00095:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00095:06
		# line in RSA: <agent>[<process_id>]: account <username> has password changed in future 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account %{username} has password changed in future" }
				id => "message-00095:06"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_description" => "password changed in future"
					"[event][id]" => "00095:06"
					"[rsa][message][id1]" => "00095:06"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00095:05
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00095:05"
				add_field => {
					"[event][id]" => "00095:05"
					"[rsa][message][id1]" => "00095:05"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00095:07
		# line in RSA:  <username>: <agent>[<process_id>]: health check by user <c_username> by (uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}: %{agent}[%{process_id}]: health check by user %{c_username} by (uid=%{uid})" }
				id => "message-00095:07"
				add_field => {
				"event_description" => "health check by user"
					"[event][id]" => "00095:07"
					"[rsa][message][id1]" => "00095:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd2" {
		# MESSAGE 00005:23
		# line in RSA:  <agent>[<process_id>]: <hostname>: Authentication <<succeeded> for <<<application>> user: <<<username>> account: <<<realm>> service: <<<service>> reason: <<<result>> Access Control Identifier(UPN):<<<node>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{hostname}: Authentication <succeeded> for <%{application}> user: <%{username}> account: <%{realm}> service: <%{service}> reason: <%{result}> Access Control Identifier(UPN):<%{node}>" }
				id => "message-00005:23"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "00005:23"
					"[rsa][message][id1]" => "00005:23"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:24
		# line in RSA:  <agent>[<process_id>]: <hostname>: Authentication <<failed> for <<<application>> user: <<<username>> account: <<<realm>> service: <<<service>> reason: <<<result>> Access Control Identifier(UPN):<<<node>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{hostname}: Authentication <failed> for <%{application}> user: <%{username}> account: <%{realm}> service: <%{service}> reason: <%{result}> Access Control Identifier(UPN):<%{node}>" }
				id => "message-00005:24"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failed"
					"[event][id]" => "00005:24"
					"[rsa][message][id1]" => "00005:24"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:25
		# line in RSA: <agent>[<process_id>]: <severity>: Creating listener { failed (<dinterface>): | failed: } port <dport> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+Creating[\s]+listener[\s]+([\s]*failed[\s]+\((?<dinterface>[^\)]*)\):[\s]+|[\s]*failed:[\s]+)[\s]+port[\s]+(?<dport>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-00005:25"
				add_field => {
				"event_description" => "Creating listener failed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:25"
					"[rsa][message][id1]" => "00005:25"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005
		# line in RSA: <agent>[<process_id>]: connection from "<saddr>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection from \"%{saddr}\"" }
				id => "message-00005"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "New Connection"
					"[event][id]" => "00005"
					"[rsa][message][id1]" => "00005"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:22
		# line in RSA: <agent>[<process_id>]: Port <network_port> set up for remote forwarding.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Port %{network_port} set up for remote forwarding." }
				id => "message-00005:22"
				add_field => {
					"[event][id]" => "00005:22"
					"[rsa][message][id1]" => "00005:22"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:02
		# line in RSA:  <agent>[<process_id>]: User <username>, coming from <fqdn>, authenticated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}, coming from %{fqdn}, authenticated" }
				id => "message-00005:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user authenticated"
					"[event][id]" => "00005:02"
					"[rsa][message][id1]" => "00005:02"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:01
		# line in RSA:  <agent>[<process_id>]: User <username>'s local password accepted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username}'s local password accepted" }
				id => "message-00005:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "user password accepted"
					"[event][id]" => "00005:01"
					"[rsa][message][id1]" => "00005:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:03
		# line in RSA: <agent>[<process_id>]: User <username> forced to change password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User %{username} forced to change password" }
				id => "message-00005:03"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_description" => "forced password change"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:03"
					"[rsa][message][id1]" => "00005:03"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:04
		# line in RSA:  <agent>[<process_id>]: Password authentication for user <username> accepted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password authentication for user %{username} accepted" }
				id => "message-00005:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "password authenticated for user"
					"[event][id]" => "00005:04"
					"[rsa][message][id1]" => "00005:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:05
		# line in RSA:  <agent>[<process_id>]: Password authentication for user <username> failed from (<saddr> port <sport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Password authentication for user %{username} failed from (%{saddr} port %{sport})" }
				id => "message-00005:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "password authentication failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:05"
					"[rsa][message][id1]" => "00005:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:06
		# line in RSA: <agent>[<process_id>]: Now running on <username>'s privileges
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Now running on %{username}'s privileges" }
				id => "message-00005:06"
				add_field => {
				"event_description" => "privilege change"
					"[event][id]" => "00005:06"
					"[rsa][message][id1]" => "00005:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:07
		# line in RSA: <agent>[<process_id>]: Remote host disconnected: Disconnect requested by <username>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote host disconnected: Disconnect requested by %{username}." }
				id => "message-00005:07"
				add_field => {
				"event_description" => "disconnect request"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:07"
					"[rsa][message][id1]" => "00005:07"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:08
		# line in RSA: <agent>[<process_id>]: disconnected by application in remote: 'Disconnect requested by <username>.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: disconnected by application in remote: 'Disconnect requested by %{username}.'" }
				id => "message-00005:08"
				add_field => {
				"event_description" => "disconnect request"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:08"
					"[rsa][message][id1]" => "00005:08"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:09
		# line in RSA: <agent>[<process_id>]: Local disconnected: Connection closed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Local disconnected: Connection closed" }
				id => "message-00005:09"
				add_field => {
				"event_description" => "connection closed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:09"
					"[rsa][message][id1]" => "00005:09"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:10
		# line in RSA: <agent>[<process_id>]: connection lost: 'Connection closed.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connection lost: 'Connection closed.'" }
				id => "message-00005:10"
				add_field => {
				"event_description" => "connection closed"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:10"
					"[rsa][message][id1]" => "00005:10"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:11
		# line in RSA: <agent>[<process_id>]: { WARNING: DNS | DNS } lookup failed for "<saddr>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*WARNING:[\s]+DNS[\s]+|[\s]*DNS[\s]+)[\s]+lookup[\s]+failed[\s]+for[\s]+\"(?<saddr>[^\"]*)\"$" }
				id => "message-00005:11"
				add_field => {
				"event_description" => "DNS lookup failure"
					"[event][id]" => "00005:11"
					"[rsa][message][id1]" => "00005:11"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:12
		# line in RSA:  <agent>[<process_id>]: Public key authentication for user <username> accepted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Public key authentication for user %{username} accepted" }
				id => "message-00005:12"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "public key authenticated"
					"[event][id]" => "00005:12"
					"[rsa][message][id1]" => "00005:12"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:13
		# line in RSA:  <agent>[<process_id>]: Wrong password given for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Wrong password given for user '%{username}'" }
				id => "message-00005:13"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "User error"
				"info" => "Wrong password"
					"[event][id]" => "00005:13"
					"[rsa][message][id1]" => "00005:13"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:14
		# line in RSA: <agent>[<process_id>]: Remote TCP/IP forwarding request received from host <fqdn>, by authenticated user "<username>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote TCP/IP forwarding request received from host %{fqdn}, by authenticated user \"%{username}\"" }
				id => "message-00005:14"
				add_field => {
				"event_description" => "request received"
					"[event][id]" => "00005:14"
					"[rsa][message][id1]" => "00005:14"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:15
		# line in RSA:  <agent>[<process_id>]: password authentication failed. Login to account <username> not allowed or account non-existent
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: password authentication failed. Login to account %{username} not allowed or account non-existent" }
				id => "message-00005:15"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failed"
				"info" => "incorrect password"
					"[event][id]" => "00005:15"
					"[rsa][message][id1]" => "00005:15"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:16
		# line in RSA: <agent>[<process_id>]: Remote host disconnected: No further authentication methods available
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote host disconnected: No further authentication methods available" }
				id => "message-00005:16"
				add_field => {
				"event_description" => "Remote host disconnected"
				"info" => "authentication methods unavailable"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:16"
					"[rsa][message][id1]" => "00005:16"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:17
		# line in RSA: <agent>[<process_id>]: Remote host disconnected: Authentication cancelled by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Remote host disconnected: Authentication cancelled by %{username}" }
				id => "message-00005:17"
				add_field => {
				"event_description" => "Remote host disconnected"
				"info" => "authentication cancelled by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:17"
					"[rsa][message][id1]" => "00005:17"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:18
		# line in RSA: <agent>[<process_id>]: authentication cancelled by <username>: '<action>.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: authentication cancelled by %{username}: '%{action}.'" }
				id => "message-00005:18"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:18"
					"[rsa][message][id1]" => "00005:18"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:19
		# line in RSA: <agent>[<process_id>]: no more authentication methods on remote: 'No further authentication methods available.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: no more authentication methods on remote: 'No further authentication methods available.'" }
				id => "message-00005:19"
				add_field => {
				"event_description" => "authentication methods unavailable"
					"[event][id]" => "00005:19"
					"[rsa][message][id1]" => "00005:19"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:20
		# line in RSA:  <agent>[<process_id>]: Certificate authentication for user <username> rejected, reason: <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Certificate authentication for user %{username} rejected, reason: %{info}." }
				id => "message-00005:20"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "authentication rejected"
				"hostname" => "%{hhost}"
					"[event][id]" => "00005:20"
					"[rsa][message][id1]" => "00005:20"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:21
		# line in RSA:  <agent>[<process_id>]: User authentication failed: User name contains illegal characters. user client address <saddr>:<sport> requested service 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: User authentication failed: User name contains illegal characters. user client address %{saddr}:%{sport} requested service" }
				id => "message-00005:21"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"info" => "user name has illegal characters"
					"[event][id]" => "00005:21"
					"[rsa][message][id1]" => "00005:21"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005:30
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } <application>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-00005:30"
				add_field => {
				"action" => "process activity"
					"[event][id]" => "00005:30"
					"[rsa][message][id1]" => "00005:30"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId881
	# line in RSA:  <agent>[<process_id>]: <severity>: Creating listener { failed (<dinterface>): | failed: } port <dport> <info>
	else if [logstash][msgparser][id] == "msgParserId881" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<severity>[^:]*):[\s]+Creating[\s]+listener[\s]+([\s]*failed[\s]+\((?<dinterface>[^\)]*)\):[\s]+|[\s]*failed:[\s]+)[\s]+port[\s]+(?<dport>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId881"
			add_field => {
				"event_description" => "Creating listener failed"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Starting" {
		# MESSAGE 00478
		# line in RSA: <agent>: <event_description> - <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} - %{hostname}" }
				id => "message-00478"
				add_field => {
					"[event][id]" => "00478"
					"[rsa][message][id1]" => "00478"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00478:01
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-00478:01"
				add_field => {
					"[event][id]" => "00478:01"
					"[rsa][message][id1]" => "00478:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "statd" {
		# MESSAGE 00012
		# line in RSA:  <agent>[<process_id>]: <process>: attempt to create "<filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: attempt to create \"%{filename}\"" }
				id => "message-00012"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00012"
					"[rsa][message][id1]" => "00012"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00012:01
		# line in RSA:  <agent>[<process_id>]: <process>: host <shost> is not responding
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: host %{shost} is not responding" }
				id => "message-00012:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "host not responding"
					"[event][id]" => "00012:01"
					"[rsa][message][id1]" => "00012:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00012:02
		# line in RSA:  <agent>[<process_id>]: <process>: Could not register prog <product> vers <version> on <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Could not register prog %{product} vers %{version} on %{protocol}" }
				id => "message-00012:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Could not register prog on protocol"
					"[event][id]" => "00012:02"
					"[rsa][message][id1]" => "00012:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00012:03
		# line in RSA:  <agent>[<process_id>]: <process>: unable to create (<product>) for netpath.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: unable to create (%{product}) for netpath." }
				id => "message-00012:03"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "unable to create program for netpath"
					"[event][id]" => "00012:03"
					"[rsa][message][id1]" => "00012:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00012:04
		# line in RSA:  <agent>[<process_id>]: <process>: cannot talk to statd at <dhost>, RPC: <service> <result>(<resultcode>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: cannot talk to statd at %{dhost}, RPC: %{service} %{result}(%{resultcode})" }
				id => "message-00012:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot talk to statd at host"
					"[event][id]" => "00012:04"
					"[rsa][message][id1]" => "00012:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "StateManagementServer" {
		# MESSAGE 01031
		# line in RSA:  <agent>[<process_id>]: locsrv StateManagementServer has successfully shut down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: locsrv StateManagementServer has successfully shut down." }
				id => "message-01031"
				add_field => {
				"event_description" => " locsrv StateManagementServer shut down"
					"[event][id]" => "01031"
					"[rsa][message][id1]" => "01031"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01031:01
		# line in RSA:  <agent>[<process_id>]: locsrv StateManagementServer has successfully started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: locsrv StateManagementServer has successfully started." }
				id => "message-01031:01"
				add_field => {
				"event_description" => " locsrv StateManagementServer started"
					"[event][id]" => "01031:01"
					"[rsa][message][id1]" => "01031:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "su" {
		# MESSAGE 00007
		# line in RSA:  <agent>: BAD SU from <username> <fld51> <c_username> <fld2> <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: BAD SU from %{username} %{fld51} %{c_username} %{fld2} %{terminal}" }
				id => "message-00007"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "failed su by user"
					"[event][id]" => "00007"
					"[rsa][message][id1]" => "00007"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:03
		# line in RSA:  <agent>: BADSU <username> <fld1> <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: BADSU %{username} %{fld1} %{terminal}" }
				id => "message-00007:03"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "failed su by user"
					"[event][id]" => "00007:03"
					"[rsa][message][id1]" => "00007:03"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:05
		# line in RSA:   <agent>: FAILED SU (to root) <username> <fld1> <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: FAILED SU (to root) %{username} %{fld1} %{terminal}" }
				id => "message-00007:05"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "failed su to root by user"
					"[event][id]" => "00007:05"
					"[rsa][message][id1]" => "00007:05"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:04
		# line in RSA:  <agent>: SU <username> <fld1> <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: SU %{username} %{fld1} %{terminal}" }
				id => "message-00007:04"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "successful su by user"
					"[event][id]" => "00007:04"
					"[rsa][message][id1]" => "00007:04"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:11
		# line in RSA:  <agent>: from <username> <space> <c_username> <space> <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: from %{username} %{space} %{c_username} %{space} %{terminal}" }
				id => "message-00007:11"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "successful su by user"
					"[event][id]" => "00007:11"
					"[rsa][message][id1]" => "00007:11"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:06
		# line in RSA:  <agent>: (to <c_username>) <username> <fld1> <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: (to %{c_username}) %{username} %{fld1} %{terminal}" }
				id => "message-00007:06"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su to root by user"
					"[event][id]" => "00007:06"
					"[rsa][message][id1]" => "00007:06"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:07
		# line in RSA:  <agent>: Using <username>: <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Using %{username}: %{directory}" }
				id => "message-00007:07"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "successful su"
					"[event][id]" => "00007:07"
					"[rsa][message][id1]" => "00007:07"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:08
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] 'su <c_username>' failed for <username> <fld1>  <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] 'su %{c_username}' failed for %{username} %{fld1}  %{terminal}" }
				id => "message-00007:08"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "failed su for user"
					"[event][id]" => "00007:08"
					"[rsa][message][id1]" => "00007:08"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:10
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): session opened for user <username> by <c_username>(uid=<uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): session opened for user %{username} by %{c_username}(uid=%{uid})" }
				id => "message-00007:10"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00007:10"
					"[rsa][message][id1]" => "00007:10"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:12
		# line in RSA: <agent>[<process_id>]: pam_unix(<service>): session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: pam_unix(%{service}): session closed for user %{username}" }
				id => "message-00007:12"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00007:12"
					"[rsa][message][id1]" => "00007:12"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007:09
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00007:09"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00007:09"
					"[rsa][message][id1]" => "00007:09"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "su(pam_unix)" {
		# MESSAGE 00094
		# line in RSA: <agent>[<process_id>]: session opened for user <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session opened for user %{username}" }
				id => "message-00094"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "session opened for user"
					"[event][id]" => "00094"
					"[rsa][message][id1]" => "00094"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:02
		# line in RSA: <agent>[<process_id>]: session closed for user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: session closed for user %{username}" }
				id => "message-00094:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"hostname" => "%{hhost}"
				"event_description" => "session closed for user"
					"[event][id]" => "00094:02"
					"[rsa][message][id1]" => "00094:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:01
		# line in RSA: <agent>[<process_id>]: account <username> has password changed in future
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: account %{username} has password changed in future" }
				id => "message-00094:01"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_description" => "password changed in future"
					"[event][id]" => "00094:01"
					"[rsa][message][id1]" => "00094:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId903
	# line in RSA: <agent>: Successful Startup HstSndPrc by 'cms_prod'   <fld20> <fld21> <fld22> <fld23> <fld24> <fld25>   <hostname>
	else if [logstash][msgparser][id] == "msgParserId903" {
		dissect {
			mapping => { "message" => "%{agent}: Successful Startup HstSndPrc by 'cms_prod'   %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25}   %{hostname}" }
			id => "msgParserId903"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld21} %{fld22} %{fld23} %{fld25}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Successfully" {
		# MESSAGE 00445
		# line in RSA: [<process_id>]: Successfully registered using name <fqdn> with name server.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{process_id}]: Successfully registered using name %{fqdn} with name server." }
				id => "message-00445"
				add_field => {
				"event_description" => "Successfully registered with name server"
					"[event][id]" => "00445"
					"[rsa][message][id1]" => "00445"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00445:01
		# line in RSA: <agent>: Successfully Shutdown CMS <hostname> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Successfully Shutdown CMS %{hostname} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25}" }
				id => "message-00445:01"
				add_field => {
					"[event][id]" => "00445:01"
					"[rsa][message][id1]" => "00445:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudo" {
		# MESSAGE 00008
		# line in RSA: <agent>: <username> : <info> ; <space> TTY=<terminal> ; <space> PWD=<directory> ; <space> USER=<administrator> ; <space> COMMAND={<action> - <fld1> <fld2>| <action> - <c_username> |<action>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+:[\s]+(?<info>[^\s]*)[\s]+;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<terminal>[^\s]*)[\s]+;[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^\s]*)[\s]+;[\s]+(?<space>[^\s]*)[\s]+USER=(?<administrator>[^\s]*)[\s]+;[\s]+(?<space>[^\s]*)[\s]+COMMAND=((?<action>[^\s]*)[\s]+\-[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)|[\s]*(?<action>[^\s]*)[\s]+\-[\s]+(?<c_username>[^\s]*)[\s]+|(?<action>[^\s]*))[\s]+$" }
				id => "message-00008"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00008"
					"[rsa][message][id1]" => "00008"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:01
		# line in RSA:  <agent>: <username> : TTY=<terminal> { ; | : } PWD=<directory> { ; | : } USER=<administrator> { ; | : } <fld2> COMMAND={<action> - <fld1> <fld2>| <action> - <c_username> |<action>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+(?<username>[^\s]*)[\s]+:[\s]+TTY=(?<terminal>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+PWD=(?<directory>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+USER=(?<administrator>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<fld2>[^\s]*)[\s]+COMMAND=((?<action>[^\s]*)[\s]+\-[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)|[\s]*(?<action>[^\s]*)[\s]+\-[\s]+(?<c_username>[^\s]*)[\s]+|(?<action>[^\s]*))[\s]+$" }
				id => "message-00008:01"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00008:01"
					"[rsa][message][id1]" => "00008:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:02
		# line in RSA: <agent>: <username>:PTY=<terminal>:PWD=<directory>:PID=<process_id>:USER=<administrator> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}:PTY=%{terminal}:PWD=%{directory}:PID=%{process_id}:USER=%{administrator} %{info}" }
				id => "message-00008:02"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00008:02"
					"[rsa][message][id1]" => "00008:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:03
		# line in RSA:  <agent>: <username>:PTY=<terminal>:PWD=<directory>:PID=<process_id> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username}:PTY=%{terminal}:PWD=%{directory}:PID=%{process_id} %{info}" }
				id => "message-00008:03"
				add_field => {
				"event_description" => "sudo by user"
				"hostname" => "%{hhost}"
					"[event][id]" => "00008:03"
					"[rsa][message][id1]" => "00008:03"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008:04
		# line in RSA:  <agent>: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{info}" }
				id => "message-00008:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "sudo by user"
					"[event][id]" => "00008:04"
					"[rsa][message][id1]" => "00008:04"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudo(pam_unix)" {
		# MESSAGE 00097
		# line in RSA:  <agent>[<process_id>]: check pass; <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: check pass; %{result}" }
				id => "message-00097"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "sudo password check failure"
					"[event][id]" => "00097"
					"[rsa][message][id1]" => "00097"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:01
		# line in RSA:  <agent>[<process_id>]: <event_description>; logname=<fld53> uid=<uid> euid=<fld54> tty=<terminal> ruser=<c_username> rhost=<shost> user=<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}; logname=%{fld53} uid=%{uid} euid=%{fld54} tty=%{terminal} ruser=%{c_username} rhost=%{shost} user=%{username}" }
				id => "message-00097:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
					"[event][id]" => "00097:01"
					"[rsa][message][id1]" => "00097:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:02
		# line in RSA:  <agent>[<process_id>]: <event_description>; logname=<fld53> uid=<uid> euid=<fld54> tty=<interface> ruser=<c_username> rhost=<shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}; logname=%{fld53} uid=%{uid} euid=%{fld54} tty=%{interface} ruser=%{c_username} rhost=%{shost}" }
				id => "message-00097:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "sudo authentication failure"
					"[event][id]" => "00097:02"
					"[rsa][message][id1]" => "00097:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudosh" {
		# MESSAGE 01111
		# line in RSA:  <agent>: starting session for <fld22> as <username>,<terminal> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: starting session for %{fld22} as %{username},%{terminal} (%{info})" }
				id => "message-01111"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Starting Session"
					"[event][id]" => "01111"
					"[rsa][message][id1]" => "01111"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01111:01
		# line in RSA:  <agent>: stopping session for <fld22> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: stopping session for %{fld22} as %{username}" }
				id => "message-01111:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Stopping session"
					"[event][id]" => "01111:01"
					"[rsa][message][id1]" => "01111:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01111:02
		# line in RSA:  <agent>: <username>,<terminal>: /bin/bash is not in /etc/shells
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{username},%{terminal}: /bin/bash is not in /etc/shells" }
				id => "message-01111:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "bash is not in /etc/shells"
					"[event][id]" => "01111:02"
					"[rsa][message][id1]" => "01111:02"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId917
	# line in RSA:  <username>: <event_time_string>|<agent>|<node>|<c_username>|<event_description>
	else if [logstash][msgparser][id] == "msgParserId917" {
		dissect {
			mapping => { "message" => "%{username}: %{event_time_string}|%{agent}|%{node}|%{c_username}|%{event_description}" }
			id => "msgParserId917"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "swat" {
		# MESSAGE 00525
		# line in RSA: <agent>[<process_id>]: <space> Denied connection from <shost> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{space} Denied connection from %{shost} (%{saddr})" }
				id => "message-00525"
				add_field => {
				"event_description" => "denied connection"
					"[event][id]" => "00525"
					"[rsa][message][id1]" => "00525"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00525:01
		# line in RSA: <agent>[<process_id>]: [<fld21> <fld23>, <fld53>]  <directory>:<action>(<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld21} %{fld23}, %{fld53}]  %{directory}:%{action}(%{fld1})" }
				id => "message-00525:01"
				add_field => {
					"[event][id]" => "00525:01"
					"[rsa][message][id1]" => "00525:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE 00525:02
		# line in RSA: <agent>[<process_id>]:    No such file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:    No such file or directory" }
				id => "message-00525:02"
				add_field => {
				"event_description" => "swat: No such file or directory"
					"[event][id]" => "00525:02"
					"[rsa][message][id1]" => "00525:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "symmir" {
		# MESSAGE 00170:01
		# line in RSA: <agent>[<process_id>]: '<action>' for device <node> in group <group_object> - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: '%{action}' for device %{node} in group %{group_object} - %{info}" }
				id => "message-00170:01"
				add_field => {
				"event_description" => "operation cannot be executed"
					"[event][id]" => "00170:01"
					"[rsa][message][id1]" => "00170:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00170
		# line in RSA: <agent>[<process_id>]: '<action>' for group <group_object> - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: '%{action}' for group %{group_object} - %{info}" }
				id => "message-00170"
				add_field => {
				"event_description" => "operation cannot be executed"
					"[event][id]" => "00170"
					"[rsa][message][id1]" => "00170"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00170:02
		# line in RSA: <agent>[<process_id>]: '<action>' for device <node> in file <filename>- <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: '%{action}' for device %{node} in file %{filename}- %{info}" }
				id => "message-00170:02"
				add_field => {
				"event_description" => "operation could not complete"
					"[event][id]" => "00170:02"
					"[rsa][message][id1]" => "00170:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId924
	# line in RSA: <agent>[<process_id>]: '<action>' for device { file | group } <group_object> - <info> 
	else if [logstash][msgparser][id] == "msgParserId924" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+'(?<action>[^']*)'[\s]+for[\s]+device[\s]+([\s]*file[\s]+|[\s]*group[\s]+)[\s]+(?<group_object>[^\s]*)[\s]+\-[\s]+(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId924"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "synergy" {
		# MESSAGE 00397
		# line in RSA: <agent>: <severity>: <fld1> failed to connect to server: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{severity}: %{fld1} failed to connect to server: %{info}" }
				id => "message-00397"
				add_field => {
				"event_description" => "failed to connect to server"
					"[event][id]" => "00397"
					"[rsa][message][id1]" => "00397"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00397:01
		# line in RSA: <agent>: NOTE: <fld1>: disconnected from server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: NOTE: %{fld1}: disconnected from server" }
				id => "message-00397:01"
				add_field => {
				"event_description" => "disconnected from server"
					"[event][id]" => "00397:01"
					"[rsa][message][id1]" => "00397:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sys-auth_3.0.0.5" {
		# MESSAGE 01351
		# line in RSA:  <agent>[<process_id>]: <application>: successful authentication for user <<<username>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: successful authentication for user <%{username}>" }
				id => "message-01351"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "successful authentication for user"
					"[event][id]" => "01351"
					"[rsa][message][id1]" => "01351"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01351:01
		# line in RSA:  <agent>[<process_id>]: <hostname>: Authentication <<succeeded> for <<<application>> user: <<<username>> account: <<<realm>> service: <<<service>> reason: <<<result>> Access Control Identifier({ NT Name | UPN} ):<<<node>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<hostname>[^:]*):[\s]+Authentication[\s]+<succeeded>[\s]+for[\s]+<(?<application>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<realm>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+<(?<result>[^>]*)>[\s]+Access[\s]+Control[\s]+Identifier\(([\s]*NT[\s]+Name[\s]+|[\s]*UPN)[\s]+\):<(?<node>[^>]*)>$" }
				id => "message-01351:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "01351:01"
					"[rsa][message][id1]" => "01351:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01351:02
		# line in RSA:  <agent>[<process_id>]: <hostname>: Authentication <<succeeded passwordless> for <<<application>> user: <<<username>> account: <<<realm>> service: <<<service>> reason: <<<result>> Access Control Identifier({ NT Name | UPN} ):<<<node>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<hostname>[^:]*):[\s]+Authentication[\s]+<succeeded[\s]+passwordless>[\s]+for[\s]+<(?<application>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<realm>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+<(?<result>[^>]*)>[\s]+Access[\s]+Control[\s]+Identifier\(([\s]*NT[\s]+Name[\s]+|[\s]*UPN)[\s]+\):<(?<node>[^>]*)>$" }
				id => "message-01351:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "01351:02"
					"[rsa][message][id1]" => "01351:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01351:03
		# line in RSA:  <agent>[<process_id>]: <application>: unknown error <<<resultcode>> while trying to authenticate user <<<username>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: unknown error <%{resultcode}> while trying to authenticate user <%{username}>" }
				id => "message-01351:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"hostname" => "%{hhost}"
				"event_description" => "successful authentication for user"
					"[event][id]" => "01351:03"
					"[rsa][message][id1]" => "01351:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01351:04
		# line in RSA:  <agent>[<process_id>]: <application>: unknown user <<<username>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: unknown user <%{username}>" }
				id => "message-01351:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "successful authentication for user"
					"[event][id]" => "01351:04"
					"[rsa][message][id1]" => "01351:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01351:05
		# line in RSA:  <agent>[<process_id>]: <application>: failed authentication for user <<<username>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{application}: failed authentication for user <%{username}>" }
				id => "message-01351:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "failed authentication for user"
					"[event][id]" => "01351:05"
					"[rsa][message][id1]" => "01351:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId933
	# line in RSA: <agent>: <process> tried logging directly from <fld54>
	else if [logstash][msgparser][id] == "msgParserId933" {
		dissect {
			mapping => { "message" => "%{agent}: %{process} tried logging directly from %{fld54}" }
			id => "msgParserId933"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog" {
		# MESSAGE 00001
		# line in RSA:  <agent>: <terminal>: failed login attempt for <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{terminal}: failed login attempt for %{username} from %{saddr}" }
				id => "message-00001"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Login Failure"
					"[event][id]" => "00001"
					"[rsa][message][id1]" => "00001"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00001:02
		# line in RSA: <agent>: <process>: [<process_id>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: [%{process_id}] %{event_description}" }
				id => "message-00001:02"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00001:02"
					"[rsa][message][id1]" => "00001:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00001:03
		# line in RSA: <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00001:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00001:03"
					"[rsa][message][id1]" => "00001:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId937
	# line in RSA: <agent>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId937" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId937"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog-ng" {
		# MESSAGE 00026
		# line in RSA: <agent>[<process_id>]: Cannot open file <filename> for writing (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Cannot open file %{filename} for writing (%{info})" }
				id => "message-00026"
				add_field => {
				"event_description" => "syslog-ng open file error"
					"[event][id]" => "00026"
					"[rsa][message][id1]" => "00026"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:01
		# line in RSA: <agent>[<process_id>]: Changing permissions on special file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Changing permissions on special file %{filename}" }
				id => "message-00026:01"
				add_field => {
				"event_description" => "syslog-ng: Changing permissions on special file"
					"[event][id]" => "00026:01"
					"[rsa][message][id1]" => "00026:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId940
	# line in RSA:  <agent>[<process_id>]: connect from <shost> 
	else if [logstash][msgparser][id] == "msgParserId940" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId940"
			add_field => {
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tcbck" {
		# MESSAGE 00203
		# line in RSA: <agent>: <fld53> The { file | entry for } <filename> has the wrong file mode. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^:]*):[\s]+(?<fld53>[^\s]*)[\s]+The[\s]+([\s]*file[\s]+|[\s]*entry[\s]+for[\s]+)[\s]+(?<filename>[^\s]*)[\s]+has[\s]+the[\s]+wrong[\s]+file[\s]+mode\.[\s]+$" }
				id => "message-00203"
				add_field => {
				"event_description" => "Given file has wrong file mode."
					"[event][id]" => "00203"
					"[rsa][message][id1]" => "00203"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00203:01
		# line in RSA: <agent>: <fld53> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{fld53} %{event_description}" }
				id => "message-00203:01"
				add_field => {
					"[event][id]" => "00203:01"
					"[rsa][message][id1]" => "00203:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId943
	# line in RSA: <agent>: drop open request from <saddr>/<sport>
	else if [logstash][msgparser][id] == "msgParserId943" {
		dissect {
			mapping => { "message" => "%{agent}: drop open request from %{saddr}/%{sport}" }
			id => "msgParserId943"
			add_field => {
				"event_description" => "TCP drop open request"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "telnetd" {
		# MESSAGE 00032:01
		# line in RSA:  <agent>[<process_id>]: telnet from <fqdn> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: telnet from %{fqdn} on %{terminal}" }
				id => "message-00032:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
					"[event][id]" => "00032:01"
					"[rsa][message][id1]" => "00032:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00032
		# line in RSA: <agent>[<process_id>]: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
				id => "message-00032"
				add_field => {
					"[event][id]" => "00032"
					"[rsa][message][id1]" => "00032"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId945
	# line in RSA: <username>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId945" {
		dissect {
			mapping => { "message" => "%{username}: %{event_description}" }
			id => "msgParserId945"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId946
	# line in RSA: <agent>[<process_id>]: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId946" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId946"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId947
	# line in RSA: <agent>[<process_id>]: <fld53>: HA Connection with peer <daddr>:<dport> established.
	else if [logstash][msgparser][id] == "msgParserId947" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fld53}: HA Connection with peer %{daddr}:%{dport} established." }
			id => "msgParserId947"
			add_field => {
				"event_description" => "HA Connection with peer established"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId948
	# line in RSA:  <agent>: <service> Heartbeat <event_time_string>
	else if [logstash][msgparser][id] == "msgParserId948" {
		dissect {
			mapping => { "message" => "%{agent}: %{service} Heartbeat %{event_time_string}" }
			id => "msgParserId948"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Heartbeat"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tn3270d" {
		# MESSAGE 00316:01
		# line in RSA:  <agent>[<process_id>]: refused connect from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: refused connect from %{saddr}" }
				id => "message-00316:01"
				add_field => {
				"event_description" => "connection refused"
					"[event][id]" => "00316:01"
					"[rsa][message][id1]" => "00316:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00316:02
		# line in RSA: <agent>[<process_id>]: <severity>: host name/address mismatch: <saddr> != <fqdn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: host name/address mismatch: %{saddr} != %{fqdn}" }
				id => "message-00316:02"
				add_field => {
					"[event][id]" => "00316:02"
					"[rsa][message][id1]" => "00316:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00316:03
		# line in RSA: <agent>[<process_id>]: <process>:  peer died: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}:  peer died: %{event_description}" }
				id => "message-00316:03"
				add_field => {
					"[event][id]" => "00316:03"
					"[rsa][message][id1]" => "00316:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00316
		# line in RSA: <agent>[<process_id>]: connect from <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
				id => "message-00316"
				add_field => {
				"event_description" => "connection"
					"[event][id]" => "00316"
					"[rsa][message][id1]" => "00316"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId953
	# line in RSA: <agent>[<process_id>]: <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId953" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{info}" }
			id => "msgParserId953"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId954
	# line in RSA:  <agent>[<process_id>]: <hostname> trisql has been executed to <result>
	else if [logstash][msgparser][id] == "msgParserId954" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} trisql has been executed to %{result}" }
			id => "msgParserId954"
			add_field => {
				"event_description" => "trisql has been executed on server"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tsm" {
		# MESSAGE 00011:02
		# line in RSA:  <agent>: Login successful for <username> from <fqdn> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: Login successful for %{username} from %{fqdn} on %{terminal}" }
				id => "message-00011:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
					"[event][id]" => "00011:02"
					"[rsa][message][id1]" => "00011:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00011:04
		# line in RSA:  <agent>: <application> LogFAttempt Failed to get user password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{application} LogFAttempt Failed to get user password" }
				id => "message-00011:04"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "LogFAttempt Failed to get user password"
					"[event][id]" => "00011:04"
					"[rsa][message][id1]" => "00011:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00011:03
		# line in RSA:  <agent>: TSM: write to <terminal> failed. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: TSM: write to %{terminal} failed." }
				id => "message-00011:03"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00011:03"
					"[rsa][message][id1]" => "00011:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00011
		# line in RSA:  <agent>: <terminal>: <fld54> <event_description> -- <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{terminal}: %{fld54} %{event_description} -- %{info}" }
				id => "message-00011"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00011"
					"[rsa][message][id1]" => "00011"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00011:01
		# line in RSA: <agent>: <terminal>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{terminal}: %{event_description}" }
				id => "message-00011:01"
				add_field => {
					"[event][id]" => "00011:01"
					"[rsa][message][id1]" => "00011:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId960
	# line in RSA: <agent>[<process_id>]: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId960" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId960"
			add_field => {
				"event_description" => "TSM backup error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId961
	# line in RSA: <agent>[<process_id>]: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId961" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId961"
			add_field => {
				"event_description" => "TSM backup success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId962
	# line in RSA: <agent>[<process_id>]: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId962" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId962"
			add_field => {
				"event_description" => "TSM backup started successfully"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId963
	# line in RSA: <agent>[<process_id>]: returncode <resultcode> cmdline: <action> 
	else if [logstash][msgparser][id] == "msgParserId963" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: returncode %{resultcode} cmdline: %{action}" }
			id => "msgParserId963"
			add_field => {
				"event_description" => "TSM error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId964
	# line in RSA:  <agent>[<process_id>]: [RESTORE_MSG]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId964" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [RESTORE_MSG]: %{event_description}" }
			id => "msgParserId964"
			add_field => {
				"hostname" => "%{hhost}"
				"event_type" => "RESTORE_MSG"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId965
	# line in RSA:  <agent>: pid=<process_id> port=<network_port> connection from <saddr>
	else if [logstash][msgparser][id] == "msgParserId965" {
		dissect {
			mapping => { "message" => "%{agent}: pid=%{process_id} port=%{network_port} connection from %{saddr}" }
			id => "msgParserId965"
			add_field => {
				"event_description" => "TSM error"
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "twagent" {
		# MESSAGE 01172
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } <fld1> <filename> <directory> started in daemon mode
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+(?<filename>[^\s]*)[\s]+(?<directory>[^\s]*)[\s]+started[\s]+in[\s]+daemon[\s]+mode$" }
				id => "message-01172"
				add_field => {
				"event_description" => "agent started in daemon mode"
					"[event][id]" => "01172"
					"[rsa][message][id1]" => "01172"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01173
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-01173"
				add_field => {
					"[event][id]" => "01173"
					"[rsa][message][id1]" => "01173"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId968
	# line in RSA:   <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId968" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId968"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId969
	# line in RSA: <protocol> Scan by <application> (<network_port>)
	else if [logstash][msgparser][id] == "msgParserId969" {
		dissect {
			mapping => { "message" => "%{protocol} Scan by %{application} (%{network_port})" }
			id => "msgParserId969"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId970
	# line in RSA: <agent>: [ID <id> <event_source>.<severity>] WARNING: <event_description>
	else if [logstash][msgparser][id] == "msgParserId970" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: %{event_description}" }
			id => "msgParserId970"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId971
	# line in RSA: <username>: <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId971" {
		dissect {
			mapping => { "message" => "%{username}: %{agent}: %{event_description}" }
			id => "msgParserId971"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId972
	# line in RSA:  <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId972" {
		dissect {
			mapping => { "message" => "%{agent}: %{event_description}" }
			id => "msgParserId972"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId973
	# line in RSA:  <agent>[<process_id>]: delete `<username>' from shadow group `<group>'
	else if [logstash][msgparser][id] == "msgParserId973" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: delete `%{username}' from shadow group `%{group}'" }
			id => "msgParserId973"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "delete user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId974
	# line in RSA: <agent>[<process_id>]: change user `<username>' expiration from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId974" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: change user `%{username}' expiration from %{change_old} to %{change_new}" }
			id => "msgParserId974"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"event_description" => "change user expiration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId975
	# line in RSA: <username> Using <fld53> for high-res timesource
	else if [logstash][msgparser][id] == "msgParserId975" {
		dissect {
			mapping => { "message" => "%{username} Using %{fld53} for high-res timesource" }
			id => "msgParserId975"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ux_AIX_Fs_Full" {
		# MESSAGE 00241
		# line in RSA: <agent>[<process_id>]: <fqdn> WARNING <directory> <dclass_ratio1> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} WARNING %{directory} %{dclass_ratio1} %{info}" }
				id => "message-00241"
				add_field => {
				"event_description" => "WARNING: File system has reached high capacity."
					"[event][id]" => "00241"
					"[rsa][message][id1]" => "00241"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00241:01
		# line in RSA: <agent>[<process_id>]: <fqdn> FATAL <directory> <dclass_ratio1> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} FATAL %{directory} %{dclass_ratio1} %{info}" }
				id => "message-00241:01"
				add_field => {
				"event_description" => "FATAL: File system has reached high capacity"
					"[event][id]" => "00241:01"
					"[rsa][message][id1]" => "00241:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ux_AIX_Paging_Full" {
		# MESSAGE 00242
		# line in RSA: <agent>[<process_id>]: WARNING notification: <dclass_ratio1> percent capacity
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: WARNING notification: %{dclass_ratio1} percent capacity" }
				id => "message-00242"
				add_field => {
				"event_description" => "WARNING notification ux_AIX_Paging_Full reached high capacity."
					"[event][id]" => "00242"
					"[rsa][message][id1]" => "00242"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00242:01
		# line in RSA: <agent>[<process_id>]: HARMLESS notification: <dclass_ratio1> percent capacity 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: HARMLESS notification: %{dclass_ratio1} percent capacity" }
				id => "message-00242:01"
				add_field => {
				"event_description" => "HARMLESS notification ux_AIX_Paging_Full at low capacity."
					"[event][id]" => "00242:01"
					"[rsa][message][id1]" => "00242:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId980
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <fld53> <filename> 
	else if [logstash][msgparser][id] == "msgParserId980" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{fld53} %{filename}" }
			id => "msgParserId980"
			add_field => {
				"event_description" => "HARMLESS"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId981
	# line in RSA: <agent>[<process_id>]: <hostname> <severity> <process> Core file <filename> produced by program <fld53> on Server <node> was successfully removed.
	else if [logstash][msgparser][id] == "msgParserId981" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} %{severity} %{process} Core file %{filename} produced by program %{fld53} on Server %{node} was successfully removed." }
			id => "msgParserId981"
			add_field => {
				"event_description" => "Core file successfully removed."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId982
	# line in RSA: <agent>[<process_id>]: <fqdn> {<severity> <fld1>|<severity>}
	else if [logstash][msgparser][id] == "msgParserId982" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fqdn>[^\s]*)[\s]+((?<severity>[^\s]*)[\s]+(?<fld1>.*)|(?<severity>.*))$" }
			id => "msgParserId982"
			add_field => {
				"event_description" => "FATAL: CPU max capacity reached."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId983
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <info> 
	else if [logstash][msgparser][id] == "msgParserId983" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{info}" }
			id => "msgParserId983"
			add_field => {
				"event_description" => "DNS Server is resolving requests successfully"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId984
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <info> 
	else if [logstash][msgparser][id] == "msgParserId984" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{info}" }
			id => "msgParserId984"
			add_field => {
				"event_description" => "File system is available on host."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId985
	# line in RSA:   <agent>[<process_id>]: The following account has had more than <dclass_counter1> failed login attempts: username=<username>,ou=<fld54>,cn=<fld55> 
	else if [logstash][msgparser][id] == "msgParserId985" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: The following account has had more than %{dclass_counter1} failed login attempts: username=%{username},ou=%{fld54},cn=%{fld55}" }
			id => "msgParserId985"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "login failed"
				"info" => "Many failed login attempts"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId986
	# line in RSA: <agent>[<process_id>]: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId986" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
			id => "msgParserId986"
			add_field => {
				"event_description" => "LDAP Server up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId987
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <info>
	else if [logstash][msgparser][id] == "msgParserId987" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{info}" }
			id => "msgParserId987"
			add_field => {
				"event_description" => "License Key is valid."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId988
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <process> <info>
	else if [logstash][msgparser][id] == "msgParserId988" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{process} %{info}" }
			id => "msgParserId988"
			add_field => {
				"event_description" => "FATAL: Process not executing on host."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId989
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <process> <info>
	else if [logstash][msgparser][id] == "msgParserId989" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{process} %{info}" }
			id => "msgParserId989"
			add_field => {
				"event_description" => "Process started successfully."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId990
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <process> <info> 
	else if [logstash][msgparser][id] == "msgParserId990" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{process} %{info}" }
			id => "msgParserId990"
			add_field => {
				"event_description" => "process is executing."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId991
	# line in RSA:  <agent>[<process_id>]: <interface> <info> 
	else if [logstash][msgparser][id] == "msgParserId991" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{interface} %{info}" }
			id => "msgParserId991"
			add_field => {
				"event_description" => "mksysb failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId992
	# line in RSA: <agent>[<process_id>]: <info> 
	else if [logstash][msgparser][id] == "msgParserId992" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{info}" }
			id => "msgParserId992"
			add_field => {
				"event_description" => "mksysb successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId993
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <info> 
	else if [logstash][msgparser][id] == "msgParserId993" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{info}" }
			id => "msgParserId993"
			add_field => {
				"event_description" => "Device state is Enabled."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId994
	# line in RSA: <agent>[<process_id>]: <severity> all paths are in optimal state 
	else if [logstash][msgparser][id] == "msgParserId994" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} all paths are in optimal state" }
			id => "msgParserId994"
			add_field => {
				"event_description" => "all paths are in optimal state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId995
	# line in RSA: <agent>[<process_id>]: <hostname> <severity> <action> Cant open file <filename>. <info>
	else if [logstash][msgparser][id] == "msgParserId995" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} %{severity} %{action} Cant open file %{filename}. %{info}" }
			id => "msgParserId995"
			add_field => {
				"event_description" => "Cannot open file."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId996
	# line in RSA: <agent>[<process_id>]: <hostname> <severity> Telnet failed for svr <fld53>. Reason: <info>
	else if [logstash][msgparser][id] == "msgParserId996" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{hostname} %{severity} Telnet failed for svr %{fld53}. Reason: %{info}" }
			id => "msgParserId996"
			add_field => {
				"event_description" => "WARNING"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId997
	# line in RSA: <agent>[<process_id>]: <severity> <info> 
	else if [logstash][msgparser][id] == "msgParserId997" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{info}" }
			id => "msgParserId997"
			add_field => {
				"event_description" => "TSM server up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId998
	# line in RSA: <agent>[<process_id>]: could not log PID to PidLog <filename>, <info>
	else if [logstash][msgparser][id] == "msgParserId998" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: could not log PID to PidLog %{filename}, %{info}" }
			id => "msgParserId998"
			add_field => {
				"event_description" => "could not log PID"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId999
	# line in RSA: <agent>[<process_id>]: HARMLESS <info> 
	else if [logstash][msgparser][id] == "msgParserId999" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: HARMLESS %{info}" }
			id => "msgParserId999"
			add_field => {
				"event_description" => "HARMLESS: TSM_Scratch_Tapes_Low"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vascd" {
		# MESSAGE 00315
		# line in RSA: <agent>[<process_id>]: The license limit of <threshold> users has been reached -- <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: The license limit of %{threshold} users has been reached -- %{info}" }
				id => "message-00315"
				add_field => {
				"event_description" => "license user limit reached"
					"[event][id]" => "00315"
					"[rsa][message][id1]" => "00315"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00315:01
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00315:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00315:01"
					"[rsa][message][id1]" => "00315:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vasd" {
		# MESSAGE 00434
		# line in RSA:  <agent>[<process_id>]: Unable to get the sntp time. Error=<result>: <domain>, site: <fld53> Caused by: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: Unable to get the sntp time. Error=%{result}: %{domain}, site: %{fld53} Caused by: %{info}" }
				id => "message-00434"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Unable to get the sntp time"
					"[event][id]" => "00434"
					"[rsa][message][id1]" => "00434"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:01
		# line in RSA:  <agent>[<process_id>]: <process>: Failed to locally initialize context and id, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Failed to locally initialize context and id, %{info}" }
				id => "message-00434:01"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "do_changepw_stuff - Failed to locally initialize context and id"
					"[event][id]" => "00434:01"
					"[rsa][message][id1]" => "00434:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:02
		# line in RSA:  <agent>[<process_id>]: <process>: Host password changed successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: Host password changed successfully" }
				id => "message-00434:02"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "Host password changed successfully"
					"[event][id]" => "00434:02"
					"[rsa][message][id1]" => "00434:02"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:03
		# line in RSA:  <agent>[<process_id>]: <process>: vascd_update_password_policy failed with <fld90>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: vascd_update_password_policy failed with %{fld90}" }
				id => "message-00434:03"
				add_field => {
				"ec_theme" => "Policy"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "vascd_update_password_policy failed"
					"[event][id]" => "00434:03"
					"[rsa][message][id1]" => "00434:03"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:04
		# line in RSA:  <agent>[<process_id>]: vasd <process> (PID <fld90>) exiting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: vasd %{process} (PID %{fld90}) exiting" }
				id => "message-00434:04"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00434:04"
					"[rsa][message][id1]" => "00434:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:05
		# line in RSA:  <agent>[<process_id>]: vasd <process> (PID <fld90>) starting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: vasd %{process} (PID %{fld90}) starting" }
				id => "message-00434:05"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00434:05"
					"[rsa][message][id1]" => "00434:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:06
		# line in RSA:  <agent>[<process_id>]: update override process failed with err = <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: update override process failed with err = %{resultcode}" }
				id => "message-00434:06"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00434:06"
					"[rsa][message][id1]" => "00434:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:07
		# line in RSA:  <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00434:07"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00434:07"
					"[rsa][message][id1]" => "00434:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00438:08
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-00438:08"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00438:08"
					"[rsa][message][id1]" => "00438:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1008
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } The NIS Map update process failed, error = <resultcode>
	else if [logstash][msgparser][id] == "msgParserId1008" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+The[\s]+NIS[\s]+Map[\s]+update[\s]+process[\s]+failed,[\s]+error[\s]+=[\s]+(?<resultcode>.*)$" }
			id => "msgParserId1008"
			add_field => {
				"action" => "The NIS Map update process failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vemkd" {
		# MESSAGE 01098
		# line in RSA:  <agent>[<process_id>]: <process>: EGO env directory: <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: EGO env directory: %{directory}" }
				id => "message-01098"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "01098"
					"[rsa][message][id1]" => "01098"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01098:02
		# line in RSA:  <agent>[<process_id>]: <process>: <info>. Default value <<<fld1>> will be used.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{info}. Default value <%{fld1}> will be used." }
				id => "message-01098:02"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "Default value will be used."
					"[event][id]" => "01098:02"
					"[rsa][message][id1]" => "01098:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1011
	# line in RSA: <agent>: A registered PBX service <process> has shutdown.
	else if [logstash][msgparser][id] == "msgParserId1011" {
		dissect {
			mapping => { "message" => "%{agent}: A registered PBX service %{process} has shutdown." }
			id => "msgParserId1011"
			add_field => {
				"event_description" => " A registered PBX service has shutdown."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1012
	# line in RSA:  <agent>: DHCPREQUEST for <hostip> from <smacaddr> via <interface> 
	else if [logstash][msgparser][id] == "msgParserId1012" {
		dissect {
			mapping => { "message" => "%{agent}: DHCPREQUEST for %{hostip} from %{smacaddr} via %{interface}" }
			id => "msgParserId1012"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vnetd" {
		# MESSAGE 01427
		# line in RSA:  <agent>[<process_id>]: <severity>: cannot execute <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: cannot execute %{filename}: %{result}" }
				id => "message-01427"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot execute daemon"
					"[event][id]" => "01427"
					"[rsa][message][id1]" => "01427"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01428
		# line in RSA:  <agent>[<process_id>]: <service>: <action>: Could not load module <filename> System error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{service}: %{action}: Could not load module %{filename} System error: %{result}" }
				id => "message-01428"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "dns failed"
					"[event][id]" => "01428"
					"[rsa][message][id1]" => "01428"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01429
		# line in RSA:  <agent>[<process_id>]: connect from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
				id => "message-01429"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
					"[event][id]" => "01429"
					"[rsa][message][id1]" => "01429"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1015
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <version> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId1015" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<version>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId1015"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1016
	# line in RSA:  <agent>: <filename>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId1016" {
		dissect {
			mapping => { "message" => "%{agent}: %{filename}: %{event_description}" }
			id => "msgParserId1016"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1017
	# line in RSA: <agent>:<process>: <event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId1017" {
		dissect {
			mapping => { "message" => "%{agent}:%{process}: %{event_description}: %{info}" }
			id => "msgParserId1017"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Wac" {
		# MESSAGE 01347
		# line in RSA:  <agent>[<process_id>]: VCS ERROR <version>  <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS ERROR %{version}  %{event_description}" }
				id => "message-01347"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "VCS ERROR"
					"[event][id]" => "01347"
					"[rsa][message][id1]" => "01347"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01347:01
		# line in RSA:  <agent>[<process_id>]: VCS NOTICE <version>  <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: VCS NOTICE %{version}  %{event_description}" }
				id => "message-01347:01"
				add_field => {
				"hostname" => "%{hhost}"
				"action" => "VCS NOTICE"
					"[event][id]" => "01347:01"
					"[rsa][message][id1]" => "01347:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1020
	# line in RSA:  <agent>: <action> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId1020" {
		dissect {
			mapping => { "message" => "%{agent}: %{action} %{event_description}" }
			id => "msgParserId1020"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1021
	# line in RSA: <hostname> Warning: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1021" {
		dissect {
			mapping => { "message" => "%{hostname} Warning: %{event_description}" }
			id => "msgParserId1021"
			add_field => {
				"agent" => "Warning"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1022
	# line in RSA: <hostname> <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1022" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}: %{event_description}" }
			id => "msgParserId1022"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "wca" {
		# MESSAGE 00232
		# line in RSA: <agent>[<process_id>]: <event_description>: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}: %{info}" }
				id => "message-00232"
				add_field => {
					"[event][id]" => "00232"
					"[rsa][message][id1]" => "00232"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00232:01
		# line in RSA: <agent>[<process_id>]: <event_description>. <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}. %{info}" }
				id => "message-00232:01"
				add_field => {
					"[event][id]" => "00232:01"
					"[rsa][message][id1]" => "00232:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "webauth" {
		# MESSAGE 00422
		# line in RSA:  <agent>[<process_id>]: <username> not authenticated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{username} not authenticated" }
				id => "message-00422"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "user not authenticated"
					"[event][id]" => "00422"
					"[rsa][message][id1]" => "00422"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00422:01
		# line in RSA:  <agent>[<process_id>]: <process>: user <username> not found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: user %{username} not found" }
				id => "message-00422:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "user not found"
					"[event][id]" => "00422:01"
					"[rsa][message][id1]" => "00422:01"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00422:02
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-00422:02"
				add_field => {
					"[event][id]" => "00422:02"
					"[rsa][message][id1]" => "00422:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1027
	# line in RSA:  <agent>[<process_id>]: <service>: Configuration initialization failed: <result>
	else if [logstash][msgparser][id] == "msgParserId1027" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{service}: Configuration initialization failed: %{result}" }
			id => "msgParserId1027"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "Configuration initialization failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1028
	# line in RSA: <hostname> <agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1028" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent} %{event_description}" }
			id => "msgParserId1028"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "winbindd" {
		# MESSAGE 01097
		# line in RSA: <agent>[<process_id>]: [<fld21> <fld23>, <fld53>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [%{fld21} %{fld23}, %{fld53}] %{event_description}" }
				id => "message-01097"
				add_field => {
					"[event][id]" => "01097"
					"[rsa][message][id1]" => "01097"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld21} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE 01097:01
		# line in RSA: <agent>[<process_id>]:   ERROR: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]:   ERROR: %{event_description}" }
				id => "message-01097:01"
				add_field => {
				"severity" => "ERROR"
					"[event][id]" => "01097:01"
					"[rsa][message][id1]" => "01097:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01097:02
		# line in RSA: <agent>[<process_id>]: <process>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{process}: %{event_description}" }
				id => "message-01097:02"
				add_field => {
					"[event][id]" => "01097:02"
					"[rsa][message][id1]" => "01097:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1031
	# line in RSA:  <agent>: <fld1> Executing cmd: <action>
	else if [logstash][msgparser][id] == "msgParserId1031" {
		dissect {
			mapping => { "message" => "%{agent}: %{fld1} Executing cmd: %{action}" }
			id => "msgParserId1031"
			add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "executing command"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId88
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId88" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId88"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1032
	# line in RSA: <agent>[<process_id>]: <fqdn> <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1032" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{fqdn} %{severity} %{event_description}" }
			id => "msgParserId1032"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1033
	# line in RSA:  <agent>[<process_id>]: START: bpcd pid=<fld54> from=<saddr>
	else if [logstash][msgparser][id] == "msgParserId1033" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: START: bpcd pid=%{fld54} from=%{saddr}" }
			id => "msgParserId1033"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "xmservd" {
		# MESSAGE 01425
		# line in RSA:  <agent>[<process_id>]: <severity>: cannot execute <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{severity}: cannot execute %{filename}: %{result}" }
				id => "message-01425"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "cannot execute daemon"
					"[event][id]" => "01425"
					"[rsa][message][id1]" => "01425"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01426
		# line in RSA:  <agent>[<process_id>]: connect from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
				id => "message-01426"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "connection"
					"[event][id]" => "01426"
					"[rsa][message][id1]" => "01426"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1034
	# line in RSA: <agent>[<process_id>]: {synchronized to <saddr>, <fld1>|<event_description>}
	else if [logstash][msgparser][id] == "msgParserId1034" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(synchronized[\s]+to[\s]+(?<saddr>[^,]*),[\s]+(?<fld1>.*)|(?<event_description>.*))$" }
			id => "msgParserId1034"
			add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Time"
				"ec_activity" => "Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId384
	# line in RSA: <agent>[<process_id>]: client <saddr>#<sport>: query: <domain> {IN <fld3> (<hostip>)|IN <fld1>}
	else if [logstash][msgparser][id] == "msgParserId384" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+client[\s]+(?<saddr>[^#]*)#(?<sport>[^:]*):[\s]+query:[\s]+(?<domain>[^\s]*)[\s]+(IN[\s]+(?<fld3>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)|IN[\s]+(?<fld1>.*))$" }
			id => "msgParserId384"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "oprroot" {
		# MESSAGE 002423:01
		# line in RSA:  <agent>: <event_description> cmd = <cmd> time = <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description} cmd = %{cmd} time = %{event_time_string}" }
				id => "message-002423:01"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002423:01"
					"[rsa][message][id1]" => "002423:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002423
		# line in RSA:  <agent>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{event_description}" }
				id => "message-002423"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "002423"
					"[rsa][message][id1]" => "002423"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1036
	# line in RSA: <username>: SESSION = <sessionid>, from_remote_host = <daddr>, USER = <administrator> PWD = <directory> COMMAND = <action> 
	else if [logstash][msgparser][id] == "msgParserId1036" {
		dissect {
			mapping => { "message" => "%{username}: SESSION = %{sessionid}, from_remote_host = %{daddr}, USER = %{administrator} PWD = %{directory} COMMAND = %{action}" }
			id => "msgParserId1036"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1037
	# line in RSA: <username>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1037" {
		dissect {
			mapping => { "message" => "%{username}:%{event_description}" }
			id => "msgParserId1037"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1038
	# line in RSA:  <agent>[<process_id>]: <severity> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1038" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{severity} %{event_description}" }
			id => "msgParserId1038"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1039
	# line in RSA: <fld>
	else if [logstash][msgparser][id] == "msgParserId1039" {
		dissect {
			mapping => { "message" => "%{fld}" }
			id => "msgParserId1039"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1041
	# line in RSA: <agent>[<process_id>]: {Run|run} {command using system|command using pipe|command: <param>}
	else if [logstash][msgparser][id] == "msgParserId1041" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Run|run)[\s]+(command[\s]+using[\s]+system|command[\s]+using[\s]+pipe|command:[\s]+(?<param>.*))$" }
			id => "msgParserId1041"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1040
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1040" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1040"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1042
	# line in RSA: {<agent>[<process_id>]:| <agent>:} <event_description>
	else if [logstash][msgparser][id] == "msgParserId1042" {
		grok {
			match => { "message" => "^((?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:|[\s]*(?<agent>[^:]*):)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1042"
			add_field => {
				"hostname" => "%{hhost}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "syncpass.pl" {
		# MESSAGE syncpass.pl
		# line in RSA: <agent>[<process_id>]: {Run|run} {command using system|command using pipe|command: <param>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(Run|run)[\s]+(command[\s]+using[\s]+system|command[\s]+using[\s]+pipe|command:[\s]+(?<param>.*))$" }
				id => "message-syncpass.pl"
				add_field => {
					"[event][id]" => "syncpass.pl"
					"[rsa][message][id1]" => "syncpass.pl"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE syncpass.pl:01
		# line in RSA: <agent>[<process_id>]: No user need to sync password.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: No user need to sync password." }
				id => "message-syncpass.pl:01"
				add_field => {
				"event_description" => "No user need to sync password."
					"[event][id]" => "syncpass.pl:01"
					"[rsa][message][id1]" => "syncpass.pl:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1044
	# line in RSA: <agent>[<process_id>]: Read [<filename>]: file not exist. return undef
	else if [logstash][msgparser][id] == "msgParserId1044" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Read [%{filename}]: file not exist. return undef" }
			id => "msgParserId1044"
			add_field => {
				"event_description" => "file not exist. return undef"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "sshd.pl" {
		# MESSAGE sshd.pl
		# line in RSA: <agent>[<process_id>]: run command: <param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: run command: %{param}" }
				id => "message-sshd.pl"
				add_field => {
					"[event][id]" => "sshd.pl"
					"[rsa][message][id1]" => "sshd.pl"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE sshd.pl:01
		# line in RSA: <agent>[<process_id>]: ServiceAuthLocation does not meet requirement (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: ServiceAuthLocation does not meet requirement (%{info})" }
				id => "message-sshd.pl:01"
				add_field => {
				"event_description" => "ServiceAuthLocation does not meet requirement"
					"[event][id]" => "sshd.pl:01"
					"[rsa][message][id1]" => "sshd.pl:01"
					"[event][categoryid]" => "1605010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1047
	# line in RSA: <agent>[<process_id>]:<fld1>:<fld2>[<fld3>] <fld4> ***Warning: <info>
	else if [logstash][msgparser][id] == "msgParserId1047" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]:%{fld1}:%{fld2}[%{fld3}] %{fld4} ***Warning: %{info}" }
			id => "msgParserId1047"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1048
	# line in RSA: <agent>[<process_id>]: No sudoers registry setting. No need to update sudoers file.
	else if [logstash][msgparser][id] == "msgParserId1048" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: No sudoers registry setting. No need to update sudoers file." }
			id => "msgParserId1048"
			add_field => {
				"event_description" => "No sudoers registry setting. No need to update sudoers file."
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1049
	# line in RSA: <agent>[<process_id>]: Removing <filename>
	else if [logstash][msgparser][id] == "msgParserId1049" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: Removing %{filename}" }
			id => "msgParserId1049"
			add_field => {
				"event_description" => "Removing"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1050
	# line in RSA: <agent>: failed login attempt for <username> from <saddr>
	else if [logstash][msgparser][id] == "msgParserId1050" {
		dissect {
			mapping => { "message" => "%{agent}: failed login attempt for %{username} from %{saddr}" }
			id => "msgParserId1050"
			add_field => {
				"event_description" => "failed login attempt"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[resultcode]"
		destination => "[event_cat]"
		dictionary => {
			"11" => "1801030000"
			"7" => "1603110000"
			"5" => "1801010000"
			"6" => "1801010000"
			"10" => "1801030000"
			"2" => "1803020000"
			"8" => "1803020000"
		}
		fallback => "1803000000"
		override => true
	}
}
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1401070000" => "User.Activity.Logoff"
			"1603110000" => "System.Errors.Services"
			"1801010000" => "Network.Connections.Errors"
			"1801030000" => "Network.Connections.Terminations"
			"1803020000" => "Network.Denied Connections.Protocol"
		}
		fallback => "Network.Denied Connections"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_aixmsg.json"
#			template_name => "aix_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
