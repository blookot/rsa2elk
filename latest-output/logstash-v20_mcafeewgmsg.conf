# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "mcafeewg"
			"[observer][name]" => "McAfee Web Gateway"
			"[observer][type]" => "Web Logs"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %WEBGATEWAY-<hfld1>: <hfld22> <hfld26> <hfld27> [<hdatetime> <hfld6>] "<messageid> <hfld2> <hfld4>" <hresultcode> <hsbytes> "<hfld17>" "<hfld16>" <hevent_time_string> <hsaddr> "<hfld13>" <hhostname> <hfld14> <hdaddr> <hdport> <hweb_method> "<hurl>" <hnetwork_service> <hfld18> <hrbytes> "<huser_agent>" "<hweb_referer>"  <hfld15> "<hfld20>"  "<hfilter>" "<hcontent_type>" "<hvirusname>" <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+(?<hfld22>[^\s]*)[\s]+(?<hfld26>[^\s]*)[\s]+(?<hfld27>[^\s]*)[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld4>[^\"]*)\"[\s]+(?<hresultcode>[^\s]*)[\s]+(?<hsbytes>[^\s]*)[\s]+\"(?<hfld17>[^\"]*)\"[\s]+\"(?<hfld16>[^\"]*)\"[\s]+(?<hevent_time_string>[^\s]*)[\s]+(?<hsaddr>[^\s]*)[\s]+\"(?<hfld13>[^\"]*)\"[\s]+(?<hhostname>[^\s]*)[\s]+(?<hfld14>[^\s]*)[\s]+(?<hdaddr>[^\s]*)[\s]+(?<hdport>[^\s]*)[\s]+(?<hweb_method>[^\s]*)[\s]+\"(?<hurl>[^\"]*)\"[\s]+(?<hnetwork_service>[^\s]*)[\s]+(?<hfld18>[^\s]*)[\s]+(?<hrbytes>[^\s]*)[\s]+\"(?<huser_agent>[^\"]*)\"[\s]+\"(?<hweb_referer>[^\"]*)\"[\s]+(?<hfld15>[^\s]*)[\s]+\"(?<hfld20>[^\"]*)\"[\s]+\"(?<hfilter>[^\"]*)\"[\s]+\"(?<hcontent_type>[^\"]*)\"[\s]+\"(?<hvirusname>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %WEBGATEWAY-<hfld1>: <hfld22> <hfld15> <hfld20> [<hdatetime> <hfld6>] "<hfld4>" <hresultcode> <hsbytes> "<hfld17>" "<hfld25>"[<hevent_time_string>] <hsaddr> <hfld13>  <hhostname> <hdaddr>  <hdport> "<messageid>" "<hurl>" <hnetwork_service>   <hfld18> <hrbytes>  "<huser_agent>"  <hweb_referer> <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+(?<hfld22>[^\s]*)[\s]+(?<hfld15>[^\s]*)[\s]+(?<hfld20>[^\s]*)[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<hfld4>[^\"]*)\"[\s]+(?<hresultcode>[^\s]*)[\s]+(?<hsbytes>[^\s]*)[\s]+\"(?<hfld17>[^\"]*)\"[\s]+\"(?<hfld25>[^\"]*)\"\[(?<hevent_time_string>[^\]]*)\][\s]+(?<hsaddr>[^\s]*)[\s]+(?<hfld13>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+(?<hdaddr>[^\s]*)[\s]+(?<hdport>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+\"(?<hurl>[^\"]*)\"[\s]+(?<hnetwork_service>[^\s]*)[\s]+(?<hfld18>[^\s]*)[\s]+(?<hrbytes>[^\s]*)[\s]+\"(?<huser_agent>[^\"]*)\"[\s]+(?<hweb_referer>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] [<hnetwork_service>] <husername> <hfld20> <hsaddr> "<msgIdPart1> <msgIdPart2>" <!payload:hnetwork_service>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\[(?<message>(?<hnetwork_service>[^\]]*)\][\s]+(?<husername>[^\s]*)[\s]+(?<hfld20>[^\s]*)[\s]+(?<hsaddr>[^\s]*)[\s]+\"(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] [<hnetwork_service>] <husername> <hfld20> <hsaddr> "<messageid> <hfld2>" <!payload:hnetwork_service>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\[(?<message>(?<hnetwork_service>[^\]]*)\][\s]+(?<husername>[^\s]*)[\s]+(?<hfld20>[^\s]*)[\s]+(?<hsaddr>[^\s]*)[\s]+\"(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] [<hnetwork_service>] <username> <hfld7> <hdaddr> "<messageid>" "<fld20>"  "<fld21>" "<fld22>" <!payload:hnetwork_service>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\[(?<message>(?<hnetwork_service>[^\]]*)\][\s]+(?<username>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hdaddr>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+\"(?<fld20>[^\"]*)\"[\s]+\"(?<fld21>[^\"]*)\"[\s]+\"(?<fld22>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %WEBGATEWAY-<hfld1>: <hsaddr> <hfld15> <hfld16> [<hdatetime> <hfld6>] "<messageid>" <hfld2> <hresultcode> <hfld11> <hfld12> <hfld10> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+(?<hsaddr>[^\s]*)[\s]+(?<hfld15>[^\s]*)[\s]+(?<hfld16>[^\s]*)[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<messageid>[^\"]*)\"[\s]+(?<hfld2>[^\s]*)[\s]+(?<hresultcode>[^\s]*)[\s]+(?<hfld11>[^\s]*)[\s]+(?<hfld12>[^\s]*)[\s]+(?<hfld10>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] "<messageid>: <fld2>" "<fld3>" <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<messageid>[^:]*):[\s]+(?<fld2>[^\"]*)\"[\s]+\"(?<fld3>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] [<hnetwork_service>] <hfld7> [<hevent_time_string>] <hfld8> "<messageid>" <!payload:hfld8>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\[(?<hnetwork_service>[^\]]*)\][\s]+(?<hfld7>[^\s]*)[\s]+\[(?<hevent_time_string>[^\]]*)\][\s]+(?<message>(?<hfld8>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <msgIdPart1> <msgIdPart2>: <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <hsaddr> <hfld7> <hhostname> <hfld9> <hdaddr> <hdport> "<messageid>" "<hurl>" <!payload:hsaddr>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<hsaddr>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+(?<hfld9>[^\s]*)[\s]+(?<hdaddr>[^\s]*)[\s]+(?<hdport>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+\"(?<hurl>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0051
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <hsaddr> <hfld7> <hhostname> <hdaddr> <hdport> "<messageid>" "<hurl>" <!payload:hsaddr>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<hsaddr>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+(?<hdaddr>[^\s]*)[\s]+(?<hdport>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+\"(?<hurl>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0051"
			add_field => {
				"[rsa][header][id]" => "0051"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] "<messageid> <hfld2>" <hresultcode> <hfld11> <hfld12> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\"]*)\"[\s]+(?<hresultcode>[^\s]*)[\s]+(?<hfld11>[^\s]*)[\s]+(?<hfld12>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <msgIdPart1> <msgIdPart2> <msgIdPart3>: <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<msgIdPart3>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <messageid>:<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <messageid>.<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<messageid>[^\.]*)\.(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] "<hfld2>" <hfld3> <hfld4> "<messageid> <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<hfld2>[^\"]*)\"[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+\"(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] <hfld2> <hfld3> <messageid> <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+(?<message>(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: %WEBGATEWAY-<hfld1>: ##<hfld2> "<messageid>" <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+##(?<message>(?<hfld2>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: %WEBGATEWAY-<hfld1>: #<hfld2> "<messageid>" <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+#(?<message>(?<hfld2>[^\s]*)[\s]+\"(?<messageid>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld6>] "<hfld2>" "<hfld3>" "<messageid>: <hfld4>" "<hfld5>" <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld6>[^\]]*)\][\s]+\"(?<message>(?<hfld2>[^\"]*)\"[\s]+\"(?<hfld3>[^\"]*)\"[\s]+\"(?<messageid>[^:]*):[\s]+(?<hfld4>[^\"]*)\"[\s]+\"(?<hfld5>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: %WEBGATEWAY-<hfld1>: Timestamp  : <hdatetime> <hfld5>  <hfld2>       :<hfld3>  <hfld4>     : <messageid> <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+Timestamp[\s]+:[\s]+(?<hdatetime>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<message>(?<hfld2>[^\s]*)[\s]+:(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+:[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0023
	# line in RSA: %WEBGATEWAY-<hfld1>: Timestamp  : <hdatetime> <hfld7>  <hfld2>       :<hfld3>  <hfld4>     :<hfld5>  <hfld6>     :<messageid> <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+Timestamp[\s]+:[\s]+(?<hdatetime>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<message>(?<hfld2>[^\s]*)[\s]+:(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+:(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+:(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0023"
			add_field => {
				"[rsa][header][id]" => "0023"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0024
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4>  <messageid>: [<hdatetime> <hfld5>]  <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+(?<messageid>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld5>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0025
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> { <messageid>: CEF:0 | <messageid>[<process_id>]:| <messageid>:} <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+([\s]*(?<messageid>[^:]*):[\s]+CEF:0[\s]+|[\s]*(?<messageid>[^\[]*)\[(?<process_id>[^\]]*)\]:|[\s]*(?<messageid>[^:]*):)[\s]+(?<payload>.*))$" }
			id => "header-0025"
			add_field => {
				"[rsa][header][id]" => "0025"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0026
	# line in RSA: %WEBGATEWAY-<hfld1>: [<hdatetime> <hfld2>] <hfld3> <hfld4> <hfld5> <hfld6> <hfld7> <hfld8> <hfld9> <hfld10> <hfld11> "<messageid> <hfld12>"  <!payload:hfld3>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%WEBGATEWAY\-(?<hfld1>[^:]*):[\s]+\[(?<hdatetime>[^\s]*)[\s]+(?<hfld2>[^\]]*)\][\s]+(?<message>(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+(?<hfld9>[^\s]*)[\s]+(?<hfld10>[^\s]*)[\s]+(?<hfld11>[^\s]*)[\s]+\"(?<messageid>[^\s]*)[\s]+(?<hfld12>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0026"
			add_field => {
				"[rsa][header][id]" => "0026"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_mcafeewgmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: User       : <username> Action     : <action> Source Type: <event_type> Source ID  :<saddr>  Appliance  :<hostname>  Details:     User-Agent:<user_agent>     Role    : <fld1>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action} Source Type: %{event_type} Source ID  :%{saddr}  Appliance  :%{hostname}  Details:     User-Agent:%{user_agent}     Role    : %{fld1}" }
			id => "msgParserId0"
			add_field => {
				"action" => "USER_LOGIN"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: User       : <username> Action     : <action> Source Type: <event_type> Source ID  :<saddr>  Appliance  :<hostname>       <fld2>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action} Source Type: %{event_type} Source ID  :%{saddr}  Appliance  :%{hostname}       %{fld2}" }
			id => "msgParserId1"
			add_field => {
				"action" => "USER_LOGOUT"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: User       : <username> Action     : <action> Source Type: <event_type> Source ID  :<saddr>  Appliance  :<hostname>  Details:     User-Agent:<user_agent>     Details : <info>      <fld1>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action} Source Type: %{event_type} Source ID  :%{saddr}  Appliance  :%{hostname}  Details:     User-Agent:%{user_agent}     Details : %{info}      %{fld1}" }
			id => "msgParserId2"
			add_field => {
				"action" => "USER_LOGIN_FAILED"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: User       : <username> Action     : <action>  Source Name: <fld1>  Source Type: <event_type>  Source ID  : <fld3>  Source Path: <fld4>  Appliance  : <hostname>  Details:     Settings:        DataUsageStatementVersionAccepted: <fld5>  DataUsageStatementVersionSaved   : <fld6>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action}  Source Name: %{fld1}  Source Type: %{event_type}  Source ID  : %{fld3}  Source Path: %{fld4}  Appliance  : %{hostname}  Details:     Settings:        DataUsageStatementVersionAccepted: %{fld5}  DataUsageStatementVersionSaved   : %{fld6}" }
			id => "msgParserId3"
			add_field => {
				"action" => "MODIFIED_CLUSTER_CONFIGURATION"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: User       : <username> Action     : <action>  Source Name: <fld1>  Source Type: <event_type>  Source ID  : <fld3>  Source Path: <fld4>  Appliance  : <hostname>  Details:     Settings:        GlobalDestinationUrl: <url>      <fld6>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action}  Source Name: %{fld1}  Source Type: %{event_type}  Source ID  : %{fld3}  Source Path: %{fld4}  Appliance  : %{hostname}  Details:     Settings:        GlobalDestinationUrl: %{url}      %{fld6}" }
			id => "msgParserId4"
			add_field => {
				"action" => "MODIFIED_APPLIANCE_SETTINGS"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: User       : <username> Action     : <action>  Source Name: <fld1>  Source Type: <event_type>  Source ID  : <fld3>  Source Path: <fld4>  Appliance  : <hostname>  Details:     Settings:        AutoPush              : <fld6>        DestinationUrl        : <url>        Username              : <fld7>        Password              : <fld8>        OverrideGlobalSettings: <fld9>      <fld10>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action}  Source Name: %{fld1}  Source Type: %{event_type}  Source ID  : %{fld3}  Source Path: %{fld4}  Appliance  : %{hostname}  Details:     Settings:        AutoPush              : %{fld6}        DestinationUrl        : %{url}        Username              : %{fld7}        Password              : %{fld8}        OverrideGlobalSettings: %{fld9}      %{fld10}" }
			id => "msgParserId5"
			add_field => {
				"action" => "MODIFIED_SETTINGS"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: User       : <username>  Type       : <fld1> Action     : <action>  Source Type: <event_type>  Source ID  : <saddr>  Appliance  : <hostname>       <fld2>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "User       : %{username}  Type       : %{fld1} Action     : %{action}  Source Type: %{event_type}  Source ID  : %{saddr}  Appliance  : %{hostname}       %{fld2}" }
			id => "msgParserId6"
			add_field => {
				"action" => "SYSTEM_LIST_UPDATE"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: User       : <username> Action     : <action>  Source Name: <fld1>  Source Type: <event_type>  Appliance  :<hostname>  Details:  <info>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action}  Source Name: %{fld1}  Source Type: %{event_type}  Appliance  :%{hostname}  Details:  %{info}" }
			id => "msgParserId7"
			add_field => {
				"action" => "ACTIVATE_LICENSE_FILE"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA: User       : <username> Action     : <action> Source Type: <event_type>  Appliance  : <hostname>  Details:     action  : <fld2>      <fld3>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action} Source Type: %{event_type}  Appliance  : %{hostname}  Details:     action  : %{fld2}      %{fld3}" }
			id => "msgParserId8"
			add_field => {
				"action" => "TRIGGER_ACTION"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: User       : <username> Action     : <action> Source Type: <event_type> Source ID  :<fld2>  Appliance  :<hostname>       <fld3>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "User       : %{username} Action     : %{action} Source Type: %{event_type} Source ID  :%{fld2}  Appliance  :%{hostname}       %{fld3}" }
			id => "msgParserId9"
			add_field => {
				"action" => "SYSTEM_FILES"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA: <messageid>: <virusname>" "<url>" "<content_type>" <resultcode>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{messageid}: %{virusname}\" \"%{url}\" \"%{content_type}\" %{resultcode}" }
			id => "msgParserId10"
			add_field => {
				"action" => "Virus Detected"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId11
	# line in RSA: <resultcode> "<saddr>" "<messageid>: <virusname>" "<url>"
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{resultcode} \"%{saddr}\" \"%{messageid}: %{virusname}\" \"%{url}\"" }
			id => "msgParserId11"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId12
	# line in RSA: <resultcode>" "<saddr>" "<messageid>: <virusname>" "<url>"
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{resultcode}\" \"%{saddr}\" \"%{messageid}: %{virusname}\" \"%{url}\"" }
			id => "msgParserId12"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: <network_service>] <username> <fld9> <saddr> "login" "<policyname>" <fld1> "<fld2>" "<fld3>" <webpage> 
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{network_service}] %{username} %{fld9} %{saddr} \"login\" \"%{policyname}\" %{fld1} \"%{fld2}\" \"%{fld3}\" %{webpage}" }
			id => "msgParserId13"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"action" => "login"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: <network_service>] <username> <fld9> <saddr> "login failed" "<policyname>" <fld1> "<fld2>" "<fld3>" <webpage>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{network_service}] %{username} %{fld9} %{saddr} \"login failed\" \"%{policyname}\" %{fld1} \"%{fld2}\" \"%{fld3}\" %{webpage}" }
			id => "msgParserId14"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "login failed"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: <network_service>] <username> <fld9> <saddr> "<action> (<event_description>)" "<policyname>" <fld1> "<fld2>" "<fld3>" <webpage>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{network_service}] %{username} %{fld9} %{saddr} \"%{action} (%{event_description})\" \"%{policyname}\" %{fld1} \"%{fld2}\" \"%{fld3}\" %{webpage}" }
			id => "msgParserId15"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: <network_service>] <username> <fld9> <saddr> "<action>" "<policyname>" <fld1> "<fld2>" "<fld3>" <webpage>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{network_service}] %{username} %{fld9} %{saddr} \"%{action}\" \"%{policyname}\" %{fld1} \"%{fld2}\" \"%{fld3}\" %{webpage}" }
			id => "msgParserId16"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "POLL" {
		# MESSAGE POLL:01
		# line in RSA: <saddr> <username> <fld1> <fld20> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>"{ "<filter>" 0 | "<filter>" - | 0 | - }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<fld20>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"([\s]*\"(?<filter>[^\"]*)\"[\s]+0[\s]+|[\s]*\"(?<filter>[^\"]*)\"[\s]+\-[\s]+|[\s]*0[\s]+|[\s]*\-[\s]+)$" }
				id => "message-POLL:01"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "POLL:01"
					"[rsa][message][id1]" => "POLL:01"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE POLL
		# line in RSA: <username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<fld3>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{fld3}\"" }
				id => "message-POLL"
				add_field => {
					"[event][id]" => "POLL"
					"[rsa][message][id1]" => "POLL"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "GET" {
		# MESSAGE GET:05
		# line in RSA: <username>" <saddr> <hostip> <fld1> <resultcode> <fld2> "<web_method> <url> <version>" "<category>" "<fld3>" "<fld4>" <sbytes> <rbytes> "<user_agent>" "<web_referer>" "<virusname>" "<result>" "<fld5>" "<fld6>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{hostip} %{fld1} %{resultcode} %{fld2} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld3}\" \"%{fld4}\" %{sbytes} %{rbytes} \"%{user_agent}\" \"%{web_referer}\" \"%{virusname}\" \"%{result}\" \"%{fld5}\" \"%{fld6}\"" }
				id => "message-GET:05"
				add_field => {
					"[event][id]" => "GET:05"
					"[rsa][message][id1]" => "GET:05"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE GET
		# line in RSA: <fld12>" <resultcode> <sbytes> "<fld17>" "<fld16>" [<event_time_string>] <saddr> "<fld13>" <fld1> <fld14> <daddr> <dport> <web_method> "<url>" <network_service> <fld18> <rbytes> "<user_agent>" "<web_referer>"  <fld15> "<fld26>"  "<filter>" "<content_type>" "<virusname>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld12}\" %{resultcode} %{sbytes} \"%{fld17}\" \"%{fld16}\" [%{event_time_string}] %{saddr} \"%{fld13}\" %{fld1} %{fld14} %{daddr} %{dport} %{web_method} \"%{url}\" %{network_service} %{fld18} %{rbytes} \"%{user_agent}\" \"%{web_referer}\"  %{fld15} \"%{fld26}\"  \"%{filter}\" \"%{content_type}\" \"%{virusname}\"" }
				id => "message-GET"
				add_field => {
					"[event][id]" => "GET"
					"[rsa][message][id1]" => "GET"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE GET:06
		# line in RSA: "<hostname>"  "<username>" <saddr> <daddr> "<fld1>" <resultcode> "<fld2>" <rbytes> <sbytes> "<web_method> <url> <version>" "<fld3>" "<fld4>" <fld12> "<fld5>/<rulename>" <fld6> "<result>" <fld7> "<virusname>" <fld9> "<fld10>" "<application>" "<web_referer>" "<user_agent>"  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{hostname}\"  \"%{username}\" %{saddr} %{daddr} \"%{fld1}\" %{resultcode} \"%{fld2}\" %{rbytes} %{sbytes} \"%{web_method} %{url} %{version}\" \"%{fld3}\" \"%{fld4}\" %{fld12} \"%{fld5}/%{rulename}\" %{fld6} \"%{result}\" %{fld7} \"%{virusname}\" %{fld9} \"%{fld10}\" \"%{application}\" \"%{web_referer}\" \"%{user_agent}\"" }
				id => "message-GET:06"
				add_field => {
					"[event][id]" => "GET:06"
					"[rsa][message][id1]" => "GET:06"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE GET:01
		# line in RSA: <saddr> <username> <hostname> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>"{ "<filter>" 0 | "<filter>" - | 0 | -}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"([\s]*\"(?<filter>[^\"]*)\"[\s]+0[\s]+|[\s]*\"(?<filter>[^\"]*)\"[\s]+\-[\s]+|[\s]*0[\s]+|[\s]*\-)$" }
				id => "message-GET:01"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "GET:01"
					"[rsa][message][id1]" => "GET:01"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE GET:04
		# line in RSA: <username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<result>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{result}\"" }
				id => "message-GET:04"
				add_field => {
					"[event][id]" => "GET:04"
					"[rsa][message][id1]" => "GET:04"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE GET:02
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>" { "<filter>" <fld17> | <fld17> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"[\s]+([\s]*\"(?<filter>[^\"]*)\"[\s]+(?<fld17>[^\s]*)[\s]+|[\s]*(?<fld17>[^\s]*)[\s]+)$" }
				id => "message-GET:02"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "GET:02"
					"[rsa][message][id1]" => "GET:02"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE GET:03
		# line in RSA: <web_method> <webpage> <filter>" <resultcode> <content_type> <fld8> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{web_method} %{webpage} %{filter}\" %{resultcode} %{content_type} %{fld8} %{fld9}" }
				id => "message-GET:03"
				add_field => {
					"[event][id]" => "GET:03"
					"[rsa][message][id1]" => "GET:03"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "HEAD" {
		# MESSAGE HEAD:01
		# line in RSA: <saddr> <username> <fld1> <fld20> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>"{ "<filter>" 0 | "<filter>" - | 0 | -}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<fld20>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"([\s]*\"(?<filter>[^\"]*)\"[\s]+0[\s]+|[\s]*\"(?<filter>[^\"]*)\"[\s]+\-[\s]+|[\s]*0[\s]+|[\s]*\-)$" }
				id => "message-HEAD:01"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "HEAD:01"
					"[rsa][message][id1]" => "HEAD:01"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE HEAD:04
		# line in RSA: <username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<result>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{result}\"" }
				id => "message-HEAD:04"
				add_field => {
					"[event][id]" => "HEAD:04"
					"[rsa][message][id1]" => "HEAD:04"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE HEAD:02
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>" { "<filter>" <fld10> | <fld10> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"[\s]+([\s]*\"(?<filter>[^\"]*)\"[\s]+(?<fld10>[^\s]*)[\s]+|[\s]*(?<fld10>[^\s]*)[\s]+)$" }
				id => "message-HEAD:02"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "HEAD:02"
					"[rsa][message][id1]" => "HEAD:02"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA:  <username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<fld3>"
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{fld3}\"" }
			id => "msgParserId28"
			add_field => {
				"web_method" => "%{web_method}"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId29
	# line in RSA: <saddr> <fld1> <hostname> <fld20> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>"{ "<filter>" 0 | "<filter>" - | 0 | -}
	else if [logstash][msgparser][id] == "msgParserId29" {
		grok {
			match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<fld20>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"([\s]*\"(?<filter>[^\"]*)\"[\s]+0[\s]+|[\s]*\"(?<filter>[^\"]*)\"[\s]+\-[\s]+|[\s]*0[\s]+|[\s]*\-)$" }
			id => "msgParserId29"
			add_field => {
				"web_method" => "%{web_method}"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "CONNECT" {
		# MESSAGE CONNECT:04
		# line in RSA: <username>" <saddr> <hostip> <fld1> <resultcode> <fld2> "<web_method> <url> <version>" "<category>" "<fld3>" "<fld4>" <sbytes> <rbytes> "<user_agent>" "<web_referer>" "<virusname>" "<result>" "<fld5>" "<fld6>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{hostip} %{fld1} %{resultcode} %{fld2} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld3}\" \"%{fld4}\" %{sbytes} %{rbytes} \"%{user_agent}\" \"%{web_referer}\" \"%{virusname}\" \"%{result}\" \"%{fld5}\" \"%{fld6}\"" }
				id => "message-CONNECT:04"
				add_field => {
					"[event][id]" => "CONNECT:04"
					"[rsa][message][id1]" => "CONNECT:04"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE CONNECT
		# line in RSA: <fld12>" <resultcode> <sbytes> "<fld17>" "<fld16>" [<event_time_string>] <saddr> "<fld13>" <fld1> <fld14> <daddr> <dport> <web_method> "<url>" <network_service> <fld18> <rbytes> "<user_agent>" "<web_referer>"  <fld15> "<fld26>"  "<filter>" "<content_type>" "<virusname>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld12}\" %{resultcode} %{sbytes} \"%{fld17}\" \"%{fld16}\" [%{event_time_string}] %{saddr} \"%{fld13}\" %{fld1} %{fld14} %{daddr} %{dport} %{web_method} \"%{url}\" %{network_service} %{fld18} %{rbytes} \"%{user_agent}\" \"%{web_referer}\"  %{fld15} \"%{fld26}\"  \"%{filter}\" \"%{content_type}\" \"%{virusname}\"" }
				id => "message-CONNECT"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "CONNECT"
					"[rsa][message][id1]" => "CONNECT"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE CONNECT:03
		# line in RSA: <username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<result>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{result}\"" }
				id => "message-CONNECT:03"
				add_field => {
					"[event][id]" => "CONNECT:03"
					"[rsa][message][id1]" => "CONNECT:03"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE CONNECT:01
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>" { "<filter>" 0 | "<filter>" - | 0 | - }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"[\s]+([\s]*\"(?<filter>[^\"]*)\"[\s]+0[\s]+|[\s]*\"(?<filter>[^\"]*)\"[\s]+\-[\s]+|[\s]*0[\s]+|[\s]*\-[\s]+)$" }
				id => "message-CONNECT:01"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "CONNECT:01"
					"[rsa][message][id1]" => "CONNECT:01"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE CONNECT:02
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>" { "<filter>" <fld10> | <fld10> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"[\s]+([\s]*\"(?<filter>[^\"]*)\"[\s]+(?<fld10>[^\s]*)[\s]+|[\s]*(?<fld10>[^\s]*)[\s]+)$" }
				id => "message-CONNECT:02"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "CONNECT:02"
					"[rsa][message][id1]" => "CONNECT:02"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "POST" {
		# MESSAGE POST
		# line in RSA: <username>" <saddr> <hostip> <fld1> <resultcode> <fld2> "<web_method> <url> <version>" "<category>" "<fld3>" "<fld4>" <sbytes> <rbytes> "<user_agent>" "<web_referer>" "<virusname>" "<result>" "<fld5>" "<fld6>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}\" %{saddr} %{hostip} %{fld1} %{resultcode} %{fld2} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld3}\" \"%{fld4}\" %{sbytes} %{rbytes} \"%{user_agent}\" \"%{web_referer}\" \"%{virusname}\" \"%{result}\" \"%{fld5}\" \"%{fld6}\"" }
				id => "message-POST"
				add_field => {
					"[event][id]" => "POST"
					"[rsa][message][id1]" => "POST"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE POST:01
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>"{ "<filter>" 0 | "<filter>" - | 0 | -}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"([\s]*\"(?<filter>[^\"]*)\"[\s]+0[\s]+|[\s]*\"(?<filter>[^\"]*)\"[\s]+\-[\s]+|[\s]*0[\s]+|[\s]*\-)$" }
				id => "message-POST:01"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "POST:01"
					"[rsa][message][id1]" => "POST:01"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE POST:04
		# line in RSA: <c_username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<result>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{c_username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{result}\"" }
				id => "message-POST:04"
				add_field => {
					"[event][id]" => "POST:04"
					"[rsa][message][id1]" => "POST:04"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE POST:02
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<url>" <operation_id> <network_service> <sbytes> <rbytes> <user_agent> "<web_referer>" { "<filter>" <fresult> | <fresult> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<operation_id>[^\s]*)[\s]+(?<network_service>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"[\s]+([\s]*\"(?<filter>[^\"]*)\"[\s]+(?<fresult>[^\s]*)[\s]+|[\s]*(?<fresult>[^\s]*)[\s]+)$" }
				id => "message-POST:02"
				add_field => {
				"web_method" => "%{web_method}"
					"[event][id]" => "POST:02"
					"[rsa][message][id1]" => "POST:02"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE POST:03
		# line in RSA: <web_method> <url> <version>" <resultcode> <content_type> <fld8> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{web_method} %{url} %{version}\" %{resultcode} %{content_type} %{fld8} %{fld9}" }
				id => "message-POST:03"
				add_field => {
					"[event][id]" => "POST:03"
					"[rsa][message][id1]" => "POST:03"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "UNKNOWN" {
		# MESSAGE UNKNOWN
		# line in RSA: <fld4>" <resultcode> <sbytes> "<fld17>" "<fld25>"[<event_time_string>] <saddr> <fld13> <fld1> <fld14> <daddr> <dport> "<web_method>" "<url>" <network_service>   <fld18> <rbytes>  "<user_agent>"  <web_referer> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4}\" %{resultcode} %{sbytes} \"%{fld17}\" \"%{fld25}\"[%{event_time_string}] %{saddr} %{fld13} %{fld1} %{fld14} %{daddr} %{dport} \"%{web_method}\" \"%{url}\" %{network_service}   %{fld18} %{rbytes}  \"%{user_agent}\"  %{web_referer}" }
				id => "message-UNKNOWN"
				add_field => {
					"[event][id]" => "UNKNOWN"
					"[rsa][message][id1]" => "UNKNOWN"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE UNKNOWN:01
		# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<fld13>" <fld20> <sbytes> <rbytes> "<fld21>" <fld22>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{saddr} %{username} %{fld1} %{resultcode} %{daddr} %{dport} \"%{web_method}\" \"%{fld13}\" %{fld20} %{sbytes} %{rbytes} \"%{fld21}\" %{fld22}" }
				id => "message-UNKNOWN:01"
				add_field => {
					"[event][id]" => "UNKNOWN:01"
					"[rsa][message][id1]" => "UNKNOWN:01"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <saddr> <username> <fld1> <resultcode> <daddr> <dport> "<web_method>" "<fld13>" <fld20> <sbytes> <rbytes> "<fld21>" <fld22>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{saddr} %{username} %{fld1} %{resultcode} %{daddr} %{dport} \"%{web_method}\" \"%{fld13}\" %{fld20} %{sbytes} %{rbytes} \"%{fld21}\" %{fld22}" }
			id => "msgParserId39"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId40
	# line in RSA: Mobile Code Filter:<event_description>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "Mobile Code Filter:%{event_description}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId41
	# line in RSA: Secure Web Cache: <event_description>
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "Secure Web Cache: %{event_description}" }
			id => "msgParserId41"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId42
	# line in RSA: Secure Anti-Malware Engine: <event_description>
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "Secure Anti-Malware Engine: %{event_description}" }
			id => "msgParserId42"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId43
	# line in RSA: extension list: <event_description>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "extension list: %{event_description}" }
			id => "msgParserId43"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId44
	# line in RSA: Information: <event_description>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "Information: %{event_description}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId45
	# line in RSA: McAfee: <event_description>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "McAfee: %{event_description}" }
			id => "msgParserId45"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId46
	# line in RSA: CSSLIncidentsDataIO::<event_description>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "CSSLIncidentsDataIO::%{event_description}" }
			id => "msgParserId46"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId47
	# line in RSA: Structure <event_description>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "Structure %{event_description}" }
			id => "msgParserId47"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId48
	# line in RSA: Starting Version <event_description>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "Starting Version %{event_description}" }
			id => "msgParserId48"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId49
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId49"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId50
	# line in RSA: child process exited <event_description>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "child process exited %{event_description}" }
			id => "msgParserId50"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId51
	# line in RSA: <fld10> '<virusname>'" <resultcode> <content_type> <fld8> <fld9>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{fld10} '%{virusname}'\" %{resultcode} %{content_type} %{fld8} %{fld9}" }
			id => "msgParserId51"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA: <fld10> <filter>" <resultcode> <content_type> <fld8> <fld9>
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "%{fld10} %{filter}\" %{resultcode} %{content_type} %{fld8} %{fld9}" }
			id => "msgParserId52"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId53
	# line in RSA: <fld10> <url> <filter>" <resultcode> <content_type> <fld8> <fld9>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{fld10} %{url} %{filter}\" %{resultcode} %{content_type} %{fld8} %{fld9}" }
			id => "msgParserId53"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA: <fld10>" <resultcode> <rbytes> "<fld8>" "<fld9>" <fld11>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{fld10}\" %{resultcode} %{rbytes} \"%{fld8}\" \"%{fld9}\" %{fld11}" }
			id => "msgParserId54"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: Memory <event_description>
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "Memory %{event_description}" }
			id => "msgParserId55"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId56
	# line in RSA: Can <event_description>
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "Can %{event_description}" }
			id => "msgParserId56"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId57
	# line in RSA: Cannot <event_description>
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "Cannot %{event_description}" }
			id => "msgParserId57"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	# PARSER msgParserId58
	# line in RSA: <fld1>
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "%{fld1}" }
			id => "msgParserId58"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA:  <username> <saddr> <resultcode> "<url>" "<category>" "<fld1>" "<fld2>" <rbytes> "<user_agent>" "<virusname>" "<fld3>"
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{username} %{saddr} %{resultcode} \"%{url}\" \"%{category}\" \"%{fld1}\" \"%{fld2}\" %{rbytes} \"%{user_agent}\" \"%{virusname}\" \"%{fld3}\"" }
			id => "msgParserId59"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "mwg" {
		# MESSAGE mwg:01
		# line in RSA:  <hostname> mwg: [<fld22> <fld3>] "<fld4>" "<fld5>" <saddr> <daddr> "<fld6>" <resultcode> "<fld7>" <fld8> <fld9> "<web_method> <url> <version>" "<fld10>" "<fld11>" <fld12> "<policyname>" <fld13> "<fld14>" <fld15> "<fld16>" <fld17> "<fld18>" "<fld19>" "<fld20>" "<fld21>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: [%{fld22} %{fld3}] \"%{fld4}\" \"%{fld5}\" %{saddr} %{daddr} \"%{fld6}\" %{resultcode} \"%{fld7}\" %{fld8} %{fld9} \"%{web_method} %{url} %{version}\" \"%{fld10}\" \"%{fld11}\" %{fld12} \"%{policyname}\" %{fld13} \"%{fld14}\" %{fld15} \"%{fld16}\" %{fld17} \"%{fld18}\" \"%{fld19}\" \"%{fld20}\" \"%{fld21}\"" }
				id => "message-mwg:01"
				add_field => {
					"[event][id]" => "mwg:01"
					"[rsa][message][id1]" => "mwg:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:02
		# line in RSA:  <hostname> mwg: [<fld22> <fld3>] "<fld4>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld5>" "<fld6>" <rbytes> <user_agent> "<fld7>" "<fld8>" "<fld9>" "<fld10>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: [%{fld22} %{fld3}] \"%{fld4}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld5}\" \"%{fld6}\" %{rbytes} %{user_agent} \"%{fld7}\" \"%{fld8}\" \"%{fld9}\" \"%{fld10}\"" }
				id => "message-mwg:02"
				add_field => {
					"[event][id]" => "mwg:02"
					"[rsa][message][id1]" => "mwg:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:06
		# line in RSA:  <hostname> mwg: [<fld22> <fld3>] "<username>" <saddr> <resultcode> "<web_method> <url> <version>" "<category>" "<fld5>" "<fld6>" <rbytes> <sbytes> "<user_agent>" "<fld7>" "<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: [%{fld22} %{fld3}] \"%{username}\" %{saddr} %{resultcode} \"%{web_method} %{url} %{version}\" \"%{category}\" \"%{fld5}\" \"%{fld6}\" %{rbytes} %{sbytes} \"%{user_agent}\" \"%{fld7}\" \"%{fld8}\"" }
				id => "message-mwg:06"
				add_field => {
					"[event][id]" => "mwg:06"
					"[rsa][message][id1]" => "mwg:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:03
		# line in RSA: <hostname> mwg: [<fld22> <fld3>] "<c_username>" "<saddr>" {"McAfeeGW:<virusname>" | "<virusname>"} "<url>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+mwg:[\s]+\[(?<fld22>[^\s]*)[\s]+(?<fld3>[^\]]*)\][\s]+\"(?<c_username>[^\"]*)\"[\s]+\"(?<saddr>[^\"]*)\"[\s]+(\"McAfeeGW:(?<virusname>[^\"]*)\"[\s]+|[\s]*\"(?<virusname>[^\"]*)\")[\s]+\"(?<url>[^\"]*)\"$" }
				id => "message-mwg:03"
				add_field => {
					"[event][id]" => "mwg:03"
					"[rsa][message][id1]" => "mwg:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:04
		# line in RSA:  <hostname> mwg: CEF:0|McAfee|<product>|<version>|<event_type>|<event_description>|<severity>|rt=<fld3> cat=<category> dst=<daddr> dhost=<dhost> suser=<username> src=<saddr> requestMethod=<web_method> request=<url> app=<protocol> cs3=<fld4> cs3Label=Protocol/Version cs4=<info> cs4Label=URL Categories cs6=<risk> cs6Label=Reputation fileType=<filetype> out=<sbytes> requestClientApplication=<user_agent>{ cs1=<virusname> cs1Label=Virus Name cn1=<result> cn1Label=Block Reason|cs1=<virusname> cs1Label=Virus Name resultcode=<resultcode>} {cn1Label=Block Reason cs5=<policyname> cs5Label=Policy referer=<fld2> bytes.dst=<rbytes> alias.host=<hostname>|cs5=<policyname> cs5Label=Policy}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+mwg:[\s]+CEF:0\|McAfee\|(?<product>[^\|]*)\|(?<version>[^\|]*)\|(?<event_type>[^\|]*)\|(?<event_description>[^\|]*)\|(?<severity>[^\|]*)\|rt=(?<fld3>[^\s]*)[\s]+cat=(?<category>[^\s]*)[\s]+dst=(?<daddr>[^\s]*)[\s]+dhost=(?<dhost>[^\s]*)[\s]+suser=(?<username>[^\s]*)[\s]+src=(?<saddr>[^\s]*)[\s]+requestMethod=(?<web_method>[^\s]*)[\s]+request=(?<url>[^\s]*)[\s]+app=(?<protocol>[^\s]*)[\s]+cs3=(?<fld4>[^\s]*)[\s]+cs3Label=Protocol/Version[\s]+cs4=(?<info>[^\s]*)[\s]+cs4Label=URL[\s]+Categories[\s]+cs6=(?<risk>[^\s]*)[\s]+cs6Label=Reputation[\s]+fileType=(?<filetype>[^\s]*)[\s]+out=(?<sbytes>[^\s]*)[\s]+requestClientApplication=(?<user_agent>[^\sc]*)([\s]*cs1=(?<virusname>[^\s]*)[\s]+cs1Label=Virus[\s]+Name[\s]+cn1=(?<result>[^\s]*)[\s]+cn1Label=Block[\s]+Reason|cs1=(?<virusname>[^\s]*)[\s]+cs1Label=Virus[\s]+Name[\s]+resultcode=(?<resultcode>[^\s]*))[\s]+(cn1Label=Block[\s]+Reason[\s]+cs5=(?<policyname>[^\s]*)[\s]+cs5Label=Policy[\s]+referer=(?<fld2>[^\s]*)[\s]+bytes\.dst=(?<rbytes>[^\s]*)[\s]+alias\.host=(?<hostname>.*)|cs5=(?<policyname>[^\s]*)[\s]+cs5Label=Policy)$" }
				id => "message-mwg:04"
				add_field => {
				"application" => "%{protocol}"
					"[event][id]" => "mwg:04"
					"[rsa][message][id1]" => "mwg:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:m:s" ] }
			}
		}
		# MESSAGE mwg:05
		# line in RSA:  <hostname> mwg: [<fld22> <fld3>] <saddr> <web_method> <url><space>- <daddr> <dport> "<web_method>" "<webpage>" - <protocol> <sbytes> <rbytes> "<user_agent>" "<fld9>" <fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: [%{fld22} %{fld3}] %{saddr} %{web_method} %{url}%{space}- %{daddr} %{dport} \"%{web_method}\" \"%{webpage}\" - %{protocol} %{sbytes} %{rbytes} \"%{user_agent}\" \"%{fld9}\" %{fld10}" }
				id => "message-mwg:05"
				add_field => {
					"[event][id]" => "mwg:05"
					"[rsa][message][id1]" => "mwg:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:07
		# line in RSA: <hostname> mwg: [<fld22> <fld3>] <dn>,DC=<fld1> <saddr> { McAfeeGW:<virusname>| <virusname>} <url>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+mwg:[\s]+\[(?<fld22>[^\s]*)[\s]+(?<fld3>[^\]]*)\][\s]+(?<dn>[^,]*),DC=(?<fld1>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+([\s]*McAfeeGW:(?<virusname>[^\s]*)|[\s]*(?<virusname>[^\s]*))[\s]+(?<url>.*)$" }
				id => "message-mwg:07"
				add_field => {
					"[event][id]" => "mwg:07"
					"[rsa][message][id1]" => "mwg:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:08
		# line in RSA: <hostname> mwg: User "<username>" saved changes: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: User \"%{username}\" saved changes: %{result}" }
				id => "message-mwg:08"
				add_field => {
					"[event][id]" => "mwg:08"
					"[rsa][message][id1]" => "mwg:08"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mwg:09
		# line in RSA: <hostname> mwg: Logout successful for user "<username>" (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: Logout successful for user \"%{username}\" (%{saddr})" }
				id => "message-mwg:09"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"action" => "logoff"
					"[event][id]" => "mwg:09"
					"[rsa][message][id1]" => "mwg:09"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mwg:10
		# line in RSA: <hostname> mwg: Login successful for user "<username>" (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} mwg: Login successful for user \"%{username}\" (%{saddr})" }
				id => "message-mwg:10"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"action" => "login"
					"[event][id]" => "mwg:10"
					"[rsa][message][id1]" => "mwg:10"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mwg:11
		# line in RSA: <hostname> mwg: [<fld22> <fld3>] <saddr> <username> <fld1> <fld2> <daddr> <dport> "<web_method>" "<url>" <resultcode> <protocol> <sbytes> <rbytes> "<user_agent>" "<web_referer>" { "<filter>" "<fld10>" | "<fld10>" }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+mwg:[\s]+\[(?<fld22>[^\s]*)[\s]+(?<fld3>[^\]]*)\][\s]+(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<resultcode>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+\"(?<user_agent>[^\"]*)\"[\s]+\"(?<web_referer>[^\"]*)\"[\s]+([\s]*\"(?<filter>[^\"]*)\"[\s]+\"(?<fld10>[^\"]*)\"[\s]+|[\s]*\"(?<fld10>[^\"]*)\"[\s]+)$" }
				id => "message-mwg:11"
				add_field => {
					"[event][id]" => "mwg:11"
					"[rsa][message][id1]" => "mwg:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
		# MESSAGE mwg:12
		# line in RSA: <hostname> mwg: [<fld22> <fld3>] <saddr> <username> <fld1> <fld2> <daddr> <dport> "<web_method>" "<url>" <resultcode> <protocol> <sbytes> <rbytes> <user_agent> "<web_referer>" {"<filter>" <fld10> | <fld10> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+mwg:[\s]+\[(?<fld22>[^\s]*)[\s]+(?<fld3>[^\]]*)\][\s]+(?<saddr>[^\s]*)[\s]+(?<username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<daddr>[^\s]*)[\s]+(?<dport>[^\s]*)[\s]+\"(?<web_method>[^\"]*)\"[\s]+\"(?<url>[^\"]*)\"[\s]+(?<resultcode>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+(?<sbytes>[^\s]*)[\s]+(?<rbytes>[^\s]*)[\s]+(?<user_agent>[^\s]*)[\s]+\"(?<web_referer>[^\"]*)\"[\s]+(\"(?<filter>[^\"]*)\"[\s]+(?<fld10>[^\s]*)[\s]+|[\s]*(?<fld10>[^\s]*)[\s]+)$" }
				id => "message-mwg:12"
				add_field => {
					"[event][id]" => "mwg:12"
					"[rsa][message][id1]" => "mwg:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA:  <hostname> ntpd[<process_id>]: { synchronized to <saddr>, <info> | <info> } 
	else if [logstash][msgparser][id] == "msgParserId72" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+ntpd\[(?<process_id>[^\]]*)\]:[\s]+([\s]*synchronized[\s]+to[\s]+(?<saddr>[^,]*),[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId72"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA:  <hostname> init: {<terminal> main process (<process_id>) <result> <info> | <terminal> main process <result>, <info> } 
	else if [logstash][msgparser][id] == "msgParserId73" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+init:[\s]+((?<terminal>[^\s]*)[\s]+main[\s]+process[\s]+\((?<process_id>[^\)]*)\)[\s]+(?<result>[^\s]*)[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<terminal>[^\s]*)[\s]+main[\s]+process[\s]+(?<result>[^,]*),[\s]+(?<info>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId73"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_mcafeewgmsg.json"
#			template_name => "mcafeewg_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
