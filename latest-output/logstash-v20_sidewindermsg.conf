# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "sidewinder"
			"[observer][name]" => "McAfee Firewall Enterprise"
			"[observer][type]" => "Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0002
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> auditd: date="<hdatetime>",fac=<hfacility>,area=<harea>,type=<messageid>,pri=<hpriority>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3} %{hfld4} auditd: date=\"%{hdatetime}\",fac=%{hfacility},area=%{harea},type=%{messageid},pri=%{hpriority},%{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <datetime> auditd: date="<hdatetime>",fac=<hfacility>,area=<harea>,type=<messageid>,pri=<hpriority>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{datetime} auditd: date=\"%{hdatetime}\",fac=%{hfacility},area=%{harea},type=%{messageid},pri=%{hpriority},%{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_sidewindermsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,acl_admin=<username>,acl_op=<acl_op>,acl_table=<acl_table>,acl_data=<info>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},acl_admin=%{username},acl_op=%{acl_op},acl_table=%{acl_table},acl_data=%{info}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,srcport=<sport>,srcburb=<srcburb>,dstip=<daddr>,dstport=<dport>,dstburb=<dstburb>,protocol=<protocol>,service_name=<network_service>,agent_type=<agent>,user_name=<username>,auth_method=<authmethod>,rule_name=<rule>,acl_id=<policyname>,cache_hit=<cache_hit>,acl_position=<acl_pos>,reason=<result>,application=<application>,srczone=<src_zone>,dstzone=<dst_zone>,ssl_name=<policyname>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},hostname=%{hostname},event=%{event_type},srcip=%{saddr},srcport=%{sport},srcburb=%{srcburb},dstip=%{daddr},dstport=%{dport},dstburb=%{dstburb},protocol=%{protocol},service_name=%{network_service},agent_type=%{agent},user_name=%{username},auth_method=%{authmethod},rule_name=%{rule},acl_id=%{policyname},cache_hit=%{cache_hit},acl_position=%{acl_pos},reason=%{result},application=%{application},srczone=%{src_zone},dstzone=%{dst_zone},ssl_name=%{policyname}" }
			id => "msgParserId1"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,srcip=<saddr>,srcburb=<srcburb>,dstip=<daddr>,dstburb=<dstburb>,protocol=<protocol>,service_name=<network_service>,agent_type=<agent>,user_name=<username>,auth_method=<authmethod>,rule_name=<rule>,acl_id=<policyname>,cache_hit=<cache_hit>,acl_position=<acl_pos>,hostname=<hostname>,attackip=<stransaddr>,attackburb=<sburb>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},srcip=%{saddr},srcburb=%{srcburb},dstip=%{daddr},dstburb=%{dstburb},protocol=%{protocol},service_name=%{network_service},agent_type=%{agent},user_name=%{username},auth_method=%{authmethod},rule_name=%{rule},acl_id=%{policyname},cache_hit=%{cache_hit},acl_position=%{acl_pos},hostname=%{hostname},attackip=%{stransaddr},attackburb=%{sburb}" }
			id => "msgParserId2"
			add_field => {
				"hostip" => "%{stransaddr}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "t_alert" {
		# MESSAGE t_alert:01
		# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,alert_name=<misc_name>,alert_type=<detail>,num_events=<fld1>,start_time="<fld28>",end_time="<fld29>",sacap_filter=<fld4>,alert_actions=<action>,syslog_alert=<level>,reason="The following event has <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},alert_name=%{misc_name},alert_type=%{detail},num_events=%{fld1},start_time=\"%{fld28}\",end_time=\"%{fld29}\",sacap_filter=%{fld4},alert_actions=%{action},syslog_alert=%{level},reason=\"The following event has %{result}" }
				id => "message-t_alert:01"
				add_field => {
					"[event][id]" => "t_alert:01"
					"[rsa][message][id1]" => "t_alert:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE t_alert
		# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,alert_name=<misc_name>,alert_type=<detail>,num_events=<fld1>,start_time=<fld28>,end_time=<fld29>,sacap_filter=<fld4>,alert_actions=<action>,dropped_count=<fld5>,syslog_alert=<level>,reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},alert_name=%{misc_name},alert_type=%{detail},num_events=%{fld1},start_time=%{fld28},end_time=%{fld29},sacap_filter=%{fld4},alert_actions=%{action},dropped_count=%{fld5},syslog_alert=%{level},reason=%{result}" }
				id => "message-t_alert"
				add_field => {
					"[event][id]" => "t_alert"
					"[rsa][message][id1]" => "t_alert"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,srcip=<saddr>,dstip=<daddr>,netsessid=<netsessid>,reason=<result>,acl_id=<policyname>,service_name=<network_service>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},srcip=%{saddr},dstip=%{daddr},netsessid=%{netsessid},reason=%{result},acl_id=%{policyname},service_name=%{network_service},information=%{info}" }
			id => "msgParserId5"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA: pid=<pid>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logid>,hostname=<hostname>,cmd=<cmd>,domain=<domain>,edomain=<edomain>,srcip=<saddr>,srchost=<shost>,dstip=<daddr>,dsthost=<dhost>,protocol=<protocol>,srcburb=<sburb>,srcport=<sport>,dstport=<dport>,information=<detail>,hostname=<host>,category=<sigcat>,event=<event_type>,interface=<interface>,src_etheraddr=<smacaddr>,dst_etheraddr=<dmacaddr>,reason=<reason>,total_events=<count>,attackip=<stransaddr>,attackburb=<sburb>,dstburb=<dstburb>,service_name=<service>,user_name=<username>,auth_method=<status>,acl_id=<acl_id>,cache_hit=<cache>,src_local_port=<fld1>,dst_local_port=<fld2>,srcdmn=<fld3>,tgtdmn=<fld4>,ICMP_type=<fld5>,ICMP_subtype=<fld6>,filedom=<filename>,filetyp=<fld7>,netsessid=<fld8>,rule_name=<rule>,reputation=<fld9>,reputation_threshold=<fld10>,vpn_name=<fld11>,spi=<fld12>,seq_num=<fld13>,ips_sid=<fld14>,ips_classtype=<fld15>,ips_sig_category=<fld16>,ips_signame=<fld17>,attackport=<fld18>,attackzone=<fld19>,srczone=<src_zone>,dstzone=<dst_zone>,src_geo=<fld20>,dst_geo=<fld21>,src_rep=<fld22>,ssl_name=<policyname>,application=<application>,app_risk=<risk>,app_categories=<fld27>,local_net=<fld23>,remote_net=<fld24>,remote_id=<fld25>,GTI_threshold=<fld26>,GTI_rep=<fld27>,dst_rep=<fld28>,message_id=<msgid>,mail_sender=<from>,virus_name=<virusname>,message_type=<msg_type>,file=<filename>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "pid=%{pid},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logid},hostname=%{hostname},cmd=%{cmd},domain=%{domain},edomain=%{edomain},srcip=%{saddr},srchost=%{shost},dstip=%{daddr},dsthost=%{dhost},protocol=%{protocol},srcburb=%{sburb},srcport=%{sport},dstport=%{dport},information=%{detail},hostname=%{host},category=%{sigcat},event=%{event_type},interface=%{interface},src_etheraddr=%{smacaddr},dst_etheraddr=%{dmacaddr},reason=%{reason},total_events=%{count},attackip=%{stransaddr},attackburb=%{sburb},dstburb=%{dstburb},service_name=%{service},user_name=%{username},auth_method=%{status},acl_id=%{acl_id},cache_hit=%{cache},src_local_port=%{fld1},dst_local_port=%{fld2},srcdmn=%{fld3},tgtdmn=%{fld4},ICMP_type=%{fld5},ICMP_subtype=%{fld6},filedom=%{filename},filetyp=%{fld7},netsessid=%{fld8},rule_name=%{rule},reputation=%{fld9},reputation_threshold=%{fld10},vpn_name=%{fld11},spi=%{fld12},seq_num=%{fld13},ips_sid=%{fld14},ips_classtype=%{fld15},ips_sig_category=%{fld16},ips_signame=%{fld17},attackport=%{fld18},attackzone=%{fld19},srczone=%{src_zone},dstzone=%{dst_zone},src_geo=%{fld20},dst_geo=%{fld21},src_rep=%{fld22},ssl_name=%{policyname},application=%{application},app_risk=%{risk},app_categories=%{fld27},local_net=%{fld23},remote_net=%{fld24},remote_id=%{fld25},GTI_threshold=%{fld26},GTI_rep=%{fld27},dst_rep=%{fld28},message_id=%{msgid},mail_sender=%{from},virus_name=%{virusname},message_type=%{msg_type},file=%{filename}" }
			id => "msgParserId6"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "t_auth_attempt" {
		# MESSAGE t_auth_attempt
		# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,user_name=<username>,auth_method=<authmethod>,result=0,information=<info>,hostname=<hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},user_name=%{username},auth_method=%{authmethod},result=0,information=%{info},hostname=%{hostname}" }
				id => "message-t_auth_attempt"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Authentication Failed"
					"[event][id]" => "t_auth_attempt"
					"[rsa][message][id1]" => "t_auth_attempt"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE t_auth_attempt:01
		# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,user_name=<username>,auth_method=<authmethod>,result=1,information=<info>,hostname=<hostname>,event=<event_type>,reason=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},user_name=%{username},auth_method=%{authmethod},result=1,information=%{info},hostname=%{hostname},event=%{event_type},reason=%{result}" }
				id => "message-t_auth_attempt:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"action" => "Authentication Succeeful"
					"[event][id]" => "t_auth_attempt:01"
					"[rsa][message][id1]" => "t_auth_attempt:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,status=<result>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,srcburb=<sburb>,seconds=<duration>,hit_count=<count>,flags=<flags>,reason=<reason>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},status=%{result},hostname=%{hostname},event=%{event_type},srcip=%{saddr},srcburb=%{sburb},seconds=%{duration},hit_count=%{count},flags=%{flags},reason=%{reason}" }
			id => "msgParserId9"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,user_name=<username>,information=<info>,hostname=<hostname>,admin=<admin>,event=<event_type>,config_area=<fld1>,config_item=<fld2>,udb_user=<fld3>,udb_class=<fld4>,udb_action=<action>,ticket_id=<fld5>,srcdmn=<fld6>,reason=<reason>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},user_name=%{username},information=%{info},hostname=%{hostname},admin=%{admin},event=%{event_type},config_area=%{fld1},config_item=%{fld2},udb_user=%{fld3},udb_class=%{fld4},udb_action=%{action},ticket_id=%{fld5},srcdmn=%{fld6},reason=%{reason}" }
			id => "msgParserId10"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,permwanted=<permwanted>,permgranted=<permgranted>,srcdom=<srcdom>,tgtdom=<tgtdom>,filedom=<fld1>,filetype=<filetype>,file=<filename>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},permwanted=%{permwanted},permgranted=%{permgranted},srcdom=%{srcdom},tgtdom=%{tgtdom},filedom=%{fld1},filetype=%{filetype},file=%{filename},information=%{info}" }
			id => "msgParserId11"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,vpn_name=<fld1>,cky_i=<fld2>,cky_r=<fld3>,msg_id=<fld4>,spi=<fld5>,local_gw=<fld6>,remote_gw=<fld7>,remote_id=<fld8>,local_net=<fld9>,remote_net=<fld10>,information=<info>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},vpn_name=%{fld1},cky_i=%{fld2},cky_r=%{fld3},msg_id=%{fld4},spi=%{fld5},local_gw=%{fld6},remote_gw=%{fld7},remote_id=%{fld8},local_net=%{fld9},remote_net=%{fld10},information=%{info},hostname=%{hostname}" }
			id => "msgParserId12"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,hostname=<hostname>,permwanted=<permwanted>,permgranted=<permgranted>,srcdom=<srcdom>,srcdmn=<fld3>,tgtdom=<tgtdom>,filedom=<fld1>,filetype=<filetype>,filetyp=<filetype>,file=<filename>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},hostname=%{hostname},permwanted=%{permwanted},permgranted=%{permgranted},srcdom=%{srcdom},srcdmn=%{fld3},tgtdom=%{tgtdom},filedom=%{fld1},filetype=%{filetype},filetyp=%{filetype},file=%{filename},information=%{info}" }
			id => "msgParserId13"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,srcip=<saddr>,srcport=<sport>,srcburb=<srcburb>,dstip=<daddr>,dstport=<dport>,dstburb=<dstburb>,protocol=<protocol>,netsessid=<netsessid>,dns_id=<dns_id>,dns_type=<dns_type>,dns_resp=<dns_resp>,srczone=<src_zone>,dstzone=<dst_zone>,src_geo=<fld20>,dst_geo=<fld21>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},srcip=%{saddr},srcport=%{sport},srcburb=%{srcburb},dstip=%{daddr},dstport=%{dport},dstburb=%{dstburb},protocol=%{protocol},netsessid=%{netsessid},dns_id=%{dns_id},dns_type=%{dns_type},dns_resp=%{dns_resp},srczone=%{src_zone},dstzone=%{dst_zone},src_geo=%{fld20},dst_geo=%{fld21},hostname=%{hostname}" }
			id => "msgParserId14"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: pid=<pid>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logid>,cmd=<cmd>,domain=<domain>,edomain=<edomain>,seq_num=<fld1>,spi=<fld2>,local_gw=<fld3>,remote_gw=<fld4>,information=<info>,total_events=<count>,hostname=<lhost>,event=<event_type>,netsessid=<netsessid>,srcip=<saddr>,srcport=<sport>,srcburb=<srcburb>,protocol=<protocol>,dstip=<faddr>,dstburb=<dstburb>,dstport=<dport>,attackip=<stransaddr>,attackburb=<sburb>,acl_id=<acl_id>,rule_name=<rule>,ICMP_type=<icmptype>,ICMP_subtype=<fld5>,interface=<interface>,cky_i=<fld6>,cky_r=<fld7>,msg_id=<fld8>,reason=<reason>,attackzone=<fld19>,src_geo=<fld20>,dst_geo=<fld21>,srczone=<src_zone>,dstzone=<dst_zone>,app_conflict=<fld26>,application=<application>,dst_local_port=<fld27>,src_local_port=<fld28>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "pid=%{pid},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logid},cmd=%{cmd},domain=%{domain},edomain=%{edomain},seq_num=%{fld1},spi=%{fld2},local_gw=%{fld3},remote_gw=%{fld4},information=%{info},total_events=%{count},hostname=%{lhost},event=%{event_type},netsessid=%{netsessid},srcip=%{saddr},srcport=%{sport},srcburb=%{srcburb},protocol=%{protocol},dstip=%{faddr},dstburb=%{dstburb},dstport=%{dport},attackip=%{stransaddr},attackburb=%{sburb},acl_id=%{acl_id},rule_name=%{rule},ICMP_type=%{icmptype},ICMP_subtype=%{fld5},interface=%{interface},cky_i=%{fld6},cky_r=%{fld7},msg_id=%{fld8},reason=%{reason},attackzone=%{fld19},src_geo=%{fld20},dst_geo=%{fld21},srczone=%{src_zone},dstzone=%{dst_zone},app_conflict=%{fld26},application=%{application},dst_local_port=%{fld27},src_local_port=%{fld28}" }
			id => "msgParserId15"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,srcburb=<srcburb>,dstburb=<dstburb>,message_type=<msg_type>,message_id=<msgid>,object=<object>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},srcburb=%{srcburb},dstburb=%{dstburb},message_type=%{msg_type},message_id=%{msgid},object=%{object},reason=%{result}" }
			id => "msgParserId16"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,interface=<interface>,ipkt=<ipkt>,opkt=<opkt>,mbuf_data=<mbug_data>,cpu_data=<cpu_data>,real_data=<real_data>,load_data=<load_data>,virt_data=<virt_data>,information=<info>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},interface=%{interface},ipkt=%{ipkt},opkt=%{opkt},mbuf_data=%{mbug_data},cpu_data=%{cpu_data},real_data=%{real_data},load_data=%{load_data},virt_data=%{virt_data},information=%{info},hostname=%{hostname}" }
			id => "msgParserId17"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,user_name=<username>,comp_class=<comp_class>,comp_name=<comp_name>,information=<info>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},user_name=%{username},comp_class=%{comp_class},comp_name=%{comp_name},information=%{info},hostname=%{hostname}" }
			id => "msgParserId18"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA: pid=<process_id>, dst_geo=<fld1>, sf_action=<action>, sf_cat=<filter>, ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>, auth_method=<authmethod>, domain=<domain>,edomain=<edomain>,hostname=<hostname>,srcip=<saddr>,dstip=<daddr>,user_name=<username>,request_command=<command>,url=<url>,result_str=<result>,result_code=<error>,bytes_written_to_client=<rbytes>,netsessid=<netsessid>,information=<info>,src_geo=<fld20>
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "pid=%{process_id}, dst_geo=%{fld1}, sf_action=%{action}, sf_cat=%{filter}, ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process}, auth_method=%{authmethod}, domain=%{domain},edomain=%{edomain},hostname=%{hostname},srcip=%{saddr},dstip=%{daddr},user_name=%{username},request_command=%{command},url=%{url},result_str=%{result},result_code=%{error},bytes_written_to_client=%{rbytes},netsessid=%{netsessid},information=%{info},src_geo=%{fld20}" }
			id => "msgParserId19"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA:  pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,result=<result>,tgtdmn=<tgtdomain>,information=<info>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},result=%{result},tgtdmn=%{tgtdomain},information=%{info},hostname=%{hostname}" }
			id => "msgParserId20"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,dstip=<daddr>,protocol=<protocol>,dstburb=<dstburb>,interface=<interface>,src_etheraddr=<smacaddr>,dst_etheraddr=<dmacaddr>,reason=<result>,srcburb=<srcburb>,srcport=<sport>,dstport=<dport>,protocolname=<protocol_detail>,rule_name=<rule>,vpn_name=<fld3>,cky_i=<fld4>,cky_r=<fld5>,msg_id=<fld6>,spi=<fld7>,local_gw=<fld8>,remote_gw=<fld9>,remote_id=<fld10>,local_net=<fld11>,remote_net=<fld12>,total_events=<count>,information=<info>,srczone=<src_zone>,dstzone=<dst_zone>,attackip=<stransaddr>,attackburb=<sburb>,netsessid=<netsessid>,src_local_port=<fld1>,dst_local_port=<fld2>,src_geo=<fld20>,dst_geo=<fld21>,serverip=<hostip>,result=<disposition>,ssl_name=<fld22>
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},srcip=%{saddr},dstip=%{daddr},protocol=%{protocol},dstburb=%{dstburb},interface=%{interface},src_etheraddr=%{smacaddr},dst_etheraddr=%{dmacaddr},reason=%{result},srcburb=%{srcburb},srcport=%{sport},dstport=%{dport},protocolname=%{protocol_detail},rule_name=%{rule},vpn_name=%{fld3},cky_i=%{fld4},cky_r=%{fld5},msg_id=%{fld6},spi=%{fld7},local_gw=%{fld8},remote_gw=%{fld9},remote_id=%{fld10},local_net=%{fld11},remote_net=%{fld12},total_events=%{count},information=%{info},srczone=%{src_zone},dstzone=%{dst_zone},attackip=%{stransaddr},attackburb=%{sburb},netsessid=%{netsessid},src_local_port=%{fld1},dst_local_port=%{fld2},src_geo=%{fld20},dst_geo=%{fld21},serverip=%{hostip},result=%{disposition},ssl_name=%{fld22}" }
			id => "msgParserId21"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,interface=<interface>,ipkt=<ipkt>,opkt=<opkt>,mbuf_data=<mbug_data>,cpu_data=<cpu_data>,real_data=<real_data>,load_data=<load_data>,virt_data=<virt_data>,information=<info>hostname=<hostname>,ibytes=<fld1>,obytes=<fld2>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},interface=%{interface},ipkt=%{ipkt},opkt=%{opkt},mbuf_data=%{mbug_data},cpu_data=%{cpu_data},real_data=%{real_data},load_data=%{load_data},virt_data=%{virt_data},information=%{info}hostname=%{hostname},ibytes=%{fld1},obytes=%{fld2}" }
			id => "msgParserId22"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:  pid=<pid>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logid>,cmd=<cmd>,domain=<domain>,edomain=<edomain>,hostname=<lhost>,event=<event_description>,status=<status>,rule_name=<rule>,srcip=<saddr>,srcburb=<srcburb>,srcport=<sport>,dstip=<daddr>,dstburb=<dstburb>,dstport=<dport>,protocol=<protocol>,protocolname=<protocol>,bytes_written_to_client=<rbytes>,bytes_written_to_server=<sbytes>,netsessid=<netsessid>,information=<info>,reason=<reason>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "pid=%{pid},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logid},cmd=%{cmd},domain=%{domain},edomain=%{edomain},hostname=%{lhost},event=%{event_description},status=%{status},rule_name=%{rule},srcip=%{saddr},srcburb=%{srcburb},srcport=%{sport},dstip=%{daddr},dstburb=%{dstburb},dstport=%{dport},protocol=%{protocol},protocolname=%{protocol},bytes_written_to_client=%{rbytes},bytes_written_to_server=%{sbytes},netsessid=%{netsessid},information=%{info},reason=%{reason}" }
			id => "msgParserId23"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,username=<username>,message_id=<msgid>,srcip=<saddr>,mail_sender=<from>,virus_name=<virusname>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},username=%{username},message_id=%{msgid},srcip=%{saddr},mail_sender=%{from},virus_name=%{virusname},reason=%{result}" }
			id => "msgParserId24"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA:  pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,srcport=<sport>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},srcip=%{saddr},srcport=%{sport},information=%{info}" }
			id => "msgParserId25"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,interface=<interface>,ipkt=<ipkt>,opkt=<opkt>,ibytes=<rbytes>,obytes=<sbytes>,mbuf_data=<mbug_data>,cpu_data=<cpu_data>,real_data=<real_data>,load_data=<load_data>,virt_data=<virt_data>,information=<info>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},interface=%{interface},ipkt=%{ipkt},opkt=%{opkt},ibytes=%{rbytes},obytes=%{sbytes},mbuf_data=%{mbug_data},cpu_data=%{cpu_data},real_data=%{real_data},load_data=%{load_data},virt_data=%{virt_data},information=%{info},hostname=%{hostname}" }
			id => "msgParserId26"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},reason=%{result}" }
			id => "msgParserId27"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,reason=<result>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},reason=%{result},information=%{info}" }
			id => "msgParserId28"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},information=%{info}" }
			id => "msgParserId29"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,hostname=<hostname>,cmd=<process>,domain=<domain>,edomain=<edomaub>,username=<username>,message_id=<msgid>,srcip=<saddr>,mail_sender=<from>,virus_name=<virusname>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},hostname=%{hostname},cmd=%{process},domain=%{domain},edomain=%{edomaub},username=%{username},message_id=%{msgid},srcip=%{saddr},mail_sender=%{from},virus_name=%{virusname},reason=%{result}" }
			id => "msgParserId30"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: hostname=<hostname>,pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,event=<event_type>,srcip=<saddr>,srcport=<sport>,dstip=<daddr>,dstport=<dport>,protocol=<protocol>,ICMP_type=<icmptype>,ICMP_subtype=<fld6>,srcburb=<srcburb>,protocolname=<protocol_detail>,dsthostname=<dhost>,srchostname=<shost>,dstservice=<fld4>,srcservice=<srcservice>,total_events=<count>,interface=<interface>,reason=<result>,information=<info>,vpn_name=<fld1>,srczone=<src_zone>,dstzone=<dst_zone>,src_geo=<fld20>,dst_geo=<fld21>,user_name=<username>,auth_method=<authmethod>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "hostname=%{hostname},pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},event=%{event_type},srcip=%{saddr},srcport=%{sport},dstip=%{daddr},dstport=%{dport},protocol=%{protocol},ICMP_type=%{icmptype},ICMP_subtype=%{fld6},srcburb=%{srcburb},protocolname=%{protocol_detail},dsthostname=%{dhost},srchostname=%{shost},dstservice=%{fld4},srcservice=%{srcservice},total_events=%{count},interface=%{interface},reason=%{result},information=%{info},vpn_name=%{fld1},srczone=%{src_zone},dstzone=%{dst_zone},src_geo=%{fld20},dst_geo=%{fld21},user_name=%{username},auth_method=%{authmethod}" }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,srcip=<saddr>,srcport=<sport>,srcburb=<srcburb>,dstip=<daddr>,dstport=<dport>,dstburb=<dstburb>,protocol=<protocol>,bytes_written_to_client=<rbytes>,bytes_written_to_server=<sbytes>,rule_name=<rule>,service_name=<network_service>,reason=<result>,status=<status>,acl_id=<policyname>,auth_method=<authmethod>,remote_logname=<logname>,recipient=<to>,request_command=<command>,srchost=<shost>,dsthost=<dhost>,cache_hit=<cache_hit>,user_name=<username>,request_status=<status1>,start_time=<fld28>,netsessid=<netsessid>,hostname=<hostname>,queueid=<fld1>,mail_sender=<from>,subject=<subject>,event=<event_type>,application=<application>,srczone=<src_zone>,dstzone=<dst_zone>,src_geo=<fld20>,dst_geo=<fld21>,app_risk=<risk>,app_categories=<fld27>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},srcip=%{saddr},srcport=%{sport},srcburb=%{srcburb},dstip=%{daddr},dstport=%{dport},dstburb=%{dstburb},protocol=%{protocol},bytes_written_to_client=%{rbytes},bytes_written_to_server=%{sbytes},rule_name=%{rule},service_name=%{network_service},reason=%{result},status=%{status},acl_id=%{policyname},auth_method=%{authmethod},remote_logname=%{logname},recipient=%{to},request_command=%{command},srchost=%{shost},dsthost=%{dhost},cache_hit=%{cache_hit},user_name=%{username},request_status=%{status1},start_time=%{fld28},netsessid=%{netsessid},hostname=%{hostname},queueid=%{fld1},mail_sender=%{from},subject=%{subject},event=%{event_type},application=%{application},srczone=%{src_zone},dstzone=%{dst_zone},src_geo=%{fld20},dst_geo=%{fld21},app_risk=%{risk},app_categories=%{fld27},information=%{info}" }
			id => "msgParserId32"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,hostname=<hostname>,cmd=<process>,domain=<domain>,edomain=<edomaub>,srcip=<saddr>,srcport=<sport>,srcburb=<sburb>,dstip=<daddr>,dstport=<dport>,dstburb=<dstburb>,protocol=<protocol>,netsessid=<netsessid>,proto_err_id=<error>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},hostname=%{hostname},cmd=%{process},domain=%{domain},edomain=%{edomaub},srcip=%{saddr},srcport=%{sport},srcburb=%{sburb},dstip=%{daddr},dstport=%{dport},dstburb=%{dstburb},protocol=%{protocol},netsessid=%{netsessid},proto_err_id=%{error},information=%{info}" }
			id => "msgParserId33"
			add_field => {
				"action" => "Protocol Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,srcip=<saddr>,srcport=<sport>,srcburb=<srcburb>,dstip=<daddr>,dstport=<dport>,dstburb=<dstburb>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},srcip=%{saddr},srcport=%{sport},srcburb=%{srcburb},dstip=%{daddr},dstport=%{dport},dstburb=%{dstburb},information=%{info}" }
			id => "msgParserId34"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,srchost=<shost>,dstip=<daddr>,dsthost=<dhost>,protocol=<protocol>,protocol_name=<protocol_detail>,srcburb=<sburb>,srcport=<sport>,dstport=<dport>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},srcip=%{saddr},srchost=%{shost},dstip=%{daddr},dsthost=%{dhost},protocol=%{protocol},protocol_name=%{protocol_detail},srcburb=%{sburb},srcport=%{sport},dstport=%{dport},reason=%{result}" }
			id => "msgParserId35"
			add_field => {
				"action" => "Proxy Authentication Failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,srcip=<saddr>,srcport=<sport>,srcburb=<srcburb>,dstip=<daddr>,dstport=<dport>,dstburb=<dstburb>,protocol=<protocol>,bytes_written_to_client=<rbytes>,bytes_written_to_server=<sbytes>,service_name=<network_service>,reason=<result>,status=<status>,acl_id=<policyname>,auth_method=<authmethod>,remote_logname=<logname>,recipient=<to>,request_command=<command>,srchost=<shost>,dsthost=<dhost>,cache_hit=<cache_hit>,user_name=<username>,request_status=<status1>,start_time=<fld28>,netsessid=<netsessid>,hostname=<hostname>,event=<event_type>,rule_name=<rule>,srczone=<src_zone>,dstzone=<dst_zone>,application=<application>,ssl_name=<policyname>,queueid=<fld1>,mail_sender=<from>,subject=<subject>,src_geo=<fld20>,dst_geo=<fld21>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},srcip=%{saddr},srcport=%{sport},srcburb=%{srcburb},dstip=%{daddr},dstport=%{dport},dstburb=%{dstburb},protocol=%{protocol},bytes_written_to_client=%{rbytes},bytes_written_to_server=%{sbytes},service_name=%{network_service},reason=%{result},status=%{status},acl_id=%{policyname},auth_method=%{authmethod},remote_logname=%{logname},recipient=%{to},request_command=%{command},srchost=%{shost},dsthost=%{dhost},cache_hit=%{cache_hit},user_name=%{username},request_status=%{status1},start_time=%{fld28},netsessid=%{netsessid},hostname=%{hostname},event=%{event_type},rule_name=%{rule},srczone=%{src_zone},dstzone=%{dst_zone},application=%{application},ssl_name=%{policyname},queueid=%{fld1},mail_sender=%{from},subject=%{subject},src_geo=%{fld20},dst_geo=%{fld21}" }
			id => "msgParserId36"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: pid=<pid>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logid>,cmd=<cmd>,domain=<domain>,edomain=<edomain>,user_name=<username>,hostname=<lhost>,comp_class=<comp_class>,comp_name=<comp_name>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "pid=%{pid},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logid},cmd=%{cmd},domain=%{domain},edomain=%{edomain},user_name=%{username},hostname=%{lhost},comp_class=%{comp_class},comp_name=%{comp_name},information=%{info}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,queueid=<fld1>,mail_sender=<from>,recipient=<to>,subject=<subject>,bytes=<bytes>,reason=<result>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},srcip=%{saddr},queueid=%{fld1},mail_sender=%{from},recipient=%{to},subject=%{subject},bytes=%{bytes},reason=%{result},information=%{info}" }
			id => "msgParserId38"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,status=<result>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},status=%{result}" }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomaub>,srcip=<saddr>,srcport=<sport>,dstport=<dport>,srcburb=<sburb>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomaub},srcip=%{saddr},srcport=%{sport},dstport=%{dport},srcburb=%{sburb}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,udb_admin=<admin>udb_user=<username>,udb_class=<udb_class>,udb_action=<result>
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},udb_admin=%{admin}udb_user=%{username},udb_class=%{udb_class},udb_action=%{result}" }
			id => "msgParserId41"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,udb_admin=<admin>udb_user=<username>,udb_class=<udb_class>,udb_action=<result>,hostname=<hostname>
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},udb_admin=%{admin}udb_user=%{username},udb_class=%{udb_class},udb_action=%{result},hostname=%{hostname}" }
			id => "msgParserId42"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,user_name=<username>,srcip=<saddr>,dstip=<daddr>,srcport=<sport>,dstport=<dport>,srcburb=<srcburb>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},user_name=%{username},srcip=%{saddr},dstip=%{daddr},srcport=%{sport},dstport=%{dport},srcburb=%{srcburb},information=%{info}" }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:  pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,vpn_id=<vpnid>,spi=<spi>,remote_gw=<saddr>,local_gw=<daddr>,p1rid=<fld1>,p2rid=<fld2>,p2lid=<fld3>,bytes_written_to_client=<rbytes>,bytes_written_to_server=<sbytes>,reason=<result>,status=<status>,hostname=<hostname>,local_net=<dhost>,remote_net=<shost>,event=<event_type>,vpn_name=<fld4>,remote_id=<fld5>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},vpn_id=%{vpnid},spi=%{spi},remote_gw=%{saddr},local_gw=%{daddr},p1rid=%{fld1},p2rid=%{fld2},p2lid=%{fld3},bytes_written_to_client=%{rbytes},bytes_written_to_server=%{sbytes},reason=%{result},status=%{status},hostname=%{hostname},local_net=%{dhost},remote_net=%{shost},event=%{event_type},vpn_name=%{fld4},remote_id=%{fld5}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,srcport=<sport>,dstip=<daddr>,dstport=<dport>,protocol=<protocol>,dstburb=<dstburb>,rule_name=<rule>,reason=<result>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},srcip=%{saddr},srcport=%{sport},dstip=%{daddr},dstport=%{dport},protocol=%{protocol},dstburb=%{dstburb},rule_name=%{rule},reason=%{result}" }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,old_time=<fld1>,new_time=<fld2>,srcip=<saddr>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},old_time=%{fld1},new_time=%{fld2},srcip=%{saddr}" }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: pid=<process_id>,ruid=<ruid>,euid=<euid>,pgid=<pgid>,logid=<logon_id>,cmd=<process>,domain=<domain>,edomain=<edomain>,hostname=<hostname>,event=<event_type>,srcip=<saddr>,user_name=<username>,external_group=<group>,auth_method=<authmethod>,cache_time=<fld3>,access_time=<fld4>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "pid=%{process_id},ruid=%{ruid},euid=%{euid},pgid=%{pgid},logid=%{logon_id},cmd=%{process},domain=%{domain},edomain=%{edomain},hostname=%{hostname},event=%{event_type},srcip=%{saddr},user_name=%{username},external_group=%{group},auth_method=%{authmethod},cache_time=%{fld3},access_time=%{fld4}" }
			id => "msgParserId47"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: pid=<process_id>,logid=<logon_id>,cmd=<process>,hostname=<hostname>,information=<info>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "pid=%{process_id},logid=%{logon_id},cmd=%{process},hostname=%{hostname},information=%{info}" }
			id => "msgParserId48"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_sidewindermsg.json"
#			template_name => "sidewinder_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
