# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "proofpoint"
			"[observer][name]" => "Proofpoint Email Security"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0024
	# line in RSA: <hdate>T<htime>.<hfld1> <hfld2> <hinstance>[<hfld3>]: {info|rprt|warn|err|note} s=<hfld4> cmd=send <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^T]*)T(?<htime>[^\.]*)\.(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<message>(?<hinstance>[^\[]*)\[(?<hfld3>[^\]]*)\]:[\s]+(info|rprt|warn|err|note)[\s]+s=(?<hfld4>[^\s]*)[\s]+cmd=send[\s]+(?<payload>.*))$" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "send"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0023
	# line in RSA: <hdate>T<htime>.<hfld1> <hfld2> <messageid>[<hfld3>]: {info|rprt|warn|err|note} <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^T]*)T(?<htime>[^\.]*)\.(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<messageid>[^\[]*)\[(?<hfld3>[^\]]*)\]:[\s]+(info|rprt|warn|err|note)[\s]+(?<message>.*)$" }
			id => "header-0023"
			add_field => {
				"[rsa][header][id]" => "0023"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0025
	# line in RSA: <hdate>T<htime>.<hfld1> <hinstance> <messageid>[<hfld2>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^T]*)T(?<htime>[^\.]*)\.(?<hfld1>[^\s]*)[\s]+(?<hinstance>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0025"
			add_field => {
				"[rsa][header][id]" => "0025"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0026
	# line in RSA: <hmonth> <hday> <htime> <hostname> <hinstance>[<hfld4>]: <hseverity> s=<hfld1> m=<hfld2> x=<hfld3> attachment=<hfld7> file=<hfld5> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<hinstance>[^\[]*)\[(?<hfld4>[^\]]*)\]:[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+m=(?<hfld2>[^\s]*)[\s]+x=(?<hfld3>[^\s]*)[\s]+attachment=(?<hfld7>[^\s]*)[\s]+file=(?<hfld5>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0026"
			add_field => {
				"[rsa][header][id]" => "0026"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> s=<hfld1> m=<hfld2> x=<hfld3> attachment=<hfld7> file=<hfld5> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+m=(?<hfld2>[^\s]*)[\s]+x=(?<hfld3>[^\s]*)[\s]+attachment=(?<hfld7>[^\s]*)[\s]+file=(?<hfld5>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>[<hfld2>]: <hseverity> s=<hfld3> m=<hfld4> x=<hfld5> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld3>[^\s]*)[\s]+m=(?<hfld4>[^\s]*)[\s]+x=(?<hfld5>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>[<hfld2>]: <hseverity> s=<hfld3> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld3>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>[<hfld2>]: <severity> mod=<msgIdPart1><!payload:hinstance>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0018
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>: <hseverity> s=<hfld2> m=<hfld3> x=<hfld4> cmd=<messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^:]*):[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld2>[^\s]*)[\s]+m=(?<hfld3>[^\s]*)[\s]+x=(?<hfld4>[^\s]*)[\s]+cmd=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance> <hseverity> s=<hfld2> mod=<messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld2>[^\s]*)[\s]+mod=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>[<hfld2>]: <hseverity> mod=<msgIdPart1> <msgIdPart2>=<hfld3> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<hseverity>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^=]*)=(?<hfld3>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>[<hfld2>]: <severity> mod=<msgIdPart1> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<severity>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{msgIdPart1}_type"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: <hmonth> <hday> <htime> <hfld1> <hinstance>: <hseverity> s=<hfld2> m=<hfld3> x=<hfld4> <msgIdPart1>=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<message>(?<hinstance>[^:]*):[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld2>[^\s]*)[\s]+m=(?<hfld3>[^\s]*)[\s]+x=(?<hfld4>[^\s]*)[\s]+(?<msgIdPart1>[^=]*)=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> s=<hfld1> m=<hfld2> x=<hfld3> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+m=(?<hfld2>[^\s]*)[\s]+x=(?<hfld3>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> s=<hfld1> m=<hfld2> x=<hfld3> cmd=<messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+m=(?<hfld2>[^\s]*)[\s]+x=(?<hfld3>[^\s]*)[\s]+cmd=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> s=<hfld1> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> s=<hfld1> mod=<messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+mod=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> s=<hfld1> cmd=<messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+s=(?<hfld1>[^\s]*)[\s]+cmd=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> mod=<msgIdPart1> type=<hfld5> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+type=(?<hfld5>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> pid=<hfld5> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+pid=(?<hfld5>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> mod=<msgIdPart1> cmd=<msgIdPart2> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+mod=(?<msgIdPart1>[^\s]*)[\s]+cmd=(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <hseverity> mod=<messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+mod=(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <hmonth> <hday> <htime> <hfld2> <hinstance>[<hfld1>]: <messageid><!payload:hinstance>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0013
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <messageid>[<hfld1>]: <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <hmonth> <hday> <htime> <hinstance> <messageid> <!payload:hinstance>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hinstance>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <messageid>[<hfld1>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^\[]*)\[(?<hfld1>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-proofpointmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "mail_env_rcpt" {
		# MESSAGE mail_env_rcpt
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> r=<event_counter> value=<to> verified=<fld3> routes=<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} r=%{event_counter} value=%{to} verified=%{fld3} routes=%{fld4}" }
				id => "message-mail_env_rcpt"
				add_field => {
					"[event][id]" => "mail_env_rcpt"
					"[rsa][message][id1]" => "mail_env_rcpt"
					"[event][categoryid]" => "1207010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_env_rcpt:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> r=<event_counter> value=<to> verified=<fld3> routes=<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} r=%{event_counter} value=%{to} verified=%{fld3} routes=%{fld4}" }
				id => "message-mail_env_rcpt:01"
				add_field => {
					"[event][id]" => "mail_env_rcpt:01"
					"[rsa][message][id1]" => "mail_env_rcpt:01"
					"[event][categoryid]" => "1207010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mail_attachment" {
		# MESSAGE mail_attachment
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> id=<fld5> file=<filename> mime=<content_type> type=<fld6> omime=<fld7> oext=<fld8> corrupted=<fld9> protected=<fld10> size=<bytes> virtual=<fld11> a=<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} id=%{fld5} file=%{filename} mime=%{content_type} type=%{fld6} omime=%{fld7} oext=%{fld8} corrupted=%{fld9} protected=%{fld10} size=%{bytes} virtual=%{fld11} a=%{fld12}" }
				id => "message-mail_attachment"
				add_field => {
					"[event][id]" => "mail_attachment"
					"[rsa][message][id1]" => "mail_attachment"
					"[event][categoryid]" => "1207020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_attachment:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> id=<fld5> file=<filename> mime=<content_type> type=<fld6> omime=<fld7> oext=<fld8> corrupted=<fld9> protected=<fld10> size=<bytes> virtual=<fld11> a=<fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} id=%{fld5} file=%{filename} mime=%{content_type} type=%{fld6} omime=%{fld7} oext=%{fld8} corrupted=%{fld9} protected=%{fld10} size=%{bytes} virtual=%{fld11} a=%{fld12}" }
				id => "message-mail_attachment:01"
				add_field => {
					"[event][id]" => "mail_attachment:01"
					"[rsa][message][id1]" => "mail_attachment:01"
					"[event][categoryid]" => "1207020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_attachment:02
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> id=<fld5> file=<filename> mime=<content_type> type=<fld6> omime=<fld7> oext=<fld8> corrupted=<fld9> protected=<fld10> size=<bytes> virtual=<fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} id=%{fld5} file=%{filename} mime=%{content_type} type=%{fld6} omime=%{fld7} oext=%{fld8} corrupted=%{fld9} protected=%{fld10} size=%{bytes} virtual=%{fld11}" }
				id => "message-mail_attachment:02"
				add_field => {
					"[event][id]" => "mail_attachment:02"
					"[rsa][message][id1]" => "mail_attachment:02"
					"[event][categoryid]" => "1207020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_attachment:03
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> id=<fld5> file=<filename> mime=<content_type> type=<fld6> omime=<fld7> oext=<fld8> corrupted=<fld9> protected=<fld10> size=<bytes> virtual=<fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} id=%{fld5} file=%{filename} mime=%{content_type} type=%{fld6} omime=%{fld7} oext=%{fld8} corrupted=%{fld9} protected=%{fld10} size=%{bytes} virtual=%{fld11}" }
				id => "message-mail_attachment:03"
				add_field => {
					"[event][id]" => "mail_attachment:03"
					"[rsa][message][id1]" => "mail_attachment:03"
					"[event][categoryid]" => "1207020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mail_msg" {
		# MESSAGE mail_msg
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> attachments=<dclass_counter1> rcpts=<dclass_counter2> routes=<fld4> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject=<subject> spamscore=<reputation_num> virusname=<threat_name> duration=<duration_string> elapsed=<fld16> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} attachments=%{dclass_counter1} rcpts=%{dclass_counter2} routes=%{fld4} size=%{bytes} guid=%{fld14} hdr_mid=%{id} qid=%{fld15} subject=%{subject} spamscore=%{reputation_num} virusname=%{threat_name} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-mail_msg"
				add_field => {
					"[event][id]" => "mail_msg"
					"[rsa][message][id1]" => "mail_msg"
					"[event][categoryid]" => "1207020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_msg:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> attachments=<dclass_counter1> rcpts=<dclass_counter2> routes=<fld4> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject=<subject> spamscore=<reputation_num> virusname=<threat_name> duration=<duration_string> elapsed=<fld16> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} attachments=%{dclass_counter1} rcpts=%{dclass_counter2} routes=%{fld4} size=%{bytes} guid=%{fld14} hdr_mid=%{id} qid=%{fld15} subject=%{subject} spamscore=%{reputation_num} virusname=%{threat_name} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-mail_msg:01"
				add_field => {
					"[event][id]" => "mail_msg:01"
					"[rsa][message][id1]" => "mail_msg:01"
					"[event][categoryid]" => "1207020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_msg:04
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> attachments=<dclass_counter1> rcpts=<dclass_counter2> routes=<fld4> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject=<subject> virusname=<threat_name> duration=<duration_string> elapsed=<fld16> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} attachments=%{dclass_counter1} rcpts=%{dclass_counter2} routes=%{fld4} size=%{bytes} guid=%{fld14} hdr_mid=%{id} qid=%{fld15} subject=%{subject} virusname=%{threat_name} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-mail_msg:04"
				add_field => {
					"[event][id]" => "mail_msg:04"
					"[rsa][message][id1]" => "mail_msg:04"
					"[event][categoryid]" => "1207020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_msg:02
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> attachments=<dclass_counter1> rcpts=<dclass_counter2> routes=<fld4> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject=<subject> duration=<duration_string> elapsed=<fld16> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} attachments=%{dclass_counter1} rcpts=%{dclass_counter2} routes=%{fld4} size=%{bytes} guid=%{fld14} hdr_mid=%{id} qid=%{fld15} subject=%{subject} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-mail_msg:02"
				add_field => {
					"[event][id]" => "mail_msg:02"
					"[rsa][message][id1]" => "mail_msg:02"
					"[event][categoryid]" => "1207020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_msg:03
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> attachments=<dclass_counter1> rcpts=<dclass_counter2> routes=<fld4> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject=<subject> duration=<duration_string> elapsed=<fld16> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} attachments=%{dclass_counter1} rcpts=%{dclass_counter2} routes=%{fld4} size=%{bytes} guid=%{fld14} hdr_mid=%{id} qid=%{fld15} subject=%{subject} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-mail_msg:03"
				add_field => {
					"[event][id]" => "mail_msg:03"
					"[rsa][message][id1]" => "mail_msg:03"
					"[event][categoryid]" => "1207020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mail_env_from" {
		# MESSAGE mail_env_from:ofrom
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> value=<to> ofrom=<from> qid=<fld15> tls=<fld17> routes=<fld4> notroutes=<fld18> host=<hostname> {ip=<hostip> sampling=<fld19>|ip=<hostip>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+value=(?<to>[^\s]*)[\s]+ofrom=(?<from>[^\s]*)[\s]+qid=(?<fld15>[^\s]*)[\s]+tls=(?<fld17>[^\s]*)[\s]+routes=(?<fld4>[^\s]*)[\s]+notroutes=(?<fld18>[^\s]*)[\s]+host=(?<hostname>[^\s]*)[\s]+(ip=(?<hostip>[^\s]*)[\s]+sampling=(?<fld19>.*)|ip=(?<hostip>.*))$" }
				id => "message-mail_env_from:ofrom"
				add_field => {
					"[event][id]" => "mail_env_from:ofrom"
					"[rsa][message][id1]" => "mail_env_from:ofrom"
					"[event][categoryid]" => "1207030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_env_from:ofrom:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> value=<to> ofrom=<from> qid=<fld15> tls=<fld17> routes=<fld4> notroutes=<fld18> host=<hostname> ip=<hostip> sampling=<fld19>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} value=%{to} ofrom=%{from} qid=%{fld15} tls=%{fld17} routes=%{fld4} notroutes=%{fld18} host=%{hostname} ip=%{hostip} sampling=%{fld19}" }
				id => "message-mail_env_from:ofrom:01"
				add_field => {
					"[event][id]" => "mail_env_from:ofrom:01"
					"[rsa][message][id1]" => "mail_env_from:ofrom:01"
					"[event][categoryid]" => "1207030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_env_from
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> value=<from> qid=<fld15> tls=<fld17> routes=<fld4> notroutes=<fld18> host=<hostname> {ip=<hostip> sampling=<fld19>|ip=<hostip>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+value=(?<from>[^\s]*)[\s]+qid=(?<fld15>[^\s]*)[\s]+tls=(?<fld17>[^\s]*)[\s]+routes=(?<fld4>[^\s]*)[\s]+notroutes=(?<fld18>[^\s]*)[\s]+host=(?<hostname>[^\s]*)[\s]+(ip=(?<hostip>[^\s]*)[\s]+sampling=(?<fld19>.*)|ip=(?<hostip>.*))$" }
				id => "message-mail_env_from"
				add_field => {
					"[event][id]" => "mail_env_from"
					"[rsa][message][id1]" => "mail_env_from"
					"[event][categoryid]" => "1207030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_env_from:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> value=<from> qid=<fld15> tls=<fld17> routes=<fld4> notroutes=<fld18> host=<hostname> ip=<hostip> sampling=<fld19>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} value=%{from} qid=%{fld15} tls=%{fld17} routes=%{fld4} notroutes=%{fld18} host=%{hostname} ip=%{hostip} sampling=%{fld19}" }
				id => "message-mail_env_from:01"
				add_field => {
					"[event][id]" => "mail_env_from:01"
					"[rsa][message][id1]" => "mail_env_from:01"
					"[event][categoryid]" => "1207030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mail_helo" {
		# MESSAGE mail_helo
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> value=<ddomain> routes=<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} value=%{ddomain} routes=%{fld4}" }
				id => "message-mail_helo"
				add_field => {
					"[event][id]" => "mail_helo"
					"[rsa][message][id1]" => "mail_helo"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE mail_helo:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> value=<ddomain> routes=<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} value=%{ddomain} routes=%{fld4}" }
				id => "message-mail_helo:01"
				add_field => {
					"[event][id]" => "mail_helo:01"
					"[rsa][message][id1]" => "mail_helo:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> action=<action> err=<fld58>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} action=%{action} err=%{fld58}" }
			id => "msgParserId17"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: <fld0> <severity>  s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> status=<result> err=<fld58>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity}  s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} status=%{result} err=%{fld58}" }
			id => "msgParserId18"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "session_data" {
		# MESSAGE session_data
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> {rcpt_notroutes=<fld20> data_routes=<fld21>| rcpt=<to> suborg=<fld22>| from=<from> suborg=<fld22>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+(rcpt_notroutes=(?<fld20>[^\s]*)[\s]+data_routes=(?<fld21>.*)|[\s]*rcpt=(?<to>[^\s]*)[\s]+suborg=(?<fld22>.*)|[\s]*from=(?<from>[^\s]*)[\s]+suborg=(?<fld22>.*))$" }
				id => "message-session_data"
				add_field => {
					"[event][id]" => "session_data"
					"[rsa][message][id1]" => "session_data"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_data:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rcpt_notroutes=<fld20> data_routes=<fld21>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rcpt_notroutes=%{fld20} data_routes=%{fld21}" }
				id => "message-session_data:01"
				add_field => {
					"[event][id]" => "session_data:01"
					"[rsa][message][id1]" => "session_data:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_store" {
		# MESSAGE session_store
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> folder=<fld22> pri=<fld23> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} folder=%{fld22} pri=%{fld23} duration=%{duration_string}" }
				id => "message-session_store"
				add_field => {
					"[event][id]" => "session_store"
					"[rsa][message][id1]" => "session_store"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_store:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> folder=<fld22> pri=<fld23> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} folder=%{fld22} pri=%{fld23} duration=%{duration_string}" }
				id => "message-session_store:01"
				add_field => {
					"[event][id]" => "session_store:01"
					"[rsa][message][id1]" => "session_store:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_headers" {
		# MESSAGE session_headers
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> routes=<fld4> notroutes=<fld18> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} routes=%{fld4} notroutes=%{fld18}" }
				id => "message-session_headers"
				add_field => {
					"[event][id]" => "session_headers"
					"[rsa][message][id1]" => "session_headers"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_headers:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> routes=<fld4> notroutes=<fld18> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} routes=%{fld4} notroutes=%{fld18}" }
				id => "message-session_headers:01"
				add_field => {
					"[event][id]" => "session_headers:01"
					"[rsa][message][id1]" => "session_headers:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_judge" {
		# MESSAGE session_judge
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> {attachment=<fld58> file=<fld1> mod=<agent>|mod=<agent>} cmd=<obj_type> module=<event_source> rule=<rulename> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+(attachment=(?<fld58>[^\s]*)[\s]+file=(?<fld1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)|mod=(?<agent>[^\s]*))[\s]+cmd=(?<obj_type>[^\s]*)[\s]+module=(?<event_source>[^\s]*)[\s]+rule=(?<rulename>[^\s]*)[\s]+$" }
				id => "message-session_judge"
				add_field => {
					"[event][id]" => "session_judge"
					"[rsa][message][id1]" => "session_judge"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_judge:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename}" }
				id => "message-session_judge:01"
				add_field => {
					"[event][id]" => "session_judge:01"
					"[rsa][message][id1]" => "session_judge:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_connect" {
		# MESSAGE session_connect
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> ip=<hostip> country=<location_country> lip=<fld24> prot=<fld25> hops_active=<fld26> routes=<fld4> notroutes=<fld18> perlwait=<fld27>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} ip=%{hostip} country=%{location_country} lip=%{fld24} prot=%{fld25} hops_active=%{fld26} routes=%{fld4} notroutes=%{fld18} perlwait=%{fld27}" }
				id => "message-session_connect"
				add_field => {
					"[event][id]" => "session_connect"
					"[rsa][message][id1]" => "session_connect"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_connect:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> ip=<hostip> country=<location_country> lip=<fld24> prot=<fld25> hops_active=<fld26> routes=<fld4> notroutes=<fld18> perlwait=<fld27>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} ip=%{hostip} country=%{location_country} lip=%{fld24} prot=%{fld25} hops_active=%{fld26} routes=%{fld4} notroutes=%{fld18} perlwait=%{fld27}" }
				id => "message-session_connect:01"
				add_field => {
					"[event][id]" => "session_connect:01"
					"[rsa][message][id1]" => "session_connect:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_resolve" {
		# MESSAGE session_resolve
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> host=<hostname> resolve=<fld28> reverse=<fld13> routes=<fld4> notroutes=<fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} host=%{hostname} resolve=%{fld28} reverse=%{fld13} routes=%{fld4} notroutes=%{fld18}" }
				id => "message-session_resolve"
				add_field => {
					"[event][id]" => "session_resolve"
					"[rsa][message][id1]" => "session_resolve"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_resolve:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> host=<hostname> resolve=<fld28> reverse=<fld13> routes=<fld4> notroutes=<fld18>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} host=%{hostname} resolve=%{fld28} reverse=%{fld13} routes=%{fld4} notroutes=%{fld18}" }
				id => "message-session_resolve:01"
				add_field => {
					"[event][id]" => "session_resolve:01"
					"[rsa][message][id1]" => "session_resolve:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_throttle" {
		# MESSAGE session_throttle
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> ip=<hostip> rate=<fld29> crate=<fld30> limit=<fld31> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} ip=%{hostip} rate=%{fld29} crate=%{fld30} limit=%{fld31}" }
				id => "message-session_throttle"
				add_field => {
					"[event][id]" => "session_throttle"
					"[rsa][message][id1]" => "session_throttle"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_throttle:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> ip=<hostip> rate=<fld29> crate=<fld30> limit=<fld31> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} ip=%{hostip} rate=%{fld29} crate=%{fld30} limit=%{fld31}" }
				id => "message-session_throttle:01"
				add_field => {
					"[event][id]" => "session_throttle:01"
					"[rsa][message][id1]" => "session_throttle:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_dispose" {
		# MESSAGE session_dispose
		# line in RSA: <fld0> <severity> s=<sessionid>  m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> rate=<fld58> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid}  m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} rate=%{fld58}" }
				id => "message-session_dispose"
				add_field => {
					"[event][id]" => "session_dispose"
					"[rsa][message][id1]" => "session_dispose"
					"[event][categoryid]" => "1207040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_dispose:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> rate=<fld58> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} rate=%{fld58}" }
				id => "message-session_dispose:01"
				add_field => {
					"[event][id]" => "session_dispose:01"
					"[rsa][message][id1]" => "session_dispose:01"
					"[event][categoryid]" => "1207040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_dispose:02
		# line in RSA: <fld0> <severity> s=<sessionid>  m=<mail_id> x=<sessionid1> {attachment=<fld58> file=<fld1> mod=<agent>|mod=<agent>} cmd=<obj_type> module=<event_source> rule=<rulename> action=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+(attachment=(?<fld58>[^\s]*)[\s]+file=(?<fld1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)|mod=(?<agent>[^\s]*))[\s]+cmd=(?<obj_type>[^\s]*)[\s]+module=(?<event_source>[^\s]*)[\s]+rule=(?<rulename>[^\s]*)[\s]+action=(?<action>.*)$" }
				id => "message-session_dispose:02"
				add_field => {
					"[event][id]" => "session_dispose:02"
					"[rsa][message][id1]" => "session_dispose:02"
					"[event][categoryid]" => "1207040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_dispose:03
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action}" }
				id => "message-session_dispose:03"
				add_field => {
					"[event][id]" => "session_dispose:03"
					"[rsa][message][id1]" => "session_dispose:03"
					"[event][categoryid]" => "1207040200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "session_disconnect" {
		# MESSAGE session_disconnect
		# line in RSA: <fld0> <severity> s=<sessionid>  m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> helo=<fld32> msgs=<fld33> rcpts=<dclass_counter2> routes=<fld4> duration=<duration_string> elapsed=<fld16>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid}  m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} helo=%{fld32} msgs=%{fld33} rcpts=%{dclass_counter2} routes=%{fld4} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-session_disconnect"
				add_field => {
					"[event][id]" => "session_disconnect"
					"[rsa][message][id1]" => "session_disconnect"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE session_disconnect:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> helo=<fld32> msgs=<fld33> rcpts=<dclass_counter2> routes=<fld4> duration=<duration_string> elapsed=<fld16>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} helo=%{fld32} msgs=%{fld33} rcpts=%{dclass_counter2} routes=%{fld4} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-session_disconnect:01"
				add_field => {
					"[event][id]" => "session_disconnect:01"
					"[rsa][message][id1]" => "session_disconnect:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "av_run" {
		# MESSAGE av_run:02
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> attachment=<fld58> file=<fld1> mod=<agent> cmd=<obj_type> rule=<rulename> name=<fld34> {cleaned=<fld35> vendor=<fld36>|vendor=<fld36> version="<component_version>"|vendor=<fld36>} duration=<duration_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+attachment=(?<fld58>[^\s]*)[\s]+file=(?<fld1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+rule=(?<rulename>[^\s]*)[\s]+name=(?<fld34>[^\s]*)[\s]+(cleaned=(?<fld35>[^\s]*)[\s]+vendor=(?<fld36>[^\s]*)|vendor=(?<fld36>[^\s]*)[\s]+version=\"(?<component_version>[^\"]*)\"|vendor=(?<fld36>[^\s]*))[\s]+duration=(?<duration_string>.*)$" }
				id => "message-av_run:02"
				add_field => {
					"[event][id]" => "av_run:02"
					"[rsa][message][id1]" => "av_run:02"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE av_run:03
		# line in RSA: <fld0> <severity> s=<sessionid> attachment=<fld58> file=<filename> mod=<agent> cmd=<obj_type> rule=<rulename> name=<fld34> cleaned=<fld35> vendor=<fld36> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} attachment=%{fld58} file=%{filename} mod=%{agent} cmd=%{obj_type} rule=%{rulename} name=%{fld34} cleaned=%{fld35} vendor=%{fld36} duration=%{duration_string}" }
				id => "message-av_run:03"
				add_field => {
					"[event][id]" => "av_run:03"
					"[rsa][message][id1]" => "av_run:03"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE av_run
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> {vendor=<fld36> version="<component_version>"|name=<fld34> cleaned=<fld35> vendor=<fld36>|name=<fld34> vendor=<fld36>} duration=<duration_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+rule=(?<rulename>[^\s]*)[\s]+(vendor=(?<fld36>[^\s]*)[\s]+version=\"(?<component_version>[^\"]*)\"|name=(?<fld34>[^\s]*)[\s]+cleaned=(?<fld35>[^\s]*)[\s]+vendor=(?<fld36>[^\s]*)|name=(?<fld34>[^\s]*)[\s]+vendor=(?<fld36>[^\s]*))[\s]+duration=(?<duration_string>.*)$" }
				id => "message-av_run"
				add_field => {
					"[event][id]" => "av_run"
					"[rsa][message][id1]" => "av_run"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE av_run:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> name=<fld34> cleaned=<fld35> vendor=<fld36> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} name=%{fld34} cleaned=%{fld35} vendor=%{fld36} duration=%{duration_string}" }
				id => "message-av_run:01"
				add_field => {
					"[event][id]" => "av_run:01"
					"[rsa][message][id1]" => "av_run:01"
					"[event][categoryid]" => "1003010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5> vendor=<fld36> engine=<fld49> definitions=<fld50> signatures=<fld94>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5} vendor=%{fld36} engine=%{fld49} definitions=%{fld50} signatures=%{fld94}" }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "access_run" {
		# MESSAGE access_run:02
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> attachment=<fld58> file=<filename> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} attachment=%{fld58} file=%{filename} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-access_run:02"
				add_field => {
					"[event][id]" => "access_run:02"
					"[rsa][message][id1]" => "access_run:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE access_run:04
		# line in RSA: <fld0> <severity> s=<sessionid> attachment=<fld58> file=<filename> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} attachment=%{fld58} file=%{filename} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-access_run:04"
				add_field => {
					"[event][id]" => "access_run:04"
					"[rsa][message][id1]" => "access_run:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE access_run:03
		# line in RSA: <fld0> <severity> s=<sessionid>  m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid}  m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-access_run:03"
				add_field => {
					"[event][id]" => "access_run:03"
					"[rsa][message][id1]" => "access_run:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE access_run:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-access_run:01"
				add_field => {
					"[event][id]" => "access_run:01"
					"[rsa][message][id1]" => "access_run:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "access_refresh" {
		# MESSAGE access_refresh
		# line in RSA: <fld0> <severity> m=<mail_id> x=<sessionid1> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5> action=<action> dict=<fld37> file=<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} m=%{mail_id} x=%{sessionid1} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5} action=%{action} dict=%{fld37} file=%{filename}" }
				id => "message-access_refresh"
				add_field => {
					"[event][id]" => "access_refresh"
					"[rsa][message][id1]" => "access_refresh"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE access_refresh:01
		# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5> action=<action> dict=<fld37> file=<filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5} action=%{action} dict=%{fld37} file=%{filename}" }
				id => "message-access_refresh:01"
				add_field => {
					"[event][id]" => "access_refresh:01"
					"[rsa][message][id1]" => "access_refresh:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5}" }
			id => "msgParserId51"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5> action=<action> dict=<fld37> file=<filename>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5} action=%{action} dict=%{fld37} file=%{filename}" }
			id => "msgParserId50"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "spam_run" {
		# MESSAGE spam_run:rule
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> policy=<fld38> score=<fld39> spamscore=<reputation_num> {ipscore=<fld40> suspectscore=<fld41>|suspectscore=<fld41>} phishscore=<fld42> {bulkscore=<fld43> adultscore=<fld44>|adultscore=<fld44> bulkscore=<fld43>} classifier=<fld45> adjust=<fld46> reason=<fld47> scancount=<fld48> engine=<fld49> definitions=<fld50> raw=<fld51> tests=<fld52> duration=<duration_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+rule=(?<rulename>[^\s]*)[\s]+policy=(?<fld38>[^\s]*)[\s]+score=(?<fld39>[^\s]*)[\s]+spamscore=(?<reputation_num>[^\s]*)[\s]+(ipscore=(?<fld40>[^\s]*)[\s]+suspectscore=(?<fld41>[^\s]*)|suspectscore=(?<fld41>[^\s]*))[\s]+phishscore=(?<fld42>[^\s]*)[\s]+(bulkscore=(?<fld43>[^\s]*)[\s]+adultscore=(?<fld44>[^\s]*)|adultscore=(?<fld44>[^\s]*)[\s]+bulkscore=(?<fld43>[^\s]*))[\s]+classifier=(?<fld45>[^\s]*)[\s]+adjust=(?<fld46>[^\s]*)[\s]+reason=(?<fld47>[^\s]*)[\s]+scancount=(?<fld48>[^\s]*)[\s]+engine=(?<fld49>[^\s]*)[\s]+definitions=(?<fld50>[^\s]*)[\s]+raw=(?<fld51>[^\s]*)[\s]+tests=(?<fld52>[^\s]*)[\s]+duration=(?<duration_string>.*)$" }
				id => "message-spam_run:rule"
				add_field => {
					"[event][id]" => "spam_run:rule"
					"[rsa][message][id1]" => "spam_run:rule"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:rule_02
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> policy=<fld38> score=<fld39> spamscore=<reputation_num> ipscore=<fld40> suspectscore=<fld41> phishscore=<fld42> bulkscore=<fld43> adultscore=<fld44> classifier=<fld45> adjust=<fld46> reason=<fld47> scancount=<fld48> engine=<fld49> definitions=<fld50> raw=<fld51> tests=<fld52> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} policy=%{fld38} score=%{fld39} spamscore=%{reputation_num} ipscore=%{fld40} suspectscore=%{fld41} phishscore=%{fld42} bulkscore=%{fld43} adultscore=%{fld44} classifier=%{fld45} adjust=%{fld46} reason=%{fld47} scancount=%{fld48} engine=%{fld49} definitions=%{fld50} raw=%{fld51} tests=%{fld52} duration=%{duration_string}" }
				id => "message-spam_run:rule_02"
				add_field => {
					"[event][id]" => "spam_run:rule_02"
					"[rsa][message][id1]" => "spam_run:rule_02"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:rule_03
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> policy=<fld38> score=<fld39> ndrscore=<fld57> ipscore=<fld40> suspectscore=<fld41> phishscore=<fld42> bulkscore=<fld43> spamscore=<reputation_num> adjustscore=<fld58> adultscore=<fld44> classifier=<fld45> adjust=<fld46> reason=<fld47> scancount=<fld48> engine=<fld49> definitions=<fld50> raw=<fld51> tests=<fld52> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} policy=%{fld38} score=%{fld39} ndrscore=%{fld57} ipscore=%{fld40} suspectscore=%{fld41} phishscore=%{fld42} bulkscore=%{fld43} spamscore=%{reputation_num} adjustscore=%{fld58} adultscore=%{fld44} classifier=%{fld45} adjust=%{fld46} reason=%{fld47} scancount=%{fld48} engine=%{fld49} definitions=%{fld50} raw=%{fld51} tests=%{fld52} duration=%{duration_string}" }
				id => "message-spam_run:rule_03"
				add_field => {
					"[event][id]" => "spam_run:rule_03"
					"[rsa][message][id1]" => "spam_run:rule_03"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:rule_04
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> policy=<fld38> score=<fld39> kscore.is_bulkscore=<fld57> kscore.compositescore=<fld40> circleOfTrustscore=<fld41> compositescore=<fld42> urlsuspect_oldscore=<fld43> suspectscore=<reputation_num> recipient_domain_to_sender_totalscore=<fld58> phishscore=<fld44> bulkscore=<fld45> kscore.is_spamscore=<fld46> recipient_to_sender_totalscore=<fld47> recipient_domain_to_sender_domain_totalscore=<fld48> rbsscore=<fld49> spamscore=<fld50> recipient_to_sender_domain_totalscore=<fld51> urlsuspectscore=<fld52> <fld53> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} policy=%{fld38} score=%{fld39} kscore.is_bulkscore=%{fld57} kscore.compositescore=%{fld40} circleOfTrustscore=%{fld41} compositescore=%{fld42} urlsuspect_oldscore=%{fld43} suspectscore=%{reputation_num} recipient_domain_to_sender_totalscore=%{fld58} phishscore=%{fld44} bulkscore=%{fld45} kscore.is_spamscore=%{fld46} recipient_to_sender_totalscore=%{fld47} recipient_domain_to_sender_domain_totalscore=%{fld48} rbsscore=%{fld49} spamscore=%{fld50} recipient_to_sender_domain_totalscore=%{fld51} urlsuspectscore=%{fld52} %{fld53} duration=%{duration_string}" }
				id => "message-spam_run:rule_04"
				add_field => {
					"[event][id]" => "spam_run:rule_04"
					"[rsa][message][id1]" => "spam_run:rule_04"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:rule_05
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> policy=<fld38> score=<fld39> ndrscore=<fld53> suspectscore=<fld40> malwarescore=<fld41> phishscore=<fld42> bulkscore=<fld43> spamscore=<reputation_num> adjustscore=<fld54> adultscore=<fld44> classifier=<fld45> adjust=<fld46> reason=<fld47> scancount=<fld48> engine=<fld49> definitions=<fld50> raw=<fld51> tests=<fld52> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} policy=%{fld38} score=%{fld39} ndrscore=%{fld53} suspectscore=%{fld40} malwarescore=%{fld41} phishscore=%{fld42} bulkscore=%{fld43} spamscore=%{reputation_num} adjustscore=%{fld54} adultscore=%{fld44} classifier=%{fld45} adjust=%{fld46} reason=%{fld47} scancount=%{fld48} engine=%{fld49} definitions=%{fld50} raw=%{fld51} tests=%{fld52} duration=%{duration_string}" }
				id => "message-spam_run:rule_05"
				add_field => {
					"[event][id]" => "spam_run:rule_05"
					"[rsa][message][id1]" => "spam_run:rule_05"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:rule_06
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> mod=<agent> total_uri_count=<dclass_counter1> uris_excluded_from_report_info=<dclass_counter2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} mod=%{agent} total_uri_count=%{dclass_counter1} uris_excluded_from_report_info=%{dclass_counter2}" }
				id => "message-spam_run:rule_06"
				add_field => {
					"[event][id]" => "spam_run:rule_06"
					"[rsa][message][id1]" => "spam_run:rule_06"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:action_01
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> action=<action> score=<fld39> submsgadjust=<fld53> spamscore=<reputation_num> ipscore=<fld40> suspectscore=<fld41> phishscore=<fld42> bulkscore=<fld43> adultscore=<fld44> tests=<fld52>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} action=%{action} score=%{fld39} submsgadjust=%{fld53} spamscore=%{reputation_num} ipscore=%{fld40} suspectscore=%{fld41} phishscore=%{fld42} bulkscore=%{fld43} adultscore=%{fld44} tests=%{fld52}" }
				id => "message-spam_run:action_01"
				add_field => {
					"[event][id]" => "spam_run:action_01"
					"[rsa][message][id1]" => "spam_run:action_01"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:action
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> action=<action> score=<fld39> submsgadjust=<fld53> spamscore=<reputation_num> ipscore=<fld40> suspectscore=<fld41> phishscore=<fld42> bulkscore=<fld43> adultscore=<fld44> tests=<fld52>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} action=%{action} score=%{fld39} submsgadjust=%{fld53} spamscore=%{reputation_num} ipscore=%{fld40} suspectscore=%{fld41} phishscore=%{fld42} bulkscore=%{fld43} adultscore=%{fld44} tests=%{fld52}" }
				id => "message-spam_run:action"
				add_field => {
					"[event][id]" => "spam_run:action"
					"[rsa][message][id1]" => "spam_run:action"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spam_run:action_02
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> action=<action> num_domains=<fld53> num_domains_to_lookup=<fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} action=%{action} num_domains=%{fld53} num_domains_to_lookup=%{fld40}" }
				id => "message-spam_run:action_02"
				add_field => {
					"[event][id]" => "spam_run:action_02"
					"[rsa][message][id1]" => "spam_run:action_02"
					"[event][categoryid]" => "1207040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5> engine=<fld49> definitions=<fld50> 
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5} engine=%{fld49} definitions=%{fld50}" }
			id => "msgParserId61"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "batv_run" {
		# MESSAGE batv_run
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> policy=<fld38> address=<fld54> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} policy=%{fld38} address=%{fld54}" }
				id => "message-batv_run"
				add_field => {
					"[event][id]" => "batv_run"
					"[rsa][message][id1]" => "batv_run"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE batv_run:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> policy=<fld38> address=<fld54> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} policy=%{fld38} address=%{fld54}" }
				id => "message-batv_run:01"
				add_field => {
					"[event][id]" => "batv_run:01"
					"[rsa][message][id1]" => "batv_run:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE batv_run:02
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-batv_run:02"
				add_field => {
					"[event][id]" => "batv_run:02"
					"[rsa][message][id1]" => "batv_run:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE batv_run:03
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-batv_run:03"
				add_field => {
					"[event][id]" => "batv_run:03"
					"[rsa][message][id1]" => "batv_run:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA: <fld0> <severity> mod=<agent> type=<fld6> cmd=<obj_type> id=<fld5> version=<fld55>
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} type=%{fld6} cmd=%{obj_type} id=%{fld5} version=%{fld55}" }
			id => "msgParserId66"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "zerohour_run" {
		# MESSAGE zerohour_run
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> count=<fld2> name=<fld34> init_time=<fld3> init_virusthreat=<fld4> virusthreat=<fld5> virusthreatid=<fld6> duration=<duration_string> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} count=%{fld2} name=%{fld34} init_time=%{fld3} init_virusthreat=%{fld4} virusthreat=%{fld5} virusthreatid=%{fld6} duration=%{duration_string}" }
				id => "message-zerohour_run"
				add_field => {
					"[event][id]" => "zerohour_run"
					"[rsa][message][id1]" => "zerohour_run"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE zerohour_run:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> count=<fld2> name=<fld34> init_time=<fld3> init_virusthreat=<fld4> virusthreat=<fld5> virusthreatid=<fld6> duration=<duration_string> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} count=%{fld2} name=%{fld34} init_time=%{fld3} init_virusthreat=%{fld4} virusthreat=%{fld5} virusthreatid=%{fld6} duration=%{duration_string}" }
				id => "message-zerohour_run:01"
				add_field => {
					"[event][id]" => "zerohour_run:01"
					"[rsa][message][id1]" => "zerohour_run:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type> duration=<duration_string>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type} duration=%{duration_string}" }
			id => "msgParserId69"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type> id=<fld5> duration=<duration_string>
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type} id=%{fld5} duration=%{duration_string}" }
			id => "msgParserId70"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cvt_convert" {
		# MESSAGE cvt_convert
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> cset=<fld56> name=<fld34> status=<result> err=<fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} cset=%{fld56} name=%{fld34} status=%{result} err=%{fld58}" }
				id => "message-cvt_convert"
				add_field => {
					"[event][id]" => "cvt_convert"
					"[rsa][message][id1]" => "cvt_convert"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cvt_convert:01
		# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> cset=<fld56> name=<fld34> status=<result> err=<fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} cset=%{fld56} name=%{fld34} status=%{result} err=%{fld58}" }
				id => "message-cvt_convert:01"
				add_field => {
					"[event][id]" => "cvt_convert:01"
					"[rsa][message][id1]" => "cvt_convert:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cvt_convert:02
		# line in RSA: <fld0> <severity> pid=<process_id> mod=<agent> cmd=<obj_type> cset=<fld56> name=<fld34> status=<result> err=<fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} pid=%{process_id} mod=%{agent} cmd=%{obj_type} cset=%{fld56} name=%{fld34} status=%{result} err=%{fld58}" }
				id => "message-cvt_convert:02"
				add_field => {
					"[event][id]" => "cvt_convert:02"
					"[rsa][message][id1]" => "cvt_convert:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA: <fld0> <severity> pid=<process_id> mod=<agent> cmd=<obj_type> name=<fld34> status=<result> err=<fld58>
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} pid=%{process_id} mod=%{agent} cmd=%{obj_type} name=%{fld34} status=%{result} err=%{fld58}" }
			id => "msgParserId74"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cvtd" {
		# MESSAGE cvtd:01
		# line in RSA: <fld0> <severity> mod=<agent> sig=<fld60>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} sig=%{fld60}" }
				id => "message-cvtd:01"
				add_field => {
					"[event][id]" => "cvtd:01"
					"[rsa][message][id1]" => "cvtd:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE cvtd
		# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type}" }
				id => "message-cvtd"
				add_field => {
					"[event][id]" => "cvtd"
					"[rsa][message][id1]" => "cvtd"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA: <fld0> <severity> pid=<fld5> mod=<agent> encrypted=<fld6>
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} pid=%{fld5} mod=%{agent} encrypted=%{fld6}" }
			id => "msgParserId77"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "filter" {
		# MESSAGE filter:01
		# line in RSA: <fld0> <severity> mod=<agent> sig=<fld60>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} sig=%{fld60}" }
				id => "message-filter:01"
				add_field => {
					"[event][id]" => "filter:01"
					"[rsa][message][id1]" => "filter:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE filter
		# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type}" }
				id => "message-filter"
				add_field => {
					"[event][id]" => "filter"
					"[rsa][message][id1]" => "filter"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type> addr=<saddr>
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type} addr=%{saddr}" }
			id => "msgParserId78"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> <event_description>
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} %{event_description}" }
			id => "msgParserId79"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
			id => "msgParserId80"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> {<result> err=<fld58>|<result>}
	else if [logstash][msgparser][id] == "msgParserId81" {
		grok {
			match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+((?<result>[^\s]*)[\s]+err=(?<fld58>.*)|(?<result>.*))$" }
			id => "msgParserId81"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "send" {
		# MESSAGE send
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> cmd=<obj_type> profile=<fld52> qid=<fld15> rcpts=<to>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} cmd=%{obj_type} profile=%{fld52} qid=%{fld15} rcpts=%{to}" }
				id => "message-send"
				add_field => {
					"[event][id]" => "send"
					"[rsa][message][id1]" => "send"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE send:01
		# line in RSA: <fld0> <severity> s=<sessionid> cmd=<obj_type> profile=<fld52> qid=<fld15> rcpts=<to>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} cmd=%{obj_type} profile=%{fld52} qid=%{fld15} rcpts=%{to}" }
				id => "message-send:01"
				add_field => {
					"[event][id]" => "send:01"
					"[rsa][message][id1]" => "send:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE send:02
		# line in RSA: <fld0>: <severity> s=<sessionid> m=<mail_id> x=<sessionid1> cmd=<obj_type> rcpt=<to> err=<fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0}: %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} cmd=%{obj_type} rcpt=%{to} err=%{fld58}" }
				id => "message-send:02"
				add_field => {
					"[event][id]" => "send:02"
					"[rsa][message][id1]" => "send:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "queued-alert" {
		# MESSAGE queued-alert
		# line in RSA: <agent>[<process_id>]: <fld51>: to=<to>, delay=<fld53>, xdelay=<fld54>, {mailer=<fld55> tls_verify=<fld70>|mailer=<fld55>}, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld51>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+(mailer=(?<fld55>[^\s]*)[\s]+tls_verify=(?<fld70>[^,]*)|mailer=(?<fld55>[^,]*)),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-queued-alert"
				add_field => {
					"[event][id]" => "queued-alert"
					"[rsa][message][id1]" => "queued-alert"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-alert:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld57>, nrcpts=<fld58>, msgid=<id>, proto=<protocol>, daemon=<fld69>, tls_verify=<fld70>, auth=<authmethod>, {relay=[<fld50>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld57>[^,]*),[\s]+nrcpts=(?<fld58>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld69>[^,]*),[\s]+tls_verify=(?<fld70>[^,]*),[\s]+auth=(?<authmethod>[^,]*),[\s]+(relay=\[(?<fld50>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-queued-alert:01"
				add_field => {
					"[event][id]" => "queued-alert:01"
					"[rsa][message][id1]" => "queued-alert:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE queued-alert:02
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<fld50>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} version=<version>, verify=<fld57>, cipher=<s_cipher>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<fld50>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+version=(?<version>[^,]*),[\s]+verify=(?<fld57>[^,]*),[\s]+cipher=(?<s_cipher>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-queued-alert:02"
				add_field => {
					"[event][id]" => "queued-alert:02"
					"[rsa][message][id1]" => "queued-alert:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "queued-VoltageEncrypt" {
		# MESSAGE queued-VoltageEncrypt
		# line in RSA: <agent>[<process_id>]: <fld51>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld51>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-queued-VoltageEncrypt"
				add_field => {
					"[event][id]" => "queued-VoltageEncrypt"
					"[rsa][message][id1]" => "queued-VoltageEncrypt"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-VoltageEncrypt:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld57>, nrcpts=<fld58>, msgid=<id>, proto=<protocol>, daemon=<fld69>, {relay=[<daddr>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld57>[^,]*),[\s]+nrcpts=(?<fld58>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld69>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-queued-VoltageEncrypt:01"
				add_field => {
					"[event][id]" => "queued-VoltageEncrypt:01"
					"[rsa][message][id1]" => "queued-VoltageEncrypt:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "queued-default" {
		# MESSAGE queued-default
		# line in RSA: <agent>[<process_id>]: <fld51>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld51>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-queued-default"
				add_field => {
					"[event][id]" => "queued-default"
					"[rsa][message][id1]" => "queued-default"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-default:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld57>, nrcpts=<fld58>, msgid=<id>, proto=<protocol>, daemon=<fld69>, {relay=[<daddr>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld57>[^,]*),[\s]+nrcpts=(?<fld58>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld69>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-queued-default:01"
				add_field => {
					"[event][id]" => "queued-default:01"
					"[rsa][message][id1]" => "queued-default:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-default:02
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} field=<fld2>, status=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+field=(?<fld2>[^,]*),[\s]+status=(?<info>.*)$" }
				id => "message-queued-default:02"
				add_field => {
					"[event][id]" => "queued-default:02"
					"[rsa][message][id1]" => "queued-default:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-default:03
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} version=<fld55>, verify=<fld57>, cipher=<fld58>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+version=(?<fld55>[^,]*),[\s]+verify=(?<fld57>[^,]*),[\s]+cipher=(?<fld58>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-queued-default:03"
				add_field => {
					"[event][id]" => "queued-default:03"
					"[rsa][message][id1]" => "queued-default:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-default:04
		# line in RSA: <agent>[<process_id>]: <fld1>: timeout waiting for input from <fld11> during server cmd read
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: timeout waiting for input from %{fld11} during server cmd read" }
				id => "message-queued-default:04"
				add_field => {
					"[event][id]" => "queued-default:04"
					"[rsa][message][id1]" => "queued-default:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "queued-reinject" {
		# MESSAGE queued-reinject
		# line in RSA: <agent>[<process_id>]: <fld51>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld51>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-queued-reinject"
				add_field => {
					"[event][id]" => "queued-reinject"
					"[rsa][message][id1]" => "queued-reinject"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-reinject:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld57>, nrcpts=<fld58>, msgid=<id>, proto=<protocol>, daemon=<fld69>, {relay=[<daddr>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld57>[^,]*),[\s]+nrcpts=(?<fld58>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld69>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-queued-reinject:01"
				add_field => {
					"[event][id]" => "queued-reinject:01"
					"[rsa][message][id1]" => "queued-reinject:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-reinject:02
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} field=<fld2>, status=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+field=(?<fld2>[^,]*),[\s]+status=(?<info>.*)$" }
				id => "message-queued-reinject:02"
				add_field => {
					"[event][id]" => "queued-reinject:02"
					"[rsa][message][id1]" => "queued-reinject:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-reinject:03
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} version=<fld55>, verify=<fld57>, cipher=<fld58>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+version=(?<fld55>[^,]*),[\s]+verify=(?<fld57>[^,]*),[\s]+cipher=(?<fld58>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-queued-reinject:03"
				add_field => {
					"[event][id]" => "queued-reinject:03"
					"[rsa][message][id1]" => "queued-reinject:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-reinject:05
		# line in RSA: <agent>[<process_id>]: <fld1>: maxrcpts=<fld56>, rcpts=<fld57>, count=<fld58>, ids=<fld59>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: maxrcpts=%{fld56}, rcpts=%{fld57}, count=%{fld58}, ids=%{fld59}" }
				id => "message-queued-reinject:05"
				add_field => {
					"[event][id]" => "queued-reinject:05"
					"[rsa][message][id1]" => "queued-reinject:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-reinject:04
		# line in RSA: <agent>[<process_id>]: <fld1>: timeout waiting for input from <fld11> during server cmd read
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: timeout waiting for input from %{fld11} during server cmd read" }
				id => "message-queued-reinject:04"
				add_field => {
					"[event][id]" => "queued-reinject:04"
					"[rsa][message][id1]" => "queued-reinject:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-reinject:06
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-queued-reinject:06"
				add_field => {
					"[event][id]" => "queued-reinject:06"
					"[rsa][message][id1]" => "queued-reinject:06"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "queued-eurort" {
		# MESSAGE queued-eurort
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} version=<version>, verify=<disposition>, cipher=<fld58>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+version=(?<version>[^,]*),[\s]+verify=(?<disposition>[^,]*),[\s]+cipher=(?<fld58>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-queued-eurort"
				add_field => {
					"[event][id]" => "queued-eurort"
					"[rsa][message][id1]" => "queued-eurort"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-eurort:01
		# line in RSA: <agent>[<process_id>]: <fld51>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld51>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-queued-eurort:01"
				add_field => {
					"[event][id]" => "queued-eurort:01"
					"[rsa][message][id1]" => "queued-eurort:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-eurort:02
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld57>, nrcpts=<fld58>, msgid=<id>, proto=<protocol>, daemon=<fld69>, tls_verify=<fld70>, auth=<fld71>, {relay=[<daddr>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld57>[^,]*),[\s]+nrcpts=(?<fld58>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld69>[^,]*),[\s]+tls_verify=(?<fld70>[^,]*),[\s]+auth=(?<fld71>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-queued-eurort:02"
				add_field => {
					"[event][id]" => "queued-eurort:02"
					"[rsa][message][id1]" => "queued-eurort:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-eurort:03
		# line in RSA: <agent>[<process_id>]: <fld1>: timeout waiting for input from <fld11> during server cmd read
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: timeout waiting for input from %{fld11} during server cmd read" }
				id => "message-queued-eurort:03"
				add_field => {
					"[event][id]" => "queued-eurort:03"
					"[rsa][message][id1]" => "queued-eurort:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "queued-vdedc2v5" {
		# MESSAGE queued-vdedc2v5
		# line in RSA: <agent>[<process_id>]: <fld51>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld51>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-queued-vdedc2v5"
				add_field => {
					"[event][id]" => "queued-vdedc2v5"
					"[rsa][message][id1]" => "queued-vdedc2v5"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE queued-vdedc2v5:01
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld57>, nrcpts=<fld58>, msgid=<id>, proto=<protocol>, daemon=<fld69>, tls_verify=<fld70>, auth=<fld71>, {relay=[<daddr>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld57>[^,]*),[\s]+nrcpts=(?<fld58>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld69>[^,]*),[\s]+tls_verify=(?<fld70>[^,]*),[\s]+auth=(?<fld71>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-queued-vdedc2v5:01"
				add_field => {
					"[event][id]" => "queued-vdedc2v5:01"
					"[rsa][message][id1]" => "queued-vdedc2v5:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sm-msp-queue" {
		# MESSAGE sm-msp-queue
		# line in RSA: <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} version=<fld55>, verify=<fld57>, cipher=<fld58>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+version=(?<fld55>[^,]*),[\s]+verify=(?<fld57>[^,]*),[\s]+cipher=(?<fld58>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-sm-msp-queue"
				add_field => {
					"[event][id]" => "sm-msp-queue"
					"[rsa][message][id1]" => "sm-msp-queue"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sm-msp-queue:01
		# line in RSA: <agent>[<process_id>]: starting daemon (<fld7>): <fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: starting daemon (%{fld7}): %{fld6}" }
				id => "message-sm-msp-queue:01"
				add_field => {
					"[event][id]" => "sm-msp-queue:01"
					"[rsa][message][id1]" => "sm-msp-queue:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sm-msp-queue:02
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, ctladdr=<fld13>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+ctladdr=(?<fld13>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-sm-msp-queue:02"
				add_field => {
					"[event][id]" => "sm-msp-queue:02"
					"[rsa][message][id1]" => "sm-msp-queue:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail" {
		# MESSAGE sendmail:15
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, tls_verify=<fld24>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=<dhost>. [<daddr>],|relay=<dhost>.,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+tls_verify=(?<fld24>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\.]*)\.[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\.]*)\.,)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-sendmail:15"
				add_field => {
					"[event][id]" => "sendmail:15"
					"[rsa][message][id1]" => "sendmail:15"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:14
		# line in RSA: <agent>[<process_id>]: <fld1>: from=<from>, size=<bytes>, class=<fld54>, nrcpts=<fld55>, msgid=<id>, proto=<protocol>, {daemon=<fld69>, tls_verify=<fld70>, auth=<authmethod>|daemon=<fld69>}, {relay=[<daddr>] [<daddr>]|relay=[<daddr>]|relay=<dhost> [<daddr>]|relay=<dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld54>[^,]*),[\s]+nrcpts=(?<fld55>[^,]*),[\s]+msgid=(?<id>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+(daemon=(?<fld69>[^,]*),[\s]+tls_verify=(?<fld70>[^,]*),[\s]+auth=(?<authmethod>[^,]*)|daemon=(?<fld69>[^,]*)),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\]|relay=\[(?<daddr>[^\]]*)\]|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\]|relay=(?<dhost>.*))$" }
				id => "message-sendmail:14"
				add_field => {
					"[event][id]" => "sendmail:14"
					"[rsa][message][id1]" => "sendmail:14"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail
		# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
				id => "message-sendmail"
				add_field => {
					"[event][id]" => "sendmail"
					"[rsa][message][id1]" => "sendmail"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:01
		# line in RSA: <agent>[<process_id>]: <fld1>: available mech=<fld2>, allowed mech=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: available mech=%{fld2}, allowed mech=%{fld3}" }
				id => "message-sendmail:01"
				add_field => {
					"[event][id]" => "sendmail:01"
					"[rsa][message][id1]" => "sendmail:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:02
		# line in RSA: <agent>[<process_id>]: <fld1>: milter=<fld2>, action=<action>, reject=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld1}: milter=%{fld2}, action=%{action}, reject=%{fld3}" }
				id => "message-sendmail:02"
				add_field => {
					"[event][id]" => "sendmail:02"
					"[rsa][message][id1]" => "sendmail:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:03
		# line in RSA: <agent>[<process_id>]: <fld51>: <fld57>: host=<hostname>, addr=<saddr>, reject=<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld51}: %{fld57}: host=%{hostname}, addr=%{saddr}, reject=%{fld3}" }
				id => "message-sendmail:03"
				add_field => {
					"[event][id]" => "sendmail:03"
					"[rsa][message][id1]" => "sendmail:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:08
		# line in RSA: <fld10> <agent>[<process_id>]: <fld1>: Milter <action>: <fld2>: <fld3>: vendor=<fld36> engine=<fld49> definitions=<fld50> signatures=<fld94>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{agent}[%{process_id}]: %{fld1}: Milter %{action}: %{fld2}: %{fld3}: vendor=%{fld36} engine=%{fld49} definitions=%{fld50} signatures=%{fld94}" }
				id => "message-sendmail:08"
				add_field => {
					"[event][id]" => "sendmail:08"
					"[rsa][message][id1]" => "sendmail:08"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:09
		# line in RSA: <fld10> <agent>[<process_id>]: <fld1>: Milter <action>: <fld2>: <fld3>: rule=<rulename> policy=<fld38> score=<fld39> spamscore=<reputation_num> suspectscore=<fld41> phishscore=<fld42> adultscore=<fld44> bulkscore=<fld43> classifier=<fld45> adjust=<fld46> reason=<fld47> scancount=<fld48> engine=<fld49> definitions=<fld50>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{agent}[%{process_id}]: %{fld1}: Milter %{action}: %{fld2}: %{fld3}: rule=%{rulename} policy=%{fld38} score=%{fld39} spamscore=%{reputation_num} suspectscore=%{fld41} phishscore=%{fld42} adultscore=%{fld44} bulkscore=%{fld43} classifier=%{fld45} adjust=%{fld46} reason=%{fld47} scancount=%{fld48} engine=%{fld49} definitions=%{fld50}" }
				id => "message-sendmail:09"
				add_field => {
					"[event][id]" => "sendmail:09"
					"[rsa][message][id1]" => "sendmail:09"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:10
		# line in RSA: <fld10> <agent>[<process_id>]: <fld1>: Milter <action>: {rcpt: |rcpt} <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld10>[^\s]*)[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+Milter[\s]+(?<action>[^:]*):[\s]+(rcpt:[\s]+|rcpt)[\s]+(?<fld2>.*)$" }
				id => "message-sendmail:10"
				add_field => {
					"[event][id]" => "sendmail:10"
					"[rsa][message][id1]" => "sendmail:10"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:11
		# line in RSA: <fld10> <agent>[<process_id>]: STARTTLS=<fld1>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} version=<fld55>, verify=<fld57>, cipher=<fld58>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld10>[^\s]*)[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+STARTTLS=(?<fld1>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+version=(?<fld55>[^,]*),[\s]+verify=(?<fld57>[^,]*),[\s]+cipher=(?<fld58>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-sendmail:11"
				add_field => {
					"[event][id]" => "sendmail:11"
					"[rsa][message][id1]" => "sendmail:11"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:12
		# line in RSA: <fld10> <agent>[<process_id>]: <fld1>: SYSERR(<fld2>): <action>: <event_description> from <from>, from=<fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld10} %{agent}[%{process_id}]: %{fld1}: SYSERR(%{fld2}): %{action}: %{event_description} from %{from}, from=%{fld3}" }
				id => "message-sendmail:12"
				add_field => {
					"[event][id]" => "sendmail:12"
					"[rsa][message][id1]" => "sendmail:12"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:13
		# line in RSA: {<fld10> <agent>[<process_id>]|<agent>[<process_id>]}: <fld1>: SYSERR(<fld2>): <action>: <event_description> file <filename>: <fld3> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld10>[^\s]*)[\s]+(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]|(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]):[\s]+(?<fld1>[^:]*):[\s]+SYSERR\((?<fld2>[^\)]*)\):[\s]+(?<action>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+file[\s]+(?<filename>[^:]*):[\s]+(?<fld3>[^\s]*)[\s]+$" }
				id => "message-sendmail:13"
				add_field => {
					"[event][id]" => "sendmail:13"
					"[rsa][message][id1]" => "sendmail:13"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:04
		# line in RSA: <agent>[<process_id>]: <fld51>: <fld57>:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld51}: %{fld57}:%{event_description}" }
				id => "message-sendmail:04"
				add_field => {
					"[event][id]" => "sendmail:04"
					"[rsa][message][id1]" => "sendmail:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:05
		# line in RSA: <agent>[<process_id>]: <fld51>:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{fld51}:%{event_description}" }
				id => "message-sendmail:05"
				add_field => {
					"[event][id]" => "sendmail:05"
					"[rsa][message][id1]" => "sendmail:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:06
		# line in RSA: <agent>[<process_id>]: AUTH=<authmethod>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} authid=<uid>, mech=<scheme>, bits=<fld59>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+AUTH=(?<authmethod>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+authid=(?<uid>[^,]*),[\s]+mech=(?<scheme>[^,]*),[\s]+bits=(?<fld59>.*)$" }
				id => "message-sendmail:06"
				add_field => {
					"[event][id]" => "sendmail:06"
					"[rsa][message][id1]" => "sendmail:06"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE sendmail:07
		# line in RSA: <agent>[<process_id>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: %{event_description}" }
				id => "message-sendmail:07"
				add_field => {
					"[event][id]" => "sendmail:07"
					"[rsa][message][id1]" => "sendmail:07"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "info" {
		# MESSAGE info:eid_pid_status
		# line in RSA: <fld0> <severity> eid=<fld4> pid=<process_id> status=<fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} eid=%{fld4} pid=%{process_id} status=%{fld29}" }
				id => "message-info:eid_pid_status"
				add_field => {
					"[event][id]" => "info:eid_pid_status"
					"[rsa][message][id1]" => "info:eid_pid_status"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:eid_status
		# line in RSA: <fld0> <severity> eid=<fld4> status=<fld29>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} eid=%{fld4} status=%{fld29}" }
				id => "message-info:eid_status"
				add_field => {
					"[event][id]" => "info:eid_status"
					"[rsa][message][id1]" => "info:eid_status"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:eid
		# line in RSA: <fld0> <severity> eid=<fld4> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} eid=%{fld4} %{info}" }
				id => "message-info:eid"
				add_field => {
					"[event][id]" => "info:eid"
					"[rsa][message][id1]" => "info:eid"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:pid
		# line in RSA: <fld0> <severity> pid=<process_id> <web_method> /<info>: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} pid=%{process_id} %{web_method} /%{info}: %{resultcode}" }
				id => "message-info:pid"
				add_field => {
					"[event][id]" => "info:pid"
					"[rsa][message][id1]" => "info:pid"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> {x=<sessionid1> mod=<agent> cmd=<obj_type> ofrom=<from>|x=<sessionid1> status=<info> restquery_stage=<fld3>|x=<sessionid1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+(x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+ofrom=(?<from>.*)|x=(?<sessionid1>[^\s]*)[\s]+status=(?<info>[^\s]*)[\s]+restquery_stage=(?<fld3>.*)|x=(?<sessionid1>.*))$" }
				id => "message-info"
				add_field => {
					"[event][id]" => "info"
					"[rsa][message][id1]" => "info"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:02
		# line in RSA: <fld0> <severity> mod=<agent> sys=<fld1> evt=<action> active=<fld2> expires=<fld3> msg=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} sys=%{fld1} evt=%{action} active=%{fld2} expires=%{fld3} msg=%{event_description}" }
				id => "message-info:02"
				add_field => {
					"[event][id]" => "info:02"
					"[rsa][message][id1]" => "info:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:03
		# line in RSA: <fld0> <severity> mod=<agent> server=<saddr> elapsed=<duration_string> avgtime=<fld2> qname=<fld3> qtype=<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} mod=%{agent} server=%{saddr} elapsed=%{duration_string} avgtime=%{fld2} qname=%{fld3} qtype=%{fld4}" }
				id => "message-info:03"
				add_field => {
					"[event][id]" => "info:03"
					"[rsa][message][id1]" => "info:03"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:01
		# line in RSA: <fld0> <severity> <web_method> /<info>: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} %{web_method} /%{info}: %{resultcode}" }
				id => "message-info:01"
				add_field => {
					"[event][id]" => "info:01"
					"[rsa][message][id1]" => "info:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:04
		# line in RSA: <fld0> <severity> mod=<agent>  sys=<fld1> {evt=<action> msg=<event_description>|evt=<action>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+sys=(?<fld1>[^\s]*)[\s]+(evt=(?<action>[^\s]*)[\s]+msg=(?<event_description>.*)|evt=(?<action>.*))$" }
				id => "message-info:04"
				add_field => {
					"[event][id]" => "info:04"
					"[rsa][message][id1]" => "info:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE info:05
		# line in RSA: <fld0> <severity> mod=<agent> {type=<fld6> cmd=<obj_type> id=<fld5>|cmd=<obj_type>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+(type=(?<fld6>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+id=(?<fld5>.*)|cmd=(?<obj_type>.*))$" }
				id => "message-info:05"
				add_field => {
					"[event][id]" => "info:05"
					"[rsa][message][id1]" => "info:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "note" {
		# MESSAGE note:pid
		# line in RSA: <fld0> <severity> pid=<process_id> <web_method> /<info>: <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} pid=%{process_id} %{web_method} /%{info}: %{resultcode}" }
				id => "message-note:pid"
				add_field => {
					"[event][id]" => "note:pid"
					"[rsa][message][id1]" => "note:pid"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE note:01
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> module=<agent> action=<action> size=<bytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} module=%{agent} action=%{action} size=%{bytes}" }
				id => "message-note:01"
				add_field => {
					"[event][id]" => "note:01"
					"[rsa][message][id1]" => "note:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> secprofile_name=<fld3> rcpts=<dclass_counter2> duration=<duration_string>
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} secprofile_name=%{fld3} rcpts=%{dclass_counter2} duration=%{duration_string}" }
			id => "msgParserId124"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA: <fld0> <severity> eid=<fld4> module=<agent> age=<fld6> limit=<fld31>
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} eid=%{fld4} module=%{agent} age=%{fld6} limit=%{fld31}" }
			id => "msgParserId125"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "warn" {
		# MESSAGE warn
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> eid=<fld4> result=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} eid=%{fld4} result=%{result}" }
				id => "message-warn"
				add_field => {
					"[event][id]" => "warn"
					"[rsa][message][id1]" => "warn"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE warn:01
		# line in RSA: <fld0> <severity> eid=<fld4> status="<event_state> file: <filename>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} eid=%{fld4} status=\"%{event_state} file: %{filename}\"" }
				id => "message-warn:01"
				add_field => {
					"[event][id]" => "warn:01"
					"[rsa][message][id1]" => "warn:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE warn:02
		# line in RSA: <fld0> <severity> eid=<fld4> status="<event_state> file <filename> does not contain enough (or correct) info. Fix this or remove the file."
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} eid=%{fld4} status=\"%{event_state} file %{filename} does not contain enough (or correct) info. Fix this or remove the file.\"" }
				id => "message-warn:02"
				add_field => {
				"event_description" => "does not contain enough (or correct) info. Fix this or remove the file"
					"[event][id]" => "warn:02"
					"[rsa][message][id1]" => "warn:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA: <agent>[<process_id>]: <fld1>: to=<to>, delay=<fld53>, xdelay=<fld54>, mailer=<fld55>, pri=<fld23>, {relay=[<daddr>] [<daddr>],|relay=[<daddr>],|relay=<dhost> [<daddr>],|relay=<dhost>,} dsn=<resultcode>, stat=<info>
	else if [logstash][msgparser][id] == "msgParserId101" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld1>[^:]*):[\s]+to=(?<to>[^,]*),[\s]+delay=(?<fld53>[^,]*),[\s]+xdelay=(?<fld54>[^,]*),[\s]+mailer=(?<fld55>[^,]*),[\s]+pri=(?<fld23>[^,]*),[\s]+(relay=\[(?<daddr>[^\]]*)\][\s]+\[(?<daddr>[^\]]*)\],|relay=\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^\s]*)[\s]+\[(?<daddr>[^\]]*)\],|relay=(?<dhost>[^,]*),)[\s]+dsn=(?<resultcode>[^,]*),[\s]+stat=(?<info>.*)$" }
			id => "msgParserId101"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
			id => "msgParserId48"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId129
	# line in RSA: <fld0> <severity> s=<sessionid> mod=<agent> ttl=<fld1> {reply="\"<fld2> rscore=<fld3>\""|reply="<fld2>"}
	else if [logstash][msgparser][id] == "msgParserId129" {
		grok {
			match => { "message" => "^(?<fld0>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+s=(?<sessionid>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+ttl=(?<fld1>[^\s]*)[\s]+(reply=\"\\\"(?<fld2>[^\s]*)[\s]+rscore=(?<fld3>[^\\]*)\\\"\"|reply=\"(?<fld2>[^\"]*)\")$" }
			id => "msgParserId129"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dkimv_run" {
		# MESSAGE dkimv_run:signature
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> signature=<fld1> identity=<sigid_string> host=<hostname> result=<result> result_detail=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} signature=%{fld1} identity=%{sigid_string} host=%{hostname} result=%{result} result_detail=%{fld2}" }
				id => "message-dkimv_run:signature"
				add_field => {
					"[event][id]" => "dkimv_run:signature"
					"[rsa][message][id1]" => "dkimv_run:signature"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dkimv_run:status
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> status="<info>, <event_state>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} status=\"%{info}, %{event_state}\"" }
				id => "message-dkimv_run:status"
				add_field => {
					"[event][id]" => "dkimv_run:status"
					"[rsa][message][id1]" => "dkimv_run:status"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dkimv_type" {
		# MESSAGE dkimv_type
		# line in RSA: <fld0>: <severity> mod=<agent> unexpected response type=<fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0}: %{severity} mod=%{agent} unexpected response type=%{fld1}" }
				id => "message-dkimv_type"
				add_field => {
				"result" => "unexpected response"
					"[event][id]" => "dkimv_type"
					"[rsa][message][id1]" => "dkimv_type"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dkimv_type:01
		# line in RSA: <fld0>: <severity> mod=<agent> type=<fld1> cmd=<obj_type> id=<fld5> publickey_cache_entries=<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0}: %{severity} mod=%{agent} type=%{fld1} cmd=%{obj_type} id=%{fld5} publickey_cache_entries=%{fld6}" }
				id => "message-dkimv_type:01"
				add_field => {
					"[event][id]" => "dkimv_type:01"
					"[rsa][message][id1]" => "dkimv_type:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dmarc_run" {
		# MESSAGE dmarc_run:rule
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-dmarc_run:rule"
				add_field => {
					"[event][id]" => "dmarc_run:rule"
					"[rsa][message][id1]" => "dmarc_run:rule"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE dmarc_run:result
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> result=<result> result_detail=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} result=%{result} result_detail=%{fld2}" }
				id => "message-dmarc_run:result"
				add_field => {
					"[event][id]" => "dmarc_run:result"
					"[rsa][message][id1]" => "dmarc_run:result"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA: <fld0>: <severity> mod=<agent> type=<fld1> cmd=<obj_type> id=<fld5> policy_cache_entries=<fld6>
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "%{fld0}: %{severity} mod=%{agent} type=%{fld1} cmd=%{obj_type} id=%{fld5} policy_cache_entries=%{fld6}" }
			id => "msgParserId136"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "spf_run" {
		# MESSAGE spf_run:rule
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> rule=<rulename> duration=<duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} rule=%{rulename} duration=%{duration_string}" }
				id => "message-spf_run:rule"
				add_field => {
					"[event][id]" => "spf_run:rule"
					"[rsa][message][id1]" => "spf_run:rule"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE spf_run:cmd
		# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> cmd=<obj_type> result=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} cmd=%{obj_type} result=%{result}" }
				id => "message-spf_run:cmd"
				add_field => {
					"[event][id]" => "spf_run:cmd"
					"[rsa][message][id1]" => "spf_run:cmd"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA: <fld0> <severity> s=<sessionid> m=<mail_id> x=<sessionid1> action=<action> score=<fld39> submsgadjust=<fld53> spamscore=<reputation_num> suspectscore=<fld41> malwarescore=<fld49> phishscore=<fld42> adultscore=<fld44> bulkscore=<fld43> tests=<fld52>
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} s=%{sessionid} m=%{mail_id} x=%{sessionid1} action=%{action} score=%{fld39} submsgadjust=%{fld53} spamscore=%{reputation_num} suspectscore=%{fld41} malwarescore=%{fld49} phishscore=%{fld42} adultscore=%{fld44} bulkscore=%{fld43} tests=%{fld52}" }
			id => "msgParserId138"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId139
	# line in RSA: <fld0> <severity> mod=<agent> cmd=<obj_type> authscope=<fld5> err=<fld58>
	else if [logstash][msgparser][id] == "msgParserId139" {
		dissect {
			mapping => { "message" => "%{fld0} %{severity} mod=%{agent} cmd=%{obj_type} authscope=%{fld5} err=%{fld58}" }
			id => "msgParserId139"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "filter_instance1" {
		# MESSAGE filter_instance1:01
		# line in RSA: mod=<agent> type=<fld1> cmd=<obj_type> id=<id> load smartid ccard 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "mod=%{agent} type=%{fld1} cmd=%{obj_type} id=%{id} load smartid ccard" }
				id => "message-filter_instance1:01"
				add_field => {
				"event_description" => "load smartid ccard"
					"[event][id]" => "filter_instance1:01"
					"[rsa][message][id1]" => "filter_instance1:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE filter_instance1:02
		# line in RSA: mod=<agent> type=<fld1> cmd=<obj_type> id=<id> load smartid jcb 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "mod=%{agent} type=%{fld1} cmd=%{obj_type} id=%{id} load smartid jcb" }
				id => "message-filter_instance1:02"
				add_field => {
				"event_description" => "load smartid jcb"
					"[event][id]" => "filter_instance1:02"
					"[rsa][message][id1]" => "filter_instance1:02"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE filter_instance1:03
		# line in RSA: s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> attachments=<dclass_counter1> rcpts=<dclass_counter2> routes=<fld4> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject="<subject>" {spamscore=<reputation_num> virusname=<threat_name> duration=<duration_string> elapsed=<fld16>|duration=<duration_string> elapsed=<fld16>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^s=(?<sessionid>[^\s]*)[\s]+m=(?<mail_id>[^\s]*)[\s]+x=(?<sessionid1>[^\s]*)[\s]+mod=(?<agent>[^\s]*)[\s]+cmd=(?<obj_type>[^\s]*)[\s]+module=(?<event_source>[^\s]*)[\s]+rule=(?<rulename>[^\s]*)[\s]+action=(?<action>[^\s]*)[\s]+attachments=(?<dclass_counter1>[^\s]*)[\s]+rcpts=(?<dclass_counter2>[^\s]*)[\s]+routes=(?<fld4>[^\s]*)[\s]+size=(?<bytes>[^\s]*)[\s]+guid=(?<fld14>[^\s]*)[\s]+hdr_mid=(?<id>[^\s]*)[\s]+qid=(?<fld15>[^\s]*)[\s]+subject=\"(?<subject>[^\"]*)\"[\s]+(spamscore=(?<reputation_num>[^\s]*)[\s]+virusname=(?<threat_name>[^\s]*)[\s]+duration=(?<duration_string>[^\s]*)[\s]+elapsed=(?<fld16>[^\s]*)|duration=(?<duration_string>[^\s]*)[\s]+elapsed=(?<fld16>[^\s]*))[\s]+$" }
				id => "message-filter_instance1:03"
				add_field => {
					"[event][id]" => "filter_instance1:03"
					"[rsa][message][id1]" => "filter_instance1:03"
					"[event][categoryid]" => "1207020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE filter_instance1:04
		# line in RSA: s=<sessionid> mod=<agent> cmd=<obj_type> module=<event_source> rule=<rulename> action=<action> helo=<fld32> msgs=<fld33> rcpts=<dclass_counter2> routes=<fld4> duration=<duration_string> elapsed=<fld16>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "s=%{sessionid} mod=%{agent} cmd=%{obj_type} module=%{event_source} rule=%{rulename} action=%{action} helo=%{fld32} msgs=%{fld33} rcpts=%{dclass_counter2} routes=%{fld4} duration=%{duration_string} elapsed=%{fld16}" }
				id => "message-filter_instance1:04"
				add_field => {
					"[event][id]" => "filter_instance1:04"
					"[rsa][message][id1]" => "filter_instance1:04"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE filter_instance1:05
		# line in RSA: s=<sessionid> m=<mail_id> x=<sessionid1> mod=<agent> cmd=<obj_type> header.from="\"<info>\" <fld4> <<<user_address>>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "s=%{sessionid} m=%{mail_id} x=%{sessionid1} mod=%{agent} cmd=%{obj_type} header.from=\"\\"%{info}\\" %{fld4} <%{user_address}>\"" }
				id => "message-filter_instance1:05"
				add_field => {
					"[event][id]" => "filter_instance1:05"
					"[rsa][message][id1]" => "filter_instance1:05"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE filter_instance1
		# line in RSA: mod=<agent> cmd=<obj_type> type=<fld1> id=<id> s=<sessionid> m=<mail_id> x=<sessionid1> method=<fld37> vendor=<fld36> engine=<fld49> definitions=<fld50> signatures=<fld94> result=<result> header.from=<fld40> smtp.mailfrom=<fld44> score=<fld39> submsgadjust=<fld53> dict=<fld87> file=<filename> sys=<fld1> evt=<action> active=<fld2> expires=<fld3> msg=<msg> user=<username> delegate-for=<fld5> ksurl=<fld7> duration=<duration_string> sig=<fld60> uid=<uid> pid=<process_id> realm=<fld61> server=<saddr> elapsed=<duration_string> avgtime=<fld2> qname=<fld3> qtype=<fld4> ip=<hostip> country=<location_country> lip=<fld24> prot=<fld25> hops_active=<fld26> routes=<fld4> notroutes=<fld18> perlwait=<fld27> host=<hostname> resolve=<fld28> reverse=<fld13> value=<context> module=<event_source> rule=<rulename> action=<action> attachments=<fld80> rcpts=<fld59> size=<bytes> guid=<fld14> hdr_mid=<id> qid=<fld15> subject=<subject> tls_version= <fld84> verify=<fld57> cipher=<s_cipher> cipher_bits=<fld59> tls=<fld60> r=<event_counter> verified=<fld3> lint=<fld33> mime=<content_type> omime=<fld7> oext=<fld8> corrupted=<fld9> protected=<fld10> threshold=<fld11> profile=<fld52> alert=<fld53> helo=<fld32> msgs=<fld76> install_dir=<directory> instance=<fld90> maxfd=<fld91> release=<fld92> publickey_cache_entries=<fld6> policy_cache_entries=<fld6> addr=<saddr> from=<from> rcpt=<to> suborg=<fld22> rcpt_routes=<fld28> rcpt_notroutes=<fld29> data_routes=<fld31> data_notroutes=<fld32> query=<fld38> record=<fld39> result_detail=<fld74> result_record=<fld2> virtual=<fld11> a=<fld12> version=<version> dkimresult=<fld65> spfresult=<fld68> num_domains=<fld53> num_domains_to_lookup=<fld40> policy=<fld48> suspectscore=<fld41> malwarescore=<fld41> phishscore=<fld42> bulkscore=<fld43> spamscore=<reputation_num> adjustscore=<fld54> adultscore=<fld44> classifier=<fld45> adjust=<fld46> mlxscore=<fld94> mlxlogscore=<fld95> reason=<fld47> scancount=<fld18> tests=<fld52> sha256=<checksum> rewritten=<fld17> X-Proofpoint-Spam-Details=<fld71> hops-ip=<fld61> virusname=<threat_name> header-size=<bytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "mod=%{agent} cmd=%{obj_type} type=%{fld1} id=%{id} s=%{sessionid} m=%{mail_id} x=%{sessionid1} method=%{fld37} vendor=%{fld36} engine=%{fld49} definitions=%{fld50} signatures=%{fld94} result=%{result} header.from=%{fld40} smtp.mailfrom=%{fld44} score=%{fld39} submsgadjust=%{fld53} dict=%{fld87} file=%{filename} sys=%{fld1} evt=%{action} active=%{fld2} expires=%{fld3} msg=%{msg} user=%{username} delegate-for=%{fld5} ksurl=%{fld7} duration=%{duration_string} sig=%{fld60} uid=%{uid} pid=%{process_id} realm=%{fld61} server=%{saddr} elapsed=%{duration_string} avgtime=%{fld2} qname=%{fld3} qtype=%{fld4} ip=%{hostip} country=%{location_country} lip=%{fld24} prot=%{fld25} hops_active=%{fld26} routes=%{fld4} notroutes=%{fld18} perlwait=%{fld27} host=%{hostname} resolve=%{fld28} reverse=%{fld13} value=%{context} module=%{event_source} rule=%{rulename} action=%{action} attachments=%{fld80} rcpts=%{fld59} size=%{bytes} guid=%{fld14} hdr_mid=%{id} qid=%{fld15} subject=%{subject} tls_version= %{fld84} verify=%{fld57} cipher=%{s_cipher} cipher_bits=%{fld59} tls=%{fld60} r=%{event_counter} verified=%{fld3} lint=%{fld33} mime=%{content_type} omime=%{fld7} oext=%{fld8} corrupted=%{fld9} protected=%{fld10} threshold=%{fld11} profile=%{fld52} alert=%{fld53} helo=%{fld32} msgs=%{fld76} install_dir=%{directory} instance=%{fld90} maxfd=%{fld91} release=%{fld92} publickey_cache_entries=%{fld6} policy_cache_entries=%{fld6} addr=%{saddr} from=%{from} rcpt=%{to} suborg=%{fld22} rcpt_routes=%{fld28} rcpt_notroutes=%{fld29} data_routes=%{fld31} data_notroutes=%{fld32} query=%{fld38} record=%{fld39} result_detail=%{fld74} result_record=%{fld2} virtual=%{fld11} a=%{fld12} version=%{version} dkimresult=%{fld65} spfresult=%{fld68} num_domains=%{fld53} num_domains_to_lookup=%{fld40} policy=%{fld48} suspectscore=%{fld41} malwarescore=%{fld41} phishscore=%{fld42} bulkscore=%{fld43} spamscore=%{reputation_num} adjustscore=%{fld54} adultscore=%{fld44} classifier=%{fld45} adjust=%{fld46} mlxscore=%{fld94} mlxlogscore=%{fld95} reason=%{fld47} scancount=%{fld18} tests=%{fld52} sha256=%{checksum} rewritten=%{fld17} X-Proofpoint-Spam-Details=%{fld71} hops-ip=%{fld61} virusname=%{threat_name} header-size=%{bytes}" }
				id => "message-filter_instance1"
				add_field => {
					"[event][id]" => "filter_instance1"
					"[rsa][message][id1]" => "filter_instance1"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-proofpointmsg.json"
#			template_name => "proofpoint_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
