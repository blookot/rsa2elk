# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "rsacm"
			"[observer][name]" => "RSA Certificate Manager"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %rsacm-4: <hfld1>, <hfld2>, <messageid>, <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%rsacm\-4:[\s]+(?<hfld1>[^,]*),[\s]+(?<message>(?<hfld2>[^,]*),[\s]+(?<messageid>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %rsacm-4:  <hfld1>, <hfld2>, <messageid>, <!payload:hfld2>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%rsacm\-4:[\s]+(?<hfld1>[^,]*),[\s]+(?<message>(?<hfld2>[^,]*),[\s]+(?<messageid>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %rsacm-4:  <messageid><!payload:messageid>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_rsacmmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: Success
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "Success" }
			id => "msgParserId0"
			add_field => {
				"event_description" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ATTEMPT" {
		# MESSAGE ATTEMPT:01
		# line in RSA: <event_source>, <fld44>, Log Server started., <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Log Server started., %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:01"
				add_field => {
				"event_description" => "Log Server Started "
					"[event][id]" => "ATTEMPT:01"
					"[rsa][message][id1]" => "ATTEMPT:01"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:02
		# line in RSA: <event_source>, <fld44>, Change the secure logging configuration:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Change the secure logging configuration:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:02"
				add_field => {
				"event_description" => "Save Current Logging Configuration "
					"[event][id]" => "ATTEMPT:02"
					"[rsa][message][id1]" => "ATTEMPT:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:03
		# line in RSA: <event_source>, <fld44>, Change the secure logging configuration failed:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Change the secure logging configuration failed:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:03"
				add_field => {
				"event_description" => "Save Current Logging Configuration "
					"[event][id]" => "ATTEMPT:03"
					"[rsa][message][id1]" => "ATTEMPT:03"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:04
		# line in RSA: <event_source>, <fld44>, Change the status of a request object:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Change the status of a request object:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:04"
				add_field => {
				"event_description" => "Change the status of a certificate request by a Vettor or an Administrator "
					"[event][id]" => "ATTEMPT:04"
					"[rsa][message][id1]" => "ATTEMPT:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:06
		# line in RSA: <event_source>, <fld44>, create administrator certificate: request id: <fld4>;  issuing CA md5: <fld5>;  certificate presented: <fld1>;  With administrative roles: <user_role>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, create administrator certificate: request id: %{fld4};  issuing CA md5: %{fld5};  certificate presented: %{fld1};  With administrative roles: %{user_role}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:06"
				add_field => {
				"event_description" => "Create an Administrative Certificate "
					"[event][id]" => "ATTEMPT:06"
					"[rsa][message][id1]" => "ATTEMPT:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:07
		# line in RSA: <event_source>, <fld44>, Certificate signing; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Certificate signing; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:07"
				add_field => {
				"event_description" => "Sign an end-entity Certificate "
					"[event][id]" => "ATTEMPT:07"
					"[rsa][message][id1]" => "ATTEMPT:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:08
		# line in RSA: <event_source>, <fld44>, Receive a certificate request:certificate presented: none, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Receive a certificate request:certificate presented: none, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:08"
				add_field => {
				"event_description" => "Receive a Certificate request "
					"[event][id]" => "ATTEMPT:08"
					"[rsa][message][id1]" => "ATTEMPT:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:09
		# line in RSA: <event_source>, <fld44>, Apply jurisdiction changes:certificate presented: <fld8>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Apply jurisdiction changes:certificate presented: %{fld8}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:09"
				add_field => {
				"event_description" => "Apply Jurisdiction changes "
					"[event][id]" => "ATTEMPT:09"
					"[rsa][message][id1]" => "ATTEMPT:09"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:10
		# line in RSA: <event_source>, <fld44>, generate private and public keypair: certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, generate private and public keypair: certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:10"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "ATTEMPT:10"
					"[rsa][message][id1]" => "ATTEMPT:10"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:11
		# line in RSA: <event_source>, <fld44>, CA creation; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, CA creation; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:11"
				add_field => {
				"event_description" => "Create a CA "
					"[event][id]" => "ATTEMPT:11"
					"[rsa][message][id1]" => "ATTEMPT:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:12
		# line in RSA: <event_source>, <fld44>, CA certificate signing; CA nickname: <fld9>; request id: <fld4>; issuing CA md5:<fld5>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, CA certificate signing; CA nickname: %{fld9}; request id: %{fld4}; issuing CA md5:%{fld5}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:12"
				add_field => {
				"event_description" => "Sign a CA Certificate "
					"[event][id]" => "ATTEMPT:12"
					"[rsa][message][id1]" => "ATTEMPT:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:13
		# line in RSA: <event_source>, <fld44>, CA certificate signing: succeeded; CA nickname: <fld9>; request id: <fld4>; issuing CA md5:<fld5>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, CA certificate signing: succeeded; CA nickname: %{fld9}; request id: %{fld4}; issuing CA md5:%{fld5}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:13"
				add_field => {
				"event_description" => "Sign a CA Certificate "
					"[event][id]" => "ATTEMPT:13"
					"[rsa][message][id1]" => "ATTEMPT:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:14
		# line in RSA: <event_source>, <fld44>, Xudad DB full backup Event Start, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Xudad DB full backup Event Start, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:14"
				add_field => {
				"event_description" => "Database full backup "
					"[event][id]" => "ATTEMPT:14"
					"[rsa][message][id1]" => "ATTEMPT:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:15
		# line in RSA: <event_source>, <fld44>, Xudad DB incremental backup Event Start, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Xudad DB incremental backup Event Start, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:15"
				add_field => {
				"event_description" => "Database incremental backup "
					"[event][id]" => "ATTEMPT:15"
					"[rsa][message][id1]" => "ATTEMPT:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:16
		# line in RSA: <event_source>, <fld44>, Audit log copy:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Audit log copy:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:16"
				add_field => {
				"event_description" => "Copy the contents of a Secure Log Server audit log "
					"[event][id]" => "ATTEMPT:16"
					"[rsa][message][id1]" => "ATTEMPT:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:17
		# line in RSA: <event_source>, <fld44>, Trust a remote certificate:certificate presented: <fld1>; <fld5>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Trust a remote certificate:certificate presented: %{fld1}; %{fld5}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:17"
				add_field => {
				"event_description" => "Trust a Remote CA "
					"[event][id]" => "ATTEMPT:17"
					"[rsa][message][id1]" => "ATTEMPT:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:18
		# line in RSA: <event_source>, <fld44>, Trust a remote certificate:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Trust a remote certificate:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:18"
				add_field => {
				"event_description" => "Trust a Remote CA "
					"[event][id]" => "ATTEMPT:18"
					"[rsa][message][id1]" => "ATTEMPT:18"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:19
		# line in RSA: <event_source>, <fld44>, Trust a remote certificate failed:certificate presented: <fld1>; <fld5> already exists, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Trust a remote certificate failed:certificate presented: %{fld1}; %{fld5} already exists, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:19"
				add_field => {
				"event_description" => "Trust a Remote CA "
					"[event][id]" => "ATTEMPT:19"
					"[rsa][message][id1]" => "ATTEMPT:19"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:20
		# line in RSA: <event_source>, <fld44>, Modify Web ACL:certificate presented: <fld1> , <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Modify Web ACL:certificate presented: %{fld1} , %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:20"
				add_field => {
				"event_description" => "Modify a Web ACL "
					"[event][id]" => "ATTEMPT:20"
					"[rsa][message][id1]" => "ATTEMPT:20"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:21
		# line in RSA: <event_source>, <fld44>, Create custom certificate attribute:certificate presented: <fld5>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Create custom certificate attribute:certificate presented: %{fld5}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:21"
				add_field => {
				"event_description" => "Create custom attribute "
					"[event][id]" => "ATTEMPT:21"
					"[rsa][message][id1]" => "ATTEMPT:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:22
		# line in RSA: <event_source>, <fld44>, Apply profile changes:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Apply profile changes:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:22"
				add_field => {
				"event_description" => "Apply Certificate Profile changes "
					"[event][id]" => "ATTEMPT:22"
					"[rsa][message][id1]" => "ATTEMPT:22"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:23
		# line in RSA: <event_source>, <fld44>, Log Server stopped., <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Log Server stopped., %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:23"
				add_field => {
				"event_description" => "Log Server stopped. "
					"[event][id]" => "ATTEMPT:23"
					"[rsa][message][id1]" => "ATTEMPT:23"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:24
		# line in RSA: <event_source>, <fld44>, Final entry., <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Final entry., %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:24"
				add_field => {
				"event_description" => "Final entry. "
					"[event][id]" => "ATTEMPT:24"
					"[rsa][message][id1]" => "ATTEMPT:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:25
		# line in RSA: <event_source>, <fld44>, create new CA: CA nickname: <fld9>;  certDN: <dn>;  issuing CA md5: <fld5>;  key id: <fld10>;  certificate presented:<fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, create new CA: CA nickname: %{fld9};  certDN: %{dn};  issuing CA md5: %{fld5};  key id: %{fld10};  certificate presented:%{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:25"
				add_field => {
				"event_description" => "Create a CA "
					"[event][id]" => "ATTEMPT:25"
					"[rsa][message][id1]" => "ATTEMPT:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:26
		# line in RSA: <event_source>, <fld44>, generate private and public keypair: key id: <fld9>;  certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, generate private and public keypair: key id: %{fld9};  certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:26"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "ATTEMPT:26"
					"[rsa][message][id1]" => "ATTEMPT:26"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:27
		# line in RSA: <event_source>, <fld44>, Keypair generation: succeeded; key type: <encryption_type>; key size: <cert_keysize>; key id: <fld10>; certificate presented: <fld1>; Public Key (PEM) : <fld2>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Keypair generation: succeeded; key type: %{encryption_type}; key size: %{cert_keysize}; key id: %{fld10}; certificate presented: %{fld1}; Public Key (PEM) : %{fld2}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:27"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "ATTEMPT:27"
					"[rsa][message][id1]" => "ATTEMPT:27"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:28
		# line in RSA: <event_source>, <fld44>, Keypair generation; key type: <encryption_type>; key size: <cert_keysize>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Keypair generation; key type: %{encryption_type}; key size: %{cert_keysize}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:28"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "ATTEMPT:28"
					"[rsa][message][id1]" => "ATTEMPT:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:29
		# line in RSA: <event_source>, <fld44>, Keypair generation: succeeded; key type: <encryption_type>; key size: <cert_keysize>; key id: <fld10>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Keypair generation: succeeded; key type: %{encryption_type}; key size: %{cert_keysize}; key id: %{fld10}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:29"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "ATTEMPT:29"
					"[rsa][message][id1]" => "ATTEMPT:29"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:30
		# line in RSA: <event_source>, <fld44>, Apply jurisdiction changes; certificate presented: <fld8>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Apply jurisdiction changes; certificate presented: %{fld8}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:30"
				add_field => {
				"event_description" => "Apply Jurisdiction changes "
					"[event][id]" => "ATTEMPT:30"
					"[rsa][message][id1]" => "ATTEMPT:30"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:31
		# line in RSA: <event_source>, <fld1>, Xudad DB incremental backup Event Completed: Succeed, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld1}, Xudad DB incremental backup Event Completed: Succeed, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:31"
				add_field => {
				"event_description" => "Xudad DB incremental backup Event "
					"[event][id]" => "ATTEMPT:31"
					"[rsa][message][id1]" => "ATTEMPT:31"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:32
		# line in RSA: <event_source>, <fld1>, Xudad DB full backup Event Completed: Succeed, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld1}, Xudad DB full backup Event Completed: Succeed, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:32"
				add_field => {
				"event_description" => "Xudad DB full backup Event "
					"[event][id]" => "ATTEMPT:32"
					"[rsa][message][id1]" => "ATTEMPT:32"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:33
		# line in RSA: <event_source>, <fld44>, update CA certificate:<fld2>; <space> certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, update CA certificate:%{fld2}; %{space} certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:33"
				add_field => {
					"[event][id]" => "ATTEMPT:33"
					"[rsa][message][id1]" => "ATTEMPT:33"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE ATTEMPT:34
		# line in RSA: <event_source>, <fld44>, Signing recovery operator certificate; <space> certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Signing recovery operator certificate; %{space} certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-ATTEMPT:34"
				add_field => {
					"[event][id]" => "ATTEMPT:34"
					"[rsa][message][id1]" => "ATTEMPT:34"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "COMPLETION" {
		# MESSAGE COMPLETION:01
		# line in RSA: <event_source>, <fld44>, Log Server started., <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Log Server started., %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:01"
				add_field => {
				"event_description" => "Log Server Started "
					"[event][id]" => "COMPLETION:01"
					"[rsa][message][id1]" => "COMPLETION:01"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:02
		# line in RSA: <event_source>, <fld44>, Change the secure logging configuration:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Change the secure logging configuration:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:02"
				add_field => {
				"event_description" => "Save Current Logging Configuration "
					"[event][id]" => "COMPLETION:02"
					"[rsa][message][id1]" => "COMPLETION:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:03
		# line in RSA: <event_source>, <fld44>, Change the secure logging configuration failed:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Change the secure logging configuration failed:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:03"
				add_field => {
				"event_description" => "Save Current Logging Configuration "
					"[event][id]" => "COMPLETION:03"
					"[rsa][message][id1]" => "COMPLETION:03"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:04
		# line in RSA: <event_source>, <fld44>, Change the status of a request object:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Change the status of a request object:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:04"
				add_field => {
				"event_description" => "Change the status of a certificate request by a Vettor or an Administrator "
					"[event][id]" => "COMPLETION:04"
					"[rsa][message][id1]" => "COMPLETION:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:06
		# line in RSA: <event_source>, <fld44>, create administrator certificate: request id: <fld4>;  issuing CA md5: <fld5>;  certificate presented: <fld1>;  With administrative roles: <user_role>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, create administrator certificate: request id: %{fld4};  issuing CA md5: %{fld5};  certificate presented: %{fld1};  With administrative roles: %{user_role}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:06"
				add_field => {
				"event_description" => "Create an Administrative Certificate "
					"[event][id]" => "COMPLETION:06"
					"[rsa][message][id1]" => "COMPLETION:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:07
		# line in RSA: <event_source>, <fld44>, Certificate signing; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Certificate signing; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:07"
				add_field => {
				"event_description" => "Sign an end-entity Certificate "
					"[event][id]" => "COMPLETION:07"
					"[rsa][message][id1]" => "COMPLETION:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:08
		# line in RSA: <event_source>, <fld44>, Receive a certificate request:certificate presented: none, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Receive a certificate request:certificate presented: none, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:08"
				add_field => {
				"event_description" => "Receive a Certificate request "
					"[event][id]" => "COMPLETION:08"
					"[rsa][message][id1]" => "COMPLETION:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:09
		# line in RSA: <event_source>, <fld44>, Apply jurisdiction changes:certificate presented: <fld8>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Apply jurisdiction changes:certificate presented: %{fld8}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:09"
				add_field => {
				"event_description" => "Apply Jurisdiction changes "
					"[event][id]" => "COMPLETION:09"
					"[rsa][message][id1]" => "COMPLETION:09"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:10
		# line in RSA: <event_source>, <fld44>, generate private and public keypair: certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, generate private and public keypair: certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:10"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "COMPLETION:10"
					"[rsa][message][id1]" => "COMPLETION:10"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:11
		# line in RSA: <event_source>, <fld44>, CA creation; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, CA creation; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:11"
				add_field => {
				"event_description" => "Create a CA "
					"[event][id]" => "COMPLETION:11"
					"[rsa][message][id1]" => "COMPLETION:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:12
		# line in RSA: <event_source>, <fld44>, CA certificate signing; CA nickname: <fld9>; request id: <fld4>; issuing CA md5:<fld5>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, CA certificate signing; CA nickname: %{fld9}; request id: %{fld4}; issuing CA md5:%{fld5}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:12"
				add_field => {
				"event_description" => "Sign a CA Certificate "
					"[event][id]" => "COMPLETION:12"
					"[rsa][message][id1]" => "COMPLETION:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:13
		# line in RSA: <event_source>, <fld44>, CA certificate signing: succeeded; CA nickname: <fld9>; request id: <fld4>; issuing CA md5:<fld5>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, CA certificate signing: succeeded; CA nickname: %{fld9}; request id: %{fld4}; issuing CA md5:%{fld5}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:13"
				add_field => {
				"event_description" => "Sign a CA Certificate "
					"[event][id]" => "COMPLETION:13"
					"[rsa][message][id1]" => "COMPLETION:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:14
		# line in RSA: <event_source>, <fld44>, Xudad DB full backup Event Start, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Xudad DB full backup Event Start, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:14"
				add_field => {
				"event_description" => "Database full backup "
					"[event][id]" => "COMPLETION:14"
					"[rsa][message][id1]" => "COMPLETION:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:15
		# line in RSA: <event_source>, <fld44>, Xudad DB incremental backup Event Start, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Xudad DB incremental backup Event Start, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:15"
				add_field => {
				"event_description" => "Database incremental backup "
					"[event][id]" => "COMPLETION:15"
					"[rsa][message][id1]" => "COMPLETION:15"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:16
		# line in RSA: <event_source>, <fld44>, Audit log copy:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Audit log copy:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:16"
				add_field => {
				"event_description" => "Copy the contents of a Secure Log Server audit log "
					"[event][id]" => "COMPLETION:16"
					"[rsa][message][id1]" => "COMPLETION:16"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:17
		# line in RSA: <event_source>, <fld44>, Trust a remote certificate:certificate presented: <fld1>; <fld5>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Trust a remote certificate:certificate presented: %{fld1}; %{fld5}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:17"
				add_field => {
				"event_description" => "Trust a Remote CA "
					"[event][id]" => "COMPLETION:17"
					"[rsa][message][id1]" => "COMPLETION:17"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:18
		# line in RSA: <event_source>, <fld44>, Trust a remote certificate:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Trust a remote certificate:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:18"
				add_field => {
				"event_description" => "Trust a Remote CA "
					"[event][id]" => "COMPLETION:18"
					"[rsa][message][id1]" => "COMPLETION:18"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:19
		# line in RSA: <event_source>, <fld44>, Trust a remote certificate failed:certificate presented: <fld1>; <fld5> already exists, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Trust a remote certificate failed:certificate presented: %{fld1}; %{fld5} already exists, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:19"
				add_field => {
				"event_description" => "Trust a Remote CA "
					"[event][id]" => "COMPLETION:19"
					"[rsa][message][id1]" => "COMPLETION:19"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:20
		# line in RSA: <event_source>, <fld44>, Modify Web ACL:certificate presented: <fld1> , <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Modify Web ACL:certificate presented: %{fld1} , %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:20"
				add_field => {
				"event_description" => "Modify a Web ACL "
					"[event][id]" => "COMPLETION:20"
					"[rsa][message][id1]" => "COMPLETION:20"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:21
		# line in RSA: <event_source>, <fld44>, Create custom certificate attribute:certificate presented: <fld5>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Create custom certificate attribute:certificate presented: %{fld5}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:21"
				add_field => {
				"event_description" => "Create custom attribute "
					"[event][id]" => "COMPLETION:21"
					"[rsa][message][id1]" => "COMPLETION:21"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:22
		# line in RSA: <event_source>, <fld44>, Apply profile changes:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Apply profile changes:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:22"
				add_field => {
				"event_description" => "Apply Certificate Profile changes "
					"[event][id]" => "COMPLETION:22"
					"[rsa][message][id1]" => "COMPLETION:22"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:23
		# line in RSA: <event_source>, <fld44>, Log Server stopped., <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Log Server stopped., %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:23"
				add_field => {
				"event_description" => "Log Server stopped. "
					"[event][id]" => "COMPLETION:23"
					"[rsa][message][id1]" => "COMPLETION:23"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:24
		# line in RSA: <event_source>, <fld44>, Final entry., <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Final entry., %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:24"
				add_field => {
				"event_description" => "Final entry. "
					"[event][id]" => "COMPLETION:24"
					"[rsa][message][id1]" => "COMPLETION:24"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:25
		# line in RSA: <event_source>, <fld44>, create new CA: CA nickname: <fld9>;  certDN: <dn>;  issuing CA md5: <fld5>;  key id: <fld10>;  certificate presented:<fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, create new CA: CA nickname: %{fld9};  certDN: %{dn};  issuing CA md5: %{fld5};  key id: %{fld10};  certificate presented:%{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:25"
				add_field => {
				"event_description" => "Create a CA "
					"[event][id]" => "COMPLETION:25"
					"[rsa][message][id1]" => "COMPLETION:25"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:26
		# line in RSA: <event_source>, <fld44>, generate private and public keypair: key id: <fld9>;  certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, generate private and public keypair: key id: %{fld9};  certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:26"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "COMPLETION:26"
					"[rsa][message][id1]" => "COMPLETION:26"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:27
		# line in RSA: <event_source>, <fld44>, Keypair generation: succeeded; key type: <encryption_type>; key size: <cert_keysize>; key id: <fld10>; certificate presented: <fld1>; Public Key (PEM) : <fld2>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Keypair generation: succeeded; key type: %{encryption_type}; key size: %{cert_keysize}; key id: %{fld10}; certificate presented: %{fld1}; Public Key (PEM) : %{fld2}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:27"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "COMPLETION:27"
					"[rsa][message][id1]" => "COMPLETION:27"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:28
		# line in RSA: <event_source>, <fld44>, Keypair generation; key type: <encryption_type>; key size: <cert_keysize>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Keypair generation; key type: %{encryption_type}; key size: %{cert_keysize}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:28"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "COMPLETION:28"
					"[rsa][message][id1]" => "COMPLETION:28"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:29
		# line in RSA: <event_source>, <fld44>, Keypair generation: succeeded; key type: <encryption_type>; key size: <cert_keysize>; key id: <fld10>; certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Keypair generation: succeeded; key type: %{encryption_type}; key size: %{cert_keysize}; key id: %{fld10}; certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:29"
				add_field => {
				"event_description" => "Key Generation "
					"[event][id]" => "COMPLETION:29"
					"[rsa][message][id1]" => "COMPLETION:29"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:30
		# line in RSA: <event_source>, <fld44>, Apply jurisdiction changes; certificate presented: <fld8>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Apply jurisdiction changes; certificate presented: %{fld8}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:30"
				add_field => {
				"event_description" => "Apply Jurisdiction changes "
					"[event][id]" => "COMPLETION:30"
					"[rsa][message][id1]" => "COMPLETION:30"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:31
		# line in RSA: <event_source>, <fld1>, Xudad DB incremental backup Event Completed: Succeed, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld1}, Xudad DB incremental backup Event Completed: Succeed, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:31"
				add_field => {
				"event_description" => "Xudad DB incremental backup Event "
					"[event][id]" => "COMPLETION:31"
					"[rsa][message][id1]" => "COMPLETION:31"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:32
		# line in RSA: <event_source>, <fld1>, Xudad DB full backup Event Completed: Succeed, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld1}, Xudad DB full backup Event Completed: Succeed, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:32"
				add_field => {
				"event_description" => "Xudad DB full backup Event "
					"[event][id]" => "COMPLETION:32"
					"[rsa][message][id1]" => "COMPLETION:32"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:33
		# line in RSA: <event_source>, <fld44>, Modify LDAP ACL failed:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Modify LDAP ACL failed:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:33"
				add_field => {
					"[event][id]" => "COMPLETION:33"
					"[rsa][message][id1]" => "COMPLETION:33"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:34
		# line in RSA: <event_source>, <fld44>, Key archive operation: succeeded; <space> public key md5: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Key archive operation: succeeded; %{space} public key md5: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:34"
				add_field => {
				"event_description" => "Key operation "
					"[event][id]" => "COMPLETION:34"
					"[rsa][message][id1]" => "COMPLETION:34"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:35
		# line in RSA: <event_source>, <fld44>, Central key generation: succeeded; key type: <encryption_type>; key size: <cert_keysize>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Central key generation: succeeded; key type: %{encryption_type}; key size: %{cert_keysize}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:35"
				add_field => {
				"event_description" => "Central key generation"
					"[event][id]" => "COMPLETION:35"
					"[rsa][message][id1]" => "COMPLETION:35"
					"[event][categoryid]" => "1613040100"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:36
		# line in RSA: <event_source>, <fld44>, Signing recovery operator certificate: <space> succeeded; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Signing recovery operator certificate: %{space} succeeded; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:36"
				add_field => {
					"[event][id]" => "COMPLETION:36"
					"[rsa][message][id1]" => "COMPLETION:36"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:37
		# line in RSA: <event_source>, <fld44>, Certificate revocation: <space> failed; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Certificate revocation: %{space} failed; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:37"
				add_field => {
					"[event][id]" => "COMPLETION:37"
					"[rsa][message][id1]" => "COMPLETION:37"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:38
		# line in RSA: <event_source>, <fld44>, revocation of certificate failed: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, revocation of certificate failed: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:38"
				add_field => {
					"[event][id]" => "COMPLETION:38"
					"[rsa][message][id1]" => "COMPLETION:38"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:39
		# line in RSA: <event_source>, <fld44>, Certificate renewal: <space> failed; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Certificate renewal: %{space} failed; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:39"
				add_field => {
					"[event][id]" => "COMPLETION:39"
					"[rsa][message][id1]" => "COMPLETION:39"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:40
		# line in RSA: <event_source>, <fld44>, Recovery operation: <space> failed; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operation: %{space} failed; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:40"
				add_field => {
					"[event][id]" => "COMPLETION:40"
					"[rsa][message][id1]" => "COMPLETION:40"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:41
		# line in RSA: <event_source>, <fld44>, Recovery operator participation: <space> failed; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operator participation: %{space} failed; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:41"
				add_field => {
					"[event][id]" => "COMPLETION:41"
					"[rsa][message][id1]" => "COMPLETION:41"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:42
		# line in RSA: <event_source>, <fld44>, Recovery operator participation: <space> succeeded; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operator participation: %{space} succeeded; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:42"
				add_field => {
					"[event][id]" => "COMPLETION:42"
					"[rsa][message][id1]" => "COMPLETION:42"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:43
		# line in RSA: <event_source>, <fld44>, Recovery operator participation: <space> initiated; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operator participation: %{space} initiated; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:43"
				add_field => {
					"[event][id]" => "COMPLETION:43"
					"[rsa][message][id1]" => "COMPLETION:43"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:44
		# line in RSA: <event_source>, <fld44>, Recovery operation: <space> aborted; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operation: %{space} aborted; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:44"
				add_field => {
					"[event][id]" => "COMPLETION:44"
					"[rsa][message][id1]" => "COMPLETION:44"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:45
		# line in RSA: <event_source>, <fld44>, Recovery operation: <space> abort initiated; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operation: %{space} abort initiated; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:45"
				add_field => {
					"[event][id]" => "COMPLETION:45"
					"[rsa][message][id1]" => "COMPLETION:45"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:46
		# line in RSA: <event_source>, <fld44>, Recovery operation: <space> initiated <space>; <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Recovery operation: %{space} initiated %{space}; %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:46"
				add_field => {
					"[event][id]" => "COMPLETION:46"
					"[rsa][message][id1]" => "COMPLETION:46"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:47
		# line in RSA: <event_source>, <fld44>, Client downloaded end-entity certificate:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Client downloaded end-entity certificate:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:47"
				add_field => {
					"[event][id]" => "COMPLETION:47"
					"[rsa][message][id1]" => "COMPLETION:47"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:48
		# line in RSA: <event_source>, <fld44>, download CA certificate to client: md5: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, download CA certificate to client: md5: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:48"
				add_field => {
					"[event][id]" => "COMPLETION:48"
					"[rsa][message][id1]" => "COMPLETION:48"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:49
		# line in RSA: <event_source>, <fld44>, Receive a certificate request:certificate presented: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Receive a certificate request:certificate presented: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:49"
				add_field => {
					"[event][id]" => "COMPLETION:49"
					"[rsa][message][id1]" => "COMPLETION:49"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:50
		# line in RSA: <event_source>, <fld44>, build complete Certificate Revocation List: md5: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, build complete Certificate Revocation List: md5: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:50"
				add_field => {
					"[event][id]" => "COMPLETION:50"
					"[rsa][message][id1]" => "COMPLETION:50"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:51
		# line in RSA: <event_source>, <fld44>, sign end-entity certificate request: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, sign end-entity certificate request: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:51"
				add_field => {
					"[event][id]" => "COMPLETION:51"
					"[rsa][message][id1]" => "COMPLETION:51"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:52
		# line in RSA: <event_source>, <fld44>, Complete CRL Generation: succeeded; CA nickname: <fld9> md5: <fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Complete CRL Generation: succeeded; CA nickname: %{fld9} md5: %{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:52"
				add_field => {
					"[event][id]" => "COMPLETION:52"
					"[rsa][message][id1]" => "COMPLETION:52"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:53
		# line in RSA: <event_source>, <fld44>, Certificate signing: succeeded; certDN: <dn>; issuing CA md5: <fld5>; certificate presented:<fld1>, <fld22>, <fld23>, <fld24>, <hostip>, <fld25>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Certificate signing: succeeded; certDN: %{dn}; issuing CA md5: %{fld5}; certificate presented:%{fld1}, %{fld22}, %{fld23}, %{fld24}, %{hostip}, %{fld25}" }
				id => "message-COMPLETION:53"
				add_field => {
					"[event][id]" => "COMPLETION:53"
					"[rsa][message][id1]" => "COMPLETION:53"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld22} %{fld23}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy HH:m:s" ] }
			}
		}
		# MESSAGE COMPLETION:54
		# line in RSA: <event_source>, <fld44>, Certificate signing: succeeded; certDN: <dn>; issuing CA md5: <fld5>; certificate presented:<fld1> Certificate (PEM) : <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}, %{fld44}, Certificate signing: succeeded; certDN: %{dn}; issuing CA md5: %{fld5}; certificate presented:%{fld1} Certificate (PEM) : %{info}" }
				id => "message-COMPLETION:54"
				add_field => {
					"[event][id]" => "COMPLETION:54"
					"[rsa][message][id1]" => "COMPLETION:54"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_rsacmmsg.json"
#			template_name => "rsacm_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
